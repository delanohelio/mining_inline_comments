{"pr_number": 3509, "pr_title": "Upgrade some dependencies", "pr_createdAt": "2020-05-01T14:10:39Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/3509", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NzA1OA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3509#discussion_r422477058", "bodyText": "Nothing to do with dependency updates, but what's the purpose of this function? context.getString(R.string.finish) is already explicative, readable and not long, so why encapsulate it in a function?", "author": "Stypox", "createdAt": "2020-05-09T09:53:31Z", "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java", "diffHunk": "@@ -26,8 +28,8 @@ public LicenseFragmentHelper(@Nullable final Activity activity) {\n         weakReference = new WeakReference<>(activity);\n     }\n \n-    private static String getFinishString(final Activity activity) {\n-        return activity.getApplicationContext().getResources().getString(R.string.finish);\n+    private static String getFinishString(final Context context) {\n+        return context.getString(R.string.finish);", "originalCommit": "3e614c67ae8bf3fa02801b969bce92914204e556", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3OTI4NA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3509#discussion_r422479284", "bodyText": "I was wondering that as well\u2026 I'll fix it later today", "author": "wb9688", "createdAt": "2020-05-09T10:17:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3NzA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "7231150115da9245c95829c9082423f58b281539", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java b/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\nindex 517e25cf9..94a1532f5 100644\n--- a/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\n+++ b/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\n\n@@ -28,8 +26,8 @@ public class LicenseFragmentHelper extends AsyncTask<Object, Void, Integer> {\n         weakReference = new WeakReference<>(activity);\n     }\n \n-    private static String getFinishString(final Context context) {\n-        return context.getString(R.string.finish);\n+    private static String getFinishString(final Activity activity) {\n+        return activity.getApplicationContext().getResources().getString(R.string.finish);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNTk1OA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3509#discussion_r426415958", "bodyText": "This is also unrelated to dependency updates, but this block of code should be replaced by @NotNull parameters, or just removed alltoghether, because a NullPointerException would be thrown anyway crashing the app, so it makes no sense to check for nullity and then do not do anything different.", "author": "Stypox", "createdAt": "2020-05-18T07:21:37Z", "path": "app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java", "diffHunk": "@@ -26,28 +28,24 @@ public LicenseFragmentHelper(@Nullable final Activity activity) {\n         weakReference = new WeakReference<>(activity);\n     }\n \n-    private static String getFinishString(final Activity activity) {\n-        return activity.getApplicationContext().getResources().getString(R.string.finish);\n-    }\n-\n     /**\n      * @param context the context to use\n      * @param license the license\n      * @return String which contains a HTML formatted license page\n      * styled according to the context's theme\n      */\n-    public static String getFormattedLicense(final Context context, final License license) {\n+    private static String getFormattedLicense(final Context context, final License license) {\n         if (context == null) {\n-            throw new NullPointerException(\"context is null\");\n+            throw new IllegalArgumentException(\"context is null\");\n         }\n         if (license == null) {\n-            throw new NullPointerException(\"license is null\");\n+            throw new IllegalArgumentException(\"license is null\");\n         }", "originalCommit": "f553aea427bc02e5fda7d79352f72813485c788f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDY3OA==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3509#discussion_r427320678", "bodyText": "That's why I made it an IllegalArgumentException, though making it @NotNull is probably better indeed", "author": "wb9688", "createdAt": "2020-05-19T13:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQxNTk1OA=="}], "type": "inlineReview", "revised_code": {"commit": "7231150115da9245c95829c9082423f58b281539", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java b/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\nindex 4b20813d3..94a1532f5 100644\n--- a/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\n+++ b/app/src/main/java/org/schabi/newpipe/about/LicenseFragmentHelper.java\n\n@@ -28,24 +26,28 @@ public class LicenseFragmentHelper extends AsyncTask<Object, Void, Integer> {\n         weakReference = new WeakReference<>(activity);\n     }\n \n+    private static String getFinishString(final Activity activity) {\n+        return activity.getApplicationContext().getResources().getString(R.string.finish);\n+    }\n+\n     /**\n      * @param context the context to use\n      * @param license the license\n      * @return String which contains a HTML formatted license page\n      * styled according to the context's theme\n      */\n-    private static String getFormattedLicense(final Context context, final License license) {\n+    public static String getFormattedLicense(final Context context, final License license) {\n         if (context == null) {\n-            throw new IllegalArgumentException(\"context is null\");\n+            throw new NullPointerException(\"context is null\");\n         }\n         if (license == null) {\n-            throw new IllegalArgumentException(\"license is null\");\n+            throw new NullPointerException(\"license is null\");\n         }\n \n-        final StringBuilder licenseContent = new StringBuilder();\n-        final String webViewData;\n+        StringBuilder licenseContent = new StringBuilder();\n+        String webViewData;\n         try {\n-            final BufferedReader in = new BufferedReader(new InputStreamReader(\n+            BufferedReader in = new BufferedReader(new InputStreamReader(\n                     context.getAssets().open(license.getFilename()), StandardCharsets.UTF_8));\n             String str;\n             while ((str = in.readLine()) != null) {\n"}}, {"oid": "7231150115da9245c95829c9082423f58b281539", "url": "https://github.com/TeamNewPipe/NewPipe/commit/7231150115da9245c95829c9082423f58b281539", "message": "Upgrade some dependencies", "committedDate": "2020-05-22T13:40:28Z", "type": "commit"}, {"oid": "0cae58ce8ecd06d549d738da513bf375582bf48a", "url": "https://github.com/TeamNewPipe/NewPipe/commit/0cae58ce8ecd06d549d738da513bf375582bf48a", "message": "Upgrade LeakCanary", "committedDate": "2020-05-25T09:03:07Z", "type": "commit"}, {"oid": "7b81e985816c5f11875cada3fe39f1bd7fd8954d", "url": "https://github.com/TeamNewPipe/NewPipe/commit/7b81e985816c5f11875cada3fe39f1bd7fd8954d", "message": "Upgrade ACRA", "committedDate": "2020-05-25T09:03:07Z", "type": "commit"}, {"oid": "e16a2d7cb654040fdb06ba2e04fa274559250522", "url": "https://github.com/TeamNewPipe/NewPipe/commit/e16a2d7cb654040fdb06ba2e04fa274559250522", "message": "Upgrade jsoup", "committedDate": "2020-05-28T09:39:17Z", "type": "commit"}, {"oid": "a9697a61ada29017ffecc78acc2fb0b33cf9ac71", "url": "https://github.com/TeamNewPipe/NewPipe/commit/a9697a61ada29017ffecc78acc2fb0b33cf9ac71", "message": "Fix viewing licenses", "committedDate": "2020-05-28T09:39:17Z", "type": "commit"}, {"oid": "75b377aab3f3027f7a3b1c83b4c3f74969f2af9c", "url": "https://github.com/TeamNewPipe/NewPipe/commit/75b377aab3f3027f7a3b1c83b4c3f74969f2af9c", "message": "Updatethe extractor version", "committedDate": "2020-05-28T19:56:54Z", "type": "commit"}]}