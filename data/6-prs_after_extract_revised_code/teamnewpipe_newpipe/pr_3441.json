{"pr_number": 3441, "pr_title": "Apply extractor changes: Add Page class and remove getNextPageUrl()", "pr_createdAt": "2020-04-15T14:06:11Z", "pr_url": "https://github.com/TeamNewPipe/NewPipe/pull/3441", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwODAzNw==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3441#discussion_r423208037", "bodyText": "same here", "author": "B0pol", "createdAt": "2020-05-11T17:39:40Z", "path": "app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java", "diffHunk": "@@ -21,24 +22,26 @@\n \n     final int serviceId;\n     final String baseUrl;\n-    String nextUrl;\n+    Page nextPage;\n \n     private transient Disposable fetchReactor;\n \n     AbstractInfoPlayQueue(final U item) {\n         this(item.getServiceId(), item.getUrl(), null, Collections.emptyList(), 0);\n     }\n \n-    AbstractInfoPlayQueue(final int serviceId, final String url, final String nextPageUrl,\n+    AbstractInfoPlayQueue(final int serviceId, final String url, final Page nextPage,\n                           final List<StreamInfoItem> streams, final int index) {\n         super(index, extractListItems(streams));\n \n         this.baseUrl = url;\n-        this.nextUrl = nextPageUrl;\n+        this.nextPage = nextPage;\n         this.serviceId = serviceId;\n \n         this.isInitial = streams.isEmpty();\n-        this.isComplete = !isInitial && (nextPageUrl == null || nextPageUrl.isEmpty());\n+        this.isComplete = !isInitial && (nextPage == null\n+                || ((nextPage.getUrl() == null || nextPage.getUrl().isEmpty())", "originalCommit": "8b3d2c280115d8de3e9cc969f4730d377c907e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd57e246b87359297deb338d9896605e00201908", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java b/app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java\nindex 0b2df1a20..cde376f4f 100644\n--- a/app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java\n+++ b/app/src/main/java/org/schabi/newpipe/player/playqueue/AbstractInfoPlayQueue.java\n\n@@ -39,9 +39,7 @@ abstract class AbstractInfoPlayQueue<T extends ListInfo, U extends InfoItem> ext\n         this.serviceId = serviceId;\n \n         this.isInitial = streams.isEmpty();\n-        this.isComplete = !isInitial && (nextPage == null\n-                || ((nextPage.getUrl() == null || nextPage.getUrl().isEmpty())\n-                && (nextPage.getIds() == null || nextPage.getIds().isEmpty())));\n+        this.isComplete = !isInitial && !Page.isValid(nextPage);\n     }\n \n     protected abstract String getTag();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwODEwMg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3441#discussion_r423208102", "bodyText": "You can use Utils.isNullOrEmpty() from NewPipe Extractor as it's now merged.\nYou'll also see TextUtils.isEmpty() in NewPipe code, it's a method from android.text package, but I don't like the name because it doesn't tell about null check.", "author": "B0pol", "createdAt": "2020-05-11T17:39:46Z", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java", "diffHunk": "@@ -182,15 +183,17 @@ private void allowDownwardFocusScroll() {\n     @Override\n     public void handleNextItems(final ListExtractor.InfoItemsPage result) {\n         super.handleNextItems(result);\n-        currentNextPageUrl = result.getNextPageUrl();\n+        currentNextPage = result.getNextPage();\n         infoListAdapter.addInfoItemList(result.getItems());\n \n         showListFooter(hasMoreItems());\n     }\n \n     @Override\n     protected boolean hasMoreItems() {\n-        return !TextUtils.isEmpty(currentNextPageUrl);\n+        return currentNextPage != null\n+                && ((currentNextPage.getUrl() != null && !currentNextPage.getUrl().isEmpty())\n+                || (currentNextPage.getIds() != null && !currentNextPage.getIds().isEmpty()));", "originalCommit": "8b3d2c280115d8de3e9cc969f4730d377c907e2e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd57e246b87359297deb338d9896605e00201908", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java b/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java\nindex 6389645c7..82b1d18ed 100644\n--- a/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java\n+++ b/app/src/main/java/org/schabi/newpipe/fragments/list/BaseListInfoFragment.java\n\n@@ -191,9 +191,7 @@ public abstract class BaseListInfoFragment<I extends ListInfo>\n \n     @Override\n     protected boolean hasMoreItems() {\n-        return currentNextPage != null\n-                && ((currentNextPage.getUrl() != null && !currentNextPage.getUrl().isEmpty())\n-                || (currentNextPage.getIds() != null && !currentNextPage.getIds().isEmpty()));\n+        return Page.isValid(currentNextPage);\n     }\n \n     /*//////////////////////////////////////////////////////////////////////////\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMDAxMg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3441#discussion_r423210012", "bodyText": "same here", "author": "B0pol", "createdAt": "2020-05-11T17:43:04Z", "path": "app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java", "diffHunk": "@@ -845,7 +843,8 @@ public void startLoading(final boolean forceLoad) {\n \n     @Override\n     protected void loadMoreItems() {\n-        if (nextPageUrl == null || nextPageUrl.isEmpty()) {\n+        if (nextPage == null || ((nextPage.getUrl() == null || nextPage.getUrl().isEmpty())", "originalCommit": "8b3d2c280115d8de3e9cc969f4730d377c907e2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYwNjY0Mg==", "url": "https://github.com/TeamNewPipe/NewPipe/pull/3441#discussion_r439606642", "bodyText": "What about creating a static method in the Page class to replace this duplicate piece of code?", "author": "Stypox", "createdAt": "2020-06-12T19:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMDAxMg=="}], "type": "inlineReview", "revised_code": {"commit": "dd57e246b87359297deb338d9896605e00201908", "chunk": "diff --git a/app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java b/app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java\nindex 8c2184f81..55f286b9d 100644\n--- a/app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java\n+++ b/app/src/main/java/org/schabi/newpipe/fragments/list/search/SearchFragment.java\n\n@@ -843,8 +843,7 @@ public class SearchFragment extends BaseListFragment<SearchInfo, ListExtractor.I\n \n     @Override\n     protected void loadMoreItems() {\n-        if (nextPage == null || ((nextPage.getUrl() == null || nextPage.getUrl().isEmpty())\n-                && (nextPage.getIds() == null || nextPage.getIds().isEmpty()))) {\n+        if (!Page.isValid(nextPage)) {\n             return;\n         }\n         isLoading.set(true);\n"}}, {"oid": "dd57e246b87359297deb338d9896605e00201908", "url": "https://github.com/TeamNewPipe/NewPipe/commit/dd57e246b87359297deb338d9896605e00201908", "message": "Use getNextPage() instead of getNextPageUrl()", "committedDate": "2020-07-07T19:03:24Z", "type": "commit"}, {"oid": "e183fc6118826716def8e09d65721acf11fe89ac", "url": "https://github.com/TeamNewPipe/NewPipe/commit/e183fc6118826716def8e09d65721acf11fe89ac", "message": "Bump NPE version", "committedDate": "2020-07-07T19:04:08Z", "type": "commit"}]}