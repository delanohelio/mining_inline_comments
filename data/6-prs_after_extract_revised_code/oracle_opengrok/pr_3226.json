{"pr_number": 3226, "pr_title": "use tags for metrics", "pr_createdAt": "2020-09-16T18:58:51Z", "pr_url": "https://github.com/oracle/opengrok/pull/3226", "timeline": [{"oid": "6b060672c1f89c2c67a370a96aa7578fe241454c", "url": "https://github.com/oracle/opengrok/commit/6b060672c1f89c2c67a370a96aa7578fe241454c", "message": "fix typo", "committedDate": "2020-09-16T18:52:55Z", "type": "commit"}, {"oid": "9c7dca493deb76d69a223792bf59f5fb00314d00", "url": "https://github.com/oracle/opengrok/commit/9c7dca493deb76d69a223792bf59f5fb00314d00", "message": "add LDAP lookup latency timer", "committedDate": "2020-09-16T20:07:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4Njg1NQ==", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489986855", "bodyText": "I don't like this since it has a package private access instead of private. Furthermore, the variable can be discarded right after the initialization.\nWhat about using register(Metrics.getRegistry()) or leveraging constructor/init block?", "author": "ahornace", "createdAt": "2020-09-17T05:53:11Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java", "diffHunk": "@@ -55,14 +56,29 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationFramework.class);\n \n-    private final Counter authStackReloadCounter = Metrics.getRegistry().counter(\"authorization_stack_reload\");\n-    private final Counter authCacheHits = Metrics.getRegistry().counter(\"authorization_cache_hits\");\n-    private final Counter authCacheMisses = Metrics.getRegistry().counter(\"authorization_cache_misses\");\n-    private final Counter authSessionsInvalidated = Metrics.getRegistry().counter(\"authorization_sessions_invalidated\");\n-\n-    private final Timer authTimer = Metrics.getRegistry().timer(\"authorization\");\n-    private final Timer authPositiveTimer = Metrics.getRegistry().timer(\"authorization_positive\");\n-    private final Timer authNegativeTimer = Metrics.getRegistry().timer(\"authorization_negative\");\n+    MeterRegistry registry = Metrics.getRegistry();", "originalCommit": "e33cc6d688a4fb54768da4447d3814c48d573ee6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA2MDE3Nw==", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r490060177", "bodyText": "fair point, fixed.", "author": "vladak", "createdAt": "2020-09-17T08:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4Njg1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f2c3d1dd7a802b854b30f4b849def5844ce636b6", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java\nindex f8c1732dae..ee382b3695 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/authorization/AuthorizationFramework.java\n\n@@ -56,29 +55,27 @@ public final class AuthorizationFramework extends PluginFramework<IAuthorization\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AuthorizationFramework.class);\n \n-    MeterRegistry registry = Metrics.getRegistry();\n-\n     private final Counter authStackReloadCounter = Metrics.getRegistry().\n             counter(\"authorization.stack.reload\");\n     private final Counter authCacheHits = Counter.builder(\"authorization.cache\").\n             description(\"authorization cache hits\").\n             tag(\"what\", \"hits\").\n-            register(registry);\n+            register(Metrics.getRegistry());\n     private final Counter authCacheMisses = Counter.builder(\"authorization.cache\").\n             description(\"authorization cache misses\").\n             tag(\"what\", \"misses\").\n-            register(registry);\n+            register(Metrics.getRegistry());\n     private final Counter authSessionsInvalidated = Metrics.getRegistry().\n             counter(\"authorization.sessions.invalidated\");\n \n     private final Timer authTimerPositive = Timer.builder(\"authorization.latency\").\n             description(\"authorization latency\").\n             tag(\"outcome\", \"positive\").\n-            register(registry);\n+            register(Metrics.getRegistry());\n     private final Timer authTimerNegative = Timer.builder(\"authorization.latency\").\n             description(\"authorization latency\").\n             tag(\"outcome\", \"negative\").\n-            register(registry);\n+            register(Metrics.getRegistry());\n \n     /**\n      * Stack of available plugins/stacks in the order of the execution.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4OTQ4MQ==", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489989481", "bodyText": "Could you please explain this to me? I'm probably missing something since I don't know how the plugins in OpenGrok work exactly. I assume that you would like to allow plugins to use the Metrics class. However, from my understanding the class is uniquely identified by the name and the classloader that loaded it. Therefore, if the Metrics class would be used by the plugin, then it might be a completely different class and the metrics won't be seen/published by the web module.", "author": "ahornace", "createdAt": "2020-09-17T06:00:47Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java", "diffHunk": "@@ -56,7 +56,8 @@\n             \"org.opengrok.indexer.authorization.plugins.*\",\n             \"org.opengrok.indexer.authorization.AuthorizationException\",\n             \"org.opengrok.indexer.util.*\",\n-            \"org.opengrok.indexer.logger.*\"\n+            \"org.opengrok.indexer.logger.*\",\n+            \"org.opengrok.indexer.Metrics\"", "originalCommit": "e33cc6d688a4fb54768da4447d3814c48d573ee6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk5MTkyNQ==", "url": "https://github.com/oracle/opengrok/pull/3226#discussion_r489991925", "bodyText": "Oh, it seems that it is delegating class loading to the tomcat's class loader for some specific cases. Please ignore.", "author": "ahornace", "createdAt": "2020-09-17T06:07:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4OTQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f2c3d1dd7a802b854b30f4b849def5844ce636b6", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java\nindex c412984aa3..63455ffdfd 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/framework/PluginClassLoader.java\n\n@@ -56,8 +56,7 @@ public class PluginClassLoader extends ClassLoader {\n             \"org.opengrok.indexer.authorization.plugins.*\",\n             \"org.opengrok.indexer.authorization.AuthorizationException\",\n             \"org.opengrok.indexer.util.*\",\n-            \"org.opengrok.indexer.logger.*\",\n-            \"org.opengrok.indexer.Metrics\"\n+            \"org.opengrok.indexer.logger.*\"\n     };\n \n     private static final String[] PACKAGE_BLACKLIST = new String[]{\n"}}, {"oid": "f2c3d1dd7a802b854b30f4b849def5844ce636b6", "url": "https://github.com/oracle/opengrok/commit/f2c3d1dd7a802b854b30f4b849def5844ce636b6", "message": "use tags for metrics and use dotted naming", "committedDate": "2020-09-17T09:24:23Z", "type": "commit"}, {"oid": "b74a0291c083c93df6bb97610a708ec69cf7c631", "url": "https://github.com/oracle/opengrok/commit/b74a0291c083c93df6bb97610a708ec69cf7c631", "message": "add LDAP lookup latency timer", "committedDate": "2020-09-17T09:24:23Z", "type": "commit"}, {"oid": "e0dc744628abb1ae7031662985553ef3b2081915", "url": "https://github.com/oracle/opengrok/commit/e0dc744628abb1ae7031662985553ef3b2081915", "message": "fix comment", "committedDate": "2020-09-17T09:24:23Z", "type": "commit"}, {"oid": "e0dc744628abb1ae7031662985553ef3b2081915", "url": "https://github.com/oracle/opengrok/commit/e0dc744628abb1ae7031662985553ef3b2081915", "message": "fix comment", "committedDate": "2020-09-17T09:24:23Z", "type": "forcePushed"}]}