{"pr_number": 3095, "pr_title": "Fixes #761,  #3093 (svn history on renamed files, svn date parsing)", "pr_createdAt": "2020-03-26T14:27:15Z", "pr_url": "https://github.com/oracle/opengrok/pull/3095", "timeline": [{"oid": "b3fc749f9e0f783b878a61d0e03b900a1d4a685f", "url": "https://github.com/oracle/opengrok/commit/b3fc749f9e0f783b878a61d0e03b900a1d4a685f", "message": "Fixes #761,  #3093 (svn history on renamed files, svn date parsed incorrectly)", "committedDate": "2020-03-26T14:18:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MjU2Mg==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r398662562", "bodyText": "Perhaps add e.g. static final String SVN_MILLIS_DATE_EG with the known-good format and then use SVN_MILLIS_DATE_EG.length() to avoid the unnamed literals here and the next line?\n(This reminds of a TODO to refactor out of the old DateFormat for thread safety \u2014 and you've now made apparent also for microseconds handling.)", "author": "idodeclare", "createdAt": "2020-03-26T15:26:48Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java", "diffHunk": "@@ -89,7 +102,12 @@ public void endElement(String uri, String localName, String qname) throws SAXExc\n                 entry.setAuthor(s);\n             } else if (\"date\".equals(qname)) {\n                 try {\n-                    entry.setDate(repository.parse(s));\n+                    // need to strip microseconds off - assume final character is Z otherwise invalid anyway.\n+                    String dateString = s;\n+                    if (s.length() > 24) {", "originalCommit": "b3fc749f9e0f783b878a61d0e03b900a1d4a685f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3Nzk0NQ==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r398677945", "bodyText": "Good idea.\nAlso thought it would be good to get rid of java.util.Date generally, but that seemed quite invasive for a first contribution!", "author": "harrisric", "createdAt": "2020-03-26T15:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MjU2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4NDQ4MQ==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r398684481", "bodyText": "I assume you mean this comment: \n  \n    \n      opengrok/opengrok-indexer/src/main/java/org/opengrok/indexer/history/Repository.java\n    \n    \n         Line 620\n      in\n      52fc293\n    \n    \n    \n    \n\n        \n          \n           // NOTE: SimpleDateFormat is not thread-safe, lock must be held when used \n        \n    \n  \n\n\nHaving TODO's just in the source code is not good, filed  #3096 to track this.", "author": "vladak", "createdAt": "2020-03-26T15:53:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MjU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7fb8e8bef0f464c4ca2aedb1d2558c6f3bc1d4af", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\nindex 69a4044575..8742cecac5 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\n@@ -104,8 +110,8 @@ class SubversionHistoryParser implements Executor.StreamHandler {\n                 try {\n                     // need to strip microseconds off - assume final character is Z otherwise invalid anyway.\n                     String dateString = s;\n-                    if (s.length() > 24) {\n-                      dateString = dateString.substring(0, 23) + dateString.charAt(dateString.length() - 1);\n+                    if (s.length() > SVN_MILLIS_DATE_LENGTH) {\n+                      dateString = dateString.substring(0, SVN_MILLIS_DATE_LENGTH - 1) + dateString.charAt(dateString.length() - 1);\n                     }\n                     entry.setDate(repository.parse(dateString));\n                 } catch (ParseException ex) {\n"}}, {"oid": "0f7dc5b74838591f4162366ae4c0fbf95bac9f62", "url": "https://github.com/oracle/opengrok/commit/0f7dc5b74838591f4162366ae4c0fbf95bac9f62", "message": "Update SubversionHistoryParser.java", "committedDate": "2020-03-26T15:31:24Z", "type": "commit"}, {"oid": "8cd307b5d1f1ef337c42d6954a3576facd347794", "url": "https://github.com/oracle/opengrok/commit/8cd307b5d1f1ef337c42d6954a3576facd347794", "message": "Update FileHistoryCacheTest.java", "committedDate": "2020-03-26T15:33:26Z", "type": "commit"}, {"oid": "c0896ca0d2647481fb383d96cf1ea2c687b981ab", "url": "https://github.com/oracle/opengrok/commit/c0896ca0d2647481fb383d96cf1ea2c687b981ab", "message": "Update SubversionHistoryParserTest.java", "committedDate": "2020-03-26T15:33:50Z", "type": "commit"}, {"oid": "043d8eef45eda881767d26c2ef04d638760325b9", "url": "https://github.com/oracle/opengrok/commit/043d8eef45eda881767d26c2ef04d638760325b9", "message": "Update SubversionRepositoryTest.java", "committedDate": "2020-03-26T15:34:55Z", "type": "commit"}, {"oid": "7fb8e8bef0f464c4ca2aedb1d2558c6f3bc1d4af", "url": "https://github.com/oracle/opengrok/commit/7fb8e8bef0f464c4ca2aedb1d2558c6f3bc1d4af", "message": "Refactor to use a example date to generate the length constant for date formatting", "committedDate": "2020-03-26T15:44:22Z", "type": "commit"}, {"oid": "5a67b0cb57247d0ac4d319a96dfb97c49dd9b8f0", "url": "https://github.com/oracle/opengrok/commit/5a67b0cb57247d0ac4d319a96dfb97c49dd9b8f0", "message": "Use the same trick as other repo typos so that the .svn files are correctly included in the test data and zip.", "committedDate": "2020-03-26T16:58:12Z", "type": "commit"}, {"oid": "66ade1b7a2483eaa42d8912d317528909310b7c2", "url": "https://github.com/oracle/opengrok/commit/66ade1b7a2483eaa42d8912d317528909310b7c2", "message": "Remember to delete the .svn folder too.", "committedDate": "2020-03-26T17:22:50Z", "type": "commit"}, {"oid": "4aefbf416de6fb9c67fc94095d61a3f6c4ee5ee0", "url": "https://github.com/oracle/opengrok/commit/4aefbf416de6fb9c67fc94095d61a3f6c4ee5ee0", "message": "Change to load up a new subversion repository for tests based on a dumpfile.", "committedDate": "2020-03-27T12:27:04Z", "type": "commit"}, {"oid": "4718137fcfb55a1508c9f385bc6482bbbd3c4ca0", "url": "https://github.com/oracle/opengrok/commit/4718137fcfb55a1508c9f385bc6482bbbd3c4ca0", "message": "Correct some EOL character issues in the dump file so it works on both windows and linux.", "committedDate": "2020-03-27T15:46:35Z", "type": "commit"}, {"oid": "5c63f79f34f34538db1f95be1b95da76e85d2670", "url": "https://github.com/oracle/opengrok/commit/5c63f79f34f34538db1f95be1b95da76e85d2670", "message": "Attempt to fix dump file by importing and re-dumping on linux", "committedDate": "2020-03-27T16:34:03Z", "type": "commit"}, {"oid": "18c101d96b9a63f7acf42651964931b43fd9991b", "url": "https://github.com/oracle/opengrok/commit/18c101d96b9a63f7acf42651964931b43fd9991b", "message": "temporarily remove dump file to try and clear line-ending issues.", "committedDate": "2020-03-28T07:39:40Z", "type": "commit"}, {"oid": "8e750812db10e2dd5a9ab8f32b7f830fa519a540", "url": "https://github.com/oracle/opengrok/commit/8e750812db10e2dd5a9ab8f32b7f830fa519a540", "message": "New svn dump and amended test results to match", "committedDate": "2020-03-28T07:40:37Z", "type": "commit"}, {"oid": "9e2229f6ad85b3e0a9424d200a5c61fd2394cffa", "url": "https://github.com/oracle/opengrok/commit/9e2229f6ad85b3e0a9424d200a5c61fd2394cffa", "message": "Amend test to reflect new repository added.\nChange attributes to keep svn dump file working on windows and linux.", "committedDate": "2020-03-29T09:28:11Z", "type": "commit"}, {"oid": "515b430c634104d393f60b2e413c238f93a093f6", "url": "https://github.com/oracle/opengrok/commit/515b430c634104d393f60b2e413c238f93a093f6", "message": "Correction to gitattributes", "committedDate": "2020-03-29T09:45:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNTEyNw==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r399815127", "bodyText": "This and the next line seem accidentally modified", "author": "idodeclare", "createdAt": "2020-03-29T15:43:46Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java", "diffHunk": "@@ -99,11 +123,14 @@ public void endElement(String uri, String localName, String qname) throws SAXExc\n                  * top-level directory itself, hence the check for inequality.\n                  */\n                 if (s.startsWith(prefix) && !s.equals(prefix)) {\n-                    File file = new File(home, s.substring(prefix.length()));\n-                    String path = file.getAbsolutePath().substring(length);\n+                  File file = new File(home, s.substring(prefix.length()));", "originalCommit": "515b430c634104d393f60b2e413c238f93a093f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\nindex 8742cecac5..697d365b4b 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\n@@ -123,13 +124,13 @@ class SubversionHistoryParser implements Executor.StreamHandler {\n                  * top-level directory itself, hence the check for inequality.\n                  */\n                 if (s.startsWith(prefix) && !s.equals(prefix)) {\n-                  File file = new File(home, s.substring(prefix.length()));\n-                  String path = file.getAbsolutePath().substring(length);\n+                    File file = new File(home, s.substring(prefix.length()));\n+                    String path = file.getAbsolutePath().substring(length);\n                     // The same file names may be repeated in many commits,\n                     // so intern them to reduce the memory footprint.\n                     entry.addFile(path.intern());\n                     if (isRenamed) {\n-                      renamedFiles.add(file.getAbsolutePath().substring(home.length() + 1));\n+                        renamedFiles.add(file.getAbsolutePath().substring(home.length() + 1));\n                     }\n                 } else {\n                     LOGGER.log(Level.FINER, \"Skipping file outside repository: \" + s);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNTg2Ng==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r399815866", "bodyText": "Please check formatting. Per @ahornace, \"LineLength - standard is now 120 chars per line, but I kept it relaxed [for auto-checkstyle]\"", "author": "idodeclare", "createdAt": "2020-03-29T15:49:29Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java", "diffHunk": "@@ -89,7 +108,12 @@ public void endElement(String uri, String localName, String qname) throws SAXExc\n                 entry.setAuthor(s);\n             } else if (\"date\".equals(qname)) {\n                 try {\n-                    entry.setDate(repository.parse(s));\n+                    // need to strip microseconds off - assume final character is Z otherwise invalid anyway.\n+                    String dateString = s;\n+                    if (s.length() > SVN_MILLIS_DATE_LENGTH) {\n+                      dateString = dateString.substring(0, SVN_MILLIS_DATE_LENGTH - 1) + dateString.charAt(dateString.length() - 1);", "originalCommit": "515b430c634104d393f60b2e413c238f93a093f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\nindex 8742cecac5..697d365b4b 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\n@@ -111,7 +111,8 @@ class SubversionHistoryParser implements Executor.StreamHandler {\n                     // need to strip microseconds off - assume final character is Z otherwise invalid anyway.\n                     String dateString = s;\n                     if (s.length() > SVN_MILLIS_DATE_LENGTH) {\n-                      dateString = dateString.substring(0, SVN_MILLIS_DATE_LENGTH - 1) + dateString.charAt(dateString.length() - 1);\n+                      dateString = dateString.substring(0, SVN_MILLIS_DATE_LENGTH - 1) +\n+                          dateString.charAt(dateString.length() - 1);\n                     }\n                     entry.setDate(repository.parse(dateString));\n                 } catch (ParseException ex) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNjA0Nw==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r399816047", "bodyText": "I wonder if this might be clearer if you just used log data instead of deriving from a File that we just created from the same log data?\ns.substring(prefix.length() + 1) (similar to line 126) since s I think would start with a / for Subversion?", "author": "idodeclare", "createdAt": "2020-03-29T15:50:46Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java", "diffHunk": "@@ -99,11 +123,14 @@ public void endElement(String uri, String localName, String qname) throws SAXExc\n                  * top-level directory itself, hence the check for inequality.\n                  */\n                 if (s.startsWith(prefix) && !s.equals(prefix)) {\n-                    File file = new File(home, s.substring(prefix.length()));\n-                    String path = file.getAbsolutePath().substring(length);\n+                  File file = new File(home, s.substring(prefix.length()));\n+                  String path = file.getAbsolutePath().substring(length);\n                     // The same file names may be repeated in many commits,\n                     // so intern them to reduce the memory footprint.\n                     entry.addFile(path.intern());\n+                    if (isRenamed) {\n+                      renamedFiles.add(file.getAbsolutePath().substring(home.length() + 1));", "originalCommit": "515b430c634104d393f60b2e413c238f93a093f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzMjY4NA==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r399832684", "bodyText": "Thanks, but unfortunately not as simple as that - the use of File also means that we switch convention from forward-slash to back-slash as well.\nI tried to write a unit test which showed this but that seems to show up the limitations of the SubversionHistoryParserTest using a fixed 'home' of '/' (which on windows might e.g. become 'C:' and therefore even with the current code appears to leave the leading-slash in place).\nI've made the other formatting corrections suggested (hopefully caught them all - the 2-space indentation is the standard in my IDE at work).", "author": "harrisric", "createdAt": "2020-03-29T18:08:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNjA0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNTE2Mg==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r399835162", "bodyText": "Oh I see. Thank you for explaining. I forget the Windows considerations.", "author": "idodeclare", "createdAt": "2020-03-29T18:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgxNjA0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\nindex 8742cecac5..697d365b4b 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\n@@ -123,13 +124,13 @@ class SubversionHistoryParser implements Executor.StreamHandler {\n                  * top-level directory itself, hence the check for inequality.\n                  */\n                 if (s.startsWith(prefix) && !s.equals(prefix)) {\n-                  File file = new File(home, s.substring(prefix.length()));\n-                  String path = file.getAbsolutePath().substring(length);\n+                    File file = new File(home, s.substring(prefix.length()));\n+                    String path = file.getAbsolutePath().substring(length);\n                     // The same file names may be repeated in many commits,\n                     // so intern them to reduce the memory footprint.\n                     entry.addFile(path.intern());\n                     if (isRenamed) {\n-                      renamedFiles.add(file.getAbsolutePath().substring(home.length() + 1));\n+                        renamedFiles.add(file.getAbsolutePath().substring(home.length() + 1));\n                     }\n                 } else {\n                     LOGGER.log(Level.FINER, \"Skipping file outside repository: \" + s);\n"}}, {"oid": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "url": "https://github.com/oracle/opengrok/commit/27102ee5b841234c70abafd7b44ea60ae0f81f6e", "message": "Corrections to formatting and line length.", "committedDate": "2020-03-29T18:04:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5OTQ0Mg==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r402899442", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Example of the longest date format that we should except - SimpleDateFormat cannot cope with micro/nano seconds.\n          \n          \n            \n                     * Example of the longest date format that we should accept - SimpleDateFormat cannot cope with micro/nano seconds.", "author": "vladak", "createdAt": "2020-04-03T10:07:28Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java", "diffHunk": "@@ -56,13 +61,20 @@\n \n     private static class Handler extends DefaultHandler2 {\n \n+        /**\n+         * Example of the longest date format that we should except - SimpleDateFormat cannot cope with micro/nano seconds.", "originalCommit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3eb567688901d577acfc2553d2062e3742fa8560", "chunk": "diff --git a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\nindex 697d365b4b..d1022a5bb4 100644\n--- a/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n+++ b/opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\n@@ -62,7 +62,7 @@ class SubversionHistoryParser implements Executor.StreamHandler {\n     private static class Handler extends DefaultHandler2 {\n \n         /**\n-         * Example of the longest date format that we should except - SimpleDateFormat cannot cope with micro/nano seconds.\n+         * Example of the longest date format that we should accept - SimpleDateFormat cannot cope with micro/nano seconds.\n          */\n         static final int SVN_MILLIS_DATE_LENGTH = \"2020-03-26T15:38:55.999Z\".length();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMTU4MQ==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r402901581", "bodyText": "set this to false at the end of the test ?", "author": "vladak", "createdAt": "2020-04-03T10:11:24Z", "path": "opengrok-indexer/src/test/java/org/opengrok/indexer/history/FileHistoryCacheTest.java", "diffHunk": "@@ -607,6 +610,134 @@ public void testRenamedFilePlusChangesBranched() throws Exception {\n                 updatedHistory.getHistoryEntries(), false);\n     }\n \n+\n+    /**\n+     * Make sure produces correct history where several files are renamed in a single commit.\n+     */\n+    @ConditionalRun(RepositoryInstalled.SubversionInstalled.class)\n+    @Test\n+    public void testMultipleRenamedFiles() throws Exception {\n+        File reposRoot = new File(repositories.getSourceRoot(), \"subversion\");\n+        History updatedHistory;\n+\n+        // The test expects support for renamed files.\n+        RuntimeEnvironment.getInstance().setHandleHistoryOfRenamedFiles(true);", "originalCommit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0ODk0OQ==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r403048949", "bodyText": "Good point - there is already some resetting being done in the tearDown - I'll make sure that all variables are reset to their defaults. Unfortunately not a clean way to do this that I can see.", "author": "harrisric", "createdAt": "2020-04-03T14:33:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMTU4MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMTYzMA==", "url": "https://github.com/oracle/opengrok/pull/3095#discussion_r402901630", "bodyText": "ditto", "author": "vladak", "createdAt": "2020-04-03T10:11:32Z", "path": "opengrok-indexer/src/test/java/org/opengrok/indexer/history/FileHistoryCacheTest.java", "diffHunk": "@@ -607,6 +610,134 @@ public void testRenamedFilePlusChangesBranched() throws Exception {\n                 updatedHistory.getHistoryEntries(), false);\n     }\n \n+\n+    /**\n+     * Make sure produces correct history where several files are renamed in a single commit.\n+     */\n+    @ConditionalRun(RepositoryInstalled.SubversionInstalled.class)\n+    @Test\n+    public void testMultipleRenamedFiles() throws Exception {\n+        File reposRoot = new File(repositories.getSourceRoot(), \"subversion\");\n+        History updatedHistory;\n+\n+        // The test expects support for renamed files.\n+        RuntimeEnvironment.getInstance().setHandleHistoryOfRenamedFiles(true);\n+\n+        // Generate history index.\n+        Repository repo = RepositoryFactory.getRepository(reposRoot);\n+        History historyToStore = repo.getHistory(reposRoot);\n+        cache.store(historyToStore, repo);\n+\n+        /* quick sanity check */\n+        updatedHistory = cache.get(reposRoot, repo, true);\n+        assertEquals(10, updatedHistory.getHistoryEntries().size());\n+\n+        // Check complete list of history entries for the renamed file.\n+        File testFile = new File(reposRoot.toString() + File.separatorChar + \"FileZ.txt\");\n+        updatedHistory = cache.get(testFile, repo, false);\n+        assertEquals(3, updatedHistory.getHistoryEntries().size());\n+\n+        HistoryEntry e0 = new HistoryEntry(\n+                \"10\",\n+                DateUtils.parseDate(\"2020-03-28T07:24:43.921Z\", SVN_DATE_FORMAT),\n+                \"RichardH\",\n+                null,\n+                \"Rename FileA to FileZ and FileB to FileX in a single commit\",\n+                true);\n+        HistoryEntry e1 = new HistoryEntry(\n+                \"7\",\n+                DateUtils.parseDate(\"2020-03-28T07:21:55.273Z\", SVN_DATE_FORMAT),\n+                \"RichardH\",\n+                null,\n+                \"Amend file A\",\n+                true);\n+        HistoryEntry e2 = new HistoryEntry(\n+                \"6\",\n+                DateUtils.parseDate(\"2020-03-28T07:21:05.888Z\", SVN_DATE_FORMAT),\n+                \"RichardH\",\n+                null,\n+                \"Add file A\",\n+                true);\n+\n+        History histConstruct = new History();\n+        LinkedList<HistoryEntry> entriesConstruct = new LinkedList<>();\n+        entriesConstruct.add(e0);\n+        entriesConstruct.add(e1);\n+        entriesConstruct.add(e2);\n+        histConstruct.setHistoryEntries(entriesConstruct);\n+        assertSameEntries(histConstruct.getHistoryEntries(),\n+                updatedHistory.getHistoryEntries(), false);\n+    }\n+\n+\n+    /**\n+     * Make sure produces correct history for a renamed and moved file in Subversion\n+     */\n+    @ConditionalRun(RepositoryInstalled.SubversionInstalled.class)\n+    @Test\n+    public void testRenamedFile() throws Exception {\n+        File reposRoot = new File(repositories.getSourceRoot(), \"subversion\");\n+        History updatedHistory;\n+\n+        // The test expects support for renamed files.\n+        RuntimeEnvironment.getInstance().setHandleHistoryOfRenamedFiles(true);", "originalCommit": "27102ee5b841234c70abafd7b44ea60ae0f81f6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "3eb567688901d577acfc2553d2062e3742fa8560", "url": "https://github.com/oracle/opengrok/commit/3eb567688901d577acfc2553d2062e3742fa8560", "message": "Update opengrok-indexer/src/main/java/org/opengrok/indexer/history/SubversionHistoryParser.java\n\nCo-Authored-By: Vladimir Kotal <vlada@devnull.cz>", "committedDate": "2020-04-03T12:20:06Z", "type": "commit"}, {"oid": "89ce58b9709f83d15c9f4dbc5852ceb37d105602", "url": "https://github.com/oracle/opengrok/commit/89ce58b9709f83d15c9f4dbc5852ceb37d105602", "message": "Reset all the RuntimeEnvironment variables changed after each test.", "committedDate": "2020-04-03T14:32:07Z", "type": "commit"}, {"oid": "e2e9b8305e270c04d524f520ebe82db9040c70aa", "url": "https://github.com/oracle/opengrok/commit/e2e9b8305e270c04d524f520ebe82db9040c70aa", "message": "Merge branch 'subversion-history-fixes' of https://github.com/harrisric/opengrok into subversion-history-fixes", "committedDate": "2020-04-03T14:56:42Z", "type": "commit"}]}