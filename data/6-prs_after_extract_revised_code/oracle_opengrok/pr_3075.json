{"pr_number": 3075, "pr_title": "Feature/check port", "pr_createdAt": "2020-03-17T23:19:33Z", "pr_url": "https://github.com/oracle/opengrok/pull/3075", "timeline": [{"oid": "f3f6ca6b7836e9d447bc5151610f8ef3a691d007", "url": "https://github.com/oracle/opengrok/commit/f3f6ca6b7836e9d447bc5151610f8ef3a691d007", "message": "Use PortChecker to help settle on port", "committedDate": "2020-03-17T23:16:15Z", "type": "commit"}, {"oid": "f5ffd943a26b44287a565496f71a53149d096f81", "url": "https://github.com/oracle/opengrok/commit/f5ffd943a26b44287a565496f71a53149d096f81", "message": "Skip Python tests if -Dtest=... is used", "committedDate": "2020-03-17T23:16:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0ODc5NQ==", "url": "https://github.com/oracle/opengrok/pull/3075#discussion_r394248795", "bodyText": "I wonder why it needs to check DGRAM socket as well.", "author": "vladak", "createdAt": "2020-03-18T10:35:47Z", "path": "opengrok-indexer/src/main/java/org/opengrok/indexer/util/PortChecker.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ *  Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.opengrok.indexer.util;\n+\n+import java.io.IOException;\n+import java.net.DatagramSocket;\n+import java.net.ServerSocket;\n+\n+/**\n+ * Represents a helper for checking a network port, borrowed from Apache\n+ * Usergrid's AvailablePortFinder.java.\n+ */\n+public class PortChecker {\n+    /** The minimum number of server port number. */\n+    public static final int MIN_PORT_NUMBER = 1;\n+\n+    /** The maximum number of server port number. */\n+    public static final int MAX_PORT_NUMBER = 65535;\n+\n+    /**\n+     * Checks to see if a specific port is available.\n+     *\n+     * @param port the port to check for availability\n+     */\n+    public static boolean available(int port) {\n+        if (port < MIN_PORT_NUMBER || port > MAX_PORT_NUMBER) {\n+            throw new IllegalArgumentException(\"Port out of valid range: \" + port);\n+        }\n+\n+        ServerSocket ss = null;\n+        DatagramSocket ds = null;\n+        try {\n+            ss = new ServerSocket(port);\n+            ss.setReuseAddress(true);\n+            ds = new DatagramSocket(port);", "originalCommit": "f5ffd943a26b44287a565496f71a53149d096f81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0MTczNQ==", "url": "https://github.com/oracle/opengrok/pull/3075#discussion_r394341735", "bodyText": "Apache code states port as available only if not TCP nor UDP. I borrowed as-is", "author": "idodeclare", "createdAt": "2020-03-18T13:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0ODc5NQ=="}], "type": "inlineReview", "revised_code": null}]}