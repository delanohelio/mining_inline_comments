{"pr_number": 287, "pr_title": "Fix #286 (SemVer pre-release comparison)", "pr_createdAt": "2020-07-26T12:20:03Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/287", "timeline": [{"oid": "7e7b73bb726b0b2f149ae8dc088f07a43119eaf0", "url": "https://github.com/FabricMC/fabric-loader/commit/7e7b73bb726b0b2f149ae8dc088f07a43119eaf0", "message": "Fix #286 (SemVer pre-release comparison)\n\n* Fix wrong test case\n* Also fix catching incorrect exception in test case", "committedDate": "2020-07-26T12:16:10Z", "type": "commit"}, {"oid": "f09bb537b892b01fef238ba48e760a83997c93a7", "url": "https://github.com/FabricMC/fabric-loader/commit/f09bb537b892b01fef238ba48e760a83997c93a7", "message": "Move `compareTo` to SemanticVersionImpl", "committedDate": "2020-07-26T12:47:37Z", "type": "commit"}, {"oid": "38991ed34eee7fba102ecce45f215a15dc2bd8bb", "url": "https://github.com/FabricMC/fabric-loader/commit/38991ed34eee7fba102ecce45f215a15dc2bd8bb", "message": "Implement SemVer 11.4.3 and 11.4.4", "committedDate": "2020-07-26T12:57:51Z", "type": "commit"}, {"oid": "e6db307207144c6973b9a0756c49eb3a368067d8", "url": "https://github.com/FabricMC/fabric-loader/commit/e6db307207144c6973b9a0756c49eb3a368067d8", "message": "Missed a semicolon & more tests", "committedDate": "2020-07-26T12:59:56Z", "type": "commit"}, {"oid": "9d24d68fb0ac6972417a0ef56f19d1fa994c4a2e", "url": "https://github.com/FabricMC/fabric-loader/commit/9d24d68fb0ac6972417a0ef56f19d1fa994c4a2e", "message": "Fix an edge case", "committedDate": "2020-07-26T13:08:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTc5Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/287#discussion_r460571797", "bodyText": "IMO this shouldn't rely on parse exceptions, but check explicitly against the spec with a regex like 0|[1-9]\\d*", "author": "sfPlayer1", "createdAt": "2020-07-26T20:48:18Z", "path": "src/main/java/net/fabricmc/loader/util/version/SemanticVersionImpl.java", "diffHunk": "@@ -215,4 +216,66 @@ public boolean equalsComponentsExactly(SemanticVersionImpl other) {\n \tboolean isPrerelease() {\n \t\treturn prerelease != null;\n \t}\n+\n+\t@Override\n+\tpublic int compareTo(SemanticVersion o) {\n+\t\tfor (int i = 0; i < Math.max(getVersionComponentCount(), o.getVersionComponentCount()); i++) {\n+\t\t\tint first = getVersionComponent(i);\n+\t\t\tint second = o.getVersionComponent(i);\n+\t\t\tif (first == COMPONENT_WILDCARD || second == COMPONENT_WILDCARD) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tint compare = Integer.compare(first, second);\n+\t\t\tif (compare != 0) {\n+\t\t\t\treturn compare;\n+\t\t\t}\n+\t\t}\n+\n+\t\tOptional<String> prereleaseA = getPrereleaseKey();\n+\t\tOptional<String> prereleaseB = o.getPrereleaseKey();\n+\n+\t\tif (prereleaseA.isPresent() || prereleaseB.isPresent()) {\n+\t\t\tif (prereleaseA.isPresent() && prereleaseB.isPresent()) {\n+\t\t\t\tStringTokenizer prereleaseATokenizer = new StringTokenizer(prereleaseA.get(), \".\");\n+\t\t\t\tStringTokenizer prereleaseBTokenizer = new StringTokenizer(prereleaseB.get(), \".\");\n+\n+\t\t\t\twhile (prereleaseATokenizer.hasMoreElements()) {\n+\t\t\t\t\tif (prereleaseBTokenizer.hasMoreElements()) {\n+\t\t\t\t\t\tString partA = prereleaseATokenizer.nextToken();\n+\t\t\t\t\t\tString partB = prereleaseBTokenizer.nextToken();\n+\n+\t\t\t\t\t\tint compare;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tint numA = Integer.parseUnsignedInt(partA);\n+\t\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t\tint numB = Integer.parseUnsignedInt(partB);\n+\t\t\t\t\t\t\t\tcompare = Integer.compareUnsigned(numA, numB);\n+\t\t\t\t\t\t\t} catch (NumberFormatException e) {\n+\t\t\t\t\t\t\t\tcompare = -1;", "originalCommit": "9d24d68fb0ac6972417a0ef56f19d1fa994c4a2e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM0NDI4OQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/287#discussion_r466344289", "bodyText": "How would one handle the exceptions then?", "author": "Siphalor", "createdAt": "2020-08-06T11:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3MTU4MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/287#discussion_r495571581", "bodyText": "Is the updated version better?", "author": "Siphalor", "createdAt": "2020-09-27T13:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2NjAyMg==", "url": "https://github.com/FabricMC/fabric-loader/pull/287#discussion_r515266022", "bodyText": "Yes, thanks. Sorry for the delay, will move this forward soon.", "author": "sfPlayer1", "createdAt": "2020-10-30T17:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MTc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c4dd8205d94b8d53c692b9368c5d07eb56851a48", "chunk": "diff --git a/src/main/java/net/fabricmc/loader/util/version/SemanticVersionImpl.java b/src/main/java/net/fabricmc/loader/util/version/SemanticVersionImpl.java\nindex 17d88c2..632cb68 100644\n--- a/src/main/java/net/fabricmc/loader/util/version/SemanticVersionImpl.java\n+++ b/src/main/java/net/fabricmc/loader/util/version/SemanticVersionImpl.java\n\n@@ -245,25 +246,25 @@ public class SemanticVersionImpl implements SemanticVersion {\n \t\t\t\t\t\tString partA = prereleaseATokenizer.nextToken();\n \t\t\t\t\t\tString partB = prereleaseBTokenizer.nextToken();\n \n-\t\t\t\t\t\tint compare;\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tint numA = Integer.parseUnsignedInt(partA);\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tint numB = Integer.parseUnsignedInt(partB);\n-\t\t\t\t\t\t\t\tcompare = Integer.compareUnsigned(numA, numB);\n-\t\t\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\t\t\tcompare = -1;\n+\t\t\t\t\t\tif (UNSIGNED_INTEGER.matcher(partA).matches()) {\n+\t\t\t\t\t\t\tif (UNSIGNED_INTEGER.matcher(partB).matches()) {\n+\t\t\t\t\t\t\t\tint compare = Integer.compare(partA.length(), partB.length());\n+\t\t\t\t\t\t\t\tif (compare != 0) {\n+\t\t\t\t\t\t\t\t\treturn compare;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\treturn -1;\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (NumberFormatException e) {\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tInteger.parseUnsignedInt(partB);\n-\t\t\t\t\t\t\t\tcompare = 1;\n-\t\t\t\t\t\t\t} catch (NumberFormatException e2) {\n-\t\t\t\t\t\t\t\tcompare = partA.compareTo(partB);\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tif (UNSIGNED_INTEGER.matcher(partB).matches()) {\n+\t\t\t\t\t\t\t\treturn 1;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (compare != 0)\n+\n+\t\t\t\t\t\tint compare = partA.compareTo(partB);\n+\t\t\t\t\t\tif (compare != 0) {\n \t\t\t\t\t\t\treturn compare;\n+\t\t\t\t\t\t}\n \t\t\t\t\t} else {\n \t\t\t\t\t\treturn 1;\n \t\t\t\t\t}\n"}}, {"oid": "c4dd8205d94b8d53c692b9368c5d07eb56851a48", "url": "https://github.com/FabricMC/fabric-loader/commit/c4dd8205d94b8d53c692b9368c5d07eb56851a48", "message": "Replace exception-based pre-release comparison", "committedDate": "2020-09-27T13:08:38Z", "type": "commit"}]}