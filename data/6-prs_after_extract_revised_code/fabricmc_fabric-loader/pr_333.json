{"pr_number": 333, "pr_title": "Don't load .jar files which are *nix hidden files", "pr_createdAt": "2020-11-15T02:13:47Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/333", "timeline": [{"oid": "8345e9a2abeebf4d299b9945b6b6298de258e0d0", "url": "https://github.com/FabricMC/fabric-loader/commit/8345e9a2abeebf4d299b9945b6b6298de258e0d0", "message": "Don't load jar files which are *nix hidden files", "committedDate": "2020-11-15T02:11:03Z", "type": "commit"}, {"oid": "04cfa9c1fd7c178b92e4b264bd2fec18b29972b9", "url": "https://github.com/FabricMC/fabric-loader/commit/04cfa9c1fd7c178b92e4b264bd2fec18b29972b9", "message": "doc typo", "committedDate": "2020-11-15T02:12:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcwNTkxMw==", "url": "https://github.com/FabricMC/fabric-loader/pull/333#discussion_r523705913", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tif (!Files.isHidden(file) && !file.toString().startsWith(\".\") && file.toString().endsWith(\".jar\")) {\n          \n          \n            \n            \t\t\t\t\tString fileName = file.toString();\n          \n          \n            \n            \n          \n          \n            \n            \t\t\t\t\tif (fileName.endsWith(\".jar\") && !fileName.startsWith(\".\") && !Files.isHidden(file)) {\n          \n      \n    \n    \n  \n\nwould be clearer imo.", "author": "sfPlayer1", "createdAt": "2020-11-15T04:29:20Z", "path": "src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java", "diffHunk": "@@ -51,13 +55,28 @@ public void findCandidates(FabricLoader loader, BiConsumer<URL, Boolean> urlProp\n \t\t}\n \n \t\ttry {\n-\t\t\tFiles.walk(path, 1, FileVisitOption.FOLLOW_LINKS).forEach((modPath) -> {\n-\t\t\t\tif (!Files.isDirectory(modPath) && modPath.toString().endsWith(\".jar\")) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\turlProposer.accept(UrlUtil.asUrl(modPath), requiresRemap);\n-\t\t\t\t\t} catch (UrlConversionException e) {\n-\t\t\t\t\t\tthrow new RuntimeException(\"Failed to convert URL for mod '\" + modPath + \"'!\", e);\n+\t\t\tFiles.walkFileTree(this.path, EnumSet.of(FileVisitOption.FOLLOW_LINKS), 1, new SimpleFileVisitor<Path>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n+\t\t\t\t\t/*\n+\t\t\t\t\t * We only propose a file as a possible mod in the following scenarios:\n+\t\t\t\t\t * General: Must be a jar file\n+\t\t\t\t\t *\n+\t\t\t\t\t * Some OSes Generate metadata so consider the following because of OSes:\n+\t\t\t\t\t * UNIX: Exclude if file is hidden; this occurs when starting a file name with `.`\n+\t\t\t\t\t * MacOS: Exclude hidden + startsWith \".\" since Mac OS names their metadata files in the form of `.mod.jar`\n+\t\t\t\t\t */\n+\n+\t\t\t\t\tif (!Files.isHidden(file) && !file.toString().startsWith(\".\") && file.toString().endsWith(\".jar\")) {", "originalCommit": "04cfa9c1fd7c178b92e4b264bd2fec18b29972b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcwNjE1NQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/333#discussion_r523706155", "bodyText": "Maybe even file.getFileName().toString() to be safe", "author": "sfPlayer1", "createdAt": "2020-11-15T04:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcwNTkxMw=="}], "type": "inlineReview", "revised_code": {"commit": "8c6ebfc8913514593dc5e35b08105ad08563bd8a", "chunk": "diff --git a/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java b/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\nindex 9d05dd2..92f1bd1 100644\n--- a/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\n+++ b/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\n\n@@ -67,7 +67,9 @@ public class DirectoryModCandidateFinder implements ModCandidateFinder {\n \t\t\t\t\t * MacOS: Exclude hidden + startsWith \".\" since Mac OS names their metadata files in the form of `.mod.jar`\n \t\t\t\t\t */\n \n-\t\t\t\t\tif (!Files.isHidden(file) && !file.toString().startsWith(\".\") && file.toString().endsWith(\".jar\")) {\n+\t\t\t\t\tString fileName = file.getFileName().toString();\n+\n+\t\t\t\t\tif (fileName.endsWith(\".jar\") && !fileName.startsWith(\".\") && !Files.isHidden(file)) {\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\turlProposer.accept(UrlUtil.asUrl(file), requiresRemap);\n \t\t\t\t\t\t} catch (UrlConversionException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcwNTk3MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/333#discussion_r523705971", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\treturn super.visitFile(file, attrs);\n          \n          \n            \n            \t\t\t\t\treturn FileVisitResult.CONTINUE;", "author": "sfPlayer1", "createdAt": "2020-11-15T04:29:47Z", "path": "src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java", "diffHunk": "@@ -51,13 +55,28 @@ public void findCandidates(FabricLoader loader, BiConsumer<URL, Boolean> urlProp\n \t\t}\n \n \t\ttry {\n-\t\t\tFiles.walk(path, 1, FileVisitOption.FOLLOW_LINKS).forEach((modPath) -> {\n-\t\t\t\tif (!Files.isDirectory(modPath) && modPath.toString().endsWith(\".jar\")) {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\turlProposer.accept(UrlUtil.asUrl(modPath), requiresRemap);\n-\t\t\t\t\t} catch (UrlConversionException e) {\n-\t\t\t\t\t\tthrow new RuntimeException(\"Failed to convert URL for mod '\" + modPath + \"'!\", e);\n+\t\t\tFiles.walkFileTree(this.path, EnumSet.of(FileVisitOption.FOLLOW_LINKS), 1, new SimpleFileVisitor<Path>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n+\t\t\t\t\t/*\n+\t\t\t\t\t * We only propose a file as a possible mod in the following scenarios:\n+\t\t\t\t\t * General: Must be a jar file\n+\t\t\t\t\t *\n+\t\t\t\t\t * Some OSes Generate metadata so consider the following because of OSes:\n+\t\t\t\t\t * UNIX: Exclude if file is hidden; this occurs when starting a file name with `.`\n+\t\t\t\t\t * MacOS: Exclude hidden + startsWith \".\" since Mac OS names their metadata files in the form of `.mod.jar`\n+\t\t\t\t\t */\n+\n+\t\t\t\t\tif (!Files.isHidden(file) && !file.toString().startsWith(\".\") && file.toString().endsWith(\".jar\")) {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\turlProposer.accept(UrlUtil.asUrl(file), requiresRemap);\n+\t\t\t\t\t\t} catch (UrlConversionException e) {\n+\t\t\t\t\t\t\tthrow new RuntimeException(\"Failed to convert URL for mod '\" + file + \"'!\", e);\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n+\n+\t\t\t\t\treturn super.visitFile(file, attrs);", "originalCommit": "04cfa9c1fd7c178b92e4b264bd2fec18b29972b9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8c6ebfc8913514593dc5e35b08105ad08563bd8a", "chunk": "diff --git a/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java b/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\nindex 9d05dd2..92f1bd1 100644\n--- a/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\n+++ b/src/main/java/net/fabricmc/loader/discovery/DirectoryModCandidateFinder.java\n\n@@ -67,7 +67,9 @@ public class DirectoryModCandidateFinder implements ModCandidateFinder {\n \t\t\t\t\t * MacOS: Exclude hidden + startsWith \".\" since Mac OS names their metadata files in the form of `.mod.jar`\n \t\t\t\t\t */\n \n-\t\t\t\t\tif (!Files.isHidden(file) && !file.toString().startsWith(\".\") && file.toString().endsWith(\".jar\")) {\n+\t\t\t\t\tString fileName = file.getFileName().toString();\n+\n+\t\t\t\t\tif (fileName.endsWith(\".jar\") && !fileName.startsWith(\".\") && !Files.isHidden(file)) {\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\turlProposer.accept(UrlUtil.asUrl(file), requiresRemap);\n \t\t\t\t\t\t} catch (UrlConversionException e) {\n"}}, {"oid": "8c6ebfc8913514593dc5e35b08105ad08563bd8a", "url": "https://github.com/FabricMC/fabric-loader/commit/8c6ebfc8913514593dc5e35b08105ad08563bd8a", "message": "Apply changes from review", "committedDate": "2020-11-15T04:43:31Z", "type": "commit"}]}