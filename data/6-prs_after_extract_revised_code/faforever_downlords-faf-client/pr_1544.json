{"pr_number": 1544, "pr_title": "Display accurate replay durations in vault", "pr_createdAt": "2020-01-03T07:39:30Z", "pr_url": "https://github.com/FAForever/downlords-faf-client/pull/1544", "timeline": [{"oid": "8f1565c3a2a96f1d14689d4b52f10fd3d7ff96fc", "url": "https://github.com/FAForever/downlords-faf-client/commit/8f1565c3a2a96f1d14689d4b52f10fd3d7ff96fc", "message": "Add replay time to replay details", "committedDate": "2020-01-03T07:09:15Z", "type": "commit"}, {"oid": "5829bd0031f35ff49c7e78f2a5a7551ab63dfd8f", "url": "https://github.com/FAForever/downlords-faf-client/commit/5829bd0031f35ff49c7e78f2a5a7551ab63dfd8f", "message": "Use replay tick duration on cards if available", "committedDate": "2020-01-03T07:29:07Z", "type": "commit"}, {"oid": "a10f807871ea87ee7ce98e200fcd1b837f4512b1", "url": "https://github.com/FAForever/downlords-faf-client/commit/a10f807871ea87ee7ce98e200fcd1b837f4512b1", "message": "Add tooltips to replay detail labels", "committedDate": "2020-01-03T07:29:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730351", "bodyText": "just for my information, where is that object property used?", "author": "norraxx", "createdAt": "2020-01-03T08:16:40Z", "path": "src/main/java/com/faforever/client/replay/Replay.java", "diffHunk": "@@ -219,6 +222,19 @@ public void setEndTime(Temporal endTime) {\n     return endTime;\n   }\n \n+  @Nullable\n+  public Integer getReplayTicks() {\n+    return replayTicks.get();\n+  }\n+\n+  public void setReplayTicks(Integer replayTicks) {\n+    this.replayTicks.set(replayTicks);\n+  }\n+\n+  public ObjectProperty<Integer> replayTicksProperty() {", "originalCommit": "a10f807871ea87ee7ce98e200fcd1b837f4512b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzU3NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362737575", "bodyText": "I didn't use it anywhere. I just included it because the other attributes seemed to have them. IDK what an ObjectProperty even does.", "author": "Askaholic", "createdAt": "2020-01-03T08:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczOTg3Nw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362739877", "bodyText": "@axel1200 ? :-)", "author": "norraxx", "createdAt": "2020-01-03T09:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NDUxNQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r363054515", "bodyText": "Yes u do it correctly", "author": "1-alex98", "createdAt": "2020-01-04T20:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1NDUzNg==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r363054536", "bodyText": "it is an object where u can listen for changes", "author": "1-alex98", "createdAt": "2020-01-04T20:50:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0NzY1Nw==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368547657", "bodyText": "It's an observable object, following the observer pattern from software engineering. You can add a listener that gets notified on changes. The property, which is introduced by javafc id a special implementation of this observer pattern allowing properties to be bound to others (supporting converters) therefore updating each other/ UI components when changed.", "author": "Geosearchef", "createdAt": "2020-01-20T13:30:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDM1MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730429", "bodyText": "isn't millis 1000?", "author": "norraxx", "createdAt": "2020-01-03T08:17:09Z", "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));", "originalCommit": "a10f807871ea87ee7ce98e200fcd1b837f4512b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczNzc5NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362737795", "bodyText": "Yes but there are 10 ticks per second. So 10/s * 100 = 1000/s", "author": "Askaholic", "createdAt": "2020-01-03T08:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc0MDM1NA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362740354", "bodyText": "Oh! Math hidden!! :-) how about to show it as constant with explanation? Otherwise it's not visible on first sight", "author": "norraxx", "createdAt": "2020-01-03T09:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDQyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjczMDUzMA==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r362730530", "bodyText": "\ud83d\udc4d", "author": "norraxx", "createdAt": "2020-01-03T08:17:45Z", "path": "src/main/java/com/faforever/client/replay/ReplayDetailController.java", "diffHunk": "@@ -142,7 +144,18 @@ public void initialize() {\n \n     reviewsController.getRoot().setMaxSize(Integer.MAX_VALUE, Integer.MAX_VALUE);\n \n+\n     copyButton.setText(i18n.get(\"replay.copyUrl\"));\n+\n+    dateLabel.setTooltip(new Tooltip(i18n.get(\"replay.dateTooltip\")));\n+    timeLabel.setTooltip(new Tooltip(i18n.get(\"replay.timeTooltip\")));\n+    modLabel.setTooltip(new Tooltip(i18n.get(\"replay.modTooltip\")));\n+    durationLabel.setTooltip(new Tooltip(i18n.get(\"replay.durationTooltip\")));\n+    replayDurationLabel.setTooltip(new Tooltip(i18n.get(\"replay.replayDurationTooltip\")));\n+    playerCountLabel.setTooltip(new Tooltip(i18n.get(\"replay.playerCountTooltip\")));\n+    ratingLabel.setTooltip(new Tooltip(i18n.get(\"replay.ratingTooltip\")));\n+    qualityLabel.setTooltip(new Tooltip(i18n.get(\"replay.qualityTooltip\")));", "originalCommit": "a10f807871ea87ee7ce98e200fcd1b837f4512b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d3f85e7cbb95572efbfe7a754bd9ff704bfe1b9f", "url": "https://github.com/FAForever/downlords-faf-client/commit/d3f85e7cbb95572efbfe7a754bd9ff704bfe1b9f", "message": "Make icon be a timer with play symbol in the center", "committedDate": "2020-01-04T00:17:16Z", "type": "commit"}, {"oid": "f7fd505133d7f29daa849fd200a6d68c24cd2af9", "url": "https://github.com/FAForever/downlords-faf-client/commit/f7fd505133d7f29daa849fd200a6d68c24cd2af9", "message": "Add test for checking that replayDurationLabel is set", "committedDate": "2020-01-07T03:57:10Z", "type": "commit"}, {"oid": "0356436209419e8b0aa4dfad62d2cffbabf34a44", "url": "https://github.com/FAForever/downlords-faf-client/commit/0356436209419e8b0aa4dfad62d2cffbabf34a44", "message": "Change 'Game quality' tooltip to 'Quality'", "committedDate": "2020-01-19T00:21:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2NTg3NQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368665875", "bodyText": "Maybe we should use the unicode format ala \\u0055??", "author": "norraxx", "createdAt": "2020-01-20T17:40:15Z", "path": "src/main/java/com/faforever/client/replay/ReplayCardController.java", "diffHunk": "@@ -98,9 +98,15 @@ public void setReplay(Replay replay) {\n         .average()\n         .ifPresent(averageRating -> ratingLabel.setText(i18n.number((int) averageRating)));\n \n-    durationLabel.setText(Optional.ofNullable(replay.getEndTime())\n-        .map(endTime -> timeService.shortDuration(Duration.between(replay.getStartTime(), endTime)))\n-        .orElse(i18n.get(\"notAvailable\")));\n+    Integer replayTicks = replay.getReplayTicks();\n+    if (replayTicks != null) {\n+      durationLabel.setText(timeService.shortDuration(Duration.ofMillis(replayTicks * 100)));\n+      ((Label) durationLabel.getGraphic()).setText(\"\ue953\");", "originalCommit": "0356436209419e8b0aa4dfad62d2cffbabf34a44", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3MjM3MQ==", "url": "https://github.com/FAForever/downlords-faf-client/pull/1544#discussion_r368672371", "bodyText": "That's normally what I would do, but it's like this in the rest of the code so I was just trying to keep it consistent.", "author": "Askaholic", "createdAt": "2020-01-20T17:59:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2NTg3NQ=="}], "type": "inlineReview", "revised_code": null}]}