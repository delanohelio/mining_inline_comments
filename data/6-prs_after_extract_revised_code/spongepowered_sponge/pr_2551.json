{"pr_number": 2551, "pr_title": "Implement SaveChunkEvent.", "pr_createdAt": "2020-04-04T16:05:08Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/2551", "timeline": [{"oid": "cfa56f865af013018cf76b1ffb3ac3603c26c46c", "url": "https://github.com/SpongePowered/Sponge/commit/cfa56f865af013018cf76b1ffb3ac3603c26c46c", "message": "Implement SaveChunkEvent.\n\nSigned-off-by: Chris Sanders <zidane@spongepowered.org>", "committedDate": "2020-04-04T18:30:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2MTk3MQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2551#discussion_r436261971", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_POST) {\n          \n          \n            \n                    if (ShouldFire.SAVE_CHUNK_EVENT_POST) {", "author": "ImMorpheus", "createdAt": "2020-06-06T11:43:04Z", "path": "src/main/java/org/spongepowered/common/mixin/core/world/chunk/storage/AnvilChunkLoaderMixin.java", "diffHunk": "@@ -300,4 +305,11 @@ public boolean writeNextIO() {\n         return this.chunkSaveLocation.toPath();\n     }\n \n-}\n+    @Inject(method = \"writeChunkData\", at = @At(\"RETURN\"))\n+    private void impl$callSaveChunkEventPost(ChunkPos pos, NBTTagCompound compound, CallbackInfo ci) {\n+        if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_POST) {", "originalCommit": "cfa56f865af013018cf76b1ffb3ac3603c26c46c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a90b8a82320d2a1501f255787abf2e312e3ce71", "chunk": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/world/chunk/storage/AnvilChunkLoaderMixin.java b/src/main/java/org/spongepowered/common/mixin/core/world/chunk/storage/AnvilChunkLoaderMixin.java\nindex 556b4ee35..718adf895 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/world/chunk/storage/AnvilChunkLoaderMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/world/chunk/storage/AnvilChunkLoaderMixin.java\n\n@@ -307,9 +307,9 @@ public boolean writeNextIO() {\n \n     @Inject(method = \"writeChunkData\", at = @At(\"RETURN\"))\n     private void impl$callSaveChunkEventPost(ChunkPos pos, NBTTagCompound compound, CallbackInfo ci) {\n-        if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_POST) {\n+        if (ShouldFire.SAVE_CHUNK_EVENT_POST) {\n             final Cause cause = Cause.of(EventContext.empty(), Collections.singleton(SpongeImpl.getServer()));\n             SpongeImpl.postEvent(SpongeEventFactory.createSaveChunkEventPost(cause, VecHelper.toVec3i(pos)));\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2MTk5MA==", "url": "https://github.com/SpongePowered/Sponge/pull/2551#discussion_r436261990", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_PRE) {\n          \n          \n            \n                    if (ShouldFire.SAVE_CHUNK_EVENT_PRE) {", "author": "ImMorpheus", "createdAt": "2020-06-06T11:43:18Z", "path": "src/main/java/org/spongepowered/common/mixin/core/world/gen/ChunkProviderServerMixin.java", "diffHunk": "@@ -325,4 +326,15 @@ public boolean tick()\n         this.loadedChunks.remove(ChunkPos.asLong(chunk.x, chunk.z));\n         ((ChunkBridge) chunk).bridge$setScheduledForUnload(-1);\n     }\n+\n+    @Inject(method = \"saveChunkData\", at = @At(\"HEAD\"), cancellable = true)\n+    private void impl$callSaveChunkEventPre(Chunk chunkIn, CallbackInfo ci) {\n+        if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_PRE) {", "originalCommit": "cfa56f865af013018cf76b1ffb3ac3603c26c46c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a90b8a82320d2a1501f255787abf2e312e3ce71", "chunk": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/world/gen/ChunkProviderServerMixin.java b/src/main/java/org/spongepowered/common/mixin/core/world/gen/ChunkProviderServerMixin.java\nindex 280f611b5..30397f4a5 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/world/gen/ChunkProviderServerMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/world/gen/ChunkProviderServerMixin.java\n\n@@ -327,9 +336,25 @@ public boolean tick()\n         ((ChunkBridge) chunk).bridge$setScheduledForUnload(-1);\n     }\n \n+    // This still returns true for METADATA_ONLY because other places (e.g. WorldServer) use it.\n+    @Inject(method = \"canSave\", at = @At(\"HEAD\"), cancellable = true)\n+    public void impl$checkSerializationBehaviorForCanSave(CallbackInfoReturnable<Boolean> cir) {\n+        if (((WorldProperties) this.world.getWorldInfo()).getSerializationBehavior() == SerializationBehaviors.NONE) {\n+            cir.setReturnValue(false);\n+        }\n+    }\n+\n+    @Inject(method = \"saveChunks\", at = @At(\"HEAD\"), cancellable = true)\n+    public void impl$checkSerializationBehaviorForSaveChunks(CallbackInfoReturnable<Boolean> cir) {\n+        final SerializationBehavior behavior = ((WorldProperties) this.world.getWorldInfo()).getSerializationBehavior();\n+        if (behavior == SerializationBehaviors.NONE || behavior == SerializationBehaviors.METADATA_ONLY) {\n+            cir.setReturnValue(true);\n+        }\n+    }\n+\n     @Inject(method = \"saveChunkData\", at = @At(\"HEAD\"), cancellable = true)\n     private void impl$callSaveChunkEventPre(Chunk chunkIn, CallbackInfo ci) {\n-        if (ShouldFire.SAVE_CHUNK_EVENT || ShouldFire.SAVE_CHUNK_EVENT_PRE) {\n+        if (ShouldFire.SAVE_CHUNK_EVENT_PRE) {\n             final org.spongepowered.api.world.Chunk apiChunk = (org.spongepowered.api.world.Chunk) chunkIn;\n             if (SpongeImpl.postEvent(SpongeEventFactory.createSaveChunkEventPre(SpongeImpl.getCauseStackManager().getCurrentCause(),\n                 apiChunk.getPosition(), apiChunk))) {\n"}}, {"oid": "3a90b8a82320d2a1501f255787abf2e312e3ce71", "url": "https://github.com/SpongePowered/Sponge/commit/3a90b8a82320d2a1501f255787abf2e312e3ce71", "message": "Update API", "committedDate": "2020-06-09T16:33:10Z", "type": "forcePushed"}, {"oid": "50bd7e42c887c3704d1268e607c62b298dc878ee", "url": "https://github.com/SpongePowered/Sponge/commit/50bd7e42c887c3704d1268e607c62b298dc878ee", "message": "Implement SaveChunkEvent.\n\nSigned-off-by: Chris Sanders <zidane@spongepowered.org>", "committedDate": "2020-06-10T17:37:06Z", "type": "commit"}, {"oid": "db42e64b80449f45f2e60e6556ec19aacca7f35b", "url": "https://github.com/SpongePowered/Sponge/commit/db42e64b80449f45f2e60e6556ec19aacca7f35b", "message": "Don't check ShouldFire supertype for SaveChunkEvent.Post\n\nCo-authored-by: Morpheus <ImMorpheus@users.noreply.github.com>", "committedDate": "2020-06-10T17:37:08Z", "type": "commit"}, {"oid": "db42e64b80449f45f2e60e6556ec19aacca7f35b", "url": "https://github.com/SpongePowered/Sponge/commit/db42e64b80449f45f2e60e6556ec19aacca7f35b", "message": "Don't check ShouldFire supertype for SaveChunkEvent.Post\n\nCo-authored-by: Morpheus <ImMorpheus@users.noreply.github.com>", "committedDate": "2020-06-10T17:37:08Z", "type": "forcePushed"}]}