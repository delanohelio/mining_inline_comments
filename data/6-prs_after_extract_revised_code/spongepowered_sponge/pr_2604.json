{"pr_number": 2604, "pr_title": "Improve runaway phase state detection", "pr_createdAt": "2020-05-10T14:24:20Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/2604", "timeline": [{"oid": "2bef57d5b797421728af23bb6df8dcd1dcb81e80", "url": "https://github.com/SpongePowered/Sponge/commit/2bef57d5b797421728af23bb6df8dcd1dcb81e80", "message": "Small performance improvement in runaway phase state detection", "committedDate": "2020-05-10T13:38:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDQ5Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2604#discussion_r423510496", "bodyText": "Just use a system arraycopy on a properly typed array, you add an extra checkcast that is made redundant later on.", "author": "gabizou", "createdAt": "2020-05-12T07:12:17Z", "path": "src/main/java/org/spongepowered/common/event/tracking/PhaseStack.java", "diffHunk": "@@ -133,19 +133,18 @@ boolean checkForRunaways(IPhaseState<?> state, @Nullable PhaseContext<?> phaseCo\n             return false;\n         }\n         final int totalCount = this.phases.size();\n-        final PhaseContext<?>[] allContexts = new PhaseContext[totalCount];\n-        int i = 0;\n+        if (totalCount < 2) {\n+            return false;\n+        }\n         // So first, we want to collect all the states into an array as they are pushed to the stack,\n         // which means that we should see the re-entrant phase pretty soon.\n-        for (PhaseContext<?> data : this.phases) {\n-            allContexts[i++] = data;\n-        }\n+        final Object[] allContexts = this.phases.toArray();", "originalCommit": "2bef57d5b797421728af23bb6df8dcd1dcb81e80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyMjU1Mw==", "url": "https://github.com/SpongePowered/Sponge/pull/2604#discussion_r424622553", "bodyText": "I need the source array to call System#arraycopy directly. The source array is a protected field (elements) inside the ArrayDeque class, so I can only use Deque#toArray();.\ntoArray() is much faster than the type-checked arraycopy of toArray(T[] a) and the checkcast would be redundant only if I used the latter.", "author": "ImMorpheus", "createdAt": "2020-05-13T17:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDQ5Ng=="}], "type": "inlineReview", "revised_code": null}]}