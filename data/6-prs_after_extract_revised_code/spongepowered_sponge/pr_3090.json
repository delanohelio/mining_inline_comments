{"pr_number": 3090, "pr_title": "Reorganize config, make it work in mixin plugins", "pr_createdAt": "2020-07-24T05:33:27Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/3090", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzOTQyOA==", "url": "https://github.com/SpongePowered/Sponge/pull/3090#discussion_r460139428", "bodyText": "SQL manager", "author": "Zidane", "createdAt": "2020-07-24T15:51:58Z", "path": "src/main/java/org/spongepowered/common/config/common/CommonConfig.java", "diffHunk": "@@ -22,41 +22,38 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package org.spongepowered.common.config.type;\n+package org.spongepowered.common.config.common;\n \n-import com.google.common.base.Function;\n-import com.google.common.base.Predicate;\n import com.google.common.base.Predicates;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Maps;\n import ninja.leaping.configurate.objectmapping.Setting;\n-import org.spongepowered.common.config.category.BrokenModCategory;\n-import org.spongepowered.common.config.category.BungeeCordCategory;\n-import org.spongepowered.common.config.category.PhaseTrackerCategory;\n-import org.spongepowered.common.config.category.CommandsCategory;\n-import org.spongepowered.common.config.category.ExploitCategory;\n-import org.spongepowered.common.config.category.GlobalGeneralCategory;\n-import org.spongepowered.common.config.category.GlobalWorldCategory;\n-import org.spongepowered.common.config.category.ModuleCategory;\n-import org.spongepowered.common.config.category.MovementChecksCategory;\n-import org.spongepowered.common.config.category.OptimizationCategory;\n-import org.spongepowered.common.config.category.PermissionCategory;\n-import org.spongepowered.common.config.category.ServicesCategory;\n-import org.spongepowered.common.config.category.SqlCategory;\n-import org.spongepowered.common.config.category.MetricsCategory;\n-import org.spongepowered.common.config.category.TeleportHelperCategory;\n+import org.spongepowered.common.config.Config;\n import org.spongepowered.common.util.IpSet;\n \n import java.net.InetAddress;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.function.Predicate;\n \n-import javax.annotation.Nullable;\n+/**\n+ * Sponge's core configuration.\n+ *\n+ * <p>The options in this file are non-inheritable.</p>\n+ *\n+ * <p>Because of how early in the engine lifecycle this configuration is loaded,\n+ * the configuration and its categories <em>may not reference\n+ * Minecraft classes</em></p>\n+ */\n+public class CommonConfig implements Config {\n+\n+    public static final String FILE_NAME = \"sponge.conf\";\n \n-public class GlobalConfig extends GeneralConfigBase {\n+    @Setting\n+    private GeneralCategory general = new GeneralCategory();\n \n-    @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n+    @Setting(comment = \"Configuration options related to the SQL service, including connection aliases etc\")", "originalCommit": "5dfd08f78a148e3a8d1fcc81abda320cb4b6d605", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d51e9c2a848b316c55139f88d42bbdefaf773a75", "chunk": "diff --git a/src/main/java/org/spongepowered/common/config/common/CommonConfig.java b/src/main/java/org/spongepowered/common/config/common/CommonConfig.java\nindex 18cdfa199..e412d500e 100644\n--- a/src/main/java/org/spongepowered/common/config/common/CommonConfig.java\n+++ b/src/main/java/org/spongepowered/common/config/common/CommonConfig.java\n\n@@ -53,7 +53,7 @@\n     @Setting\n     private GeneralCategory general = new GeneralCategory();\n \n-    @Setting(comment = \"Configuration options related to the SQL service, including connection aliases etc\")\n+    @Setting(comment = \"Configuration options related to the SQL manager, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n     @Setting\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE0NDE2OQ==", "url": "https://github.com/SpongePowered/Sponge/pull/3090#discussion_r460144169", "bodyText": "This is actually a fine change with no TODO needed. DimensionType specifying if I'll generate spawn on load is just a Forge feature. This call will likely be changed to do...\nModWorldHooks.shouldGenerateSpawnOnLoad(DimensionType dimensionType);", "author": "Zidane", "createdAt": "2020-07-24T16:00:01Z", "path": "src/main/java/org/spongepowered/common/world/SpongeWorldArchetypeBuilder.java", "diffHunk": "@@ -266,7 +266,7 @@ public SpongeWorldArchetypeBuilder reset() {\n         this.enabled = true;\n         this.loadOnStartup = true;\n         this.keepSpawnLoaded = null;\n-        this.generateSpawnOnLoad = this.dimensionType.getConfigAdapter().getConfig().getWorld().getGenerateSpawnOnLoad();\n+        this.generateSpawnOnLoad = true; // TODO this.dimensionType.getConfigAdapter().getConfig().getWorld().getGenerateSpawnOnLoad();", "originalCommit": "5dfd08f78a148e3a8d1fcc81abda320cb4b6d605", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d51e9c2a848b316c55139f88d42bbdefaf773a75", "chunk": "diff --git a/src/main/java/org/spongepowered/common/world/SpongeWorldArchetypeBuilder.java b/src/main/java/org/spongepowered/common/world/SpongeWorldArchetypeBuilder.java\nindex 828d551db..b4e6890c2 100644\n--- a/src/main/java/org/spongepowered/common/world/SpongeWorldArchetypeBuilder.java\n+++ b/src/main/java/org/spongepowered/common/world/SpongeWorldArchetypeBuilder.java\n\n@@ -266,7 +265,7 @@ public SpongeWorldArchetypeBuilder reset() {\n         this.enabled = true;\n         this.loadOnStartup = true;\n         this.keepSpawnLoaded = null;\n-        this.generateSpawnOnLoad = true; // TODO this.dimensionType.getConfigAdapter().getConfig().getWorld().getGenerateSpawnOnLoad();\n+        this.generateSpawnOnLoad = true;\n         this.generatorSettings = DataContainer.createNew();\n         this.pvpEnabled = true;\n         this.commandsEnabled = true;\n"}}, {"oid": "d51e9c2a848b316c55139f88d42bbdefaf773a75", "url": "https://github.com/SpongePowered/Sponge/commit/d51e9c2a848b316c55139f88d42bbdefaf773a75", "message": "Reorganize config, make it work in mixin plugins\n\nA bunch of rearrangement to better sort out which options are available\nper-world, and which options are global only.\n\nAdds a usable versioning system.", "committedDate": "2020-07-24T17:06:55Z", "type": "forcePushed"}, {"oid": "18aa062bb5c03633ad2d262fc33b0b1ddf045016", "url": "https://github.com/SpongePowered/Sponge/commit/18aa062bb5c03633ad2d262fc33b0b1ddf045016", "message": "Reorganize config, make it work in mixin plugins\n\nA bunch of rearrangement to better sort out which options are available\nper-world, and which options are global only.\n\nAdds a usable versioning system.", "committedDate": "2020-07-31T23:54:44Z", "type": "commit"}, {"oid": "18aa062bb5c03633ad2d262fc33b0b1ddf045016", "url": "https://github.com/SpongePowered/Sponge/commit/18aa062bb5c03633ad2d262fc33b0b1ddf045016", "message": "Reorganize config, make it work in mixin plugins\n\nA bunch of rearrangement to better sort out which options are available\nper-world, and which options are global only.\n\nAdds a usable versioning system.", "committedDate": "2020-07-31T23:54:44Z", "type": "forcePushed"}]}