{"pr_number": 747, "pr_title": "Fix: let keywords eligible to be parsed as identifiers", "pr_createdAt": "2020-09-19T00:13:49Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/747", "timeline": [{"oid": "5c8547c35c02bf4aba6e80a3689ea090c7caac78", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/5c8547c35c02bf4aba6e80a3689ea090c7caac78", "message": "added keyword as id in parser", "committedDate": "2020-09-18T18:11:32Z", "type": "commit"}, {"oid": "924935235fbed03f18913087c6ab3d6def84eb73", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/924935235fbed03f18913087c6ab3d6def84eb73", "message": "update", "committedDate": "2020-09-18T19:53:45Z", "type": "commit"}, {"oid": "a107d02f1990e28b37b92dfbcacd962d1edaa1b8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/a107d02f1990e28b37b92dfbcacd962d1edaa1b8", "message": "Merge remote-tracking branch 'upstream/develop' into fix-keyword", "committedDate": "2020-09-18T21:50:11Z", "type": "commit"}, {"oid": "e32ece0c8a1dc5c958605c224d1b8c7f57802172", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e32ece0c8a1dc5c958605c224d1b8c7f57802172", "message": "excluded failed test", "committedDate": "2020-09-22T20:58:44Z", "type": "commit"}, {"oid": "1d99709f96c78b17afea729c6c8b8de4a64d1634", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/1d99709f96c78b17afea729c6c8b8de4a64d1634", "message": "Merge remote-tracking branch 'upstream/develop' into fix-keyword", "committedDate": "2020-09-23T21:12:04Z", "type": "commit"}, {"oid": "814889428c6812cee16faf812c1cd1b2fd1e2fa6", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/814889428c6812cee16faf812c1cd1b2fd1e2fa6", "message": "update", "committedDate": "2020-09-23T23:15:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NjI3Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/747#discussion_r494576273", "bodyText": "np: we can label the alternatives in rule (ex. | keywordsCanBeId  #keywordId) and move this to individual method generated.", "author": "dai-chen", "createdAt": "2020-09-24T19:58:46Z", "path": "ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java", "diffHunk": "@@ -191,6 +191,9 @@ public UnresolvedExpression visitEvalFunctionCall(EvalFunctionCallContext ctx) {\n    */\n   @Override\n   public UnresolvedExpression visitQualifiedName(QualifiedNameContext ctx) {\n+    if (ctx.keywordsCanBeId() != null) {\n+      return new QualifiedName(ctx.keywordsCanBeId().getText());\n+    }", "originalCommit": "814889428c6812cee16faf812c1cd1b2fd1e2fa6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU4ODI0MQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/747#discussion_r494588241", "bodyText": "Yes we can, that introduces more changes so I didn't add label. But yes I can use label since it makes code more readable", "author": "chloe-zh", "createdAt": "2020-09-24T20:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NjI3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c06880d1e2a2f9a42b41b8a04f00b617c2badb00", "chunk": "diff --git a/ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java b/ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java\nindex 76f41e27..2f4d410a 100644\n--- a/ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java\n+++ b/ppl/src/main/java/com/amazon/opendistroforelasticsearch/sql/ppl/parser/AstExpressionBuilder.java\n\n@@ -190,10 +193,7 @@ public class AstExpressionBuilder extends OpenDistroPPLParserBaseVisitor<Unresol\n    * Literal and value.\n    */\n   @Override\n-  public UnresolvedExpression visitQualifiedName(QualifiedNameContext ctx) {\n-    if (ctx.keywordsCanBeId() != null) {\n-      return new QualifiedName(ctx.keywordsCanBeId().getText());\n-    }\n+  public UnresolvedExpression visitIdentsAsQualifiedName(IdentsAsQualifiedNameContext ctx) {\n     return new QualifiedName(\n         ctx.ident()\n             .stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3OTgwOA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/747#discussion_r494579808", "bodyText": "Are the changes in UT meant for this? I can see we're changing date type in test data and code to timestamp in UT?", "author": "dai-chen", "createdAt": "2020-09-24T20:05:38Z", "path": "sql-jdbc/src/main/java/com/amazon/opendistroforelasticsearch/jdbc/types/ElasticsearchType.java", "diffHunk": "@@ -72,7 +72,7 @@\n     IP(JDBCType.VARCHAR, String.class, 15, 0, false),\n     NESTED(JDBCType.STRUCT, null, 0, 0, false),\n     OBJECT(JDBCType.STRUCT, null, 0, 0, false),\n-    DATE(JDBCType.TIMESTAMP, Timestamp.class, 24, 24, false),", "originalCommit": "814889428c6812cee16faf812c1cd1b2fd1e2fa6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDc5NQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/747#discussion_r494594795", "bodyText": "Yes, all timestamp type were taken as date type in JDBC, here it's corrected back to timestamp and so are the UTs", "author": "chloe-zh", "createdAt": "2020-09-24T20:34:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3OTgwOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c06880d1e2a2f9a42b41b8a04f00b617c2badb00", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c06880d1e2a2f9a42b41b8a04f00b617c2badb00", "message": "address comments", "committedDate": "2020-09-24T21:02:37Z", "type": "commit"}, {"oid": "2a751fb20feb36f0f1553ed7882f80879bc76a21", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/2a751fb20feb36f0f1553ed7882f80879bc76a21", "message": "address comments", "committedDate": "2020-09-24T21:30:31Z", "type": "commit"}]}