{"pr_number": 822, "pr_title": "Support subquery in FROM clause in new engine", "pr_createdAt": "2020-11-13T02:12:38Z", "pr_url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822", "timeline": [{"oid": "134efdf326d77324273f309b7b5be74792e8245a", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/134efdf326d77324273f309b7b5be74792e8245a", "message": "support subquery in from", "committedDate": "2020-11-11T22:13:18Z", "type": "commit"}, {"oid": "b06b8a75424f482b0f79eda67133b517859e92ad", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/b06b8a75424f482b0f79eda67133b517859e92ad", "message": "update", "committedDate": "2020-11-11T22:26:04Z", "type": "commit"}, {"oid": "cf540cc7d38a22781a0c9590429ee877e3175b99", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/cf540cc7d38a22781a0c9590429ee877e3175b99", "message": "added java doc", "committedDate": "2020-11-11T22:34:36Z", "type": "commit"}, {"oid": "8c84ae16caf72413d221678e37bdb371b8592b28", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/8c84ae16caf72413d221678e37bdb371b8592b28", "message": "added unit test", "committedDate": "2020-11-11T23:33:24Z", "type": "commit"}, {"oid": "9755afd2bff872615d3f27f73ddb2b9c279c9d3e", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/9755afd2bff872615d3f27f73ddb2b9c279c9d3e", "message": "added comparison test cases", "committedDate": "2020-11-13T00:58:55Z", "type": "commit"}, {"oid": "ec1b49f15238703770c14853e177c2e9d4c6641d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/ec1b49f15238703770c14853e177c2e9d4c6641d", "message": "skipped a broken test in SubqueryIT.java due to different schema in new engine", "committedDate": "2020-11-13T01:25:26Z", "type": "commit"}, {"oid": "3b31737b1ed8c1445c44fd1294a5a2ffb43f11d8", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/3b31737b1ed8c1445c44fd1294a5a2ffb43f11d8", "message": "added case for issue #375", "committedDate": "2020-11-13T02:02:40Z", "type": "commit"}, {"oid": "38707baa6a32ba75879c1497f220bcb0e452bd77", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/38707baa6a32ba75879c1497f220bcb0e452bd77", "message": "update", "committedDate": "2020-11-13T02:05:58Z", "type": "commit"}, {"oid": "080cf31b8843ee80e84b0818c315a372732131bc", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/080cf31b8843ee80e84b0818c315a372732131bc", "message": "Merge remote-tracking branch 'upstream/develop' into from-subquery", "committedDate": "2020-11-13T19:50:00Z", "type": "commit"}, {"oid": "348b054a2321789a2fb05df98a2f26f026ffe0d9", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/348b054a2321789a2fb05df98a2f26f026ffe0d9", "message": "update", "committedDate": "2020-11-13T20:29:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTA1OA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r523235058", "bodyText": "Since alias is not optional in ANTLR grammar, is this check necessary?", "author": "dai-chen", "createdAt": "2020-11-13T21:13:01Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/RelationSubquery.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.sql.ast.tree;\n+\n+import com.amazon.opendistroforelasticsearch.sql.ast.AbstractNodeVisitor;\n+import com.amazon.opendistroforelasticsearch.sql.exception.SemanticCheckException;\n+import com.google.common.collect.ImmutableList;\n+import java.util.List;\n+import java.util.Locale;\n+import lombok.AllArgsConstructor;\n+import lombok.EqualsAndHashCode;\n+import lombok.RequiredArgsConstructor;\n+import lombok.ToString;\n+\n+/**\n+ * Logical plan node of RelationSubquery.\n+ */\n+@AllArgsConstructor\n+@EqualsAndHashCode(callSuper = false)\n+@RequiredArgsConstructor\n+@ToString\n+public class RelationSubquery extends UnresolvedPlan {\n+  private UnresolvedPlan query;\n+  private String alias;\n+\n+  /**\n+   * Take subquery alias as table name.\n+   */\n+  public String getAliasAsTableName() {\n+    if (alias == null) {\n+      throw new SemanticCheckException(\n+          String.format(Locale.ROOT, \"missing table alias for subquery %s\", toString()));\n+    }", "originalCommit": "348b054a2321789a2fb05df98a2f26f026ffe0d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0ODI5NA==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r523248294", "bodyText": "+1", "author": "penghuo", "createdAt": "2020-11-13T21:44:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTA1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1NzQ2Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r523257463", "bodyText": "forgot to remove this after changing the antlr grammar. Will remove it, thanks!", "author": "chloe-zh", "createdAt": "2020-11-13T22:02:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNTA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "e2d4f241640eda92f80d56376b09757eef24656d", "chunk": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/RelationSubquery.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/RelationSubquery.java\nindex d87dd048..c7a224b2 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/RelationSubquery.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/ast/tree/RelationSubquery.java\n\n@@ -40,10 +40,6 @@ public class RelationSubquery extends UnresolvedPlan {\n    * Take subquery alias as table name.\n    */\n   public String getAliasAsTableName() {\n-    if (alias == null) {\n-      throw new SemanticCheckException(\n-          String.format(Locale.ROOT, \"missing table alias for subquery %s\", toString()));\n-    }\n     return alias;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjM5OQ==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r523236399", "bodyText": "Since we can support subquery now, do we need to pop up context somewhere?", "author": "dai-chen", "createdAt": "2020-11-13T21:16:10Z", "path": "core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/Analyzer.java", "diffHunk": "@@ -118,6 +119,17 @@ public LogicalPlan visitRelation(Relation node, AnalysisContext context) {\n     return new LogicalRelation(node.getTableName());\n   }\n \n+  @Override\n+  public LogicalPlan visitRelationSubquery(RelationSubquery node, AnalysisContext context) {\n+    context.push();", "originalCommit": "348b054a2321789a2fb05df98a2f26f026ffe0d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU3NDA5Mg==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r524574092", "bodyText": "Just took another look, so context is pushed first when visit RelationSubquery, should we do analyzer recursion before this? In this way, symbol defined by outer won't be accessible to inner, ex. select ... from (select ... from B) as A, is A accessible when visit subquery B?", "author": "dai-chen", "createdAt": "2020-11-16T21:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjM5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7083bede0169e7827f2bfa2b6bf2aaeb55f80144", "chunk": "diff --git a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/Analyzer.java b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/Analyzer.java\nindex 12d5afc9..d5ddb0ef 100644\n--- a/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/Analyzer.java\n+++ b/core/src/main/java/com/amazon/opendistroforelasticsearch/sql/analysis/Analyzer.java\n\n@@ -121,13 +121,14 @@ public class Analyzer extends AbstractNodeVisitor<LogicalPlan, AnalysisContext>\n \n   @Override\n   public LogicalPlan visitRelationSubquery(RelationSubquery node, AnalysisContext context) {\n+    LogicalPlan subquery = analyze(node.getChild().get(0), context);\n     context.push();\n     TypeEnvironment curEnv = context.peek();\n \n     // Put subquery alias in index namespace so the qualifier can be removed\n     // when analyzing qualified name in the subquery layer\n     curEnv.define(new Symbol(Namespace.INDEX_NAME, node.getAliasAsTableName()), STRUCT);\n-    return analyze(node.getChild().get(0), context);\n+    return subquery;\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTI2Mw==", "url": "https://github.com/opendistro-for-elasticsearch/sql/pull/822#discussion_r523239263", "bodyText": "Is this visit necessary?", "author": "dai-chen", "createdAt": "2020-11-13T21:22:41Z", "path": "sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/context/QuerySpecification.java", "diffHunk": "@@ -170,9 +171,10 @@ public QuerySpecificationCollector(String queryString) {\n     }\n \n     @Override\n-    public Void visitQuerySpecification(QuerySpecificationContext ctx) {\n-      // TODO: avoid collect sub-query\n-      return super.visitQuerySpecification(ctx);\n+    public Void visitSubqueryAsRelation(SubqueryAsRelationContext ctx) {\n+      // skip collecting subquery for current layer\n+      visit(ctx.alias());", "originalCommit": "348b054a2321789a2fb05df98a2f26f026ffe0d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e2d4f241640eda92f80d56376b09757eef24656d", "chunk": "diff --git a/sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/context/QuerySpecification.java b/sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/context/QuerySpecification.java\nindex ecd54f2a..e8bed016 100644\n--- a/sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/context/QuerySpecification.java\n+++ b/sql/src/main/java/com/amazon/opendistroforelasticsearch/sql/sql/parser/context/QuerySpecification.java\n\n@@ -173,7 +173,6 @@ public class QuerySpecification {\n     @Override\n     public Void visitSubqueryAsRelation(SubqueryAsRelationContext ctx) {\n       // skip collecting subquery for current layer\n-      visit(ctx.alias());\n       return null;\n     }\n \n"}}, {"oid": "e2d4f241640eda92f80d56376b09757eef24656d", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/e2d4f241640eda92f80d56376b09757eef24656d", "message": "address comments", "committedDate": "2020-11-13T23:57:11Z", "type": "commit"}, {"oid": "55996732cb6fbc894b73c8a47a139645de3cf454", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/55996732cb6fbc894b73c8a47a139645de3cf454", "message": "address comments", "committedDate": "2020-11-16T20:16:55Z", "type": "commit"}, {"oid": "7083bede0169e7827f2bfa2b6bf2aaeb55f80144", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/7083bede0169e7827f2bfa2b6bf2aaeb55f80144", "message": "put the context push after subquery analysis recursion", "committedDate": "2020-11-16T21:52:50Z", "type": "commit"}, {"oid": "c64a058ec96e15d9b673aa5e36837cad377dc327", "url": "https://github.com/opendistro-for-elasticsearch/sql/commit/c64a058ec96e15d9b673aa5e36837cad377dc327", "message": "Merge remote-tracking branch 'upstream/develop' into from-subquery", "committedDate": "2020-11-17T01:49:46Z", "type": "commit"}]}