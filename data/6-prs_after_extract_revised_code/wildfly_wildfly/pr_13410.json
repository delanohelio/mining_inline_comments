{"pr_number": 13410, "pr_title": "[WFLY-13177] ManagedExecutorService: Wrong activeRequestCount at RequestController on RejectedExecutionException", "pr_createdAt": "2020-07-17T12:42:55Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13410", "timeline": [{"oid": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "url": "https://github.com/wildfly/wildfly/commit/c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "message": "[WFLY-13177] a test-case", "committedDate": "2020-07-21T09:48:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3MzM4Mg==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460273382", "bodyText": "This is ok.", "author": "emmartins", "createdAt": "2020-07-24T20:30:06Z", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {\n+        if (controlPoint == null || callable == null) {\n+            return callable;\n+        }\n+        try {\n+            RunResult result = controlPoint.forceBeginRequest();\n+            if (result == RunResult.REJECTED) {\n+                ROOT_LOGGER.rejectedDueToMaxRequests();", "originalCommit": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88eaf8d43649179ba67255d3d3d1ec56825836af", "chunk": "diff --git a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\nindex 17168721ab..e073c0cf3b 100644\n--- a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n+++ b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n\n@@ -94,7 +94,7 @@ public class ControlPointUtils {\n         try {\n             RunResult result = controlPoint.forceBeginRequest();\n             if (result == RunResult.REJECTED) {\n-                ROOT_LOGGER.rejectedDueToMaxRequests();\n+                throw ROOT_LOGGER.rejectedDueToMaxRequests();\n             }\n             final ControlledCallable controlledCallable = new ControlledCallable(callable, controlPoint);\n             return callable instanceof ManagedTask ? new ControlledManagedCallable(controlledCallable, (ManagedTask) callable) : controlledCallable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NDA4Nw==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460274087", "bodyText": "For exceptions in this line and below, request must be completed since forceBeginRequest succeeded.", "author": "emmartins", "createdAt": "2020-07-24T20:31:46Z", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {\n+        if (controlPoint == null || callable == null) {\n+            return callable;\n+        }\n+        try {\n+            RunResult result = controlPoint.forceBeginRequest();\n+            if (result == RunResult.REJECTED) {\n+                ROOT_LOGGER.rejectedDueToMaxRequests();\n+            }\n+            final ControlledCallable controlledCallable = new ControlledCallable(callable, controlPoint);", "originalCommit": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88eaf8d43649179ba67255d3d3d1ec56825836af", "chunk": "diff --git a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\nindex 17168721ab..e073c0cf3b 100644\n--- a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n+++ b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n\n@@ -94,7 +94,7 @@ public class ControlPointUtils {\n         try {\n             RunResult result = controlPoint.forceBeginRequest();\n             if (result == RunResult.REJECTED) {\n-                ROOT_LOGGER.rejectedDueToMaxRequests();\n+                throw ROOT_LOGGER.rejectedDueToMaxRequests();\n             }\n             final ControlledCallable controlledCallable = new ControlledCallable(callable, controlPoint);\n             return callable instanceof ManagedTask ? new ControlledManagedCallable(controlledCallable, (ManagedTask) callable) : controlledCallable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NDE1NQ==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460274155", "bodyText": "instead of adding a new method you should fix the existent method, any usage of it has the issue", "author": "emmartins", "createdAt": "2020-07-24T20:31:58Z", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java", "diffHunk": "@@ -67,6 +87,24 @@ public static Runnable doWrap(Runnable runnable, ControlPoint controlPoint) {\n         }\n     }\n \n+    public static <T> Callable<T> doWrapOrThrowException(Callable<T> callable, ControlPoint controlPoint) {", "originalCommit": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88eaf8d43649179ba67255d3d3d1ec56825836af", "chunk": "diff --git a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\nindex 17168721ab..e073c0cf3b 100644\n--- a/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n+++ b/ee/src/main/java/org/jboss/as/ee/concurrent/ControlPointUtils.java\n\n@@ -94,7 +94,7 @@ public class ControlPointUtils {\n         try {\n             RunResult result = controlPoint.forceBeginRequest();\n             if (result == RunResult.REJECTED) {\n-                ROOT_LOGGER.rejectedDueToMaxRequests();\n+                throw ROOT_LOGGER.rejectedDueToMaxRequests();\n             }\n             final ControlledCallable controlledCallable = new ControlledCallable(callable, controlPoint);\n             return callable instanceof ManagedTask ? new ControlledManagedCallable(controlledCallable, (ManagedTask) callable) : controlledCallable;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NTI2NQ==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r460275265", "bodyText": "this is not ok, for any exception the request should be completed, not just RejectedException", "author": "emmartins", "createdAt": "2020-07-24T20:34:50Z", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "diffHunk": "@@ -58,17 +60,35 @@ public ManagedExecutorServiceImpl(String name, ManagedThreadFactoryImpl managedT\n \n     @Override\n     public <T> Future<T> submit(Callable<T> task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Callable<T> callable = doWrapOrThrowException(task, controlPoint);\n+        try {", "originalCommit": "c9dd59ef4dd1b69d8cc33fb08a56b0a5cef13ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88eaf8d43649179ba67255d3d3d1ec56825836af", "chunk": "diff --git a/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java b/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\nindex ce2ca42b69..a8506db8ee 100644\n--- a/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\n+++ b/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\n\n@@ -93,7 +92,13 @@ public class ManagedExecutorServiceImpl extends org.glassfish.enterprise.concurr\n \n     @Override\n     public void execute(Runnable command) {\n-        super.execute(doIdentityWrap(doWrap(command, controlPoint)));\n+        final Runnable runnable = doWrapOrThrowException(command, controlPoint);\n+        try {\n+            super.execute(doIdentityWrap(runnable));\n+        } catch (RejectedExecutionException e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n"}}, {"oid": "9a8104b316ffcc79633ee393fabe2568a468300e", "url": "https://github.com/wildfly/wildfly/commit/9a8104b316ffcc79633ee393fabe2568a468300e", "message": "[WFLY-13177] a test-case", "committedDate": "2020-07-23T08:54:48Z", "type": "forcePushed"}, {"oid": "88eaf8d43649179ba67255d3d3d1ec56825836af", "url": "https://github.com/wildfly/wildfly/commit/88eaf8d43649179ba67255d3d3d1ec56825836af", "message": "[WFLY-13177] a test-case", "committedDate": "2020-07-29T10:32:59Z", "type": "forcePushed"}, {"oid": "5d405e05e2f59fab24925cef12ecd932296209d2", "url": "https://github.com/wildfly/wildfly/commit/5d405e05e2f59fab24925cef12ecd932296209d2", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-07-29T11:36:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NzIxNQ==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r462387215", "bodyText": "should be catching Exception here too", "author": "emmartins", "createdAt": "2020-07-29T15:26:40Z", "path": "ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java", "diffHunk": "@@ -58,22 +59,46 @@ public ManagedExecutorServiceImpl(String name, ManagedThreadFactoryImpl managedT\n \n     @Override\n     public <T> Future<T> submit(Callable<T> task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Callable<T> callable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(callable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public <T> Future<T> submit(Runnable task, T result) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)), result);\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable), result);\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public Future<?> submit(Runnable task) {\n-        return super.submit(doIdentityWrap(doWrap(task, controlPoint)));\n+        final Runnable runnable = doWrap(task, controlPoint);\n+        try {\n+            return super.submit(doIdentityWrap(runnable));\n+        } catch (Exception e) {\n+            controlPoint.requestComplete();\n+            throw e;\n+        }\n     }\n \n     @Override\n     public void execute(Runnable command) {\n-        super.execute(doIdentityWrap(doWrap(command, controlPoint)));\n+        final Runnable runnable = doWrap(command, controlPoint);\n+        try {\n+            super.execute(doIdentityWrap(runnable));\n+        } catch (RejectedExecutionException e) {", "originalCommit": "5d405e05e2f59fab24925cef12ecd932296209d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2NzY4NA==", "url": "https://github.com/wildfly/wildfly/pull/13410#discussion_r462967684", "bodyText": "I am sorry I missed this.", "author": "istudens", "createdAt": "2020-07-30T12:42:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4NzIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c369ea4f973203035e809ea23e0d4aa77c786c9a", "chunk": "diff --git a/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java b/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\nindex 974bd6ecbf..c44f735781 100644\n--- a/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\n+++ b/ee/src/main/java/org/jboss/as/ee/concurrent/ManagedExecutorServiceImpl.java\n\n@@ -95,7 +95,7 @@ public class ManagedExecutorServiceImpl extends org.glassfish.enterprise.concurr\n         final Runnable runnable = doWrap(command, controlPoint);\n         try {\n             super.execute(doIdentityWrap(runnable));\n-        } catch (RejectedExecutionException e) {\n+        } catch (Exception e) {\n             controlPoint.requestComplete();\n             throw e;\n         }\n"}}, {"oid": "c369ea4f973203035e809ea23e0d4aa77c786c9a", "url": "https://github.com/wildfly/wildfly/commit/c369ea4f973203035e809ea23e0d4aa77c786c9a", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-07-30T12:42:07Z", "type": "forcePushed"}, {"oid": "0d734a87cf603079eafdb0b85dda33225eabe407", "url": "https://github.com/wildfly/wildfly/commit/0d734a87cf603079eafdb0b85dda33225eabe407", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-07-30T14:01:02Z", "type": "forcePushed"}, {"oid": "0106f31270067f5e9af9cef0dc5562a37e1a1f45", "url": "https://github.com/wildfly/wildfly/commit/0106f31270067f5e9af9cef0dc5562a37e1a1f45", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-08-06T09:24:24Z", "type": "forcePushed"}, {"oid": "85921e79258239eb57c6d303c39e1290d9f59373", "url": "https://github.com/wildfly/wildfly/commit/85921e79258239eb57c6d303c39e1290d9f59373", "message": "[WFLY-13177] fixed up number of active requests in case of RejectedExecutionException thrown by executor", "committedDate": "2020-08-06T09:32:30Z", "type": "commit"}, {"oid": "2bc2e8921e96347830587ac45b2ee0440f9c7598", "url": "https://github.com/wildfly/wildfly/commit/2bc2e8921e96347830587ac45b2ee0440f9c7598", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-08-06T09:32:45Z", "type": "commit"}, {"oid": "2bc2e8921e96347830587ac45b2ee0440f9c7598", "url": "https://github.com/wildfly/wildfly/commit/2bc2e8921e96347830587ac45b2ee0440f9c7598", "message": "[WFLY-13177] test-cases for active request number in case of\nRejectedExecutionException", "committedDate": "2020-08-06T09:32:45Z", "type": "forcePushed"}, {"oid": "56e43f5cb43dd4d606afa5f097654098b490936b", "url": "https://github.com/wildfly/wildfly/commit/56e43f5cb43dd4d606afa5f097654098b490936b", "message": "Merge branch 'master' into WFLY-13177", "committedDate": "2020-08-29T03:09:14Z", "type": "commit"}, {"oid": "5c92d70651da9855cdcecdcff29fb29bfaedee22", "url": "https://github.com/wildfly/wildfly/commit/5c92d70651da9855cdcecdcff29fb29bfaedee22", "message": "Update ManagedExecutorServiceMetricsTestCase.java\n\nRemove trailing spaces introduced in the merge commit.", "committedDate": "2020-08-29T14:19:15Z", "type": "commit"}]}