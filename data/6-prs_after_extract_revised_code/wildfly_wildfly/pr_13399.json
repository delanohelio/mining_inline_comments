{"pr_number": 13399, "pr_title": "[WFLY-13647] Annotation processing error sun.reflect.annotation.TypeNotPresentExceptionProxy does not indicate issue", "pr_createdAt": "2020-07-07T06:43:32Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13399", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNjg0NA==", "url": "https://github.com/wildfly/wildfly/pull/13399#discussion_r452506844", "bodyText": "I suspect we don't need exception handling here. When @Remote @Local is used in a business interface, they do not take any arguments.  The no-arg annotation is to indicate that the annotated business interface is a local or remote business interface.  For ex,\n@Remote \npublic interface Calculator {...}", "author": "chengfang", "createdAt": "2020-07-09T21:43:11Z", "path": "ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/BusinessViewAnnotationProcessor.java", "diffHunk": "@@ -197,12 +211,18 @@ private void processViewAnnotations(final DeploymentUnit deploymentUnit, final C\n         return Arrays.asList(localViews);\n     }\n \n-    private static Collection<Class<?>> getBusinessInterfacesFromInterfaceAnnotations(Class<?> sessionBeanClass, Class<? extends Annotation> annotation) {\n+    private static Collection<Class<?>> getBusinessInterfacesFromInterfaceAnnotations(Class<?> sessionBeanClass, Class<? extends Annotation> annotation) throws DeploymentUnitProcessingException {\n         final Set<Class<?>> potentialBusinessInterfaces = getPotentialBusinessInterfaces(sessionBeanClass);\n         final Set<Class<?>> businessInterfaces = new HashSet<Class<?>>();\n         for (Class<?> iface : potentialBusinessInterfaces) {\n-            if (iface.getAnnotation(annotation) != null) {\n-                businessInterfaces.add(iface);\n+            try {\n+                if (iface.getAnnotation(annotation) != null) {\n+                    businessInterfaces.add(iface);\n+                }\n+            } catch (ArrayStoreException e) {\n+                // https://bugs.openjdk.java.net/browse/JDK-7183985\n+                // Class.findAnnotation() has a bug under JDK < 11 which throws ArrayStoreException\n+                throw EjbLogger.ROOT_LOGGER.missingClassInAnnotation(annotation.getSimpleName(), iface.getName());", "originalCommit": "3bc0b1af46793f70f4404232484178ba86cd143a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYxNTUzMw==", "url": "https://github.com/wildfly/wildfly/pull/13399#discussion_r455615533", "bodyText": "I think it should be good if users do it in correct way(like they should package classes referred by the annotation). :)\nbut what happens if users referred some classes in the business interfaces' Remote annotation by mistake? is it still a valid deployment?", "author": "gaol", "createdAt": "2020-07-16T08:29:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNjg0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgzNjI4OA==", "url": "https://github.com/wildfly/wildfly/pull/13399#discussion_r455836288", "bodyText": "If @Remote or @Local on business interface has param, then it's an application's error, though the spec does not say what should happen in this case. WildFly just ignores the param, which happens after the annotation processing. So to tolerate this type of user errors, it's okay to keep this checking.", "author": "chengfang", "createdAt": "2020-07-16T14:36:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNjg0NA=="}], "type": "inlineReview", "revised_code": {"commit": "d47f0aaef00cfac4cec8a82828b1b65e699ee9c7", "chunk": "diff --git a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/BusinessViewAnnotationProcessor.java b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/BusinessViewAnnotationProcessor.java\nindex ddc9551ffb..1c7cb7f315 100644\n--- a/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/BusinessViewAnnotationProcessor.java\n+++ b/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/BusinessViewAnnotationProcessor.java\n\n@@ -211,18 +197,12 @@ public class BusinessViewAnnotationProcessor implements DeploymentUnitProcessor\n         return Arrays.asList(localViews);\n     }\n \n-    private static Collection<Class<?>> getBusinessInterfacesFromInterfaceAnnotations(Class<?> sessionBeanClass, Class<? extends Annotation> annotation) throws DeploymentUnitProcessingException {\n+    private static Collection<Class<?>> getBusinessInterfacesFromInterfaceAnnotations(Class<?> sessionBeanClass, Class<? extends Annotation> annotation) {\n         final Set<Class<?>> potentialBusinessInterfaces = getPotentialBusinessInterfaces(sessionBeanClass);\n         final Set<Class<?>> businessInterfaces = new HashSet<Class<?>>();\n         for (Class<?> iface : potentialBusinessInterfaces) {\n-            try {\n-                if (iface.getAnnotation(annotation) != null) {\n-                    businessInterfaces.add(iface);\n-                }\n-            } catch (ArrayStoreException e) {\n-                // https://bugs.openjdk.java.net/browse/JDK-7183985\n-                // Class.findAnnotation() has a bug under JDK < 11 which throws ArrayStoreException\n-                throw EjbLogger.ROOT_LOGGER.missingClassInAnnotation(annotation.getSimpleName(), iface.getName());\n+            if (iface.getAnnotation(annotation) != null) {\n+                businessInterfaces.add(iface);\n             }\n         }\n         return businessInterfaces;\n"}}, {"oid": "d47f0aaef00cfac4cec8a82828b1b65e699ee9c7", "url": "https://github.com/wildfly/wildfly/commit/d47f0aaef00cfac4cec8a82828b1b65e699ee9c7", "message": "[WFLY-13647] Annotation processing error sun.reflect.annotation.TypeNotPresentExceptionProxy does not indicate issue\n\n- Fix case of missing classes referenced by HandlesTypes in ServletContainerInitializer\n\nSigned-off-by: Lin Gao <lgao@redhat.com>", "committedDate": "2020-07-21T03:27:54Z", "type": "commit"}, {"oid": "13cb5917abd6e99f60593a24a1abca8de894b9bc", "url": "https://github.com/wildfly/wildfly/commit/13cb5917abd6e99f60593a24a1abca8de894b9bc", "message": "[WFLY-13647] Annotation processing error sun.reflect.annotation.TypeNotPresentExceptionProxy does not indicate issue\n\n- Fix case of missing classes referenced by Remote or Local in session bean\n\nSigned-off-by: Lin Gao <lgao@redhat.com>", "committedDate": "2020-07-21T03:28:47Z", "type": "commit"}, {"oid": "13cb5917abd6e99f60593a24a1abca8de894b9bc", "url": "https://github.com/wildfly/wildfly/commit/13cb5917abd6e99f60593a24a1abca8de894b9bc", "message": "[WFLY-13647] Annotation processing error sun.reflect.annotation.TypeNotPresentExceptionProxy does not indicate issue\n\n- Fix case of missing classes referenced by Remote or Local in session bean\n\nSigned-off-by: Lin Gao <lgao@redhat.com>", "committedDate": "2020-07-21T03:28:47Z", "type": "forcePushed"}]}