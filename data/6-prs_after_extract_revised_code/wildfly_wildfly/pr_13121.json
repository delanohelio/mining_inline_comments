{"pr_number": 13121, "pr_title": "WFLY-13147 Avoid processing deployments multiple times in Weld subsys\u2026", "pr_createdAt": "2020-03-17T10:44:31Z", "pr_url": "https://github.com/wildfly/wildfly/pull/13121", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NTUzNg==", "url": "https://github.com/wildfly/wildfly/pull/13121#discussion_r395875536", "bodyText": "This comment is confusing because for using the example values the code would amount to \"123abc.ear\".endsWith(\"deployment.123abc.ear\") which would never be true.", "author": "bstansberry", "createdAt": "2020-03-20T20:30:39Z", "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java", "diffHunk": "@@ -162,6 +162,14 @@ public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitPro\n                 return;\n             }\n             for (DependencySpec dep : module.getDependencies()) {\n+                if (!(dep instanceof ModuleDependencySpec)) {\n+                    continue;\n+                }\n+                if (deploymentUnits.stream().anyMatch(d -> (((ModuleDependencySpec) dep).getName()).endsWith(d.getName()))) {\n+                    // d.getName() returns deployment.123abc.ear, whereas dep.getName() returns 123abc.ear", "originalCommit": "5b57472f80d59684c69d368283b14e92ace10f05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwODY2OQ==", "url": "https://github.com/wildfly/wildfly/pull/13121#discussion_r396308669", "bodyText": "Oh yea, it's the other way around of course, my bad. Either way, I wasn't planning to keep it here, it was just a temporary explanation of why the matching works based on my debugging...", "author": "manovotn", "createdAt": "2020-03-23T09:22:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NTUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "52af6b598178e57db1ca98dfef3b4adfd4dafaf6", "chunk": "diff --git a/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java b/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\nindex 8ff67db8c4..91ca371bf1 100644\n--- a/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\n+++ b/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\n\n@@ -166,7 +166,7 @@ public class ExternalBeanArchiveProcessor implements DeploymentUnitProcessor {\n                     continue;\n                 }\n                 if (deploymentUnits.stream().anyMatch(d -> (((ModuleDependencySpec) dep).getName()).endsWith(d.getName()))) {\n-                    // d.getName() returns deployment.123abc.ear, whereas dep.getName() returns 123abc.ear\n+                    // dep.getName() returns deployment.123abc.ear, whereas d.getName() returns 123abc.ear\n                     // we want to skip processing this as it will be (or already was) processed as another dep. unit\n                     continue;\n                 }\n"}}, {"oid": "52af6b598178e57db1ca98dfef3b4adfd4dafaf6", "url": "https://github.com/wildfly/wildfly/commit/52af6b598178e57db1ca98dfef3b4adfd4dafaf6", "message": "WFLY-13147 Avoid processing deployments multiple times in Weld subsystem.", "committedDate": "2020-04-07T11:55:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5MTgwMQ==", "url": "https://github.com/wildfly/wildfly/pull/13121#discussion_r404791801", "bodyText": "My only \"maybe\" suggestion is earlier in this method when looping through the DeploymentUnits, built up a Set containing \"deployment.\" + d.getName().  Then here just do a contains check against that set.", "author": "bstansberry", "createdAt": "2020-04-07T13:04:40Z", "path": "weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java", "diffHunk": "@@ -162,6 +162,14 @@ public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitPro\n                 return;\n             }\n             for (DependencySpec dep : module.getDependencies()) {\n+                if (!(dep instanceof ModuleDependencySpec)) {\n+                    continue;\n+                }\n+                if (deploymentUnits.stream().anyMatch(d -> (((ModuleDependencySpec) dep).getName()).endsWith(d.getName()))) {", "originalCommit": "52af6b598178e57db1ca98dfef3b4adfd4dafaf6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "925e0858558fe351a356914031e146f8b5ee3f0b", "chunk": "diff --git a/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java b/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\nindex 91ca371bf1..b11d00029d 100644\n--- a/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\n+++ b/weld/subsystem/src/main/java/org/jboss/as/weld/deployment/processors/ExternalBeanArchiveProcessor.java\n\n@@ -165,8 +169,8 @@ public class ExternalBeanArchiveProcessor implements DeploymentUnitProcessor {\n                 if (!(dep instanceof ModuleDependencySpec)) {\n                     continue;\n                 }\n-                if (deploymentUnits.stream().anyMatch(d -> (((ModuleDependencySpec) dep).getName()).endsWith(d.getName()))) {\n-                    // dep.getName() returns deployment.123abc.ear, whereas d.getName() returns 123abc.ear\n+                if (depUnitNames.contains(((ModuleDependencySpec) dep).getName())) {\n+                    // dep.getName() returns something like deployment.123abc.ear\n                     // we want to skip processing this as it will be (or already was) processed as another dep. unit\n                     continue;\n                 }\n"}}, {"oid": "925e0858558fe351a356914031e146f8b5ee3f0b", "url": "https://github.com/wildfly/wildfly/commit/925e0858558fe351a356914031e146f8b5ee3f0b", "message": "WFLY-13147 Avoid processing deployments multiple times in Weld subsystem.", "committedDate": "2020-04-07T13:50:44Z", "type": "commit"}, {"oid": "925e0858558fe351a356914031e146f8b5ee3f0b", "url": "https://github.com/wildfly/wildfly/commit/925e0858558fe351a356914031e146f8b5ee3f0b", "message": "WFLY-13147 Avoid processing deployments multiple times in Weld subsystem.", "committedDate": "2020-04-07T13:50:44Z", "type": "forcePushed"}]}