{"pr_number": 167, "pr_title": "Refactor WebServer and split behaviour into handlers", "pr_createdAt": "2020-05-27T20:23:02Z", "pr_url": "https://github.com/cryostatio/cryostat/pull/167", "timeline": [{"oid": "6d946e66d242483a83be9e5535a30b823739c4d7", "url": "https://github.com/cryostatio/cryostat/commit/6d946e66d242483a83be9e5535a30b823739c4d7", "message": "Log name of disabled request handlers", "committedDate": "2020-05-28T13:36:34Z", "type": "forcePushed"}, {"oid": "731f4a12db3d3595212e83eb694eb4323978dbcf", "url": "https://github.com/cryostatio/cryostat/commit/731f4a12db3d3595212e83eb694eb4323978dbcf", "message": "Add injected RequestHandlers and module\n\nRequestHandlers interface defines a handler for HTTP requests for\nmodular, pluggable Vertx request handlers. These can be provided by the\nnew RequestHandlersModule and injected into the WebServer to extend its\nfunctionality.", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "ea7148a9ca7ddea4cd00cb00996569c23ab5fef7", "url": "https://github.com/cryostatio/cryostat/commit/ea7148a9ca7ddea4cd00cb00996569c23ab5fef7", "message": "Reimplement /api/v1/clienturl as RequestHandler", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "f95adf0fceb79ff8e5c6d93a201f3d0a525c8a34", "url": "https://github.com/cryostatio/cryostat/commit/f95adf0fceb79ff8e5c6d93a201f3d0a525c8a34", "message": "Reimplement /api/v1/grafana_datasource_url as RequestHandler", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "e60d8f5e24f34f836f39c88f85aee7a66a48f30c", "url": "https://github.com/cryostatio/cryostat/commit/e60d8f5e24f34f836f39c88f85aee7a66a48f30c", "message": "Reimplement /api/v1/grafana_dashboard_url as RequestHandler", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "e2d39605ffcbfbfd8a1349689ee862df499ae175", "url": "https://github.com/cryostatio/cryostat/commit/e2d39605ffcbfbfd8a1349689ee862df499ae175", "message": "Do not apply unavailable handlers", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "c188f4a053157da3df35cd76cfeb5ff87d3687ee", "url": "https://github.com/cryostatio/cryostat/commit/c188f4a053157da3df35cd76cfeb5ff87d3687ee", "message": "Reimplement recording download paths as RequestHandlers", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "687a87dc88ee67a3cad1db7a67a2802acc38d6ea", "url": "https://github.com/cryostatio/cryostat/commit/687a87dc88ee67a3cad1db7a67a2802acc38d6ea", "message": "Reimplement report download paths as RequestHandlers", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "28a90b9489cf05dc70f1645f958db3619dd21eca", "url": "https://github.com/cryostatio/cryostat/commit/28a90b9489cf05dc70f1645f958db3619dd21eca", "message": "Reimplement /api/v1/auth as RequestHandler", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "0315c00cefd0665a32ca63d3947cccd973736ccf", "url": "https://github.com/cryostatio/cryostat/commit/0315c00cefd0665a32ca63d3947cccd973736ccf", "message": "Reimplement POST /api/v1/recordings as RequestHandlers\n\nAlso implement RequestHandler priorities, allowing multiple handlers to\nbe defined for the same method+route while also allowing predictable\nhandler ordering.", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "bd3927cfe7c9f21ecc31bc8020f483984c1b779d", "url": "https://github.com/cryostatio/cryostat/commit/bd3927cfe7c9f21ecc31bc8020f483984c1b779d", "message": "Reimplement web-client assets serving as RequestHandler", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "3a030606cb563d51e7053b22017cd21e62323385", "url": "https://github.com/cryostatio/cryostat/commit/3a030606cb563d51e7053b22017cd21e62323385", "message": "RequestHandlers default to async, and if not, default to ordered execution", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "dbbdf476dff49addcab794efb8336ba6800ad174", "url": "https://github.com/cryostatio/cryostat/commit/dbbdf476dff49addcab794efb8336ba6800ad174", "message": "Remove superfluous utility method", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "c33175c0a6f89e2e6da2c31ee2be21c9334f2dfd", "url": "https://github.com/cryostatio/cryostat/commit/c33175c0a6f89e2e6da2c31ee2be21c9334f2dfd", "message": "If route unavailable, disable rather than not registering", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "e75c48b40f52fc580aadb69f8d98d16ae8750f66", "url": "https://github.com/cryostatio/cryostat/commit/e75c48b40f52fc580aadb69f8d98d16ae8750f66", "message": "Use router order for ensuring handler ordering", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "d51deea557114ce57eca147c48bd9a26017d814c", "url": "https://github.com/cryostatio/cryostat/commit/d51deea557114ce57eca147c48bd9a26017d814c", "message": "Support RequestHandlers applied to all paths\n\nAllows RequestHandler to receive all requests and handle appropriately", "committedDate": "2020-05-28T18:40:04Z", "type": "commit"}, {"oid": "63f2c64a08608ab62c147d47450c669e16be7867", "url": "https://github.com/cryostatio/cryostat/commit/63f2c64a08608ab62c147d47450c669e16be7867", "message": "Log name of disabled request handlers", "committedDate": "2020-05-28T18:40:04Z", "type": "forcePushed"}, {"oid": "1ab46b2a749896cf91e479934ebf6f0ae94db653", "url": "https://github.com/cryostatio/cryostat/commit/1ab46b2a749896cf91e479934ebf6f0ae94db653", "message": "Log name of disabled request handlers", "committedDate": "2020-05-28T19:56:13Z", "type": "forcePushed"}, {"oid": "7efeb37f5313c0030a8840c23643cb6e8acc062a", "url": "https://github.com/cryostatio/cryostat/commit/7efeb37f5313c0030a8840c23643cb6e8acc062a", "message": "Implement CORS handling as RequestHandler", "committedDate": "2020-05-29T14:28:40Z", "type": "commit"}, {"oid": "34a10ac282a3debfe868a05e54b20d0ecd4f3a26", "url": "https://github.com/cryostatio/cryostat/commit/34a10ac282a3debfe868a05e54b20d0ecd4f3a26", "message": "Log name of disabled request handlers", "committedDate": "2020-05-29T14:28:40Z", "type": "commit"}, {"oid": "79ca92beb49cbf8c142011c67a953be97db3da75", "url": "https://github.com/cryostatio/cryostat/commit/79ca92beb49cbf8c142011c67a953be97db3da75", "message": "Remove ResponseUtils", "committedDate": "2020-05-29T16:00:39Z", "type": "forcePushed"}, {"oid": "55277e2af364d6db04ba50cb92b89cd278bcc756", "url": "https://github.com/cryostatio/cryostat/commit/55277e2af364d6db04ba50cb92b89cd278bcc756", "message": "Remove ResponseUtils", "committedDate": "2020-05-29T21:16:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgxNzQ1Ng==", "url": "https://github.com/cryostatio/cryostat/pull/167#discussion_r434817456", "bodyText": "Could this reuse the super implementation? Aside from the 200 response.", "author": "ebaron", "createdAt": "2020-06-03T19:54:32Z", "path": "src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/AuthPostHandler.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.net.web.handlers;\n+\n+import javax.inject.Inject;\n+\n+import com.redhat.rhjmc.containerjfr.net.AuthManager;\n+\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.impl.HttpStatusException;\n+\n+class AuthPostHandler extends AbstractAuthenticatedRequestHandler {\n+\n+    @Inject\n+    AuthPostHandler(AuthManager auth) {\n+        super(auth);\n+    }\n+\n+    @Override\n+    public HttpMethod httpMethod() {\n+        return HttpMethod.POST;\n+    }\n+\n+    @Override\n+    public String path() {\n+        return \"/api/v1/auth\";\n+    }\n+\n+    @Override\n+    public void handle(RoutingContext ctx) {\n+        boolean authd = false;\n+        try {\n+            authd = validateRequestAuthorization(ctx.request()).get();\n+        } catch (Exception e) {\n+            throw new HttpStatusException(500, e);\n+        }\n+        if (authd) {\n+            ctx.response().setStatusCode(200);\n+            ctx.response().end();\n+        } else {\n+            throw new HttpStatusException(401);\n+        }\n+    }", "originalCommit": "55277e2af364d6db04ba50cb92b89cd278bcc756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5cc864570954d07628e7cb797033d355e8e677a2", "chunk": "diff --git a/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/AuthPostHandler.java b/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/AuthPostHandler.java\nindex f48484e..dc27c73 100644\n--- a/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/AuthPostHandler.java\n+++ b/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/AuthPostHandler.java\n\n@@ -47,7 +47,6 @@ import com.redhat.rhjmc.containerjfr.net.AuthManager;\n \n import io.vertx.core.http.HttpMethod;\n import io.vertx.ext.web.RoutingContext;\n-import io.vertx.ext.web.handler.impl.HttpStatusException;\n \n class AuthPostHandler extends AbstractAuthenticatedRequestHandler {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgzNTA5Nw==", "url": "https://github.com/cryostatio/cryostat/pull/167#discussion_r434835097", "bodyText": "Could you use the new HttpMimeType enum here?", "author": "ebaron", "createdAt": "2020-06-03T20:29:45Z", "path": "src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetRecordingGetHandler.java", "diffHunk": "@@ -0,0 +1,257 @@\n+/*-\n+ * #%L\n+ * Container JFR\n+ * %%\n+ * Copyright (C) 2020 Red Hat, Inc.\n+ * %%\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to any\n+ * person obtaining a copy of this software, associated documentation and/or data\n+ * (collectively the \"Software\"), free of charge and under any and all copyright\n+ * rights in the Software, and any and all patent rights owned or freely\n+ * licensable by each licensor hereunder covering either (i) the unmodified\n+ * Software as contributed to or provided by such licensor, or (ii) the Larger\n+ * Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ * (b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\n+ * one is included with the Software (each a \"Larger Work\" to which the Software\n+ * is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy, create\n+ * derivative works of, display, perform, and distribute the Software and make,\n+ * use, sell, offer for sale, import, export, have made, and have sold the\n+ * Software and the Larger Work(s), and to sublicense the foregoing rights on\n+ * either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ * The above copyright notice and either this complete permission notice or at\n+ * a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ * #L%\n+ */\n+package com.redhat.rhjmc.containerjfr.net.web.handlers;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import javax.inject.Inject;\n+\n+import org.openjdk.jmc.rjmx.services.jfr.IRecordingDescriptor;\n+\n+import com.redhat.rhjmc.containerjfr.core.log.Logger;\n+import com.redhat.rhjmc.containerjfr.core.net.JFRConnection;\n+import com.redhat.rhjmc.containerjfr.core.sys.Environment;\n+import com.redhat.rhjmc.containerjfr.net.AuthManager;\n+import com.redhat.rhjmc.containerjfr.net.TargetConnectionManager;\n+import com.redhat.rhjmc.containerjfr.net.web.WebServer.DownloadDescriptor;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.HttpHeaders;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpServerResponse;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.impl.HttpStatusException;\n+\n+class TargetRecordingGetHandler extends AbstractAuthenticatedRequestHandler {\n+    static final String MIME_TYPE_OCTET_STREAM = \"application/octet-stream\";", "originalCommit": "55277e2af364d6db04ba50cb92b89cd278bcc756", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "08e08c987838e02f12ca8bc7d329e849c861cedd", "chunk": "diff --git a/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetRecordingGetHandler.java b/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetRecordingGetHandler.java\nindex 5ca293d..2bffde0 100644\n--- a/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetRecordingGetHandler.java\n+++ b/src/main/java/com/redhat/rhjmc/containerjfr/net/web/handlers/TargetRecordingGetHandler.java\n\n@@ -59,6 +59,7 @@ import com.redhat.rhjmc.containerjfr.core.net.JFRConnection;\n import com.redhat.rhjmc.containerjfr.core.sys.Environment;\n import com.redhat.rhjmc.containerjfr.net.AuthManager;\n import com.redhat.rhjmc.containerjfr.net.TargetConnectionManager;\n+import com.redhat.rhjmc.containerjfr.net.web.HttpMimeType;\n import com.redhat.rhjmc.containerjfr.net.web.WebServer.DownloadDescriptor;\n \n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n"}}, {"oid": "08e08c987838e02f12ca8bc7d329e849c861cedd", "url": "https://github.com/cryostatio/cryostat/commit/08e08c987838e02f12ca8bc7d329e849c861cedd", "message": "Remove ResponseUtils", "committedDate": "2020-06-04T14:11:39Z", "type": "commit"}, {"oid": "08e08c987838e02f12ca8bc7d329e849c861cedd", "url": "https://github.com/cryostatio/cryostat/commit/08e08c987838e02f12ca8bc7d329e849c861cedd", "message": "Remove ResponseUtils", "committedDate": "2020-06-04T14:11:39Z", "type": "forcePushed"}, {"oid": "5cc864570954d07628e7cb797033d355e8e677a2", "url": "https://github.com/cryostatio/cryostat/commit/5cc864570954d07628e7cb797033d355e8e677a2", "message": "Refactor AuthPostHandler to use super implementation", "committedDate": "2020-06-04T14:16:19Z", "type": "commit"}]}