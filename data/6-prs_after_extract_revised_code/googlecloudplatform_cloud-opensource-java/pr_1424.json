{"pr_number": 1424, "pr_title": "CycleBreakerGraphTransformer to avoid checking children of a node twice", "pr_createdAt": "2020-05-28T18:00:41Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424", "timeline": [{"oid": "a5bc1d2c297389f192b2345853588c4786c4deea", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a5bc1d2c297389f192b2345853588c4786c4deea", "message": "Not to visit the same node twice", "committedDate": "2020-05-28T17:54:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432091733", "bodyText": "you only call put and never get, so this is probably not the simplest data structure we could use here. Maybe a Set?", "author": "elharo", "createdAt": "2020-05-28T20:02:54Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -52,6 +55,11 @@ private static void removeCycle(\n       return;\n     }\n \n+    if (visited.put(node, true) != null) {", "originalCommit": "a5bc1d2c297389f192b2345853588c4786c4deea", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMDMwMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432110300", "bodyText": "I wish I have Set for object identity. JRE does not provide IdentityHashSet.", "author": "suztomo", "createdAt": "2020-05-28T20:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjExMTUzNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432111536", "bodyText": "https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#newSetFromMap-java.util.Map- may work. Let me try this.", "author": "suztomo", "createdAt": "2020-05-28T20:42:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA5MTczMw=="}], "type": "inlineReview", "revised_code": {"commit": "c6624783b41a4a700d6c96896390851b4a12e196", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\nindex f16df09c..d36f27b4 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\n\n@@ -55,16 +55,19 @@ final class CycleBreakerGraphTransformer implements DependencyGraphTransformer {\n       return;\n     }\n \n-    if (visited.put(node, true) != null) {\n-      // No need to check the children of this node because we visited this node already\n-      return;\n+    if (shouldCheckChildren(node)) {\n+      ancestors.add(artifact);\n+      for (DependencyNode child : node.getChildren()) {\n+        removeCycle(node, child, ancestors);\n+      }\n+      ancestors.remove(artifact);\n     }\n+  }\n \n-    ancestors.add(artifact);\n-    for (DependencyNode child : node.getChildren()) {\n-      removeCycle(node, child, ancestors);\n-    }\n-    ancestors.remove(artifact);\n+  /** Returns true if {@code node} is not visited yet and marks the node as visited. */\n+  @VisibleForTesting\n+  boolean shouldCheckChildren(DependencyNode node) {\n+    return visitedNodes.add(node);\n   }\n \n   private static void removeChildFromParent(DependencyNode child, DependencyNode parent) {\n"}}, {"oid": "c6624783b41a4a700d6c96896390851b4a12e196", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c6624783b41a4a700d6c96896390851b4a12e196", "message": "DependencyNode does not need IdentityHashMap", "committedDate": "2020-05-28T21:44:19Z", "type": "commit"}, {"oid": "bd72fecb9fb6bdc7d92af2b8432cd9261186d8fc", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/bd72fecb9fb6bdc7d92af2b8432cd9261186d8fc", "message": "shouldVisitChildren", "committedDate": "2020-05-28T21:45:18Z", "type": "commit"}, {"oid": "0f088615dfdef3b6fb3ceda25db32d8e89731cb9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/0f088615dfdef3b6fb3ceda25db32d8e89731cb9", "message": "Merge branch 'master' into cycle_breaking_uniqueness", "committedDate": "2020-05-29T14:13:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNzE0MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432527140", "bodyText": "True for now but this is risky. DependencyNode is an interface, not a class. This could change.", "author": "elharo", "createdAt": "2020-05-29T14:31:46Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java", "diffHunk": "@@ -33,6 +34,9 @@\n  */\n final class CycleBreakerGraphTransformer implements DependencyGraphTransformer {\n \n+  // DependencyNode inherits Object's equality. No two instances are equal to each other.", "originalCommit": "0f088615dfdef3b6fb3ceda25db32d8e89731cb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2MjAzMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1424#discussion_r432662032", "bodyText": "Good point. Updated to use a set based on IdentityHashMap.", "author": "suztomo", "createdAt": "2020-05-29T18:25:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUyNzE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "6eff8606818089d292652688169ea777dbdd5c51", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\nindex 95134202..71106ad1 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/CycleBreakerGraphTransformer.java\n\n@@ -34,8 +36,8 @@ import org.eclipse.aether.graph.DependencyNode;\n  */\n final class CycleBreakerGraphTransformer implements DependencyGraphTransformer {\n \n-  // DependencyNode inherits Object's equality. No two instances are equal to each other.\n-  private Set<DependencyNode> visitedNodes = new HashSet<>();\n+  private final Set<DependencyNode> visitedNodes =\n+      Collections.newSetFromMap(new IdentityHashMap<>());\n \n   @Override\n   public DependencyNode transformGraph(\n"}}, {"oid": "e9b1ad0a55ca6fea0260fdf7309b4ba2a4e91d5b", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e9b1ad0a55ca6fea0260fdf7309b4ba2a4e91d5b", "message": "Merge remote-tracking branch 'origin/master' into cycle_breaking_uniqueness", "committedDate": "2020-05-29T18:20:53Z", "type": "commit"}, {"oid": "6eff8606818089d292652688169ea777dbdd5c51", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/6eff8606818089d292652688169ea777dbdd5c51", "message": "Set based on IdentityHashMap", "committedDate": "2020-05-29T18:22:43Z", "type": "commit"}, {"oid": "f37f736deff63cc21036bbe27f01d4be9eddff74", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f37f736deff63cc21036bbe27f01d4be9eddff74", "message": "Merge branch 'cycle_breaking_uniqueness' of https://github.com/GoogleCloudPlatform/cloud-opensource-java into cycle_breaking_uniqueness", "committedDate": "2020-05-29T18:23:03Z", "type": "commit"}]}