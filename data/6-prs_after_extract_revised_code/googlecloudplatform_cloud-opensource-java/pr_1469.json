{"pr_number": 1469, "pr_title": "Build dependency graph without optional dependencies", "pr_createdAt": "2020-06-12T13:31:56Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469", "timeline": [{"oid": "a37ffaf824dbdb19faad6889f4c71ca0ce317fc7", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a37ffaf824dbdb19faad6889f4c71ca0ce317fc7", "message": "add test to expose current behavior arond optional dependencies", "committedDate": "2020-06-11T16:28:36Z", "type": "commit"}, {"oid": "52c86b7ca2bd9fcb4521c5c3baf59fff52e54d07", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/52c86b7ca2bd9fcb4521c5c3baf59fff52e54d07", "message": "add test for direct optional dependency", "committedDate": "2020-06-11T16:35:32Z", "type": "commit"}, {"oid": "cd15786b046acad11e0d173477799191ec5f4f57", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/cd15786b046acad11e0d173477799191ec5f4f57", "message": "Merge branch 'master' into opt", "committedDate": "2020-06-12T12:49:12Z", "type": "commit"}, {"oid": "89410742ed5716b272dbbb0304917d8bf72316ed", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/89410742ed5716b272dbbb0304917d8bf72316ed", "message": "add method to get a dependency graph with multiple versions and without transitive optional dependencies", "committedDate": "2020-06-12T13:28:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzMjQ2Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469#discussion_r439432467", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * provided dependencies. t does includes direct optional dependencies of the root node but not\n          \n          \n            \n               * provided dependencies. It does include direct optional dependencies of the root node but not", "author": "suztomo", "createdAt": "2020-06-12T13:54:12Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -137,6 +137,25 @@ public DependencyGraph buildFullDependencyGraph(List<Artifact> artifacts) {\n     DefaultRepositorySystemSession session = RepositoryUtility.newSessionForFullDependency(system);\n     return buildDependencyGraph(dependencyNodes, session);\n   }\n+  \n+  /**\n+   * Finds the full compile time, transitive dependency graph including conflicting versions and\n+   * provided dependencies. t does includes direct optional dependencies of the root node but not", "originalCommit": "89410742ed5716b272dbbb0304917d8bf72316ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ2MjM0OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469#discussion_r439462349", "bodyText": "fixed", "author": "elharo", "createdAt": "2020-06-12T14:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzMjQ2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "349ccbf13ad1a15d30a7ab0cce399957c018c9d1", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\nindex 5cf006cf..ca268b99 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n\n@@ -140,7 +140,7 @@ public final class DependencyGraphBuilder {\n   \n   /**\n    * Finds the full compile time, transitive dependency graph including conflicting versions and\n-   * provided dependencies. t does includes direct optional dependencies of the root node but not\n+   * provided dependencies. This includes direct optional dependencies of the root node but not\n    * optional dependencies of transitive dependencies.\n    *\n    * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzNTMzOQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469#discussion_r439435339", "bodyText": "I feel \"verbose\" sounds strange. But I don't think of better one. Good for now.", "author": "suztomo", "createdAt": "2020-06-12T13:58:17Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -137,6 +137,25 @@ public DependencyGraph buildFullDependencyGraph(List<Artifact> artifacts) {\n     DefaultRepositorySystemSession session = RepositoryUtility.newSessionForFullDependency(system);\n     return buildDependencyGraph(dependencyNodes, session);\n   }\n+  \n+  /**\n+   * Finds the full compile time, transitive dependency graph including conflicting versions and\n+   * provided dependencies. t does includes direct optional dependencies of the root node but not\n+   * optional dependencies of transitive dependencies.\n+   *\n+   * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n+   * incomplete graph. Each node's dependencies are resolved recursively. The scope of a dependency\n+   * does not affect the scope of its children's dependencies. Provided and optional dependencies\n+   * are not treated differently than any other dependency.\n+   *\n+   * @param dependency the root\n+   * @return the graph as built by Maven before dependency mediation\n+   */\n+  DependencyGraph buildVerboseDependencyGraph(Dependency dependency) {", "originalCommit": "89410742ed5716b272dbbb0304917d8bf72316ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "349ccbf13ad1a15d30a7ab0cce399957c018c9d1", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\nindex 5cf006cf..ca268b99 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n\n@@ -140,7 +140,7 @@ public final class DependencyGraphBuilder {\n   \n   /**\n    * Finds the full compile time, transitive dependency graph including conflicting versions and\n-   * provided dependencies. t does includes direct optional dependencies of the root node but not\n+   * provided dependencies. This includes direct optional dependencies of the root node but not\n    * optional dependencies of transitive dependencies.\n    *\n    * <p>In the event of I/O errors, missing artifacts, and other problems, it can return an\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzNzUzMQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469#discussion_r439437531", "bodyText": "Truth.assertThat(paths).containsNoDuplicates();", "author": "suztomo", "createdAt": "2020-06-12T14:01:42Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java", "diffHunk": "@@ -115,6 +131,22 @@ public void testGetCompleteDependencies() {\n     int guavaCount = countArtifactId(graph, \"guava\");\n     Assert.assertEquals(29, guavaCount);\n   }\n+  \n+  @Test\n+  public void testGetVerboseDependencies() {\n+    Dependency dependency = new Dependency(datastore, \"compile\");\n+    DependencyGraph graph = dependencyGraphBuilder.buildVerboseDependencyGraph(dependency);\n+    List<DependencyPath> paths = graph.list();\n+    Assert.assertTrue(paths.size() > 10);\n+\n+    // verify we didn't double count anything\n+    HashSet<DependencyPath> noDups = new HashSet<>(paths);\n+    Assert.assertEquals(paths.size(), noDups.size());", "originalCommit": "89410742ed5716b272dbbb0304917d8bf72316ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ2MzM5OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1469#discussion_r439463398", "bodyText": "neat, done", "author": "elharo", "createdAt": "2020-06-12T14:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQzNzUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "349ccbf13ad1a15d30a7ab0cce399957c018c9d1", "chunk": "diff --git a/dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java b/dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java\nindex de7e70b6..2e2eb5cd 100644\n--- a/dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java\n+++ b/dependencies/src/test/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilderTest.java\n\n@@ -124,8 +124,7 @@ public class DependencyGraphBuilderTest {\n     Assert.assertTrue(paths.size() > 10);\n \n     // verify we didn't double count anything\n-    HashSet<DependencyPath> noDups = new HashSet<>(paths);\n-    Assert.assertEquals(paths.size(), noDups.size());\n+    Truth.assertThat(paths).containsNoDuplicates();\n \n     // This method should find Guava multiple times, respecting exclusion elements\n     int guavaCount = countArtifactId(graph, \"guava\");\n"}}, {"oid": "349ccbf13ad1a15d30a7ab0cce399957c018c9d1", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/349ccbf13ad1a15d30a7ab0cce399957c018c9d1", "message": "code review", "committedDate": "2020-06-12T14:45:52Z", "type": "commit"}, {"oid": "4a543105536b073d4eb34612591db6729e8010b6", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/4a543105536b073d4eb34612591db6729e8010b6", "message": "Merge branch 'master' into opt", "committedDate": "2020-06-12T15:16:55Z", "type": "commit"}, {"oid": "7b72465d48ffbc5325413012471cfe9d05b9fded", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/7b72465d48ffbc5325413012471cfe9d05b9fded", "message": "unused import", "committedDate": "2020-06-12T15:48:39Z", "type": "commit"}]}