{"pr_number": 1178, "pr_title": "Linkage Monitor not to show stacktrace when it finds new errors", "pr_createdAt": "2020-02-03T15:15:57Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1178", "timeline": [{"oid": "f5aa2f8c7ced6d228fb9c74d284eba8ab17c4939", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f5aa2f8c7ced6d228fb9c74d284eba8ab17c4939", "message": "Exit 1 at main", "committedDate": "2020-02-03T14:26:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE3MDg4MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1178#discussion_r374170881", "bodyText": "This fixes the immediate issue. Looking at this now though, I don't think this should be an exception at all. It is not an exceptional or unexpected condition, anymore than a compiler noticing a syntax error would be. We might want to change this to a return value as a list of linkage errors or some such thing.", "author": "elharo", "createdAt": "2020-02-03T15:34:07Z", "path": "linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java", "diffHunk": "@@ -93,7 +93,12 @@ public static void main(String[] arguments)\n     String bomCoordinates = arguments[0];\n     List<String> coordinatesElements = Splitter.on(':').splitToList(bomCoordinates);\n \n-    new LinkageMonitor().run(coordinatesElements.get(0), coordinatesElements.get(1));\n+    try {\n+      new LinkageMonitor().run(coordinatesElements.get(0), coordinatesElements.get(1));\n+    } catch (LinkageMonitorException ex) {", "originalCommit": "f5aa2f8c7ced6d228fb9c74d284eba8ab17c4939", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MDQ4OA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1178#discussion_r374190488", "bodyText": "Updated LinkageMonitor.run to return new problems.", "author": "suztomo", "createdAt": "2020-02-03T16:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE3MDg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "76a506567878c6f8445468e74fed652ff5b2b2a8", "chunk": "diff --git a/linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java b/linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java\nindex d30e88c8..311f8d9a 100644\n--- a/linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java\n+++ b/linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java\n\n@@ -93,11 +93,15 @@ public class LinkageMonitor {\n     String bomCoordinates = arguments[0];\n     List<String> coordinatesElements = Splitter.on(':').splitToList(bomCoordinates);\n \n-    try {\n-      new LinkageMonitor().run(coordinatesElements.get(0), coordinatesElements.get(1));\n-    } catch (LinkageMonitorException ex) {\n-      logger.severe(ex.getMessage());\n+    Set<SymbolProblem> newSymbolProblems =\n+        new LinkageMonitor().run(coordinatesElements.get(0), coordinatesElements.get(1));\n+    int errorSize = newSymbolProblems.size();\n+    if (errorSize > 0) {\n+      logger.severe(\n+          String.format(\"Found %d new linkage error%s\", errorSize, errorSize > 1 ? \"s\" : \"\"));\n       System.exit(1); // notify CI tools of the failure\n+    } else {\n+      logger.info(\"No new problem found\");\n     }\n   }\n \n"}}, {"oid": "76a506567878c6f8445468e74fed652ff5b2b2a8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/76a506567878c6f8445468e74fed652ff5b2b2a8", "message": "LinkageMonitor.run to return new problems", "committedDate": "2020-02-03T16:04:20Z", "type": "commit"}, {"oid": "f4b034f5f313c2cc5510aa815adca3c388fb35f0", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f4b034f5f313c2cc5510aa815adca3c388fb35f0", "message": "Removed LinkageMonitorException", "committedDate": "2020-02-03T16:05:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MTA1NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1178#discussion_r374191054", "bodyText": "Now LinkageMonitorException is unused.", "author": "suztomo", "createdAt": "2020-02-03T16:07:09Z", "path": "linkage-monitor/src/main/java/com/google/cloud/tools/dependencies/linkagemonitor/LinkageMonitor.java", "diffHunk": "@@ -82,8 +82,7 @@\n       findLocalArtifacts(repositorySystem, session, Paths.get(\".\").toAbsolutePath());\n \n   public static void main(String[] arguments)\n-      throws RepositoryException, IOException, LinkageMonitorException, MavenRepositoryException,\n-          ModelBuildingException {\n+      throws RepositoryException, IOException, MavenRepositoryException, ModelBuildingException {", "originalCommit": "f4b034f5f313c2cc5510aa815adca3c388fb35f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "f9f339437acb4b6131580dafdaa94539b0dab0ba", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f9f339437acb4b6131580dafdaa94539b0dab0ba", "message": "Merge remote-tracking branch 'origin/master' into linkagemonitor_exit", "committedDate": "2020-02-03T16:41:53Z", "type": "commit"}]}