{"pr_number": 1607, "pr_title": "Linkage Checker to verify method references to JRE classes", "pr_createdAt": "2020-08-19T01:32:36Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607", "timeline": [{"oid": "ab53f2ee0bbdaf1f4f14a56845176fea9ccede69", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/ab53f2ee0bbdaf1f4f14a56845176fea9ccede69", "message": "Validate system class in target", "committedDate": "2020-08-19T01:12:14Z", "type": "commit"}, {"oid": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "message": "GraalVM references in exclusion rule", "committedDate": "2020-08-19T01:22:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2MzE5Mw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472663193", "bodyText": "This is Kristen's finding yesterday.", "author": "suztomo", "createdAt": "2020-08-19T04:05:39Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java", "diffHunk": "@@ -1120,4 +1120,24 @@ public void testFindLinkageProblems_grpcAndGuava() throws IOException {\n                 \"has class binary name\"))\n         .contains(\"io.grpc.internal.DnsNameResolver\");\n   }\n+\n+  @Test\n+  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n+    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8\n+    // https://github.com/protocolbuffers/protobuf/issues/7827", "originalCommit": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "chunk": "diff --git a/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java b/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\nindex 9f51a050..5091c69b 100644\n--- a/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\n+++ b/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\n\n@@ -1122,8 +1122,8 @@ public class LinkageCheckerTest {\n   }\n \n   @Test\n-  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n-    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8\n+  public void testFindLinkageProblems_referenceToJava11Method() throws IOException {\n+    // protobuf-java 3.12.4 references a Java 11 method that does not exist in Java 8\n     // https://github.com/protocolbuffers/protobuf/issues/7827\n     ImmutableList<ClassPathEntry> jars =\n         TestHelper.resolve(\"com.google.protobuf:protobuf-java:3.12.4\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2NDM1Ng==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472664356", "bodyText": "This was hiding the protobuf's linkage error against Java 8 runtime protocolbuffers/protobuf#7827", "author": "suztomo", "createdAt": "2020-08-19T04:07:38Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,14 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {", "originalCommit": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\nindex ee955216..701cdc80 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n\n@@ -240,13 +240,10 @@ public class LinkageChecker {\n     String methodName = symbol.getName();\n \n     if (ClassDumper.isArrayClass(targetClassName)) {\n-      return Optional.empty();\n-    }\n-    // Skip references from Java runtime class. For example, java.lang.String.\n-    // It is possible for wrongly configured Java compiler to generate bad byte code that references\n-    // nonexistent method references for Java 8. For example case, see\n-    // https://github.com/protocolbuffers/protobuf/issues/7827.\n-    if (classDumper.isSystemClass(sourceClassName)) {\n+      // Skip references to array class. However, we want to check other JDK-provided classes,\n+      // because it is possible for wrongly configured Java compiler to generate bad byte code that\n+      // references methods that does not exist in Java 8. For example case, see\n+      // https://github.com/protocolbuffers/protobuf/issues/7827.\n       return Optional.empty();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDAyMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472990020", "bodyText": "I'm not sure lines 246-248 explain this code. It explains what we're not doing, not what we are. I suggest deleting them.", "author": "elharo", "createdAt": "2020-08-19T12:27:47Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,14 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      return Optional.empty();\n+    }\n+    // Skip references from Java runtime class. For example, java.lang.String.\n+    // It is possible for wrongly configured Java compiler to generate bad byte code that references", "originalCommit": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNTI3MQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473005271", "bodyText": "Removed this if-statement and moved the explanation to array class skipping.", "author": "suztomo", "createdAt": "2020-08-19T12:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDAyMA=="}], "type": "inlineReview", "revised_code": {"commit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\nindex ee955216..701cdc80 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n\n@@ -240,13 +240,10 @@ public class LinkageChecker {\n     String methodName = symbol.getName();\n \n     if (ClassDumper.isArrayClass(targetClassName)) {\n-      return Optional.empty();\n-    }\n-    // Skip references from Java runtime class. For example, java.lang.String.\n-    // It is possible for wrongly configured Java compiler to generate bad byte code that references\n-    // nonexistent method references for Java 8. For example case, see\n-    // https://github.com/protocolbuffers/protobuf/issues/7827.\n-    if (classDumper.isSystemClass(sourceClassName)) {\n+      // Skip references to array class. However, we want to check other JDK-provided classes,\n+      // because it is possible for wrongly configured Java compiler to generate bad byte code that\n+      // references methods that does not exist in Java 8. For example case, see\n+      // https://github.com/protocolbuffers/protobuf/issues/7827.\n       return Optional.empty();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDg1Nw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r472990857", "bodyText": "protobuf-java 3.12.4 references a Java 11 method that does not exist in Java 8", "author": "elharo", "createdAt": "2020-08-19T12:29:18Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java", "diffHunk": "@@ -1120,4 +1120,24 @@ public void testFindLinkageProblems_grpcAndGuava() throws IOException {\n                 \"has class binary name\"))\n         .contains(\"io.grpc.internal.DnsNameResolver\");\n   }\n+\n+  @Test\n+  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n+    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8", "originalCommit": "a8a1571176ed9b8b48d9d698c9a56f2527bd878f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNDkyOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473004928", "bodyText": "Updated.", "author": "suztomo", "createdAt": "2020-08-19T12:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk5MDg1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "chunk": "diff --git a/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java b/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\nindex 9f51a050..5091c69b 100644\n--- a/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\n+++ b/dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/LinkageCheckerTest.java\n\n@@ -1122,8 +1122,8 @@ public class LinkageCheckerTest {\n   }\n \n   @Test\n-  public void testFindLinkageProblems_referenceToNonexistentMethodForJava8() throws IOException {\n-    // Protobuf-java 3.12.4 contained wrong byte code to reference non-existent method in JRE 1.8\n+  public void testFindLinkageProblems_referenceToJava11Method() throws IOException {\n+    // protobuf-java 3.12.4 references a Java 11 method that does not exist in Java 8\n     // https://github.com/protocolbuffers/protobuf/issues/7827\n     ImmutableList<ClassPathEntry> jars =\n         TestHelper.resolve(\"com.google.protobuf:protobuf-java:3.12.4\");\n"}}, {"oid": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "message": "Applied review", "committedDate": "2020-08-19T12:52:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDM1NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473234355", "bodyText": "will we catch a reference to an array of a missing class?", "author": "elharo", "createdAt": "2020-08-19T18:22:59Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/ClassDumper.java", "diffHunk": "@@ -126,8 +126,7 @@ JavaClass loadJavaClass(String className) throws ClassNotFoundException {\n   /** Returns true if {@code className} is available in the system class loader. */\n   boolean isSystemClass(String className) {\n     try {\n-      if (className.startsWith(\"[\")) {\n-        // Array class\n+      if (isArrayClass(className)) {", "originalCommit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0MDI4OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473240289", "bodyText": "Yes, but not from array class reference. When there's a reference to array of a class, there should be a reference to the class in the same class file.", "author": "suztomo", "createdAt": "2020-08-19T18:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDM1NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDg4NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473234885", "bodyText": "delete this comment. It describes what the code is not doing.", "author": "elharo", "createdAt": "2020-08-19T18:23:58Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java", "diffHunk": "@@ -239,8 +239,11 @@ private boolean problemFilter(LinkageProblem linkageProblem) {\n     String targetClassName = symbol.getClassBinaryName();\n     String methodName = symbol.getName();\n \n-    // Skip references to Java runtime class. For example, java.lang.String.\n-    if (classDumper.isSystemClass(targetClassName)) {\n+    if (ClassDumper.isArrayClass(targetClassName)) {\n+      // Skip references to array class. However, we want to check other JDK-provided classes,", "originalCommit": "a36b4521d179b1dd9e2f54e4c2eca1749b59c826", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI0MDYyOA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1607#discussion_r473240628", "bodyText": "Removed.", "author": "suztomo", "createdAt": "2020-08-19T18:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNDg4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "f0f81dc3b790ffc17424727de704782be160a8d9", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\nindex 701cdc80..411c876c 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/classpath/LinkageChecker.java\n\n@@ -240,10 +240,6 @@ public class LinkageChecker {\n     String methodName = symbol.getName();\n \n     if (ClassDumper.isArrayClass(targetClassName)) {\n-      // Skip references to array class. However, we want to check other JDK-provided classes,\n-      // because it is possible for wrongly configured Java compiler to generate bad byte code that\n-      // references methods that does not exist in Java 8. For example case, see\n-      // https://github.com/protocolbuffers/protobuf/issues/7827.\n       return Optional.empty();\n     }\n \n"}}, {"oid": "f0f81dc3b790ffc17424727de704782be160a8d9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f0f81dc3b790ffc17424727de704782be160a8d9", "message": "Removing irrelevant comment", "committedDate": "2020-08-19T18:34:35Z", "type": "commit"}, {"oid": "8199078801f2bc7358a3a15e3c62197d1ad1e77d", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8199078801f2bc7358a3a15e3c62197d1ad1e77d", "message": "Merge remote-tracking branch 'origin/master' into protobuf-3.12.4", "committedDate": "2020-08-19T18:34:54Z", "type": "commit"}, {"oid": "8a9dca356b9d56939ebcc5a43d15e667720b210a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/8a9dca356b9d56939ebcc5a43d15e667720b210a", "message": "Merge branch 'master' into protobuf-3.12.4", "committedDate": "2020-08-24T12:13:25Z", "type": "commit"}, {"oid": "baeaa93872c35da3104ecf55ce4b850871041e60", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/baeaa93872c35da3104ecf55ce4b850871041e60", "message": "Merge branch 'master' into protobuf-3.12.4", "committedDate": "2020-08-24T12:16:00Z", "type": "commit"}, {"oid": "82a08376e4dd38a92b3e7d7a5462538b3571c9a9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/82a08376e4dd38a92b3e7d7a5462538b3571c9a9", "message": "Merge branch 'master' into protobuf-3.12.4", "committedDate": "2020-08-24T16:26:24Z", "type": "commit"}, {"oid": "b4940647ff9086029943113df6671dfc25681710", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/b4940647ff9086029943113df6671dfc25681710", "message": "Merge branch 'master' into protobuf-3.12.4", "committedDate": "2020-08-24T20:18:10Z", "type": "commit"}, {"oid": "12c0fe17777b51cb6a2f0771beb5df29b7dcf2a3", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/12c0fe17777b51cb6a2f0771beb5df29b7dcf2a3", "message": "Merge branch 'master' into protobuf-3.12.4", "committedDate": "2020-08-25T15:31:03Z", "type": "commit"}]}