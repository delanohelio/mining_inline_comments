{"pr_number": 1442, "pr_title": "Remove DependencyGraphResult", "pr_createdAt": "2020-06-04T16:47:31Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442", "timeline": [{"oid": "16933732771ce7179462a71d82f7c02712b75098", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/16933732771ce7179462a71d82f7c02712b75098", "message": "make unresolvable artifct problems part of depednency graph", "committedDate": "2020-06-04T14:46:35Z", "type": "commit"}, {"oid": "e45d907288e6087aa9ba95848467ed23e5845c12", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e45d907288e6087aa9ba95848467ed23e5845c12", "message": "fix test", "committedDate": "2020-06-04T15:01:01Z", "type": "commit"}, {"oid": "21847b93b917e12884aef9b43b9d87de7af76e9a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/21847b93b917e12884aef9b43b9d87de7af76e9a", "message": "fix integration test", "committedDate": "2020-06-04T15:17:11Z", "type": "commit"}, {"oid": "e821c47c4995296a5ed9986ec2958105760f6a0a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/e821c47c4995296a5ed9986ec2958105760f6a0a", "message": "fix integration test", "committedDate": "2020-06-04T15:26:32Z", "type": "commit"}, {"oid": "2acaad099b9d2d753f29b7b82d7fa93337d3d499", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/2acaad099b9d2d753f29b7b82d7fa93337d3d499", "message": "fix integration test", "committedDate": "2020-06-04T15:44:45Z", "type": "commit"}, {"oid": "f40c000300b40d9b724f5836a0aa08b4f456a2e9", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/f40c000300b40d9b724f5836a0aa08b4f456a2e9", "message": "push unresolve artifact problems deeper into dependency graph", "committedDate": "2020-06-04T15:59:38Z", "type": "commit"}, {"oid": "feb2f624dec6fbfc19a62764d99ef2bed52d17fa", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/feb2f624dec6fbfc19a62764d99ef2bed52d17fa", "message": "remove method", "committedDate": "2020-06-04T16:24:43Z", "type": "commit"}, {"oid": "2b0f4b3d01f079532abb5794bfef46d429afec8a", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/2b0f4b3d01f079532abb5794bfef46d429afec8a", "message": "remove DependencyGra[hResult", "committedDate": "2020-06-04T16:41:54Z", "type": "commit"}, {"oid": "1f6e228aaa5845c423b4a96fbbd0ddd486afe652", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/1f6e228aaa5845c423b4a96fbbd0ddd486afe652", "message": "remove legacy method", "committedDate": "2020-06-04T16:49:59Z", "type": "commit"}, {"oid": "887aadc1baedfdc67413d8cc908cc0c488540c88", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/887aadc1baedfdc67413d8cc908cc0c488540c88", "message": "remove visible for testing", "committedDate": "2020-06-04T17:02:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NzQzNw==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435447437", "bodyText": "This method checks whether the artifact is already checked or not. Good.", "author": "suztomo", "createdAt": "2020-06-04T18:02:48Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -177,68 +173,37 @@ public DependencyGraphResult buildFullDependencyGraph(List<Artifact> artifacts)\n    * In the event of I/O errors, missing artifacts, and other problems, it can\n    * return an incomplete graph.\n    */\n-  public DependencyGraphResult buildMavenDependencyGraph(Dependency dependency) {\n+  public DependencyGraph buildMavenDependencyGraph(Dependency dependency) {\n     return buildDependencyGraph(\n         ImmutableList.of(new DefaultDependencyNode(dependency)), GraphTraversalOption.MAVEN);\n   }\n \n-  private DependencyGraphResult buildDependencyGraph(\n+  private DependencyGraph buildDependencyGraph(\n       List<DependencyNode> dependencyNodes, GraphTraversalOption traversalOption) {\n     boolean fullDependency = traversalOption == GraphTraversalOption.FULL;\n+    \n+    DependencyGraph graph;\n     DependencyNode node;\n-    ImmutableSet.Builder<UnresolvableArtifactProblem> artifactProblems = ImmutableSet.builder();\n-\n     try {\n       node = resolveCompileTimeDependencies(dependencyNodes, fullDependency);\n+      graph = new DependencyGraph(node);\n     } catch (DependencyResolutionException ex) {\n       DependencyResult result = ex.getResult();\n       node = result.getRoot();\n+      graph = new DependencyGraph(node);\n \n-      Set<Artifact> checkedArtifacts = new HashSet<>();\n       for (ArtifactResult artifactResult : result.getArtifactResults()) {\n         Artifact resolvedArtifact = artifactResult.getArtifact();\n \n         if (resolvedArtifact == null) {\n           Artifact requestedArtifact = artifactResult.getRequest().getArtifact();\n-          if (checkedArtifacts.add(requestedArtifact)) {\n-            artifactProblems.add(createUnresolvableArtifactProblem(node, requestedArtifact));\n-          }\n+          graph.addUnresolvableArtifactProblem(requestedArtifact);", "originalCommit": "887aadc1baedfdc67413d8cc908cc0c488540c88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63e9ba0923cbf73c0499268b9a1e0f9b4adce9af", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\nindex 6de20a04..0ba294b5 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n\n@@ -202,20 +200,7 @@ public final class DependencyGraphBuilder {\n       }\n     }\n \n-    levelOrder(node, graph);\n-    return graph;\n-  }\n-\n-  private static final class LevelOrderQueueItem {\n-    final DependencyNode dependencyNode;\n-\n-    // Null for the first item\n-    final DependencyPath parentPath;\n-\n-    LevelOrderQueueItem(DependencyNode dependencyNode, DependencyPath parentPath) {\n-      this.dependencyNode = dependencyNode;\n-      this.parentPath = parentPath;\n-    }\n+    return DependencyGraph.levelOrder(graph);\n   }\n \n   private enum GraphTraversalOption {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODk4NQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435448985", "bodyText": "Is this package-visible constructor still needed? I see tests uses new DependencyGraph(null).", "author": "suztomo", "createdAt": "2020-06-04T18:05:21Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java", "diffHunk": "@@ -59,9 +63,14 @@\n   \n   // map of groupId:artifactId:version to paths\n   private SetMultimap<String, DependencyPath> paths = HashMultimap.create();\n+\n+  private DependencyNode root;\n   \n-  @VisibleForTesting\n-  public DependencyGraph() {\n+  DependencyGraph() {\n+  }", "originalCommit": "887aadc1baedfdc67413d8cc908cc0c488540c88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyMjMyNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435522325", "bodyText": "It isn't. removed.", "author": "elharo", "createdAt": "2020-06-04T20:13:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "63e9ba0923cbf73c0499268b9a1e0f9b4adce9af", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java\nindex e3f7c47a..86649868 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraph.java\n\n@@ -65,9 +79,6 @@ public class DependencyGraph {\n   private SetMultimap<String, DependencyPath> paths = HashMultimap.create();\n \n   private DependencyNode root;\n-  \n-  DependencyGraph() {\n-  }\n \n   public DependencyGraph(DependencyNode root) {\n     this.root = root;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTIwMA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435455200", "bodyText": "Thinking about other implementation of DependencyGraph, this levelOrder method of converting DependencyNode to DependencyGraph is specific to DependencyNode. It's because graph.addPath(path); in this method comes from the fact that current DependencyGraph consists of DependnecyPaths.\nDo you think moving this method inside DependencyGraph, as DependencyGraph.from(DependencyNode root) is a good idea?", "author": "suztomo", "createdAt": "2020-06-04T18:16:39Z", "path": "dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java", "diffHunk": "@@ -271,9 +236,12 @@ public static UnresolvableArtifactProblem createUnresolvableArtifactProblem(\n    * @param firstNode node to start traversal\n    */\n   public static DependencyGraph levelOrder(DependencyNode firstNode) {\n-\n     DependencyGraph graph = new DependencyGraph();\n \n+    return levelOrder(firstNode, graph);\n+  }\n+\n+  private static DependencyGraph levelOrder(DependencyNode firstNode, DependencyGraph graph) {", "originalCommit": "887aadc1baedfdc67413d8cc908cc0c488540c88", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NzA0Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1442#discussion_r435557042", "bodyText": "Good idea. Done, and that simplified some more code too.", "author": "elharo", "createdAt": "2020-06-04T21:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1NTIwMA=="}], "type": "inlineReview", "revised_code": {"commit": "63e9ba0923cbf73c0499268b9a1e0f9b4adce9af", "chunk": "diff --git a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\nindex 6de20a04..0ba294b5 100644\n--- a/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n+++ b/dependencies/src/main/java/com/google/cloud/tools/opensource/dependencies/DependencyGraphBuilder.java\n\n@@ -226,67 +211,4 @@ public final class DependencyGraphBuilder {\n     FULL;\n   }\n \n-  /**\n-   * Builds a dependency graph by traversing dependency tree in level-order (breadth-first search).\n-   *\n-   * <p>When {@code graphTraversalOption} is FULL_DEPENDENCY or FULL_DEPENDENCY_WITH_PROVIDED, then\n-   * it resolves the dependency of the artifact of each node in the dependency tree; otherwise it\n-   * just follows the given dependency tree starting with firstNode.\n-   *\n-   * @param firstNode node to start traversal\n-   */\n-  public static DependencyGraph levelOrder(DependencyNode firstNode) {\n-    DependencyGraph graph = new DependencyGraph();\n-\n-    return levelOrder(firstNode, graph);\n-  }\n-\n-  private static DependencyGraph levelOrder(DependencyNode firstNode, DependencyGraph graph) {\n-    Queue<LevelOrderQueueItem> queue = new ArrayDeque<>();\n-    queue.add(new LevelOrderQueueItem(firstNode, null));\n-\n-    while (!queue.isEmpty()) {\n-      LevelOrderQueueItem item = queue.poll();\n-      DependencyNode dependencyNode = item.dependencyNode;\n-\n-      DependencyPath parentPath = item.parentPath;\n-      Artifact artifact = dependencyNode.getArtifact();\n-      if (artifact != null && parentPath != null) {\n-        // When requesting dependencies of 2 or more artifacts, root DependencyNode's artifact is\n-        // set to null\n-\n-        // When there's an ancestor dependency node with the same groupId and artifactId as\n-        // the dependency, Maven will not pick up the dependency. For example, if there's a\n-        // dependency path \"g1:a1:2.0 / ... / g1:a1:1.0\" (the leftmost node as root), then Maven's\n-        // dependency mediation always picks g1:a1:2.0 over g1:a1:1.0.\n-        \n-        // TODO This comment doesn't seem right. That's true for the root,\n-        // but not for non-root nodes. A node elsewhere in the tree could cause the \n-        // descendant to be selected. \n-        \n-        String groupIdAndArtifactId = Artifacts.makeKey(artifact);\n-        boolean ancestorHasSameKey =\n-            parentPath.getArtifacts().stream()\n-                .map(Artifacts::makeKey)\n-                .anyMatch(key -> key.equals(groupIdAndArtifactId));\n-        if (ancestorHasSameKey) {\n-          continue;\n-        }\n-      }\n-\n-      // parentPath is null for the first item\n-      DependencyPath path =\n-          parentPath == null\n-              ? new DependencyPath(artifact)\n-              : parentPath.append(dependencyNode.getDependency());\n-      graph.addPath(path);\n-\n-      for (DependencyNode child : dependencyNode.getChildren()) {\n-        queue.add(new LevelOrderQueueItem(child, path));\n-      }\n-    }\n-\n-    return graph;\n-  }\n-\n }\n"}}, {"oid": "63e9ba0923cbf73c0499268b9a1e0f9b4adce9af", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/63e9ba0923cbf73c0499268b9a1e0f9b4adce9af", "message": "code review", "committedDate": "2020-06-04T21:04:25Z", "type": "commit"}, {"oid": "c1dc87d9449b35e2d3c74c8790aea05d29672088", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/c1dc87d9449b35e2d3c74c8790aea05d29672088", "message": "DependencyGraph.from", "committedDate": "2020-06-04T21:11:35Z", "type": "commit"}, {"oid": "9a0c436afa6ef929356dd618d49561017e13f6c8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/9a0c436afa6ef929356dd618d49561017e13f6c8", "message": "Merge branch 'master' into result", "committedDate": "2020-06-05T11:37:55Z", "type": "commit"}, {"oid": "926a31766e9eef26c850e79c8655cc15fb40802c", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/926a31766e9eef26c850e79c8655cc15fb40802c", "message": "mark method visible for testing", "committedDate": "2020-06-05T11:48:56Z", "type": "commit"}]}