{"pr_number": 6422, "pr_title": "[Issue 6283][tiered-storage] Offload policies per namespace", "pr_createdAt": "2020-02-26T01:14:28Z", "pr_url": "https://github.com/apache/pulsar/pull/6422", "timeline": [{"oid": "4adb758864f03baa5d73193ec5931384b95598b7", "url": "https://github.com/apache/pulsar/commit/4adb758864f03baa5d73193ec5931384b95598b7", "message": "make tests use offloadpolicies", "committedDate": "2020-02-26T11:21:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1MDMzMw==", "url": "https://github.com/apache/pulsar/pull/6422#discussion_r389350333", "bodyText": "Can we delete offloadAutoTriggerSizeThresholdBytes and offloadLedgerDeletionLagMs in  ManagedLedgerConfig? since there is OffloadPolicies in LedgerOffloader.", "author": "codelipenghui", "createdAt": "2020-03-08T09:11:32Z", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -1869,6 +1876,10 @@ private void maybeOffload(CompletableFuture<PositionImpl> finalPromise) {\n                 });\n \n             long threshold = config.getOffloadAutoTriggerSizeThresholdBytes();", "originalCommit": "0038227fba13108bd3eafb1a2c998833d2072262", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTY0Nzc4MA==", "url": "https://github.com/apache/pulsar/pull/6422#discussion_r389647780", "bodyText": "@codelipenghui Thanks for the review. @sijie wanted to keep default configuration on ManagedLedgerConfig while OffloadPolicies in LedgerOffloader are not defined for current namespace. WDYT?", "author": "KannarFr", "createdAt": "2020-03-09T13:08:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwOTY5MA==", "url": "https://github.com/apache/pulsar/pull/6422#discussion_r390709690", "bodyText": "@KannarFr  We already keep offload_threshold   and offload_deletion_lag_ms  in Policies, why  need to also keep offloadAutoTriggerSizeThresholdBytes  and offloadAutoTriggerSizeThresholdBytes  in managedldger config? I still don't understand, why need to keep them in managedldger config.", "author": "codelipenghui", "createdAt": "2020-03-11T02:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1MDMzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk1NzkwOQ==", "url": "https://github.com/apache/pulsar/pull/6422#discussion_r390957909", "bodyText": "Got it, you are right, fixing...", "author": "KannarFr", "createdAt": "2020-03-11T13:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM1MDMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "c5370804c1e83aaece0de2c4d3b1a17158c6769b", "chunk": "diff --git a/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java b/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\nindex 67281ad672b..8698394b39e 100644\n--- a/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\n+++ b/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\n\n@@ -1875,43 +1871,43 @@ public class ManagedLedgerImpl implements ManagedLedger, CreateCallback {\n                     }\n                 });\n \n-            long threshold = config.getOffloadAutoTriggerSizeThresholdBytes();\n             if (config.getLedgerOffloader() != null && config.getLedgerOffloader() != NullLedgerOffloader.INSTANCE\n                     && config.getLedgerOffloader().getOffloadPolicies() != null) {\n-                threshold = config.getLedgerOffloader().getOffloadPolicies().getManagedLedgerOffloadThresholdInBytes();\n-            }\n-            long sizeSummed = 0;\n-            long alreadyOffloadedSize = 0;\n-            long toOffloadSize = 0;\n-\n-            ConcurrentLinkedDeque<LedgerInfo> toOffload = new ConcurrentLinkedDeque();\n-\n-            // go through ledger list from newest to oldest and build a list to offload in oldest to newest order\n-            for (Map.Entry<Long, LedgerInfo> e : ledgers.descendingMap().entrySet()) {\n-                long size = e.getValue().getSize();\n-                sizeSummed += size;\n-                boolean alreadyOffloaded = e.getValue().hasOffloadContext()\n-                    && e.getValue().getOffloadContext().getComplete();\n-                if (alreadyOffloaded) {\n-                    alreadyOffloadedSize += size;\n-                } else if (sizeSummed > threshold) {\n-                    toOffloadSize += size;\n-                    toOffload.addFirst(e.getValue());\n+                long threshold = config.getLedgerOffloader().getOffloadPolicies().getManagedLedgerOffloadThresholdInBytes();\n+\n+                long sizeSummed = 0;\n+                long alreadyOffloadedSize = 0;\n+                long toOffloadSize = 0;\n+\n+                ConcurrentLinkedDeque<LedgerInfo> toOffload = new ConcurrentLinkedDeque();\n+\n+                // go through ledger list from newest to oldest and build a list to offload in oldest to newest order\n+                for (Map.Entry<Long, LedgerInfo> e : ledgers.descendingMap().entrySet()) {\n+                    long size = e.getValue().getSize();\n+                    sizeSummed += size;\n+                    boolean alreadyOffloaded = e.getValue().hasOffloadContext()\n+                            && e.getValue().getOffloadContext().getComplete();\n+                    if (alreadyOffloaded) {\n+                        alreadyOffloadedSize += size;\n+                    } else if (sizeSummed > threshold) {\n+                        toOffloadSize += size;\n+                        toOffload.addFirst(e.getValue());\n+                    }\n                 }\n-            }\n \n-            if (toOffload.size() > 0) {\n-                log.info(\"[{}] Going to automatically offload ledgers {}\"\n-                         + \", total size = {}, already offloaded = {}, to offload = {}\",\n-                         name, toOffload.stream().map(l -> l.getLedgerId()).collect(Collectors.toList()),\n-                         sizeSummed, alreadyOffloadedSize, toOffloadSize);\n-            } else {\n-                // offloadLoop will complete immediately with an empty list to offload\n-                log.debug(\"[{}] Nothing to offload, total size = {}, already offloaded = {}, threshold = {}\",\n-                          name, sizeSummed, alreadyOffloadedSize, threshold);\n-            }\n+                if (toOffload.size() > 0) {\n+                    log.info(\"[{}] Going to automatically offload ledgers {}\"\n+                                    + \", total size = {}, already offloaded = {}, to offload = {}\",\n+                            name, toOffload.stream().map(l -> l.getLedgerId()).collect(Collectors.toList()),\n+                            sizeSummed, alreadyOffloadedSize, toOffloadSize);\n+                } else {\n+                    // offloadLoop will complete immediately with an empty list to offload\n+                    log.debug(\"[{}] Nothing to offload, total size = {}, already offloaded = {}, threshold = {}\",\n+                            name, sizeSummed, alreadyOffloadedSize, threshold);\n+                }\n \n-            offloadLoop(unlockingPromise, toOffload, PositionImpl.latest, Optional.empty());\n+                offloadLoop(unlockingPromise, toOffload, PositionImpl.latest, Optional.empty());\n+            }\n         }\n     }\n \n"}}, {"oid": "c5370804c1e83aaece0de2c4d3b1a17158c6769b", "url": "https://github.com/apache/pulsar/commit/c5370804c1e83aaece0de2c4d3b1a17158c6769b", "message": "fix inconsistency", "committedDate": "2020-03-12T12:36:18Z", "type": "forcePushed"}, {"oid": "099c42d245015dc9d66d3c3cbb7d3c512ab1ed46", "url": "https://github.com/apache/pulsar/commit/099c42d245015dc9d66d3c3cbb7d3c512ab1ed46", "message": "fix tests using mock", "committedDate": "2020-03-17T12:10:56Z", "type": "forcePushed"}, {"oid": "198338e16ca1ee3550716382176b377a97b92d1d", "url": "https://github.com/apache/pulsar/commit/198338e16ca1ee3550716382176b377a97b92d1d", "message": "fix tests using mock", "committedDate": "2020-03-17T12:15:03Z", "type": "forcePushed"}, {"oid": "d8325aac321dad34e5d54b2471be3d681a833bdd", "url": "https://github.com/apache/pulsar/commit/d8325aac321dad34e5d54b2471be3d681a833bdd", "message": "introduce new properties to offloadpolicies", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "e563b0494c922508f140b7242336b191f7866729", "url": "https://github.com/apache/pulsar/commit/e563b0494c922508f140b7242336b191f7866729", "message": "add offload_policies deletion lag/threshold cmds", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "2aa73e586a89f4f69265755a16d2b7bafd40b6c4", "url": "https://github.com/apache/pulsar/commit/2aa73e586a89f4f69265755a16d2b7bafd40b6c4", "message": "test: add deletion_lag/threshold to offload policies cmds", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "3fec04cbd894390b3d48fa37ab256114011ef0d8", "url": "https://github.com/apache/pulsar/commit/3fec04cbd894390b3d48fa37ab256114011ef0d8", "message": "get offload_policies when they exist", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "2256dde065254c68c5578d58c779316ee2b841f5", "url": "https://github.com/apache/pulsar/commit/2256dde065254c68c5578d58c779316ee2b841f5", "message": "fix test", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "5726d333f91f282f46a123a8ec0c08d0fac28ebf", "url": "https://github.com/apache/pulsar/commit/5726d333f91f282f46a123a8ec0c08d0fac28ebf", "message": "add offload test that use offloadpolicies over ns default config", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "b9c7fda6aba97bcb8e4f1d746c8ef6a85a355ebb", "url": "https://github.com/apache/pulsar/commit/b9c7fda6aba97bcb8e4f1d746c8ef6a85a355ebb", "message": "add deletion_lag/threshold to doc", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "7af53e2dfdd3a886dff9ce163bee8b96aa0d18d1", "url": "https://github.com/apache/pulsar/commit/7af53e2dfdd3a886dff9ce163bee8b96aa0d18d1", "message": "merge threshold/deletion_lag to use offloadpolicies when they exist", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "11c9cc3ee5ca66653b8bf53e8a08df9e756866ec", "url": "https://github.com/apache/pulsar/commit/11c9cc3ee5ca66653b8bf53e8a08df9e756866ec", "message": "make tests use offloadpolicies", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "ddd11fd331c2f67c57c854e2ea6cda4523c00433", "url": "https://github.com/apache/pulsar/commit/ddd11fd331c2f67c57c854e2ea6cda4523c00433", "message": "typo", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "7ab465f7b4897e7e7d0fa75eaa05239331c6fc43", "url": "https://github.com/apache/pulsar/commit/7ab465f7b4897e7e7d0fa75eaa05239331c6fc43", "message": "use offloadpolicies, remove offload ms/bytes from managedledgerconfig", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "7e16c766b6569bf88c3508a13a79d4d0865697c3", "url": "https://github.com/apache/pulsar/commit/7e16c766b6569bf88c3508a13a79d4d0865697c3", "message": "fix inconsistency", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "a60e8112a7471ba7d954122ac4423efb307e7c5a", "url": "https://github.com/apache/pulsar/commit/a60e8112a7471ba7d954122ac4423efb307e7c5a", "message": "create default offloadpolicies", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "39e929e421e6ae919bba3e2c0f6b6bb068c76916", "url": "https://github.com/apache/pulsar/commit/39e929e421e6ae919bba3e2c0f6b6bb068c76916", "message": "fix tests using mock", "committedDate": "2020-03-17T12:31:14Z", "type": "commit"}, {"oid": "39e929e421e6ae919bba3e2c0f6b6bb068c76916", "url": "https://github.com/apache/pulsar/commit/39e929e421e6ae919bba3e2c0f6b6bb068c76916", "message": "fix tests using mock", "committedDate": "2020-03-17T12:31:14Z", "type": "forcePushed"}, {"oid": "ffe29c30d8963850770f55db86bbcd9ea2f2a095", "url": "https://github.com/apache/pulsar/commit/ffe29c30d8963850770f55db86bbcd9ea2f2a095", "message": "remove unused code", "committedDate": "2020-03-17T13:08:05Z", "type": "commit"}]}