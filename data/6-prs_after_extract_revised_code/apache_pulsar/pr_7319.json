{"pr_number": 7319, "pr_title": "Fix producer stucks on creating ledger timeout", "pr_createdAt": "2020-06-20T01:33:36Z", "pr_url": "https://github.com/apache/pulsar/pull/7319", "timeline": [{"oid": "8dc6b54be054b5a50d43a041fe27896bbd5be924", "url": "https://github.com/apache/pulsar/commit/8dc6b54be054b5a50d43a041fe27896bbd5be924", "message": "Fix producer stucks on creating ledger timeout\n\n*Motivation*\n\nThe `ledgerCreated` flag is passed as ctx to the createLedger callback.\nThe callback already had the logic on handling `ledgerCreated` flag. But we set the flag to `false`\nwhen timeout happens. It will trigger the following race condition:\n\na) The createComplete callback is triggered when timeout. But the pending add requests are not error'd out.\nb) If the createComplete callback eventually completes, it will see `ledgerCreated` flag is set to true,\nso it will cause `checkAndCompleteLedgerOpTask` returns false and exist too early without processing the\npending add requests.\n\nThis race condition only happens when creating ledger times out.\n\n```\n    public synchronized void createComplete(int rc, final LedgerHandle lh, Object ctx) {\n        if (log.isDebugEnabled()) {\n            log.debug(\"[{}] createComplete rc={} ledger={}\", name, rc, lh != null ? lh.getId() : -1);\n        }\n\n        if (checkAndCompleteLedgerOpTask(rc, lh, ctx)) {\n            return;\n        }\n```\n\n*Modification*\n\nThe timeout logic shouldn't modify the `ledgerCreated` context. It should let the callback itself to process\nthe `ledgerCreated` context.", "committedDate": "2020-06-20T01:32:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMDkzMQ==", "url": "https://github.com/apache/pulsar/pull/7319#discussion_r443100931", "bodyText": "Wouldn't there be a race condition here (also in existing code) if the creation completes at the same time that the timeout is triggered?", "author": "merlimat", "createdAt": "2020-06-20T04:41:44Z", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3177,8 +3177,7 @@ protected void asyncCreateLedger(BookKeeper bookKeeper, ManagedLedgerConfig conf\n                 digestType, config.getPassword(), cb, ledgerCreated, finalMetadata);\n         scheduledExecutor.schedule(() -> {\n             if (!ledgerCreated.get()) {\n-                ledgerCreated.set(true);\n-                cb.createComplete(BKException.Code.TimeoutException, null, null);\n+                cb.createComplete(BKException.Code.TimeoutException, null, ledgerCreated);", "originalCommit": "8dc6b54be054b5a50d43a041fe27896bbd5be924", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjU0NA==", "url": "https://github.com/apache/pulsar/pull/7319#discussion_r443102544", "bodyText": "The callback is synchronized at ManagedLedgerImpl. So there is no race condition here.", "author": "sijie", "createdAt": "2020-06-20T05:13:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMDkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNjUxOQ==", "url": "https://github.com/apache/pulsar/pull/7319#discussion_r443136519", "bodyText": "It's not always the case. eg: In createNewMetadataLedger() when we create a new cursor ledger, we pass a lambda and there's no mutex. The logic in checkAndCompleteLedgerOpTask() seems race prone.\nI think we should probably use compareAndSet() to manipulate that ledgerCreated flag, which also might be better represented by an enum with multiple states.\nFinally (and this is unrelated to the bug here), we should try to cancel the timeout task, once the create operation succeeds or fails before it times out. Otherwise we can get into a state with many timer tasks pending.", "author": "merlimat", "createdAt": "2020-06-20T14:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMDkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzNDMyNQ==", "url": "https://github.com/apache/pulsar/pull/7319#discussion_r443334325", "bodyText": "I see. I missed the createNewMetadataLedger operation. I changed it to use CAS.\nFor canceling the timeout tasks, I will have a follow-up issue to do that.", "author": "sijie", "createdAt": "2020-06-22T06:07:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMDkzMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "705dba0bef4a5a6f26b9dea2405dd9dbc2859681", "url": "https://github.com/apache/pulsar/commit/705dba0bef4a5a6f26b9dea2405dd9dbc2859681", "message": "Change to use CAS", "committedDate": "2020-06-22T06:06:07Z", "type": "commit"}]}