{"pr_number": 6566, "pr_title": "[PIP-60] [Proxy-Server] Support SNI routing to support various proxy-server in pulsar", "pr_createdAt": "2020-03-20T00:04:14Z", "pr_url": "https://github.com/apache/pulsar/pull/6566", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyODc0OA==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405728748", "bodyText": "Should we close the client or add @Cleanup annotation?", "author": "sijie", "createdAt": "2020-04-08T18:29:47Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.api;\n+\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+import java.net.UnknownHostException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.pulsar.client.impl.auth.AuthenticationTls;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.annotations.Test;\n+\n+public class ProxyProtocolTest extends TlsProducerConsumerBase {\n+    private static final Logger log = LoggerFactory.getLogger(ProxyProtocolTest.class);\n+\n+    @Test\n+    public void testSniProxyProtocol() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrlTls();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();", "originalCommit": "db8d58bae2fd4826fce4544570e4a921b28ee353", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU0MTQ2OA==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r408541468", "bodyText": "yes.. will add it.", "author": "rdhabalia", "createdAt": "2020-04-15T02:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyODc0OA=="}], "type": "inlineReview", "revised_code": {"commit": "ca8db7886e38075121c210e85f36106ce0178b04", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\nindex 8678ec7c10b..964ebd93f4a 100644\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\n+++ b/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\n\n@@ -21,7 +21,6 @@ package org.apache.pulsar.client.api;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n \n-import java.net.UnknownHostException;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTQ0OQ==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405729449", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        fail(\"should have failed due to invalid url\");\n          \n          \n            \n                        fail(\"should have failed due to non-tls url\");", "author": "sijie", "createdAt": "2020-04-08T18:30:58Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.api;\n+\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+import java.net.UnknownHostException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.pulsar.client.impl.auth.AuthenticationTls;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.annotations.Test;\n+\n+public class ProxyProtocolTest extends TlsProducerConsumerBase {\n+    private static final Logger log = LoggerFactory.getLogger(ProxyProtocolTest.class);\n+\n+    @Test\n+    public void testSniProxyProtocol() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrlTls();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        // should be able to create producer successfully\n+        pulsarClient.newProducer().topic(topicName).create();\n+    }\n+\n+    @Test\n+    public void testSniProxyProtocolWithInvalidProxyUrl() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String proxyHost = \"invalid-url\";\n+        String proxyUrl = \"pulsar+ssl://\" + proxyHost + \":5555\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        try {\n+            pulsarClient.newProducer().topic(topicName).create();\n+            fail(\"should have failed due to invalid url\");\n+        } catch (PulsarClientException e) {\n+            assertTrue(e.getMessage().contains(proxyHost));\n+        }\n+    }\n+\n+    @Test\n+    public void testSniProxyProtocolWithoutTls() throws Exception {\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrl();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        try {\n+            pulsarClient.newProducer().topic(topicName).create();\n+            fail(\"should have failed due to invalid url\");", "originalCommit": "db8d58bae2fd4826fce4544570e4a921b28ee353", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU0MTU5NQ==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r408541595", "bodyText": "sure. fixed it.", "author": "rdhabalia", "createdAt": "2020-04-15T02:18:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTQ0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca8db7886e38075121c210e85f36106ce0178b04", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\nindex 8678ec7c10b..964ebd93f4a 100644\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\n+++ b/pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java\n\n@@ -21,7 +21,6 @@ package org.apache.pulsar.client.api;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n \n-import java.net.UnknownHostException;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNzg5Nw==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405737897", "bodyText": "based on my understanding, this service URL here can only be the binary protocol service URL correct? We can't use the HTTP-protocol service URL. If that's the case, can you document this setting in ClusterData and the related command-line tools? It might be good to add a validation to throw exceptions if it is not a binary protocol service url.", "author": "sijie", "createdAt": "2020-04-08T18:44:57Z", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/ClusterData.java", "diffHunk": "@@ -58,6 +60,20 @@\n         example = \"pulsar+ssl://pulsar.example.com:6651\"\n     )\n     private String brokerServiceUrlTls;\n+    @ApiModelProperty(\n+        name = \"proxyServiceUrl\",\n+        value = \"Proxy-service url when client would like to connect to broker via proxy.\",\n+        example = \"pulsar+ssl://ats-proxy.example.com:4443 or \"\n+                    + \"pulsar://ats-proxy.example.com:4080\"\n+    )\n+    private String proxyServiceUrl;", "originalCommit": "db8d58bae2fd4826fce4544570e4a921b28ee353", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUzNDc3OA==", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r408534778", "bodyText": "yes, SNI works on layer-4 so, it requires binary URL for SNI routing.  however, we added proxyUrl placeholder extensible by adding proxyType and right now we support SNI and in future we can have other type which can support HTTP as well. So, I think we don't want to restrict with binary url only. But I have a plan to add a separate document with examples of different proxy-solutions(ATS, Envoy) as multiple users are interested in this solution.", "author": "rdhabalia", "createdAt": "2020-04-15T01:53:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNzg5Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ca8db7886e38075121c210e85f36106ce0178b04", "url": "https://github.com/apache/pulsar/commit/ca8db7886e38075121c210e85f36106ce0178b04", "message": "addressed comments", "committedDate": "2020-04-15T02:18:40Z", "type": "forcePushed"}, {"oid": "f98139d66550ef1d25202a65e2eeda2972455234", "url": "https://github.com/apache/pulsar/commit/f98139d66550ef1d25202a65e2eeda2972455234", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments", "committedDate": "2020-05-22T20:27:28Z", "type": "forcePushed"}, {"oid": "7f4602a12e6b3b819ca5e0befddfb1c58f055ecb", "url": "https://github.com/apache/pulsar/commit/7f4602a12e6b3b819ca5e0befddfb1c58f055ecb", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments", "committedDate": "2020-05-22T20:37:32Z", "type": "forcePushed"}, {"oid": "0bb290d381a5260c077d8311a002882ec71fef1b", "url": "https://github.com/apache/pulsar/commit/0bb290d381a5260c077d8311a002882ec71fef1b", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler", "committedDate": "2020-06-02T03:05:46Z", "type": "forcePushed"}, {"oid": "2a6628a50706092368f314a7e97f781a2cdc4ab0", "url": "https://github.com/apache/pulsar/commit/2a6628a50706092368f314a7e97f781a2cdc4ab0", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler", "committedDate": "2020-06-02T03:06:09Z", "type": "forcePushed"}, {"oid": "32232228fec9ee7f335b877f7b7bec34fb39bb66", "url": "https://github.com/apache/pulsar/commit/32232228fec9ee7f335b877f7b7bec34fb39bb66", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler", "committedDate": "2020-06-02T19:03:51Z", "type": "commit"}, {"oid": "32232228fec9ee7f335b877f7b7bec34fb39bb66", "url": "https://github.com/apache/pulsar/commit/32232228fec9ee7f335b877f7b7bec34fb39bb66", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler", "committedDate": "2020-06-02T19:03:51Z", "type": "forcePushed"}, {"oid": "fc30bee6e8840395e6b46ee4292b01629fe6c946", "url": "https://github.com/apache/pulsar/commit/fc30bee6e8840395e6b46ee4292b01629fe6c946", "message": "fix typo in test", "committedDate": "2020-06-02T20:14:27Z", "type": "commit"}, {"oid": "4ad4bb0af47d2b8c4be647e7b76b5d7322949a84", "url": "https://github.com/apache/pulsar/commit/4ad4bb0af47d2b8c4be647e7b76b5d7322949a84", "message": "Merge remote-tracking branch 'apache/master' into proxy_sni", "committedDate": "2020-06-03T11:30:42Z", "type": "commit"}, {"oid": "b5e27bbbba55e77aadde47bf7cddf4d2930e201e", "url": "https://github.com/apache/pulsar/commit/b5e27bbbba55e77aadde47bf7cddf4d2930e201e", "message": "Merge remote-tracking branch 'apache/master' into proxy_sni", "committedDate": "2020-06-03T15:20:13Z", "type": "commit"}]}