{"pr_number": 9042, "pr_title": "support namespace policy for maxTopicsPerNamespace limit", "pr_createdAt": "2020-12-23T12:58:27Z", "pr_url": "https://github.com/apache/pulsar/pull/9042", "timeline": [{"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073", "url": "https://github.com/apache/pulsar/commit/b66905d53bb9afc1fd5a2697de9b6775eade1073", "message": "support namespace policy for maxTopicsPerNamespace limit", "committedDate": "2020-12-23T12:52:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njg4Mg==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547976882", "bodyText": "When setting the value, it must be greater than or equal to 0, so there should be no case of <0.", "author": "315157973", "createdAt": "2020-12-23T14:11:00Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -811,9 +811,14 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n     }\n \n     protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n-        final int maxTopicsPerNamespace = pulsar().getConfig().getMaxTopicsPerNamespace();\n-        if (maxTopicsPerNamespace > 0) {\n-            try {\n+        Integer maxTopicsPerNamespace;\n+        try {\n+            maxTopicsPerNamespace = getNamespacePolicies(namespaceName).max_topics_per_namespace;\n+            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {", "originalCommit": "b66905d53bb9afc1fd5a2697de9b6775eade1073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzODc4MA==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548338780", "bodyText": "OK, maxTopicsPerNamespace is get from namespace policy, it must be greater than 0, i update the code.", "author": "hangc0276", "createdAt": "2020-12-24T01:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9159b16b36cfc683b6b37f67f8a85cf77c879648", "chunk": "diff --git a/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java b/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java\nindex 5e385a66bb8..53d6220d61a 100644\n--- a/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java\n+++ b/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java\n\n@@ -814,7 +814,7 @@ public abstract class AdminResource extends PulsarWebResource {\n         Integer maxTopicsPerNamespace;\n         try {\n             maxTopicsPerNamespace = getNamespacePolicies(namespaceName).max_topics_per_namespace;\n-            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {\n+            if (maxTopicsPerNamespace == null) {\n                 maxTopicsPerNamespace = pulsar().getConfig().getMaxTopicsPerNamespace();\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njk1NA==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547976954", "bodyText": "When setting the value, it must be greater than or equal to 0, so there should be no case of <0.", "author": "315157973", "createdAt": "2020-12-23T14:11:10Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -3182,5 +3182,26 @@ protected OffloadPolicies internalGetOffloadPolicies() {\n         return policies.offload_policies;\n     }\n \n-    private static final Logger log = LoggerFactory.getLogger(NamespacesBase.class);\n+    protected int internalGetMaxTopicsPerNamespace() {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.READ);\n+        return getNamespacePolicies(namespaceName).max_topics_per_namespace;\n+    }\n+\n+   protected void internalRemoveMaxTopicsPerNamespace() {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.WRITE);\n+        internalSetMaxTopicsPerNamespace(null);\n+   }\n+\n+   protected void internalSetMaxTopicsPerNamespace(Integer maxTopicsPerNamespace) {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.WRITE);\n+        validatePoliciesReadOnlyAccess();\n+\n+        if (maxTopicsPerNamespace != null && maxTopicsPerNamespace < 0) {", "originalCommit": "b66905d53bb9afc1fd5a2697de9b6775eade1073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzOTI0NQ==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548339245", "bodyText": "The maxTopicsPerNamespace is passed by user, we should forbid user set the value < 0, so the check must be added.", "author": "hangc0276", "createdAt": "2020-12-24T01:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njk1NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3NzMwMQ==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547977301", "bodyText": "Will there be a problem if the created producer is not closed?", "author": "315157973", "createdAt": "2020-12-23T14:11:56Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java", "diffHunk": "@@ -1413,6 +1414,132 @@ public void testRetentionPolicyValidation() throws Exception {\n         admin.namespaces().deleteNamespace(namespace);\n     }\n \n+    @Test(timeOut = 30000)\n+    public void testMaxTopicsPerNamespace() throws Exception {\n+        super.internalCleanup();\n+        conf.setMaxTopicsPerNamespace(15);\n+        super.internalSetup();\n+\n+        String namespace = \"testTenant/ns1\";\n+        admin.clusters().createCluster(\"use\", new ClusterData(brokerUrl.toString()));\n+        TenantInfo tenantInfo = new TenantInfo(Sets.newHashSet(\"role1\", \"role2\"),\n+                Sets.newHashSet(\"use\"));\n+        admin.tenants().createTenant(\"testTenant\", tenantInfo);\n+        admin.namespaces().createNamespace(namespace, Sets.newHashSet(\"use\"));\n+\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 10);\n+        assertEquals(10, admin.namespaces().getMaxTopicsPerNamespace(namespace));\n+\n+        // check create partitioned/non-partitioned topics using namespace policy\n+        String topic = \"persistent://testTenant/ns1/test_create_topic_v\";\n+        admin.topics().createPartitionedTopic(topic + \"1\", 2);\n+        admin.topics().createPartitionedTopic(topic + \"2\", 3);\n+        admin.topics().createPartitionedTopic(topic + \"3\", 4);\n+        admin.topics().createNonPartitionedTopic(topic + \"4\");\n+\n+        try {\n+            admin.topics().createPartitionedTopic(topic + \"5\", 2);\n+            fail();\n+        } catch (PulsarAdminException e) {\n+            assertEquals(e.getStatusCode(), 412);\n+            assertEquals(e.getHttpError(), \"Exceed maximum number of topics in namespace.\");\n+        }\n+\n+        // remove namespace policy limit, use broker configuration instead.\n+        admin.namespaces().removeMaxTopicsPerNamespace(namespace);\n+        admin.topics().createPartitionedTopic(topic + \"6\", 4);\n+        try {\n+            admin.topics().createPartitionedTopic(topic + \"7\", 3);\n+            fail();\n+        } catch (PulsarAdminException e) {\n+            assertEquals(e.getStatusCode(), 412);\n+            assertEquals(e.getHttpError(), \"Exceed maximum number of topics in namespace.\");\n+        }\n+\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 0);\n+        // set namespace policy to no limit\n+        for (int i = 0; i< 10; ++i) {\n+            admin.topics().createPartitionedTopic(topic + \"_v\" + i, 2);\n+            admin.topics().createNonPartitionedTopic(topic + \"_vn\" + i);\n+        }\n+\n+\n+        // check producer/consumer auto create partitioned topic\n+        super.internalCleanup();\n+        conf.setMaxTopicsPerNamespace(0);\n+        conf.setDefaultNumPartitions(3);\n+        conf.setAllowAutoTopicCreationType(\"partitioned\");\n+        super.internalSetup();\n+\n+        admin.clusters().createCluster(\"use\", new ClusterData(brokerUrl.toString()));\n+        admin.tenants().createTenant(\"testTenant\", tenantInfo);\n+        admin.namespaces().createNamespace(namespace, Sets.newHashSet(\"use\"));\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 10);\n+\n+        pulsarClient.newProducer().topic(topic + \"1\").create();", "originalCommit": "b66905d53bb9afc1fd5a2697de9b6775eade1073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzOTMxMg==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548339312", "bodyText": "OK, i will close them.", "author": "hangc0276", "createdAt": "2020-12-24T01:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3NzMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9159b16b36cfc683b6b37f67f8a85cf77c879648", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java\nindex aa1fd88bdce..025dbe80789 100644\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java\n+++ b/pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java\n\n@@ -1476,12 +1476,12 @@ public class NamespacesTest extends MockedPulsarServiceBaseTest {\n         admin.namespaces().createNamespace(namespace, Sets.newHashSet(\"use\"));\n         admin.namespaces().setMaxTopicsPerNamespace(namespace, 10);\n \n-        pulsarClient.newProducer().topic(topic + \"1\").create();\n-        pulsarClient.newProducer().topic(topic + \"2\").create();\n-        pulsarClient.newConsumer().topic(topic + \"3\").subscriptionName(\"test_sub\").subscribe();\n+        pulsarClient.newProducer().topic(topic + \"1\").create().close();\n+        pulsarClient.newProducer().topic(topic + \"2\").create().close();\n+        pulsarClient.newConsumer().topic(topic + \"3\").subscriptionName(\"test_sub\").subscribe().close();\n \n         try {\n-            pulsarClient.newConsumer().topic(topic + \"4\").subscriptionName(\"test_sub\").subscribe();\n+            pulsarClient.newConsumer().topic(topic + \"4\").subscriptionName(\"test_sub\").subscribe().close();\n             fail();\n         } catch (PulsarClientException e) {\n             log.info(\"Exception: \", e);\n"}}, {"oid": "9159b16b36cfc683b6b37f67f8a85cf77c879648", "url": "https://github.com/apache/pulsar/commit/9159b16b36cfc683b6b37f67f8a85cf77c879648", "message": "fix a bug", "committedDate": "2020-12-24T01:20:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTQzOA==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548359438", "bodyText": "Will there be no <0\uff1f", "author": "315157973", "createdAt": "2020-12-24T02:55:11Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2517,9 +2517,18 @@ private void checkTopicLevelPolicyEnable() {\n \n     private <T> boolean checkMaxTopicsPerNamespace(TopicName topicName, int numPartitions,\n                                             CompletableFuture<T> topicFuture) {\n-        final int maxTopicsPerNamespace = pulsar().getConfig().getMaxTopicsPerNamespace();\n-        if (maxTopicsPerNamespace > 0) {\n-            try {\n+        Integer maxTopicsPerNamespace;\n+        try {\n+            maxTopicsPerNamespace = pulsar.getConfigurationCache().policiesCache()\n+                    .get(AdminResource.path(POLICIES, topicName.getNamespace()))\n+                    .map(p -> p.max_topics_per_namespace)\n+                    .orElse(null);\n+\n+            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {", "originalCommit": "9159b16b36cfc683b6b37f67f8a85cf77c879648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MzAyMA==", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548363020", "bodyText": "I remove it.", "author": "hangc0276", "createdAt": "2020-12-24T03:13:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "297897b80465b104e02ac9765c0daee7a68b16a8", "chunk": "diff --git a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java\nindex e41a710ceea..a65cc392980 100644\n--- a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java\n+++ b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java\n\n@@ -2524,7 +2524,7 @@ public class BrokerService implements Closeable, ZooKeeperCacheListener<Policies\n                     .map(p -> p.max_topics_per_namespace)\n                     .orElse(null);\n \n-            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {\n+            if (maxTopicsPerNamespace == null) {\n                 maxTopicsPerNamespace = pulsar.getConfig().getMaxTopicsPerNamespace();\n             }\n \n"}}, {"oid": "297897b80465b104e02ac9765c0daee7a68b16a8", "url": "https://github.com/apache/pulsar/commit/297897b80465b104e02ac9765c0daee7a68b16a8", "message": "fix a bug", "committedDate": "2020-12-24T03:12:37Z", "type": "commit"}]}