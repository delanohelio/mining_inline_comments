{"pr_number": 8961, "pr_title": "Fixes the recovery not respect to the isolation group settings", "pr_createdAt": "2020-12-15T08:04:45Z", "pr_url": "https://github.com/apache/pulsar/pull/8961", "timeline": [{"oid": "8f08483c8392f34579f90ebf144130abf6d311a3", "url": "https://github.com/apache/pulsar/commit/8f08483c8392f34579f90ebf144130abf6d311a3", "message": "Fixes the recovery not respect to the isolation group settings\n---\n\n*Motivation*\n\nWhen users configure to use ZkIsolatedBookieEnsemblePlacementPolicy,\nit is hard to configure AutoRecovery to respect to the isolation group\nsettings. Because we don't store the isolation group information as\npart of ledger metadata, the framework doesn't have any information\nto use for choosing the bookies.\n\n*Modifications*\n\n- Change the ZkIsolatedBookieEnsemblePlacementPolicy to use the policy\npassed from the custommetadata", "committedDate": "2020-12-15T08:01:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNjYyMA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543206620", "bodyText": "for auto recovery case, here should be a clear and add; only add is not enough", "author": "jiazhai", "createdAt": "2020-12-15T10:02:36Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -74,23 +78,26 @@ public RackawareEnsemblePlacementPolicyImpl initialize(ClientConfiguration conf,\n         if (conf.getProperty(ISOLATION_BOOKIE_GROUPS) != null) {\n             String isolationGroupsString = castToString(conf.getProperty(ISOLATION_BOOKIE_GROUPS));\n             if (!isolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : isolationGroupsString.split(\",\")) {\n-                    primaryIsolationGroups.add(isolationGroup);\n-                }\n+                fillIsolationGroup(isolationGroupsString, \"\");\n                 bookieMappingCache = getAndSetZkCache(conf);\n             }\n         }\n         if (conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS) != null) {\n             String secondaryIsolationGroupsString = castToString(conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS));\n-            if (!secondaryIsolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : secondaryIsolationGroupsString.split(\",\")) {\n-                    secondaryIsolationGroups.add(isolationGroup);\n-                }\n-            }\n+            fillIsolationGroup(\"\", secondaryIsolationGroupsString);\n         }\n         return super.initialize(conf, optionalDnsResolver, timer, featureProvider, statsLogger, bookieAddressResolver);\n     }\n \n+    private void fillIsolationGroup(String isolationBookieGroups, String secondaryIsolationBookieGroups) {\n+        if (!isolationBookieGroups.isEmpty()) {\n+            primaryIsolationGroups.addAll(Arrays.asList(isolationBookieGroups.split(\",\")));", "originalCommit": "8f08483c8392f34579f90ebf144130abf6d311a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIxMjc0NA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543212744", "bodyText": "okay. I will fix it.\nI wonder if it called from auto-recovery, the primaryIsolationGroups should be empty, right? Because the auto-recovery hasn't filled the list.", "author": "zymap", "createdAt": "2020-12-15T10:11:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNjYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9c6bdffb87a07f53b1e12ca6a2e0467d3b15a04f", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 5286bdb35d9..b8620839138 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -99,6 +99,9 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n     }\n \n     private String castToString(Object obj) {\n+        if (null == obj) {\n+            return \"\";\n+        }\n         if (obj instanceof List<?>) {\n             List<String> result = new ArrayList<>();\n             for (Object o : (List<?>) obj) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MDU5MQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543390591", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n          \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it's present, we will apply it to", "author": "jbampton", "createdAt": "2020-12-15T14:25:15Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -134,6 +141,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "originalCommit": "8f08483c8392f34579f90ebf144130abf6d311a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 5286bdb35d9..cbe3f243123 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -141,11 +141,6 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n-        // the isolation groups for filter the bookies.\n-        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n-            getEnsemblePlacementPolicyConfig(customMetadata);\n-        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);\n         Set<BookieId> blacklistedBookies = getBlacklistedBookies(ensembleSize);\n         if (excludeBookies == null) {\n             excludeBookies = new HashSet<BookieId>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTQ1NQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543391455", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the isolation groups for filter the bookies.\n          \n          \n            \n                    // the isolation groups for filtering the bookies.", "author": "jbampton", "createdAt": "2020-12-15T14:26:07Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -134,6 +141,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n+        // the isolation groups for filter the bookies.", "originalCommit": "8f08483c8392f34579f90ebf144130abf6d311a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 5286bdb35d9..cbe3f243123 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -141,11 +141,6 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n-        // the isolation groups for filter the bookies.\n-        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n-            getEnsemblePlacementPolicyConfig(customMetadata);\n-        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);\n         Set<BookieId> blacklistedBookies = getBlacklistedBookies(ensembleSize);\n         if (excludeBookies == null) {\n             excludeBookies = new HashSet<BookieId>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTg4Mg==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543391882", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n          \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it's present, we will apply it to", "author": "jbampton", "createdAt": "2020-12-15T14:26:37Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +159,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "originalCommit": "8f08483c8392f34579f90ebf144130abf6d311a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 5286bdb35d9..cbe3f243123 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -159,8 +154,8 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n-        // the isolation groups for filter the bookies.\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n         Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n             getEnsemblePlacementPolicyConfig(customMetadata);\n         ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5Mjg0Nw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543392847", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the isolation groups for filter the bookies.\n          \n          \n            \n                    // the isolation groups for filtering the bookies.", "author": "jbampton", "createdAt": "2020-12-15T14:27:43Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +159,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n+        // the isolation groups for filter the bookies.", "originalCommit": "8f08483c8392f34579f90ebf144130abf6d311a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 5286bdb35d9..cbe3f243123 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -159,8 +154,8 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n-        // the isolation groups for filter the bookies.\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n         Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n             getEnsemblePlacementPolicyConfig(customMetadata);\n         ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);\n"}}, {"oid": "84328ad9944a09414ffcb6f7bfcd804b51d225b9", "url": "https://github.com/apache/pulsar/commit/84328ad9944a09414ffcb6f7bfcd804b51d225b9", "message": "Add tests for the changes", "committedDate": "2020-12-16T01:23:42Z", "type": "commit"}, {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "url": "https://github.com/apache/pulsar/commit/e788dee5d34dce0278e53e41af8bf65b49bec7cf", "message": "Fix the tests and address comments", "committedDate": "2020-12-16T04:17:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg5Mg==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544093892", "bodyText": "it's better to move the placement policy ledger metadata to the LedgerMetadataUtils.java. Currently, all of the different types of ledger metadata is generated from the LedgerMetadataUtils.java", "author": "codelipenghui", "createdAt": "2020-12-16T08:13:11Z", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3239,6 +3250,21 @@ protected void asyncCreateLedger(BookKeeper bookKeeper, ManagedLedgerConfig conf\n         Map<String, byte[]> finalMetadata = new HashMap<>();\n         finalMetadata.putAll(ledgerMetadata);\n         finalMetadata.putAll(metadata);\n+        if (config.getBookKeeperEnsemblePlacementPolicyClassName() != null) {\n+            EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig = new EnsemblePlacementPolicyConfig(\n+                config.getBookKeeperEnsemblePlacementPolicyClassName(),\n+                config.getBookKeeperEnsemblePlacementPolicyProperties()\n+            );\n+            try {\n+                finalMetadata.put(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG,\n+                    ensemblePlacementPolicyConfig.encode());", "originalCommit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE3MjEwNw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544172107", "bodyText": "Fixed it.", "author": "zymap", "createdAt": "2020-12-16T10:10:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9c6bdffb87a07f53b1e12ca6a2e0467d3b15a04f", "chunk": "diff --git a/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java b/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\nindex 2eff3e55c86..582aeeffb6d 100644\n--- a/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\n+++ b/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\n\n@@ -3250,14 +3250,13 @@ public class ManagedLedgerImpl implements ManagedLedger, CreateCallback {\n         Map<String, byte[]> finalMetadata = new HashMap<>();\n         finalMetadata.putAll(ledgerMetadata);\n         finalMetadata.putAll(metadata);\n-        if (config.getBookKeeperEnsemblePlacementPolicyClassName() != null) {\n-            EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig = new EnsemblePlacementPolicyConfig(\n-                config.getBookKeeperEnsemblePlacementPolicyClassName(),\n-                config.getBookKeeperEnsemblePlacementPolicyProperties()\n-            );\n+        if (config.getBookKeeperEnsemblePlacementPolicyClassName() != null\n+            && config.getBookKeeperEnsemblePlacementPolicyProperties() != null) {\n             try {\n-                finalMetadata.put(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG,\n-                    ensemblePlacementPolicyConfig.encode());\n+                finalMetadata.putAll(LedgerMetadataUtils.buildMetadataForPlacementPolicyConfig(\n+                    config.getBookKeeperEnsemblePlacementPolicyClassName(),\n+                    config.getBookKeeperEnsemblePlacementPolicyProperties()\n+                ));\n             } catch (JsonUtil.ParseJsonException e) {\n                 log.error(\"[{}] Serialize the placement configuration failed\", name, e);\n                 cb.createComplete(Code.UnexpectedConditionException, null, ledgerCreated);\n"}}, {"oid": "9c6bdffb87a07f53b1e12ca6a2e0467d3b15a04f", "url": "https://github.com/apache/pulsar/commit/9c6bdffb87a07f53b1e12ca6a2e0467d3b15a04f", "message": "Address the comments", "committedDate": "2020-12-16T10:09:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0NTA3Mw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544345073", "bodyText": "so this is the fix.\ncan you please remove all unnecessary code formatting ?", "author": "eolivelli", "createdAt": "2020-12-16T14:32:49Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -142,11 +141,6 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "originalCommit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczMDgwMA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544730800", "bodyText": "I am sorry. Could you please tell me more? It seems that the line you comment already outdated.", "author": "zymap", "createdAt": "2020-12-17T00:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0NTA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5523613f99fd4fe377d449a5bec1cfd580f6778d", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex cbe3f243123..a3f4b89239e 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -141,7 +142,9 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        Set<BookieId> blacklistedBookies = getBlacklistedBookies(ensembleSize);\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        Set<BookieId> blacklistedBookies = getBlacklistedBookiesWithIsolationGroups(\n+            ensembleSize, getDefaultIsolationGroups());\n         if (excludeBookies == null) {\n             excludeBookies = new HashSet<BookieId>();\n         }\n"}}, {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc", "url": "https://github.com/apache/pulsar/commit/6e69713c91493d723a921aca7e9ecb0f3d92f6cc", "message": "Remove unused import iterms", "committedDate": "2020-12-17T01:05:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544828698", "bodyText": "The change here has concurrent access issues. Because it resets the primary and secondary isolation groups. It will cause replacing bookies using the wrong group.\nAlso, I don't think the logic here is correct.\nI think we should record the group information in the custom metadata. when replacing a bookie, we need to lookup the bookies in the same group. If it is not an easy change to make here, we should try to build a new bookie ensemble placement policy to achieve this goal and can be used for autorecovery.", "author": "sijie", "createdAt": "2020-12-17T05:47:58Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +157,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n+        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n+            getEnsemblePlacementPolicyConfig(customMetadata);\n+        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);", "originalCommit": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5NDc0MA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544894740", "bodyText": "I save the group information in the custom metadata.\nCurrently, the replaceBookie will get all the bookies that are not in the primary group and secondary group and add them to the blacklist.\nDo you mean I should not fill the primary and secondary isolation groups with the ensemble placement policy config which read from the custom metadata rather that I should directly use the placement policy config to get a blacklist?", "author": "zymap", "createdAt": "2020-12-17T08:21:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ3ODEyMg==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546478122", "bodyText": "@sijie Please take a look, thanks.", "author": "zymap", "createdAt": "2020-12-21T02:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3MzY1Mw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r548473653", "bodyText": "@zymap a local var should be enough", "author": "jiazhai", "createdAt": "2020-12-24T09:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}], "type": "inlineReview", "revised_code": {"commit": "34b0818ac85c07663f18c734930768ecaa996e40", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex b8620839138..5ec04e1630a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -161,8 +157,14 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n         // the isolation groups for filtering the bookies.\n         Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n             getEnsemblePlacementPolicyConfig(customMetadata);\n-        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);\n-        Set<BookieId> blacklistedBookies = getBlacklistedBookies(ensembleSize);\n+        Set<BookieId> blacklistedBookies;\n+        if (ensemblePlacementPolicyConfig.isPresent()) {\n+            EnsemblePlacementPolicyConfig config = ensemblePlacementPolicyConfig.get();\n+            Map<String, List<String>> groups = getIsolationGroup(config);\n+            blacklistedBookies = getBlacklistedBookiesWithIsolationGroups(ensembleSize, groups);\n+        } else {\n+            blacklistedBookies = getBlacklistedBookies(ensembleSize);\n+        }\n         if (excludeBookies == null) {\n             excludeBookies = new HashSet<BookieId>();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTMxMw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546531313", "bodyText": "Here we are modification shared data structures.\nI think this is the problem that @sijie is pointing out", "author": "eolivelli", "createdAt": "2020-12-21T06:30:34Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,6 +171,38 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private void fillIsolationGroupWithEnsemblePlacementPolicyConfig(\n+        EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            // Because of we may have different ensemblePolicyConfig from different ledgers, so clear\n+            // the isolation groups before refilling it.\n+            primaryIsolationGroups.clear();", "originalCommit": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY0MTYyNg==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546641626", "bodyText": "Yes. I think this is one of the questions.", "author": "zymap", "createdAt": "2020-12-21T10:58:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTMxMw=="}], "type": "inlineReview", "revised_code": {"commit": "34b0818ac85c07663f18c734930768ecaa996e40", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex b8620839138..5ec04e1630a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -187,20 +189,82 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n         return Optional.empty();\n     }\n \n-    private void fillIsolationGroupWithEnsemblePlacementPolicyConfig(\n-        EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n-\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        Map<String, List<String>> groups = new HashMap<>();\n         String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n         if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n             Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n-            // Because of we may have different ensemblePolicyConfig from different ledgers, so clear\n-            // the isolation groups before refilling it.\n-            primaryIsolationGroups.clear();\n-            secondaryIsolationGroups.clear();\n-            fillIsolationGroup(\n-                castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\")),\n-                castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\")));\n+            String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n+            String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n+            if (!primaryIsolationGroupString.isEmpty()) {\n+                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n+                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+            }\n+            if (!secondaryIsolationGroupString.isEmpty()) {\n+                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n+                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+            }\n+        }\n+        return groups;\n+    }\n+\n+    private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,\n+        Map<String, List<String>> isolationGroups) {\n+        Set<BookieId> blacklistedBookies = new HashSet<>();\n+        List<String> pGroup = isolationGroups.get(ISOLATION_BOOKIE_GROUPS);\n+        List<String> sGroup = isolationGroups.get(SECONDARY_ISOLATION_BOOKIE_GROUPS);\n+        try {\n+            if (bookieMappingCache != null) {\n+                BookiesRackConfiguration allGroupsBookieMapping = bookieMappingCache\n+                    .getData(ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH, this)\n+                    .orElseThrow(() -> new KeeperException.NoNodeException(\n+                        ZkBookieRackAffinityMapping.BOOKIE_INFO_ROOT_PATH));\n+                Set<String> allBookies = allGroupsBookieMapping.keySet();\n+                int totalAvailableBookiesInPrimaryGroup = 0;\n+                for (String group : allBookies) {\n+                    Set<String> bookiesInGroup = allGroupsBookieMapping.get(group).keySet();\n+                    if (!pGroup.contains(group)) {\n+                        for (String bookieAddress : bookiesInGroup) {\n+                            blacklistedBookies.add(BookieId.parse(bookieAddress));\n+                        }\n+                    } else {\n+                        for (String groupBookie : bookiesInGroup) {\n+                            totalAvailableBookiesInPrimaryGroup += knownBookies\n+                                .containsKey(BookieId.parse(groupBookie)) ? 1 : 0;\n+                        }\n+                    }\n+                }\n+                // sometime while doing isolation, user might not want to remove isolated bookies from other default\n+                // groups. so, same set of bookies could be overlapped into isolated-group and other default groups. so,\n+                // try to remove those overlapped bookies from excluded-bookie list because they are also part of\n+                // isolated-group bookies.\n+                for (String group : pGroup) {\n+                    Map<String, BookieInfo> bookieGroup = allGroupsBookieMapping.get(group);\n+                    if (bookieGroup != null && !bookieGroup.isEmpty()) {\n+                        for (String bookieAddress : bookieGroup.keySet()) {\n+                            blacklistedBookies.remove(BookieId.parse(bookieAddress));\n+                        }\n+                    }\n+                }\n+                // if primary-isolated-bookies are not enough then add consider secondary isolated bookie group as well.\n+                if (totalAvailableBookiesInPrimaryGroup < ensembleSize) {\n+                    LOG.info(\n+                        \"Not found enough available-bookies from primary isolation group [{}] , checking secondary group [{}]\",\n+                        pGroup, sGroup);\n+                    for (String group : sGroup) {\n+                        Map<String, BookieInfo> bookieGroup = allGroupsBookieMapping.get(group);\n+                        if (bookieGroup != null && !bookieGroup.isEmpty()) {\n+                            for (String bookieAddress : bookieGroup.keySet()) {\n+                                blacklistedBookies.remove(BookieId.parse(bookieAddress));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            LOG.warn(\"Error getting bookie isolation info from zk: {}\", e.getMessage());\n         }\n+        return blacklistedBookies;\n     }\n \n     private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n"}}, {"oid": "e71abedeb0d2b1ca985c68ed2288a2371de86ba2", "url": "https://github.com/apache/pulsar/commit/e71abedeb0d2b1ca985c68ed2288a2371de86ba2", "message": "Address comments", "committedDate": "2020-12-21T10:57:08Z", "type": "commit"}, {"oid": "34b0818ac85c07663f18c734930768ecaa996e40", "url": "https://github.com/apache/pulsar/commit/34b0818ac85c07663f18c734930768ecaa996e40", "message": "Address comments", "committedDate": "2020-12-25T13:40:06Z", "type": "commit"}, {"oid": "d575f8e9631157ec6429bb9a47d61c0cfd907ecd", "url": "https://github.com/apache/pulsar/commit/d575f8e9631157ec6429bb9a47d61c0cfd907ecd", "message": "Merge branch 'master' into fix-ledger-recover-isolation-group", "committedDate": "2020-12-28T00:33:00Z", "type": "commit"}, {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d", "url": "https://github.com/apache/pulsar/commit/5523613f99fd4fe377d449a5bec1cfd580f6778d", "message": "Reduce the code duplicate", "committedDate": "2020-12-28T02:48:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MDg0NA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549240844", "bodyText": "static ?", "author": "eolivelli", "createdAt": "2020-12-28T07:16:37Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -174,8 +168,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(Map<String, byte[]> customMetadata) {\n-        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(", "originalCommit": "e788dee5d34dce0278e53e41af8bf65b49bec7cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex cbe3f243123..935005a9f8a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -168,7 +177,7 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n         Map<String, byte[]> customMetadata) {\n \n         byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549241450", "bodyText": "static ?", "author": "eolivelli", "createdAt": "2020-12-28T07:19:01Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {", "originalCommit": "5523613f99fd4fe377d449a5bec1cfd580f6778d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzMjE3NQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549532175", "bodyText": "This method will use an instance variable.", "author": "zymap", "createdAt": "2020-12-29T00:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA1MjE1Nw==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r550052157", "bodyText": "you can pass the instance variable to the method, this way it is clearer that the method has not side effects", "author": "eolivelli", "createdAt": "2020-12-30T08:56:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA=="}], "type": "inlineReview", "revised_code": {"commit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex a3f4b89239e..935005a9f8a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -177,7 +177,7 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n         Map<String, byte[]> customMetadata) {\n \n         byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTUzNA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549241534", "bodyText": "static ?", "author": "eolivelli", "createdAt": "2020-12-28T07:19:14Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {", "originalCommit": "5523613f99fd4fe377d449a5bec1cfd580f6778d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex a3f4b89239e..935005a9f8a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -177,7 +177,7 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n         Map<String, byte[]> customMetadata) {\n \n         byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549242266", "bodyText": "can we make this method 'static' ?", "author": "eolivelli", "createdAt": "2020-12-28T07:22:32Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        Map<String, List<String>> groups = new HashMap<>();\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n+            String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n+            if (!primaryIsolationGroupString.isEmpty()) {\n+                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n+                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+            }\n+            if (!secondaryIsolationGroupString.isEmpty()) {\n+                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n+                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+            }\n+        }\n+        return groups;\n+    }\n+\n+    private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,", "originalCommit": "5523613f99fd4fe377d449a5bec1cfd580f6778d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzMjE4OA==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549532188", "bodyText": "This method will use an instance variable.", "author": "zymap", "createdAt": "2020-12-29T01:00:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA1MjIyMQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r550052221", "bodyText": "you can pass the instance variable to the method, this way it is clearer that the method has not side effects", "author": "eolivelli", "createdAt": "2020-12-30T08:56:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex a3f4b89239e..935005a9f8a 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -177,7 +177,7 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n         Map<String, byte[]> customMetadata) {\n \n         byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n"}}, {"oid": "a5d6e138dc16b5665771a9262b579e8a7eac1ed3", "url": "https://github.com/apache/pulsar/commit/a5d6e138dc16b5665771a9262b579e8a7eac1ed3", "message": "Merge remote-tracking branch 'apache/master' into fix-ledger-recover-isolation-group", "committedDate": "2020-12-28T11:42:52Z", "type": "commit"}, {"oid": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "url": "https://github.com/apache/pulsar/commit/d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "message": "Make some method static", "committedDate": "2020-12-29T00:59:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NjczOQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549596739", "bodyText": "I think you can use Pair<Set<String>, Set<String>> instead of a HashMap. Because you only have two sets of groups, one is the primary group and the other one is a secondary group. A HashHamp introduces a lot of overheads.", "author": "sijie", "createdAt": "2020-12-29T07:19:57Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private static Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {", "originalCommit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56ec9dda7106b61d9c55055bda68bb268aa2bea9", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 935005a9f8a..31b86ddf7e9 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -193,37 +201,26 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n         return Optional.empty();\n     }\n \n-    private Map<String, List<String>> getDefaultIsolationGroups() {\n-        Map<String, List<String>> isolationGroup = new HashMap<>();\n-        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n-        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n-        return isolationGroup;\n-    }\n-\n-    private static Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n-        Map<String, List<String>> groups = new HashMap<>();\n+    private static Pair<Set<String>, Set<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        MutablePair<Set<String>, Set<String>> pair = new MutablePair<>();\n         String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n         if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n             Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n             String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n             String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n             if (!primaryIsolationGroupString.isEmpty()) {\n-                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n-                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+                pair.setLeft(Sets.newHashSet(primaryIsolationGroupString.split(\",\")));\n             }\n             if (!secondaryIsolationGroupString.isEmpty()) {\n-                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n-                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+                pair.setRight(Sets.newHashSet(secondaryIsolationGroupString.split(\",\")));\n             }\n         }\n-        return groups;\n+        return pair;\n     }\n \n     private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,\n-        Map<String, List<String>> isolationGroups) {\n+        Pair<Set<String>, Set<String>> isolationGroups) {\n         Set<BookieId> blacklistedBookies = new HashSet<>();\n-        List<String> pGroup = isolationGroups.get(ISOLATION_BOOKIE_GROUPS);\n-        List<String> sGroup = isolationGroups.get(SECONDARY_ISOLATION_BOOKIE_GROUPS);\n         try {\n             if (bookieMappingCache != null) {\n                 BookiesRackConfiguration allGroupsBookieMapping = bookieMappingCache\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NzE0NQ==", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549597145", "bodyText": "Can you create the defaultIsolationGroups when creating the ensemble placement policy? Because the default isolation groups don't change after creations, correct?", "author": "sijie", "createdAt": "2020-12-29T07:21:36Z", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();", "originalCommit": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "56ec9dda7106b61d9c55055bda68bb268aa2bea9", "chunk": "diff --git a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\nindex 935005a9f8a..31b86ddf7e9 100644\n--- a/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n+++ b/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java\n\n@@ -193,37 +201,26 @@ public class ZkIsolatedBookieEnsemblePlacementPolicy extends RackawareEnsemblePl\n         return Optional.empty();\n     }\n \n-    private Map<String, List<String>> getDefaultIsolationGroups() {\n-        Map<String, List<String>> isolationGroup = new HashMap<>();\n-        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n-        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n-        return isolationGroup;\n-    }\n-\n-    private static Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n-        Map<String, List<String>> groups = new HashMap<>();\n+    private static Pair<Set<String>, Set<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        MutablePair<Set<String>, Set<String>> pair = new MutablePair<>();\n         String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n         if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n             Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n             String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n             String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n             if (!primaryIsolationGroupString.isEmpty()) {\n-                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n-                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+                pair.setLeft(Sets.newHashSet(primaryIsolationGroupString.split(\",\")));\n             }\n             if (!secondaryIsolationGroupString.isEmpty()) {\n-                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n-                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+                pair.setRight(Sets.newHashSet(secondaryIsolationGroupString.split(\",\")));\n             }\n         }\n-        return groups;\n+        return pair;\n     }\n \n     private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,\n-        Map<String, List<String>> isolationGroups) {\n+        Pair<Set<String>, Set<String>> isolationGroups) {\n         Set<BookieId> blacklistedBookies = new HashSet<>();\n-        List<String> pGroup = isolationGroups.get(ISOLATION_BOOKIE_GROUPS);\n-        List<String> sGroup = isolationGroups.get(SECONDARY_ISOLATION_BOOKIE_GROUPS);\n         try {\n             if (bookieMappingCache != null) {\n                 BookiesRackConfiguration allGroupsBookieMapping = bookieMappingCache\n"}}, {"oid": "56ec9dda7106b61d9c55055bda68bb268aa2bea9", "url": "https://github.com/apache/pulsar/commit/56ec9dda7106b61d9c55055bda68bb268aa2bea9", "message": "Address comments", "committedDate": "2020-12-29T08:46:24Z", "type": "commit"}, {"oid": "22d6d89dfc4449eb0145f45f2e68847ae6b67927", "url": "https://github.com/apache/pulsar/commit/22d6d89dfc4449eb0145f45f2e68847ae6b67927", "message": "Remove the bookkeeper-server dependency", "committedDate": "2020-12-29T09:24:33Z", "type": "commit"}, {"oid": "b8379b429cd64071d699729d971ee8e6ce358f16", "url": "https://github.com/apache/pulsar/commit/b8379b429cd64071d699729d971ee8e6ce358f16", "message": "Fix the tests", "committedDate": "2020-12-29T13:47:46Z", "type": "commit"}, {"oid": "a7cbb5a78d45f04c092e26a24d7a569e534e6c0f", "url": "https://github.com/apache/pulsar/commit/a7cbb5a78d45f04c092e26a24d7a569e534e6c0f", "message": "Fix the tests", "committedDate": "2020-12-30T02:09:25Z", "type": "commit"}]}