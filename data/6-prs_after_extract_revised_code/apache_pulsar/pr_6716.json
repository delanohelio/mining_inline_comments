{"pr_number": 6716, "pr_title": "[Issue #6711]: add audience verify in AuthenticationProviderToken", "pr_createdAt": "2020-04-11T04:55:20Z", "pr_url": "https://github.com/apache/pulsar/pull/6716", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MDY1OQ==", "url": "https://github.com/apache/pulsar/pull/6716#discussion_r407090659", "bodyText": "I think we need to move the configuration validation logic to right after line 86. Since it indicates iellgall configuration settings.", "author": "sijie", "createdAt": "2020-04-11T17:43:27Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java", "diffHunk": "@@ -126,9 +137,40 @@ private static String validateToken(final String token) throws AuthenticationExc\n     @SuppressWarnings(\"unchecked\")\n     private Jwt<?, Claims> authenticateToken(final String token) throws AuthenticationException {\n         try {\n-            return Jwts.parser()\n+            Jwt<?, Claims> jwt = Jwts.parser()\n                     .setSigningKey(validationKey)\n                     .parse(token);\n+\n+            if (audienceClaim != null) {\n+                if (audience == null){", "originalCommit": "fcc34938a5c4e0765e4daa9393c30ae0322618de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1Mjk4Mw==", "url": "https://github.com/apache/pulsar/pull/6716#discussion_r407252983", "bodyText": "I think the check here should be moved to initialize method.", "author": "sijie", "createdAt": "2020-04-12T21:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MDY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1c63f199f9a0707792bbdc023b7b208922be21d9", "chunk": "diff --git a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\nindex 3680a08c50a..9fcfc4bc850 100644\n--- a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n+++ b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n\n@@ -166,7 +166,7 @@ public class AuthenticationProviderToken implements AuthenticationProvider {\n                     }\n                 } else {\n                     // should not reach here.\n-                    throw new AuthenticationException(\"Audiences in token is not in String format: \" + object);\n+                    throw new AuthenticationException(\"Audiences in token is not in expected format: \" + object);\n                 }\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MDgzMw==", "url": "https://github.com/apache/pulsar/pull/6716#discussion_r407090833", "bodyText": "If the broker configures the audience claim and receives a token that doesn't contain the audience claim, we should throw AuthenticationException.", "author": "sijie", "createdAt": "2020-04-11T17:44:57Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java", "diffHunk": "@@ -126,9 +137,40 @@ private static String validateToken(final String token) throws AuthenticationExc\n     @SuppressWarnings(\"unchecked\")\n     private Jwt<?, Claims> authenticateToken(final String token) throws AuthenticationException {\n         try {\n-            return Jwts.parser()\n+            Jwt<?, Claims> jwt = Jwts.parser()\n                     .setSigningKey(validationKey)\n                     .parse(token);\n+\n+            if (audienceClaim != null) {\n+                if (audience == null){\n+                    throw new JwtException(\"Token Audience Claim [\" + audienceClaim\n+                                           + \"] configured, but Audience stands for this broker not.\");\n+                }\n+\n+                Object object = jwt.getBody().get(audienceClaim);\n+                if (object == null) {\n+                    throw new JwtException(\"Found null Audience in token, for claimed field: \" + audienceClaim);", "originalCommit": "fcc34938a5c4e0765e4daa9393c30ae0322618de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwOTE1Mw==", "url": "https://github.com/apache/pulsar/pull/6716#discussion_r407209153", "bodyText": "Right. currently, the JwtException will be wrapped into a AuthenticationException in line 174 below.", "author": "jiazhai", "createdAt": "2020-04-12T14:52:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MDgzMw=="}], "type": "inlineReview", "revised_code": {"commit": "1c63f199f9a0707792bbdc023b7b208922be21d9", "chunk": "diff --git a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\nindex 3680a08c50a..9fcfc4bc850 100644\n--- a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n+++ b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n\n@@ -166,7 +166,7 @@ public class AuthenticationProviderToken implements AuthenticationProvider {\n                     }\n                 } else {\n                     // should not reach here.\n-                    throw new AuthenticationException(\"Audiences in token is not in String format: \" + object);\n+                    throw new AuthenticationException(\"Audiences in token is not in expected format: \" + object);\n                 }\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA5MDg5Nw==", "url": "https://github.com/apache/pulsar/pull/6716#discussion_r407090897", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw new AuthenticationException(\"Audiences in token is not in String format: \" + object);\n          \n          \n            \n                                throw new AuthenticationException(\"Audiences in token is not in expected format: \" + object);", "author": "sijie", "createdAt": "2020-04-11T17:45:45Z", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java", "diffHunk": "@@ -126,9 +137,40 @@ private static String validateToken(final String token) throws AuthenticationExc\n     @SuppressWarnings(\"unchecked\")\n     private Jwt<?, Claims> authenticateToken(final String token) throws AuthenticationException {\n         try {\n-            return Jwts.parser()\n+            Jwt<?, Claims> jwt = Jwts.parser()\n                     .setSigningKey(validationKey)\n                     .parse(token);\n+\n+            if (audienceClaim != null) {\n+                if (audience == null){\n+                    throw new JwtException(\"Token Audience Claim [\" + audienceClaim\n+                                           + \"] configured, but Audience stands for this broker not.\");\n+                }\n+\n+                Object object = jwt.getBody().get(audienceClaim);\n+                if (object == null) {\n+                    throw new JwtException(\"Found null Audience in token, for claimed field: \" + audienceClaim);\n+                }\n+\n+                if (object instanceof List) {\n+                    List<String> audiences = (List<String>) object;\n+                    // audience not contains this broker, throw exception.\n+                    if (!audiences.stream().anyMatch(audienceInToken -> audienceInToken.equals(audience))) {\n+                        throw new AuthenticationException(\"Audiences in token: [\" + String.join(\", \", audiences)\n+                                                          + \"] not contains this broker: \" + audience);\n+                    }\n+                } else if (object instanceof String) {\n+                    if (!object.equals(audience)) {\n+                        throw new AuthenticationException(\"Audiences in token: [\" + object\n+                                                          + \"] not contains this broker: \" + audience);\n+                    }\n+                } else {\n+                    // should not reach here.\n+                    throw new AuthenticationException(\"Audiences in token is not in String format: \" + object);", "originalCommit": "fcc34938a5c4e0765e4daa9393c30ae0322618de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c63f199f9a0707792bbdc023b7b208922be21d9", "chunk": "diff --git a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\nindex 3680a08c50a..9fcfc4bc850 100644\n--- a/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n+++ b/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java\n\n@@ -166,7 +166,7 @@ public class AuthenticationProviderToken implements AuthenticationProvider {\n                     }\n                 } else {\n                     // should not reach here.\n-                    throw new AuthenticationException(\"Audiences in token is not in String format: \" + object);\n+                    throw new AuthenticationException(\"Audiences in token is not in expected format: \" + object);\n                 }\n             }\n \n"}}, {"oid": "1c63f199f9a0707792bbdc023b7b208922be21d9", "url": "https://github.com/apache/pulsar/commit/1c63f199f9a0707792bbdc023b7b208922be21d9", "message": "rebase master, chanage following comments", "committedDate": "2020-04-12T14:54:49Z", "type": "forcePushed"}, {"oid": "67d0627188d5221ce64f4b5527eb9fb349225c03", "url": "https://github.com/apache/pulsar/commit/67d0627188d5221ce64f4b5527eb9fb349225c03", "message": "add audience verify in AuthenticationProviderToken", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "5891a7087ffe4f22e0ffe9d8b1b88030eb69a6b1", "url": "https://github.com/apache/pulsar/commit/5891a7087ffe4f22e0ffe9d8b1b88030eb69a6b1", "message": "change doc", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "b9c81c1f37bb54e57abb6f6c4a8ff9c1674bcdaf", "url": "https://github.com/apache/pulsar/commit/b9c81c1f37bb54e57abb6f6c4a8ff9c1674bcdaf", "message": "fix licencecheck for jjwt version update", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "8c538e01da3812bcea6c2d70998582db060b7a4c", "url": "https://github.com/apache/pulsar/commit/8c538e01da3812bcea6c2d70998582db060b7a4c", "message": "rebase master, chanage following comments", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "c63891a8593de303be257c5a65499070355244b5", "url": "https://github.com/apache/pulsar/commit/c63891a8593de303be257c5a65499070355244b5", "message": "change following comments", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "e99bc7618c7a2caa491072c6419cc773a62061c5", "url": "https://github.com/apache/pulsar/commit/e99bc7618c7a2caa491072c6419cc773a62061c5", "message": "change ut", "committedDate": "2020-04-16T00:44:09Z", "type": "commit"}, {"oid": "e99bc7618c7a2caa491072c6419cc773a62061c5", "url": "https://github.com/apache/pulsar/commit/e99bc7618c7a2caa491072c6419cc773a62061c5", "message": "change ut", "committedDate": "2020-04-16T00:44:09Z", "type": "forcePushed"}]}