{"pr_number": 6760, "pr_title": "[pulsar-client] Add support to load tls certs/key dynamically from inputstream", "pr_createdAt": "2020-04-18T03:33:07Z", "pr_url": "https://github.com/apache/pulsar/pull/6760", "timeline": [{"oid": "13c1e2d87b4798ddf76ddce28abc974b240e0f86", "url": "https://github.com/apache/pulsar/commit/13c1e2d87b4798ddf76ddce28abc974b240e0f86", "message": "[pulsar-client] Add support to load tls certs/key dynamically from input-stream", "committedDate": "2020-04-18T03:38:14Z", "type": "commit"}, {"oid": "13c1e2d87b4798ddf76ddce28abc974b240e0f86", "url": "https://github.com/apache/pulsar/commit/13c1e2d87b4798ddf76ddce28abc974b240e0f86", "message": "[pulsar-client] Add support to load tls certs/key dynamically from input-stream", "committedDate": "2020-04-18T03:38:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5NjY3OQ==", "url": "https://github.com/apache/pulsar/pull/6760#discussion_r410696679", "bodyText": "This could be removed?", "author": "jiazhai", "createdAt": "2020-04-18T13:10:28Z", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/util/SecurityUtility.java", "diffHunk": "@@ -238,24 +240,53 @@ public static SSLContext createSslContext(boolean allowInsecureConnection, Certi\n         }\n \n         try (FileInputStream input = new FileInputStream(certFilePath)) {\n-            CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n-            Collection<X509Certificate> collection = (Collection<X509Certificate>) cf.generateCertificates(input);\n-            certificates = collection.toArray(new X509Certificate[collection.size()]);\n+            certificates = loadCertificatesFromPemStream(input);\n         } catch (GeneralSecurityException | IOException e) {\n             throw new KeyManagementException(\"Certificate loading error\", e);\n         }\n \n         return certificates;\n     }\n \n+    public static X509Certificate[] loadCertificatesFromPemStream(InputStream inStream) throws KeyManagementException  {\n+        if (inStream == null) {\n+            return null;\n+        }\n+        CertificateFactory cf;\n+        try {\n+            cf = CertificateFactory.getInstance(\"X.509\");\n+            Collection<X509Certificate> collection = (Collection<X509Certificate>) cf.generateCertificates(inStream);\n+            return collection.toArray(new X509Certificate[collection.size()]);\n+        } catch (CertificateException e) {\n+            throw new KeyManagementException(\"Certificate loading error\", e);\n+        }\n+    }\n+\n     public static PrivateKey loadPrivateKeyFromPemFile(String keyFilePath) throws KeyManagementException {\n         PrivateKey privateKey = null;\n \n         if (keyFilePath == null || keyFilePath.isEmpty()) {\n             return privateKey;\n         }\n \n-        try (BufferedReader reader = new BufferedReader(new FileReader(keyFilePath))) {\n+        try (FileInputStream input = new FileInputStream(keyFilePath)) {\n+            privateKey = loadPrivateKeyFromPemStream(input);\n+        } catch (IOException e) {\n+            throw new KeyManagementException(\"Private key loading error\", e);\n+        }\n+\n+        return privateKey;\n+    }\n+\n+    public static PrivateKey loadPrivateKeyFromPemStream(InputStream inStream) throws KeyManagementException {\n+        PrivateKey privateKey = null;\n+\n+        if (inStream == null) {\n+            return privateKey;\n+        }\n+\n+        //TODO: check if bufferReader should be closed or not", "originalCommit": "13c1e2d87b4798ddf76ddce28abc974b240e0f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMjcxMg==", "url": "https://github.com/apache/pulsar/pull/6760#discussion_r411012712", "bodyText": "Yes, fixed it. actually user provided stream can be read multiple times by multiple connections so, pulsar-client needs a stream that can be marked and reset. So, I changed interface with ByteArrayInputStream to support reading same provided stream multiple times.", "author": "rdhabalia", "createdAt": "2020-04-19T23:11:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5NjY3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6c5662bb8bb642defe96c157cc8436d414b4fa14", "chunk": "diff --git a/pulsar-common/src/main/java/org/apache/pulsar/common/util/SecurityUtility.java b/pulsar-common/src/main/java/org/apache/pulsar/common/util/SecurityUtility.java\nindex bd662671381..49cce4a4418 100644\n--- a/pulsar-common/src/main/java/org/apache/pulsar/common/util/SecurityUtility.java\n+++ b/pulsar-common/src/main/java/org/apache/pulsar/common/util/SecurityUtility.java\n\n@@ -254,10 +254,13 @@ public class SecurityUtility {\n         }\n         CertificateFactory cf;\n         try {\n+            if (inStream.markSupported()) {\n+                inStream.reset();\n+            }\n             cf = CertificateFactory.getInstance(\"X.509\");\n             Collection<X509Certificate> collection = (Collection<X509Certificate>) cf.generateCertificates(inStream);\n             return collection.toArray(new X509Certificate[collection.size()]);\n-        } catch (CertificateException e) {\n+        } catch (CertificateException | IOException e) {\n             throw new KeyManagementException(\"Certificate loading error\", e);\n         }\n     }\n"}}, {"oid": "6c5662bb8bb642defe96c157cc8436d414b4fa14", "url": "https://github.com/apache/pulsar/commit/6c5662bb8bb642defe96c157cc8436d414b4fa14", "message": "change interfrace with ByteArrayInputStream", "committedDate": "2020-04-19T23:02:41Z", "type": "commit"}]}