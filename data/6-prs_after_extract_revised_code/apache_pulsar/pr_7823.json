{"pr_number": 7823, "pr_title": "[pulsar-client] Avoid subscribing the same topic again", "pr_createdAt": "2020-08-16T19:01:31Z", "pr_url": "https://github.com/apache/pulsar/pull/7823", "timeline": [{"oid": "5ea666f0a0aee14f86dc9e39aa2c75754cc217c2", "url": "https://github.com/apache/pulsar/commit/5ea666f0a0aee14f86dc9e39aa2c75754cc217c2", "message": "Use full topic name as key of topics", "committedDate": "2020-08-14T10:56:24Z", "type": "commit"}, {"oid": "64dc38a3512ddbd5de5558796f577aa8b9a0d0d1", "url": "https://github.com/apache/pulsar/commit/64dc38a3512ddbd5de5558796f577aa8b9a0d0d1", "message": "Fix unit tests error", "committedDate": "2020-08-16T17:41:15Z", "type": "commit"}, {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d", "url": "https://github.com/apache/pulsar/commit/30d5c2b61a61168d387056cad8cafc2cb59ca10d", "message": "Add unit tests of resubscribing the same topic", "committedDate": "2020-08-16T18:40:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA==", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471189958", "bodyText": "Why remove !topicNameValid(topicName) ? I think we should return Topic name not valid when the topic name does not valid and return Already subscribe to {} for the duplicate topic name.", "author": "codelipenghui", "createdAt": "2020-08-17T01:29:58Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }\n     }\n \n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n-        if (!topicNameValid(topicName)) {\n+        TopicName topicNameInstance = getTopicName(topicName);", "originalCommit": "30d5c2b61a61168d387056cad8cafc2cb59ca10d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NzE0NA==", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471197144", "bodyText": "I validate it in line 746 to 748. Because TopicName could be reused, if I wrap the validation in topicNameValid, I have to create TopicName to get full topic name and partitioned topic name again. I can't think an elegant way to do it so I create a TopicName instance at first of subscribeAsync and do checks", "author": "BewareMyPower", "createdAt": "2020-08-17T02:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyMDgzNw==", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471320837", "bodyText": "@codelipenghui Sorry I haven't noticed the later part of your review before. I didn't change the original behavior in this PR because it needs relative changes with unit tests. I'll do it soon.", "author": "BewareMyPower", "createdAt": "2020-08-17T08:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA=="}], "type": "inlineReview", "revised_code": {"commit": "325de4e75ff9f2f471c328aa346741a346913ace", "chunk": "diff --git a/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java b/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\nindex 8baf7da41d1..b3ac5a33694 100644\n--- a/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\n+++ b/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\n\n@@ -743,13 +743,15 @@ public class MultiTopicsConsumerImpl<T> extends ConsumerBase<T> {\n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n         TopicName topicNameInstance = getTopicName(topicName);\n-        if (topicNameInstance == null\n-                || topics.containsKey(topicNameInstance.toString())\n-                || topics.containsKey(topicNameInstance.getPartitionedTopicName())) {\n+        if (topicNameInstance == null) {\n             return FutureUtil.failedFuture(\n-                new PulsarClientException.AlreadyClosedException(\"Topic name not valid\"));\n+                    new PulsarClientException.AlreadyClosedException(\"Topic name not valid\"));\n         }\n         String fullTopicName = topicNameInstance.toString();\n+        if (topics.containsKey(fullTopicName) || topics.containsKey(topicNameInstance.getPartitionedTopicName())) {\n+            return FutureUtil.failedFuture(\n+                    new PulsarClientException.AlreadyClosedException(\"Already subscribed to \" + topicName));\n+        }\n \n         if (getState() == State.Closing || getState() == State.Closed) {\n             return FutureUtil.failedFuture(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MjU0MQ==", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471192541", "bodyText": "It seems that we do not need to add these methods?", "author": "codelipenghui", "createdAt": "2020-08-17T01:44:13Z", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }", "originalCommit": "30d5c2b61a61168d387056cad8cafc2cb59ca10d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5Nzk1OQ==", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471197959", "bodyText": "getTopicName and getFullTopicName are just for ignoring the exceptions because we will throw a PulsarClientException later. removeTopic is to ensure that the key to remove is a full topic name.", "author": "BewareMyPower", "createdAt": "2020-08-17T02:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MjU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "325de4e75ff9f2f471c328aa346741a346913ace", "chunk": "diff --git a/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java b/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\nindex 8baf7da41d1..b3ac5a33694 100644\n--- a/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\n+++ b/pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java\n\n@@ -743,13 +743,15 @@ public class MultiTopicsConsumerImpl<T> extends ConsumerBase<T> {\n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n         TopicName topicNameInstance = getTopicName(topicName);\n-        if (topicNameInstance == null\n-                || topics.containsKey(topicNameInstance.toString())\n-                || topics.containsKey(topicNameInstance.getPartitionedTopicName())) {\n+        if (topicNameInstance == null) {\n             return FutureUtil.failedFuture(\n-                new PulsarClientException.AlreadyClosedException(\"Topic name not valid\"));\n+                    new PulsarClientException.AlreadyClosedException(\"Topic name not valid\"));\n         }\n         String fullTopicName = topicNameInstance.toString();\n+        if (topics.containsKey(fullTopicName) || topics.containsKey(topicNameInstance.getPartitionedTopicName())) {\n+            return FutureUtil.failedFuture(\n+                    new PulsarClientException.AlreadyClosedException(\"Already subscribed to \" + topicName));\n+        }\n \n         if (getState() == State.Closing || getState() == State.Closed) {\n             return FutureUtil.failedFuture(\n"}}, {"oid": "325de4e75ff9f2f471c328aa346741a346913ace", "url": "https://github.com/apache/pulsar/commit/325de4e75ff9f2f471c328aa346741a346913ace", "message": "Return already subscribed error for duplicated topic name", "committedDate": "2020-08-17T08:54:55Z", "type": "commit"}, {"oid": "75401f42481e07b8244375f73c3266e27840195b", "url": "https://github.com/apache/pulsar/commit/75401f42481e07b8244375f73c3266e27840195b", "message": "Add unit tests for subscribing the same topic with prefix", "committedDate": "2020-08-17T09:29:36Z", "type": "commit"}, {"oid": "733281ebd17fa427debade07dad1d4fc30ffbedc", "url": "https://github.com/apache/pulsar/commit/733281ebd17fa427debade07dad1d4fc30ffbedc", "message": "Change topic name to be consistent with test name", "committedDate": "2020-08-17T09:47:02Z", "type": "commit"}]}