{"pr_number": 8985, "pr_title": "[Issue 8887][tiered-storage-jcloud] support tiered-storage provider by aliyun OSS", "pr_createdAt": "2020-12-17T07:37:27Z", "pr_url": "https://github.com/apache/pulsar/pull/8985", "timeline": [{"oid": "456f5d231dffb3389012dfd96526d317855fb4d8", "url": "https://github.com/apache/pulsar/commit/456f5d231dffb3389012dfd96526d317855fb4d8", "message": "support tiered-storage provider by aliyun OSS (#8887)", "committedDate": "2020-12-17T07:20:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzNjYxNw==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r545636617", "bodyText": "I think it's better to define a new constant like here \n  \n    \n      pulsar/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n    \n    \n         Line 258\n      in\n      bf9f619\n    \n    \n    \n    \n\n        \n          \n           static final BlobStoreBuilder BLOB_STORE_BUILDER = (TieredStorageConfiguration config) -> {", "author": "Renkai", "createdAt": "2020-12-18T08:09:30Z", "path": "tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java", "diffHunk": "@@ -162,6 +165,48 @@ public void buildCredentials(TieredStorageConfiguration config) {\n         }\n     },\n \n+\n+    /**\n+     * Aliyun OSS is compatible with the S3 API\n+     * https://www.alibabacloud.com/help/doc-detail/64919.htm\n+     */\n+    ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n+        @Override\n+        public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n+            VALIDATION.validate(config);\n+        }\n+\n+        @Override\n+        public BlobStore getBlobStore(TieredStorageConfiguration config) {\n+            ContextBuilder contextBuilder = ContextBuilder.newBuilder(config.getProviderMetadata());", "originalCommit": "456f5d231dffb3389012dfd96526d317855fb4d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY2NDQ4Ng==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r545664486", "bodyText": "fixed PTAL", "author": "yufan022", "createdAt": "2020-12-18T08:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzNjYxNw=="}], "type": "inlineReview", "revised_code": {"commit": "5f7000433ad9ae0401e646be64f05ab67032640d", "chunk": "diff --git a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\nindex c6ebbfd27c4..6fc64f35169 100644\n--- a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n+++ b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n\n@@ -178,27 +178,7 @@ public enum JCloudBlobStoreProvider implements Serializable, ConfigValidation, B\n \n         @Override\n         public BlobStore getBlobStore(TieredStorageConfiguration config) {\n-            ContextBuilder contextBuilder = ContextBuilder.newBuilder(config.getProviderMetadata());\n-            Properties overrides = config.getOverrides();\n-            // For security reasons, OSS supports only virtual hosted style access.\n-            overrides.setProperty(S3Constants.PROPERTY_S3_VIRTUAL_HOST_BUCKETS, \"true\");\n-            contextBuilder.overrides(overrides);\n-\n-            if (StringUtils.isNotEmpty(config.getServiceEndpoint())) {\n-                contextBuilder.endpoint(config.getServiceEndpoint());\n-            }\n-\n-            if (config.getProviderCredentials() != null) {\n-                return contextBuilder\n-                        .credentialsSupplier(config.getCredentials())\n-                        .buildView(BlobStoreContext.class)\n-                        .getBlobStore();\n-            } else {\n-                log.warn(\"The credentials is null. driver: {}, bucket: {}\", config.getDriver(), config.getBucket());\n-                return contextBuilder\n-                        .buildView(BlobStoreContext.class)\n-                        .getBlobStore();\n-            }\n+            return OSS_BLOB_STORE_BUILDER.getBlobStore(config);\n         }\n \n         @Override\n"}}, {"oid": "5f7000433ad9ae0401e646be64f05ab67032640d", "url": "https://github.com/apache/pulsar/commit/5f7000433ad9ae0401e646be64f05ab67032640d", "message": "support tiered-storage provider by aliyun OSS (#8887)", "committedDate": "2020-12-18T08:44:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc4OTc0Mg==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r545789742", "bodyText": "S3_STANDARD_BLOB_STORE_BUILDER, S3_COMMENT_BLOB_STORE_BUILDER or other names? It seems that oss is a universal name.", "author": "gaoran10", "createdAt": "2020-12-18T12:05:59Z", "path": "tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java", "diffHunk": "@@ -162,6 +165,28 @@ public void buildCredentials(TieredStorageConfiguration config) {\n         }\n     },\n \n+\n+    /**\n+     * Aliyun OSS is compatible with the S3 API\n+     * https://www.alibabacloud.com/help/doc-detail/64919.htm\n+     */\n+    ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n+        @Override\n+        public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n+            VALIDATION.validate(config);\n+        }\n+\n+        @Override\n+        public BlobStore getBlobStore(TieredStorageConfiguration config) {\n+            return OSS_BLOB_STORE_BUILDER.getBlobStore(config);", "originalCommit": "5f7000433ad9ae0401e646be64f05ab67032640d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM3Mjc3NQ==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r546372775", "bodyText": "AWS_S3 enum is already compatible with S3 API.\nif use OSS_BLOB_STORE_BUILDER,OSS_VALIDATION , it will only belongs to Aliyun OSS.\nBut using S3_API_BLOB_STORE_BUILDER,S3_API_VALIDATION make it universal, both make sense.\nWhat's your suggestion?", "author": "yufan022", "createdAt": "2020-12-20T12:48:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc4OTc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "chunk": "diff --git a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\nindex 6fc64f35169..5a7c1f23dc5 100644\n--- a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n+++ b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n\n@@ -173,7 +173,21 @@ public enum JCloudBlobStoreProvider implements Serializable, ConfigValidation, B\n     ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n         @Override\n         public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n-            VALIDATION.validate(config);\n+            if (Strings.isNullOrEmpty(config.getServiceEndpoint())) {\n+                throw new IllegalArgumentException(\n+                        \"ServiceEndpoint must specified for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (Strings.isNullOrEmpty(config.getBucket())) {\n+                throw new IllegalArgumentException(\n+                        \"Bucket cannot be empty for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (config.getMaxBlockSizeInBytes() < (5 * 1024 * 1024)) {\n+                throw new IllegalArgumentException(\n+                        \"ManagedLedgerOffloadMaxBlockSizeInBytes cannot be less than 5MB for \"\n+                                + config.getDriver() + \" offload\");\n+            }\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5MzExMg==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r545793112", "bodyText": "Does the serviceEndpoint is a necessary configuration? If necessary it's better to add a configuration validationcheck.", "author": "gaoran10", "createdAt": "2020-12-18T12:13:21Z", "path": "tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java", "diffHunk": "@@ -162,6 +165,28 @@ public void buildCredentials(TieredStorageConfiguration config) {\n         }\n     },\n \n+\n+    /**\n+     * Aliyun OSS is compatible with the S3 API\n+     * https://www.alibabacloud.com/help/doc-detail/64919.htm\n+     */\n+    ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n+        @Override\n+        public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n+            VALIDATION.validate(config);", "originalCommit": "5f7000433ad9ae0401e646be64f05ab67032640d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM3MzA0Mg==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r546373042", "bodyText": "Yep, serviceEndpointis a necessary configuration, I will add a new validator.", "author": "yufan022", "createdAt": "2020-12-20T12:50:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5MzExMg=="}], "type": "inlineReview", "revised_code": {"commit": "2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "chunk": "diff --git a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\nindex 6fc64f35169..5a7c1f23dc5 100644\n--- a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n+++ b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n\n@@ -173,7 +173,21 @@ public enum JCloudBlobStoreProvider implements Serializable, ConfigValidation, B\n     ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n         @Override\n         public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n-            VALIDATION.validate(config);\n+            if (Strings.isNullOrEmpty(config.getServiceEndpoint())) {\n+                throw new IllegalArgumentException(\n+                        \"ServiceEndpoint must specified for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (Strings.isNullOrEmpty(config.getBucket())) {\n+                throw new IllegalArgumentException(\n+                        \"Bucket cannot be empty for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (config.getMaxBlockSizeInBytes() < (5 * 1024 * 1024)) {\n+                throw new IllegalArgumentException(\n+                        \"ManagedLedgerOffloadMaxBlockSizeInBytes cannot be less than 5MB for \"\n+                                + config.getDriver() + \" offload\");\n+            }\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5NzU4OQ==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r545797589", "bodyText": "Does the Aliyun security validate is the same as AWS? Do we need to add environment configurations for the Aliyun service? Currently, the AWS security configurations could refer to doc.", "author": "gaoran10", "createdAt": "2020-12-18T12:23:27Z", "path": "tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java", "diffHunk": "@@ -162,6 +165,28 @@ public void buildCredentials(TieredStorageConfiguration config) {\n         }\n     },\n \n+\n+    /**\n+     * Aliyun OSS is compatible with the S3 API\n+     * https://www.alibabacloud.com/help/doc-detail/64919.htm\n+     */\n+    ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n+        @Override\n+        public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n+            VALIDATION.validate(config);\n+        }\n+\n+        @Override\n+        public BlobStore getBlobStore(TieredStorageConfiguration config) {\n+            return OSS_BLOB_STORE_BUILDER.getBlobStore(config);\n+        }\n+\n+        @Override\n+        public void buildCredentials(TieredStorageConfiguration config) {\n+            AWS_CREDENTIAL_BUILDER.buildCredentials(config);", "originalCommit": "5f7000433ad9ae0401e646be64f05ab67032640d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM3MzkwOQ==", "url": "https://github.com/apache/pulsar/pull/8985#discussion_r546373909", "bodyText": "Environment variables are reuse for AWS_ACCESS_KEY_ID , AWS_SECRET_ACCESS_KEY .\nYou mean we should add new environment variables like ALIYUN_ACCESS_KEY_ID, ALIYUN_SECRET_ACCESS_KEY?", "author": "yufan022", "createdAt": "2020-12-20T12:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc5NzU4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "chunk": "diff --git a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\nindex 6fc64f35169..5a7c1f23dc5 100644\n--- a/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n+++ b/tiered-storage/jcloud/src/main/java/org/apache/bookkeeper/mledger/offload/jcloud/provider/JCloudBlobStoreProvider.java\n\n@@ -173,7 +173,21 @@ public enum JCloudBlobStoreProvider implements Serializable, ConfigValidation, B\n     ALIYUN_OSS(\"aliyun-oss\", new AnonymousProviderMetadata(new S3ApiMetadata(), \"\")) {\n         @Override\n         public void validate(TieredStorageConfiguration config) throws IllegalArgumentException {\n-            VALIDATION.validate(config);\n+            if (Strings.isNullOrEmpty(config.getServiceEndpoint())) {\n+                throw new IllegalArgumentException(\n+                        \"ServiceEndpoint must specified for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (Strings.isNullOrEmpty(config.getBucket())) {\n+                throw new IllegalArgumentException(\n+                        \"Bucket cannot be empty for \" + config.getDriver() + \" offload\");\n+            }\n+\n+            if (config.getMaxBlockSizeInBytes() < (5 * 1024 * 1024)) {\n+                throw new IllegalArgumentException(\n+                        \"ManagedLedgerOffloadMaxBlockSizeInBytes cannot be less than 5MB for \"\n+                                + config.getDriver() + \" offload\");\n+            }\n         }\n \n         @Override\n"}}, {"oid": "2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "url": "https://github.com/apache/pulsar/commit/2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "message": "add new validator by aliyun-oss", "committedDate": "2020-12-20T13:30:33Z", "type": "commit"}, {"oid": "2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "url": "https://github.com/apache/pulsar/commit/2aa5a0083079e97aec2fa18b3eac4a30b1953e7c", "message": "add new validator by aliyun-oss", "committedDate": "2020-12-20T13:30:33Z", "type": "forcePushed"}, {"oid": "cae7456e45c41fb8eabb4934e7e11499f9e43ead", "url": "https://github.com/apache/pulsar/commit/cae7456e45c41fb8eabb4934e7e11499f9e43ead", "message": "add environment variable by aliyun-oss", "committedDate": "2020-12-21T04:10:11Z", "type": "commit"}, {"oid": "f7528903fb5b39ca2d921c42d5f3fbd652a5d938", "url": "https://github.com/apache/pulsar/commit/f7528903fb5b39ca2d921c42d5f3fbd652a5d938", "message": "extract constant", "committedDate": "2020-12-21T04:11:11Z", "type": "commit"}]}