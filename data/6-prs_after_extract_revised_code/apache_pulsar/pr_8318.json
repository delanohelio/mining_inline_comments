{"pr_number": 8318, "pr_title": "[Transaction]Delete transaction marker implement", "pr_createdAt": "2020-10-21T02:08:31Z", "pr_url": "https://github.com/apache/pulsar/pull/8318", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NDk5Mw==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511474993", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void TransactionMarkerDeleteTest() throws Exception {\n          \n          \n            \n                public void testTransactionMarkerDelete() throws Exception {", "author": "codelipenghui", "createdAt": "2020-10-24T14:43:31Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {", "originalCommit": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\ndeleted file mode 100644\nindex 5efb59327b7..00000000000\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\n+++ /dev/null\n\n@@ -1,68 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.pulsar.broker.service;\n-\n-import org.apache.bookkeeper.mledger.ManagedLedger;\n-import org.apache.bookkeeper.mledger.Position;\n-import org.apache.bookkeeper.mledger.impl.PositionImpl;\n-import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n-import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n-import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.mock;\n-\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n-import org.testng.annotations.Test;\n-\n-import java.util.Collections;\n-\n-public class TransactionMarkerDeleteTest extends BrokerTestBase{\n-\n-    @BeforeMethod\n-    @Override\n-    protected void setup() throws Exception {\n-        super.baseSetup();\n-    }\n-\n-    @AfterMethod\n-    @Override\n-    protected void cleanup() throws Exception {\n-        super.internalCleanup();\n-    }\n-\n-    @Test\n-    public void TransactionMarkerDeleteTest() throws Exception {\n-        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n-        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n-        managedLedger.addEntry(\"test\".getBytes());\n-        Position position3 = managedLedger.addEntry(\"test\".getBytes());\n-        PersistentTopic topic = mock(PersistentTopic.class);\n-        doReturn(managedLedger).when(topic).getManagedLedger();\n-        managedLedger.openCursor(\"test\");\n-        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n-                managedLedger.openCursor(\"test\"), false);\n-        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n-                AckType.Individual, Collections.emptyMap());\n-        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n-                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NTUzMQ==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511475531", "bodyText": "I did not understand this test, looks not related to the changes that the PR introduced. At least you need to write one Transaction Marker into the managed ledger?", "author": "codelipenghui", "createdAt": "2020-10-24T14:45:50Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(\"test\".getBytes());\n+        Position position3 = managedLedger.addEntry(\"test\".getBytes());\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        managedLedger.openCursor(\"test\");\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n+                AckType.Individual, Collections.emptyMap());\n+        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n+                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));", "originalCommit": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\ndeleted file mode 100644\nindex 5efb59327b7..00000000000\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\n+++ /dev/null\n\n@@ -1,68 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.pulsar.broker.service;\n-\n-import org.apache.bookkeeper.mledger.ManagedLedger;\n-import org.apache.bookkeeper.mledger.Position;\n-import org.apache.bookkeeper.mledger.impl.PositionImpl;\n-import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n-import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n-import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.mock;\n-\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n-import org.testng.annotations.Test;\n-\n-import java.util.Collections;\n-\n-public class TransactionMarkerDeleteTest extends BrokerTestBase{\n-\n-    @BeforeMethod\n-    @Override\n-    protected void setup() throws Exception {\n-        super.baseSetup();\n-    }\n-\n-    @AfterMethod\n-    @Override\n-    protected void cleanup() throws Exception {\n-        super.internalCleanup();\n-    }\n-\n-    @Test\n-    public void TransactionMarkerDeleteTest() throws Exception {\n-        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n-        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n-        managedLedger.addEntry(\"test\".getBytes());\n-        Position position3 = managedLedger.addEntry(\"test\".getBytes());\n-        PersistentTopic topic = mock(PersistentTopic.class);\n-        doReturn(managedLedger).when(topic).getManagedLedger();\n-        managedLedger.openCursor(\"test\");\n-        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n-                managedLedger.openCursor(\"test\"), false);\n-        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n-                AckType.Individual, Collections.emptyMap());\n-        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n-                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NTcxMg==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511475712", "bodyText": "I think we should delete all transaction markers right? not only the commit marker.", "author": "codelipenghui", "createdAt": "2020-10-24T14:46:37Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java", "diffHunk": "@@ -393,6 +398,27 @@ public void acknowledgeMessage(List<Position> positions, AckType ackType, Map<St\n         }\n     }\n \n+    private void deleteTransactionMarker(PositionImpl position, AckType ackType, Map<String,Long> properties) {\n+        if (position != null) {\n+            ManagedLedgerImpl managedLedger = ((ManagedLedgerImpl) cursor.getManagedLedger());\n+            managedLedger.asyncReadEntry(position, new ReadEntryCallback() {\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    MessageMetadata messageMetadata = Commands.parseMessageMetadata(entry.getDataBuffer());\n+                    if (Markers.isTxnCommitMarker(messageMetadata)) {", "originalCommit": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\nindex e22850aca5b..f6d69170ee8 100644\n--- a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\n+++ b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\n\n@@ -398,27 +393,6 @@ public class PersistentSubscription implements Subscription {\n         }\n     }\n \n-    private void deleteTransactionMarker(PositionImpl position, AckType ackType, Map<String,Long> properties) {\n-        if (position != null) {\n-            ManagedLedgerImpl managedLedger = ((ManagedLedgerImpl) cursor.getManagedLedger());\n-            managedLedger.asyncReadEntry(position, new ReadEntryCallback() {\n-                @Override\n-                public void readEntryComplete(Entry entry, Object ctx) {\n-                    MessageMetadata messageMetadata = Commands.parseMessageMetadata(entry.getDataBuffer());\n-                    if (Markers.isTxnCommitMarker(messageMetadata)) {\n-                        messageMetadata.recycle();\n-                        acknowledgeMessage(Collections.singletonList(position), ackType, properties);\n-                    }\n-                }\n-\n-                @Override\n-                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n-                    log.error(\"Fail to read transaction marker! Position : {}\", position, exception);\n-                }\n-            }, null);\n-        }\n-    }\n-\n     /**\n      * Acknowledge message(s) for an ongoing transaction.\n      * <p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MTkxMw==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511481913", "bodyText": "The mark delete position of the cursor may be modified, it's better to avoid to all cursor.getMarkDeletedPosition()  twice, it might return a different position. So you can use a local variable to maintain the currentMarkDeletePosition.", "author": "codelipenghui", "createdAt": "2020-10-24T15:12:39Z", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java", "diffHunk": "@@ -368,6 +372,7 @@ public void acknowledgeMessage(List<Position> positions, AckType ackType, Map<St\n         }\n \n         if (!cursor.getMarkDeletedPosition().equals(previousMarkDeletePosition)) {\n+            deleteTransactionMarker((PositionImpl) cursor.getMarkDeletedPosition(), ackType, properties);", "originalCommit": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\nindex e22850aca5b..f6d69170ee8 100644\n--- a/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\n+++ b/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java\n\n@@ -372,7 +368,6 @@ public class PersistentSubscription implements Subscription {\n         }\n \n         if (!cursor.getMarkDeletedPosition().equals(previousMarkDeletePosition)) {\n-            deleteTransactionMarker((PositionImpl) cursor.getMarkDeletedPosition(), ackType, properties);\n             // Mark delete position advance\n             ReplicatedSubscriptionSnapshotCache snapshotCache  = this.replicatedSubscriptionSnapshotCache;\n             if (snapshotCache != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwMzQ2NQ==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511703465", "bodyText": "Please release the ledger and cursor resources after the test.", "author": "codelipenghui", "createdAt": "2020-10-26T03:30:52Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n+import org.apache.pulsar.common.protocol.Markers;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        MessageIdData messageIdData = MessageIdData.newBuilder()\n+                .setLedgerId(1)\n+                .setEntryId(1)\n+                .build();\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        Position position3 = managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        managedLedger.openCursor(\"test\");\n+        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n+                AckType.Individual, Collections.emptyMap());\n+        Thread.sleep(1000L);\n+        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n+                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));", "originalCommit": "9689235a9204c880be37590b4f62eb6338d07a58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\ndeleted file mode 100644\nindex aa66deeb096..00000000000\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\n+++ /dev/null\n\n@@ -1,77 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.pulsar.broker.service;\n-\n-import org.apache.bookkeeper.mledger.ManagedLedger;\n-import org.apache.bookkeeper.mledger.Position;\n-import org.apache.bookkeeper.mledger.impl.PositionImpl;\n-import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n-import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n-import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.mock;\n-\n-import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n-import org.apache.pulsar.common.protocol.Markers;\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n-import org.testng.annotations.Test;\n-\n-import java.util.Collections;\n-\n-public class TransactionMarkerDeleteTest extends BrokerTestBase{\n-\n-    @BeforeMethod\n-    @Override\n-    protected void setup() throws Exception {\n-        super.baseSetup();\n-    }\n-\n-    @AfterMethod\n-    @Override\n-    protected void cleanup() throws Exception {\n-        super.internalCleanup();\n-    }\n-\n-    @Test\n-    public void TransactionMarkerDeleteTest() throws Exception {\n-        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n-        PersistentTopic topic = mock(PersistentTopic.class);\n-        doReturn(managedLedger).when(topic).getManagedLedger();\n-        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n-                managedLedger.openCursor(\"test\"), false);\n-        MessageIdData messageIdData = MessageIdData.newBuilder()\n-                .setLedgerId(1)\n-                .setEntryId(1)\n-                .build();\n-        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n-        managedLedger.addEntry(Markers\n-                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n-        Position position3 = managedLedger.addEntry(Markers\n-                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n-        managedLedger.openCursor(\"test\");\n-        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n-                AckType.Individual, Collections.emptyMap());\n-        Thread.sleep(1000L);\n-        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n-                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzg4MA==", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511707880", "bodyText": "// check backlog", "author": "codelipenghui", "createdAt": "2020-10-26T03:55:22Z", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n+import org.apache.pulsar.common.protocol.Markers;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        MessageIdData messageIdData = MessageIdData.newBuilder()\n+                .setLedgerId(1)\n+                .setEntryId(1)\n+                .build();\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        Position position3 = managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());", "originalCommit": "9689235a9204c880be37590b4f62eb6338d07a58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "chunk": "diff --git a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java b/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\ndeleted file mode 100644\nindex aa66deeb096..00000000000\n--- a/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java\n+++ /dev/null\n\n@@ -1,77 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-package org.apache.pulsar.broker.service;\n-\n-import org.apache.bookkeeper.mledger.ManagedLedger;\n-import org.apache.bookkeeper.mledger.Position;\n-import org.apache.bookkeeper.mledger.impl.PositionImpl;\n-import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n-import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n-import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.mockito.Mockito.doReturn;\n-import static org.mockito.Mockito.mock;\n-\n-import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n-import org.apache.pulsar.common.protocol.Markers;\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n-import org.testng.annotations.Test;\n-\n-import java.util.Collections;\n-\n-public class TransactionMarkerDeleteTest extends BrokerTestBase{\n-\n-    @BeforeMethod\n-    @Override\n-    protected void setup() throws Exception {\n-        super.baseSetup();\n-    }\n-\n-    @AfterMethod\n-    @Override\n-    protected void cleanup() throws Exception {\n-        super.internalCleanup();\n-    }\n-\n-    @Test\n-    public void TransactionMarkerDeleteTest() throws Exception {\n-        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n-        PersistentTopic topic = mock(PersistentTopic.class);\n-        doReturn(managedLedger).when(topic).getManagedLedger();\n-        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n-                managedLedger.openCursor(\"test\"), false);\n-        MessageIdData messageIdData = MessageIdData.newBuilder()\n-                .setLedgerId(1)\n-                .setEntryId(1)\n-                .build();\n-        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n-        managedLedger.addEntry(Markers\n-                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n-        Position position3 = managedLedger.addEntry(Markers\n-                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n-        managedLedger.openCursor(\"test\");\n-        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n-                AckType.Individual, Collections.emptyMap());\n-        Thread.sleep(1000L);\n-        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n-                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));\n-    }\n-}\n"}}, {"oid": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "url": "https://github.com/apache/pulsar/commit/973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "message": "no message", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "a218d86d01cd8fb7adc3d7eff66344e68cfff2b9", "url": "https://github.com/apache/pulsar/commit/a218d86d01cd8fb7adc3d7eff66344e68cfff2b9", "message": "Revert \"no message\"\n\nThis reverts commit cdf77353a30615e756d45f695411a539e7505780.", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "41661798fdb16b90df8184a169c8be2c42946f53", "url": "https://github.com/apache/pulsar/commit/41661798fdb16b90df8184a169c8be2c42946f53", "message": "no message", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "dd987a6d7bcb9477d52d484f8747d363c88122ef", "url": "https://github.com/apache/pulsar/commit/dd987a6d7bcb9477d52d484f8747d363c88122ef", "message": "Revert \"no message\"\n\nThis reverts commit c665fe5fc70909858a15e22d9c8fa0965ffc114a.", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "a40d26dc83fda15310a290d7d933a80cdcd14699", "url": "https://github.com/apache/pulsar/commit/a40d26dc83fda15310a290d7d933a80cdcd14699", "message": "Transaction marker delete implement", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "39068c142c64000a8d5c63354f0f8c391d6bce0a", "url": "https://github.com/apache/pulsar/commit/39068c142c64000a8d5c63354f0f8c391d6bce0a", "message": "Delete the conflict class", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "6e47c038bf7844cc7e8388e7a80f9a9634683305", "url": "https://github.com/apache/pulsar/commit/6e47c038bf7844cc7e8388e7a80f9a9634683305", "message": "Delete the conflict class", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "d7c1810755a4410e60106031b972ffc7d2207318", "url": "https://github.com/apache/pulsar/commit/d7c1810755a4410e60106031b972ffc7d2207318", "message": "Compare newDeletePosition and markdeletePosition", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "22e07951698a77cf2df92f18875215d9c8b4c7e1", "url": "https://github.com/apache/pulsar/commit/22e07951698a77cf2df92f18875215d9c8b4c7e1", "message": "change the logic", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "6d8df3897bca110496e6a91e9c01d5a0217703ee", "url": "https://github.com/apache/pulsar/commit/6d8df3897bca110496e6a91e9c01d5a0217703ee", "message": "Add the test and delete test", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "242385458f84ff4ff80a9d99158bc309e671157a", "url": "https://github.com/apache/pulsar/commit/242385458f84ff4ff80a9d99158bc309e671157a", "message": "Delete test", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "57dd53f0da20479d913501379144e5c3003735c4", "url": "https://github.com/apache/pulsar/commit/57dd53f0da20479d913501379144e5c3003735c4", "message": "Modify the test", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "760063fff7c229da7c629f8f4f7cdc1d2c678393", "url": "https://github.com/apache/pulsar/commit/760063fff7c229da7c629f8f4f7cdc1d2c678393", "message": "Add the logical for transaction marker", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "36948d4ec86068cf3ab09be1f4843c03e038b97a", "url": "https://github.com/apache/pulsar/commit/36948d4ec86068cf3ab09be1f4843c03e038b97a", "message": " modify the test", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "c01fbbb835403ad30524c354efe04b9a99017aab", "url": "https://github.com/apache/pulsar/commit/c01fbbb835403ad30524c354efe04b9a99017aab", "message": "Delete", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "c0bfa2fdf4f00c5bc1218628f13681d40a1c582e", "url": "https://github.com/apache/pulsar/commit/c0bfa2fdf4f00c5bc1218628f13681d40a1c582e", "message": "add the lastMarkDeleteForTransactionMarker = position", "committedDate": "2020-10-27T13:14:28Z", "type": "commit"}, {"oid": "c1c0531789e6174f092e885a71469d9881413852", "url": "https://github.com/apache/pulsar/commit/c1c0531789e6174f092e885a71469d9881413852", "message": "delete annotation", "committedDate": "2020-10-27T13:14:29Z", "type": "commit"}, {"oid": "65cd22e4939b2d5333b7a62af5e4dd40c410062e", "url": "https://github.com/apache/pulsar/commit/65cd22e4939b2d5333b7a62af5e4dd40c410062e", "message": "Update pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "committedDate": "2020-10-27T13:14:29Z", "type": "commit"}, {"oid": "7a7691733618eb5a70a1bcd13e288c63b700c641", "url": "https://github.com/apache/pulsar/commit/7a7691733618eb5a70a1bcd13e288c63b700c641", "message": "Modify the test", "committedDate": "2020-10-27T13:14:29Z", "type": "commit"}, {"oid": "7d939e902b478c83014016a78d0ac519f4e2b759", "url": "https://github.com/apache/pulsar/commit/7d939e902b478c83014016a78d0ac519f4e2b759", "message": "Recover the class", "committedDate": "2020-10-27T13:18:09Z", "type": "commit"}, {"oid": "aa247cd240eb99482895ef0af0f598fa47b59b74", "url": "https://github.com/apache/pulsar/commit/aa247cd240eb99482895ef0af0f598fa47b59b74", "message": "Recover the class", "committedDate": "2020-10-27T13:23:27Z", "type": "commit"}, {"oid": "17cc339dd4e11d2cc5e8f284d4abbd2523d47bd3", "url": "https://github.com/apache/pulsar/commit/17cc339dd4e11d2cc5e8f284d4abbd2523d47bd3", "message": "Recover the test", "committedDate": "2020-10-27T13:25:33Z", "type": "commit"}, {"oid": "29e63368551fe2732ea913383a2bc8fbaa69e18a", "url": "https://github.com/apache/pulsar/commit/29e63368551fe2732ea913383a2bc8fbaa69e18a", "message": "Merge remote-tracking branch 'apache/master' into delete_transaction_marker_implement", "committedDate": "2020-10-28T06:06:10Z", "type": "commit"}]}