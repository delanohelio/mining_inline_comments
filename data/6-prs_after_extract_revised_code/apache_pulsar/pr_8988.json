{"pr_number": 8988, "pr_title": "Support create and update source with package name", "pr_createdAt": "2020-12-17T14:34:22Z", "pr_url": "https://github.com/apache/pulsar/pull/8988", "timeline": [{"oid": "40333592cc96269274b01913e544c999c87a3dbd", "url": "https://github.com/apache/pulsar/commit/40333592cc96269274b01913e544c999c87a3dbd", "message": "Support create and update source with package name\n---\n\nMaster Issue: #8676\n\n*Motivation*\n\nWe have a new package management service that can manage all\nthe source packages. We can use that in the Pulsar Source to manage\nsource pakcages.\n\n*Modifications*\n\n- Support create and update source with package name\n- Add test for this", "committedDate": "2020-12-17T14:31:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r547418323", "bodyText": "Why do we need to download the package?", "author": "sijie", "createdAt": "2020-12-22T17:56:05Z", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/rest/api/SourcesImpl.java", "diffHunk": "@@ -719,4 +728,14 @@ public SourceConfig getSourceInfo(final String tenant,\n                 worker().getWorkerConfig().getValidateConnectorConfig());\n         return SourceConfigUtils.convert(sourceConfig, sourceDetails);\n     }\n+\n+    private static boolean hasPackageTypePrefix(String destPkgUrl) {\n+        return Arrays.stream(PackageType.values()).anyMatch(type -> destPkgUrl.startsWith(type.toString()));\n+    }\n+\n+    private File downloadPackageFile(String packageName) throws IOException, PulsarAdminException {", "originalCommit": "40333592cc96269274b01913e544c999c87a3dbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk2NTU2NA==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r547965564", "bodyText": "If we provide a pkgUrl for creating or updating the functions, the function worker has some pre-check of the packages\n\n  \n    \n      pulsar/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/rest/api/FunctionsImpl.java\n    \n    \n         Line 744\n      in\n      c17253b\n    \n    \n    \n    \n\n        \n          \n           clsLoader = FunctionConfigUtils.validate(functionConfig, componentPackageFile);", "author": "zymap", "createdAt": "2020-12-23T13:45:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4NTU0MQ==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r548185541", "bodyText": "You need to validate the existence of the package. But I don't think you should download the package.", "author": "sijie", "createdAt": "2020-12-23T19:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI1OTk2Nw==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r549259967", "bodyText": "Ideally, we validate the existence is enough. But that depends on we do the packages format check or function check when uploading a package to the package management service. Then we can remove the checks for the functions which are using the package name to register. But for now, we still need to rely on those checks in the function's code.\nI looked into the creation of the function. I saw if a function provided with a packageUrl, it will download the package and save it as a temp file  and do some checks with it. And also it always passes a File as the parameter for the method call.\n\n  \n    \n      pulsar/pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/rest/api/SourcesImpl.java\n    \n    \n         Line 160\n      in\n      1c7ca15\n    \n    \n    \n    \n\n        \n          \n           functionDetails = validateUpdateRequestParams(tenant, namespace, sourceName, \n        \n    \n  \n\n\n\n  \n    \n      pulsar/pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/SourceConfigUtils.java\n    \n    \n         Line 244\n      in\n      1c7ca15\n    \n    \n    \n    \n\n        \n          \n           public static ExtractedSourceDetails validate(SourceConfig sourceConfig, Path archivePath, \n        \n    \n  \n\n\nIf we don't download the packages files, we may need to change the existing register function logic.", "author": "zymap", "createdAt": "2020-12-28T08:30:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzMjg0OQ==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r549532849", "bodyText": "@sijie  Please take a look when you have time. Thanks.", "author": "zymap", "createdAt": "2020-12-29T01:04:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMDY4OQ==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r549620689", "bodyText": "@zymap The purpose of introducing a package registry is to avoid checking the packages every time when you create a function using this package. If we need to validate the function package in the package registry, let's add the functionality there.", "author": "sijie", "createdAt": "2020-12-29T08:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYzODg0Mg==", "url": "https://github.com/apache/pulsar/pull/8988#discussion_r549638842", "bodyText": "@sijie ok. I open issue #9081 for adding the validation when uploading a package and will do it in another PR.\nCan we merge this PR first? Because this PR will allow us to use the package name to create functions.", "author": "zymap", "createdAt": "2020-12-29T09:45:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQxODMyMw=="}], "type": "inlineReview", "revised_code": null}]}