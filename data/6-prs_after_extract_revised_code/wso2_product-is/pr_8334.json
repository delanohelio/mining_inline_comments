{"pr_number": 8334, "pr_title": "Improve TestPassiveSTS.java to test sign-out and for tenant mode", "pr_createdAt": "2020-05-14T15:15:56Z", "pr_url": "https://github.com/wso2/product-is/pull/8334", "timeline": [{"oid": "dcc07404a432bca5211329e434932acc8ca6853e", "url": "https://github.com/wso2/product-is/commit/dcc07404a432bca5211329e434932acc8ca6853e", "message": "Improve TestPassiveSTS.java to test sigout and for tenant mode", "committedDate": "2020-05-14T15:03:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NTk4MQ==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425355981", "bodyText": "Better to rename the method to something like appendTenantDomainQueryParam or something along the line.", "author": "mefarazath", "createdAt": "2020-05-14T18:45:23Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java", "diffHunk": "@@ -313,10 +362,17 @@ private void setSystemProperties() {\n         return claimMappingList.toArray(new ClaimMapping[0]);\n     }\n \n-    private boolean requestMissingClaims (HttpResponse response) {\n+    private boolean requestMissingClaims(HttpResponse response) {\n \n         String redirectUrl = Utils.getRedirectUrl(response);\n         return redirectUrl.contains(\"consent.do\");\n     }\n \n+    private String getPassiveParamsForTenant(String params) {", "originalCommit": "dcc07404a432bca5211329e434932acc8ca6853e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5MTk4NA==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425591984", "bodyText": "addressed", "author": "Abilashini", "createdAt": "2020-05-15T06:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NTk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\nindex 38473d784..062260acb 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n\n@@ -368,7 +378,7 @@ public class TestPassiveSTS extends ISIntegrationTest {\n         return redirectUrl.contains(\"consent.do\");\n     }\n \n-    private String getPassiveParamsForTenant(String params) {\n+    private String appendTenantDomainQueryParam(String params) {\n \n         if (!StringUtils.equals(tenantDomain, \"carbon.super\")) {\n             return params + \"&tenantDomain=\" + tenantDomain;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NzA1OA==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425357058", "bodyText": "Is asserting the status enough to gurantee a successful logout?", "author": "mefarazath", "createdAt": "2020-05-14T18:47:14Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java", "diffHunk": "@@ -278,8 +312,23 @@ public void testSessionHijacking() throws Exception {\n         HttpResponse response = client.execute(getRequest);\n         String resultPage2 = DataExtractUtil.getContentData(response);\n         EntityUtils.consume(response.getEntity());\n-        Assert.assertTrue(resultPage2.contains(\"Authentication Error!\"), \"Session hijacking is possible.\");\n+        Assert.assertTrue(resultPage2.contains(\"Authentication Error!\"), \"Session hijacking is possible for \" +\n+                \"tenant domain: \" + tenantDomain);\n+    }\n \n+    @Test(alwaysRun = true, description = \"Test logout request\",\n+            dependsOnMethods = {\"testPassiveSAML2Assertion\", \"testSessionHijacking\"})\n+    public void testSendLogoutRequest() throws Exception {\n+\n+        String passiveParams = \"?wa=wsignout1.0&wreply=\" + PASSIVE_STS_SAMPLE_APP_URL + \"&wtrealm=PassiveSTSSampleApp\";\n+        passiveParams = getPassiveParamsForTenant(passiveParams);\n+        HttpGet request = new HttpGet(this.passiveStsURL + passiveParams);\n+        HttpResponse response = client.execute(request);\n+\n+        Assert.assertNotNull(response, \"PassiveSTSSampleApp logout response is null for tenant domain: \" +\n+                tenantDomain);\n+        int responseCode = response.getStatusLine().getStatusCode();\n+        Assert.assertEquals(responseCode, 200, \"Invalid Response for tenant domain: \" + tenantDomain);", "originalCommit": "dcc07404a432bca5211329e434932acc8ca6853e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5ODYxMg==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425598612", "bodyText": "After a successful logout, an empty response will be redirected to the client's reply URL. Then an authentication request will be sent by the client. So we can't test any content. So have added the logic to verify the existence of sessionDataKey in the response", "author": "Abilashini", "createdAt": "2020-05-15T06:46:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NzA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\nindex 38473d784..062260acb 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n\n@@ -321,7 +321,7 @@ public class TestPassiveSTS extends ISIntegrationTest {\n     public void testSendLogoutRequest() throws Exception {\n \n         String passiveParams = \"?wa=wsignout1.0&wreply=\" + PASSIVE_STS_SAMPLE_APP_URL + \"&wtrealm=PassiveSTSSampleApp\";\n-        passiveParams = getPassiveParamsForTenant(passiveParams);\n+        passiveParams = appendTenantDomainQueryParam(passiveParams);\n         HttpGet request = new HttpGet(this.passiveStsURL + passiveParams);\n         HttpResponse response = client.execute(request);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425681775", "bodyText": "I feel it would be better to include what we expected to happen here.\n\"Authentication request was not initiated after logout from sample. Possible logout failure.\"", "author": "mefarazath", "createdAt": "2020-05-15T09:31:43Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java", "diffHunk": "@@ -278,8 +312,32 @@ public void testSessionHijacking() throws Exception {\n         HttpResponse response = client.execute(getRequest);\n         String resultPage2 = DataExtractUtil.getContentData(response);\n         EntityUtils.consume(response.getEntity());\n-        Assert.assertTrue(resultPage2.contains(\"Authentication Error!\"), \"Session hijacking is possible.\");\n+        Assert.assertTrue(resultPage2.contains(\"Authentication Error!\"), \"Session hijacking is possible for \" +\n+                \"tenant domain: \" + tenantDomain);\n+    }\n+\n+    @Test(alwaysRun = true, description = \"Test logout request\",\n+            dependsOnMethods = {\"testPassiveSAML2Assertion\", \"testSessionHijacking\"})\n+    public void testSendLogoutRequest() throws Exception {\n \n+        String passiveParams = \"?wa=wsignout1.0&wreply=\" + PASSIVE_STS_SAMPLE_APP_URL + \"&wtrealm=PassiveSTSSampleApp\";\n+        passiveParams = appendTenantDomainQueryParam(passiveParams);\n+        HttpGet request = new HttpGet(this.passiveStsURL + passiveParams);\n+        HttpResponse response = client.execute(request);\n+\n+        Assert.assertNotNull(response, \"PassiveSTSSampleApp logout response is null for tenant domain: \" +\n+                tenantDomain);\n+        int responseCode = response.getStatusLine().getStatusCode();\n+        Assert.assertEquals(responseCode, 200, \"Invalid Response for tenant domain: \" + tenantDomain);\n+\n+        Map<String, Integer> keyPositionMap = new HashMap<>(1);\n+        keyPositionMap.put(\"name=\\\"sessionDataKey\\\"\", 1);\n+        List<DataExtractUtil.KeyValue> keyValues = DataExtractUtil.extractDataFromResponse(response,\n+                keyPositionMap);\n+        EntityUtils.consume(response.getEntity());\n+        Assert.assertNotNull(keyValues, \"sessionDataKey key value is null for tenant domain: \" + tenantDomain);", "originalCommit": "ee54498f524f59bae2e7f724a9d574de90e27df1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MjAzNA==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425682034", "bodyText": "In addition to the current message.", "author": "mefarazath", "createdAt": "2020-05-15T09:32:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxODczOA==", "url": "https://github.com/wso2/product-is/pull/8334#discussion_r425718738", "bodyText": "done", "author": "Abilashini", "createdAt": "2020-05-15T10:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\nindex 0053c0a05..062260acb 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/sts/TestPassiveSTS.java\n\n@@ -335,7 +335,8 @@ public class TestPassiveSTS extends ISIntegrationTest {\n         List<DataExtractUtil.KeyValue> keyValues = DataExtractUtil.extractDataFromResponse(response,\n                 keyPositionMap);\n         EntityUtils.consume(response.getEntity());\n-        Assert.assertNotNull(keyValues, \"sessionDataKey key value is null for tenant domain: \" + tenantDomain);\n+        Assert.assertNotNull(keyValues, \"sessionDataKey key value is null for tenant domain: \" + tenantDomain +\n+                \"Authentication request was not initiated after logout from sample. Possible logout failure.\");\n         sessionDataKey = keyValues.get(0).getValue();\n         Assert.assertNotNull(sessionDataKey, \"Session data key is null for tenant domain: \" + tenantDomain);\n     }\n"}}, {"oid": "4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "url": "https://github.com/wso2/product-is/commit/4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "message": "Address review comments", "committedDate": "2020-05-15T10:42:28Z", "type": "commit"}, {"oid": "4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "url": "https://github.com/wso2/product-is/commit/4ecf68dd1a82f5cd70f96b80c963b3251fe547f3", "message": "Address review comments", "committedDate": "2020-05-15T10:42:28Z", "type": "forcePushed"}]}