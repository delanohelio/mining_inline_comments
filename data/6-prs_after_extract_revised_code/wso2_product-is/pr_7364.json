{"pr_number": 7364, "pr_title": "Add test cases for the skip login consent property", "pr_createdAt": "2020-01-24T04:26:19Z", "pr_url": "https://github.com/wso2/product-is/pull/7364", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3NDcxNg==", "url": "https://github.com/wso2/product-is/pull/7364#discussion_r370474716", "bodyText": "Shall we rename the test method as \"testCreateUserSession\" as this is a test method.", "author": "ShanChathusanda93", "createdAt": "2020-01-24T05:02:09Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.oidc;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.Header;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.NameValuePair;\n+import org.apache.http.client.CookieStore;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.impl.client.BasicCookieStore;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.application.common.model.xsd.LocalAndOutboundAuthenticationConfig;\n+import org.wso2.carbon.identity.application.common.model.xsd.ServiceProvider;\n+import org.wso2.identity.integration.test.oidc.bean.OIDCApplication;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.OAuth2Constant;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * This class is to handle the test cases to skip the login consent based on the file and per service provider.\n+ */\n+public class OIDCSPWiseSkipLoginConsentTestCase extends OIDCAbstractIntegrationTest {\n+\n+    protected Log log = LogFactory.getLog(getClass());\n+    protected HttpClient client;\n+    private CookieStore cookieStore = new BasicCookieStore();\n+    protected String sessionDataKey;\n+    protected String sessionDataKeyConsent;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init(TestUserMode.SUPER_TENANT_ADMIN);\n+        OIDCUtilTest.initUser();\n+        createUser(OIDCUtilTest.user);\n+        OIDCUtilTest.initApplications();\n+        createApplications();\n+        configureSPToSkipConsent();\n+        client = HttpClientBuilder.create().setDefaultCookieStore(cookieStore).build();\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void clearObjects() throws Exception {\n+\n+        deleteObjects();\n+        clear();\n+    }\n+\n+    private void deleteObjects() throws Exception {\n+\n+        deleteUser(OIDCUtilTest.user);\n+        deleteApplications();\n+    }\n+\n+    private void configureSPToSkipConsent() throws Exception {\n+\n+        OIDCApplication oidcApplication =\n+                OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppTwoAppName);\n+        ServiceProvider serviceProvider = appMgtclient.getApplication(oidcApplication.getApplicationName());\n+        LocalAndOutboundAuthenticationConfig localAndOutboundAuthenticationConfig =\n+                new LocalAndOutboundAuthenticationConfig();\n+        localAndOutboundAuthenticationConfig.setSkipConsent(true);\n+        serviceProvider.setLocalAndOutBoundAuthenticationConfig(localAndOutboundAuthenticationConfig);\n+        appMgtclient.updateApplicationData(serviceProvider);\n+    }\n+\n+    @Test(groups = \"wso2.is\", description = \"Test authz endpoint before creating a valid session\")\n+    public void createUserSession() throws Exception {", "originalCommit": "249cd70115fcafa6ab9cec42456fbeccdb145384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0ea99f94cfb35a3170f88d6c3dea824ac652067", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\nindex dfc52e849..887db6599 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\n\n@@ -90,7 +90,7 @@ public class OIDCSPWiseSkipLoginConsentTestCase extends OIDCAbstractIntegrationT\n     }\n \n     @Test(groups = \"wso2.is\", description = \"Test authz endpoint before creating a valid session\")\n-    public void createUserSession() throws Exception {\n+    public void testCreateUserSession() throws Exception {\n \n         testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppOneAppName), true);\n         testAuthentication();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3NTE1Mw==", "url": "https://github.com/wso2/product-is/pull/7364#discussion_r370475153", "bodyText": "As my view this \" * \" is an extra one.", "author": "ShanChathusanda93", "createdAt": "2020-01-24T05:05:12Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCUtilTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.oidc;\n+\n+import org.apache.http.HttpResponse;\n+import org.apache.http.NameValuePair;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.message.BasicNameValuePair;\n+import org.wso2.identity.integration.test.oidc.bean.OIDCApplication;\n+import org.wso2.identity.integration.test.oidc.bean.OIDCUser;\n+import org.wso2.identity.integration.test.utils.DataExtractUtil;\n+import org.wso2.identity.integration.test.utils.OAuth2Constant;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.wso2.identity.integration.test.oidc.OIDCAbstractIntegrationTest.TOMCAT_PORT;\n+\n+/**\n+ * This class will contain the common methods using in all OIDC related test cases.\n+ */\n+public class OIDCUtilTest {\n+\n+    protected static OIDCUser user;\n+    protected HttpClient client;\n+    protected static Map<String, OIDCApplication> applications = new HashMap<>(2);\n+    public static final String username = \"oidcsessiontestuser\";\n+    public static final String password = \"oidcsessiontestuser\";\n+    public static final String email = \"oidcsessiontestuser@wso2.com\";\n+    public static final String firstName = \"oidcsessiontestuser-first\";\n+    public static final String lastName = \"oidcsessiontestuser-last\";\n+    public static final String role = \"internal/everyone\";\n+    public static final String profile = \"default\";\n+    protected static String sessionDataKey;\n+\n+    public static final String playgroundAppOneAppName = \"playground.appone\";\n+    public static final String playgroundAppOneAppCallBackUri = \"http://localhost:\" + TOMCAT_PORT + \"/playground\" + \"\" +\n+            \".appone/oauth2client\";\n+    public static final String playgroundAppOneAppContext = \"/playground.appone\";\n+\n+    public static final String playgroundAppTwoAppName = \"playground.apptwo\";\n+    public static final String playgroundAppTwoAppCallBackUri = \"http://localhost:\" + TOMCAT_PORT + \"/playground\" + \"\" +\n+            \".apptwo/oauth2client\";\n+    public static final String playgroundAppTwoAppContext = \"/playground.apptwo\";\n+\n+    public static final String targetApplicationUrl = \"http://localhost:\" + TOMCAT_PORT + \"%s\";\n+\n+    public static final String emailClaimUri = \"http://wso2.org/claims/emailaddress\";\n+    public static final String firstNameClaimUri = \"http://wso2.org/claims/givenname\";\n+    public static final String lastNameClaimUri = \"http://wso2.org/claims/lastname\";\n+\n+    /**\n+     * Intiates an user.\n+     */\n+    public static void initUser() {\n+\n+        user = new OIDCUser(username, password);\n+        user.setProfile(profile);\n+        user.addUserClaim(emailClaimUri, email);\n+        user.addUserClaim(firstNameClaimUri, firstName);\n+        user.addUserClaim(lastNameClaimUri, lastName);\n+        user.addRole(role);\n+    }\n+\n+    /**\n+     * Intiates an application\n+     *", "originalCommit": "249cd70115fcafa6ab9cec42456fbeccdb145384", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0ea99f94cfb35a3170f88d6c3dea824ac652067", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCUtilTest.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCUtilTest.java\nindex 847d38853..b9c99bcfd 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCUtilTest.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCUtilTest.java\n\n@@ -80,8 +80,7 @@ public class OIDCUtilTest {\n     }\n \n     /**\n-     * Intiates an application\n-     *\n+     * Initiate an Application.\n      */\n     public static void initApplications() {\n \n"}}, {"oid": "b0ea99f94cfb35a3170f88d6c3dea824ac652067", "url": "https://github.com/wso2/product-is/commit/b0ea99f94cfb35a3170f88d6c3dea824ac652067", "message": "Add test cases for the skip login consent property", "committedDate": "2020-01-24T08:07:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4NDg1Ng==", "url": "https://github.com/wso2/product-is/pull/7364#discussion_r370584856", "bodyText": "this line seems to be exceeding 120 characters", "author": "sachiniWettasinghe", "createdAt": "2020-01-24T11:16:49Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCAuthCodeGrantSSOTestCase.java", "diffHunk": "@@ -387,34 +337,34 @@ private void testUserClaims() throws Exception {\n         String email = ((org.json.simple.JSONObject) obj).get(\"email\").toString();\n \n         EntityUtils.consume(response.getEntity());\n-        Assert.assertEquals(this.email, email, \"Incorrect email claim value\");\n+        Assert.assertEquals(\"admin@wso2.com\", email, \"Incorrect email claim value\");\n     }\n \n     protected void initUser() throws Exception {\n \n-        user = new OIDCUser(username, password);\n-        user.setProfile(profile);\n-        user.addUserClaim(emailClaimUri, email);\n-        user.addUserClaim(firstNameClaimUri, firstName);\n-        user.addUserClaim(lastNameClaimUri, lastName);\n-        user.addRole(role);\n+        user = new OIDCUser(OIDCUtilTest.username, OIDCUtilTest.password);\n+        user.setProfile(OIDCUtilTest.profile);\n+        user.addUserClaim(OIDCUtilTest.emailClaimUri, OIDCUtilTest.email);\n+        user.addUserClaim(OIDCUtilTest.firstNameClaimUri, OIDCUtilTest.firstName);\n+        user.addUserClaim(OIDCUtilTest.lastNameClaimUri, OIDCUtilTest.lastName);\n+        user.addRole(OIDCUtilTest.role);\n     }\n \n     protected void initApplications() throws Exception {\n \n-        OIDCApplication playgroundApp = new OIDCApplication(playgroundAppOneAppName, playgroundAppOneAppContext,\n-                playgroundAppOneAppCallBackUri);\n-        playgroundApp.addRequiredClaim(emailClaimUri);\n-        playgroundApp.addRequiredClaim(firstNameClaimUri);\n-        playgroundApp.addRequiredClaim(lastNameClaimUri);\n-        applications.put(playgroundAppOneAppName, playgroundApp);\n-\n-        playgroundApp = new OIDCApplication(playgroundAppTwoAppName, playgroundAppTwoAppContext,\n-                playgroundAppTwoAppCallBackUri);\n-        playgroundApp.addRequiredClaim(emailClaimUri);\n-        playgroundApp.addRequiredClaim(firstNameClaimUri);\n-        playgroundApp.addRequiredClaim(lastNameClaimUri);\n-        applications.put(playgroundAppTwoAppName, playgroundApp);\n+        OIDCApplication playgroundApp = new OIDCApplication(OIDCUtilTest.playgroundAppOneAppName, OIDCUtilTest.playgroundAppOneAppContext,", "originalCommit": "b0ea99f94cfb35a3170f88d6c3dea824ac652067", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f4e809cfa2f15e7779a62fce15a31e13744f68ef", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCAuthCodeGrantSSOTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCAuthCodeGrantSSOTestCase.java\nindex 77308b73c..942eb4b5b 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCAuthCodeGrantSSOTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCAuthCodeGrantSSOTestCase.java\n\n@@ -352,7 +352,8 @@ public class OIDCAuthCodeGrantSSOTestCase extends OIDCAbstractIntegrationTest {\n \n     protected void initApplications() throws Exception {\n \n-        OIDCApplication playgroundApp = new OIDCApplication(OIDCUtilTest.playgroundAppOneAppName, OIDCUtilTest.playgroundAppOneAppContext,\n+        OIDCApplication playgroundApp = new OIDCApplication(OIDCUtilTest.playgroundAppOneAppName,\n+                OIDCUtilTest.playgroundAppOneAppContext,\n                 OIDCUtilTest.playgroundAppOneAppCallBackUri);\n         playgroundApp.addRequiredClaim(OIDCUtilTest.emailClaimUri);\n         playgroundApp.addRequiredClaim(OIDCUtilTest.firstNameClaimUri);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU4ODkzMQ==", "url": "https://github.com/wso2/product-is/pull/7364#discussion_r370588931", "bodyText": "This method seems to be duplicated in OIDCFileBasedSkipLoginConsentTestCase as well. Can we get this to the OIDCAbstractIntegrationTest class?", "author": "sachiniWettasinghe", "createdAt": "2020-01-24T11:28:08Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.oidc;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.Header;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.NameValuePair;\n+import org.apache.http.client.CookieStore;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.impl.client.BasicCookieStore;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.util.EntityUtils;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.automation.engine.context.TestUserMode;\n+import org.wso2.carbon.identity.application.common.model.xsd.LocalAndOutboundAuthenticationConfig;\n+import org.wso2.carbon.identity.application.common.model.xsd.ServiceProvider;\n+import org.wso2.identity.integration.test.oidc.bean.OIDCApplication;\n+import org.wso2.identity.integration.test.util.Utils;\n+import org.wso2.identity.integration.test.utils.OAuth2Constant;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * This class is to handle the test cases to skip the login consent based on the file and per service provider.\n+ */\n+public class OIDCSPWiseSkipLoginConsentTestCase extends OIDCAbstractIntegrationTest {\n+\n+    protected Log log = LogFactory.getLog(getClass());\n+    protected HttpClient client;\n+    private CookieStore cookieStore = new BasicCookieStore();\n+    protected String sessionDataKey;\n+    protected String sessionDataKeyConsent;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init(TestUserMode.SUPER_TENANT_ADMIN);\n+        OIDCUtilTest.initUser();\n+        createUser(OIDCUtilTest.user);\n+        OIDCUtilTest.initApplications();\n+        createApplications();\n+        configureSPToSkipConsent();\n+        client = HttpClientBuilder.create().setDefaultCookieStore(cookieStore).build();\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void clearObjects() throws Exception {\n+\n+        deleteObjects();\n+        clear();\n+    }\n+\n+    private void deleteObjects() throws Exception {\n+\n+        deleteUser(OIDCUtilTest.user);\n+        deleteApplications();\n+    }\n+\n+    private void configureSPToSkipConsent() throws Exception {\n+\n+        OIDCApplication oidcApplication =\n+                OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppTwoAppName);\n+        ServiceProvider serviceProvider = appMgtclient.getApplication(oidcApplication.getApplicationName());\n+        LocalAndOutboundAuthenticationConfig localAndOutboundAuthenticationConfig =\n+                new LocalAndOutboundAuthenticationConfig();\n+        localAndOutboundAuthenticationConfig.setSkipConsent(true);\n+        serviceProvider.setLocalAndOutBoundAuthenticationConfig(localAndOutboundAuthenticationConfig);\n+        appMgtclient.updateApplicationData(serviceProvider);\n+    }\n+\n+    @Test(groups = \"wso2.is\", description = \"Test authz endpoint before creating a valid session\")\n+    public void testCreateUserSession() throws Exception {\n+\n+        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppOneAppName), true);\n+        testAuthentication();\n+    }\n+\n+    @Test(groups = \"wso2.is\", description = \"Initiate authentication request from playground.apptwo\")\n+    public void testIntiateLoginRequestForAlreadyLoggedUser() throws Exception {\n+\n+        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppTwoAppName), false);\n+    }\n+\n+    private void testSendAuthenticationRequest(OIDCApplication application, boolean isFirstAuthenticationRequest)\n+            throws Exception {", "originalCommit": "b0ea99f94cfb35a3170f88d6c3dea824ac652067", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fc3652fdd3a7e6b1180701bd0f05b224a2db1000", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\nindex 887db6599..38106e01c 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/oidc/OIDCSPWiseSkipLoginConsentTestCase.java\n\n@@ -92,43 +92,16 @@ public class OIDCSPWiseSkipLoginConsentTestCase extends OIDCAbstractIntegrationT\n     @Test(groups = \"wso2.is\", description = \"Test authz endpoint before creating a valid session\")\n     public void testCreateUserSession() throws Exception {\n \n-        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppOneAppName), true);\n+        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppOneAppName), true, client,\n+                cookieStore);\n         testAuthentication();\n     }\n \n     @Test(groups = \"wso2.is\", description = \"Initiate authentication request from playground.apptwo\")\n     public void testIntiateLoginRequestForAlreadyLoggedUser() throws Exception {\n \n-        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppTwoAppName), false);\n-    }\n-\n-    private void testSendAuthenticationRequest(OIDCApplication application, boolean isFirstAuthenticationRequest)\n-            throws Exception {\n-\n-        List<NameValuePair> urlParameters = OIDCUtilTest.getNameValuePairs(application);\n-\n-        HttpResponse response = sendPostRequestWithParameters(client, urlParameters, String.format\n-                (OIDCUtilTest.targetApplicationUrl, application.getApplicationContext() + OAuth2Constant.PlaygroundAppPaths\n-                        .appUserAuthorizePath));\n-\n-        Header locationHeader = response.getFirstHeader(OAuth2Constant.HTTP_RESPONSE_HEADER_LOCATION);\n-        EntityUtils.consume(response.getEntity());\n-\n-        if (isFirstAuthenticationRequest) {\n-            response = sendGetRequest(client, locationHeader.getValue());\n-        } else {\n-            HttpClient httpClientWithoutAutoRedirections = HttpClientBuilder.create().disableRedirectHandling()\n-                    .setDefaultCookieStore(cookieStore).build();\n-            response = sendGetRequest(httpClientWithoutAutoRedirections, locationHeader.getValue());\n-        }\n-\n-        Map<String, Integer> keyPositionMap = new HashMap<>(1);\n-        if (isFirstAuthenticationRequest) {\n-            OIDCUtilTest.setSessionDataKey(response, keyPositionMap);\n-\n-        } else {\n-            Assert.assertFalse(Utils.requestMissingClaims(response));\n-        }\n+        testSendAuthenticationRequest(OIDCUtilTest.applications.get(OIDCUtilTest.playgroundAppTwoAppName), false, client\n+                , cookieStore);\n     }\n \n     private void testAuthentication() throws Exception {\n"}}, {"oid": "f4e809cfa2f15e7779a62fce15a31e13744f68ef", "url": "https://github.com/wso2/product-is/commit/f4e809cfa2f15e7779a62fce15a31e13744f68ef", "message": "Add test cases for the skip login consent property", "committedDate": "2020-01-24T11:41:34Z", "type": "forcePushed"}, {"oid": "fc3652fdd3a7e6b1180701bd0f05b224a2db1000", "url": "https://github.com/wso2/product-is/commit/fc3652fdd3a7e6b1180701bd0f05b224a2db1000", "message": "Add test cases for the skip login consent property", "committedDate": "2020-01-27T05:43:16Z", "type": "forcePushed"}, {"oid": "ffd0c200ef470b2a82b3a49a7474c4a7a1dc11cf", "url": "https://github.com/wso2/product-is/commit/ffd0c200ef470b2a82b3a49a7474c4a7a1dc11cf", "message": "Add test cases for the skip login consent property", "committedDate": "2020-01-28T09:43:09Z", "type": "commit"}, {"oid": "ffd0c200ef470b2a82b3a49a7474c4a7a1dc11cf", "url": "https://github.com/wso2/product-is/commit/ffd0c200ef470b2a82b3a49a7474c4a7a1dc11cf", "message": "Add test cases for the skip login consent property", "committedDate": "2020-01-28T09:43:09Z", "type": "forcePushed"}]}