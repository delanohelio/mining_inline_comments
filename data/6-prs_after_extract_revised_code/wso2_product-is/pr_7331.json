{"pr_number": 7331, "pr_title": "Add an integration test case for user account locking", "pr_createdAt": "2020-01-21T09:58:51Z", "pr_url": "https://github.com/wso2/product-is/pull/7331", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368908683", "bodyText": "Shall we change the class name to AccountLockWhileCaseInsensitiveUserFalseTestCase", "author": "DMHP", "createdAt": "2020-01-21T10:04:59Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {", "originalCommit": "7b6649a9228f9b0696106de42ee4cda16e384120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkyMzQ3MA==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368923470", "bodyText": "Updated", "author": "ShanChathusanda93", "createdAt": "2020-01-21T10:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9c257d197045121b0b3bffc75f3b8004768c838b", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nsimilarity index 91%\nrename from modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java\nrename to modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nindex 8e83f1ae3..7b11892fe 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n\n@@ -26,6 +26,7 @@ import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwOTc4OQ==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368909789", "bodyText": "shall we re-use the method getDeploymentTomlFile() defined in ISIntegrationTest base class to fetch the file.", "author": "DMHP", "createdAt": "2020-01-21T10:07:17Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockingWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");", "originalCommit": "7b6649a9228f9b0696106de42ee4cda16e384120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkyMzU1Mg==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368923552", "bodyText": "Updated", "author": "ShanChathusanda93", "createdAt": "2020-01-21T10:34:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwOTc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9c257d197045121b0b3bffc75f3b8004768c838b", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nsimilarity index 91%\nrename from modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java\nrename to modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nindex 8e83f1ae3..7b11892fe 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockingWhileCaseInsensitiveUserFalseTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n\n@@ -26,6 +26,7 @@ import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n"}}, {"oid": "9c257d197045121b0b3bffc75f3b8004768c838b", "url": "https://github.com/wso2/product-is/commit/9c257d197045121b0b3bffc75f3b8004768c838b", "message": "Add integation test case for user account locking", "committedDate": "2020-01-21T10:32:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzNjU1MA==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368936550", "bodyText": "Shall we put a comment like \"Initiating after the restart.\"", "author": "DMHP", "createdAt": "2020-01-21T11:01:46Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+", "originalCommit": "9c257d197045121b0b3bffc75f3b8004768c838b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTE0NQ==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961145", "bodyText": "Updated.", "author": "ShanChathusanda93", "createdAt": "2020-01-21T12:01:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzNjU1MA=="}], "type": "inlineReview", "revised_code": {"commit": "abeca4e923e9640761e85e302d0083947decf07a", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nindex 7b11892fe..2fe7e2d26 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n\n@@ -29,12 +29,15 @@ import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceUserStoreExceptionException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n import org.wso2.identity.integration.test.util.Utils;\n \n import java.io.File;\n import java.io.IOException;\n+import java.rmi.RemoteException;\n \n import javax.xml.xpath.XPathExpressionException;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzODE5OQ==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368938199", "bodyText": "Shall we extract [1] to a private method.\n[1] https://github.com/wso2/product-is/pull/7331/files#diff-5a568678ef146a2ce34d484b6f8b09fdR106-R110", "author": "DMHP", "createdAt": "2020-01-21T11:05:19Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];", "originalCommit": "9c257d197045121b0b3bffc75f3b8004768c838b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTIyNg==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961226", "bodyText": "Updated.", "author": "ShanChathusanda93", "createdAt": "2020-01-21T12:01:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzODE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "abeca4e923e9640761e85e302d0083947decf07a", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nindex 7b11892fe..2fe7e2d26 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n\n@@ -29,12 +29,15 @@ import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceUserStoreExceptionException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n import org.wso2.identity.integration.test.util.Utils;\n \n import java.io.File;\n import java.io.IOException;\n+import java.rmi.RemoteException;\n \n import javax.xml.xpath.XPathExpressionException;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MDA1OA==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368940058", "bodyText": "Shall we catch only the specific exception types.", "author": "DMHP", "createdAt": "2020-01-21T11:09:17Z", "path": "modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied. See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+\n+package org.wso2.identity.integration.test.identity.mgt;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.carbon.authenticator.stub.LoginAuthenticationExceptionException;\n+import org.wso2.carbon.automation.engine.annotations.ExecutionEnvironment;\n+import org.wso2.carbon.automation.engine.annotations.SetEnvironment;\n+import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n+import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n+import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n+import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n+import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n+import org.wso2.identity.integration.test.util.Utils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.xml.xpath.XPathExpressionException;\n+\n+/**\n+ * This test class is to test the user account locking process while the caseInsensitiveUserName and\n+ * useCaseSensitiveUsernameForCacheKey properties are false in the primary user store.\n+ */\n+public class AccountLockWhileCaseInsensitiveUserFalseTestCase extends ISIntegrationTest {\n+\n+    private static final String TEST_USER_1 = \"testDemo\";\n+    private static final String TEST_USER_2 = \"TestDemo\";\n+    private static final String TEST_USER_1_PASSWORD = \"testDemoPass\";\n+    private static final String ROLE_ADMIN = \"admin\";\n+    private static final String ACCOUNT_LOCK_CLAIM_URI = \"http://wso2.org/claims/identity/accountLocked\";\n+    private ServerConfigurationManager configurationManager;\n+    private RemoteUserStoreManagerServiceClient usmServiceClient;\n+    private AuthenticatorClient authClient;\n+\n+    @BeforeClass(alwaysRun = true)\n+    public void testInit() throws Exception {\n+\n+        super.init();\n+        String carbonHome = Utils.getResidentCarbonHome();\n+        configureServerWithRestart(carbonHome);\n+\n+        super.init();\n+\n+        usmServiceClient = new RemoteUserStoreManagerServiceClient(backendURL, sessionCookie);\n+        createLockedUser(TEST_USER_1, new String[]{ROLE_ADMIN}, TEST_USER_1_PASSWORD);\n+        authClient = new AuthenticatorClient(backendURL);\n+    }\n+\n+    @AfterClass(alwaysRun = true)\n+    public void atEnd() throws Exception {\n+\n+        log.info(\"Deleting the user : \" + TEST_USER_1 + \".\");\n+        usmServiceClient.deleteUser(TEST_USER_1);\n+\n+        log.info(\"Replacing the default configurations.\");\n+        configurationManager.restoreToLastConfiguration(false);\n+    }\n+\n+    @SetEnvironment(executionEnvironments = {ExecutionEnvironment.ALL})\n+    @Test(groups = \"wso2.is\", description = \"Check whether the user is locked under CaseInsensitiveUsername property \" +\n+            \"is false.\", expectedExceptions = LoginAuthenticationExceptionException.class)\n+    public void testCaseInsensitiveUsernameFalseUserLocking() throws Exception {\n+\n+        log.info(\"Login attempt to \" + TEST_USER_1 + \" user from \" + TEST_USER_2 + \" user.\");\n+        authClient.login(TEST_USER_2, TEST_USER_1_PASSWORD, isServer.getInstance().getHosts().get(\"default\"));\n+    }\n+\n+    private void configureServerWithRestart(String carbonHome)\n+            throws AutomationUtilException, XPathExpressionException, IOException {\n+\n+        File defaultTomlFile = getDeploymentTomlFile(carbonHome);\n+        File configuredTomlFile = new File(getISResourceLocation() + File.separator + \"identityMgt\"\n+                + File.separator + \"case_insensitive_user_false.toml\");\n+\n+        log.info(\"Applying configured toml file.\");\n+        configurationManager = new ServerConfigurationManager(isServer);\n+        configurationManager.applyConfigurationWithoutRestart(configuredTomlFile, defaultTomlFile, true);\n+        configurationManager.restartGracefully();\n+        log.info(\"Toml configurations applied.\");\n+    }\n+\n+    private void createLockedUser(String userName, String[] roles, String password) {\n+\n+        log.info(\"Creating a locked user account.\");\n+        ClaimValue[] claimValues = new ClaimValue[1];\n+        ClaimValue lockedClaim = new ClaimValue();\n+        lockedClaim.setClaimURI(ACCOUNT_LOCK_CLAIM_URI);\n+        lockedClaim.setValue(Boolean.TRUE.toString());\n+        claimValues[0] = lockedClaim;\n+\n+        try {\n+            usmServiceClient.addUser(userName, password, roles, claimValues, null, false);\n+            log.info(\"Locked user account created.\");\n+        } catch (Exception e) {", "originalCommit": "9c257d197045121b0b3bffc75f3b8004768c838b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2MTI3OQ==", "url": "https://github.com/wso2/product-is/pull/7331#discussion_r368961279", "bodyText": "Updated.", "author": "ShanChathusanda93", "createdAt": "2020-01-21T12:01:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MDA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "abeca4e923e9640761e85e302d0083947decf07a", "chunk": "diff --git a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\nindex 7b11892fe..2fe7e2d26 100644\n--- a/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n+++ b/modules/integration/tests-integration/tests-backend/src/test/java/org/wso2/identity/integration/test/identity/mgt/AccountLockWhileCaseInsensitiveUserFalseTestCase.java\n\n@@ -29,12 +29,15 @@ import org.wso2.carbon.integration.common.admin.client.AuthenticatorClient;\n import org.wso2.carbon.integration.common.utils.exceptions.AutomationUtilException;\n import org.wso2.carbon.integration.common.utils.mgt.ServerConfigurationManager;\n import org.wso2.carbon.um.ws.api.stub.ClaimValue;\n+import org.wso2.carbon.um.ws.api.stub.RemoteUserStoreManagerServiceUserStoreExceptionException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.identity.integration.common.clients.usermgt.remote.RemoteUserStoreManagerServiceClient;\n import org.wso2.identity.integration.common.utils.ISIntegrationTest;\n import org.wso2.identity.integration.test.util.Utils;\n \n import java.io.File;\n import java.io.IOException;\n+import java.rmi.RemoteException;\n \n import javax.xml.xpath.XPathExpressionException;\n \n"}}, {"oid": "abeca4e923e9640761e85e302d0083947decf07a", "url": "https://github.com/wso2/product-is/commit/abeca4e923e9640761e85e302d0083947decf07a", "message": "Add integation test case for user account locking", "committedDate": "2020-01-21T11:58:49Z", "type": "commit"}, {"oid": "abeca4e923e9640761e85e302d0083947decf07a", "url": "https://github.com/wso2/product-is/commit/abeca4e923e9640761e85e302d0083947decf07a", "message": "Add integation test case for user account locking", "committedDate": "2020-01-21T11:58:49Z", "type": "forcePushed"}]}