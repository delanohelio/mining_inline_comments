{"pr_number": 18395, "pr_title": "add limitation on webapp autoconfiguration", "pr_createdAt": "2020-12-30T05:25:19Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18395", "timeline": [{"oid": "cf1195195e2ef4a0dd1b8b2bb6270ea254ee4d27", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf1195195e2ef4a0dd1b8b2bb6270ea254ee4d27", "message": "add limitation on webapp autoconfiguration", "committedDate": "2020-12-30T05:23:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTc3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549939772", "bodyText": "We'd better add a unit test for this case.", "author": "saragluna", "createdAt": "2020-12-30T05:26:46Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -43,6 +44,7 @@\n @Configuration\n @ConditionalOnMissingClass({ \"org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken\" })\n @ConditionalOnClass(ClientRegistrationRepository.class)\n+@ConditionalOnProperty(\"azure.activedirectory.client-id\")", "originalCommit": "cf1195195e2ef4a0dd1b8b2bb6270ea254ee4d27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTk2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549939967", "bodyText": "I also find the same problem in obo auto-configuration, please hold the release for my PR.", "author": "saragluna", "createdAt": "2020-12-30T05:28:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTkzOTc3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "527dd26bf443a18465d5711980e1c61f784df596", "url": "https://github.com/Azure/azure-sdk-for-java/commit/527dd26bf443a18465d5711980e1c61f784df596", "message": "add unit test on webapp configuration initialization", "committedDate": "2020-12-30T06:13:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0NzU0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549947549", "bodyText": "Change method name. like doesNotHaveBeanIfRequiredPropertiesNotConfigured.\nAdd another test: hasBeanIfRequiredPropertiesConfigured", "author": "chenrujun", "createdAt": "2020-12-30T06:18:43Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -5,22 +5,34 @@\n \n import com.azure.spring.aad.AADAuthorizationServerEndpoints;\n import org.junit.Test;\n+import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class AADWebAppConfigurationTest {\n+    private final WebApplicationContextRunner contextRunner = PropertiesUtils.getContextRunner();\n+\n+    @Test\n+    public void configurationInitialization() {", "originalCommit": "527dd26bf443a18465d5711980e1c61f784df596", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01316d748b809c8ea301fb54ff5c42103b3acec9", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\nindex 5aae6fb5558..d993adeec56 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n\n@@ -5,9 +5,10 @@ package com.azure.spring.aad.webapp;\n \n import com.azure.spring.aad.AADAuthorizationServerEndpoints;\n import org.junit.Test;\n-import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk0Nzc1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549947750", "bodyText": "Can we change the class name to WebApplicationContextRunnerUtils", "author": "chenrujun", "createdAt": "2020-12-30T06:19:47Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java", "diffHunk": "@@ -17,20 +17,22 @@\n     public static WebApplicationContextRunner getContextRunner() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .withUserConfiguration(AADWebAppConfiguration.class)\n-            .withPropertyValues(\n-                \"azure.activedirectory.client-id = fake-client-id\",\n-                \"azure.activedirectory.client-secret = fake-client-secret\",\n-                \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-                \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+            .withUserConfiguration(AADWebAppConfiguration.class);\n     }\n \n+    public static WebApplicationContextRunner addBasicPropertyValues(WebApplicationContextRunner contextRunner) {\n+        return contextRunner.withPropertyValues(\n+            \"azure.activedirectory.client-id = fake-client-id\",\n+            \"azure.activedirectory.client-secret = fake-client-secret\",\n+            \"azure.activedirectory.tenant-id = fake-tenant-id\",\n+            \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+    }", "originalCommit": "527dd26bf443a18465d5711980e1c61f784df596", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01316d748b809c8ea301fb54ff5c42103b3acec9", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\nsimilarity index 62%\nrename from sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java\nrename to sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\nindex 657d89d4c2d..1b7e895a87a 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/PropertiesUtils.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\n\n@@ -12,20 +12,22 @@ import org.springframework.util.MultiValueMap;\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .withUserConfiguration(AADWebAppConfiguration.class);\n+            .withUserConfiguration(AADWebAppConfiguration.class)\n+            .withPropertyValues(\n+                \"azure.activedirectory.client-id = fake-client-id\",\n+                \"azure.activedirectory.client-secret = fake-client-secret\",\n+                \"azure.activedirectory.tenant-id = fake-tenant-id\");\n     }\n \n-    public static WebApplicationContextRunner addBasicPropertyValues(WebApplicationContextRunner contextRunner) {\n-        return contextRunner.withPropertyValues(\n-            \"azure.activedirectory.client-id = fake-client-id\",\n-            \"azure.activedirectory.client-secret = fake-client-secret\",\n-            \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-            \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+    public static WebApplicationContextRunner getContextRunnerWithoutRequiredProperties() {\n+        return new WebApplicationContextRunner()\n+            .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n+            .withUserConfiguration(AADWebAppConfiguration.class);\n     }\n \n     @SuppressWarnings(\"unchecked\")\n"}}, {"oid": "01316d748b809c8ea301fb54ff5c42103b3acec9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/01316d748b809c8ea301fb54ff5c42103b3acec9", "message": "add test on configuration success and rename util classs", "committedDate": "2020-12-30T07:00:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MDkwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549970906", "bodyText": "We can use assertThat(context).hasSingleBean(AADAuthenticationProperties.class); instead.", "author": "chenrujun", "createdAt": "2020-12-30T07:08:54Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -7,20 +7,49 @@\n import org.junit.Test;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n \n public class AADWebAppConfigurationTest {\n \n+    @Test\n+    public void noConfigurationOnMissingRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithoutRequiredProperties()\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(\"AADWebAppClientRegistrationRepository\");\n+                assertThat(context).doesNotHaveBean(\"OAuth2AuthorizedClientRepository\");\n+                assertThat(context).doesNotHaveBean(\"OAuth2UserService\");\n+        });\n+    }\n+\n+    @Test\n+    public void configurationOnRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .run(context -> {\n+                ClientRegistrationRepository clientRegistrationRepository = context.getBean(AADWebAppClientRegistrationRepository.class);\n+                OAuth2AuthorizedClientRepository authorizedClientRepository = context.getBean(OAuth2AuthorizedClientRepository.class);\n+                OAuth2UserService userService = context.getBean(OAuth2UserService.class);\n+                assertNotNull(clientRegistrationRepository);", "originalCommit": "01316d748b809c8ea301fb54ff5c42103b3acec9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\nindex d993adeec56..019b4674531 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n\n@@ -18,16 +18,17 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.springframework.boot.test.context.assertj.ApplicationContextAssert.Scope.INCLUDE_ANCESTORS;\n \n public class AADWebAppConfigurationTest {\n \n     @Test\n     public void noConfigurationOnMissingRequiredProperties() {\n-        WebApplicationContextRunnerUtils.getContextRunnerWithoutRequiredProperties()\n+        WebApplicationContextRunnerUtils.getContextRunner()\n             .run(context -> {\n-                assertThat(context).doesNotHaveBean(\"AADWebAppClientRegistrationRepository\");\n-                assertThat(context).doesNotHaveBean(\"OAuth2AuthorizedClientRepository\");\n-                assertThat(context).doesNotHaveBean(\"OAuth2UserService\");\n+                assertThat(context).doesNotHaveBean(AADWebAppClientRegistrationRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2UserService.class, INCLUDE_ANCESTORS);\n         });\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MjE4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549972189", "bodyText": "Suggestion:\n\nRename getContextRunnerWithoutRequiredProperties to getContextRunner\nCall getContextRunner in getContextRunnerWithRequiredProperties", "author": "chenrujun", "createdAt": "2020-12-30T07:10:38Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "diffHunk": "@@ -12,25 +12,29 @@\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {", "originalCommit": "01316d748b809c8ea301fb54ff5c42103b3acec9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\nindex 1b7e895a87a..56f34487d95 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\n\n@@ -15,16 +15,13 @@ import java.util.Optional;\n public class WebApplicationContextRunnerUtils {\n \n     public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n-        return new WebApplicationContextRunner()\n-            .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .withUserConfiguration(AADWebAppConfiguration.class)\n-            .withPropertyValues(\n+        return getContextRunner().withPropertyValues(\n                 \"azure.activedirectory.client-id = fake-client-id\",\n                 \"azure.activedirectory.client-secret = fake-client-secret\",\n                 \"azure.activedirectory.tenant-id = fake-tenant-id\");\n     }\n \n-    public static WebApplicationContextRunner getContextRunnerWithoutRequiredProperties() {\n+    public static WebApplicationContextRunner getContextRunner() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n             .withUserConfiguration(AADWebAppConfiguration.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MzMwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549973305", "bodyText": "Why delete allowed-groups?", "author": "chenrujun", "createdAt": "2020-12-30T07:12:20Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java", "diffHunk": "@@ -12,25 +12,29 @@\n \n import java.util.Optional;\n \n-public class PropertiesUtils {\n+public class WebApplicationContextRunnerUtils {\n \n-    public static WebApplicationContextRunner getContextRunner() {\n+    public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n             .withUserConfiguration(AADWebAppConfiguration.class)\n             .withPropertyValues(\n                 \"azure.activedirectory.client-id = fake-client-id\",\n                 \"azure.activedirectory.client-secret = fake-client-secret\",\n-                \"azure.activedirectory.tenant-id = fake-tenant-id\",\n-                \"azure.activedirectory.user-group.allowed-groups = group1, group2\");\n+                \"azure.activedirectory.tenant-id = fake-tenant-id\");", "originalCommit": "01316d748b809c8ea301fb54ff5c42103b3acec9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk4MTI5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r549981294", "bodyText": "Because allowed-group is not necessary.", "author": "yiliuTo", "createdAt": "2020-12-30T07:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTk3MzMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\nindex 1b7e895a87a..56f34487d95 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/WebApplicationContextRunnerUtils.java\n\n@@ -15,16 +15,13 @@ import java.util.Optional;\n public class WebApplicationContextRunnerUtils {\n \n     public static WebApplicationContextRunner getContextRunnerWithRequiredProperties() {\n-        return new WebApplicationContextRunner()\n-            .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n-            .withUserConfiguration(AADWebAppConfiguration.class)\n-            .withPropertyValues(\n+        return getContextRunner().withPropertyValues(\n                 \"azure.activedirectory.client-id = fake-client-id\",\n                 \"azure.activedirectory.client-secret = fake-client-secret\",\n                 \"azure.activedirectory.tenant-id = fake-tenant-id\");\n     }\n \n-    public static WebApplicationContextRunner getContextRunnerWithoutRequiredProperties() {\n+    public static WebApplicationContextRunner getContextRunner() {\n         return new WebApplicationContextRunner()\n             .withClassLoader(new FilteredClassLoader(BearerTokenAuthenticationToken.class))\n             .withUserConfiguration(AADWebAppConfiguration.class);\n"}}, {"oid": "e11c02377bb426c6a70cd162dff67092fc6814f5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e11c02377bb426c6a70cd162dff67092fc6814f5", "message": "rename util funtion names", "committedDate": "2020-12-30T07:59:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMjY4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550012682", "bodyText": "allowed-groups is not necessary here?", "author": "chenrujun", "createdAt": "2020-12-30T08:05:39Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java", "diffHunk": "@@ -43,7 +43,8 @@ private void getBeans(AssertableWebApplicationContext context) {\n \n     @Test\n     public void addScopeForDefaultClient() {\n-        contextRunner.run(context -> {\n+        contextRunner.withPropertyValues(\"azure.activedirectory.user-group.allowed-groups = group1, group2\")", "originalCommit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e74067c9e6b15e065ed9e43d5b8c963d99f69bee", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java\nindex 5f52213c8ee..8a29bcc7003 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest.java\n\n@@ -43,13 +43,11 @@ public class AADOAuth2AuthorizationCodeGrantRequestEntityConverterTest {\n \n     @Test\n     public void addScopeForDefaultClient() {\n-        contextRunner.withPropertyValues(\"azure.activedirectory.user-group.allowed-groups = group1, group2\")\n-            .run(context -> {\n+        contextRunner.run(context -> {\n             getBeans(context);\n             MultiValueMap<String, String> body = convertedBodyOf(createCodeGrantRequest(azure));\n             assertEquals(\n-                \"openid profile offline_access https://graph.microsoft.com/User.Read \"\n-                    + \"https://graph.microsoft.com/Directory.AccessAsUser.All\",\n+                \"openid profile offline_access\",\n                 body.getFirst(\"scope\")\n             );\n         });\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxMzAzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550013036", "bodyText": "Same here.", "author": "chenrujun", "createdAt": "2020-12-30T08:06:03Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -7,20 +7,47 @@\n import org.junit.Test;\n import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.userinfo.OAuth2UserService;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n \n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.springframework.boot.test.context.assertj.ApplicationContextAssert.Scope.INCLUDE_ANCESTORS;\n \n public class AADWebAppConfigurationTest {\n \n+    @Test\n+    public void noConfigurationOnMissingRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunner()\n+            .run(context -> {\n+                assertThat(context).doesNotHaveBean(AADWebAppClientRegistrationRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2AuthorizedClientRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).doesNotHaveBean(OAuth2UserService.class, INCLUDE_ANCESTORS);\n+        });\n+    }\n+\n+    @Test\n+    public void configurationOnRequiredProperties() {\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .run(context -> {\n+                assertThat(context).hasSingleBean(AADWebAppClientRegistrationRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).hasSingleBean(OAuth2AuthorizedClientRepository.class, INCLUDE_ANCESTORS);\n+                assertThat(context).hasSingleBean(OAuth2UserService.class, INCLUDE_ANCESTORS);\n+            });\n+    }\n+\n     @Test\n     public void clientRegistered() {\n-        PropertiesUtils.getContextRunner()\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n+            .withPropertyValues(\n+                \"azure.activedirectory.user-group.allowed-groups = group1, group2\"", "originalCommit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e74067c9e6b15e065ed9e43d5b8c963d99f69bee", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\nindex 019b4674531..e0f83ff439c 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n\n@@ -18,7 +18,6 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n import static org.junit.jupiter.api.Assertions.assertTrue;\n-import static org.springframework.boot.test.context.assertj.ApplicationContextAssert.Scope.INCLUDE_ANCESTORS;\n \n public class AADWebAppConfigurationTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxNDIwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18395#discussion_r550014205", "bodyText": "Seems we can delete all allowed-groups.", "author": "chenrujun", "createdAt": "2020-12-30T08:07:32Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java", "diffHunk": "@@ -60,10 +88,11 @@ public void clientRequiresPermissionRegistered() {\n \n     @Test\n     public void clientRequiresMultiPermissions() {\n-        PropertiesUtils.getContextRunner()\n+        WebApplicationContextRunnerUtils.getContextRunnerWithRequiredProperties()\n             .withPropertyValues(\n                 \"azure.activedirectory.authorization-clients.graph.scopes = Calendars.Read\",\n-                \"azure.activedirectory.authorization-clients.arm.scopes = https://management.core.windows.net/user_impersonation\"\n+                \"azure.activedirectory.authorization-clients.arm.scopes = https://management.core.windows.net/user_impersonation\",\n+                \"azure.activedirectory.user-group.allowed-groups = group1, group2\"", "originalCommit": "e11c02377bb426c6a70cd162dff67092fc6814f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e74067c9e6b15e065ed9e43d5b8c963d99f69bee", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\nindex 019b4674531..e0f83ff439c 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AADWebAppConfigurationTest.java\n\n@@ -81,7 +76,7 @@ public class AADWebAppConfigurationTest {\n                 assertNotNull(azure);\n                 assertNotNull(graph);\n                 assertDefaultScopes(azure,\n-                    \"openid\", \"profile\", \"offline_access\", \"https://graph.microsoft.com/User.Read\", \"https://graph.microsoft.com/Directory.AccessAsUser.All\", \"Calendars.Read\");\n+                    \"openid\", \"profile\", \"offline_access\", \"Calendars.Read\");\n                 assertDefaultScopes(graph, \"Calendars.Read\");\n             });\n     }\n"}}, {"oid": "e74067c9e6b15e065ed9e43d5b8c963d99f69bee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e74067c9e6b15e065ed9e43d5b8c963d99f69bee", "message": "add test for allowed-group property", "committedDate": "2020-12-30T08:28:18Z", "type": "commit"}]}