{"pr_number": 16638, "pr_title": "[FR] Add support for Selection Mark feature", "pr_createdAt": "2020-10-21T19:13:40Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16638", "timeline": [{"oid": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "message": "Init commit for SelectionMark", "committedDate": "2020-10-21T19:07:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwMjA3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509602074", "bodyText": "delete it because nowhere is using this method.", "author": "mssfang", "createdAt": "2020-10-21T19:16:21Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -70,22 +69,6 @@ static InputStream getContentDetectionFileData(String localFileUrl) {\n         }\n     }\n \n-    static Flux<ByteBuffer> getReplayableBufferData(String localFileUrl) {", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYyOTY3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509629670", "bodyText": "nit: Don't need the full qualifier?", "author": "samvaity", "createdAt": "2020-10-21T19:54:18Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -360,25 +396,48 @@ private static float setDefaultConfidenceValue(Float confidence) {\n             .collect(Collectors.toList());\n     }\n \n+    /**\n+     * Helper method to convert the service level field value selection marks to SDK level model.\n+     *\n+     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static SelectionMarkState toFieldValueSelectionMarkState(\n+        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex 147c45efc74..fb647c394c3 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -396,26 +397,6 @@ final class Transforms {\n             .collect(Collectors.toList());\n     }\n \n-    /**\n-     * Helper method to convert the service level field value selection marks to SDK level model.\n-     *\n-     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n-     *\n-     * @return The selection mark state in the SDK level model.\n-     */\n-    private static SelectionMarkState toFieldValueSelectionMarkState(\n-        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {\n-        SelectionMarkState result = null;\n-        if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.SELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.SELECTED;\n-        } else if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.UNSELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.UNSELECTED;\n-        }\n-        return result;\n-    }\n-\n     /**\n      * Helper method to convert the page results to {@code FormPage form pages}.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMTQ1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509631453", "bodyText": "Rather than assigning the result value, you can just return?\n return SelectionMarkState.SELECTED;", "author": "samvaity", "createdAt": "2020-10-21T19:55:47Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -360,25 +396,48 @@ private static float setDefaultConfidenceValue(Float confidence) {\n             .collect(Collectors.toList());\n     }\n \n+    /**\n+     * Helper method to convert the service level field value selection marks to SDK level model.\n+     *\n+     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static SelectionMarkState toFieldValueSelectionMarkState(\n+        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {\n+        SelectionMarkState result = null;\n+        if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.SELECTED.equals(\n+            fieldValueSelectionMark)) {\n+            result = SelectionMarkState.SELECTED;", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex 147c45efc74..fb647c394c3 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -396,26 +397,6 @@ final class Transforms {\n             .collect(Collectors.toList());\n     }\n \n-    /**\n-     * Helper method to convert the service level field value selection marks to SDK level model.\n-     *\n-     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n-     *\n-     * @return The selection mark state in the SDK level model.\n-     */\n-    private static SelectionMarkState toFieldValueSelectionMarkState(\n-        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {\n-        SelectionMarkState result = null;\n-        if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.SELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.SELECTED;\n-        } else if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.UNSELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.UNSELECTED;\n-        }\n-        return result;\n-    }\n-\n     /**\n      * Helper method to convert the page results to {@code FormPage form pages}.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMTkwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509631906", "bodyText": "This is an elseif what happens when none of the conditions are true?", "author": "samvaity", "createdAt": "2020-10-21T19:56:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -360,25 +396,48 @@ private static float setDefaultConfidenceValue(Float confidence) {\n             .collect(Collectors.toList());\n     }\n \n+    /**\n+     * Helper method to convert the service level field value selection marks to SDK level model.\n+     *\n+     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static SelectionMarkState toFieldValueSelectionMarkState(\n+        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {\n+        SelectionMarkState result = null;\n+        if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.SELECTED.equals(\n+            fieldValueSelectionMark)) {\n+            result = SelectionMarkState.SELECTED;\n+        } else if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.UNSELECTED.equals(", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMTc5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509801792", "bodyText": "updated to throw a runtime exception.", "author": "mssfang", "createdAt": "2020-10-21T23:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMTkwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMjE5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509802190", "bodyText": "if (FieldValueSelectionMark.SELECTED.equals(fieldValueSelectionMark)) {\n            return SelectionMarkState.SELECTED;\n        } else if (FieldValueSelectionMark.UNSELECTED.equals(fieldValueSelectionMark)) {\n            return SelectionMarkState.UNSELECTED;\n        } else {\n            throw LOGGER.logThrowableAsError(new RuntimeException(\n                String.format(\"%s, Unsupported Selection mark state.\", fieldValueSelectionMark)));\n        }", "author": "mssfang", "createdAt": "2020-10-22T00:00:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMTkwNg=="}], "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex 147c45efc74..fb647c394c3 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -396,26 +397,6 @@ final class Transforms {\n             .collect(Collectors.toList());\n     }\n \n-    /**\n-     * Helper method to convert the service level field value selection marks to SDK level model.\n-     *\n-     * @param fieldValueSelectionMark The field value selection mark state, i.e., SELECTED and UNSELECTED.\n-     *\n-     * @return The selection mark state in the SDK level model.\n-     */\n-    private static SelectionMarkState toFieldValueSelectionMarkState(\n-        com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark fieldValueSelectionMark) {\n-        SelectionMarkState result = null;\n-        if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.SELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.SELECTED;\n-        } else if (com.azure.ai.formrecognizer.implementation.models.FieldValueSelectionMark.UNSELECTED.equals(\n-            fieldValueSelectionMark)) {\n-            result = SelectionMarkState.UNSELECTED;\n-        }\n-        return result;\n-    }\n-\n     /**\n      * Helper method to convert the page results to {@code FormPage form pages}.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMjgzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509632831", "bodyText": "This looks the same as this method. Can it be combined/reused?", "author": "samvaity", "createdAt": "2020-10-21T19:57:29Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -497,4 +556,24 @@ private static FieldBoundingBox toBoundingBox(List<Float> serviceBoundingBox) {\n         }\n         return new FieldBoundingBox(pointList);\n     }\n+\n+    /**\n+     * Helper method to convert the service level selection marks state to SDK level model.\n+     *\n+     * @param selectionMarkState The selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static SelectionMarkState toSelectionMarkState(", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2Njk0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509866943", "bodyText": "yes. it can", "author": "mssfang", "createdAt": "2020-10-22T04:03:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMjgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex 147c45efc74..fb647c394c3 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -564,16 +545,24 @@ final class Transforms {\n      *\n      * @return The selection mark state in the SDK level model.\n      */\n-    private static SelectionMarkState toSelectionMarkState(\n-        com.azure.ai.formrecognizer.implementation.models.SelectionMarkState selectionMarkState) {\n-        SelectionMarkState result = null;\n-        if (com.azure.ai.formrecognizer.implementation.models.SelectionMarkState.SELECTED.equals(\n-            selectionMarkState)) {\n-            result = SelectionMarkState.SELECTED;\n-        } else if (com.azure.ai.formrecognizer.implementation.models.SelectionMarkState.UNSELECTED.equals(\n-            selectionMarkState)) {\n-            result = SelectionMarkState.UNSELECTED;\n+    private static com.azure.ai.formrecognizer.models.SelectionMarkState toSelectionMarkState(\n+        Object selectionMarkState) {\n+        if (selectionMarkState instanceof FieldValueSelectionMark) {\n+            if (FieldValueSelectionMark.SELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n+            } else if (FieldValueSelectionMark.UNSELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n+            }\n+        } else if (selectionMarkState instanceof SelectionMarkState) {\n+            if (SelectionMarkState.SELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n+            } else if (SelectionMarkState.UNSELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n+            }\n         }\n-        return result;\n+        return null;\n+        // TODO: (shawn) currently, the fieldValue's valueSelectionMark is null which is incorrect.\n+//        throw LOGGER.logThrowableAsError(new RuntimeException(\n+//                String.format(\"%s, unsupported selection mark state.\", selectionMarkState)));\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMzI0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509633248", "bodyText": "Should return an unmodifiable list to the user.", "author": "samvaity", "createdAt": "2020-10-21T19:58:08Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormPage.java", "diffHunk": "@@ -140,5 +142,14 @@ public float getWidth() {\n     public Integer getPageNumber() {\n         return this.pageNumber;\n     }\n+\n+    /**\n+     * Get the selection marks in the input document.\n+     *\n+     * @return the selection marks.\n+     */\n+    public List<FormSelectionMark> getSelectionMarks() {\n+        return this.selectionMarks;", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormPage.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormPage.java\nindex 101b11b9e83..01730ffe850 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormPage.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormPage.java\n\n@@ -149,7 +149,7 @@ public final class FormPage {\n      * @return the selection marks.\n      */\n     public List<FormSelectionMark> getSelectionMarks() {\n-        return this.selectionMarks;\n+        return Collections.unmodifiableList(this.selectionMarks);\n     }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzMzk5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509633997", "bodyText": "Let's make this expandable, I think the service had some plans to introduce an unidentified value to this.", "author": "samvaity", "createdAt": "2020-10-21T19:59:20Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/SelectionMarkState.java", "diffHunk": "@@ -0,0 +1,13 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+/** Defines values for SelectionMarkState. i.e., Selected or Unselected */\n+public enum SelectionMarkState {", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/SelectionMarkState.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/SelectionMarkState.java\nindex 6bea5b4234a..9f3fc2bdd7d 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/SelectionMarkState.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/SelectionMarkState.java\n\n@@ -3,11 +3,28 @@\n \n package com.azure.ai.formrecognizer.models;\n \n+import com.azure.core.util.ExpandableStringEnum;\n+\n /** Defines values for SelectionMarkState. i.e., Selected or Unselected */\n-public enum SelectionMarkState {\n-    /** Enum value selected. */\n-    SELECTED,\n+public final class SelectionMarkState extends ExpandableStringEnum<SelectionMarkState> {\n+    /**\n+     * Static value SELECTED for SelectionMarkState.\n+     */\n+    public static final SelectionMarkState SELECTED = fromString(\"selected\");\n+\n+    /**\n+     * Static value UNSELECTED for SelectionMarkState.\n+     */\n+    public static final SelectionMarkState UNSELECTED = fromString(\"unselected\");\n \n-    /** Enum value unselected. */\n-    UNSELECTED\n+    /**\n+     * Creates or finds a SelectionMarkState from its string representation.\n+     *\n+     * @param value a value to look for.\n+     *\n+     * @return the corresponding SelectionMarkState.\n+     */\n+    public static SelectionMarkState fromString(String value) {\n+        return fromString(value, SelectionMarkState.class);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNTI0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509635241", "bodyText": "use BoundingBox.toString()", "author": "samvaity", "createdAt": "2020-10-21T20:00:11Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ReadmeSamples.java", "diffHunk": "@@ -136,6 +136,14 @@ public void recognizeContent() throws IOException {\n                 formTable.getCells().forEach(formTableCell ->\n                     System.out.printf(\"Cell has text %s.%n\", formTableCell.getText()));\n             });\n+            // Selection Mark\n+            formPage.getSelectionMarks().forEach(selectionMark -> {\n+                StringBuilder boundingBoxStr = new StringBuilder();\n+                selectionMark.getBoundingBox().getPoints().forEach(\n+                    point -> boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ReadmeSamples.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ReadmeSamples.java\nindex 7fbf3e38510..c3d647fe53d 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ReadmeSamples.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/ReadmeSamples.java\n\n@@ -137,13 +137,10 @@ public class ReadmeSamples {\n                     System.out.printf(\"Cell has text %s.%n\", formTableCell.getText()));\n             });\n             // Selection Mark\n-            formPage.getSelectionMarks().forEach(selectionMark -> {\n-                StringBuilder boundingBoxStr = new StringBuilder();\n-                selectionMark.getBoundingBox().getPoints().forEach(\n-                    point -> boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(), point.getY())));\n-                System.out.printf(\"Page: %s, Selection mark is %s within bounding box %s has a confidence score %.2f.%n\",\n-                    selectionMark.getPageNumber(), selectionMark.getState(), boundingBoxStr, selectionMark.getConfidence());\n-            });\n+            formPage.getSelectionMarks().forEach(selectionMark -> System.out.printf(\n+                \"Page: %s, Selection mark is %s within bounding box %s has a confidence score %.2f.%n\",\n+                selectionMark.getPageNumber(), selectionMark.getState(), selectionMark.getBoundingBox().toString(),\n+                selectionMark.getConfidence()));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzNjcyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509636725", "bodyText": "Let's keep the env vars out and samples consistent. Could think about this update for all or none in upcoming PR's/", "author": "samvaity", "createdAt": "2020-10-21T20:01:14Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContentWithSelectionMarks.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.FormPage;\n+import com.azure.ai.formrecognizer.models.FormRecognizerOperationResult;\n+import com.azure.ai.formrecognizer.models.FormSelectionMark;\n+import com.azure.ai.formrecognizer.models.FormTable;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.polling.SyncPoller;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.util.List;\n+\n+public class RecognizeContentWithSelectionMarks {\n+    /**\n+     * Main method to invoke this demo.\n+     *\n+     * @param args Unused. Arguments to the program.\n+     *\n+     * @throws IOException Exception thrown when there is an error in reading all the bytes from the File.\n+     */\n+    public static void main(final String[] args) throws IOException {\n+        // Instantiate a client that will be used to call the service.\n+        FormRecognizerClient client = new FormRecognizerClientBuilder()\n+                                          .credential(new AzureKeyCredential(Configuration.getGlobalConfiguration().get(\"AZURE_FORM_RECOGNIZER_API_KEY\")))\n+                                          .endpoint(Configuration.getGlobalConfiguration().get(\"AZURE_FORM_RECOGNIZER_ENDPOINT\"))\n+                                          .buildClient();", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContentWithSelectionMarks.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContentWithSelectionMarks.java\nindex 966eaaf64a8..5a964da25d1 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContentWithSelectionMarks.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContentWithSelectionMarks.java\n\n@@ -8,7 +8,6 @@ import com.azure.ai.formrecognizer.models.FormRecognizerOperationResult;\n import com.azure.ai.formrecognizer.models.FormSelectionMark;\n import com.azure.ai.formrecognizer.models.FormTable;\n import com.azure.core.credential.AzureKeyCredential;\n-import com.azure.core.util.Configuration;\n import com.azure.core.util.polling.SyncPoller;\n \n import java.io.ByteArrayInputStream;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzODUyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509638522", "bodyText": "Rather than keeping the tests disabled, do you want to create a small PR to add these files to the repo first?", "author": "samvaity", "createdAt": "2020-10-21T20:02:42Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientTest.java", "diffHunk": "@@ -1106,6 +1165,28 @@ public void recognizeCustomFormDamagedPdf(HttpClient httpClient,\n             }));\n     }\n \n+    @Disabled(\"add this test when the selection mark test file is merged\")", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyMzU5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509723591", "bodyText": "#16640\nThanks", "author": "mssfang", "createdAt": "2020-10-21T21:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzODUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientTest.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientTest.java\nindex 817223e09bc..a11d917c69a 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientTest.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientTest.java\n\n@@ -1165,7 +1163,6 @@ public class FormRecognizerAsyncClientTest extends FormRecognizerClientTestBase\n             }));\n     }\n \n-    @Disabled(\"add this test when the selection mark test file is merged\")\n     @ParameterizedTest(name = DISPLAY_NAME_WITH_ARGUMENTS)\n     @MethodSource(\"com.azure.ai.formrecognizer.TestUtils#getTestParameters\")\n     public void recognizeCustomFormUrlLabeledDataWithSelectionMark(HttpClient httpClient,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTUzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509639531", "bodyText": "Why do we need to ignore the case, we should have the same casing.", "author": "samvaity", "createdAt": "2020-10-21T20:03:44Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java", "diffHunk": "@@ -242,6 +246,19 @@ private static void validateFormLineData(List<TextLine> expectedLines, List<Form\n         }\n     }\n \n+    private static void validateFormSelectionMarkData(List<SelectionMark> expectedMarks,\n+        List<FormSelectionMark> actualMarks, int pageNumber) {\n+        for (int i = 0; i < actualMarks.size(); i++) {\n+            final SelectionMark expectedMark = expectedMarks.get(i);\n+            final FormSelectionMark actualMark = actualMarks.get(i);\n+            assertTrue(expectedMark.getState().toString().equalsIgnoreCase(actualMark.getState().toString()));", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc4OTk0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509789946", "bodyText": "The reason of using equalIgnoreCae method is because Service level, SelectionMarkState, expectedMark's  mark state is using ExpandableEnum which has selected but in SDK level, it is an enum, which uses SELECTED as the value.\nSince we are trying to using expandable enum for SDK level, i will update this. It will just equals()", "author": "mssfang", "createdAt": "2020-10-21T23:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTUzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5MDk2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509790967", "bodyText": "That sounds right. We should be able to reuse the same implementation model now then?", "author": "samvaity", "createdAt": "2020-10-21T23:23:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTUzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMTU0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509801549", "bodyText": "it will be update to\n           assertEquals(expectedMark.getState().toString(), actualMark.getState().toString());", "author": "mssfang", "createdAt": "2020-10-21T23:58:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYzOTUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java\nindex 9d63b0028c8..b4b0c7bdf22 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/FormRecognizerClientTestBase.java\n\n@@ -251,7 +251,7 @@ public abstract class FormRecognizerClientTestBase extends TestBase {\n         for (int i = 0; i < actualMarks.size(); i++) {\n             final SelectionMark expectedMark = expectedMarks.get(i);\n             final FormSelectionMark actualMark = actualMarks.get(i);\n-            assertTrue(expectedMark.getState().toString().equalsIgnoreCase(actualMark.getState().toString()));\n+            assertEquals(expectedMark.getState().toString(), actualMark.getState().toString());\n             validateBoundingBoxData(expectedMark.getBoundingBox(), actualMark.getBoundingBox());\n             // Currently, service has the null as the text value for layout.\n             assertNull(actualMark.getText());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MTIxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509641212", "bodyText": "Use the common constants one.", "author": "samvaity", "createdAt": "2020-10-21T20:05:37Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -37,27 +32,31 @@\n  * Contains helper methods for generating inputs for test methods\n  */\n final class TestUtils {\n-    static final String URL_TEST_FILE_FORMAT = \"https://raw.githubusercontent.com/Azure/azure-sdk-for-java/\"\n-        + \"master/sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/sample_files/Test/\";\n+    // Duration\n+    static final Duration ONE_NANO_DURATION = Duration.ofNanos(1);\n+    static final Duration DEFAULT_DURATION = Duration.ofSeconds(5);", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\nindex 821ab3f4463..107afce9ee8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\n\n@@ -34,7 +34,6 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n final class TestUtils {\n     // Duration\n     static final Duration ONE_NANO_DURATION = Duration.ofNanos(1);\n-    static final Duration DEFAULT_DURATION = Duration.ofSeconds(5);\n     // Local test files\n     static final String BLANK_PDF = \"blank.pdf\";\n     static final String FORM_JPG = \"Form_1.jpg\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MTk1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509641956", "bodyText": "only used at one place, no need to define it in a constant.", "author": "samvaity", "createdAt": "2020-10-21T20:06:23Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java", "diffHunk": "@@ -37,27 +32,31 @@\n  * Contains helper methods for generating inputs for test methods\n  */\n final class TestUtils {\n-    static final String URL_TEST_FILE_FORMAT = \"https://raw.githubusercontent.com/Azure/azure-sdk-for-java/\"\n-        + \"master/sdk/formrecognizer/azure-ai-formrecognizer/src/test/resources/sample_files/Test/\";\n+    // Duration\n+    static final Duration ONE_NANO_DURATION = Duration.ofNanos(1);", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDY1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509724659", "bodyText": "I just reorder them. Haven't check the existence.", "author": "mssfang", "createdAt": "2020-10-21T21:42:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MTk1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2MzAzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509863038", "bodyText": "checked. It used in two places.", "author": "mssfang", "createdAt": "2020-10-22T03:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY0MTk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\nindex 821ab3f4463..107afce9ee8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/test/java/com/azure/ai/formrecognizer/TestUtils.java\n\n@@ -34,7 +34,6 @@ import static org.junit.jupiter.api.Assertions.assertEquals;\n final class TestUtils {\n     // Duration\n     static final Duration ONE_NANO_DURATION = Duration.ofNanos(1);\n-    static final Duration DEFAULT_DURATION = Duration.ofSeconds(5);\n     // Local test files\n     static final String BLANK_PDF = \"blank.pdf\";\n     static final String FORM_JPG = \"Form_1.jpg\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NTc1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509675757", "bodyText": "update the description", "author": "samvaity", "createdAt": "2020-10-21T20:39:10Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+/**\n+ * The SelectionMark model.\n+ */\n+public final class FormSelectionMark extends FormElement {\n+    private float confidence;\n+    private SelectionMarkState state;\n+\n+    /**\n+     * Creates raw OCR item.", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\nindex 4dcec5c642c..791ea518aa6 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\n\n@@ -4,14 +4,14 @@\n package com.azure.ai.formrecognizer.models;\n \n /**\n- * The SelectionMark model.\n+ * The FormSelectionMark model.\n  */\n public final class FormSelectionMark extends FormElement {\n     private float confidence;\n     private SelectionMarkState state;\n \n     /**\n-     * Creates raw OCR item.\n+     * Creates a FormSelectionMark.\n      *\n      * @param text The text content of the extracted element.\n      * @param boundingBox The BoundingBox specifying relative coordinates of the element.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY3NTk3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r509675971", "bodyText": "FormSelectionMark", "author": "samvaity", "createdAt": "2020-10-21T20:39:24Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+/**\n+ * The SelectionMark model.", "originalCommit": "1f69735bc9c332758bd4f496b53fcfcd1e92f7e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b86bb51de63a5039677eb9d398f396241a77c46", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\nindex 4dcec5c642c..791ea518aa6 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormSelectionMark.java\n\n@@ -4,14 +4,14 @@\n package com.azure.ai.formrecognizer.models;\n \n /**\n- * The SelectionMark model.\n+ * The FormSelectionMark model.\n  */\n public final class FormSelectionMark extends FormElement {\n     private float confidence;\n     private SelectionMarkState state;\n \n     /**\n-     * Creates raw OCR item.\n+     * Creates a FormSelectionMark.\n      *\n      * @param text The text content of the extracted element.\n      * @param boundingBox The BoundingBox specifying relative coordinates of the element.\n"}}, {"oid": "bdbe028ce8af7cabaa27d1dd646b2776dfaca2f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bdbe028ce8af7cabaa27d1dd646b2776dfaca2f7", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into FR-SelectionMark", "committedDate": "2020-10-21T21:44:33Z", "type": "commit"}, {"oid": "2b86bb51de63a5039677eb9d398f396241a77c46", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2b86bb51de63a5039677eb9d398f396241a77c46", "message": "address feedbakcs", "committedDate": "2020-10-22T06:52:57Z", "type": "commit"}, {"oid": "23fe1cffa5c3dc0063466e679434569115535b8a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/23fe1cffa5c3dc0063466e679434569115535b8a", "message": "add missing sync client tests", "committedDate": "2020-10-22T17:02:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNTA4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510405087", "bodyText": "sorry if I missed it elsewhere, but we said that until the service correctly sends a non-null value in valueSelectionMark, we would return value.text in the meantime. Does this code do that?", "author": "kristapratico", "createdAt": "2020-10-22T19:29:03Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldValue.java", "diffHunk": "@@ -70,6 +72,9 @@ public FieldValue(final Object value, final FieldValueType valueType) {\n             case MAP:\n                 formFieldMap = (Map<String, FormField>) value;\n                 break;\n+            case SELECTION_MARK_STATE:\n+                selectionMarkState = (SelectionMarkState) value;", "originalCommit": "23fe1cffa5c3dc0063466e679434569115535b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjkwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510406904", "bodyText": "You mean set the value i.e SELECTED / UNSELECTED to value.text?", "author": "samvaity", "createdAt": "2020-10-22T19:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNTA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwOTIxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510409210", "bodyText": "I might have commented in the wrong place, but since for a FormField, valueSelectionMark is returning null, we can in the meantime return the text value for a FormField.value. In python, this would be the string \"selected\" or \"unselected\" but maybe this would be an enum in Java", "author": "kristapratico", "createdAt": "2020-10-22T19:36:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNTA4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzMTIyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510431224", "bodyText": "Yes. for consistency, i would use the same temp solution that python and .net does.", "author": "mssfang", "createdAt": "2020-10-22T20:17:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNTA4Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5OTIxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510399213", "bodyText": "put this as a service bug", "author": "samvaity", "createdAt": "2020-10-22T19:17:46Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -497,4 +537,32 @@ private static FieldBoundingBox toBoundingBox(List<Float> serviceBoundingBox) {\n         }\n         return new FieldBoundingBox(pointList);\n     }\n+\n+    /**\n+     * Helper method to convert the service level selection marks state to SDK level model.\n+     *\n+     * @param selectionMarkState The selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static com.azure.ai.formrecognizer.models.SelectionMarkState toSelectionMarkState(\n+        Object selectionMarkState) {\n+        if (selectionMarkState instanceof FieldValueSelectionMark) {\n+            if (FieldValueSelectionMark.SELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n+            } else if (FieldValueSelectionMark.UNSELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n+            }\n+        } else if (selectionMarkState instanceof SelectionMarkState) {\n+            if (SelectionMarkState.SELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n+            } else if (SelectionMarkState.UNSELECTED.equals(selectionMarkState)) {\n+                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n+            }\n+        }\n+        return null;\n+        // TODO: (shawn) currently, the fieldValue's valueSelectionMark is null which is incorrect.", "originalCommit": "23fe1cffa5c3dc0063466e679434569115535b8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bf5182f22a0991be24db6c138695a8f0a365230", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex fb647c394c3..28bdf32eef8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -537,32 +561,4 @@ final class Transforms {\n         }\n         return new FieldBoundingBox(pointList);\n     }\n-\n-    /**\n-     * Helper method to convert the service level selection marks state to SDK level model.\n-     *\n-     * @param selectionMarkState The selection mark state, i.e., SELECTED and UNSELECTED.\n-     *\n-     * @return The selection mark state in the SDK level model.\n-     */\n-    private static com.azure.ai.formrecognizer.models.SelectionMarkState toSelectionMarkState(\n-        Object selectionMarkState) {\n-        if (selectionMarkState instanceof FieldValueSelectionMark) {\n-            if (FieldValueSelectionMark.SELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n-            } else if (FieldValueSelectionMark.UNSELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n-            }\n-        } else if (selectionMarkState instanceof SelectionMarkState) {\n-            if (SelectionMarkState.SELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n-            } else if (SelectionMarkState.UNSELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n-            }\n-        }\n-        return null;\n-        // TODO: (shawn) currently, the fieldValue's valueSelectionMark is null which is incorrect.\n-//        throw LOGGER.logThrowableAsError(new RuntimeException(\n-//                String.format(\"%s, unsupported selection mark state.\", selectionMarkState)));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNTgwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510405800", "bodyText": "Lets split this method.", "author": "samvaity", "createdAt": "2020-10-22T19:30:14Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -497,4 +537,32 @@ private static FieldBoundingBox toBoundingBox(List<Float> serviceBoundingBox) {\n         }\n         return new FieldBoundingBox(pointList);\n     }\n+\n+    /**\n+     * Helper method to convert the service level selection marks state to SDK level model.\n+     *\n+     * @param selectionMarkState The selection mark state, i.e., SELECTED and UNSELECTED.\n+     *\n+     * @return The selection mark state in the SDK level model.\n+     */\n+    private static com.azure.ai.formrecognizer.models.SelectionMarkState toSelectionMarkState(", "originalCommit": "23fe1cffa5c3dc0063466e679434569115535b8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bf5182f22a0991be24db6c138695a8f0a365230", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\nindex fb647c394c3..28bdf32eef8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java\n\n@@ -537,32 +561,4 @@ final class Transforms {\n         }\n         return new FieldBoundingBox(pointList);\n     }\n-\n-    /**\n-     * Helper method to convert the service level selection marks state to SDK level model.\n-     *\n-     * @param selectionMarkState The selection mark state, i.e., SELECTED and UNSELECTED.\n-     *\n-     * @return The selection mark state in the SDK level model.\n-     */\n-    private static com.azure.ai.formrecognizer.models.SelectionMarkState toSelectionMarkState(\n-        Object selectionMarkState) {\n-        if (selectionMarkState instanceof FieldValueSelectionMark) {\n-            if (FieldValueSelectionMark.SELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n-            } else if (FieldValueSelectionMark.UNSELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n-            }\n-        } else if (selectionMarkState instanceof SelectionMarkState) {\n-            if (SelectionMarkState.SELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.SELECTED;\n-            } else if (SelectionMarkState.UNSELECTED.equals(selectionMarkState)) {\n-                return com.azure.ai.formrecognizer.models.SelectionMarkState.UNSELECTED;\n-            }\n-        }\n-        return null;\n-        // TODO: (shawn) currently, the fieldValue's valueSelectionMark is null which is incorrect.\n-//        throw LOGGER.logThrowableAsError(new RuntimeException(\n-//                String.format(\"%s, unsupported selection mark state.\", selectionMarkState)));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjAyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510406028", "bodyText": "why not showcase selection marks in this sample as well?", "author": "kristapratico", "createdAt": "2020-10-22T19:30:36Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxes.java", "diffHunk": "@@ -70,8 +70,8 @@ public static void main(String[] args) {\n                             System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n                             // FormElements only exists if you set includeFieldElements to true in your\n                             // call to beginRecognizeCustomFormsFromUrl\n-                            // It is also a list of FormWords and FormLines, but in this example, we only deal with\n-                            // FormWords\n+                            // It is also a list of FormWords, FormLines and FormSelectionMarks, but in this example,\n+                            // we only deal with FormWords.", "originalCommit": "23fe1cffa5c3dc0063466e679434569115535b8a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwODIyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510408225", "bodyText": "I see, you created a new sample for that", "author": "kristapratico", "createdAt": "2020-10-22T19:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjAyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzNjIwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16638#discussion_r510436205", "bodyText": "Yeah. A sample, RecognizeCustomFormsAsyncWithSelectionMarks", "author": "mssfang", "createdAt": "2020-10-22T20:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQwNjAyOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "6bf5182f22a0991be24db6c138695a8f0a365230", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6bf5182f22a0991be24db6c138695a8f0a365230", "message": "remove the selection mark transfor helper method", "committedDate": "2020-10-22T20:19:46Z", "type": "commit"}, {"oid": "4c169545ebcaea28191f3ff2d2629492dcbc1347", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4c169545ebcaea28191f3ff2d2629492dcbc1347", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into FR-SelectionMark", "committedDate": "2020-10-22T20:21:30Z", "type": "commit"}, {"oid": "318cb9ec1e5bf151433b31576e41e1e286bc38e6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/318cb9ec1e5bf151433b31576e41e1e286bc38e6", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into FR-SelectionMark", "committedDate": "2020-10-23T17:53:12Z", "type": "commit"}, {"oid": "402baf98988524992438d90afbf53fb3fa14763b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/402baf98988524992438d90afbf53fb3fa14763b", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into FR-SelectionMark", "committedDate": "2020-10-23T17:59:06Z", "type": "commit"}]}