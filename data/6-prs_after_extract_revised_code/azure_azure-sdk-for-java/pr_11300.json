{"pr_number": 11300, "pr_title": "Add multi tenant end-to-end tests", "pr_createdAt": "2020-05-19T05:44:47Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11300", "timeline": [{"oid": "ae80fcf3fd5e586212919ae53faec75e07bbe34d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae80fcf3fd5e586212919ae53faec75e07bbe34d", "message": "Add two simple multi tenant samples", "committedDate": "2020-05-06T22:23:30Z", "type": "commit"}, {"oid": "39bded1e251a8e38dff25eeeac5cf60d2a121be7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/39bded1e251a8e38dff25eeeac5cf60d2a121be7", "message": "Add multi tenant end-to-end tests", "committedDate": "2020-05-19T05:43:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MjIzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11300#discussion_r461892232", "bodyText": "so, your instructions cover to disable 2FA for the username ?", "author": "g2vinay", "createdAt": "2020-07-28T21:32:09Z", "path": "sdk/e2e/src/main/java/com/azure/endtoend/identity/MultiTenantTest.java", "diffHunk": "@@ -0,0 +1,164 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.endtoend.identity;\n+\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.ClientSecretCredential;\n+import com.azure.identity.ClientSecretCredentialBuilder;\n+import com.azure.identity.UsernamePasswordCredential;\n+import com.azure.identity.UsernamePasswordCredentialBuilder;\n+import com.microsoft.azure.AzureEnvironment;\n+import com.microsoft.azure.credentials.AzureTokenCredentials;\n+import com.microsoft.azure.management.graphrbac.ActiveDirectoryUser;\n+import com.microsoft.azure.management.graphrbac.implementation.GraphRbacManager;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+\n+/**\n+ * Runs Identity tests across multiple tests.\n+ */\n+class MultiTenantTest {\n+    private static final String AZURE_MULTI_TENANT_TEST_MODE = \"AZURE_MULTI_TENANT_TEST_MODE\";\n+    private static final String AZURE_USER_NAME = \"AZURE_USER_NAME\";\n+    private static final String AZURE_USER_PASSWORD = \"AZURE_USER_PASSWORD\";\n+    private static final String AZURE_CLIENT_ID = \"AZURE_CLIENT_ID\";\n+    private static final String AZURE_CLIENT_SECRET = \"AZURE_CLIENT_SECRET\";\n+    private static final String AZURE_TENANT_ID = \"AZURE_TENANT_ID\";\n+    private static final Configuration CONFIGURATION = Configuration.getGlobalConfiguration().clone();\n+    private final ClientLogger logger = new ClientLogger(MultiTenantTest.class);\n+\n+    /**\n+     * Runs the multi tenant identity tests\n+     * @throws IllegalStateException if AZURE_MULTI_TENANT_TEST_MODE is not set to \"user\" or \"sp\"\n+     */\n+    void run() throws IllegalStateException {\n+        if (CoreUtils.isNullOrEmpty(CONFIGURATION.get(AZURE_MULTI_TENANT_TEST_MODE))) {\n+            throw logger.logExceptionAsError(new IllegalStateException(\"Test mode is not set. Set environment \"\n+                                                + \"variable AZURE_MULTI_TENANT_TEST_MODE to user or sp\"));\n+        }\n+\n+        String mode = CONFIGURATION.get(AZURE_MULTI_TENANT_TEST_MODE).toLowerCase(Locale.ENGLISH);\n+        switch (mode) {\n+            case \"user\":\n+                testUserPasswordCanAccessGraph();\n+                break;\n+            case \"sp\":\n+                testServicePrincipalCanAccessGraph();\n+                break;\n+            default:\n+                throw logger.logExceptionAsError(\n+                    new IllegalStateException(\"Invalid Test mode is configured AZURE_MULTI_TENANT_TEST_MODE. \"\n+                                                    + \"Possible values are user or sp.\"));\n+        }\n+    }\n+\n+    private void testUserPasswordCanAccessGraph() {\n+        assertConfigPresence(AZURE_CLIENT_ID,\n+            \"testUserPasswordCanAccessGraph - AZURE_CLIENT_ID not configured in the environment.\");\n+        assertConfigPresence(AZURE_TENANT_ID,\n+            \"testUserPasswordCanAccessGraph - AZURE_TENANT_ID not configured in the environment.\");\n+        assertConfigPresence(AZURE_USER_NAME,\n+            \"testUserPasswordCanAccessGraph - AZURE_USER_NAME not configured in the environment.\");\n+        assertConfigPresence(AZURE_USER_PASSWORD,\n+            \"testUserPasswordCanAccessGraph - AZURE_USER_PASSWORD not configured in the environment.\");\n+        String clientId = CONFIGURATION.get(AZURE_CLIENT_ID);\n+        String tenantId = CONFIGURATION.get(AZURE_TENANT_ID);\n+        String username = CONFIGURATION.get(AZURE_USER_NAME);\n+        String password = CONFIGURATION.get(AZURE_USER_PASSWORD);\n+\n+        UsernamePasswordCredential credential = new UsernamePasswordCredentialBuilder()\n+            .clientId(clientId)", "originalCommit": "39bded1e251a8e38dff25eeeac5cf60d2a121be7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MzM4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11300#discussion_r461893383", "bodyText": "This has to be done in a separate tenant - cannot be done from the Microsoft corporate tenant. By default 2FA is turned off in any new tenant.", "author": "jianghaolu", "createdAt": "2020-07-28T21:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5MjIzMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "435e649bc985fbb492c158276a56b9b151e2b64c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/435e649bc985fbb492c158276a56b9b151e2b64c", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java into mtsample", "committedDate": "2020-07-28T21:41:21Z", "type": "commit"}]}