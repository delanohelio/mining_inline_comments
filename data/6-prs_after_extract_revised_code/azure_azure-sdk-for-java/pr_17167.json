{"pr_number": 17167, "pr_title": "Support invoices recognition API for Form recognizer", "pr_createdAt": "2020-11-04T08:44:17Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17167", "timeline": [{"oid": "66e22c5335d51b7fb01739bfe50a831dfd7f4c0c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/66e22c5335d51b7fb01739bfe50a831dfd7f4c0c", "message": "invoice feature", "committedDate": "2020-11-04T08:47:17Z", "type": "commit"}, {"oid": "66e22c5335d51b7fb01739bfe50a831dfd7f4c0c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/66e22c5335d51b7fb01739bfe50a831dfd7f4c0c", "message": "invoice feature", "committedDate": "2020-11-04T08:47:17Z", "type": "forcePushed"}, {"oid": "275a1023f14672736a844fb00812df92408ea2be", "url": "https://github.com/Azure/azure-sdk-for-java/commit/275a1023f14672736a844fb00812df92408ea2be", "message": "add missed recordings", "committedDate": "2020-11-04T09:00:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzEwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517537103", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param invoiceUrl The URL of the receipt to analyze.\n          \n          \n            \n                 * @param invoiceUrl The URL of the invoice to analyze.", "author": "kristapratico", "createdAt": "2020-11-04T18:10:36Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -846,6 +847,183 @@\n         return Mono.just(new PollResponse<>(status, operationResultPollResponse.getValue()));\n     }\n \n+    /**\n+     * Recognizes invoice data using optical character recognition (OCR) and a prebuilt invoice trained\n+     * model.\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     * See <a href=\"https://aka.ms/formrecognizer/invoicefields\">here</a> for fields found on a invoice.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string}\n+     *\n+     * @param invoiceUrl The URL of the receipt to analyze.", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\nindex 4af35647454..c15d74bbc9b 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n\n@@ -857,13 +857,13 @@ public final class FormRecognizerAsyncClient {\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string}\n      *\n-     * @param invoiceUrl The URL of the receipt to analyze.\n+     * @param invoiceUrl The URL of the invoice to analyze.\n      *\n-     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * @return A {@link PollerFlux} that polls the recognize invoice operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n      * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n      * an {@link OperationStatus#FAILED}.\n-     * @throws NullPointerException If {@code receiptUrl} is null.\n+     * @throws NullPointerException If {@code invoiceUrl} is null.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<FormRecognizerOperationResult, List<RecognizedForm>>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzIxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517537217", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n          \n          \n            \n                 * @return A {@link PollerFlux} that polls the recognize invoice operation until it has completed, has failed,", "author": "kristapratico", "createdAt": "2020-11-04T18:10:47Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -846,6 +847,183 @@\n         return Mono.just(new PollResponse<>(status, operationResultPollResponse.getValue()));\n     }\n \n+    /**\n+     * Recognizes invoice data using optical character recognition (OCR) and a prebuilt invoice trained\n+     * model.\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support.</p>\n+     * See <a href=\"https://aka.ms/formrecognizer/invoicefields\">here</a> for fields found on a invoice.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string}\n+     *\n+     * @param invoiceUrl The URL of the receipt to analyze.\n+     *\n+     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzQ3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517537478", "bodyText": "and a few other places as well", "author": "kristapratico", "createdAt": "2020-11-04T18:11:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzNzIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\nindex 4af35647454..c15d74bbc9b 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n\n@@ -857,13 +857,13 @@ public final class FormRecognizerAsyncClient {\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string}\n      *\n-     * @param invoiceUrl The URL of the receipt to analyze.\n+     * @param invoiceUrl The URL of the invoice to analyze.\n      *\n-     * @return A {@link PollerFlux} that polls the recognize receipt operation until it has completed, has failed,\n+     * @return A {@link PollerFlux} that polls the recognize invoice operation until it has completed, has failed,\n      * or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n      * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n      * an {@link OperationStatus#FAILED}.\n-     * @throws NullPointerException If {@code receiptUrl} is null.\n+     * @throws NullPointerException If {@code invoiceUrl} is null.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<FormRecognizerOperationResult, List<RecognizedForm>>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NjAxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517596017", "bodyText": "param is receiptUrl here", "author": "kristapratico", "createdAt": "2020-11-04T19:57:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -469,4 +470,110 @@\n         return client.beginRecognizeBusinessCards(toFluxByteBuffer(businessCard), length,\n             recognizeBusinessCardsOptions, context).getSyncPoller();\n     }\n+\n+    /**\n+     * Recognizes receipt data from document using optical character recognition (OCR) and a prebuilt receipt trained\n+     * model.\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support</p>\n+     * See <a href=\"https://aka.ms/formrecognizer/receiptfields\">here</a> for fields found on a receipt.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeReceiptsFromUrl#string}\n+     *\n+     * @param receiptUrl The URL of the receipt to analyze.\n+     *\n+     * @return A {@link SyncPoller} to poll the progress of the recognize receipt operation until it has completed,\n+     * has failed, or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n+     * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code receiptUrl} is null.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public SyncPoller<FormRecognizerOperationResult, List<RecognizedForm>>\n+        beginRecognizeInvoicesFromUrl(String receiptUrl) {", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\nindex 1f9d5ce2b1d..e274b39a348 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n\n@@ -481,18 +481,18 @@ public final class FormRecognizerClient {\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeReceiptsFromUrl#string}\n      *\n-     * @param receiptUrl The URL of the receipt to analyze.\n+     * @param invoiceUrl The URL of the receipt to analyze.\n      *\n      * @return A {@link SyncPoller} to poll the progress of the recognize receipt operation until it has completed,\n      * has failed, or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n      * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n      * an {@link OperationStatus#FAILED}.\n-     * @throws NullPointerException If {@code receiptUrl} is null.\n+     * @throws NullPointerException If {@code invoiceUrl} is null.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<FormRecognizerOperationResult, List<RecognizedForm>>\n-        beginRecognizeInvoicesFromUrl(String receiptUrl) {\n-        return beginRecognizeInvoicesFromUrl(receiptUrl, null, Context.NONE);\n+        beginRecognizeInvoicesFromUrl(String invoiceUrl) {\n+        return beginRecognizeInvoicesFromUrl(invoiceUrl, null, Context.NONE);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517596897", "bodyText": "Paul said that invoices would only support en-US for preview.2", "author": "kristapratico", "createdAt": "2020-11-04T19:58:57Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeInvoicesOptions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer.models;\n+\n+import com.azure.core.annotation.Fluent;\n+\n+import java.time.Duration;\n+\n+import static com.azure.ai.formrecognizer.implementation.Utility.DEFAULT_POLL_INTERVAL;\n+\n+/**\n+ * Options that may be passed when using recognize invoice APIs on Form Recognizer client.\n+ */\n+@Fluent\n+public final class RecognizeInvoicesOptions {\n+    private FormContentType contentType;\n+    private boolean includeFieldElements;\n+    private String locale;\n+    private Duration pollInterval = DEFAULT_POLL_INTERVAL;\n+\n+    /**\n+     * Get the type of the form. Supported Media types including .pdf, .jpg, .png or .tiff type file stream.\n+     *\n+     * @return the {@code contentType} value.\n+     */\n+    public FormContentType getContentType() {\n+        return contentType;\n+    }\n+\n+    /**\n+     * Get the boolean which specifies if to include form element references in the result.\n+     *\n+     * @return the {@code includeFieldElements} value.\n+     */\n+    public boolean isFieldElementsIncluded() {\n+        return includeFieldElements;\n+    }\n+\n+    /**\n+     * Get the duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @return the {@code pollInterval} value.\n+     */\n+    public Duration getPollInterval() {\n+        return pollInterval;\n+    }\n+\n+    /**\n+     * Set the type of the form. Supported Media types including .pdf, .jpg, .png or .tiff type file stream.\n+     *\n+     * @param contentType the provided form content type.\n+     *\n+     * @return the updated {@code RecognizeInvoicesOptions} value.\n+     */\n+    public RecognizeInvoicesOptions setContentType(final FormContentType contentType) {\n+        this.contentType = contentType;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the boolean which specifies if to include form element references in the result.\n+     *\n+     * @param includeFieldElements the boolean to specify if to include form element references in the result.\n+     *\n+     * @return the updated {@code RecognizeInvoicesOptions} value.\n+     */\n+    public RecognizeInvoicesOptions setFieldElementsIncluded(final boolean includeFieldElements) {\n+        this.includeFieldElements = includeFieldElements;\n+        return this;\n+    }\n+\n+    /**\n+     * Set the duration between each poll for the operation status. If none is specified, a default of\n+     * 5 seconds is used.\n+     *\n+     * @param pollInterval the duration to specify between each poll for the operation status.\n+     *\n+     * @return the updated {@code RecognizeInvoicesOptions} value.\n+     */\n+    public RecognizeInvoicesOptions setPollInterval(final Duration pollInterval) {\n+        this.pollInterval = pollInterval == null ? DEFAULT_POLL_INTERVAL : pollInterval;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the locale information for the invoice.\n+     * Supported locales include: en-AU, en-CA, en-GB, en-IN, en-US.", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwNTM1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517605352", "bodyText": "ohh I missed this. Where did he comment that? then the swagger needs to be updated for invoice so it only allows that value, no?", "author": "maririos", "createdAt": "2020-11-04T20:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNDMyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517614323", "bodyText": "Oh I see, then would we not be using the Locale enum for receipts/bc/invoices in that case since they differ in their support?\ncc: @maririos", "author": "samvaity", "createdAt": "2020-11-04T20:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNzQwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517617406", "bodyText": "First comment on this Teams chat. Personally I see us handling this like we do with the FormContentType / lack of image/bmp support for analyze custom form. Use Locale, but document the allowed values. Let service handle failure. Once other locales are supported, this will only be a docs update.", "author": "kristapratico", "createdAt": "2020-11-04T20:38:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyMzkwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517623903", "bodyText": "Hmm I'm not sure about this. I think it will be better to keep this one separated and have it support only en-US so that it doesn't confuse our customers. This is one of those cases that locales will be different per endpoint so better to have enums per endpoint than generic ones.", "author": "maririos", "createdAt": "2020-11-04T20:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNzc4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517627783", "bodyText": "Curious why would treat this one different than FormContentType? Also feel free to ignore me, this will be a non-issue in python since we will use strings only and I shouldn't sway the decision for other languages", "author": "kristapratico", "createdAt": "2020-11-04T20:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MTk5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518281990", "bodyText": "(this conversation is not a blocker for the current approach of the PR, so feel free to merge while we keep discussing this).\nSo in the arch board meeting, at least for .NET, the decision was to have independent extensible enums per endpoint for locale and language. In this case, in .NET I am going to create Locale per endpoint. I am also advocating for changing the swagger to have each locale enum defined in each endpoint.\nNote that in the invoice case, if you send something different than en-US the service will fail. I believe that for FormContentType that is not the case.", "author": "maririos", "createdAt": "2020-11-05T18:46:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MzU3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518293576", "bodyText": "I believe that for FormContentType that is not the case.\n\nI actually don't know what the service does here, because we raise an error in the generated code about image/bmp not being supported. Last I tried in canary, it worked with bmp.... so I guess they will be removing that functionality before deploying to prod.", "author": "kristapratico", "createdAt": "2020-11-05T19:06:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5Njg5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeInvoicesOptions.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeInvoicesOptions.java\nindex 276993823bf..3cf2c7bd244 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeInvoicesOptions.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/RecognizeInvoicesOptions.java\n\n@@ -86,7 +86,7 @@ public final class RecognizeInvoicesOptions {\n \n     /**\n      * Get the locale information for the invoice.\n-     * Supported locales include: en-AU, en-CA, en-GB, en-IN, en-US.\n+     * Supported locales include: en-US.\n      *\n      * @return the localeInfo value.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5ODU0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517598541", "bodyText": "this shows business card", "author": "kristapratico", "createdAt": "2020-11-04T20:02:05Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientJavaDocCodeSnippets.java", "diffHunk": "@@ -817,4 +818,154 @@ public void beginRecognizeBusinessCardsWithOptions() throws IOException {\n             });\n         // END: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeBusinessCards#Flux-long-RecognizeBusinessCardsOptions\n     }\n+\n+    /**\n+     * Code snippet for {@link FormRecognizerAsyncClient#beginRecognizeInvoicesFromUrl(String)}\n+     */\n+    public void beginRecognizeInvoicesFromUrl() {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string\n+        String invoiceUrl = \"invoice_url\";\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerAsyncClient.beginRecognizeInvoicesFromUrl(invoiceUrl)\n+            .flatMap(AsyncPollResponse::getFinalResult)\n+            .subscribe(recognizedInvoices -> {\n+                for (int i = 0; i < recognizedInvoices.size(); i++) {\n+                    RecognizedForm recognizedForm = recognizedInvoices.get(i);\n+                    Map<String, FormField> recognizedFields = recognizedForm.getFields();\n+                    FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n+                    if (customAddrFormField != null) {\n+                        if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n+                            System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n+                        }\n+                    }\n+                    FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n+                    if (invoiceDateFormField != null) {\n+                        if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n+                            LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n+                            System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n+                                invoiceDate, invoiceDateFormField.getConfidence());\n+                        }\n+                    }\n+                }\n+            });\n+        // END: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string\n+    }\n+\n+    /**\n+     * Code snippet for\n+     * {@link FormRecognizerAsyncClient#beginRecognizeInvoicesFromUrl(String, RecognizeInvoicesOptions)}\n+     */\n+    public void beginRecognizeInvoicesFromUrlWithOptions() {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string-RecognizeInvoicesOptions\n+        String invoiceUrl = \"invoice_url\";\n+        boolean includeFieldElements = true;\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerAsyncClient.beginRecognizeInvoicesFromUrl(invoiceUrl,\n+            new RecognizeInvoicesOptions()\n+                .setFieldElementsIncluded(includeFieldElements)\n+                .setPollInterval(Duration.ofSeconds(5)))\n+            .flatMap(AsyncPollResponse::getFinalResult)\n+            .subscribe(recognizedInvoices -> {\n+                for (int i = 0; i < recognizedInvoices.size(); i++) {\n+                    RecognizedForm recognizedForm = recognizedInvoices.get(i);\n+                    Map<String, FormField> recognizedFields = recognizedForm.getFields();\n+                    FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n+                    if (customAddrFormField != null) {\n+                        if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n+                            System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n+                        }\n+                    }\n+                    FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n+                    if (invoiceDateFormField != null) {\n+                        if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n+                            LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n+                            System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n+                                invoiceDate, invoiceDateFormField.getConfidence());\n+                        }\n+                    }\n+                }\n+            });\n+        // END: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoicesFromUrl#string-RecognizeInvoicesOptions\n+    }\n+\n+    /**\n+     * Code snippet for {@link FormRecognizerAsyncClient#beginRecognizeInvoices(Flux, long)}\n+     *\n+     * @throws IOException Exception thrown when there is an error in reading all the bytes from the File.\n+     */\n+    public void beginRecognizeInvoices() throws IOException {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeInvoices#Flux-long\n+        File invoice = new File(\"local/file_path/invoice.jpg\");\n+        Flux<ByteBuffer> buffer =\n+            toFluxByteBuffer(new ByteArrayInputStream(Files.readAllBytes(invoice.toPath())));\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerAsyncClient.beginRecognizeBusinessCards(buffer, invoice.length())", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientJavaDocCodeSnippets.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientJavaDocCodeSnippets.java\nindex 0730cf55e5b..4178ad416fe 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientJavaDocCodeSnippets.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClientJavaDocCodeSnippets.java\n\n@@ -899,7 +899,7 @@ public class FormRecognizerAsyncClientJavaDocCodeSnippets {\n         Flux<ByteBuffer> buffer =\n             toFluxByteBuffer(new ByteArrayInputStream(Files.readAllBytes(invoice.toPath())));\n         // if training polling operation completed, retrieve the final result.\n-        formRecognizerAsyncClient.beginRecognizeBusinessCards(buffer, invoice.length())\n+        formRecognizerAsyncClient.beginRecognizeInvoices(buffer, invoice.length())\n             .flatMap(AsyncPollResponse::getFinalResult)\n             .subscribe(recognizedInvoices -> {\n                 for (int i = 0; i < recognizedInvoices.size(); i++) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYwMDM4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r517600384", "bodyText": "business cards here", "author": "kristapratico", "createdAt": "2020-11-04T20:05:35Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerClientJavaDocCodeSnippets.java", "diffHunk": "@@ -767,4 +769,145 @@ public void beginRecognizeBusinessCardsWithOptions() throws IOException {\n         }\n         // END: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeBusinessCards#InputStream-long-RecognizeBusinessCardsOptions-Context\n     }\n+\n+    /**\n+     * Code snippet for {@link FormRecognizerAsyncClient#beginRecognizeInvoicesFromUrl(String)}\n+     */\n+    public void beginRecognizeInvoicesFromUrl() {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string\n+        String invoiceUrl = \"invoice_url\";\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerClient.beginRecognizeInvoicesFromUrl(invoiceUrl)\n+            .getFinalResult()\n+            .stream()\n+            .map(RecognizedForm::getFields)\n+            .forEach(recognizedFields -> {\n+                FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n+                if (customAddrFormField != null) {\n+                    if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n+                        System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n+                    }\n+                }\n+                FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n+                if (invoiceDateFormField != null) {\n+                    if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n+                        LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n+                        System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n+                            invoiceDate, invoiceDateFormField.getConfidence());\n+                    }\n+                }\n+            });\n+        // END: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string\n+    }\n+\n+    /**\n+     * Code snippet for\n+     * {@link FormRecognizerAsyncClient#beginRecognizeInvoicesFromUrl(String, RecognizeInvoicesOptions)}\n+     */\n+    public void beginRecognizeInvoicesFromUrlWithOptions() {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string-RecognizeInvoicesOptions-Context\n+        String invoiceUrl = \"invoice_url\";\n+        boolean includeFieldElements = true;\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerClient.beginRecognizeInvoicesFromUrl(invoiceUrl,\n+            new RecognizeInvoicesOptions()\n+                .setFieldElementsIncluded(includeFieldElements)\n+                .setPollInterval(Duration.ofSeconds(5)), Context.NONE)\n+            .getFinalResult()\n+            .stream()\n+            .map(RecognizedForm::getFields)\n+            .forEach(recognizedFields -> {\n+                FormField customAddrFormField = recognizedFields.get(\"CustomerAddress\");\n+                if (customAddrFormField != null) {\n+                    if (FieldValueType.STRING == customAddrFormField.getValue().getValueType()) {\n+                        System.out.printf(\"Customer Address: %s%n\", customAddrFormField.getValue().asString());\n+                    }\n+                }\n+                FormField invoiceDateFormField = recognizedFields.get(\"InvoiceDate\");\n+                if (invoiceDateFormField != null) {\n+                    if (FieldValueType.DATE == invoiceDateFormField.getValue().getValueType()) {\n+                        LocalDate invoiceDate = invoiceDateFormField.getValue().asDate();\n+                        System.out.printf(\"Invoice Date: %s, confidence: %.2f%n\",\n+                            invoiceDate, invoiceDateFormField.getConfidence());\n+                    }\n+                }\n+            });\n+        // END: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string-RecognizeInvoicesOptions-Context\n+    }\n+\n+    /**\n+     * Code snippet for {@link FormRecognizerAsyncClient#beginRecognizeInvoices(Flux, long)}\n+     *\n+     * @throws IOException Exception thrown when there is an error in reading all the bytes from the File.\n+     */\n+    public void beginRecognizeInvoices() throws IOException {\n+        // BEGIN: com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoices#InputStream-long\n+        File invoice = new File(\"local/file_path/invoice.jpg\");\n+        ByteArrayInputStream inputStream = new ByteArrayInputStream(Files.readAllBytes(invoice.toPath()));\n+        // if training polling operation completed, retrieve the final result.\n+        formRecognizerClient.beginRecognizeBusinessCards(inputStream, invoice.length())", "originalCommit": "275a1023f14672736a844fb00812df92408ea2be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerClientJavaDocCodeSnippets.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerClientJavaDocCodeSnippets.java\nindex 7db83b5c8da..b2e63033fde 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerClientJavaDocCodeSnippets.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/FormRecognizerClientJavaDocCodeSnippets.java\n\n@@ -845,7 +845,7 @@ public class FormRecognizerClientJavaDocCodeSnippets {\n         File invoice = new File(\"local/file_path/invoice.jpg\");\n         ByteArrayInputStream inputStream = new ByteArrayInputStream(Files.readAllBytes(invoice.toPath()));\n         // if training polling operation completed, retrieve the final result.\n-        formRecognizerClient.beginRecognizeBusinessCards(inputStream, invoice.length())\n+        formRecognizerClient.beginRecognizeInvoices(inputStream, invoice.length())\n             .getFinalResult()\n             .stream()\n             .map(RecognizedForm::getFields)\n"}}, {"oid": "547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/547a1d1d1346cb0db6af74bbede1c22fa9a719d2", "message": "review comments", "committedDate": "2020-11-04T21:50:59Z", "type": "commit"}, {"oid": "a14f6bedcf1cf5210b8fa7c74d079ae1eaa68e62", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a14f6bedcf1cf5210b8fa7c74d079ae1eaa68e62", "message": "update multipage recordings and file", "committedDate": "2020-11-05T00:39:26Z", "type": "commit"}, {"oid": "b17ab02b0af0c8e08cbf7bc694e8cd643c8be204", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b17ab02b0af0c8e08cbf7bc694e8cd643c8be204", "message": "add invoice samples", "committedDate": "2020-11-05T00:58:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NTMwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518275308", "bodyText": "just curious, what drove this change?", "author": "maririos", "createdAt": "2020-11-05T18:35:08Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -215,22 +217,26 @@ private Transforms() {\n      * @return The list of per page {@code FormTable}.\n      */\n     static List<FormTable> getPageTables(PageResult pageResultItem, List<ReadResult> readResults, int pageNumber) {\n-        return pageResultItem.getTables().stream()\n-            .map(dataTable ->\n-                new FormTable(dataTable.getRows(), dataTable.getColumns(),\n-                    dataTable.getCells()\n-                        .stream()\n-                        .map(dataTableCell -> new FormTableCell(\n-                            dataTableCell.getRowIndex(), dataTableCell.getColumnIndex(),\n-                            dataTableCell.getRowSpan() == null ? DEFAULT_TABLE_SPAN : dataTableCell.getRowSpan(),\n-                            dataTableCell.getColumnSpan() == null ? DEFAULT_TABLE_SPAN : dataTableCell.getColumnSpan(),\n-                            dataTableCell.getText(), toBoundingBox(dataTableCell.getBoundingBox()),\n-                            dataTableCell.getConfidence(),\n-                            dataTableCell.isHeader() == null ? false : dataTableCell.isHeader(),\n-                            dataTableCell.isFooter() == null ? false : dataTableCell.isFooter(),\n-                            pageNumber, setReferenceElements(dataTableCell.getElements(), readResults)))\n-                        .collect(Collectors.toList()), pageNumber))\n-            .collect(Collectors.toList());\n+        if (pageResultItem.getTables() == null) {", "originalCommit": "b17ab02b0af0c8e08cbf7bc694e8cd643c8be204", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NzQyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518277428", "bodyText": "Invoice recognition is returning pageResults with null tables. So needed to add this to avoid NPE.", "author": "samvaity", "createdAt": "2020-11-05T18:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NTMwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3ODY4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518278686", "bodyText": "ohh yes that is right. Thank you :)", "author": "maririos", "createdAt": "2020-11-05T18:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NTMwOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3NjA4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518276083", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * See fields found on a receipt here:\n          \n          \n            \n             * See fields found on a invoice here:", "author": "maririos", "createdAt": "2020-11-05T18:36:24Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java", "diffHunk": "@@ -0,0 +1,148 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.formrecognizer;\n+\n+import com.azure.ai.formrecognizer.models.FieldValueType;\n+import com.azure.ai.formrecognizer.models.FormField;\n+import com.azure.ai.formrecognizer.models.FormRecognizerOperationResult;\n+import com.azure.ai.formrecognizer.models.RecognizedForm;\n+import com.azure.core.credential.AzureKeyCredential;\n+import com.azure.core.util.polling.PollerFlux;\n+import reactor.core.publisher.Mono;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.time.LocalDate;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import static com.azure.ai.formrecognizer.implementation.Utility.toFluxByteBuffer;\n+\n+/**\n+ * Async sample for recognizing commonly found invoice fields from a local file input stream of an invoice document.\n+ * For a suggested approach to extracting information from a general recognized form, see StronglyTypedRecognizedForm.java.\n+ * See fields found on a receipt here:", "originalCommit": "b17ab02b0af0c8e08cbf7bc694e8cd643c8be204", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b0dc35e62aa3cbd8ad717e7175f795a8aecdc57", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java\nindex 4bbac0888fe..d59ebb1818b 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java\n\n@@ -26,7 +26,7 @@ import static com.azure.ai.formrecognizer.implementation.Utility.toFluxByteBuffe\n /**\n  * Async sample for recognizing commonly found invoice fields from a local file input stream of an invoice document.\n  * For a suggested approach to extracting information from a general recognized form, see StronglyTypedRecognizedForm.java.\n- * See fields found on a receipt here:\n+ * See fields found on a invoice here:\n  * https://aka.ms/formrecognizer/invoicefields\n  */\n public class RecognizeInvoicesAsync {\n"}}, {"oid": "2b0dc35e62aa3cbd8ad717e7175f795a8aecdc57", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2b0dc35e62aa3cbd8ad717e7175f795a8aecdc57", "message": "Update sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeInvoicesAsync.java\n\nCo-authored-by: Mariana Rios Flores <mariari@microsoft.com>", "committedDate": "2020-11-05T18:38:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MDExOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518280119", "bodyText": "this docstring uses receipt instead of invoice", "author": "kristapratico", "createdAt": "2020-11-05T18:43:23Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -469,4 +470,110 @@\n         return client.beginRecognizeBusinessCards(toFluxByteBuffer(businessCard), length,\n             recognizeBusinessCardsOptions, context).getSyncPoller();\n     }\n+\n+    /**\n+     * Recognizes receipt data from document using optical character recognition (OCR) and a prebuilt receipt trained", "originalCommit": "2b0dc35e62aa3cbd8ad717e7175f795a8aecdc57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4Nzk3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518287975", "bodyText": "\ud83d\ude45", "author": "samvaity", "createdAt": "2020-11-05T18:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MDExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c6eac240462e689a15f59173ce486a37fcc7f98", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\nindex e274b39a348..07248dd9979 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n\n@@ -472,18 +472,18 @@ public final class FormRecognizerClient {\n     }\n \n     /**\n-     * Recognizes receipt data from document using optical character recognition (OCR) and a prebuilt receipt trained\n+     * Recognizes invoice data from document using optical character recognition (OCR) and a prebuilt invoice trained\n      * model.\n      * <p>The service does not support cancellation of the long running operation and returns with an\n      * error message indicating absence of cancellation support</p>\n-     * See <a href=\"https://aka.ms/formrecognizer/receiptfields\">here</a> for fields found on a receipt.\n+     * See <a href=\"https://aka.ms/formrecognizer/invoicefields\">here</a> for fields found on an invoice.\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeReceiptsFromUrl#string}\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string}\n      *\n-     * @param invoiceUrl The URL of the receipt to analyze.\n+     * @param invoiceUrl The URL of the invoice document to analyze.\n      *\n-     * @return A {@link SyncPoller} to poll the progress of the recognize receipt operation until it has completed,\n+     * @return A {@link SyncPoller} to poll the progress of the recognize invoice operation until it has completed,\n      * has failed, or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n      * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n      * an {@link OperationStatus#FAILED}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MDMyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17167#discussion_r518280320", "bodyText": "same here", "author": "kristapratico", "createdAt": "2020-11-05T18:43:45Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -469,4 +470,110 @@\n         return client.beginRecognizeBusinessCards(toFluxByteBuffer(businessCard), length,\n             recognizeBusinessCardsOptions, context).getSyncPoller();\n     }\n+\n+    /**\n+     * Recognizes receipt data from document using optical character recognition (OCR) and a prebuilt receipt trained\n+     * model.\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support</p>\n+     * See <a href=\"https://aka.ms/formrecognizer/receiptfields\">here</a> for fields found on a receipt.\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeReceiptsFromUrl#string}\n+     *\n+     * @param invoiceUrl The URL of the receipt to analyze.\n+     *\n+     * @return A {@link SyncPoller} to poll the progress of the recognize receipt operation until it has completed,\n+     * has failed, or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n+     * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n+     * an {@link OperationStatus#FAILED}.\n+     * @throws NullPointerException If {@code invoiceUrl} is null.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public SyncPoller<FormRecognizerOperationResult, List<RecognizedForm>>\n+        beginRecognizeInvoicesFromUrl(String invoiceUrl) {\n+        return beginRecognizeInvoicesFromUrl(invoiceUrl, null, Context.NONE);\n+    }\n+\n+    /**\n+     * Recognizes invoice data from documents using optical character recognition (OCR) and a\n+     * prebuilt invoice trained model.\n+     * <p>The service does not support cancellation of the long running operation and returns with an\n+     * error message indicating absence of cancellation support</p>\n+     *\n+     * <p><strong>Code sample</strong></p>\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string-RecognizeInvoicesOptions-Context}\n+     *\n+     * @param invoiceUrl The source URL to the input receipt.", "originalCommit": "2b0dc35e62aa3cbd8ad717e7175f795a8aecdc57", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c6eac240462e689a15f59173ce486a37fcc7f98", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\nindex e274b39a348..07248dd9979 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n\n@@ -472,18 +472,18 @@ public final class FormRecognizerClient {\n     }\n \n     /**\n-     * Recognizes receipt data from document using optical character recognition (OCR) and a prebuilt receipt trained\n+     * Recognizes invoice data from document using optical character recognition (OCR) and a prebuilt invoice trained\n      * model.\n      * <p>The service does not support cancellation of the long running operation and returns with an\n      * error message indicating absence of cancellation support</p>\n-     * See <a href=\"https://aka.ms/formrecognizer/receiptfields\">here</a> for fields found on a receipt.\n+     * See <a href=\"https://aka.ms/formrecognizer/invoicefields\">here</a> for fields found on an invoice.\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeReceiptsFromUrl#string}\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerClient.beginRecognizeInvoicesFromUrl#string}\n      *\n-     * @param invoiceUrl The URL of the receipt to analyze.\n+     * @param invoiceUrl The URL of the invoice document to analyze.\n      *\n-     * @return A {@link SyncPoller} to poll the progress of the recognize receipt operation until it has completed,\n+     * @return A {@link SyncPoller} to poll the progress of the recognize invoice operation until it has completed,\n      * has failed, or has been cancelled. The completed operation returns a list of {@link RecognizedForm}.\n      * @throws FormRecognizerException If recognize operation fails and the {@link AnalyzeOperationResult} returned with\n      * an {@link OperationStatus#FAILED}.\n"}}, {"oid": "0c6eac240462e689a15f59173ce486a37fcc7f98", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0c6eac240462e689a15f59173ce486a37fcc7f98", "message": "update references for receipt with invoices", "committedDate": "2020-11-05T21:55:38Z", "type": "commit"}, {"oid": "8a94fcfec8f0cabb353d732a9e894359f55301e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8a94fcfec8f0cabb353d732a9e894359f55301e9", "message": "Merge branch 'invoice-feature-p2' of https://github.com/samvaity/azure-sdk-for-java into invoice-feature-p2", "committedDate": "2020-11-05T21:56:39Z", "type": "commit"}]}