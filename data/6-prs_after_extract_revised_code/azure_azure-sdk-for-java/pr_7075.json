{"pr_number": 7075, "pr_title": "KV-Keys code update", "pr_createdAt": "2020-01-02T17:53:13Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7075", "timeline": [{"oid": "e8f41cec6e59ce74ecc84e3932d965e0ff216b92", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e8f41cec6e59ce74ecc84e3932d965e0ff216b92", "message": "code update", "committedDate": "2020-01-02T17:49:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5MTg2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7075#discussion_r362591863", "bodyText": "Since you are passing this to the superclass constructor, why not have a superclass manage the lifecycle of this variable? CryptographyAsyncClient can have a protected method getKeyId() to get this key id.", "author": "srnagar", "createdAt": "2020-01-02T19:11:17Z", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyAsyncClient.java", "diffHunk": "@@ -27,18 +28,17 @@\n      */\n     KeyEncryptionKeyAsyncClient(String keyId, HttpPipeline pipeline, CryptographyServiceVersion version) {\n         super(keyId, pipeline, version);\n+        this.keyId = keyId;", "originalCommit": "e8f41cec6e59ce74ecc84e3932d965e0ff216b92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwNDI4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7075#discussion_r362604288", "bodyText": "This needs to be Public API only in KEK client.\nSo moved the variable management to super class as package private method.\nKept it public in KEK client.", "author": "g2vinay", "createdAt": "2020-01-02T19:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjU5MTg2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c106b4c057f4e9330d775b5f44b6bd0a476d1d3a", "chunk": "diff --git a/sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyAsyncClient.java b/sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyAsyncClient.java\nindex 2e7d80a45d0..d8f25c4d32f 100644\n--- a/sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyAsyncClient.java\n+++ b/sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/KeyEncryptionKeyAsyncClient.java\n\n@@ -28,7 +27,6 @@ public final class KeyEncryptionKeyAsyncClient extends CryptographyAsyncClient i\n      */\n     KeyEncryptionKeyAsyncClient(String keyId, HttpPipeline pipeline, CryptographyServiceVersion version) {\n         super(keyId, pipeline, version);\n-        this.keyId = keyId;\n     }\n \n     /**\n"}}, {"oid": "c106b4c057f4e9330d775b5f44b6bd0a476d1d3a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c106b4c057f4e9330d775b5f44b6bd0a476d1d3a", "message": "refactor code", "committedDate": "2020-01-02T19:43:38Z", "type": "commit"}, {"oid": "40c78ab8f9d76c22f92354d2a15ef32cc8236619", "url": "https://github.com/Azure/azure-sdk-for-java/commit/40c78ab8f9d76c22f92354d2a15ef32cc8236619", "message": "checkstyle fix", "committedDate": "2020-01-02T19:58:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMzc1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7075#discussion_r362613756", "bodyText": "Why doesn't this constructor initializeCryptoClients() while the other constructor does (line 95)?", "author": "srnagar", "createdAt": "2020-01-02T20:14:08Z", "path": "sdk/keyvault/azure-security-keyvault-keys/src/main/java/com/azure/security/keyvault/keys/cryptography/CryptographyAsyncClient.java", "diffHunk": "@@ -102,6 +104,7 @@\n      */\n     CryptographyAsyncClient(String keyId, HttpPipeline pipeline, CryptographyServiceVersion version) {\n         unpackAndValidateId(keyId);\n+        this.keyId = keyId;", "originalCommit": "40c78ab8f9d76c22f92354d2a15ef32cc8236619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyNTgzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7075#discussion_r362625835", "bodyText": "In other constructor, JWK key is passed into the constructor. Key is available to initialize crypto clients.\nWhile in this constructor only key id is available at constructor time. In this scenario the Key gets fetched from the service and crypto clients are initialized on demand when user invokes a crypto operation on the client.", "author": "g2vinay", "createdAt": "2020-01-02T20:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMzc1Ng=="}], "type": "inlineReview", "revised_code": null}]}