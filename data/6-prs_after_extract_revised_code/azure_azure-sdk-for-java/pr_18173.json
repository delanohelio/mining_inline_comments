{"pr_number": 18173, "pr_title": "Add scopes for on-demand=true client", "pr_createdAt": "2020-12-16T07:45:19Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18173", "timeline": [{"oid": "024c1baf675fafe9c77c962e07f34a28c4c1e90e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/024c1baf675fafe9c77c962e07f34a28c4c1e90e", "message": "add scopes for default client", "committedDate": "2020-12-15T10:08:10Z", "type": "commit"}, {"oid": "7df9a2b2cfd6679164d5fe1a06f7b9cba7147c6c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7df9a2b2cfd6679164d5fe1a06f7b9cba7147c6c", "message": "distinguish webapp and webapi to enable login with azure client", "committedDate": "2020-12-16T07:28:20Z", "type": "commit"}, {"oid": "dc2734c6361202809a758672f93c1f8e56b88ff1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc2734c6361202809a758672f93c1f8e56b88ff1", "message": "edit test and format code", "committedDate": "2020-12-16T07:42:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544093862", "bodyText": "Delete booleam parameter, use different class for webapp and webapi.\nAADClientRegistrationRepository\nAADWebAppClientRegistrationRepository\nAADWebApiClientRegistrationRepository", "author": "chenrujun", "createdAt": "2020-12-16T08:13:06Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "diffHunk": "@@ -40,7 +40,8 @@ public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(\n             clientRegistrationInitialization.createDefaultClient(),\n             clientRegistrationInitialization.createAuthzClients(),\n-            aadAuthenticationProperties);\n+            aadAuthenticationProperties,\n+            false);", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\nsimilarity index 84%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\nindex 3efbd01b759..3b3dc3c94fb 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\n\n@@ -27,21 +26,20 @@ import org.springframework.security.oauth2.server.resource.BearerTokenAuthentica\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class })\n @ConditionalOnClass({BearerTokenAuthenticationToken.class, OAuth2LoginAuthenticationFilter.class})\n-public class AzureActiveDirectoryResourceServerClientConfiguration {\n+public class AADWebApiConfiguration {\n \n     @Autowired\n     private AADAuthenticationProperties aadAuthenticationProperties;\n \n     @Bean\n-    @ConditionalOnMissingBean({ ClientRegistrationRepository.class, AzureClientRegistrationRepository.class })\n-    public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n+    @ConditionalOnMissingBean({ ClientRegistrationRepository.class, AADWebApiClientRegistrationRepository.class })\n+    public AADWebApiClientRegistrationRepository azureClientRegistrationRepository() {\n         ClientRegistrationInitialization clientRegistrationInitialization =\n             new ClientRegistrationInitialization(aadAuthenticationProperties);\n-        return new AzureClientRegistrationRepository(\n+        return new AADWebApiClientRegistrationRepository(\n             clientRegistrationInitialization.createDefaultClient(),\n             clientRegistrationInitialization.createAuthzClients(),\n-            aadAuthenticationProperties,\n-            false);\n+            aadAuthenticationProperties);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDE3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094179", "bodyText": "if (authz.isOnDemand()) {\n    if()...\n    if()...\n}", "author": "chenrujun", "createdAt": "2020-12-16T08:13:44Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -126,6 +127,13 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n+            scopes.add(\"openid\");\n+        }\n+        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n+            scopes.add(\"profile\");\n+        }", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nsimilarity index 70%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nindex 068e1879870..c97cb06a280 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\n\n@@ -128,11 +162,13 @@ public class AzureActiveDirectoryConfiguration {\n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n         List<String> scopes = authz.getScopes();\n-        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n-            scopes.add(\"openid\");\n-        }\n-        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n-            scopes.add(\"profile\");\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")){\n+                scopes.add(\"profile\");\n+            }\n         }\n         result.scope(authz.getScopes());\n         return result.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDQxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094412", "bodyText": "result.scope(scopes);", "author": "chenrujun", "createdAt": "2020-12-16T08:14:12Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -126,6 +127,13 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n+            scopes.add(\"openid\");\n+        }\n+        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n+            scopes.add(\"profile\");\n+        }\n         result.scope(authz.getScopes());", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nsimilarity index 70%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nindex 068e1879870..c97cb06a280 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\n\n@@ -128,11 +162,13 @@ public class AzureActiveDirectoryConfiguration {\n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n         List<String> scopes = authz.getScopes();\n-        if (authz.isOnDemand() && !scopes.contains(\"openid\")) {\n-            scopes.add(\"openid\");\n-        }\n-        if (authz.isOnDemand() && !scopes.contains(\"profile\")) {\n-            scopes.add(\"profile\");\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")){\n+                scopes.add(\"profile\");\n+            }\n         }\n         result.scope(authz.getScopes());\n         return result.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDc0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544094747", "bodyText": "Add test for both configurations.", "author": "chenrujun", "createdAt": "2020-12-16T08:14:43Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java", "diffHunk": "@@ -144,9 +144,8 @@ public void aadAwareClientRepository() {\n                 assertTrue(clientRepo.isAuthzClient(\"graph\"));\n \n                 List<ClientRegistration> clients = collectClients(clientRepo);\n-                assertEquals(2, clients.size());\n-                assertEquals(\"graph\", clients.get(0).getRegistrationId());\n-                assertEquals(\"azure\", clients.get(1).getRegistrationId());\n+                assertEquals(1, clients.size());\n+                assertEquals(\"azure\", clients.get(0).getRegistrationId());", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e94307b576d930b64fce7d6d4e451a84685eec6d", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java\nindex c7b837e6909..816872f5065 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfigurationTest.java\n\n@@ -138,10 +138,10 @@ public class AzureActiveDirectoryConfigurationTest {\n                 );\n                 assertEquals(clientRepo.getAzureClient().getClient(), azure);\n \n-                assertFalse(clientRepo.isAuthzClient(azure));\n-                assertTrue(clientRepo.isAuthzClient(graph));\n-                assertFalse(clientRepo.isAuthzClient(\"azure\"));\n-                assertTrue(clientRepo.isAuthzClient(\"graph\"));\n+                assertFalse(clientRepo.isClientNeedConsentWhenLogin(azure));\n+                assertTrue(clientRepo.isClientNeedConsentWhenLogin(graph));\n+                assertFalse(clientRepo.isClientNeedConsentWhenLogin(\"azure\"));\n+                assertTrue(clientRepo.isClientNeedConsentWhenLogin(\"graph\"));\n \n                 List<ClientRegistration> clients = collectClients(clientRepo);\n                 assertEquals(1, clients.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTA0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544095045", "bodyText": "Rename this file to AADWebAppConfiguration", "author": "chenrujun", "createdAt": "2020-12-16T08:15:18Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -51,7 +51,8 @@ public AzureClientRegistrationRepository clientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nsimilarity index 70%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nindex 068e1879870..c97cb06a280 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\n\n@@ -51,8 +63,7 @@ public class AzureActiveDirectoryConfiguration {\n         return new AzureClientRegistrationRepository(\n             createDefaultClient(),\n             createAuthzClients(),\n-            properties,\n-            true);\n+            properties);\n     }\n \n     @Bean\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTU4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544095589", "bodyText": "Rename this file to AADWebApiConfiguration", "author": "chenrujun", "createdAt": "2020-12-16T08:16:07Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java", "diffHunk": "@@ -40,7 +40,8 @@ public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(", "originalCommit": "dc2734c6361202809a758672f93c1f8e56b88ff1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\nsimilarity index 84%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\nindex 3efbd01b759..3b3dc3c94fb 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AzureActiveDirectoryResourceServerClientConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapi/AADWebApiConfiguration.java\n\n@@ -27,21 +26,20 @@ import org.springframework.security.oauth2.server.resource.BearerTokenAuthentica\n @ConditionalOnResource(resources = \"classpath:aad.enable.config\")\n @EnableConfigurationProperties({ AADAuthenticationProperties.class })\n @ConditionalOnClass({BearerTokenAuthenticationToken.class, OAuth2LoginAuthenticationFilter.class})\n-public class AzureActiveDirectoryResourceServerClientConfiguration {\n+public class AADWebApiConfiguration {\n \n     @Autowired\n     private AADAuthenticationProperties aadAuthenticationProperties;\n \n     @Bean\n-    @ConditionalOnMissingBean({ ClientRegistrationRepository.class, AzureClientRegistrationRepository.class })\n-    public AzureClientRegistrationRepository azureClientRegistrationRepository() {\n+    @ConditionalOnMissingBean({ ClientRegistrationRepository.class, AADWebApiClientRegistrationRepository.class })\n+    public AADWebApiClientRegistrationRepository azureClientRegistrationRepository() {\n         ClientRegistrationInitialization clientRegistrationInitialization =\n             new ClientRegistrationInitialization(aadAuthenticationProperties);\n-        return new AzureClientRegistrationRepository(\n+        return new AADWebApiClientRegistrationRepository(\n             clientRegistrationInitialization.createDefaultClient(),\n             clientRegistrationInitialization.createAuthzClients(),\n-            aadAuthenticationProperties,\n-            false);\n+            aadAuthenticationProperties);\n     }\n \n     /**\n"}}, {"oid": "e94307b576d930b64fce7d6d4e451a84685eec6d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e94307b576d930b64fce7d6d4e451a84685eec6d", "message": "Merge branch 'add-scopes-for-default-client' of https://github.com/lzc-1997-abel/azure-sdk-for-java into add-scopes-for-default-client", "committedDate": "2020-12-17T02:16:52Z", "type": "commit"}, {"oid": "0edf29b0fe774fe6649c4d1a497ef914aa9bfa8f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0edf29b0fe774fe6649c4d1a497ef914aa9bfa8f", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into add-scopes-for-default-client", "committedDate": "2020-12-17T02:17:41Z", "type": "commit"}, {"oid": "4a2cf46f783daefe9bb183aa915f465b8684cb06", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4a2cf46f783daefe9bb183aa915f465b8684cb06", "message": "Add a common class client registration repository", "committedDate": "2020-12-17T03:00:02Z", "type": "commit"}, {"oid": "7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e28ba1614dd7ba535a422ac00bcb79f52eb4a24", "message": "add web api client registration repository and edit web app repo", "committedDate": "2020-12-17T03:03:48Z", "type": "commit"}, {"oid": "227181d6a8dc83d0862d6147476b1ceb412cd206", "url": "https://github.com/Azure/azure-sdk-for-java/commit/227181d6a8dc83d0862d6147476b1ceb412cd206", "message": "add web api client registration repository and edit web app repo", "committedDate": "2020-12-17T03:43:41Z", "type": "commit"}, {"oid": "c6fc2dbb379ec53ab42e9973be2caea669cd0ad6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c6fc2dbb379ec53ab42e9973be2caea669cd0ad6", "message": "change AADClientRegistrationRepository to abstract", "committedDate": "2020-12-17T03:44:12Z", "type": "commit"}, {"oid": "2411440f5b5ae9acbf8b6a7008247cfb94b625f9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2411440f5b5ae9acbf8b6a7008247cfb94b625f9", "message": "format code", "committedDate": "2020-12-17T04:33:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544820991", "bodyText": "This is not updated yet.", "author": "chenrujun", "createdAt": "2020-12-17T05:24:14Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java", "diffHunk": "@@ -161,6 +161,15 @@ private void addAzureConfiguredScopes(Set<String> result) {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n+        List<String> scopes = authz.getScopes();\n+        if (authz.isOnDemand()) {\n+            if (!scopes.contains(\"openid\")) {\n+                scopes.add(\"openid\");\n+            }\n+            if (!scopes.contains(\"profile\")) {\n+                scopes.add(\"profile\");\n+            }\n+        }", "originalCommit": "2411440f5b5ae9acbf8b6a7008247cfb94b625f9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMTE4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544821189", "bodyText": "sorry , i missed that", "author": "zhichengliu12581", "createdAt": "2020-12-17T05:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg0NTQ2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18173#discussion_r544845463", "bodyText": "done", "author": "zhichengliu12581", "createdAt": "2020-12-17T06:35:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyMDk5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c587a29d5a48514ed2f80e2569d812fef80ebd45", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\nindex 9e77f765e15..d22c5e98344 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AADWebAppConfiguration.java\n\n@@ -161,13 +161,12 @@ public class AADWebAppConfiguration {\n \n     private ClientRegistration createClientBuilder(String id, AuthorizationProperties authz) {\n         ClientRegistration.Builder result = createClientBuilder(id);\n-        List<String> scopes = authz.getScopes();\n         if (authz.isOnDemand()) {\n-            if (!scopes.contains(\"openid\")) {\n-                scopes.add(\"openid\");\n+            if (!authz.getScopes().contains(\"openid\")) {\n+                authz.getScopes().add(\"openid\");\n             }\n-            if (!scopes.contains(\"profile\")) {\n-                scopes.add(\"profile\");\n+            if (!authz.getScopes().contains(\"profile\")) {\n+                authz.getScopes().add(\"profile\");\n             }\n         }\n         result.scope(authz.getScopes());\n"}}, {"oid": "c587a29d5a48514ed2f80e2569d812fef80ebd45", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c587a29d5a48514ed2f80e2569d812fef80ebd45", "message": "remove omitable variable", "committedDate": "2020-12-17T05:31:04Z", "type": "commit"}, {"oid": "a0b28fb2a0f7b0d3846813f50fddc22874a6ec75", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a0b28fb2a0f7b0d3846813f50fddc22874a6ec75", "message": "change the way to get scopes", "committedDate": "2020-12-17T06:07:56Z", "type": "commit"}, {"oid": "cb4bb1a67dcb32ca0c69917721f4a60b83c343c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cb4bb1a67dcb32ca0c69917721f4a60b83c343c9", "message": "merge conflict", "committedDate": "2020-12-18T01:46:17Z", "type": "commit"}, {"oid": "cc47d7d0f889a1140b12630e927f9cc8ab0864e4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cc47d7d0f889a1140b12630e927f9cc8ab0864e4", "message": "merge master", "committedDate": "2020-12-18T01:55:57Z", "type": "commit"}, {"oid": "0468555b3e599e6ed19b0f22b77139166d703982", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0468555b3e599e6ed19b0f22b77139166d703982", "message": "Merge remote-tracking branch 'origin/add-scopes-for-default-client' into add-scopes-for-default-client", "committedDate": "2020-12-18T01:57:01Z", "type": "commit"}, {"oid": "6eb98e59971d2281e614debcf8ef7a3f72d81cf9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6eb98e59971d2281e614debcf8ef7a3f72d81cf9", "message": "Recover the wrong merge", "committedDate": "2020-12-18T02:08:14Z", "type": "commit"}]}