{"pr_number": 16946, "pr_title": "Fixed diagnostics information and other APIs on cosmos stored procedure response", "pr_createdAt": "2020-10-29T00:56:51Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/16946", "timeline": [{"oid": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "message": "Fixed diagnostics information and other APIs on cosmos stored procedure response", "committedDate": "2020-10-29T00:55:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzkzMzkzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r513933933", "bodyText": "with this change essentially similar to CosmosItemResponse  we are implementing all these APIs here instead of relying on the parent class.\nSo I would like to suggest that we drop the inheritance on the CosmosResponse for this class.\nI know that theoretically speaking it can be considered a breaking change but in practice it is not breaking change as you are implementing all the required methods.", "author": "moderakh", "createdAt": "2020-10-29T03:50:24Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java", "diffHunk": "@@ -90,13 +94,56 @@ public double getRequestCharge() {\n         return super.getRequestCharge();\n     }\n \n+    @Override\n+    public String getMaxResourceQuota() {", "originalCommit": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "02b1e970832b26d2efbc2495ce2f899fcb29742a", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\nindex 76b2c68f986..c2a14864ff4 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\n\n@@ -94,46 +89,6 @@ public class CosmosStoredProcedureResponse extends CosmosResponse<CosmosStoredPr\n         return super.getRequestCharge();\n     }\n \n-    @Override\n-    public String getMaxResourceQuota() {\n-        if (storedProcedureResponse != null) {\n-            return storedProcedureResponse.getMaxResourceQuota();\n-        }\n-        return super.getMaxResourceQuota();\n-    }\n-\n-    @Override\n-    public String getCurrentResourceQuotaUsage() {\n-        if (storedProcedureResponse != null) {\n-            return storedProcedureResponse.getCurrentResourceQuotaUsage();\n-        }\n-        return super.getCurrentResourceQuotaUsage();\n-    }\n-\n-    @Override\n-    public Map<String, String> getResponseHeaders() {\n-        if (storedProcedureResponse != null) {\n-            return storedProcedureResponse.getResponseHeaders();\n-        }\n-        return super.getResponseHeaders();\n-    }\n-\n-    @Override\n-    public CosmosDiagnostics getDiagnostics() {\n-        if (storedProcedureResponse != null) {\n-            return storedProcedureResponse.getCosmosDiagnostics();\n-        }\n-        return super.getDiagnostics();\n-    }\n-\n-    @Override\n-    public Duration getDuration() {\n-        if (storedProcedureResponse != null) {\n-            return storedProcedureResponse.getCosmosDiagnostics().getDuration();\n-        }\n-        return super.getDuration();\n-    }\n-\n     /**\n      * Gets the response of the stored procedure as a string.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwNDk3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514004975", "bodyText": "Can you try and see if this works?\n    super(new ResourceResponse<>(response.getRxDocumentServiceResponse(),\n                                     StoredProcedure.class));\n\nand in StoredProcedureResponse\n    public RxDocumentServiceResponse getRxDocumentServiceResponse() {\n        return this.response;\n    }\n\nIn this way you may avoid re implementing all the super methods", "author": "mbhaskar", "createdAt": "2020-10-29T06:08:34Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java", "diffHunk": "@@ -24,7 +28,7 @@\n     }\n \n     CosmosStoredProcedureResponse(StoredProcedureResponse response) {\n-        super(response);", "originalCommit": "4ec4f459ec13a6889a39d5f388608a88c0e1f9c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyMjYyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514422620", "bodyText": "Thanks @mbhaskar for the suggestion, I have implemented it, will run full CI to verify it.", "author": "kushagraThapar", "createdAt": "2020-10-29T17:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwNDk3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "02b1e970832b26d2efbc2495ce2f899fcb29742a", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\nindex 76b2c68f986..c2a14864ff4 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/models/CosmosStoredProcedureResponse.java\n\n@@ -28,9 +24,8 @@ public class CosmosStoredProcedureResponse extends CosmosResponse<CosmosStoredPr\n     }\n \n     CosmosStoredProcedureResponse(StoredProcedureResponse response) {\n-        super(null, null);\n+        super(new ResourceResponse<>(response.getRxDocumentServiceResponse(), StoredProcedure.class));\n         this.storedProcedureResponse = response;\n-\n     }\n \n     /**\n"}}, {"oid": "02b1e970832b26d2efbc2495ce2f899fcb29742a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/02b1e970832b26d2efbc2495ce2f899fcb29742a", "message": "Code review comments", "committedDate": "2020-10-29T17:03:45Z", "type": "commit"}, {"oid": "050a8b95d56eccc0f4878f227cd535af0e0a5c89", "url": "https://github.com/Azure/azure-sdk-for-java/commit/050a8b95d56eccc0f4878f227cd535af0e0a5c89", "message": "Fixing conflict resolution policy CRUD test", "committedDate": "2020-10-29T17:23:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzODE3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514438176", "bodyText": "is this because of service side message change?", "author": "moderakh", "createdAt": "2020-10-29T17:27:00Z", "path": "sdk/cosmos/azure-cosmos/src/test/java/com/azure/cosmos/rx/MultiMasterConflictResolutionTest.java", "diffHunk": "@@ -81,7 +81,7 @@ public void conflictResolutionPolicyCRUD() {\n             // when (e.StatusCode == HttpStatusCode.BadRequest)\n             CosmosException dce = Utils.as(e, CosmosException.class);\n             if (dce != null && dce.getStatusCode() == 400) {\n-                assertThat(dce.getMessage()).contains(\"Invalid path '\\\\/a\\\\/b' for last writer wins conflict resolution\");\n+                assertThat(dce.getMessage()).contains(\"Invalid path '\\\\\\\\\\\\/a\\\\\\\\\\\\/b' for last writer wins conflict resolution\");", "originalCommit": "050a8b95d56eccc0f4878f227cd535af0e0a5c89", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzODYxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/16946#discussion_r514438618", "bodyText": "Yes, that is the reason :)", "author": "kushagraThapar", "createdAt": "2020-10-29T17:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQzODE3Ng=="}], "type": "inlineReview", "revised_code": null}]}