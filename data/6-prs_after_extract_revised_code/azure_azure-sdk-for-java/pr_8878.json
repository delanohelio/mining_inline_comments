{"pr_number": 8878, "pr_title": "Remove entityPath from ConnectionOptions.", "pr_createdAt": "2020-03-09T18:23:16Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8878", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4Mzk4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8878#discussion_r389883988", "bodyText": "Can the same ServiceBusReactorAmqpConnection get management nodes for different queues or topics?", "author": "srnagar", "createdAt": "2020-03-09T18:34:52Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java", "diffHunk": "@@ -69,24 +74,41 @@ public ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions co\n         this.tokenManagerProvider = tokenManagerProvider;\n         this.retryOptions = connectionOptions.getRetry();\n         this.messageSerializer = messageSerializer;\n-        this.managementChannelMono = getReactorConnection().then(\n-            Mono.fromCallable(() -> {\n-                return (ServiceBusManagementNode) new ManagementChannel(\n-                    createRequestResponseChannel(MANAGEMENT_SESSION_NAME, MANAGEMENT_LINK_NAME, MANAGEMENT_ADDRESS),\n-                    connectionOptions.getEntityPath(), connectionOptions.getTokenCredential(),\n-                    this.tokenManagerProvider, this.messageSerializer, connectionOptions.getScheduler());\n-            }))\n-            .cache();\n+        this.tokenCredential = connectionOptions.getTokenCredential();\n+        this.scheduler = connectionOptions.getScheduler();\n     }\n \n     @Override\n-    public Mono<ServiceBusManagementNode> getManagementNode() {\n+    public Mono<ServiceBusManagementNode> getManagementNode(String entityPath) {", "originalCommit": "e9977fed50f9f192a1747fe6cfa878c16c6fe7be", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "367642fc51e9556a31744f806e470fe7328e85c6", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\nindex 3867754b531..612877f1457 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\n\n@@ -74,41 +69,24 @@ public class ServiceBusReactorAmqpConnection extends ReactorConnection implement\n         this.tokenManagerProvider = tokenManagerProvider;\n         this.retryOptions = connectionOptions.getRetry();\n         this.messageSerializer = messageSerializer;\n-        this.tokenCredential = connectionOptions.getTokenCredential();\n-        this.scheduler = connectionOptions.getScheduler();\n+        this.managementChannelMono = getReactorConnection().then(\n+            Mono.fromCallable(() -> {\n+                return (ServiceBusManagementNode) new ManagementChannel(\n+                    createRequestResponseChannel(MANAGEMENT_SESSION_NAME, MANAGEMENT_LINK_NAME, MANAGEMENT_ADDRESS),\n+                    connectionOptions.getEntityPath(), connectionOptions.getTokenCredential(),\n+                    this.tokenManagerProvider, this.messageSerializer, connectionOptions.getScheduler());\n+            }))\n+            .cache();\n     }\n \n     @Override\n-    public Mono<ServiceBusManagementNode> getManagementNode(String entityPath) {\n+    public Mono<ServiceBusManagementNode> getManagementNode() {\n         if (isDisposed()) {\n             return Mono.error(logger.logExceptionAsError(new IllegalStateException(String.format(\n-                \"connectionId[%s]: Connection is disposed. Cannot get management instance for '%s'\",\n-                connectionId, entityPath))));\n-        }\n-\n-        final ServiceBusManagementNode existing = managementNodes.get(entityPath);\n-        if (existing != null) {\n-            return Mono.just(existing);\n+                \"connectionId[%s]: Connection is disposed. Cannot get management instance\", connectionId))));\n         }\n \n-        return getReactorConnection().then(\n-            Mono.fromCallable(() -> {\n-                final ServiceBusManagementNode node = managementNodes.computeIfAbsent(entityPath, key -> {\n-                    final String sessionName = entityPath + \"-\" + MANAGEMENT_SESSION_NAME;\n-                    final String linkName = entityPath + \"-\" + MANAGEMENT_LINK_NAME;\n-                    final String address = entityPath + \"/\" + MANAGEMENT_ADDRESS;\n-\n-                    logger.info(\"Creating management node. entityPath: [{}]. address: [{}]. linkName: [{}]\",\n-                        entityPath, address, linkName);\n-\n-                    final Mono<RequestResponseChannel> requestResponseChannel =\n-                        createRequestResponseChannel(sessionName, linkName, address);\n-                    return new ManagementChannel(requestResponseChannel, entityPath, tokenCredential,\n-                        tokenManagerProvider, messageSerializer, scheduler);\n-                });\n-\n-                return node;\n-            }));\n+        return managementChannelMono;\n     }\n \n     /**\n"}}, {"oid": "caf18c70ba6ea67e23d675f827a6094a86fdf757", "url": "https://github.com/Azure/azure-sdk-for-java/commit/caf18c70ba6ea67e23d675f827a6094a86fdf757", "message": "Fix build errors.", "committedDate": "2020-03-09T22:28:03Z", "type": "forcePushed"}, {"oid": "367642fc51e9556a31744f806e470fe7328e85c6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/367642fc51e9556a31744f806e470fe7328e85c6", "message": "Removing entityPath from ConnectionOptions because it can be to multiple paths.", "committedDate": "2020-03-09T23:19:35Z", "type": "commit"}, {"oid": "7b180737c1c8e4e9dbdd168ef3d285c2c8ab3587", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b180737c1c8e4e9dbdd168ef3d285c2c8ab3587", "message": "Fix test failure.", "committedDate": "2020-03-09T23:20:02Z", "type": "commit"}, {"oid": "e057440f85c167fa9fc706a7791c23b253876da6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e057440f85c167fa9fc706a7791c23b253876da6", "message": "Update ServiceBusAmqpConnection to take entity path into consideration when creating management node.", "committedDate": "2020-03-09T23:20:02Z", "type": "commit"}, {"oid": "29d3ea60f423c1e05a607d160c5e5de78bca3d35", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29d3ea60f423c1e05a607d160c5e5de78bca3d35", "message": "Fix build errors.", "committedDate": "2020-03-09T23:20:03Z", "type": "commit"}, {"oid": "29d3ea60f423c1e05a607d160c5e5de78bca3d35", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29d3ea60f423c1e05a607d160c5e5de78bca3d35", "message": "Fix build errors.", "committedDate": "2020-03-09T23:20:03Z", "type": "forcePushed"}]}