{"pr_number": 11310, "pr_title": "Form recognizer API's to return List over IterableStream", "pr_createdAt": "2020-05-19T20:11:45Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11310", "timeline": [{"oid": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "message": "update to list", "committedDate": "2020-05-19T21:35:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MDQ0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431360440", "bodyText": "Why is service version getting removed in this PR", "author": "iscai-msft", "createdAt": "2020-05-27T18:37:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -85,15 +84,6 @@ public FormTrainingAsyncClient getFormTrainingAsyncClient() {\n         return new FormTrainingAsyncClient(this.service, this.serviceVersion);\n     }\n \n-    /**", "originalCommit": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2OTU2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431369561", "bodyText": "It happens to TA as well. \"Unless there is a use case, for now lets leave these getServiceVersion calls out.\"\nhttps://apiview.dev/Assemblies/Review/05d0102010704cfa977f9386ce622294/067d8625611f4b329856ba69b7774d8d", "author": "mssfang", "createdAt": "2020-05-27T18:53:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MDQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "33b146fccb7662e59336555e1dcb7a29c6539046", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\nindex 6d020d85063..00aba80e359 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n\n@@ -75,13 +74,12 @@ public final class FormRecognizerAsyncClient {\n     }\n \n     /**\n-     * Creates a new {@link FormTrainingAsyncClient} object. The new {@code FormTrainingAsyncClient}\n-     * uses the same request policy pipeline as the {@code FormRecognizerAsyncClient}.\n+     * Gets the service version the client is using.\n      *\n-     * @return A new {@link FormTrainingAsyncClient} object.\n+     * @return the service version the client is using.\n      */\n-    public FormTrainingAsyncClient getFormTrainingAsyncClient() {\n-        return new FormTrainingAsyncClient(this.service, this.serviceVersion);\n+    public FormRecognizerServiceVersion getServiceVersion() {\n+        return serviceVersion;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2MjE3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431362174", "bodyText": "Unclear how Java usually does these docstrings, but I notice in the docstring for the SyncPoller / PollerFlux you don't mention what the poller returns. Python includes this information in the docstring (ex here).\nThis comment isn't super related to what this PR is trying to do, so feel free to open another PR when / if you want to make this change", "author": "iscai-msft", "createdAt": "2020-05-27T18:40:34Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -71,7 +71,7 @@ public FormTrainingClient getFormTrainingClient() {\n      * has failed, or has been cancelled.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public SyncPoller<OperationResult, IterableStream<RecognizedForm>>\n+    public SyncPoller<OperationResult, List<RecognizedForm>>", "originalCommit": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\nindex 44ebcb54f1a..23a8260da1d 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n\n@@ -68,7 +57,7 @@ public final class FormRecognizerClient {\n      * @param modelId The UUID string format custom trained model Id to be used.\n      *\n      * @return A {@link SyncPoller} to poll the progress of the extract custom form operation until it has completed,\n-     * has failed, or has been cancelled.\n+     * has failed, or has been cancelled. The completed operation returns a List of {@link RecognizedForm}.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<RecognizedForm>>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2NDI5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431364290", "bodyText": "Would it also be best to change the forEach for formPage, formTable, formTableCell etc into a for loop as well?", "author": "iscai-msft", "createdAt": "2020-05-27T18:44:23Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java", "diffHunk": "@@ -50,52 +50,55 @@ public static void main(String[] args) {\n             });\n \n         System.out.println(\"--------RECOGNIZING FORM --------\");\n-        recognizeFormResult.subscribe(recognizedForms -> recognizedForms.forEach(recognizedForm -> {\n-            System.out.printf(\"Form has type: %s%n\", recognizedForm.getFormType());\n-            // each field is of type FormField\n-            //     The value of the field can also be a FormField, or a list of FormFields\n-            //     In our sample, it is not.\n-            recognizedForm.getFields().forEach((fieldText, fieldValue) -> {\n-                System.out.printf(\"Field %s has value %s based on %s with a confidence score \"\n-                        + \"of %.2f.%n\",\n-                    fieldText, fieldValue.getFieldValue(), fieldValue.getValueText().getText(),\n-                    fieldValue.getConfidence());\n-            });\n+        recognizeFormResult.subscribe(recognizedForms -> {\n+            for (int i = 0; i < recognizedForms.size(); i++) {\n+                final RecognizedForm recognizedForm = recognizedForms.get(i);\n+                System.out.printf(\"Form %s has type: %s%n\", i, recognizedForm.getFormType());\n+                // each field is of type FormField\n+                //     The value of the field can also be a FormField, or a list of FormFields\n+                //     In our sample, it is not.\n+                recognizedForm.getFields().forEach((fieldText, fieldValue) -> {\n+                    System.out.printf(\"Field %s has value %s based on %s with a confidence score \"\n+                            + \"of %.2f.%n\",\n+                        fieldText, fieldValue.getFieldValue(), fieldValue.getValueText().getText(),\n+                        fieldValue.getConfidence());\n+                });\n \n-            // Page Information\n-            recognizedForm.getPages().forEach(formPage -> {\n-                System.out.printf(\"-------Recognizing Page %s of Form -------%n\", 1);\n-                System.out.printf(\"Has width %s , angle %s, height %s %n\", formPage.getWidth(),\n-                    formPage.getTextAngle(), formPage.getHeight());\n-                // Table information\n-                System.out.println(\"Recognized Tables: \");\n-                formPage.getTables().forEach(formTable -> {\n-                    formTable.getCells().forEach(formTableCell -> {\n-                        System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n-                        // text_content only exists if you set include_text_content to True in your\n-                        // function call to recognize_custom_forms\n-                        // It is also a list of FormWords and FormLines, but in this example, we only deal with\n-                        // FormWords\n-                        formTableCell.getElements().forEach(formContent -> {\n-                            if (formContent.getTextContentType().equals(TextContentType.WORD)) {\n-                                FormWord formWordElement = (FormWord) (formContent);\n-                                final StringBuilder boundingBoxStr = new StringBuilder();\n-                                if (formWordElement.getBoundingBox() != null) {\n-                                    formWordElement.getBoundingBox().getPoints().forEach(point -> {\n-                                        boundingBoxStr.append(String.format(\"[%.2f, %.2f]\", point.getX(),\n-                                            point.getY()));\n-                                    });\n+                // Page Information", "originalCommit": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY5MTY0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431691649", "bodyText": "Updated formPage, formTable to loop over an indexed loop but for others the index isn't used in the sample so left as is.", "author": "samvaity", "createdAt": "2020-05-28T09:08:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2NDI5MA=="}], "type": "inlineReview", "revised_code": {"commit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java\nindex 40bb0b02817..c5265185714 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java\n\n@@ -65,17 +67,22 @@ public class GetBoundingBoxesAsync {\n                 });\n \n                 // Page Information\n-                recognizedForm.getPages().forEach(formPage -> {\n-                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", 1);\n+                final List<FormPage> pages = recognizedForm.getPages();\n+                for (int i1 = 0; i1 < pages.size(); i1++) {\n+                    final FormPage formPage = pages.get(i1);\n+                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", i1);\n                     System.out.printf(\"Has width %s , angle %s, height %s %n\", formPage.getWidth(),\n                         formPage.getTextAngle(), formPage.getHeight());\n                     // Table information\n                     System.out.println(\"Recognized Tables: \");\n-                    formPage.getTables().forEach(formTable -> {\n+                    final List<FormTable> tables = formPage.getTables();\n+                    for (int i2 = 0; i2 < tables.size(); i2++) {\n+                        final FormTable formTable = tables.get(i2);\n+                        System.out.printf(\"Table %s%n\", i2);\n                         formTable.getCells().forEach(formTableCell -> {\n                             System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n-                            // text_content only exists if you set include_text_content to True in your\n-                            // function call to recognize_custom_forms\n+                            // textContent only exists if you set includeTextContent to True in your\n+                            // call to beginRecognizeCustomFormsFromUrl\n                             // It is also a list of FormWords and FormLines, but in this example, we only deal with\n                             // FormWords\n                             formTableCell.getElements().forEach(formContent -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM2NDk3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431364971", "bodyText": "since you're changing the name of layoutPageResults -> contentPageResults, I think it's a good idea to change recognizeLayoutPoller -> recognizeContentPoller", "author": "iscai-msft", "createdAt": "2020-05-27T18:45:39Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java", "diffHunk": "@@ -41,14 +41,15 @@ public static void main(final String[] args) throws IOException {\n         byte[] fileContent = Files.readAllBytes(sourceFile.toPath());\n         InputStream targetStream = new ByteArrayInputStream(fileContent);\n \n-        SyncPoller<OperationResult, IterableStream<FormPage>> recognizeLayoutPoller =\n+        SyncPoller<OperationResult, List<FormPage>> recognizeLayoutPoller =\n             client.beginRecognizeContent(targetStream, sourceFile.length(), FormContentType.IMAGE_JPEG);\n \n-        IterableStream<FormPage> layoutPageResults = recognizeLayoutPoller.getFinalResult();\n+        List<FormPage> contentPageResults = recognizeLayoutPoller.getFinalResult();", "originalCommit": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java\nindex 4c44a9a04af..6e77cf661e8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeContent.java\n\n@@ -41,10 +42,10 @@ public class RecognizeContent {\n         byte[] fileContent = Files.readAllBytes(sourceFile.toPath());\n         InputStream targetStream = new ByteArrayInputStream(fileContent);\n \n-        SyncPoller<OperationResult, List<FormPage>> recognizeLayoutPoller =\n+        SyncPoller<OperationResult, List<FormPage>> recognizeContentPoller =\n             client.beginRecognizeContent(targetStream, sourceFile.length(), FormContentType.IMAGE_JPEG);\n \n-        List<FormPage> contentPageResults = recognizeLayoutPoller.getFinalResult();\n+        List<FormPage> contentPageResults = recognizeContentPoller.getFinalResult();\n \n         for (int i = 0; i < contentPageResults.size(); i++) {\n             final FormPage formPage = contentPageResults.get(i);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM3MDYwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431370608", "bodyText": "{@link } could be a better option. Usually, use {@code } for the variable name.", "author": "mssfang", "createdAt": "2020-05-27T18:55:46Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/Transforms.java", "diffHunk": "@@ -115,14 +113,13 @@ private Transforms() {\n      * @param analyzeResult The service returned result for analyze receipts.\n      * @param includeTextDetails Boolean to indicate if to set reference elements data on fields.\n      *\n-     * @return The IterableStream of {@code RecognizedReceipt}.\n+     * @return The List of {@code RecognizedReceipt}.", "originalCommit": "8d11357fb87a6d41fc6cd9fccea335a798fbc35a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "33b146fccb7662e59336555e1dcb7a29c6539046", "url": "https://github.com/Azure/azure-sdk-for-java/commit/33b146fccb7662e59336555e1dcb7a29c6539046", "message": "update to list", "committedDate": "2020-05-28T08:23:08Z", "type": "commit"}, {"oid": "33b146fccb7662e59336555e1dcb7a29c6539046", "url": "https://github.com/Azure/azure-sdk-for-java/commit/33b146fccb7662e59336555e1dcb7a29c6539046", "message": "update to list", "committedDate": "2020-05-28T08:23:08Z", "type": "forcePushed"}, {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "message": "update samples", "committedDate": "2020-05-28T09:09:36Z", "type": "commit"}, {"oid": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "message": "update samples", "committedDate": "2020-05-28T09:09:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NjM1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r431886359", "bodyText": "Don't think you made this change in the sync sample", "author": "iscai-msft", "createdAt": "2020-05-28T14:36:35Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java", "diffHunk": "@@ -65,17 +67,22 @@ public static void main(String[] args) {\n                 });\n \n                 // Page Information\n-                recognizedForm.getPages().forEach(formPage -> {\n-                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", 1);\n+                final List<FormPage> pages = recognizedForm.getPages();\n+                for (int i1 = 0; i1 < pages.size(); i1++) {\n+                    final FormPage formPage = pages.get(i1);\n+                    System.out.printf(\"-------Recognizing Page %s of Form -------%n\", i1);\n                     System.out.printf(\"Has width %s , angle %s, height %s %n\", formPage.getWidth(),\n                         formPage.getTextAngle(), formPage.getHeight());\n                     // Table information\n                     System.out.println(\"Recognized Tables: \");\n-                    formPage.getTables().forEach(formTable -> {\n+                    final List<FormTable> tables = formPage.getTables();\n+                    for (int i2 = 0; i2 < tables.size(); i2++) {\n+                        final FormTable formTable = tables.get(i2);\n+                        System.out.printf(\"Table %s%n\", i2);\n                         formTable.getCells().forEach(formTableCell -> {\n                             System.out.printf(\"Cell text %s has following words: %n\", formTableCell.getText());\n-                            // text_content only exists if you set include_text_content to True in your\n-                            // function call to recognize_custom_forms\n+                            // textContent only exists if you set includeTextContent to True in your", "originalCommit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwMTg1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432001859", "bodyText": "use @link since FormPage is the first occurance in this javadoc section", "author": "mssfang", "createdAt": "2020-05-28T17:24:35Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -230,13 +220,13 @@ public FormRecognizerServiceVersion getServiceVersion() {\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled.\n+     * been cancelled. The completed operation returns a List of {@code FormPage}.", "originalCommit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adc168869180829249114c2dbbe02e43a75ab492", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\nindex 2adac4f78dc..8cb36fd83b3 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n\n@@ -220,7 +220,7 @@ public final class FormRecognizerAsyncClient {\n      * 5 seconds is used.\n      *\n      * @return A {@link PollerFlux} that polls the extract receipt operation until it has completed, has failed, or has\n-     * been cancelled. The completed operation returns a List of {@code FormPage}.\n+     * been cancelled. The completed operation returns a List of {@link FormPage}.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public PollerFlux<OperationResult, List<FormPage>>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNTM2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432005367", "bodyText": "I think having @link for the first occurrence in method scope is better.", "author": "mssfang", "createdAt": "2020-05-28T17:30:21Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java", "diffHunk": "@@ -266,10 +265,10 @@\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} to poll the progress of the extract receipt operation until it has completed,\n-     * has failed, or has been cancelled.\n+     * has failed, or has been cancelled. The completed operation returns a List of {@code RecognizedReceipt}.", "originalCommit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "adc168869180829249114c2dbbe02e43a75ab492", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\nindex 23a8260da1d..27bd9d76ebf 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerClient.java\n\n@@ -265,7 +265,7 @@ public final class FormRecognizerClient {\n      * 5 seconds is used.\n      *\n      * @return A {@link SyncPoller} to poll the progress of the extract receipt operation until it has completed,\n-     * has failed, or has been cancelled. The completed operation returns a List of {@code RecognizedReceipt}.\n+     * has failed, or has been cancelled. The completed operation returns a List of {@link RecognizedReceipt}.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n     public SyncPoller<OperationResult, List<RecognizedReceipt>>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAwNjAxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11310#discussion_r432006016", "bodyText": "nit: have {@code List}?", "author": "mssfang", "createdAt": "2020-05-28T17:31:28Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FieldText.java", "diffHunk": "@@ -15,7 +16,7 @@\n     /**\n      * The list of text element references for the field value.\n      */\n-    private final IterableStream<FormContent> textContent;\n+    private final List<FormContent> textContent;", "originalCommit": "f66454880f17e3e9e9a042eb72cbe75e02fc7aa8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "adc168869180829249114c2dbbe02e43a75ab492", "url": "https://github.com/Azure/azure-sdk-for-java/commit/adc168869180829249114c2dbbe02e43a75ab492", "message": "update to @link", "committedDate": "2020-05-28T19:23:50Z", "type": "commit"}]}