{"pr_number": 12141, "pr_title": "mgmt, support begin operation with syncpoll", "pr_createdAt": "2020-06-12T06:58:20Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/12141", "timeline": [{"oid": "d619f208f58c55e669d76f9a2c59a6e904b1685e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d619f208f58c55e669d76f9a2c59a6e904b1685e", "message": "mgmt_draft_begin_with_syncpoll", "committedDate": "2020-06-12T06:55:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0MTk2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r439241965", "bodyText": "Support polling by user.", "author": "weidongxu-microsoft", "createdAt": "2020-06-12T06:59:00Z", "path": "sdk/resources/mgmt/src/test/java/com/azure/resourcemanager/resources/DeploymentsTests.java", "diffHunk": "@@ -224,4 +229,29 @@ public void canUpdateVirtualNetworkDeployment() throws Exception {\n         Assertions.assertNotNull(genericVnet);\n         resourceClient.genericResources().delete(rgName, \"Microsoft.Network\", \"\", \"virtualnetworks\", \"VNet2\", \"2015-06-15\");\n     }\n+\n+    @Test\n+    public void canDeployVirtualNetworkSyncPoll() throws Exception {\n+        final String dp = \"dpD\" + testId;\n+\n+        // Begin create\n+        Accepted<Deployment> acceptedDeployment = resourceClient.deployments()\n+            .define(dp)\n+            .withExistingResourceGroup(rgName)\n+            .withTemplateLink(templateUri, contentVersion)\n+            .withParametersLink(parametersUri, contentVersion)\n+            .withMode(DeploymentMode.COMPLETE)\n+            .beginCreate();\n+        Deployment createdDeployment = acceptedDeployment.getAcceptedResult();\n+        Assertions.assertNotEquals(\"Succeeded\", createdDeployment.provisioningState());\n+        PollResponse<Void> pollResponse = acceptedDeployment.getSyncPoller().poll();\n+        while (pollResponse.getStatus() != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n+            SdkContext.sleep(1000);\n+            pollResponse = acceptedDeployment.getSyncPoller().poll();\n+        }", "originalCommit": "d619f208f58c55e669d76f9a2c59a6e904b1685e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "29971413a6c68f88042e3fcb788cb1e20606f331", "chunk": "diff --git a/sdk/resources/mgmt/src/test/java/com/azure/resourcemanager/resources/DeploymentsTests.java b/sdk/resources/mgmt/src/test/java/com/azure/resourcemanager/resources/DeploymentsTests.java\nindex 9e5ef81c95c..7253c8981b7 100644\n--- a/sdk/resources/mgmt/src/test/java/com/azure/resourcemanager/resources/DeploymentsTests.java\n+++ b/sdk/resources/mgmt/src/test/java/com/azure/resourcemanager/resources/DeploymentsTests.java\n\n@@ -246,10 +246,12 @@ public class DeploymentsTests extends ResourceManagerTestBase {\n         Assertions.assertNotEquals(\"Succeeded\", createdDeployment.provisioningState());\n         PollResponse<Void> pollResponse = acceptedDeployment.getSyncPoller().poll();\n         while (pollResponse.getStatus() != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n-            SdkContext.sleep(1000);\n+            int delayInMills = pollResponse.getRetryAfter() == null\n+                ? 10000\n+                : (int) pollResponse.getRetryAfter().toMillis();\n+            SdkContext.sleep(delayInMills);\n             pollResponse = acceptedDeployment.getSyncPoller().poll();\n         }\n-        System.out.println(\"statuc \" + pollResponse.getStatus());\n         Assertions.assertEquals(LongRunningOperationStatus.SUCCESSFULLY_COMPLETED, pollResponse.getStatus());\n         Deployment deployment = acceptedDeployment.getFinalResult();\n         Assertions.assertEquals(\"Succeeded\", deployment.provisioningState());\n"}}, {"oid": "fe97e16a0d6f5d1eadb4829bf905ad0aa31e457a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe97e16a0d6f5d1eadb4829bf905ad0aa31e457a", "message": "fix compile error", "committedDate": "2020-06-12T07:29:35Z", "type": "commit"}, {"oid": "a26afb17c50cbb26478ccc050a2cf80008bc5c11", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a26afb17c50cbb26478ccc050a2cf80008bc5c11", "message": "fix compile error", "committedDate": "2020-06-12T07:42:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2MTEyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r439261123", "bodyText": "Plan is to make this call return the resource, after LRO and after all following-up operations finished.", "author": "weidongxu-microsoft", "createdAt": "2020-06-12T07:45:32Z", "path": "sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/Accepted.java", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.model;\n+\n+import com.azure.core.util.polling.SyncPoller;\n+\n+/**\n+ * The accepted LRO (long running operation).\n+ *\n+ * @param <T> the type of final result\n+ */\n+public interface Accepted<T> {\n+\n+    /**\n+     * Gets the accepted result of LRO.\n+     *\n+     * @return the accepted result\n+     */\n+    T getAcceptedResult();\n+\n+    /**\n+     * Gets the {@link SyncPoller} of LRO.\n+     *\n+     * @return the sync poller.\n+     */\n+    SyncPoller<Void, T> getSyncPoller();\n+\n+    /**\n+     * Gets the final result of LRO.\n+     *\n+     * @return the final result.\n+     */\n+    T getFinalResult();", "originalCommit": "d619f208f58c55e669d76f9a2c59a6e904b1685e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faba85345e3d48136bf503a522023d8183ca8e97", "chunk": "diff --git a/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/Accepted.java b/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/Accepted.java\nindex 511084eb677..cc23f351eed 100644\n--- a/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/Accepted.java\n+++ b/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/Accepted.java\n\n@@ -3,6 +3,7 @@\n \n package com.azure.resourcemanager.resources.fluentcore.model;\n \n+import com.azure.core.util.polling.PollResponse;\n import com.azure.core.util.polling.SyncPoller;\n \n /**\n"}}, {"oid": "54c41242bc72355ef13a5b68e351eef4a87c104d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/54c41242bc72355ef13a5b68e351eef4a87c104d", "message": "Merge branch 'master' into mgmt_draft_begin_op", "committedDate": "2020-06-12T08:11:30Z", "type": "commit"}, {"oid": "299bac94ca48639372fb90df8c7a225a8efc4187", "url": "https://github.com/Azure/azure-sdk-for-java/commit/299bac94ca48639372fb90df8c7a225a8efc4187", "message": "fix spotbugs", "committedDate": "2020-06-12T09:06:02Z", "type": "commit"}, {"oid": "a837b0afc339eddeb055f2daf6790e95993e54af", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a837b0afc339eddeb055f2daf6790e95993e54af", "message": "fix typo", "committedDate": "2020-06-15T04:26:01Z", "type": "commit"}, {"oid": "29971413a6c68f88042e3fcb788cb1e20606f331", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29971413a6c68f88042e3fcb788cb1e20606f331", "message": "support sync poll for vm", "committedDate": "2020-06-15T06:51:16Z", "type": "commit"}, {"oid": "ad48bbc9012d39ef520a5d9933e1daecf5fa5b36", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ad48bbc9012d39ef520a5d9933e1daecf5fa5b36", "message": "clean up", "committedDate": "2020-06-15T06:59:12Z", "type": "commit"}, {"oid": "06e171a8d239f0bcf3bbe31b33191660aca5fa81", "url": "https://github.com/Azure/azure-sdk-for-java/commit/06e171a8d239f0bcf3bbe31b33191660aca5fa81", "message": "support delete VM with sync poller", "committedDate": "2020-06-16T02:35:05Z", "type": "commit"}, {"oid": "d6db0e86bde99091e2e181a3826328669345569b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6db0e86bde99091e2e181a3826328669345569b", "message": "live record", "committedDate": "2020-06-16T03:37:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU3OTg3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r440579876", "bodyText": "Next plan is to give a concrete class for this current Void in PollResponse, to provide more information about the poll, e.g. poll url, response body, etc.\nBut that would require more changes in core-management, so it would likely be delayed to another PR.", "author": "weidongxu-microsoft", "createdAt": "2020-06-16T04:31:33Z", "path": "sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/implementation/AcceptedImpl.java", "diffHunk": "@@ -0,0 +1,161 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.model.implementation;\n+\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.http.rest.SimpleResponse;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.management.polling.PollerFactory;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.polling.LongRunningOperationStatus;\n+import com.azure.core.util.polling.PollResponse;\n+import com.azure.core.util.polling.PollerFlux;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+import com.azure.resourcemanager.resources.fluentcore.model.Accepted;\n+import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Duration;\n+import java.util.Objects;\n+import java.util.function.Function;\n+\n+public class AcceptedImpl<InnerT, T> implements Accepted<T> {\n+\n+    private final Response<Flux<ByteBuffer>> activationResponse;\n+    private byte[] responseBytes;\n+    private final SerializerAdapter serializerAdapter;\n+    private final HttpPipeline httpPipeline;\n+    private final Type pollResultType;\n+    private final Type finalResultType;\n+    private final Function<InnerT, T> wrapOperation;\n+\n+    private PollerFlux<PollResult<InnerT>, InnerT> pollerFlux;\n+    private SyncPoller<Void, T> syncPoller;\n+\n+    public AcceptedImpl(Response<Flux<ByteBuffer>> activationResponse,\n+                        SerializerAdapter serializerAdapter,\n+                        HttpPipeline httpPipeline,\n+                        Type pollResultType,\n+                        Type finalResultType,\n+                        Function<InnerT, T> wrapOperation) {\n+        this.activationResponse = Objects.requireNonNull(activationResponse);\n+        this.serializerAdapter = Objects.requireNonNull(serializerAdapter);\n+        this.httpPipeline = Objects.requireNonNull(httpPipeline);\n+        this.pollResultType = Objects.requireNonNull(pollResultType);\n+        this.finalResultType = Objects.requireNonNull(finalResultType);\n+        this.wrapOperation = Objects.requireNonNull(wrapOperation);\n+    }\n+\n+    @Override\n+    public T getAcceptedResult() {\n+        try {\n+            return wrapOperation.apply(serializerAdapter.deserialize(\n+                new String(getResponse(), StandardCharsets.UTF_8),\n+                finalResultType,\n+                SerializerEncoding.JSON));\n+        } catch (IOException e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public SyncPoller<Void, T> getSyncPoller() {\n+        if (syncPoller == null) {\n+            syncPoller = new SyncPollerImpl<InnerT, T>(this.getPollerFlux().getSyncPoller(), wrapOperation);\n+        }\n+        return syncPoller;\n+    }\n+\n+    private PollerFlux<PollResult<InnerT>, InnerT> getPollerFlux() {\n+        if (pollerFlux == null) {\n+            Flux<ByteBuffer> content = Flux.just(ByteBuffer.wrap(getResponse()));\n+            Response<Flux<ByteBuffer>> clonedResponse = new SimpleResponse<>(activationResponse, content);\n+\n+            pollerFlux = PollerFactory.create(\n+                serializerAdapter,\n+                httpPipeline,\n+                pollResultType,\n+                finalResultType,\n+                SdkContext.getLroRetryDuration(),\n+                Mono.just(clonedResponse)\n+            );\n+        }\n+        return pollerFlux;\n+    }\n+\n+    @Override\n+    public T getFinalResult() {\n+        return this.getSyncPoller().getFinalResult();\n+    }\n+\n+    private byte[] getResponse() {\n+        if (responseBytes == null) {\n+            responseBytes = FluxUtil.collectBytesInByteBufferStream(activationResponse.getValue()).block();\n+        }\n+        return responseBytes;\n+    }\n+\n+    private static class SyncPollerImpl<InnerT, T>\n+        implements SyncPoller<Void, T> {\n+\n+        private final SyncPoller<PollResult<InnerT>, InnerT> syncPoller;\n+        private final Function<InnerT, T> wrapOperation;\n+        private T finalResult;\n+\n+        SyncPollerImpl(SyncPoller<PollResult<InnerT>, InnerT> syncPoller, Function<InnerT, T> wrapOperation) {\n+            this.syncPoller = syncPoller;\n+            this.wrapOperation = wrapOperation;\n+        }\n+\n+        @Override\n+        public PollResponse<Void> poll() {", "originalCommit": "06e171a8d239f0bcf3bbe31b33191660aca5fa81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faba85345e3d48136bf503a522023d8183ca8e97", "chunk": "diff --git a/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/implementation/AcceptedImpl.java b/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/implementation/AcceptedImpl.java\nindex 717a5a8f0a0..c19eddcf212 100644\n--- a/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/implementation/AcceptedImpl.java\n+++ b/sdk/resources/mgmt/src/main/java/com/azure/resourcemanager/resources/fluentcore/model/implementation/AcceptedImpl.java\n\n@@ -3,6 +3,7 @@\n \n package com.azure.resourcemanager.resources.fluentcore.model.implementation;\n \n+import com.azure.core.http.HttpHeaders;\n import com.azure.core.http.HttpPipeline;\n import com.azure.core.http.rest.Response;\n import com.azure.core.http.rest.SimpleResponse;\n"}}, {"oid": "faba85345e3d48136bf503a522023d8183ca8e97", "url": "https://github.com/Azure/azure-sdk-for-java/commit/faba85345e3d48136bf503a522023d8183ca8e97", "message": "use PollResponse<T> getAcceptedResult, to support retryAfter, and future for status", "committedDate": "2020-06-18T02:54:51Z", "type": "commit"}, {"oid": "50248d2c442224323afd8304688cf37f1bb56251", "url": "https://github.com/Azure/azure-sdk-for-java/commit/50248d2c442224323afd8304688cf37f1bb56251", "message": "use a new ActivationResponse, which is SimpleResponse + status & retryAfter", "committedDate": "2020-06-19T06:22:04Z", "type": "commit"}, {"oid": "8ff32e18e0d3257fb872cd71676900c05fda2d29", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ff32e18e0d3257fb872cd71676900c05fda2d29", "message": "fix checkstyle", "committedDate": "2020-06-19T07:22:22Z", "type": "commit"}, {"oid": "babd2ffa8dd07c1b5bc67fd7ba91878bf52f7b88", "url": "https://github.com/Azure/azure-sdk-for-java/commit/babd2ffa8dd07c1b5bc67fd7ba91878bf52f7b88", "message": "remove password method, already had it in TestBase", "committedDate": "2020-06-19T07:55:53Z", "type": "commit"}, {"oid": "f443daad11b1b848a65c806ab8ea7f1e4aa32f04", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f443daad11b1b848a65c806ab8ea7f1e4aa32f04", "message": "remove hardcoded password", "committedDate": "2020-06-19T07:57:15Z", "type": "commit"}, {"oid": "3a8244608425584ac4e029ba3ff250c7afdd78a9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a8244608425584ac4e029ba3ff250c7afdd78a9", "message": "fix compile error", "committedDate": "2020-06-19T08:02:34Z", "type": "commit"}, {"oid": "b5c82d0e534eb96881df4b8e4d18269fe61accfa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b5c82d0e534eb96881df4b8e4d18269fe61accfa", "message": "Merge branch 'master' into mgmt_draft_begin_op", "committedDate": "2020-06-22T06:34:16Z", "type": "commit"}, {"oid": "dd4d5f0f5abbfad81e0c7c9d192ba1f0892723ad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dd4d5f0f5abbfad81e0c7c9d192ba1f0892723ad", "message": "revert", "committedDate": "2020-06-22T06:36:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMjUxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r444022515", "bodyText": "Is there any usage of the authorizationManager?", "author": "ChenTanyi", "createdAt": "2020-06-23T07:37:51Z", "path": "sdk/compute/mgmt/src/main/java/com/azure/resourcemanager/compute/implementation/VirtualMachineImpl.java", "diffHunk": "@@ -184,6 +191,7 @@\n         super(name, innerModel, computeManager);\n         this.storageManager = storageManager;\n         this.networkManager = networkManager;\n+        this.authorizationManager = authorizationManager;", "originalCommit": "dd4d5f0f5abbfad81e0c7c9d192ba1f0892723ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzODU0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r444038541", "bodyText": "To create a new VirtualMachine, after polling is complete (line 1737)\n                inner -> new VirtualMachineImpl(inner.name(), inner, this.manager(),\n                    this.storageManager, this.networkManager, this.authorizationManager));", "author": "weidongxu-microsoft", "createdAt": "2020-06-23T08:05:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMjUxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzOTkwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12141#discussion_r444039903", "bodyText": "ok, I found it was used in a private resource", "author": "ChenTanyi", "createdAt": "2020-06-23T08:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMjUxNQ=="}], "type": "inlineReview", "revised_code": null}]}