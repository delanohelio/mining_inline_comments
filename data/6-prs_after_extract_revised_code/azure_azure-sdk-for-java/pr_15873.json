{"pr_number": 15873, "pr_title": "Azure Communication Administration - Add Phone Number Admin", "pr_createdAt": "2020-10-01T22:35:31Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15873", "timeline": [{"oid": "9cd9a5ac2e522ebfd0da255fa5a9c8459814e105", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9cd9a5ac2e522ebfd0da255fa5a9c8459814e105", "message": "Azure Communication Service - Phone Number Administration SDK (#15497)\n\n* Add Phone Number functionality to azure-communication-administration\n\n* Update checkstyle suppressions", "committedDate": "2020-10-01T21:53:36Z", "type": "commit"}, {"oid": "ae6c5648acf0ff626611f419437503fdd3e9ec58", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae6c5648acf0ff626611f419437503fdd3e9ec58", "message": "Azure Communication Services - Refactor PhoneNumberAsyncClient to Wrap Exceptions (#15794)\n\n* Catch exceptions and return error Mono/PagedFlux\r\n\r\n* Refactor PhoneNumberAsyncClient method overloads to consolidate logic", "committedDate": "2020-10-01T21:55:33Z", "type": "commit"}, {"oid": "c69b94637cd539a28ce3fec8ab96bafb73751b40", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c69b94637cd539a28ce3fec8ab96bafb73751b40", "message": "Azure Communication Service - Update Phone Number Admin Null Checks (#15811)\n\n* Add null checks for required method arguments\r\n\r\n* Remove setter null check to allow clearing of httpPipeline", "committedDate": "2020-10-01T21:55:33Z", "type": "commit"}, {"oid": "7c960f4e53055a9798f2ec368daaca7493036bc6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c960f4e53055a9798f2ec368daaca7493036bc6", "message": "Updating azure-communication-administration README with a few samples (#15816)\n\n* Updating javadoc with a few samples\n\n* resolve comments\n\n* Fixing spot check errors\n\n* fix typo", "committedDate": "2020-10-01T21:57:22Z", "type": "commit"}, {"oid": "a7cdece01859d6d56332b430dcdc8ae146fd777d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a7cdece01859d6d56332b430dcdc8ae146fd777d", "message": "Add Env Var check to skip PhoneNumber integration tests (#15855)", "committedDate": "2020-10-01T21:57:27Z", "type": "commit"}, {"oid": "18b9a5660df30fa2c02b05bcddb35fb51172b1ad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/18b9a5660df30fa2c02b05bcddb35fb51172b1ad", "message": "Samples and Readme update for Administration package (#15853)\n\n* More samples and readme changes\r\n\r\n* PR comments\r\n\r\n* build failure\r\n\r\n* fix indentation", "committedDate": "2020-10-01T21:57:28Z", "type": "commit"}, {"oid": "ae7f04ccb876eea86b4c1fe009f935f3b5279e7f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae7f04ccb876eea86b4c1fe009f935f3b5279e7f", "message": "azure-communication-administration - Regenerate Code for Updated Swagger (#15861)\n\n* Update swagger and regenerate code\r\n\r\n* Fix tests after code regeneration", "committedDate": "2020-10-01T21:57:28Z", "type": "commit"}, {"oid": "0fdcecc352250a06ff39f3a990a5e22b5d729386", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0fdcecc352250a06ff39f3a990a5e22b5d729386", "message": "Fix the param name", "committedDate": "2020-10-02T02:02:27Z", "type": "commit"}, {"oid": "3caca4dd660cf889d1885443b3d90f52b105bfd7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3caca4dd660cf889d1885443b3d90f52b105bfd7", "message": "updating the sample code", "committedDate": "2020-10-02T02:18:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMjUzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15873#discussion_r499132531", "bodyText": "Consider adding more documentation and also include sample codesnippets on how to create the client.", "author": "srnagar", "createdAt": "2020-10-03T09:31:46Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,760 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdministrationsImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.logging.ClientLogger;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+import static com.azure.core.util.FluxUtil.monoError;\n+import static com.azure.core.util.FluxUtil.pagedFluxError;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations", "originalCommit": "3caca4dd660cf889d1885443b3d90f52b105bfd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMjY3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15873#discussion_r499132677", "bodyText": "Methods that return reactive publishers should return error through Mono.error or Flux.error instead of throwing exceptions.", "author": "srnagar", "createdAt": "2020-10-03T09:34:08Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,760 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdministrationsImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.logging.ClientLogger;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+import static com.azure.core.util.FluxUtil.monoError;\n+import static com.azure.core.util.FluxUtil.pagedFluxError;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations\n+ */\n+@ServiceClient(builder = PhoneNumberClientBuilder.class, isAsync = true)\n+public final class PhoneNumberAsyncClient {\n+    private final ClientLogger logger = new ClientLogger(PhoneNumberAsyncClient.class);\n+\n+    private final PhoneNumberAdministrationsImpl phoneNumberAdministrations;\n+\n+    PhoneNumberAsyncClient(PhoneNumberAdminClientImpl phoneNumberAdminClient) {\n+        this.phoneNumberAdministrations = phoneNumberAdminClient.getPhoneNumberAdministrations();\n+    }\n+\n+    /**\n+     * Gets the list of the acquired phone numbers.\n+     *\n+     * @param locale A language-locale pairing which will be used to localise the names of countries.\n+     * @return A {@link PagedFlux} of {@link AcquiredPhoneNumber} instances representing acquired telephone numbers.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale) {\n+        return listAllPhoneNumbers(locale, null);\n+    }\n+\n+    PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale, Context context) {\n+        try {\n+            if (context == null) {\n+                return phoneNumberAdministrations.getAllPhoneNumbersAsync(locale, null, null);\n+            } else {\n+                return phoneNumberAdministrations.getAllPhoneNumbersAsync(locale, null, null, context);\n+            }\n+        } catch (RuntimeException ex) {\n+            return pagedFluxError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<AreaCodes> getAllAreaCodes(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        return getAllAreaCodesWithResponse(locationType, countryCode, phonePlanId, locationOptions)\n+            .flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue()} value returns\n+     * a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        return getAllAreaCodesWithResponse(locationType, countryCode, phonePlanId, locationOptions, null);\n+    }\n+\n+    Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions,\n+        Context context) {\n+        Objects.requireNonNull(locationType, \"'locationType' cannot be null.\");", "originalCommit": "3caca4dd660cf889d1885443b3d90f52b105bfd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMjgxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15873#discussion_r499132818", "bodyText": "This should be inside the try block.", "author": "srnagar", "createdAt": "2020-10-03T09:36:40Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberAsyncClient.java", "diffHunk": "@@ -0,0 +1,760 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdministrationsImpl;\n+import com.azure.communication.administration.models.AcquiredPhoneNumber;\n+import com.azure.communication.administration.models.AreaCodes;\n+import com.azure.communication.administration.models.CreateSearchOptions;\n+import com.azure.communication.administration.models.CreateSearchResponse;\n+import com.azure.communication.administration.models.LocationOptionsQueries;\n+import com.azure.communication.administration.models.LocationOptionsQuery;\n+import com.azure.communication.administration.models.LocationOptionsResponse;\n+import com.azure.communication.administration.models.NumberConfigurationPhoneNumber;\n+import com.azure.communication.administration.models.NumberConfigurationResponse;\n+import com.azure.communication.administration.models.NumberUpdateCapabilities;\n+import com.azure.communication.administration.models.PhoneNumberCountry;\n+import com.azure.communication.administration.models.PhoneNumberEntity;\n+import com.azure.communication.administration.models.PhoneNumberRelease;\n+import com.azure.communication.administration.models.PhonePlan;\n+import com.azure.communication.administration.models.PhonePlanGroup;\n+import com.azure.communication.administration.models.PstnConfiguration;\n+import com.azure.communication.administration.models.ReleaseRequest;\n+import com.azure.communication.administration.models.ReleaseResponse;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesResponse;\n+import com.azure.communication.administration.models.NumberConfiguration;\n+import com.azure.communication.administration.models.PhoneNumberSearch;\n+import com.azure.communication.administration.models.UpdateNumberCapabilitiesRequest;\n+import com.azure.communication.administration.models.UpdatePhoneNumberCapabilitiesResponse;\n+import com.azure.communication.common.PhoneNumber;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.logging.ClientLogger;\n+import reactor.core.publisher.Mono;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+import static com.azure.core.util.FluxUtil.monoError;\n+import static com.azure.core.util.FluxUtil.pagedFluxError;\n+\n+/**\n+ * Asynchronous client for Communication service phone number operations\n+ */\n+@ServiceClient(builder = PhoneNumberClientBuilder.class, isAsync = true)\n+public final class PhoneNumberAsyncClient {\n+    private final ClientLogger logger = new ClientLogger(PhoneNumberAsyncClient.class);\n+\n+    private final PhoneNumberAdministrationsImpl phoneNumberAdministrations;\n+\n+    PhoneNumberAsyncClient(PhoneNumberAdminClientImpl phoneNumberAdminClient) {\n+        this.phoneNumberAdministrations = phoneNumberAdminClient.getPhoneNumberAdministrations();\n+    }\n+\n+    /**\n+     * Gets the list of the acquired phone numbers.\n+     *\n+     * @param locale A language-locale pairing which will be used to localise the names of countries.\n+     * @return A {@link PagedFlux} of {@link AcquiredPhoneNumber} instances representing acquired telephone numbers.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale) {\n+        return listAllPhoneNumbers(locale, null);\n+    }\n+\n+    PagedFlux<AcquiredPhoneNumber> listAllPhoneNumbers(String locale, Context context) {\n+        try {\n+            if (context == null) {\n+                return phoneNumberAdministrations.getAllPhoneNumbersAsync(locale, null, null);\n+            } else {\n+                return phoneNumberAdministrations.getAllPhoneNumbersAsync(locale, null, null, context);\n+            }\n+        } catch (RuntimeException ex) {\n+            return pagedFluxError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<AreaCodes> getAllAreaCodes(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        return getAllAreaCodesWithResponse(locationType, countryCode, phonePlanId, locationOptions)\n+            .flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Gets a list of the supported area codes.\n+     *\n+     * @param locationType The type of location information required by the plan.\n+     * @param countryCode The ISO 3166-2 country code.\n+     * @param phonePlanId The plan id from which to search area codes.\n+     * @param locationOptions A {@link List} of {@link LocationOptionsQuery} for querying the area codes.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue()} value returns\n+     * a {@link AreaCodes} representing area codes.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions) {\n+        return getAllAreaCodesWithResponse(locationType, countryCode, phonePlanId, locationOptions, null);\n+    }\n+\n+    Mono<Response<AreaCodes>> getAllAreaCodesWithResponse(\n+        String locationType, String countryCode, String phonePlanId, List<LocationOptionsQuery> locationOptions,\n+        Context context) {\n+        Objects.requireNonNull(locationType, \"'locationType' cannot be null.\");\n+        Objects.requireNonNull(countryCode, \"'countryCode' cannot be null.\");\n+        Objects.requireNonNull(phonePlanId, \"'phonePlanId' cannot be null.\");\n+\n+        LocationOptionsQueries locationOptionsQueries = new LocationOptionsQueries();\n+        locationOptionsQueries.setLocationOptions(locationOptions);\n+\n+        try {\n+            if (context == null) {\n+                return phoneNumberAdministrations.getAllAreaCodesWithResponseAsync(\n+                    locationType, countryCode, phonePlanId, locationOptionsQueries);\n+            } else {\n+                return phoneNumberAdministrations.getAllAreaCodesWithResponseAsync(\n+                    locationType, countryCode, phonePlanId, locationOptionsQueries, context);\n+            }\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets the information for a phone number capabilities update\n+     *\n+     * @param capabilitiesId ID of the capabilities update.\n+     * @return A {@link Mono} containing\n+     * a {@link UpdatePhoneNumberCapabilitiesResponse} representing the capabilities update.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<UpdatePhoneNumberCapabilitiesResponse> getCapabilitiesUpdate(String capabilitiesId) {\n+        return getCapabilitiesUpdateWithResponse(capabilitiesId).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Gets the information for a phone number capabilities update\n+     *\n+     * @param capabilitiesId ID of the capabilities update.\n+     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue()} value returns\n+     * a {@link UpdatePhoneNumberCapabilitiesResponse} representing the capabilities update.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<UpdatePhoneNumberCapabilitiesResponse>> getCapabilitiesUpdateWithResponse(\n+        String capabilitiesId) {\n+        return getCapabilitiesUpdateWithResponse(capabilitiesId, null);\n+    }\n+\n+    Mono<Response<UpdatePhoneNumberCapabilitiesResponse>> getCapabilitiesUpdateWithResponse(\n+        String capabilitiesId, Context context) {\n+        Objects.requireNonNull(capabilitiesId, \"'capabilitiesId' cannot be null.\");", "originalCommit": "3caca4dd660cf889d1885443b3d90f52b105bfd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMzM0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15873#discussion_r499133340", "bodyText": "We should allow null value to be set here. If the httpClient is null we will use default client available on the classpath.", "author": "srnagar", "createdAt": "2020-10-03T09:43:57Z", "path": "sdk/communication/azure-communication-administration/src/main/java/com/azure/communication/administration/PhoneNumberClientBuilder.java", "diffHunk": "@@ -0,0 +1,264 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.administration;\n+\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImpl;\n+import com.azure.communication.administration.implementation.PhoneNumberAdminClientImplBuilder;\n+import com.azure.communication.common.CommunicationClientCredential;\n+import com.azure.communication.common.HmacAuthenticationPolicy;\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.HttpLogDetailLevel;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.CoreUtils;\n+import com.azure.core.util.logging.ClientLogger;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Builder for creating clients of Communication Service phone number configuration\n+ */\n+@ServiceClientBuilder(serviceClients = {PhoneNumberClient.class, PhoneNumberAsyncClient.class})\n+public final class PhoneNumberClientBuilder {\n+    private static final Map<String, String> PROPERTIES =\n+        CoreUtils.getProperties(\"azure-communication-administration.properties\");\n+    private static final String SDK_NAME = \"name\";\n+    private static final String SDK_VERSION = \"version\";\n+\n+    private final ClientLogger logger = new ClientLogger(PhoneNumberClientBuilder.class);\n+\n+    private PhoneNumberServiceVersion version;\n+    private String endpoint;\n+    private HttpPipeline pipeline;\n+    private HttpClient httpClient;\n+    private HttpLogOptions httpLogOptions;\n+    private CommunicationClientCredential credential;\n+    private Configuration configuration;\n+    private final List<HttpPipelinePolicy> additionalPolicies = new ArrayList<>();\n+\n+    /**\n+     * Set endpoint of the service\n+     *\n+     * @param endpoint url of the service\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code endpoint} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder endpoint(String endpoint) {\n+        this.endpoint = Objects.requireNonNull(endpoint, \"'endpoint' cannot be null.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the HTTP pipeline to use for the service client\n+     * <p>\n+     * If {@code pipeline} is set, all other settings aside from\n+     * {@link PhoneNumberClientBuilder#endpoint(String) endpoint} are ignored.\n+     *\n+     * @param pipeline HttpPipeline to use\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     */\n+    public PhoneNumberClientBuilder pipeline(HttpPipeline pipeline) {\n+        this.pipeline = pipeline;\n+        return this;\n+    }\n+\n+    /**\n+     * Set HttpClient to use\n+     *\n+     * @param httpClient HttpClient to use\n+     * @return The updated {@link PhoneNumberClientBuilder} object.\n+     * @throws NullPointerException If {@code httpClient} is {@code null}.\n+     */\n+    public PhoneNumberClientBuilder httpClient(HttpClient httpClient) {\n+        this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");", "originalCommit": "3caca4dd660cf889d1885443b3d90f52b105bfd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}