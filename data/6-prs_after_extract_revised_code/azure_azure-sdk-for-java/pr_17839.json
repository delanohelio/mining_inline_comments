{"pr_number": 17839, "pr_title": "Add incremental consent", "pr_createdAt": "2020-11-26T09:24:12Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17839", "timeline": [{"oid": "dcce3350a8410d59a5733b6351847c6a6942e230", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dcce3350a8410d59a5733b6351847c6a6942e230", "message": "add on demand properties", "committedDate": "2020-11-26T09:11:24Z", "type": "commit"}, {"oid": "cec7d8f76cf832499f065900ed064b736cb65e57", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cec7d8f76cf832499f065900ed064b736cb65e57", "message": "add incremental consent", "committedDate": "2020-11-26T09:14:03Z", "type": "commit"}, {"oid": "0192244eaa0a4d4db9a009f743aa14c68da5cbbc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0192244eaa0a4d4db9a009f743aa14c68da5cbbc", "message": "Use the user information obtained for the first time as the default user , only change Authorities", "committedDate": "2020-11-26T09:20:52Z", "type": "commit"}, {"oid": "a8d9ae094b1cace593f92e2b7508b1c5b4b09e39", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a8d9ae094b1cace593f92e2b7508b1c5b4b09e39", "message": "format code for pipeline", "committedDate": "2020-11-26T09:49:01Z", "type": "commit"}, {"oid": "642d77607a1e82f331687313b012b212d13e0512", "url": "https://github.com/Azure/azure-sdk-for-java/commit/642d77607a1e82f331687313b012b212d13e0512", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into add-incremental-consent", "committedDate": "2020-11-27T08:01:14Z", "type": "commit"}, {"oid": "75e2d50c8f3e1b73386eb2ee644187b4e7b19c0f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/75e2d50c8f3e1b73386eb2ee644187b4e7b19c0f", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into add-incremental-consent", "committedDate": "2020-11-27T08:28:27Z", "type": "commit"}, {"oid": "61cdaffffeba2539745f8d160fe1d0e648586878", "url": "https://github.com/Azure/azure-sdk-for-java/commit/61cdaffffeba2539745f8d160fe1d0e648586878", "message": "deleted authorities created by scope", "committedDate": "2020-11-27T09:51:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5OTI0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r532299248", "bodyText": "\"defaultOidcUser\" appeared more than one time. Maybe we can define:\nprivate static final String DEFAULT_OIDC_USER = \"defaultOidcUser\";", "author": "chenrujun", "createdAt": "2020-11-30T01:03:31Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryOAuth2UserService.java", "diffHunk": "@@ -48,6 +55,13 @@ public AzureActiveDirectoryOAuth2UserService(\n     public OidcUser loadUser(OidcUserRequest userRequest) throws OAuth2AuthenticationException {\n         // Delegate to the default implementation for loading a user\n         OidcUser oidcUser = oidcUserService.loadUser(userRequest);\n+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+\n+        if (authentication != null) {\n+            DefaultOidcUser defaultOidcUser = (DefaultOidcUser) session.getAttribute(\"defaultOidcUser\");", "originalCommit": "61cdaffffeba2539745f8d160fe1d0e648586878", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5OTM5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r532299393", "bodyText": "And did you test it? Whether DefaultOidcUser serialize / deserialize well?", "author": "chenrujun", "createdAt": "2020-11-30T01:04:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5OTI0OA=="}], "type": "inlineReview", "revised_code": {"commit": "240a1e3a64fea2892e495409380a477987b638ac", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryOAuth2UserService.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryOAuth2UserService.java\nindex 808b508ebf1..ef17ddbde19 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryOAuth2UserService.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryOAuth2UserService.java\n\n@@ -56,10 +56,11 @@ public class AzureActiveDirectoryOAuth2UserService implements OAuth2UserService<\n         // Delegate to the default implementation for loading a user\n         OidcUser oidcUser = oidcUserService.loadUser(userRequest);\n         Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n+        ServletRequestAttributes attr = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();\n+        HttpSession session = attr.getRequest().getSession(true);\n \n         if (authentication != null) {\n-            DefaultOidcUser defaultOidcUser = (DefaultOidcUser) session.getAttribute(\"defaultOidcUser\");\n-            return defaultOidcUser;\n+            return (DefaultOidcUser) session.getAttribute(DEFAULT_OIDC_USER);\n         }\n \n         Set<String> groups = Optional.of(userRequest)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI5OTY3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r532299672", "bodyText": "Can we update method isAuthzClient, add getOnDemand logic in method isAuthzClient?", "author": "chenrujun", "createdAt": "2020-11-30T01:06:23Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureAuthorizedClientRepository.java", "diffHunk": "@@ -52,7 +52,7 @@ public void saveAuthorizedClient(OAuth2AuthorizedClient client,\n             return (T) result;\n         }\n \n-        if (repo.isAuthzClient(id)) {\n+        if (repo.isAuthzClient(id) && !repo.getAuthorizationProperties().get(id).getOnDemand()) {", "originalCommit": "61cdaffffeba2539745f8d160fe1d0e648586878", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "240a1e3a64fea2892e495409380a477987b638ac", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureAuthorizedClientRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureAuthorizedClientRepository.java\nindex a4f8d5b4efa..49fa0d7448c 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureAuthorizedClientRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureAuthorizedClientRepository.java\n\n@@ -52,7 +52,7 @@ public class AzureAuthorizedClientRepository implements OAuth2AuthorizedClientRe\n             return (T) result;\n         }\n \n-        if (repo.isAuthzClient(id) && !repo.getAuthorizationProperties().get(id).getOnDemand()) {\n+        if (repo.isAuthzClient(id)) {\n             OAuth2AuthorizedClient client = loadAuthorizedClient(defaultClientRegistrationId(), principal, request);\n             return (T) createInitAuthzClient(client, id, principal);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMwMDA2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r532300063", "bodyText": "authorizationProperties is not used in AzureClientRegistrationRepository?", "author": "chenrujun", "createdAt": "2020-11-30T01:08:54Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java", "diffHunk": "@@ -19,11 +19,15 @@\n     private final AzureClientRegistration azureClient;\n     private final List<ClientRegistration> otherClients;\n     private final Map<String, ClientRegistration> allClients;\n+    private Map<String, AuthorizationProperties> authorizationProperties;", "originalCommit": "61cdaffffeba2539745f8d160fe1d0e648586878", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\nindex a03869f8de7..1cd1fd03725 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n\n@@ -19,11 +20,11 @@ public class AzureClientRegistrationRepository implements ClientRegistrationRepo\n     private final AzureClientRegistration azureClient;\n     private final List<ClientRegistration> otherClients;\n     private final Map<String, ClientRegistration> allClients;\n-    private Map<String, AuthorizationProperties> authorizationProperties;\n+    private AADAuthenticationProperties authorizationProperties;\n \n     public AzureClientRegistrationRepository(AzureClientRegistration azureClient,\n                                              List<ClientRegistration> otherClients,\n-                                             Map<String, AuthorizationProperties> authorizationProperties) {\n+                                             AADAuthenticationProperties authorizationProperties) {\n         this.azureClient = azureClient;\n         this.otherClients = new ArrayList<>(otherClients);\n         this.authorizationProperties = authorizationProperties;\n"}}, {"oid": "240a1e3a64fea2892e495409380a477987b638ac", "url": "https://github.com/Azure/azure-sdk-for-java/commit/240a1e3a64fea2892e495409380a477987b638ac", "message": "change the way to get session and optimized code", "committedDate": "2020-11-30T06:49:37Z", "type": "commit"}, {"oid": "4919d562114517561a0d29324104ee15f420c324", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4919d562114517561a0d29324104ee15f420c324", "message": "remove unused import", "committedDate": "2020-11-30T07:07:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxMjM3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533012379", "bodyText": "Can we use the following code?\n    private boolean onDemand = false;\n\n    public boolean isOnDemand() {\n        return onDemand;\n    }\n\n    public void setOnDemand(boolean onDemand) {\n        this.onDemand = onDemand;\n    }\n\n\nUse boolean instead of Boolean. 'Boxing' is not necessary.\n2, isOnDemand is easier to understand than getOnDemand", "author": "chenrujun", "createdAt": "2020-12-01T01:27:01Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AuthorizationProperties.java", "diffHunk": "@@ -9,11 +9,21 @@\n \n     private List<String> scopes;\n \n+    private Boolean onDemand = false;\n+", "originalCommit": "4919d562114517561a0d29324104ee15f420c324", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AuthorizationProperties.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AuthorizationProperties.java\nindex 4c4b88db545..5fec91069d1 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AuthorizationProperties.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AuthorizationProperties.java\n\n@@ -9,7 +9,7 @@ public class AuthorizationProperties {\n \n     private List<String> scopes;\n \n-    private Boolean onDemand = false;\n+    private boolean onDemand = false;\n \n     public void setScopes(List<String> scopes) {\n         this.scopes = scopes;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxNjE5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533016199", "bodyText": "Can we pass properties instead of properties.getAuthorization()? Maybe we need other property item in AzureClientRegistrationRepository.", "author": "chenrujun", "createdAt": "2020-12-01T01:38:39Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -41,7 +41,8 @@\n     public AzureClientRegistrationRepository clientRegistrationRepository() {\n         return new AzureClientRegistrationRepository(\n             createDefaultClient(),\n-            createAuthzClients());\n+            createAuthzClients(),\n+            properties.getAuthorization());", "originalCommit": "4919d562114517561a0d29324104ee15f420c324", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java\nindex 461ba5b24cd..5fd2965ed2f 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java\n\n@@ -42,7 +42,7 @@ public class AzureActiveDirectoryConfiguration {\n         return new AzureClientRegistrationRepository(\n             createDefaultClient(),\n             createAuthzClients(),\n-            properties.getAuthorization());\n+            properties);\n     }\n \n     @Bean\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDM0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533020341", "bodyText": "getAuthorizationProperties is not necessary.", "author": "chenrujun", "createdAt": "2020-12-01T01:51:34Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java", "diffHunk": "@@ -56,6 +60,14 @@ public boolean isAuthzClient(ClientRegistration client) {\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client);\n+        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();\n+    }\n+\n+    public Map<String, AuthorizationProperties> getAuthorizationProperties() {", "originalCommit": "4919d562114517561a0d29324104ee15f420c324", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\nindex 2065c10f9bc..1cd1fd03725 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n\n@@ -55,19 +56,14 @@ public class AzureClientRegistrationRepository implements ClientRegistrationRepo\n     }\n \n     public boolean isAuthzClient(ClientRegistration client) {\n-        return otherClients.contains(client);\n+        return otherClients.contains(client) &&\n+            authorizationProperties.getAuthorization().get(client.getClientName()) != null &&\n+            !authorizationProperties.getAuthorization().get(client.getClientName()).isOnDemand();\n     }\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();\n+        return client != null && isAuthzClient(client);\n     }\n \n-    public Map<String, AuthorizationProperties> getAuthorizationProperties() {\n-        return authorizationProperties;\n-    }\n-\n-    public void setAuthorizationProperties(Map<String, AuthorizationProperties> authorizationProperties) {\n-        this.authorizationProperties = authorizationProperties;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDQ1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533020451", "bodyText": "setAuthorizationProperties is not necessary.", "author": "chenrujun", "createdAt": "2020-12-01T01:51:49Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java", "diffHunk": "@@ -56,6 +60,14 @@ public boolean isAuthzClient(ClientRegistration client) {\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client);\n+        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();\n+    }\n+\n+    public Map<String, AuthorizationProperties> getAuthorizationProperties() {\n+        return authorizationProperties;\n+    }\n+\n+    public void setAuthorizationProperties(Map<String, AuthorizationProperties> authorizationProperties) {", "originalCommit": "4919d562114517561a0d29324104ee15f420c324", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\nindex 2065c10f9bc..1cd1fd03725 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n\n@@ -55,19 +56,14 @@ public class AzureClientRegistrationRepository implements ClientRegistrationRepo\n     }\n \n     public boolean isAuthzClient(ClientRegistration client) {\n-        return otherClients.contains(client);\n+        return otherClients.contains(client) &&\n+            authorizationProperties.getAuthorization().get(client.getClientName()) != null &&\n+            !authorizationProperties.getAuthorization().get(client.getClientName()).isOnDemand();\n     }\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();\n+        return client != null && isAuthzClient(client);\n     }\n \n-    public Map<String, AuthorizationProperties> getAuthorizationProperties() {\n-        return authorizationProperties;\n-    }\n-\n-    public void setAuthorizationProperties(Map<String, AuthorizationProperties> authorizationProperties) {\n-        this.authorizationProperties = authorizationProperties;\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyMDg5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533020893", "bodyText": "Maybe we should move  && !authorizationProperties.get(id).getOnDemand() to public boolean isAuthzClient(String id).\nAnd enrich AzureActiveDirectoryConfigurationTest.", "author": "chenrujun", "createdAt": "2020-12-01T01:53:13Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java", "diffHunk": "@@ -56,6 +60,14 @@ public boolean isAuthzClient(ClientRegistration client) {\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client);\n+        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();", "originalCommit": "4919d562114517561a0d29324104ee15f420c324", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45d3c37e889b6113f8a4556f1eed8ee771138970", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\nindex 2065c10f9bc..1cd1fd03725 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n\n@@ -55,19 +56,14 @@ public class AzureClientRegistrationRepository implements ClientRegistrationRepo\n     }\n \n     public boolean isAuthzClient(ClientRegistration client) {\n-        return otherClients.contains(client);\n+        return otherClients.contains(client) &&\n+            authorizationProperties.getAuthorization().get(client.getClientName()) != null &&\n+            !authorizationProperties.getAuthorization().get(client.getClientName()).isOnDemand();\n     }\n \n     public boolean isAuthzClient(String id) {\n         ClientRegistration client = findByRegistrationId(id);\n-        return client != null && isAuthzClient(client) && !authorizationProperties.get(id).getOnDemand();\n+        return client != null && isAuthzClient(client);\n     }\n \n-    public Map<String, AuthorizationProperties> getAuthorizationProperties() {\n-        return authorizationProperties;\n-    }\n-\n-    public void setAuthorizationProperties(Map<String, AuthorizationProperties> authorizationProperties) {\n-        this.authorizationProperties = authorizationProperties;\n-    }\n }\n"}}, {"oid": "45d3c37e889b6113f8a4556f1eed8ee771138970", "url": "https://github.com/Azure/azure-sdk-for-java/commit/45d3c37e889b6113f8a4556f1eed8ee771138970", "message": "optimized code and add test", "committedDate": "2020-12-01T03:47:40Z", "type": "commit"}, {"oid": "45d3c37e889b6113f8a4556f1eed8ee771138970", "url": "https://github.com/Azure/azure-sdk-for-java/commit/45d3c37e889b6113f8a4556f1eed8ee771138970", "message": "optimized code and add test", "committedDate": "2020-12-01T03:47:40Z", "type": "forcePushed"}, {"oid": "ff92a4062f983337765fede290dbbd2a13396af1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ff92a4062f983337765fede290dbbd2a13396af1", "message": "merge from master", "committedDate": "2020-12-01T04:52:26Z", "type": "commit"}, {"oid": "a68ea3ecff78c8e98d51f88285ca7f07494eb75b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a68ea3ecff78c8e98d51f88285ca7f07494eb75b", "message": "add test for properties of onDemand", "committedDate": "2020-12-01T05:07:08Z", "type": "commit"}, {"oid": "a19a188d3d978a524d5ab714a9d7a538dddb4a6f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a19a188d3d978a524d5ab714a9d7a538dddb4a6f", "message": "code format", "committedDate": "2020-12-01T05:34:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNzYwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533117609", "bodyText": "authorizationProperties -> properties", "author": "chenrujun", "createdAt": "2020-12-01T07:17:18Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java", "diffHunk": "@@ -19,11 +20,15 @@\n     private final AzureClientRegistration azureClient;\n     private final List<ClientRegistration> otherClients;\n     private final Map<String, ClientRegistration> allClients;\n+    private AADAuthenticationProperties authorizationProperties;\n \n     public AzureClientRegistrationRepository(AzureClientRegistration azureClient,\n-                                             List<ClientRegistration> otherClients) {\n+                                             List<ClientRegistration> otherClients,\n+                                             AADAuthenticationProperties authorizationProperties) {", "originalCommit": "a19a188d3d978a524d5ab714a9d7a538dddb4a6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eff32ef5fc7aadbaa42b591db0af1c4ad931acfb", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\nindex bcd2c246068..3bbbba137c8 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureClientRegistrationRepository.java\n\n@@ -20,14 +20,14 @@ public class AzureClientRegistrationRepository implements ClientRegistrationRepo\n     private final AzureClientRegistration azureClient;\n     private final List<ClientRegistration> otherClients;\n     private final Map<String, ClientRegistration> allClients;\n-    private AADAuthenticationProperties authorizationProperties;\n+    private AADAuthenticationProperties properties;\n \n     public AzureClientRegistrationRepository(AzureClientRegistration azureClient,\n                                              List<ClientRegistration> otherClients,\n-                                             AADAuthenticationProperties authorizationProperties) {\n+                                             AADAuthenticationProperties properties) {\n         this.azureClient = azureClient;\n         this.otherClients = new ArrayList<>(otherClients);\n-        this.authorizationProperties = authorizationProperties;\n+        this.properties = properties;\n \n         allClients = new HashMap<>();\n         addClientRegistration(azureClient.getClient());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODY4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533118682", "bodyText": "https://graph.microsoft.com/User.Read belong to graph client, so https://graph.microsoft.com/User.Read should not exist in DefaultScopes, is that right?", "author": "chenrujun", "createdAt": "2020-12-01T07:19:59Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfigurationTest.java", "diffHunk": "@@ -163,6 +163,38 @@ public void customizeUri() {\n         assertEquals(endpoints.jwkSetEndpoint(\"fake-tenant-id\"), azure.getProviderDetails().getJwkSetUri());\n     }\n \n+    @Test\n+    public void clientRequiresOnDemandPermissions() {\n+        AnnotationConfigApplicationContext context = getContext();\n+        TestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\n+            \"azure.activedirectory.authorization.graph.scopes = Calendars.Read\",\n+            \"azure.activedirectory.authorization.graph.on-demand = true\",\n+            \"azure.activedirectory.authorization.arm.scopes = https://management.core.windows.net/user_impersonation\"\n+        );\n+        context.refresh();\n+\n+        AzureClientRegistrationRepository repo = context.getBean(AzureClientRegistrationRepository.class);\n+        ClientRegistration azure = repo.findByRegistrationId(\"azure\");\n+        ClientRegistration graph = repo.findByRegistrationId(\"graph\");\n+        ClientRegistration arm = repo.findByRegistrationId(\"arm\");\n+\n+        assertNotNull(azure);\n+        assertDefaultScopes(\n+            azure,\n+            \"openid\",\n+            \"profile\",\n+            \"https://graph.microsoft.com/User.Read\",", "originalCommit": "a19a188d3d978a524d5ab714a9d7a538dddb4a6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyNjcwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533126704", "bodyText": "https://graph.microsoft.com/User.Read belong to default client if allowedGroups is not null.\n\n  \n    \n      azure-sdk-for-java/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryConfiguration.java\n    \n    \n        Lines 77 to 84\n      in\n      d1d7fe0\n    \n    \n    \n    \n\n        \n          \n           private Set<String> accessTokenScopes() { \n        \n\n        \n          \n               Set<String> result = openidScopes(); \n        \n\n        \n          \n               if (properties.allowedGroupsConfigured()) { \n        \n\n        \n          \n                   result.add(\"https://graph.microsoft.com/User.Read\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               addAzureConfiguredScopes(result); \n        \n\n        \n          \n               return result; \n        \n\n        \n          \n           }", "author": "zhichengliu12581", "createdAt": "2020-12-01T07:39:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODY4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEzNDcxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17839#discussion_r533134710", "bodyText": "It make sense.", "author": "chenrujun", "createdAt": "2020-12-01T07:56:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExODY4Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "eff32ef5fc7aadbaa42b591db0af1c4ad931acfb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eff32ef5fc7aadbaa42b591db0af1c4ad931acfb", "message": "code format", "committedDate": "2020-12-01T07:45:44Z", "type": "commit"}]}