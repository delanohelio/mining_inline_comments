{"pr_number": 8833, "pr_title": "Nio delete", "pr_createdAt": "2020-03-07T01:17:38Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8833", "timeline": [{"oid": "2efe2c115e70c4f07a6467e5ff3ec83a51e2d65d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2efe2c115e70c4f07a6467e5ff3ec83a51e2d65d", "message": "Worked on copy and some helpers", "committedDate": "2020-02-26T19:55:04Z", "type": "commit"}, {"oid": "c4d256ccd316b1be5f939e2de7be7ba0f5978cf4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4d256ccd316b1be5f939e2de7be7ba0f5978cf4", "message": "Added copy", "committedDate": "2020-02-26T20:03:17Z", "type": "commit"}, {"oid": "2e07f1e8e12eca5de38b463157b86bd4cc2b3177", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2e07f1e8e12eca5de38b463157b86bd4cc2b3177", "message": "More tests", "committedDate": "2020-02-26T20:11:30Z", "type": "commit"}, {"oid": "4e3ca5a5a95c3fe2c945e755ba58ee406f0e1bbc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4e3ca5a5a95c3fe2c945e755ba58ee406f0e1bbc", "message": "Cleanup and recordings", "committedDate": "2020-02-26T20:11:58Z", "type": "commit"}, {"oid": "7297ab8ac6d23abe0320a90a958976358c45e20e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7297ab8ac6d23abe0320a90a958976358c45e20e", "message": "Pom/style/resources cleanup", "committedDate": "2020-02-26T20:12:37Z", "type": "commit"}, {"oid": "3bf83d19a92b5aec5f890152e811949d6f3b28e1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3bf83d19a92b5aec5f890152e811949d6f3b28e1", "message": "Reverted core dependency", "committedDate": "2020-02-26T21:39:53Z", "type": "commit"}, {"oid": "11224f2bc546bf26c9e3986dec155cee18f8d2f1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/11224f2bc546bf26c9e3986dec155cee18f8d2f1", "message": "PR feedback", "committedDate": "2020-03-06T00:42:19Z", "type": "commit"}, {"oid": "191337e74eb8250cef93169f43097cee82c2586e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/191337e74eb8250cef93169f43097cee82c2586e", "message": "Checkstyle", "committedDate": "2020-03-06T18:49:23Z", "type": "commit"}, {"oid": "372408acf0c085964f5249014cf61117ba2ea7e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/372408acf0c085964f5249014cf61117ba2ea7e3", "message": "Added delete", "committedDate": "2020-03-07T00:49:45Z", "type": "commit"}, {"oid": "505a17cc40e797a68b5c87be556fdcd2f231c35e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/505a17cc40e797a68b5c87be556fdcd2f231c35e", "message": "Refactored some tests", "committedDate": "2020-03-07T00:50:06Z", "type": "commit"}, {"oid": "3d0d7b483e996f3ee9a365bb795b89af132ce12b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d0d7b483e996f3ee9a365bb795b89af132ce12b", "message": "added hooks for recording", "committedDate": "2020-03-07T00:50:19Z", "type": "commit"}, {"oid": "e4766bf46b68c89762f8b741d55dd0a69e956be3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e4766bf46b68c89762f8b741d55dd0a69e956be3", "message": "A bit more test cleanup and added correct recordings", "committedDate": "2020-03-07T00:50:31Z", "type": "commit"}, {"oid": "a13c60387763df4549a96cf8be1aedf7ba75c773", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a13c60387763df4549a96cf8be1aedf7ba75c773", "message": "Fixed up path a bit and added new recordings", "committedDate": "2020-03-07T00:50:48Z", "type": "commit"}, {"oid": "2fa3b612ae31115f68b9e9fbe1c56d70ea375151", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2fa3b612ae31115f68b9e9fbe1c56d70ea375151", "message": "Added delete tests", "committedDate": "2020-03-07T00:51:03Z", "type": "commit"}, {"oid": "4fbc61eb8d100c7f9a08f37016f7b40c93b28320", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4fbc61eb8d100c7f9a08f37016f7b40c93b28320", "message": "Merge remote-tracking branch 'upstream/master' into nioDelete2", "committedDate": "2020-03-07T01:15:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxMjUxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r389212511", "bodyText": "Oops!", "author": "rickle-msft", "createdAt": "2020-03-07T01:20:59Z", "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzurePath.java", "diffHunk": "@@ -531,10 +555,24 @@ BlobClient toBlobClient() throws IOException {\n \n         String blobName = this.withoutRoot();\n         if (blobName.isEmpty()) {\n+<<<<<<< HEAD", "originalCommit": "4fbc61eb8d100c7f9a08f37016f7b40c93b28320", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f6697f44603982e22527e83bc9573b895dc37ee", "chunk": "diff --git a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzurePath.java b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzurePath.java\nindex 345805abf24..3c43bb94578 100644\n--- a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzurePath.java\n+++ b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzurePath.java\n\n@@ -555,7 +555,6 @@ public final class AzurePath implements Path {\n \n         String blobName = this.withoutRoot();\n         if (blobName.isEmpty()) {\n-<<<<<<< HEAD\n             throw new IOException(\"Cannot get a blob client to a path that only contains the root or is an empty path\");\n         }\n \n"}}, {"oid": "9f6697f44603982e22527e83bc9573b895dc37ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f6697f44603982e22527e83bc9573b895dc37ee", "message": "Fixed minor errors", "committedDate": "2020-03-09T17:46:25Z", "type": "commit"}, {"oid": "84c9a9f2cb0ebe6a354bf8bbb0cba3d731c6f360", "url": "https://github.com/Azure/azure-sdk-for-java/commit/84c9a9f2cb0ebe6a354bf8bbb0cba3d731c6f360", "message": "Fixed test recording", "committedDate": "2020-03-09T20:10:00Z", "type": "commit"}, {"oid": "1bdc841fbcb4fbea874463db8a43b489d8899c93", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1bdc841fbcb4fbea874463db8a43b489d8899c93", "message": "Checkstyle", "committedDate": "2020-03-09T20:36:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5ODQ0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r391098442", "bodyText": "I don't think we need to call out what the NIO documents state explicitly, let's just include it as a statement in our docs. Would also like to change the first line to call out what exactly this method does, such as This API deletes the specified path/file, then adding the ancillary info like this isn't atomic, what can't be deleted, etc.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * As noted by the NIO docs, this method is not atomic. It is possible to delete a file in use by another process,\n          \n          \n            \n                 * and doing so will not immediately invalidate any channels open to that file--they will simply start to fail.\n          \n          \n            \n                 * Root directories cannot be deleted even when empty.\n          \n          \n            \n                 * Deletes the specified path.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * This method is not atomic, it is possible to delete a file in use by another process. Open channels to the file won't immediately invalidate, they will simply start to fail.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * Root directories cannot be deleted even when empty.", "author": "alzimmermsft", "createdAt": "2020-03-11T16:25:33Z", "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -363,11 +358,36 @@ BlobContainerClient getContainerClient(BlobClient client) {\n     }\n \n     /**\n+     * As noted by the NIO docs, this method is not atomic. It is possible to delete a file in use by another process,\n+     * and doing so will not immediately invalidate any channels open to that file--they will simply start to fail.\n+     * Root directories cannot be deleted even when empty.", "originalCommit": "1bdc841fbcb4fbea874463db8a43b489d8899c93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyODgyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r391128827", "bodyText": "If we really want to call out the NIO doc, we could also just link it", "author": "gapra-msft", "createdAt": "2020-03-11T17:10:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5ODQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNjM1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r392436351", "bodyText": "Below the javadocs I've written, I always inherit the javadocs from the parent, so all the extra info should be there anyway. I'll update the docs to remove the NIO reference and change the first sentence.", "author": "rickle-msft", "createdAt": "2020-03-13T19:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5ODQ0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8e301cd88fcb83caf34ced30e2714ba3b657477b", "chunk": "diff --git a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\nindex 95df8804118..f9bef6c81d0 100644\n--- a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\n+++ b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\n\n@@ -358,7 +360,9 @@ public final class AzureFileSystemProvider extends FileSystemProvider {\n     }\n \n     /**\n-     * As noted by the NIO docs, this method is not atomic. It is possible to delete a file in use by another process,\n+     * Deletes the specified resource.\n+     * <p>\n+     * This method is not atomic. It is possible to delete a file in use by another process,\n      * and doing so will not immediately invalidate any channels open to that file--they will simply start to fail.\n      * Root directories cannot be deleted even when empty.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMDU0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r391100541", "bodyText": "Do we want to log and throw an exception if the exception is that the blob doesn't exist? I'm good with either, just a theoretical question on what delete on something that doesn't exist means.", "author": "alzimmermsft", "createdAt": "2020-03-11T16:28:34Z", "path": "sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java", "diffHunk": "@@ -363,11 +358,36 @@ BlobContainerClient getContainerClient(BlobClient client) {\n     }\n \n     /**\n+     * As noted by the NIO docs, this method is not atomic. It is possible to delete a file in use by another process,\n+     * and doing so will not immediately invalidate any channels open to that file--they will simply start to fail.\n+     * Root directories cannot be deleted even when empty.\n+     *\n      * {@inheritDoc}\n      */\n     @Override\n     public void delete(Path path) throws IOException {\n+        // Basic validation. Must be an AzurePath. Cannot be a root.\n+        AzurePath aPath = validatePathInstanceType(path);\n+        validateNotRoot(path, \"Delete\");\n+\n+        // Get client.\n+        BlobClient blobClient = aPath.toBlobClient();\n+\n+        // Check directory status--possibly throw DirectoryNotEmpty or NoSuchFile.\n+        DirectoryStatus dirStatus = checkDirStatus(blobClient);\n+        if (dirStatus.equals(DirectoryStatus.DOES_NOT_EXIST)) {\n+            throw Utility.logError(logger, new NoSuchFileException(path.toString()));\n+        }\n+        if (dirStatus.equals(DirectoryStatus.NOT_EMPTY)) {\n+            throw Utility.logError(logger, new DirectoryNotEmptyException(path.toString()));\n+        }\n \n+        // After all validation has completed, delete the resource.\n+        try {\n+            blobClient.delete();\n+        } catch (BlobStorageException e) {\n+            throw Utility.logError(logger, new IOException(e));", "originalCommit": "1bdc841fbcb4fbea874463db8a43b489d8899c93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzMTIwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r391131205", "bodyText": "Won't checkDirStatus do the blob doesn't exist validation for us? It gets the container client and lists paths with path = blob name and returns diff codes depending on the number of elements underneath it", "author": "gapra-msft", "createdAt": "2020-03-11T17:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMDU0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzMTQ2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r391131469", "bodyText": "I suppose something could also happen between that check and the delete", "author": "gapra-msft", "createdAt": "2020-03-11T17:14:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMDU0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0MzExNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8833#discussion_r392543114", "bodyText": "It's true we do check for no such blob based on the dir status earlier and also true that something else could happen in between. I added a specific case for a BlobNotFound error code and throw a NoSuchFileException in that case as well.\nI would prefer to throw in the case of no such file because the docs say we can, so it's more informative and because there's a deleteIfExists api that customers can call if they don't want the exception behavior.", "author": "rickle-msft", "createdAt": "2020-03-14T01:13:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMDU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8e301cd88fcb83caf34ced30e2714ba3b657477b", "chunk": "diff --git a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\nindex 95df8804118..f9bef6c81d0 100644\n--- a/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\n+++ b/sdk/storage/azure-storage-blob-nio/src/main/java/com/azure/storage/blob/nio/AzureFileSystemProvider.java\n\n@@ -358,7 +360,9 @@ public final class AzureFileSystemProvider extends FileSystemProvider {\n     }\n \n     /**\n-     * As noted by the NIO docs, this method is not atomic. It is possible to delete a file in use by another process,\n+     * Deletes the specified resource.\n+     * <p>\n+     * This method is not atomic. It is possible to delete a file in use by another process,\n      * and doing so will not immediately invalidate any channels open to that file--they will simply start to fail.\n      * Root directories cannot be deleted even when empty.\n      *\n"}}, {"oid": "8e301cd88fcb83caf34ced30e2714ba3b657477b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8e301cd88fcb83caf34ced30e2714ba3b657477b", "message": "PR feedback", "committedDate": "2020-03-14T01:14:48Z", "type": "commit"}]}