{"pr_number": 13090, "pr_title": "Added code for tag conditions", "pr_createdAt": "2020-07-13T17:16:58Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13090", "timeline": [{"oid": "83e8d49f94e957569af8d8be841a80e8ad6eae2c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/83e8d49f94e957569af8d8be841a80e8ad6eae2c", "message": "Added Options classes", "committedDate": "2020-07-01T18:52:07Z", "type": "commit"}, {"oid": "fccea10a4bcd0290b595720f4bc47c7604110a35", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fccea10a4bcd0290b595720f4bc47c7604110a35", "message": "Prepped lease clients to add tags", "committedDate": "2020-07-02T22:22:12Z", "type": "commit"}, {"oid": "5096e608753b6fc691e3921aa500410b7b72142b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5096e608753b6fc691e3921aa500410b7b72142b", "message": "Merge branch 'master' into storage/tagConditions", "committedDate": "2020-07-08T19:22:40Z", "type": "commit"}, {"oid": "31b46d2ae20cfcdca6f88721b4d592ed08e164af", "url": "https://github.com/Azure/azure-sdk-for-java/commit/31b46d2ae20cfcdca6f88721b4d592ed08e164af", "message": "Regenerated code for tags", "committedDate": "2020-07-08T19:38:59Z", "type": "commit"}, {"oid": "16e511c7a4e30141c1c62ecc6c5de48d438cecc1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/16e511c7a4e30141c1c62ecc6c5de48d438cecc1", "message": "Added recordings for ifTags tests", "committedDate": "2020-07-08T21:28:58Z", "type": "commit"}, {"oid": "3f424d2c81d6c70fdc634b69e4dca03358c1629e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f424d2c81d6c70fdc634b69e4dca03358c1629e", "message": "Added tags to a bunch of APIs in BlobBase", "committedDate": "2020-07-09T16:42:13Z", "type": "commit"}, {"oid": "7429428b108be741cda398d424c634d864e79435", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7429428b108be741cda398d424c634d864e79435", "message": "Added tests for set tier tags", "committedDate": "2020-07-09T17:37:22Z", "type": "commit"}, {"oid": "653f3c1b0e6bae188b70ea1424bdc7bf378ef3a4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/653f3c1b0e6bae188b70ea1424bdc7bf378ef3a4", "message": "Added tags to rest of the APIs", "committedDate": "2020-07-10T22:25:14Z", "type": "commit"}, {"oid": "bf5ed7c748907b4fc410ed3231df674f405ac716", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bf5ed7c748907b4fc410ed3231df674f405ac716", "message": "Added snapshot tests", "committedDate": "2020-07-10T22:32:39Z", "type": "commit"}, {"oid": "70999a773a1c20074cc0aa50973c6ac77ad2913c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/70999a773a1c20074cc0aa50973c6ac77ad2913c", "message": "Added get blob and get properties tests", "committedDate": "2020-07-10T22:40:55Z", "type": "commit"}, {"oid": "890abdf363123bbe1fd694ebc2defe699c182e04", "url": "https://github.com/Azure/azure-sdk-for-java/commit/890abdf363123bbe1fd694ebc2defe699c182e04", "message": "Added set metadata and properties tests", "committedDate": "2020-07-10T22:45:41Z", "type": "commit"}, {"oid": "fbc8d93bd2860a8334051577e6b24c5a0ef8bf47", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fbc8d93bd2860a8334051577e6b24c5a0ef8bf47", "message": "Added delete test", "committedDate": "2020-07-10T22:48:05Z", "type": "commit"}, {"oid": "24e9d87cb343c1fda46204c26fd5b0b445405e53", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24e9d87cb343c1fda46204c26fd5b0b445405e53", "message": "Added copy tests", "committedDate": "2020-07-10T23:00:00Z", "type": "commit"}, {"oid": "8fe1c6180cb95f686e5fdaa13208ca0b5e8ac6e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fe1c6180cb95f686e5fdaa13208ca0b5e8ac6e2", "message": "Added block tests", "committedDate": "2020-07-13T16:56:17Z", "type": "commit"}, {"oid": "c17742b164db66eb14081f8a2d9cb647409d320a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c17742b164db66eb14081f8a2d9cb647409d320a", "message": "Added Append blob tests", "committedDate": "2020-07-13T17:05:38Z", "type": "commit"}, {"oid": "1542b3184c7919329f1cd1c8f02f961f146c43a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1542b3184c7919329f1cd1c8f02f961f146c43a2", "message": "Added page blob tests", "committedDate": "2020-07-13T17:15:40Z", "type": "commit"}, {"oid": "a8991aeaa84756bddf2b2c4fb076a9abd86038f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a8991aeaa84756bddf2b2c4fb076a9abd86038f7", "message": "fixed recorded tests", "committedDate": "2020-07-13T17:36:00Z", "type": "commit"}, {"oid": "f3304a036aad9d1e12520522d34469d038556c8e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f3304a036aad9d1e12520522d34469d038556c8e", "message": "Fixed change lease tests", "committedDate": "2020-07-13T18:10:18Z", "type": "commit"}, {"oid": "59ec0f47500ba8e66c2b92d7ad39c2d9c226ea41", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59ec0f47500ba8e66c2b92d7ad39c2d9c226ea41", "message": "Fixed JAva doc snippets", "committedDate": "2020-07-13T19:00:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MjA1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r453872059", "bodyText": "Is this a valid check here?", "author": "gapra-msft", "createdAt": "2020-07-13T19:12:07Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobChangeLeaseOptions.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.models.BlobLeaseRequestConditions;\n+import com.azure.storage.common.implementation.StorageImplUtils;\n+\n+/**\n+ * Extended options that may be passed when changing a lease to a blob or container.\n+ */\n+@Fluent\n+public class BlobChangeLeaseOptions {\n+\n+    private final String proposedId;\n+    private BlobLeaseRequestConditions requestConditions;\n+\n+    /**\n+     * @param proposedId A new lease ID in a valid GUID format.\n+     */\n+    public BlobChangeLeaseOptions(String proposedId) {\n+        StorageImplUtils.assertNotNull(\"proposedId\", proposedId);", "originalCommit": "59ec0f47500ba8e66c2b92d7ad39c2d9c226ea41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk5NDM0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r453994341", "bodyText": "I think so. We probably want to be doing this on all the constructor values.", "author": "rickle-msft", "createdAt": "2020-07-13T22:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MjA1OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MjI4NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r453872285", "bodyText": "Change doc", "author": "gapra-msft", "createdAt": "2020-07-13T19:12:32Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobReleaseLeaseOptions.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.options;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.storage.blob.models.BlobLeaseRequestConditions;\n+\n+/**\n+ * Extended options that may be passed when renewing a lease to a blob or container.", "originalCommit": "59ec0f47500ba8e66c2b92d7ad39c2d9c226ea41", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec8139d5c99bc9d919950d84cbc94739c4349e0b", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobReleaseLeaseOptions.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobReleaseLeaseOptions.java\nindex 4acbe1df0a0..6ce493c6dd9 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobReleaseLeaseOptions.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/options/BlobReleaseLeaseOptions.java\n\n@@ -7,7 +7,7 @@ import com.azure.core.annotation.Fluent;\n import com.azure.storage.blob.models.BlobLeaseRequestConditions;\n \n /**\n- * Extended options that may be passed when renewing a lease to a blob or container.\n+ * Extended options that may be passed when releasing a lease to a blob or container.\n  */\n @Fluent\n public class BlobReleaseLeaseOptions {\n"}}, {"oid": "baabf80099fcb30586ca67027c45e4b845292d95", "url": "https://github.com/Azure/azure-sdk-for-java/commit/baabf80099fcb30586ca67027c45e4b845292d95", "message": "fixed checkstyle", "committedDate": "2020-07-13T19:37:01Z", "type": "commit"}, {"oid": "c656c34e1c6dc12a3130a362ba33e458c51764a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c656c34e1c6dc12a3130a362ba33e458c51764a2", "message": "Last checkstype", "committedDate": "2020-07-13T19:59:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjI0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r453912243", "bodyText": "Maybe we should call the parameter ifTagsMatch or something? ifTags reads to me like it's just checking if there are tags present", "author": "rickle-msft", "createdAt": "2020-07-13T20:27:45Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/AppendBlobRequestConditions.java", "diffHunk": "@@ -82,6 +82,18 @@ public AppendBlobRequestConditions setLeaseId(String leaseId) {\n         return this;\n     }\n \n+    /**\n+     * Optionally applies the SQL statement to the tags of the blob.\n+     *\n+     * @param ifTags The SQL statement that apply to the tags of the blob.\n+     * @return The updated BlobRequestConditions object.\n+     */\n+    @Override\n+    public AppendBlobRequestConditions setIfTags(String ifTags) {", "originalCommit": "f3304a036aad9d1e12520522d34469d038556c8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNTI0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r453915241", "bodyText": "I like that idea", "author": "gapra-msft", "createdAt": "2020-07-13T20:33:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzOTI2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r455939261", "bodyText": "There's a lot of over conditions that can be checked related to tags.  In .NET, we went with TagConditions", "author": "seanmcc-msft", "createdAt": "2020-07-16T17:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjI0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxMjUwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r456012502", "bodyText": "Changed to tagsConditions", "author": "gapra-msft", "createdAt": "2020-07-16T19:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMjI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ec8139d5c99bc9d919950d84cbc94739c4349e0b", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/AppendBlobRequestConditions.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/AppendBlobRequestConditions.java\nindex 7b6df09652e..48e5e712dbc 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/AppendBlobRequestConditions.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/AppendBlobRequestConditions.java\n\n@@ -85,12 +85,12 @@ public final class AppendBlobRequestConditions extends BlobRequestConditions {\n     /**\n      * Optionally applies the SQL statement to the tags of the blob.\n      *\n-     * @param ifTags The SQL statement that apply to the tags of the blob.\n+     * @param ifTagsMatch The SQL statement that apply to the tags of the blob.\n      * @return The updated BlobRequestConditions object.\n      */\n     @Override\n-    public AppendBlobRequestConditions setIfTags(String ifTags) {\n-        super.setIfTags(ifTags);\n+    public AppendBlobRequestConditions setIfTagsMatch(String ifTagsMatch) {\n+        super.setIfTagsMatch(ifTagsMatch);\n         return this;\n     }\n \n"}}, {"oid": "ec8139d5c99bc9d919950d84cbc94739c4349e0b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec8139d5c99bc9d919950d84cbc94739c4349e0b", "message": "Changed name of ifTags", "committedDate": "2020-07-13T21:44:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4MjIzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13090#discussion_r454482233", "bodyText": "I think options can be null here, right?", "author": "rickle-msft", "createdAt": "2020-07-14T16:24:55Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java", "diffHunk": "@@ -181,26 +213,47 @@ public String getLeaseId() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<Response<String>> renewLeaseWithResponse(RequestConditions modifiedRequestConditions) {\n         try {\n-            return withContext(context -> renewLeaseWithResponse(modifiedRequestConditions,\n+            return withContext(context -> renewLeaseWithResponse(new BlobRenewLeaseOptions()\n+                    .setRequestConditions(ModelHelper.populateBlobLeaseRequestConditions(modifiedRequestConditions)),\n                 context));\n         } catch (RuntimeException ex) {\n             return monoError(logger, ex);\n         }\n     }\n \n-    Mono<Response<String>> renewLeaseWithResponse(RequestConditions modifiedRequestConditions, Context context) {\n-        modifiedRequestConditions = (modifiedRequestConditions == null)\n-            ? new RequestConditions() : modifiedRequestConditions;\n+    /**\n+     * Renews the previously acquired lease.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.specialized.BlobLeaseAsyncClient.renewLeaseWithResponse#BlobRenewLeaseOptions}\n+     *\n+     * @param options {@link BlobRenewLeaseOptions}\n+     * @return A reactive response containing the renewed lease ID.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Mono<Response<String>> renewLeaseWithResponse(BlobRenewLeaseOptions options) {\n+        try {\n+            return withContext(context -> renewLeaseWithResponse(options, context));\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<String>> renewLeaseWithResponse(BlobRenewLeaseOptions options, Context context) {\n+        StorageImplUtils.assertNotNull(\"options\", options);", "originalCommit": "c656c34e1c6dc12a3130a362ba33e458c51764a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b6101548df01a0319f8750e648712f66f2ec012", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java\nindex 351e605e851..067f9c9683f 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/specialized/BlobLeaseAsyncClient.java\n\n@@ -248,7 +248,7 @@ public final class BlobLeaseAsyncClient {\n         if (this.isBlob) {\n             return this.client.blobs().renewLeaseWithRestResponseAsync(null, null, this.leaseId, null,\n                 requestConditions.getIfModifiedSince(), requestConditions.getIfUnmodifiedSince(),\n-                requestConditions.getIfMatch(), requestConditions.getIfNoneMatch(), requestConditions.getIfTags(), null,\n+                requestConditions.getIfMatch(), requestConditions.getIfNoneMatch(), requestConditions.getIfTagsMatch(), null,\n                 context.addData(AZ_TRACING_NAMESPACE_KEY, STORAGE_TRACING_NAMESPACE_VALUE))\n                 .map(rb -> new SimpleResponse<>(rb, rb.getDeserializedHeaders().getLeaseId()));\n         } else {\n"}}, {"oid": "5b6101548df01a0319f8750e648712f66f2ec012", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b6101548df01a0319f8750e648712f66f2ec012", "message": "Merge branch 'master' into storage/tagConditions", "committedDate": "2020-07-16T19:03:17Z", "type": "commit"}, {"oid": "7f110173415253c79b5e9d326cda95de44d16ddc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7f110173415253c79b5e9d326cda95de44d16ddc", "message": "renamed tagcondition", "committedDate": "2020-07-16T19:10:41Z", "type": "commit"}, {"oid": "f4b661e27fe3be87e8c913e4f7a9007e6186835b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f4b661e27fe3be87e8c913e4f7a9007e6186835b", "message": "plural", "committedDate": "2020-07-16T19:12:46Z", "type": "commit"}, {"oid": "9a1cc77a398c5d3ff0e030e1e18f85828ef6f6fd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a1cc77a398c5d3ff0e030e1e18f85828ef6f6fd", "message": "line endings", "committedDate": "2020-07-16T20:00:19Z", "type": "commit"}]}