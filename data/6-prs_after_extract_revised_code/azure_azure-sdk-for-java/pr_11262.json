{"pr_number": 11262, "pr_title": "Misc fixes for cosmos public surface APIs", "pr_createdAt": "2020-05-18T21:09:21Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11262", "timeline": [{"oid": "bbbebc547cc40a21cb4e90d6e0837c80fd75bdcb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbbebc547cc40a21cb4e90d6e0837c80fd75bdcb", "message": "Misc fixes for cosmos public surface APIs", "committedDate": "2020-05-18T21:08:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NTczOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11262#discussion_r426895738", "bodyText": "maybe we should mention that these may change in future.", "author": "moderakh", "createdAt": "2020-05-18T21:11:52Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java", "diffHunk": "@@ -55,257 +51,220 @@\n  * This is meant to be used only internally as a bridge access to classes in\n  * com.azure.cosmos\n  **/\n+@Warning(value = \"Internal use only, not meant for public usage\")", "originalCommit": "bbbebc547cc40a21cb4e90d6e0837c80fd75bdcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNDAwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11262#discussion_r426934003", "bodyText": "Done.", "author": "kushagraThapar", "createdAt": "2020-05-18T22:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NTczOA=="}], "type": "inlineReview", "revised_code": {"commit": "fe5773d49c558ef80745033cee0a8f7147c6c58e", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\nindex 0601d282fbc..f4eaac6934b 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\n\n@@ -46,175 +46,177 @@ import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentMap;\n \n+import static com.azure.cosmos.implementation.Warning.INTERNAL_USE_ONLY_WARNING;\n+\n /**\n  * DO NOT USE.\n  * This is meant to be used only internally as a bridge access to classes in\n  * com.azure.cosmos\n  **/\n-@Warning(value = \"Internal use only, not meant for public usage\")\n+@Warning(value = INTERNAL_USE_ONLY_WARNING)\n public final class BridgeInternal {\n \n     private BridgeInternal() {}\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static Document documentFromObject(Object document, ObjectMapper mapper) {\n         return Document.fromObject(document, mapper);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static ByteBuffer serializeJsonToByteBuffer(Object document, ObjectMapper mapper) {\n         return CosmosItemProperties.serializeJsonToByteBuffer(document, mapper);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void monitorTelemetry(MeterRegistry registry) {\n         CosmosAsyncClient.setMonitorTelemetry(registry);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> ResourceResponse<T> toResourceResponse(RxDocumentServiceResponse response,\n                                                                               Class<T> cls) {\n         return new ResourceResponse<T>(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> FeedResponse<T> toFeedResponsePage(RxDocumentServiceResponse response,\n                                                                           Class<T> cls) {\n         return ModelBridgeInternal.toFeedResponsePage(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> toFeedResponsePage(List<T> results, Map<String, String> headers, boolean noChanges) {\n         return ModelBridgeInternal.toFeedResponsePage(results, headers, noChanges);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> FeedResponse<T> toChangeFeedResponsePage(RxDocumentServiceResponse response,\n                                                                                 Class<T> cls) {\n         return ModelBridgeInternal.toChaneFeedResponsePage(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static StoredProcedureResponse toStoredProcedureResponse(RxDocumentServiceResponse response) {\n         return new StoredProcedureResponse(response);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> boolean noChanges(FeedResponse<T> page) {\n         return ModelBridgeInternal.noChanges(page);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> createFeedResponse(List<T> results,\n             Map<String, String> headers) {\n         return ModelBridgeInternal.createFeedResponse(results, headers);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> createFeedResponseWithQueryMetrics(List<T> results,\n             Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap) {\n         return ModelBridgeInternal.createFeedResponseWithQueryMetrics(results, headers, queryMetricsMap);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static FeedResponseDiagnostics createFeedResponseDiagnostics(Map<String, QueryMetrics> queryMetricsMap) {\n         return new FeedResponseDiagnostics(queryMetricsMap);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setResourceAddress(E e, String resourceAddress) {\n         e.setResourceAddress(resourceAddress);\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> long getLSN(E e) {\n         return e.lsn;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> String getPartitionKeyRangeId(E e) {\n         return e.partitionKeyRangeId;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> String getResourceAddress(E e) {\n         return e.getResourceAddress();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setLSN(E e, long lsn) {\n         e.lsn = lsn;\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setPartitionKeyRangeId(E e, String partitionKeyRangeId) {\n         e.partitionKeyRangeId = partitionKeyRangeId;\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static boolean isEnableMultipleWriteLocations(DatabaseAccount account) {\n         return account.getEnableMultipleWriteLocations();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> Uri getRequestUri(CosmosClientException cosmosClientException) {\n         return cosmosClientException.requestUri;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> void setRequestHeaders(CosmosClientException cosmosClientException,\n                                                                            Map<String, String> requestHeaders) {\n         cosmosClientException.requestHeaders = requestHeaders;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> Map<String, String> getRequestHeaders(\n         CosmosClientException cosmosClientException) {\n         return cosmosClientException.requestHeaders;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static String getAltLink(Resource resource) {\n         return ModelBridgeInternal.getAltLink(resource);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void setAltLink(Resource resource, String altLink) {\n         ModelBridgeInternal.setAltLink(resource, altLink);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value) {\n         replicationPolicy.setMaxReplicaSetSize(value);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> void putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId,\n                                                                    QueryMetrics queryMetrics) {\n         ModelBridgeInternal.queryMetricsMap(response).put(partitionKeyRangeId, queryMetrics);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static QueryMetrics createQueryMetricsFromDelimitedStringAndClientSideMetrics(\n         String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId) {\n         return QueryMetrics.createFromDelimitedStringAndClientSideMetrics(queryMetricsDelimitedString,\n             clientSideMetrics, activityId);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static QueryMetrics createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection) {\n         return QueryMetrics.createFromCollection(queryMetricsCollection);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static ClientSideMetrics getClientSideMetrics(QueryMetrics queryMetrics) {\n         return queryMetrics.getClientSideMetrics();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static String getInnerErrorMessage(CosmosClientException cosmosClientException) {\n         if (cosmosClientException == null) {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NjEzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11262#discussion_r426896130", "bodyText": "you might be able to define a static final warning String message as string and reuse, rather than repeating the warning on each method.", "author": "moderakh", "createdAt": "2020-05-18T21:12:46Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java", "diffHunk": "@@ -55,257 +51,220 @@\n  * This is meant to be used only internally as a bridge access to classes in\n  * com.azure.cosmos\n  **/\n+@Warning(value = \"Internal use only, not meant for public usage\")", "originalCommit": "bbbebc547cc40a21cb4e90d6e0837c80fd75bdcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTM1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11262#discussion_r426925356", "bodyText": "Good point, will do that for sure.", "author": "kushagraThapar", "createdAt": "2020-05-18T22:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NjEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "fe5773d49c558ef80745033cee0a8f7147c6c58e", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\nindex 0601d282fbc..f4eaac6934b 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/BridgeInternal.java\n\n@@ -46,175 +46,177 @@ import java.util.Map;\n import java.util.Set;\n import java.util.concurrent.ConcurrentMap;\n \n+import static com.azure.cosmos.implementation.Warning.INTERNAL_USE_ONLY_WARNING;\n+\n /**\n  * DO NOT USE.\n  * This is meant to be used only internally as a bridge access to classes in\n  * com.azure.cosmos\n  **/\n-@Warning(value = \"Internal use only, not meant for public usage\")\n+@Warning(value = INTERNAL_USE_ONLY_WARNING)\n public final class BridgeInternal {\n \n     private BridgeInternal() {}\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static Document documentFromObject(Object document, ObjectMapper mapper) {\n         return Document.fromObject(document, mapper);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static ByteBuffer serializeJsonToByteBuffer(Object document, ObjectMapper mapper) {\n         return CosmosItemProperties.serializeJsonToByteBuffer(document, mapper);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void monitorTelemetry(MeterRegistry registry) {\n         CosmosAsyncClient.setMonitorTelemetry(registry);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> ResourceResponse<T> toResourceResponse(RxDocumentServiceResponse response,\n                                                                               Class<T> cls) {\n         return new ResourceResponse<T>(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> FeedResponse<T> toFeedResponsePage(RxDocumentServiceResponse response,\n                                                                           Class<T> cls) {\n         return ModelBridgeInternal.toFeedResponsePage(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> toFeedResponsePage(List<T> results, Map<String, String> headers, boolean noChanges) {\n         return ModelBridgeInternal.toFeedResponsePage(results, headers, noChanges);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> FeedResponse<T> toChangeFeedResponsePage(RxDocumentServiceResponse response,\n                                                                                 Class<T> cls) {\n         return ModelBridgeInternal.toChaneFeedResponsePage(response, cls);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static StoredProcedureResponse toStoredProcedureResponse(RxDocumentServiceResponse response) {\n         return new StoredProcedureResponse(response);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> boolean noChanges(FeedResponse<T> page) {\n         return ModelBridgeInternal.noChanges(page);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> createFeedResponse(List<T> results,\n             Map<String, String> headers) {\n         return ModelBridgeInternal.createFeedResponse(results, headers);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T> FeedResponse<T> createFeedResponseWithQueryMetrics(List<T> results,\n             Map<String, String> headers, ConcurrentMap<String, QueryMetrics> queryMetricsMap) {\n         return ModelBridgeInternal.createFeedResponseWithQueryMetrics(results, headers, queryMetricsMap);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static FeedResponseDiagnostics createFeedResponseDiagnostics(Map<String, QueryMetrics> queryMetricsMap) {\n         return new FeedResponseDiagnostics(queryMetricsMap);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setResourceAddress(E e, String resourceAddress) {\n         e.setResourceAddress(resourceAddress);\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> long getLSN(E e) {\n         return e.lsn;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> String getPartitionKeyRangeId(E e) {\n         return e.partitionKeyRangeId;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> String getResourceAddress(E e) {\n         return e.getResourceAddress();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setLSN(E e, long lsn) {\n         e.lsn = lsn;\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> E setPartitionKeyRangeId(E e, String partitionKeyRangeId) {\n         e.partitionKeyRangeId = partitionKeyRangeId;\n         return e;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static boolean isEnableMultipleWriteLocations(DatabaseAccount account) {\n         return account.getEnableMultipleWriteLocations();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> Uri getRequestUri(CosmosClientException cosmosClientException) {\n         return cosmosClientException.requestUri;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> void setRequestHeaders(CosmosClientException cosmosClientException,\n                                                                            Map<String, String> requestHeaders) {\n         cosmosClientException.requestHeaders = requestHeaders;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <E extends CosmosClientException> Map<String, String> getRequestHeaders(\n         CosmosClientException cosmosClientException) {\n         return cosmosClientException.requestHeaders;\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static String getAltLink(Resource resource) {\n         return ModelBridgeInternal.getAltLink(resource);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void setAltLink(Resource resource, String altLink) {\n         ModelBridgeInternal.setAltLink(resource, altLink);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static void setMaxReplicaSetSize(ReplicationPolicy replicationPolicy, int value) {\n         replicationPolicy.setMaxReplicaSetSize(value);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static <T extends Resource> void putQueryMetricsIntoMap(FeedResponse<T> response, String partitionKeyRangeId,\n                                                                    QueryMetrics queryMetrics) {\n         ModelBridgeInternal.queryMetricsMap(response).put(partitionKeyRangeId, queryMetrics);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static QueryMetrics createQueryMetricsFromDelimitedStringAndClientSideMetrics(\n         String queryMetricsDelimitedString, ClientSideMetrics clientSideMetrics, String activityId) {\n         return QueryMetrics.createFromDelimitedStringAndClientSideMetrics(queryMetricsDelimitedString,\n             clientSideMetrics, activityId);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static QueryMetrics createQueryMetricsFromCollection(Collection<QueryMetrics> queryMetricsCollection) {\n         return QueryMetrics.createFromCollection(queryMetricsCollection);\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static ClientSideMetrics getClientSideMetrics(QueryMetrics queryMetrics) {\n         return queryMetrics.getClientSideMetrics();\n     }\n \n-    @Warning(value = \"Internal use only, not meant for public usage\")\n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static String getInnerErrorMessage(CosmosClientException cosmosClientException) {\n         if (cosmosClientException == null) {\n             return null;\n"}}, {"oid": "fe5773d49c558ef80745033cee0a8f7147c6c58e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe5773d49c558ef80745033cee0a8f7147c6c58e", "message": "Added constant for warning annotation message", "committedDate": "2020-05-18T22:50:39Z", "type": "commit"}]}