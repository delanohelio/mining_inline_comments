{"pr_number": 12615, "pr_title": "Sb track2 remove Locktoken Interface  and use String for lockToken", "pr_createdAt": "2020-06-29T19:13:25Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/12615", "timeline": [{"oid": "5c3cf988ac1c65cb1c4d14e6105d1d05fcc47648", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c3cf988ac1c65cb1c4d14e6105d1d05fcc47648", "message": "Increment package version after release of com.azure azure-messaging-servicebus", "committedDate": "2020-05-08T21:29:37Z", "type": "commit"}, {"oid": "39b9a1a6d1bfd9adf54c91fea1a90144cb02f288", "url": "https://github.com/Azure/azure-sdk-for-java/commit/39b9a1a6d1bfd9adf54c91fea1a90144cb02f288", "message": "resolve merge conflict", "committedDate": "2020-05-12T19:40:58Z", "type": "commit"}, {"oid": "f9cc7d2d82c36e62ea253071a1ec5ae29b4f1848", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9cc7d2d82c36e62ea253071a1ec5ae29b4f1848", "message": "Merge branch 'azure-sdk-increment-package-version-servicebus-386162'", "committedDate": "2020-05-12T19:50:47Z", "type": "commit"}, {"oid": "3a4b16fd9cc42f7dbc5d746e81ffc8de94e55b6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a4b16fd9cc42f7dbc5d746e81ffc8de94e55b6b", "message": "merge master", "committedDate": "2020-05-13T00:26:33Z", "type": "commit"}, {"oid": "b67ac9b65651a41709584818e2c3417b6aed44ca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b67ac9b65651a41709584818e2c3417b6aed44ca", "message": "Merge branch 'master' of github.com:hemanttanwar/azure-sdk-for-java", "committedDate": "2020-05-13T04:02:38Z", "type": "commit"}, {"oid": "510e76c7ffb58e006a09779558d7b01246f054a9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/510e76c7ffb58e006a09779558d7b01246f054a9", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-05-20T05:17:51Z", "type": "commit"}, {"oid": "663dac49d053f1cb7e6d0bb7664a551b68dab004", "url": "https://github.com/Azure/azure-sdk-for-java/commit/663dac49d053f1cb7e6d0bb7664a551b68dab004", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-05T21:43:35Z", "type": "commit"}, {"oid": "2962fabdb5ada06fba88a10c18091f9721eeb302", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2962fabdb5ada06fba88a10c18091f9721eeb302", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-08T04:37:42Z", "type": "commit"}, {"oid": "d418224ef3addb68105e241776d19e70aca32bd0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d418224ef3addb68105e241776d19e70aca32bd0", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-09T03:45:55Z", "type": "commit"}, {"oid": "6a9dc359ca5e3ba7b40fe71ab0fa2c33d0e5e91b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6a9dc359ca5e3ba7b40fe71ab0fa2c33d0e5e91b", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-09T21:00:31Z", "type": "commit"}, {"oid": "d0d0d88de524992f7e211400d2b8724691310817", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0d0d88de524992f7e211400d2b8724691310817", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-10T04:36:54Z", "type": "commit"}, {"oid": "80bcfd7bb9cd94cb966e71532fb1b8c39831db32", "url": "https://github.com/Azure/azure-sdk-for-java/commit/80bcfd7bb9cd94cb966e71532fb1b8c39831db32", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-11T16:59:10Z", "type": "commit"}, {"oid": "136c66a13eacd2e49be05cef94879048c57115c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/136c66a13eacd2e49be05cef94879048c57115c9", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-17T00:33:06Z", "type": "commit"}, {"oid": "ed8488ac12c07af9e1bab02403aa35b0de90456b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed8488ac12c07af9e1bab02403aa35b0de90456b", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-18T00:32:39Z", "type": "commit"}, {"oid": "874767a0ec4e8dbc72dce623ef701c96ff74c743", "url": "https://github.com/Azure/azure-sdk-for-java/commit/874767a0ec4e8dbc72dce623ef701c96ff74c743", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-24T08:19:24Z", "type": "commit"}, {"oid": "e4c98cc4508a84d9d1537d7cdc3826cf7fb57c7a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e4c98cc4508a84d9d1537d7cdc3826cf7fb57c7a", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-26T23:12:20Z", "type": "commit"}, {"oid": "964c1b6891567dc1ebfe9a54aecf9de1acb58fe1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/964c1b6891567dc1ebfe9a54aecf9de1acb58fe1", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-28T05:54:20Z", "type": "commit"}, {"oid": "4aa1fcc3ae90257f9882053d27e59d72d77a7de9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4aa1fcc3ae90257f9882053d27e59d72d77a7de9", "message": "Merge branch 'master' of github.com:Azure/azure-sdk-for-java", "committedDate": "2020-06-28T16:18:14Z", "type": "commit"}, {"oid": "1baad98a9ac5e3858f271c19762b596e6c595c14", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1baad98a9ac5e3858f271c19762b596e6c595c14", "message": "Removing locktoken interface and using String instead.", "committedDate": "2020-06-29T18:53:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODkwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447318905", "bodyText": "This should be removed.", "author": "conniey", "createdAt": "2020-06-29T23:36:54Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -312,15 +312,17 @@ public String getEntityPath() {\n      * @throws NullPointerException if {@code lockToken} is null.\n      * @throws UnsupportedOperationException if the receiver was opened in {@link ReceiveMode#RECEIVE_AND_DELETE}\n      * mode.\n-     * @throws IllegalArgumentException if {@link MessageLockToken#getLockToken()} returns a null lock token.\n+     * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n      */\n-    public Mono<Void> complete(MessageLockToken lockToken) {\n-        if (lockToken instanceof ServiceBusReceivedMessage) {\n+    public Mono<Void> complete(String lockToken) {\n+        /*if (lockToken instanceof ServiceBusReceivedMessage) {", "originalCommit": "1baad98a9ac5e3858f271c19762b596e6c595c14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex 47364c39aeb..8b07c08bdb2 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -315,14 +315,8 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n      */\n     public Mono<Void> complete(String lockToken) {\n-        /*if (lockToken instanceof ServiceBusReceivedMessage) {\n-            return complete(lockToken, ((ServiceBusReceivedMessage) lockToken).getSessionId());\n-        } else {\n-            return updateDisposition(lockToken, DispositionStatus.COMPLETED, null, null,\n-                null, null, null);\n-        }*/\n         return updateDisposition(lockToken, DispositionStatus.COMPLETED, null, null,\n-            null, null, null);\n+            null, receiverOptions.getSessionId(), null);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxOTQzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447319436", "bodyText": "Remove dead code.", "author": "conniey", "createdAt": "2020-06-29T23:38:35Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1206,40 +1200,33 @@ private boolean isManagementToken(String lockToken) {\n         return managementNodeLocks.contains(lockToken);\n     }\n \n-    private Mono<Void> updateDisposition(MessageLockToken message, DispositionStatus dispositionStatus,\n+    private Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus,\n         String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify,\n         String sessionId, ServiceBusTransactionContext transactionContext) {\n \n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, dispositionStatus.getValue())));\n-        } else if (Objects.isNull(message)) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage' cannot be null.\"));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n+        } else if (Objects.isNull(lockToken)) {\n+            return monoError(logger, new NullPointerException(\"'lockToken' cannot be null.\"));\n+        } else if (lockToken.isEmpty()) {\n+            return monoError(logger, new IllegalArgumentException(\"'lockToken' cannot be empty.\"));\n         }\n \n         if (receiverOptions.getReceiveMode() != ReceiveMode.PEEK_LOCK) {\n             return Mono.error(logger.logExceptionAsError(new UnsupportedOperationException(String.format(\n                 \"'%s' is not supported on a receiver opened in ReceiveMode.RECEIVE_AND_DELETE.\", dispositionStatus))));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n         }\n \n-        final String lockToken = message.getLockToken();\n         final String sessionIdToUse;\n-        if (message instanceof ServiceBusReceivedMessage) {\n+        /*if (message instanceof ServiceBusReceivedMessage) {", "originalCommit": "1baad98a9ac5e3858f271c19762b596e6c595c14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex 47364c39aeb..8b07c08bdb2 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -1219,14 +1213,7 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n         }\n \n         final String sessionIdToUse;\n-        /*if (message instanceof ServiceBusReceivedMessage) {\n-            sessionIdToUse = ((ServiceBusReceivedMessage) message).getSessionId();\n-            if (!CoreUtils.isNullOrEmpty(sessionIdToUse) && !CoreUtils.isNullOrEmpty(sessionId)\n-                && !sessionIdToUse.equals(sessionId)) {\n-                logger.warning(\"Given sessionId '{}' does not match message's sessionId '{}'\",\n-                    sessionId, sessionIdToUse);\n-            }\n-        } else */if (sessionId == null && !CoreUtils.isNullOrEmpty(receiverOptions.getSessionId())) {\n+        if (sessionId == null && !CoreUtils.isNullOrEmpty(receiverOptions.getSessionId())) {\n             sessionIdToUse = receiverOptions.getSessionId();\n         } else {\n             sessionIdToUse = sessionId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDg0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447320843", "bodyText": "You don't need to mock this anymore you can set the string and return it.", "author": "conniey", "createdAt": "2020-06-29T23:43:13Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java", "diffHunk": "@@ -72,7 +72,7 @@ void setup() {\n         when(asyncClient.getReceiverOptions()).thenReturn(new ReceiverOptions(ReceiveMode.PEEK_LOCK, 1,\n             maxAutoLockRenewalDuration));\n \n-        when(messageLockToken.getLockToken()).thenReturn(LOCK_TOKEN);\n+        when(messageLockToken).thenReturn(LOCK_TOKEN);", "originalCommit": "1baad98a9ac5e3858f271c19762b596e6c595c14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java\nindex 1d0bbea5962..a32b9789e4e 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverClientTest.java\n\n@@ -72,8 +70,6 @@ class ServiceBusReceiverClientTest {\n         when(asyncClient.getReceiverOptions()).thenReturn(new ReceiverOptions(ReceiveMode.PEEK_LOCK, 1,\n             maxAutoLockRenewalDuration));\n \n-        when(messageLockToken).thenReturn(LOCK_TOKEN);\n-\n         client = new ServiceBusReceiverClient(asyncClient, OPERATION_TIMEOUT);\n     }\n \n"}}, {"oid": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "message": "Review comments", "committedDate": "2020-06-30T16:49:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODE1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447848152", "bodyText": "The check doesn't match the documentation. This throws a NPE rather than IllegalArgumentExceptionwhen lockToken is null.", "author": "conniey", "createdAt": "2020-06-30T17:13:01Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1014,34 +1010,26 @@ public String getEntityPath() {\n      * @throws UnsupportedOperationException if the receiver was opened in {@link ReceiveMode#RECEIVE_AND_DELETE}\n      *     mode.\n      * @throws IllegalStateException if the receiver is a session receiver.\n-     * @throws IllegalArgumentException if {@link MessageLockToken#getLockToken()} returns an empty value.\n+     * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n      */\n-    public Mono<Instant> renewMessageLock(MessageLockToken lockToken) {\n+    public Mono<Instant> renewMessageLock(String lockToken) {\n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, \"renewMessageLock\")));\n         } else if (Objects.isNull(lockToken)) {", "originalCommit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03e214bfc6c1d3eb9375688c65dca888985bc56d", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex 8b07c08bdb2..996269a2679 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -1010,7 +1010,7 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * @throws UnsupportedOperationException if the receiver was opened in {@link ReceiveMode#RECEIVE_AND_DELETE}\n      *     mode.\n      * @throws IllegalStateException if the receiver is a session receiver.\n-     * @throws IllegalArgumentException if {@code lockToken} is {@code null} or an empty value.\n+     * @throws IllegalArgumentException if {@code lockToken} is an empty value.\n      */\n     public Mono<Instant> renewMessageLock(String lockToken) {\n         if (isDisposed.get()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODQyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447848426", "bodyText": "The check doesn't match the documentation. This throws a NPE rather than IllegalArgumentExceptionwhen lockToken is null.", "author": "conniey", "createdAt": "2020-06-30T17:13:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -1206,40 +1194,26 @@ private boolean isManagementToken(String lockToken) {\n         return managementNodeLocks.contains(lockToken);\n     }\n \n-    private Mono<Void> updateDisposition(MessageLockToken message, DispositionStatus dispositionStatus,\n+    private Mono<Void> updateDisposition(String lockToken, DispositionStatus dispositionStatus,\n         String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify,\n         String sessionId, ServiceBusTransactionContext transactionContext) {\n \n         if (isDisposed.get()) {\n             return monoError(logger, new IllegalStateException(\n                 String.format(INVALID_OPERATION_DISPOSED_RECEIVER, dispositionStatus.getValue())));\n-        } else if (Objects.isNull(message)) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage' cannot be null.\"));\n-        } else if (Objects.isNull(message.getLockToken())) {\n-            return monoError(logger, new NullPointerException(\"'receivedMessage.lockToken' cannot be null.\"));\n-        } else if (message.getLockToken().isEmpty()) {\n-            return monoError(logger, new IllegalArgumentException(\"'message.lockToken' cannot be empty.\"));\n+        } else if (Objects.isNull(lockToken)) {", "originalCommit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1ODY0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447858644", "bodyText": "Yes , I realize that. Thanks. I will change documentation.", "author": "hemanttanwar", "createdAt": "2020-06-30T17:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0ODQyNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MDQ4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12615#discussion_r447850486", "bodyText": "This isn't correct? It should be one or the other.", "author": "conniey", "createdAt": "2020-06-30T17:16:57Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java", "diffHunk": "@@ -56,9 +56,10 @@ public static void main(String[] args) {\n                 boolean isSuccessfullyProcessed = processMessage(message);\n \n                 if (isSuccessfullyProcessed) {\n-                    receiver.complete(message);\n+                    receiver.complete(message.getLockToken());", "originalCommit": "3a68ee93d8095f08fa859b17cb59e307d44e9f6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "67808afc998816a7540ab1e2f3b89228800c2b9a", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java b/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java\nindex 57b2f19f4ad..004b6432169 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/ReceiveNamedSessionSample.java\n\n@@ -56,7 +56,6 @@ public class ReceiveNamedSessionSample {\n                 boolean isSuccessfullyProcessed = processMessage(message);\n \n                 if (isSuccessfullyProcessed) {\n-                    receiver.complete(message.getLockToken());\n                     receiver.complete(message.getLockToken(), message.getSessionId());\n                 } else {\n                     receiver.abandon(message.getLockToken(), null, message.getSessionId());\n"}}, {"oid": "67808afc998816a7540ab1e2f3b89228800c2b9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/67808afc998816a7540ab1e2f3b89228800c2b9a", "message": "Review comments", "committedDate": "2020-06-30T17:57:05Z", "type": "commit"}, {"oid": "03e214bfc6c1d3eb9375688c65dca888985bc56d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/03e214bfc6c1d3eb9375688c65dca888985bc56d", "message": "Review comments", "committedDate": "2020-06-30T18:56:52Z", "type": "commit"}]}