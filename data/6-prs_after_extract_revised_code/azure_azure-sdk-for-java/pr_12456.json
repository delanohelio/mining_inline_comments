{"pr_number": 12456, "pr_title": "Fix user agent string format and centralize creation of user agent string", "pr_createdAt": "2020-06-23T18:48:40Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/12456", "timeline": [{"oid": "dfbd8e8b61917e6c0bad7747945c1f9861773042", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dfbd8e8b61917e6c0bad7747945c1f9861773042", "message": "Fix user agent string format and centralize the creation of user agent string", "committedDate": "2020-06-23T18:45:45Z", "type": "commit"}, {"oid": "38da357fdde95848fa1517d1393a6562511ed06d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/38da357fdde95848fa1517d1393a6562511ed06d", "message": "Fix unit tests", "committedDate": "2020-06-23T19:04:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1ODI4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444458280", "bodyText": "This is implementation code, do we still need to use @Deprecated or could we remove it instead?", "author": "alzimmermsft", "createdAt": "2020-06-23T19:31:07Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java", "diffHunk": "@@ -8,11 +8,11 @@\n     public static final String PLATFORM_INFO = getOSInformation();\n     public static final String FRAMEWORK_INFO = getFrameworkInfo();\n \n-    /**\n+    /*\n      * Gets the USER AGENT string as defined in:\n      * $/core/azure-core/src/main/java/com/azure/core/http/policy/UserAgentPolicy.java\n-     * TODO (conniey): Extract logic from UserAgentPolicy into something we can use here.\n      */\n+    @Deprecated", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3MzM4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444473389", "bodyText": "We shouldn't need Deprecated because it's not part of our API surface area.", "author": "conniey", "createdAt": "2020-06-23T20:00:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1ODI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java\nindex 8b964244592..44b92b6260e 100644\n--- a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java\n+++ b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ClientConstants.java\n\n@@ -8,14 +8,6 @@ public final class ClientConstants {\n     public static final String PLATFORM_INFO = getOSInformation();\n     public static final String FRAMEWORK_INFO = getFrameworkInfo();\n \n-    /*\n-     * Gets the USER AGENT string as defined in:\n-     * $/core/azure-core/src/main/java/com/azure/core/http/policy/UserAgentPolicy.java\n-     */\n-    @Deprecated\n-    public static final String USER_AGENT_TEMPLATE =\n-        \"%s/%s \" + System.getProperty(\"java.version\") + \";\" + PLATFORM_INFO;\n-\n     /**\n      * The default maximum allowable size, in bytes, for a batch to be sent.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1OTQzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444459438", "bodyText": "Does this utility class resolve this issue? #7549", "author": "alzimmermsft", "createdAt": "2020-06-23T19:33:18Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUwOTM5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444509392", "bodyText": "Yes, I had not seen this issue earlier but I think this PR will address this issue too.", "author": "srnagar", "createdAt": "2020-06-23T21:07:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1OTQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\nindex 9781d9c4853..0c1c27a9441 100644\n--- a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n+++ b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n\n@@ -19,47 +19,13 @@ public final class UserAgentUtil {\n     // <language runtime>; <os name> <os version>\n     private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n \n+    // Maximum length of application id defined in the design guidelines.\n+    private static final int MAX_APP_ID_LENGTH = 24;\n+\n     private UserAgentUtil() {\n         // don't instantiate\n     }\n \n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion) {\n-        return toUserAgentString(null, sdkName, sdkVersion);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n-     * string.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion,\n-        Configuration configuration) {\n-        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param applicationId Name of the application.\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n-        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n-    }\n-\n     /**\n      * Return user agent string for the given sdk name and version.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MTMwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444461305", "bodyText": "Thoughts on removing the Configuration-less APIs? If we need to extend these in the future to also add a property such as String features there would be the need for many additional APIs. Also, right now these additional APIs are only an internal convenience which we could handle with internal code.", "author": "alzimmermsft", "createdAt": "2020-06-23T19:37:07Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\nindex 9781d9c4853..0c1c27a9441 100644\n--- a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n+++ b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n\n@@ -19,47 +19,13 @@ public final class UserAgentUtil {\n     // <language runtime>; <os name> <os version>\n     private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n \n+    // Maximum length of application id defined in the design guidelines.\n+    private static final int MAX_APP_ID_LENGTH = 24;\n+\n     private UserAgentUtil() {\n         // don't instantiate\n     }\n \n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion) {\n-        return toUserAgentString(null, sdkName, sdkVersion);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n-     * string.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion,\n-        Configuration configuration) {\n-        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param applicationId Name of the application.\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n-        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n-    }\n-\n     /**\n      * Return user agent string for the given sdk name and version.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MTY5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444461691", "bodyText": "Thoughts on only offering this API to begin? Would be trivial to add reduced parameter overloads but can't remove them once they are shipped.", "author": "alzimmermsft", "createdAt": "2020-06-23T19:37:49Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\nindex 9781d9c4853..0c1c27a9441 100644\n--- a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n+++ b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n\n@@ -19,47 +19,13 @@ public final class UserAgentUtil {\n     // <language runtime>; <os name> <os version>\n     private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n \n+    // Maximum length of application id defined in the design guidelines.\n+    private static final int MAX_APP_ID_LENGTH = 24;\n+\n     private UserAgentUtil() {\n         // don't instantiate\n     }\n \n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion) {\n-        return toUserAgentString(null, sdkName, sdkVersion);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n-     * string.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion,\n-        Configuration configuration) {\n-        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param applicationId Name of the application.\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n-        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n-    }\n-\n     /**\n      * Return user agent string for the given sdk name and version.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MjY4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444462681", "bodyText": "Should we remove the String.format and handle appending into the StringBuilder to match the format.", "author": "alzimmermsft", "createdAt": "2020-06-23T19:39:54Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        StringBuilder userAgentBuilder = new StringBuilder();\n+\n+        // Only add the application ID if it is present as it is optional.\n+        if (applicationId != null) {\n+            applicationId = applicationId.length() > 24 ? applicationId.substring(0, 24) : applicationId;\n+            userAgentBuilder.append(applicationId).append(\" \");\n+        }\n+\n+        // Add the required default User-Agent string.\n+        userAgentBuilder.append(String.format(DEFAULT_USER_AGENT_FORMAT, sdkName, sdkVersion));", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\nindex 9781d9c4853..0c1c27a9441 100644\n--- a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n+++ b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n\n@@ -19,47 +19,13 @@ public final class UserAgentUtil {\n     // <language runtime>; <os name> <os version>\n     private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n \n+    // Maximum length of application id defined in the design guidelines.\n+    private static final int MAX_APP_ID_LENGTH = 24;\n+\n     private UserAgentUtil() {\n         // don't instantiate\n     }\n \n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion) {\n-        return toUserAgentString(null, sdkName, sdkVersion);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n-     * string.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion,\n-        Configuration configuration) {\n-        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param applicationId Name of the application.\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n-        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n-    }\n-\n     /**\n      * Return user agent string for the given sdk name and version.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NjAzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444476032", "bodyText": "Can 24 be made into a private constant? So if we need to change it, we can without missing a place. Also, how did we come up with 24? :)", "author": "conniey", "createdAt": "2020-06-23T20:05:44Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package com.azure.core.util;\n+\n+/**\n+ * Utility for building user agent string for Azure client libraries as specified in the\n+ * <a href=\"https://azure.github.io/azure-sdk/general_azurecore.html#telemetry-policy\">design guidelines</a>.\n+ */\n+public final class UserAgentUtil {\n+\n+    public static final String DEFAULT_USER_AGENT_HEADER = \"azsdk-java\";\n+\n+    /*\n+     * The base User-Agent header format is azsdk-java-<client_lib>/<sdk_version>. Additional information such as the\n+     * application ID will be prepended and platform telemetry will be appended, a fully configured User-Agent header\n+     * format is <application_id> azsdk-java-<client_lib>/<sdk_version> <platform_info>.\n+     */\n+    private static final String DEFAULT_USER_AGENT_FORMAT = DEFAULT_USER_AGENT_HEADER + \"-%s/%s\";\n+\n+    // From the design guidelines, the platform info format is:\n+    // <language runtime>; <os name> <os version>\n+    private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n+\n+    private UserAgentUtil() {\n+        // don't instantiate\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion) {\n+        return toUserAgentString(null, sdkName, sdkVersion);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n+        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n+    }\n+\n+    /**\n+     * Return user agent string for the given sdk name and version.\n+     *\n+     * @param applicationId Name of the application.\n+     * @param sdkName Name of the SDK.\n+     * @param sdkVersion Version of the SDK.\n+     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n+     * string.\n+     * @return User agent string as specified in design guidelines.\n+     */\n+    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion,\n+        Configuration configuration) {\n+        StringBuilder userAgentBuilder = new StringBuilder();\n+\n+        // Only add the application ID if it is present as it is optional.\n+        if (applicationId != null) {\n+            applicationId = applicationId.length() > 24 ? applicationId.substring(0, 24) : applicationId;", "originalCommit": "38da357fdde95848fa1517d1393a6562511ed06d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "chunk": "diff --git a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\nindex 9781d9c4853..0c1c27a9441 100644\n--- a/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n+++ b/sdk/core/azure-core/src/main/java/com/azure/core/util/UserAgentUtil.java\n\n@@ -19,47 +19,13 @@ public final class UserAgentUtil {\n     // <language runtime>; <os name> <os version>\n     private static final String PLATFORM_INFO_FORMAT = \"%s; %s; %s\";\n \n+    // Maximum length of application id defined in the design guidelines.\n+    private static final int MAX_APP_ID_LENGTH = 24;\n+\n     private UserAgentUtil() {\n         // don't instantiate\n     }\n \n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion) {\n-        return toUserAgentString(null, sdkName, sdkVersion);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @param configuration The configuration to use to determine if platform info should be included in the user agent\n-     * string.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String sdkName, String sdkVersion,\n-        Configuration configuration) {\n-        return toUserAgentString(null, sdkName, sdkVersion, configuration);\n-    }\n-\n-    /**\n-     * Return user agent string for the given sdk name and version.\n-     *\n-     * @param applicationId Name of the application.\n-     * @param sdkName Name of the SDK.\n-     * @param sdkVersion Version of the SDK.\n-     * @return User agent string as specified in design guidelines.\n-     */\n-    public static String toUserAgentString(String applicationId, String sdkName, String sdkVersion) {\n-        return toUserAgentString(applicationId, sdkName, sdkVersion, null);\n-    }\n-\n     /**\n      * Return user agent string for the given sdk name and version.\n      *\n"}}, {"oid": "0ebbc9035ae651129d926ff62c7cc57f4179a17a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ebbc9035ae651129d926ff62c7cc57f4179a17a", "message": "Address PR comments", "committedDate": "2020-06-23T21:29:22Z", "type": "commit"}, {"oid": "f6d398a11b7cc90fbe72940a1dd7c321e5bba271", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f6d398a11b7cc90fbe72940a1dd7c321e5bba271", "message": "Fix checkstyle", "committedDate": "2020-06-23T23:41:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODc2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444628767", "bodyText": "Should this print 'null/null' or just be empty strings?", "author": "JonathanGiles", "createdAt": "2020-06-24T03:49:07Z", "path": "sdk/core/azure-core/src/test/java/com/azure/core/util/UserAgentUtilTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Unit tests for {@link UserAgentUtil}.\n+ */\n+public class UserAgentUtilTest {\n+\n+    @Test\n+    void testUserAgentStringFormat() {\n+        String javaVersion = System.getProperty(\"java.version\");\n+        String osName = System.getProperty(\"os.name\");\n+        String osVersion = System.getProperty(\"os.version\");\n+        String plaform = new StringBuilder().append(\"(\")\n+            .append(javaVersion).append(\"; \")\n+            .append(osName).append(\"; \")\n+            .append(osVersion).append(\")\")\n+            .toString();\n+\n+        // with platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\", null));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // without platform info\n+        assertEquals(\"azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(null, \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+        assertEquals(\"myapp azsdk-java-azure-storage-blob/12.0.0\",\n+            UserAgentUtil.toUserAgentString(\"myapp\", \"azure-storage-blob\", \"12.0.0\",\n+                Configuration.getGlobalConfiguration().clone().put(\"AZURE_TELEMETRY_DISABLED\", \"true\")));\n+\n+        // long app id should be truncated\n+        assertEquals(\"ReallyLongApplicationIde azsdk-java-azure-storage-blob/12.0.0 \" + plaform,\n+            UserAgentUtil.toUserAgentString(\"ReallyLongApplicationIdentity\", \"azure-storage-blob\", \"12.0.0\", null));\n+\n+        // null sdk name and version\n+        assertEquals(\"myapp azsdk-java-null/null \" + plaform,", "originalCommit": "f6d398a11b7cc90fbe72940a1dd7c321e5bba271", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNjY4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12456#discussion_r444636683", "bodyText": "This is the existing format and it might be useful in doing a regex match to extract fields from the user agent string.", "author": "srnagar", "createdAt": "2020-06-24T04:24:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyODc2Nw=="}], "type": "inlineReview", "revised_code": null}]}