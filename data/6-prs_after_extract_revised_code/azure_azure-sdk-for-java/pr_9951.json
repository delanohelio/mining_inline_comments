{"pr_number": 9951, "pr_title": "Receive from one named session", "pr_createdAt": "2020-04-08T04:49:15Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9951", "timeline": [{"oid": "a6dd348ea08ca446f0480ac4dcdf229efc88b90a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a6dd348ea08ca446f0480ac4dcdf229efc88b90a", "message": "receive from one named session", "committedDate": "2020-04-08T04:44:42Z", "type": "commit"}, {"oid": "87d09bf358ed63c33d040bcdce4ee745a3b366cf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/87d09bf358ed63c33d040bcdce4ee745a3b366cf", "message": "receive from one named session", "committedDate": "2020-04-08T04:51:14Z", "type": "commit"}, {"oid": "9b2e06ead9159503ecd0ab9fce41960d24f5a9f8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9b2e06ead9159503ecd0ab9fce41960d24f5a9f8", "message": "receive from one named session", "committedDate": "2020-04-08T04:59:45Z", "type": "commit"}, {"oid": "d04b5408fe0f5e14e358a961eadfad1cb98264ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d04b5408fe0f5e14e358a961eadfad1cb98264ce", "message": "fix test", "committedDate": "2020-04-08T05:26:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDE0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405610148", "bodyText": "Why the change to object?", "author": "conniey", "createdAt": "2020-04-08T15:25:13Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/ReactorSession.java", "diffHunk": "@@ -356,7 +355,7 @@ protected ReactorReceiver createConsumer(String entityPath, Receiver receiver,\n      * NOTE: Ensure this is invoked using the reactor dispatcher because proton-j is not thread-safe.\n      */\n     private LinkSubscription<AmqpReceiveLink> getSubscription(String linkName, String entityPath,\n-        Map<Symbol, UnknownDescribedType> sourceFilters, Map<Symbol, Object> receiverProperties,\n+        Map<Symbol, Object> sourceFilters, Map<Symbol, Object> receiverProperties,", "originalCommit": "d04b5408fe0f5e14e358a961eadfad1cb98264ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDUwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405610502", "bodyText": "You can translate an object into that type.", "author": "conniey", "createdAt": "2020-04-08T15:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMDE0OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMTE5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405611195", "bodyText": "I'd dump it into receiver options. And probably pull in is session enabled, too", "author": "conniey", "createdAt": "2020-04-08T15:26:41Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -105,7 +106,7 @@\n      * @param onClientClose Operation to run when the client completes.\n      */\n     ServiceBusReceiverAsyncClient(String fullyQualifiedNamespace, String entityPath, MessagingEntityType entityType,\n-        boolean isSessionEnabled, ReceiverOptions receiverOptions,\n+        boolean isSessionEnabled, String sessionId, ReceiverOptions receiverOptions,", "originalCommit": "d04b5408fe0f5e14e358a961eadfad1cb98264ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfea1b51480efe4813397116c715ead9f3495ce9", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex 235e870cb17..a41e590044d 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -106,9 +105,9 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * @param onClientClose Operation to run when the client completes.\n      */\n     ServiceBusReceiverAsyncClient(String fullyQualifiedNamespace, String entityPath, MessagingEntityType entityType,\n-        boolean isSessionEnabled, String sessionId, ReceiverOptions receiverOptions,\n-        ServiceBusConnectionProcessor connectionProcessor, TracerProvider tracerProvider,\n-        MessageSerializer messageSerializer, MessageLockContainer messageLockContainer, Runnable onClientClose) {\n+        ReceiverOptions receiverOptions, ServiceBusConnectionProcessor connectionProcessor,\n+        TracerProvider tracerProvider, MessageSerializer messageSerializer, MessageLockContainer messageLockContainer,\n+        Runnable onClientClose){\n \n         this.fullyQualifiedNamespace = Objects.requireNonNull(fullyQualifiedNamespace,\n             \"'fullyQualifiedNamespace' cannot be null.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxMjAxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405612012", "bodyText": "I know we had unused sessionenabled. But add another method rather than everything in this method", "author": "conniey", "createdAt": "2020-04-08T15:27:45Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -44,5 +44,5 @@\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        boolean isSession, String sessionId, String transferEntityPath, MessagingEntityType entityType);\n }", "originalCommit": "d04b5408fe0f5e14e358a961eadfad1cb98264ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cfea1b51480efe4813397116c715ead9f3495ce9", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\nindex 6555c48b3d3..7e53451906e 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n\n@@ -43,6 +43,25 @@ public interface ServiceBusAmqpConnection extends AmqpConnection {\n      *\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n+    Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n+        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+\n+    /**\n+     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n+     * same {@code linkName}. Otherwise, a new link is created and returned.\n+     *\n+     * @param linkName The name of the link.\n+     * @param entityPath The remote address to connect to for the message broker.\n+     * @param transferEntityPath Path if the events should be transferred to another link after being received from this\n+     *     link.\n+     * @param receiveMode {@link ReceiveMode} to use when creating the link.\n+     * @param isSession to use when creating the link.\n+     * @param sessionId to use when creating the link.\n+     * @param transferEntityPath to use when creating the link.\n+     * @param entityType {@link MessagingEntityType} to use when creating the link.\n+     *\n+     * @return A new or existing receive link that is connected to the given {@code entityPath}.\n+     */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n         boolean isSession, String sessionId, String transferEntityPath, MessagingEntityType entityType);\n }\n"}}, {"oid": "cfea1b51480efe4813397116c715ead9f3495ce9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cfea1b51480efe4813397116c715ead9f3495ce9", "message": "incorporated review  comments", "committedDate": "2020-04-08T19:00:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1ODU4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405758587", "bodyText": "This doesn't need to be a mutable object. That's why the other fields are read-only.", "author": "conniey", "createdAt": "2020-04-08T19:22:09Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -27,10 +29,43 @@ ReceiveMode getReceiveMode() {\n     }\n \n     /**\n-     * Gets the prefetch count of the receiver.\n+     * Update enableSession flag.", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\nindex 21a4b026637..5dbe9225189 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n\n@@ -28,27 +34,6 @@ class ReceiverOptions {\n         return receiveMode;\n     }\n \n-    /**\n-     * Update enableSession flag.\n-     * @param isSessionEnabled {@code true} if sessions are enabled; {@code false} otherwise.\n-     *\n-     * @return updated {@link ReceiverOptions} .\n-     */\n-    ReceiverOptions setEnableSession(boolean isSessionEnabled) {\n-        this.enableSession = isSessionEnabled;\n-        return this;\n-    }\n-\n-    /**\n-     * Update sessionId.\n-     *\n-     * @return updated {@link ReceiverOptions} .\n-     */\n-    ReceiverOptions setSessionId(String sessionId) {\n-        this.sessionId = sessionId;\n-        return this;\n-    }\n-\n     /**\n      * Gets the sessionId for the message.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1ODg1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405758850", "bodyText": "The options don't seem to be propagated here.", "author": "conniey", "createdAt": "2020-04-08T19:22:40Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -593,8 +606,8 @@ public ServiceBusReceiverAsyncClient buildAsyncClient() {\n             final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount);", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "533ee1c1069d57108bf36e9e4f730587296c522d", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex 316fc371b0b..1fdeb2b719e 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -603,7 +603,8 @@ public final class ServiceBusClientBuilder {\n \n             final MessageLockContainer messageLockContainer = new MessageLockContainer();\n             final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n-            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount);\n+            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount)\n+                .setSessionId(sessionId);\n \n             return new ServiceBusReceiverAsyncClient(connectionProcessor.getFullyQualifiedNamespace(), entityPath,\n                 entityType, receiverOptions, connectionProcessor,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTIzMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759231", "bodyText": "You don't need to create dedicated fields now. A reference to the receiverOptions is held by the class.", "author": "conniey", "createdAt": "2020-04-08T19:23:23Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -121,7 +121,8 @@\n         this.receiveMode = receiverOptions.getReceiveMode();\n \n         this.entityType = entityType;\n-        this.isSessionEnabled = isSessionEnabled;\n+        this.isSessionEnabled = receiverOptions.isSessionEnabled();", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex a41e590044d..a735ef9e280 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -122,7 +121,6 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n \n         this.entityType = entityType;\n         this.isSessionEnabled = receiverOptions.isSessionEnabled();\n-        this.sessionId = receiverOptions.getSessionId();\n         this.messageLockContainer = messageLockContainer;\n         this.onClientClose = onClientClose;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTU5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759599", "bodyText": "Since this is a normal link creation, we don't need isSession.", "author": "conniey", "createdAt": "2020-04-08T19:24:04Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -45,4 +45,23 @@\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\nindex 7e53451906e..f84f981b84b 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n\n@@ -44,7 +44,7 @@ public interface ServiceBusAmqpConnection extends AmqpConnection {\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        String transferEntityPath, MessagingEntityType entityType);\n \n     /**\n      * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1OTg0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405759844", "bodyText": "This would be an overload where you don't need \"isSession\" because we'd have a sessionId. And the parameter would be at the end.", "author": "conniey", "createdAt": "2020-04-08T19:24:31Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -45,4 +45,23 @@\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n         boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+\n+    /**\n+     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n+     * same {@code linkName}. Otherwise, a new link is created and returned.\n+     *\n+     * @param linkName The name of the link.\n+     * @param entityPath The remote address to connect to for the message broker.\n+     * @param transferEntityPath Path if the events should be transferred to another link after being received from this\n+     *     link.\n+     * @param receiveMode {@link ReceiveMode} to use when creating the link.\n+     * @param isSession to use when creating the link.\n+     * @param sessionId to use when creating the link.\n+     * @param transferEntityPath to use when creating the link.\n+     * @param entityType {@link MessagingEntityType} to use when creating the link.\n+     *\n+     * @return A new or existing receive link that is connected to the given {@code entityPath}.\n+     */\n+    Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\nindex 7e53451906e..f84f981b84b 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n\n@@ -44,7 +44,7 @@ public interface ServiceBusAmqpConnection extends AmqpConnection {\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        String transferEntityPath, MessagingEntityType entityType);\n \n     /**\n      * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2MTA2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r405761069", "bodyText": "I'd be inclined to create another method createConsumer and remove the isSession. One createconsumer for normal receives, one for sessions, and another one to support transactions in the future.", "author": "conniey", "createdAt": "2020-04-08T19:26:57Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java", "diffHunk": "@@ -66,14 +66,14 @@\n \n     @Override\n     public Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType,\n-        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, boolean isSession) {\n+        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, boolean isSession, String sessionId) {", "originalCommit": "cfea1b51480efe4813397116c715ead9f3495ce9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java\nindex ed57ffc6211..c50966f1a3a 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorSession.java\n\n@@ -66,7 +66,13 @@ class ServiceBusReactorSession extends ReactorSession implements ServiceBusSessi\n \n     @Override\n     public Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType,\n-        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, boolean isSession, String sessionId) {\n+         Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode) {\n+        return createConsumer(linkName, entityPath, entityType, timeout, retry, receiveMode, null);\n+    }\n+\n+    @Override\n+    public Mono<AmqpReceiveLink> createConsumer(String linkName, String entityPath, MessagingEntityType entityType,\n+        Duration timeout, AmqpRetryPolicy retry, ReceiveMode receiveMode, String sessionId) {\n         Objects.requireNonNull(linkName, \"'linkName' cannot be null.\");\n         Objects.requireNonNull(entityPath, \"'entityPath' cannot be null.\");\n         Objects.requireNonNull(timeout, \"'timeout' cannot be null.\");\n"}}, {"oid": "533ee1c1069d57108bf36e9e4f730587296c522d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/533ee1c1069d57108bf36e9e4f730587296c522d", "message": "incorporated review  comments", "committedDate": "2020-04-08T19:31:21Z", "type": "commit"}, {"oid": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "url": "https://github.com/Azure/azure-sdk-for-java/commit/914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "message": "incorporating review comments", "committedDate": "2020-04-08T22:55:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4Njc2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406786768", "bodyText": "Why is it always false? If later on, you're inferring it from the presence of a sessionId, the \"enableSession\" isn't required.", "author": "conniey", "createdAt": "2020-04-10T14:38:24Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -590,11 +603,12 @@ public ServiceBusReceiverAsyncClient buildAsyncClient() {\n \n             final MessageLockContainer messageLockContainer = new MessageLockContainer();\n             final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n-            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount);\n+            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount,\n+                false, sessionId);", "originalCommit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "151b6910485c6430833fd36aa2c8c240bc698452", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex 551f1e9f1ef..1ca636a9cff 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -604,7 +604,7 @@ public final class ServiceBusClientBuilder {\n             final MessageLockContainer messageLockContainer = new MessageLockContainer();\n             final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n             final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount,\n-                false, sessionId);\n+                sessionId);\n \n             return new ServiceBusReceiverAsyncClient(connectionProcessor.getFullyQualifiedNamespace(), entityPath,\n                 entityType, receiverOptions, connectionProcessor,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4NzU2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406787564", "bodyText": "Doc update: Creates a receive link for sessions.\nSince this is similar to the method above, I had mentioned to add the \"SessionId\" to the end of the parameter list as an overload. This would be easier to consume.", "author": "conniey", "createdAt": "2020-04-10T14:40:14Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java", "diffHunk": "@@ -44,5 +44,23 @@\n      * @return A new or existing receive link that is connected to the given {@code entityPath}.\n      */\n     Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType);\n+        String transferEntityPath, MessagingEntityType entityType);\n+\n+    /**\n+     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the", "originalCommit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "151b6910485c6430833fd36aa2c8c240bc698452", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\nindex f84f981b84b..0b898803e7d 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusAmqpConnection.java\n\n@@ -47,8 +47,8 @@ public interface ServiceBusAmqpConnection extends AmqpConnection {\n         String transferEntityPath, MessagingEntityType entityType);\n \n     /**\n-     * Creates or gets an existing receive link. The same link is returned if there is an existing receive link with the\n-     * same {@code linkName}. Otherwise, a new link is created and returned.\n+     * Creates or gets an existing receive link for a given sessionId. The same link is returned if there is an\n+     * existing receive link with the same {@code linkName}. Otherwise, a new link is created and returned.\n      *\n      * @param linkName The name of the link.\n      * @param entityPath The remote address to connect to for the message broker.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4ODM0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406788346", "bodyText": "Since these are performing two different operations, and you have created a separate method in ReactorSession for creating a consumer with a sessionId. This should call that.", "author": "conniey", "createdAt": "2020-04-10T14:42:01Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java", "diffHunk": "@@ -159,14 +159,34 @@ public ServiceBusReactorAmqpConnection(String connectionId, ConnectionOptions co\n      */\n     @Override\n     public Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n-        boolean isSession, String transferEntityPath, MessagingEntityType entityType) {\n+        String transferEntityPath, MessagingEntityType entityType) {\n+        return createReceiveLink(linkName, entityPath, receiveMode, null,", "originalCommit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "151b6910485c6430833fd36aa2c8c240bc698452", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\nindex 7c0f9fe5b36..9cfa92acb03 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusReactorAmqpConnection.java\n\n@@ -160,8 +160,14 @@ public class ServiceBusReactorAmqpConnection extends ReactorConnection implement\n     @Override\n     public Mono<AmqpReceiveLink> createReceiveLink(String linkName, String entityPath, ReceiveMode receiveMode,\n         String transferEntityPath, MessagingEntityType entityType) {\n-        return createReceiveLink(linkName, entityPath, receiveMode, null,\n-            transferEntityPath, entityType);\n+        return createSession(entityPath).cast(ServiceBusSession.class)\n+            .flatMap(session -> {\n+                logger.verbose(\"Get or create consumer for path: '{}'\", entityPath);\n+                final AmqpRetryPolicy retryPolicy = RetryUtil.getRetryPolicy(retryOptions);\n+\n+                return session.createConsumer(linkName, entityPath, entityType, retryOptions.getTryTimeout(),\n+                    retryPolicy, receiveMode);\n+            });\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc4ODg5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406788898", "bodyText": "This wouldn't work because we need a session enabled queue. You'd have to update the ARM template to create one.", "author": "conniey", "createdAt": "2020-04-10T14:43:18Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java", "diffHunk": "@@ -24,11 +24,13 @@\n \n class ServiceBusReceiverAsyncClientIntegrationTest extends IntegrationTestBase {\n     private static final String CONTENTS = \"Test-contents\";\n+    private static final String SESSION_ID = \"seattle-id1\";", "originalCommit": "914aa5ca1350eed30f94d5e3dbe8b3edbf6ed258", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a1a30333112e5a956d2eae15dcd44c061b78c4e7", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java\nindex c5f27dabfb8..4a672486148 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientIntegrationTest.java\n\n@@ -4,31 +4,40 @@\n package com.azure.messaging.servicebus;\n \n import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.servicebus.implementation.DispositionStatus;\n import com.azure.messaging.servicebus.models.ReceiveAsyncOptions;\n import com.azure.messaging.servicebus.models.ReceiveMode;\n-import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n import reactor.core.publisher.Mono;\n import reactor.test.StepVerifier;\n \n+import java.nio.charset.StandardCharsets;\n import java.time.Duration;\n import java.time.Instant;\n import java.util.Map;\n import java.util.UUID;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.stream.Stream;\n \n import static com.azure.messaging.servicebus.TestUtils.MESSAGE_TRACKING_ID;\n import static com.azure.messaging.servicebus.TestUtils.getServiceBusMessage;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n \n class ServiceBusReceiverAsyncClientIntegrationTest extends IntegrationTestBase {\n     private static final String CONTENTS = \"Test-contents\";\n-    private static final String SESSION_ID = \"seattle-id1\";\n+    private static final String SESSION_ID = \"mysession-id1\";\n     private final ClientLogger logger = new ClientLogger(ServiceBusReceiverAsyncClientIntegrationTest.class);\n \n     private ServiceBusReceiverAsyncClient receiver;\n-    private ServiceBusReceiverAsyncClient receiverManualComplete;\n     private ServiceBusReceiverAsyncClient receiveDeleteModeReceiver;\n     private ServiceBusReceiverAsyncClient sessionReceiveDeleteModeReceiver;\n     private ServiceBusSenderAsyncClient sender;\n"}}, {"oid": "151b6910485c6430833fd36aa2c8c240bc698452", "url": "https://github.com/Azure/azure-sdk-for-java/commit/151b6910485c6430833fd36aa2c8c240bc698452", "message": "Review comments", "committedDate": "2020-04-10T15:33:52Z", "type": "commit"}, {"oid": "a1a30333112e5a956d2eae15dcd44c061b78c4e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1a30333112e5a956d2eae15dcd44c061b78c4e7", "message": "merge master", "committedDate": "2020-04-10T15:43:28Z", "type": "commit"}, {"oid": "f90124b4cf27e9d8b752f1e6292d22fc7e1ec3a8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f90124b4cf27e9d8b752f1e6292d22fc7e1ec3a8", "message": "Added session queue creation in ARM", "committedDate": "2020-04-10T15:54:16Z", "type": "commit"}, {"oid": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac", "url": "https://github.com/Azure/azure-sdk-for-java/commit/76618c8b564a8f6caf0e306e7674f6e4e7ca39ac", "message": "fix test", "committedDate": "2020-04-10T15:55:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzM3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943374", "bodyText": "Reformat the code. There are two spaces here.", "author": "conniey", "createdAt": "2020-04-10T21:02:50Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java", "diffHunk": "@@ -233,8 +232,8 @@ void receivesAndAutoCompletes() {\n         // Arrange\n         final ReceiverOptions options = new ReceiverOptions(ReceiveMode.PEEK_LOCK, PREFETCH);\n         final ServiceBusReceiverAsyncClient consumer2 = new ServiceBusReceiverAsyncClient(\n-            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, false, options, connectionProcessor,\n-            tracerProvider, messageSerializer, messageContainer, onClientClose);\n+            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, options, connectionProcessor,  tracerProvider,", "originalCommit": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e54c23e78b8bbb99bfb95d0a7bfdd23343cdf9e", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java\nindex 9ea9394c4e5..6c078d74ebb 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClientTest.java\n\n@@ -230,9 +230,9 @@ class ServiceBusReceiverAsyncClientTest {\n     @Test\n     void receivesAndAutoCompletes() {\n         // Arrange\n-        final ReceiverOptions options = new ReceiverOptions(ReceiveMode.PEEK_LOCK, PREFETCH);\n+        final ReceiverOptions options = new ReceiverOptions(ReceiveMode.PEEK_LOCK, PREFETCH, null);\n         final ServiceBusReceiverAsyncClient consumer2 = new ServiceBusReceiverAsyncClient(\n-            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, options, connectionProcessor,  tracerProvider,\n+            NAMESPACE, ENTITY_PATH, MessagingEntityType.QUEUE, options, connectionProcessor, tracerProvider,\n             messageSerializer, messageContainer, onClientClose);\n \n         final UUID lockToken1 = UUID.randomUUID();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0MzU0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943548", "bodyText": "Why do we need another constructor? This is only used in SBCB to pass to the receiver.", "author": "conniey", "createdAt": "2020-04-10T21:03:23Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -11,10 +11,16 @@\n class ReceiverOptions {\n     private final ReceiveMode receiveMode;\n     private final int prefetchCount;\n+    private final String sessionId;\n \n     ReceiverOptions(ReceiveMode receiveMode, int prefetchCount) {\n+        this(receiveMode, prefetchCount, null);", "originalCommit": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e54c23e78b8bbb99bfb95d0a7bfdd23343cdf9e", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\nindex c286e1d7d1c..20c290f88d7 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n\n@@ -13,10 +13,6 @@ class ReceiverOptions {\n     private final int prefetchCount;\n     private final String sessionId;\n \n-    ReceiverOptions(ReceiveMode receiveMode, int prefetchCount) {\n-        this(receiveMode, prefetchCount, null);\n-    }\n-\n     ReceiverOptions(ReceiveMode receiveMode, int prefetchCount, String sessionId) {\n         this.receiveMode = receiveMode;\n         this.prefetchCount = prefetchCount;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk0Mzc1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9951#discussion_r406943751", "bodyText": "\"Id of the session to receive messages from.\"", "author": "conniey", "createdAt": "2020-04-10T21:03:56Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -27,10 +33,14 @@ ReceiveMode getReceiveMode() {\n     }\n \n     /**\n-     * Gets the prefetch count of the receiver.\n+     * Gets the sessionId for the message.\n      *\n-     * @return The prefetch count of the receiver.\n+     * @return the sessionId for the message.", "originalCommit": "76618c8b564a8f6caf0e306e7674f6e4e7ca39ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5e54c23e78b8bbb99bfb95d0a7bfdd23343cdf9e", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\nindex c286e1d7d1c..20c290f88d7 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n\n@@ -35,7 +31,7 @@ class ReceiverOptions {\n     /**\n      * Gets the sessionId for the message.\n      *\n-     * @return the sessionId for the message.\n+     * @return Id of the session to receive messages from.\n      */\n     String getSessionId() {\n         return sessionId;\n"}}, {"oid": "5e54c23e78b8bbb99bfb95d0a7bfdd23343cdf9e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e54c23e78b8bbb99bfb95d0a7bfdd23343cdf9e", "message": "Review comments", "committedDate": "2020-04-10T21:54:16Z", "type": "commit"}]}