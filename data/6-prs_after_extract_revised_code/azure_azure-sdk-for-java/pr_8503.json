{"pr_number": 8503, "pr_title": "Standardize Search Client Builders", "pr_createdAt": "2020-02-26T21:57:29Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8503", "timeline": [{"oid": "1bd9321df49b7a8a012f4a94fd0948efa25a43e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1bd9321df49b7a8a012f4a94fd0948efa25a43e7", "message": "Cleaning up builders", "committedDate": "2020-02-26T21:56:12Z", "type": "commit"}, {"oid": "dcf4ad7a0e13cc6918535d9c02d2bc8ece511ecb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dcf4ad7a0e13cc6918535d9c02d2bc8ece511ecb", "message": "Merge branch 'master' into AzSearch_RemoveClientRequestId", "committedDate": "2020-02-26T22:32:07Z", "type": "commit"}, {"oid": "59d40ba552c84520c1791ae597be5fe19504c410", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59d40ba552c84520c1791ae597be5fe19504c410", "message": "Fix linting issue", "committedDate": "2020-02-26T22:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxOTg0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384819843", "bodyText": "Are these checked anywhere?", "author": "sima-zhu", "createdAt": "2020-02-26T23:00:32Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java", "diffHunk": "@@ -95,17 +95,6 @@\n         HttpPipeline httpPipeline) {\n \n         SearchServiceUrlParts parts = SearchServiceUrlParser.parseServiceUrlParts(endpoint);\n-", "originalCommit": "59d40ba552c84520c1791ae597be5fe19504c410", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyOTg3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384829871", "bodyText": "Never mind. Found in API", "author": "sima-zhu", "createdAt": "2020-02-26T23:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxOTg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "470d782087288ad24b69749ce2f0e50eda8f91fe", "chunk": "diff --git a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java\nindex 792cae536e..f64df5e6cb 100644\n--- a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java\n+++ b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexAsyncClient.java\n\n@@ -91,20 +91,20 @@ public class SearchIndexAsyncClient {\n     /**\n      * Package private constructor to be used by {@link SearchIndexClientBuilder}\n      */\n-    SearchIndexAsyncClient(String endpoint, String indexName, SearchServiceVersion apiVersion,\n+    SearchIndexAsyncClient(String endpoint, String indexName, SearchServiceVersion searchServiceVersion,\n         HttpPipeline httpPipeline) {\n \n         SearchServiceUrlParts parts = SearchServiceUrlParser.parseServiceUrlParts(endpoint);\n         this.endpoint = endpoint;\n         this.indexName = indexName;\n-        this.apiVersion = apiVersion;\n+        this.searchServiceVersion = searchServiceVersion;\n         this.httpPipeline = httpPipeline;\n \n         restClient = new SearchIndexRestClientBuilder()\n             .searchServiceName(parts.serviceName)\n             .indexName(indexName)\n             .searchDnsSuffix(parts.dnsSuffix)\n-            .apiVersion(apiVersion.getVersion())\n+            .apiVersion(searchServiceVersion.getVersion())\n             .pipeline(httpPipeline)\n             .serializer(SERIALIZER)\n             .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDk1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384820950", "bodyText": "I have renamed this field. I am going to check in #8393. Please merge my PR.", "author": "sima-zhu", "createdAt": "2020-02-26T23:03:25Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java", "diffHunk": "@@ -34,81 +33,131 @@\n  * SearchIndexClients} and {@link SearchIndexAsyncClient SearchIndexAsyncClients}. Call {@link #buildClient()\n  * buildClient} and {@link #buildAsyncClient() buildAsyncClient} respectively to construct an instance of the desired\n  * client.\n- *\n- * The following information must be provided on this builder: the Azure Cognitive Search service endpoint through\n- * {@code .endpoint()} the index name through {@code .indexName()} the API key through {@code .credential()}\n+ * <p>\n+ * The following information must be provided to successfully create a client.\n+ * <ul>\n+ *     <li>{@link #endpoint(String)}</li>\n+ *     <li>{@link #indexName(String)}</li>\n+ *     <li>{@link #credential(SearchApiKeyCredential)} or {@link #pipeline(HttpPipeline)}</li>\n+ * </ul>\n  */\n @ServiceClientBuilder(serviceClients = {SearchIndexClient.class, SearchIndexAsyncClient.class})\n public class SearchIndexClientBuilder {\n-\n-    // This header tells the server to return the request id in the HTTP response. Useful for correlation with what\n-    // request was sent.\n+    /*\n+     * This header tells the service to return the request ID in the HTTP response. This is useful for correlating the\n+     * request sent to the response.\n+     */\n     private static final String ECHO_REQUEST_ID_HEADER = \"x-ms-return-client-request-id\";\n \n+    /*\n+     * This is the name of the request ID header that the Search service expects. If the customer doesn't pass\n+     * RequestOptions into a service call this will allow for the client to implicitly add a request ID header,\n+     * otherwise the passed request ID will be used.\n+     */\n+    private static final String CLIENT_REQUEST_ID = \"client-request-id\";\n+\n     private static final String SEARCH_PROPERTIES = \"azure-search.properties\";\n     private static final String NAME = \"name\";\n     private static final String VERSION = \"version\";\n \n-    SearchApiKeyCredential searchApiKeyCredential;\n-    SearchServiceVersion apiVersion;\n-    String endpoint;\n-    HttpClient httpClient;\n-    HttpLogOptions httpLogOptions;\n-    Configuration configuration;\n-    List<HttpPipelinePolicy> policies;\n-    private String clientName;\n-    private String clientVersion;\n+    private final ClientLogger logger = new ClientLogger(SearchIndexClientBuilder.class);\n+    private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+    private final HttpHeaders headers = new HttpHeaders().put(ECHO_REQUEST_ID_HEADER, \"true\");\n \n+    private final String clientName;\n+    private final String clientVersion;\n+\n+    private SearchApiKeyCredential searchApiKeyCredential;\n+    private SearchServiceVersion apiVersion;", "originalCommit": "59d40ba552c84520c1791ae597be5fe19504c410", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1MTM5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384851399", "bodyText": "Will do", "author": "alzimmermsft", "createdAt": "2020-02-27T00:37:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDk1MA=="}], "type": "inlineReview", "revised_code": {"commit": "470d782087288ad24b69749ce2f0e50eda8f91fe", "chunk": "diff --git a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\nindex 74fa14807b..0a32607784 100644\n--- a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n+++ b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n\n@@ -42,7 +42,7 @@ import java.util.Objects;\n  * </ul>\n  */\n @ServiceClientBuilder(serviceClients = {SearchIndexClient.class, SearchIndexAsyncClient.class})\n-public class SearchIndexClientBuilder {\n+public final class SearchIndexClientBuilder {\n     /*\n      * This header tells the service to return the request ID in the HTTP response. This is useful for correlating the\n      * request sent to the response.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMTUxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384821513", "bodyText": "Why removed the default value?", "author": "sima-zhu", "createdAt": "2020-02-26T23:04:49Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java", "diffHunk": "@@ -34,81 +33,131 @@\n  * SearchIndexClients} and {@link SearchIndexAsyncClient SearchIndexAsyncClients}. Call {@link #buildClient()\n  * buildClient} and {@link #buildAsyncClient() buildAsyncClient} respectively to construct an instance of the desired\n  * client.\n- *\n- * The following information must be provided on this builder: the Azure Cognitive Search service endpoint through\n- * {@code .endpoint()} the index name through {@code .indexName()} the API key through {@code .credential()}\n+ * <p>\n+ * The following information must be provided to successfully create a client.\n+ * <ul>\n+ *     <li>{@link #endpoint(String)}</li>\n+ *     <li>{@link #indexName(String)}</li>\n+ *     <li>{@link #credential(SearchApiKeyCredential)} or {@link #pipeline(HttpPipeline)}</li>\n+ * </ul>\n  */\n @ServiceClientBuilder(serviceClients = {SearchIndexClient.class, SearchIndexAsyncClient.class})\n public class SearchIndexClientBuilder {\n-\n-    // This header tells the server to return the request id in the HTTP response. Useful for correlation with what\n-    // request was sent.\n+    /*\n+     * This header tells the service to return the request ID in the HTTP response. This is useful for correlating the\n+     * request sent to the response.\n+     */\n     private static final String ECHO_REQUEST_ID_HEADER = \"x-ms-return-client-request-id\";\n \n+    /*\n+     * This is the name of the request ID header that the Search service expects. If the customer doesn't pass\n+     * RequestOptions into a service call this will allow for the client to implicitly add a request ID header,\n+     * otherwise the passed request ID will be used.\n+     */\n+    private static final String CLIENT_REQUEST_ID = \"client-request-id\";\n+\n     private static final String SEARCH_PROPERTIES = \"azure-search.properties\";\n     private static final String NAME = \"name\";\n     private static final String VERSION = \"version\";\n \n-    SearchApiKeyCredential searchApiKeyCredential;\n-    SearchServiceVersion apiVersion;\n-    String endpoint;\n-    HttpClient httpClient;\n-    HttpLogOptions httpLogOptions;\n-    Configuration configuration;\n-    List<HttpPipelinePolicy> policies;\n-    private String clientName;\n-    private String clientVersion;\n+    private final ClientLogger logger = new ClientLogger(SearchIndexClientBuilder.class);\n+    private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+    private final HttpHeaders headers = new HttpHeaders().put(ECHO_REQUEST_ID_HEADER, \"true\");\n \n+    private final String clientName;\n+    private final String clientVersion;\n+\n+    private SearchApiKeyCredential searchApiKeyCredential;\n+    private SearchServiceVersion apiVersion;\n+    private String endpoint;\n+    private HttpClient httpClient;\n+    private HttpPipeline httpPipeline;\n+    private HttpLogOptions httpLogOptions;\n+    private Configuration configuration;\n     private String indexName;\n-    private final HttpHeaders headers;\n     private RetryPolicy retryPolicy;\n-    private final ClientLogger logger = new ClientLogger(SearchIndexClientBuilder.class);\n+\n \n     /**\n-     * Default Constructor\n+     * Creates a builder instance that is able to configure and construct {@link SearchIndexClient SearchIndexClients}\n+     * and {@link SearchIndexAsyncClient SearchIndexAsyncClients}.\n      */\n     public SearchIndexClientBuilder() {\n-        apiVersion = SearchServiceVersion.getLatest();\n-        policies = new ArrayList<>();\n-        httpClient = HttpClient.createDefault();\n-        httpLogOptions = new HttpLogOptions();\n-\n         Map<String, String> properties = CoreUtils.getProperties(SEARCH_PROPERTIES);\n         clientName = properties.getOrDefault(NAME, \"UnknownName\");\n         clientVersion = properties.getOrDefault(VERSION, \"UnknownVersion\");\n-        headers = new HttpHeaders()", "originalCommit": "59d40ba552c84520c1791ae597be5fe19504c410", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1MTMxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384851312", "bodyText": "This was inline instantiated at the property, no need to include this in the constructor if it will be created for every client.", "author": "alzimmermsft", "createdAt": "2020-02-27T00:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMTUxMw=="}], "type": "inlineReview", "revised_code": {"commit": "470d782087288ad24b69749ce2f0e50eda8f91fe", "chunk": "diff --git a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\nindex 74fa14807b..0a32607784 100644\n--- a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n+++ b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n\n@@ -42,7 +42,7 @@ import java.util.Objects;\n  * </ul>\n  */\n @ServiceClientBuilder(serviceClients = {SearchIndexClient.class, SearchIndexAsyncClient.class})\n-public class SearchIndexClientBuilder {\n+public final class SearchIndexClientBuilder {\n     /*\n      * This header tells the service to return the request ID in the HTTP response. This is useful for correlating the\n      * request sent to the response.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyNzIyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r384827223", "bodyText": "Add @link for SearchApiKeyCredential . The SearchApiKeyCredential is used to authenticate HTTP requests.", "author": "sima-zhu", "createdAt": "2020-02-26T23:21:08Z", "path": "sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java", "diffHunk": "@@ -121,140 +170,139 @@ public SearchIndexClientBuilder endpoint(String endpoint) {\n     }\n \n     /**\n-     * Sets the index name\n+     * Sets the {@link SearchApiKeyCredential} used to authenticate HTTP requests.\n      *\n-     * @param indexName name of the index\n-     * @return the updated SearchIndexClientBuilder object\n+     * @param searchApiKeyCredential SearchApiKeyCredential used to authenticate HTTP requests.", "originalCommit": "59d40ba552c84520c1791ae597be5fe19504c410", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "470d782087288ad24b69749ce2f0e50eda8f91fe", "chunk": "diff --git a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\nindex 74fa14807b..0a32607784 100644\n--- a/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n+++ b/sdk/search/azure-search/src/main/java/com/azure/search/SearchIndexClientBuilder.java\n\n@@ -172,7 +174,7 @@ public class SearchIndexClientBuilder {\n     /**\n      * Sets the {@link SearchApiKeyCredential} used to authenticate HTTP requests.\n      *\n-     * @param searchApiKeyCredential SearchApiKeyCredential used to authenticate HTTP requests.\n+     * @param searchApiKeyCredential The {@link SearchApiKeyCredential} used to authenticate HTTP requests.\n      * @return The updated SearchIndexClientBuilder object.\n      * @throws NullPointerException If {@code searchApiKeyCredential} is {@code null}.\n      * @throws IllegalArgumentException If {@link SearchApiKeyCredential#getApiKey()} is {@code null} or empty.\n"}}, {"oid": "470d782087288ad24b69749ce2f0e50eda8f91fe", "url": "https://github.com/Azure/azure-sdk-for-java/commit/470d782087288ad24b69749ce2f0e50eda8f91fe", "message": "Merged in master", "committedDate": "2020-02-27T01:27:16Z", "type": "commit"}, {"oid": "69b1d9d635d8bdbfde933c8360c55aecf00aedaf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/69b1d9d635d8bdbfde933c8360c55aecf00aedaf", "message": "Fixed missing default HttpLogOptions", "committedDate": "2020-02-27T02:04:20Z", "type": "commit"}, {"oid": "114270a550c04bb530a3774e689cafead5003682", "url": "https://github.com/Azure/azure-sdk-for-java/commit/114270a550c04bb530a3774e689cafead5003682", "message": "Fix builder tests", "committedDate": "2020-02-27T17:20:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3NjE2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r385276168", "bodyText": "To my point of view, error message change is also a breaking change. Verify the message right here can make sure developer pay attention when they make a change to the error message.\nI prefer to assert the message as well.", "author": "sima-zhu", "createdAt": "2020-02-27T17:58:46Z", "path": "sdk/search/azure-search/src/test/java/com/azure/search/SearchIndexClientBuilderTests.java", "diffHunk": "@@ -131,123 +130,41 @@ public void whenBuildClientAndVerifyPropertiesThenSuccess() {\n     }\n \n     @Test\n-    public void verifyEmptyEndpointIsInvalidAsyncTest() {\n-        expectThrowsWithMessage(\"'endpoint' must be a valid URL\", () -> new SearchIndexClientBuilder()\n-            .endpoint(\"\")\n-            .credential(searchApiKeyCredential)\n-            .searchServiceVersion(apiVersion)\n-            .indexName(indexName)\n-            .buildAsyncClient());\n+    public void emptyEndpointThrowsIllegalArgumentException() {", "originalCommit": "114270a550c04bb530a3774e689cafead5003682", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI4NjI4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8503#discussion_r385286281", "bodyText": "Exception messages are treated on a per case basis on whether they are considered a breaking change, with the general decision being would this message be programmatically consumed. Given that this is a runtime exception that isn't networking related I believe this would be unlikely so there isn't a strong conviction on testing the message of the exception.", "author": "alzimmermsft", "createdAt": "2020-02-27T18:18:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3NjE2OA=="}], "type": "inlineReview", "revised_code": null}]}