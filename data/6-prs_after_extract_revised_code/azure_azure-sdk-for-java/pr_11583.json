{"pr_number": 11583, "pr_title": "Fixed bug in file share source url encoding", "pr_createdAt": "2020-05-29T15:20:41Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11583", "timeline": [{"oid": "8b109e5d617a2601f5892c097e8250011278858a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b109e5d617a2601f5892c097e8250011278858a", "message": "Fixed bug in source url encoding", "committedDate": "2020-05-29T15:09:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU2OTE3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432569174", "bodyText": "Does anyone have a better idea on a name for this method?", "author": "gapra-msft", "createdAt": "2020-05-29T15:37:53Z", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {", "originalCommit": "8b109e5d617a2601f5892c097e8250011278858a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432666886", "bodyText": "can we have more / in the path ? if yes then should we encode them?", "author": "kasobol-msft", "createdAt": "2020-05-29T18:36:03Z", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {", "originalCommit": "8b109e5d617a2601f5892c097e8250011278858a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjM5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432686396", "bodyText": "This particular if case is because when you call getPath, it returns the path including the starting /. Then when you do setPath for some reason, it makes the URL have two slashes - so I'm just trying to prevent that error from happening. Does that make sense?", "author": "gapra-msft", "createdAt": "2020-05-29T19:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MjY0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432692644", "bodyText": "That's not what I meant. Please take a look on this sample url \n  \n    \n      azure-sdk-for-java/sdk/storage/azure-storage-blob/src/test/resources/session-records/BlobAPITestcopysourceac[4].json\n    \n    \n         Line 95\n      in\n      6e23e4a\n    \n    \n    \n    \n\n        \n          \n           \"x-ms-copy-source\" : \"https://azstoragesdkaccount.blob.core.windows.net/jtccopysourceac0blobapitestcopysourceac26775340db315343/javablobcopysourceac1blobapitestcopysourceac26713808da3bf\", \n        \n    \n  \n\n\nhttps://azstoragesdkaccount.blob.core.windows.net/jtccopysourceac0blobapitestcopysourceac26775340db315343/javablobcopysourceac1blobapitestcopysourceac26713808da3bf .\nthe last / in this url is going to be encoded into %2F I think. Shouldn't we split path by / before encoding and just transform segments ?", "author": "kasobol-msft", "createdAt": "2020-05-29T19:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwOTA5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432709091", "bodyText": "Oh. Both are equivalent as per the service so it shouldnt matter", "author": "gapra-msft", "createdAt": "2020-05-29T20:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyODIxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432728210", "bodyText": "Do we have a test covering that?", "author": "kasobol-msft", "createdAt": "2020-05-29T20:49:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM0ODA1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r433348051", "bodyText": "The fact that the tests work is validation that they are the same since otherwise the service would come back with a 404 saying the source doesnt exist.", "author": "gapra-msft", "createdAt": "2020-06-01T16:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2Njg4Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432668271", "bodyText": "do we have to decode it first ? Wouldn't already encoded chars be left alone during encoding?", "author": "kasobol-msft", "createdAt": "2020-05-29T18:38:57Z", "path": "sdk/storage/azure-storage-common/src/main/java/com/azure/storage/common/Utility.java", "diffHunk": "@@ -154,6 +155,24 @@ private static String encode(final String stringToEncode) {\n         }\n     }\n \n+    /**\n+     * Performs a safe encoding of a url string, only encoding the path.\n+     *\n+     * @param url The url to encode.\n+     * @return The encoded url.\n+     */\n+    public static String encodeUrlPath(String url) {\n+        /* Deconstruct the URL and reconstruct it making sure the path is encoded. */\n+        UrlBuilder builder = UrlBuilder.parse(url);\n+        String path = builder.getPath();\n+        if (path.startsWith(\"/\")) {\n+            path = path.substring(1);\n+        }\n+        path = Utility.urlEncode(Utility.urlDecode(path));", "originalCommit": "8b109e5d617a2601f5892c097e8250011278858a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4MzEwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432683100", "bodyText": "We need to do this to preserve the case where a user has a URL that looks encoded. - Like if they pass in a url with hello%20hello - if we encode that it'll become hello(whatever % encoding is)20hello, which we don't want to do", "author": "gapra-msft", "createdAt": "2020-05-29T19:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzEwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432693104", "bodyText": "That makes sense.", "author": "kasobol-msft", "createdAt": "2020-05-29T19:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODI3MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432669494", "bodyText": "if copy source is passed as a parameter then shouldn't we just encode the whole thing ? I'm wondering why just path.", "author": "kasobol-msft", "createdAt": "2020-05-29T18:41:38Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -427,11 +428,13 @@ private boolean checkDoesNotExistStatusCode(Throwable t) {\n             .setIgnoreReadOnly(ignoreReadOnly)\n             .setSetArchiveAttribute(setArchiveAttribute);\n \n+        final String copySource = Utility.encodeUrlPath(sourceUrl);", "originalCommit": "8b109e5d617a2601f5892c097e8250011278858a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4MTc3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432681771", "bodyText": "The problem with that is it will become an invalid URI since it will encode the :// in the protocol part and everything. :(", "author": "gapra-msft", "createdAt": "2020-05-29T19:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5MzE2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11583#discussion_r432693165", "bodyText": "Gotcha.", "author": "kasobol-msft", "createdAt": "2020-05-29T19:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2OTQ5NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "791401718e3d7dce0dae744f8b6effc2670d60da", "url": "https://github.com/Azure/azure-sdk-for-java/commit/791401718e3d7dce0dae744f8b6effc2670d60da", "message": "Added back imports", "committedDate": "2020-05-29T19:15:58Z", "type": "commit"}, {"oid": "b26dae0e71d1fa7960d956a7634a203acb51c066", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b26dae0e71d1fa7960d956a7634a203acb51c066", "message": "Updated based off Rick's comments", "committedDate": "2020-06-01T16:50:53Z", "type": "commit"}, {"oid": "162b865d7c4fadfb5678450e8e2bd4e07629c40a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/162b865d7c4fadfb5678450e8e2bd4e07629c40a", "message": "Changelog fix", "committedDate": "2020-06-01T16:52:09Z", "type": "commit"}]}