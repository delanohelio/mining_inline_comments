{"pr_number": 13226, "pr_title": "Fix missing object batch send method", "pr_createdAt": "2020-07-16T04:37:16Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13226", "timeline": [{"oid": "b46a50fdc3d831213619ec75d8f093a3cf259564", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b46a50fdc3d831213619ec75d8f093a3cf259564", "message": "add send for object batch", "committedDate": "2020-07-16T04:36:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUwNTI5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455505297", "bodyText": "should not be public", "author": "arerlend", "createdAt": "2020-07-16T04:38:07Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -41,7 +41,7 @@\n  *\n  * Implemented by {@link ObjectBatch} and {@link EventDataBatch}.\n  */\n-abstract class EventDataBatchBase {\n+public abstract class EventDataBatchBase {", "originalCommit": "b46a50fdc3d831213619ec75d8f093a3cf259564", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5867ac6af84a7f0aef517d805b26669988c3b825", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\nindex b3c8e20bbfe..43d8339fe0f 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n\n@@ -41,7 +41,7 @@ import static com.azure.messaging.eventhubs.implementation.ClientConstants.AZ_NA\n  *\n  * Implemented by {@link ObjectBatch} and {@link EventDataBatch}.\n  */\n-public abstract class EventDataBatchBase {\n+abstract class EventDataBatchBase {\n     private final ClientLogger logger = new ClientLogger(this.getClass());\n     private final Object lock = new Object();\n     private final int maxMessageSize;\n"}}, {"oid": "5867ac6af84a7f0aef517d805b26669988c3b825", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5867ac6af84a7f0aef517d805b26669988c3b825", "message": "batch base impl should not be public", "committedDate": "2020-07-16T04:42:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNzYxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455527611", "bodyText": "Does this get overridden in the subtypes?", "author": "alzimmermsft", "createdAt": "2020-07-16T05:59:38Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {", "originalCommit": "5867ac6af84a7f0aef517d805b26669988c3b825", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwNTU2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455905569", "bodyText": "Subtype tryAdd() methods call this method, yes.", "author": "arerlend", "createdAt": "2020-07-16T16:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNzYxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c99ff6a67bab0de7cb12904d84662775d4df4e4e", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\nindex 43d8339fe0f..cfe4d959823 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n\n@@ -108,7 +108,7 @@ abstract class EventDataBatchBase {\n      */\n     boolean tryAdd(final EventData eventData) {\n         if (eventData == null) {\n-            throw logger.logExceptionAsWarning(new IllegalArgumentException(\"eventData cannot be null\"));\n+            throw logger.logExceptionAsWarning(new NullPointerException(\"eventData cannot be null\"));\n         }\n         EventData event = tracerProvider.isEnabled() ? traceMessageSpan(eventData) : eventData;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNjE1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455916151", "bodyText": "This should be an NPE rather than IllegalArgument. https://azure.github.io/azure-sdk/java_implementation.html#java-errors-system-errors", "author": "conniey", "createdAt": "2020-07-16T16:29:00Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java", "diffHunk": "@@ -106,7 +106,7 @@ public int getSizeInBytes() {\n      * @throws IllegalArgumentException if {@code eventData} is {@code null}.\n      * @throws AmqpException if {@code eventData} is larger than the maximum size of the {@link EventDataBatch}.\n      */\n-    public boolean tryAdd(final EventData eventData) {\n+    boolean tryAdd(final EventData eventData) {\n         if (eventData == null) {\n             throw logger.logExceptionAsWarning(new IllegalArgumentException(\"eventData cannot be null\"));", "originalCommit": "5867ac6af84a7f0aef517d805b26669988c3b825", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzNjEwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455936104", "bodyText": "fixed, thanks Connie", "author": "arerlend", "createdAt": "2020-07-16T17:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkxNjE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c99ff6a67bab0de7cb12904d84662775d4df4e4e", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\nindex 43d8339fe0f..cfe4d959823 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventDataBatchBase.java\n\n@@ -108,7 +108,7 @@ abstract class EventDataBatchBase {\n      */\n     boolean tryAdd(final EventData eventData) {\n         if (eventData == null) {\n-            throw logger.logExceptionAsWarning(new IllegalArgumentException(\"eventData cannot be null\"));\n+            throw logger.logExceptionAsWarning(new NullPointerException(\"eventData cannot be null\"));\n         }\n         EventData event = tracerProvider.isEnabled() ? traceMessageSpan(eventData) : eventData;\n \n"}}, {"oid": "c99ff6a67bab0de7cb12904d84662775d4df4e4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c99ff6a67bab0de7cb12904d84662775d4df4e4e", "message": "update to npe", "committedDate": "2020-07-16T17:01:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1MDk4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455950987", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException if {@code batch} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException if {@code objectBatch} is {@code null}.", "author": "srnagar", "createdAt": "2020-07-16T17:26:11Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -457,15 +457,40 @@ public String getEventHubName() {\n     }\n \n     /**\n-     * Sends the batch to the associated Event Hub.\n+     * Sends the object batch to the associated Event Hub.\n      *\n-     * @param batch The batch to send to the service.\n+     * @param objectBatch The batch to send to the service.\n+     * @param <T> object type\n+     * @return A {@link Mono} that completes when the batch is pushed to the service.\n+     * @throws NullPointerException if {@code batch} is {@code null}.", "originalCommit": "c99ff6a67bab0de7cb12904d84662775d4df4e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09c4fc7a7141e8ce23b79b4a59b944a2515805e9", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\nindex a44ec578f26..ac65038c3d2 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n\n@@ -462,7 +462,7 @@ public class EventHubProducerAsyncClient implements Closeable {\n      * @param objectBatch The batch to send to the service.\n      * @param <T> object type\n      * @return A {@link Mono} that completes when the batch is pushed to the service.\n-     * @throws NullPointerException if {@code batch} is {@code null}.\n+     * @throws NullPointerException if {@code objectBatch} is {@code null}.\n      * @see EventHubProducerAsyncClient#createBatch(Class)\n      * @see EventHubProducerAsyncClient#createBatch(Class, CreateBatchOptions)\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1MTYyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13226#discussion_r455951627", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws NullPointerException if {@code batch} is {@code null}.\n          \n          \n            \n                 * @throws NullPointerException if {@code eventDataBatch} is {@code null}.", "author": "srnagar", "createdAt": "2020-07-16T17:27:15Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java", "diffHunk": "@@ -457,15 +457,40 @@ public String getEventHubName() {\n     }\n \n     /**\n-     * Sends the batch to the associated Event Hub.\n+     * Sends the object batch to the associated Event Hub.\n      *\n-     * @param batch The batch to send to the service.\n+     * @param objectBatch The batch to send to the service.\n+     * @param <T> object type\n+     * @return A {@link Mono} that completes when the batch is pushed to the service.\n+     * @throws NullPointerException if {@code batch} is {@code null}.\n+     * @see EventHubProducerAsyncClient#createBatch(Class)\n+     * @see EventHubProducerAsyncClient#createBatch(Class, CreateBatchOptions)\n+     */\n+    public <T> Mono<Void> send(ObjectBatch<T> objectBatch) {\n+        return this.sendInternal(objectBatch);\n+    }\n+\n+    /**\n+     * Sends the event data batch to the associated Event Hub.\n+     *\n+     * @param eventDataBatch The batch to send to the service.\n      * @return A {@link Mono} that completes when the batch is pushed to the service.\n      * @throws NullPointerException if {@code batch} is {@code null}.", "originalCommit": "c99ff6a67bab0de7cb12904d84662775d4df4e4e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09c4fc7a7141e8ce23b79b4a59b944a2515805e9", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\nindex a44ec578f26..ac65038c3d2 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n\n@@ -462,7 +462,7 @@ public class EventHubProducerAsyncClient implements Closeable {\n      * @param objectBatch The batch to send to the service.\n      * @param <T> object type\n      * @return A {@link Mono} that completes when the batch is pushed to the service.\n-     * @throws NullPointerException if {@code batch} is {@code null}.\n+     * @throws NullPointerException if {@code objectBatch} is {@code null}.\n      * @see EventHubProducerAsyncClient#createBatch(Class)\n      * @see EventHubProducerAsyncClient#createBatch(Class, CreateBatchOptions)\n      */\n"}}, {"oid": "09c4fc7a7141e8ce23b79b4a59b944a2515805e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/09c4fc7a7141e8ce23b79b4a59b944a2515805e9", "message": "Update sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>", "committedDate": "2020-07-16T22:35:04Z", "type": "commit"}, {"oid": "9e43786a8c743ee1904ae744e74c0ec945a9911d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e43786a8c743ee1904ae744e74c0ec945a9911d", "message": "Update sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubProducerAsyncClient.java\n\nCo-authored-by: Srikanta <51379715+srnagar@users.noreply.github.com>", "committedDate": "2020-07-16T22:35:13Z", "type": "commit"}, {"oid": "120cc18bd4820ead08d9dcbcf8c58e2cfe256950", "url": "https://github.com/Azure/azure-sdk-for-java/commit/120cc18bd4820ead08d9dcbcf8c58e2cfe256950", "message": "fix exceptions for tests", "committedDate": "2020-07-16T23:13:06Z", "type": "commit"}, {"oid": "0b5310933a28b02cd85602a35c140ab2f367dd6a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0b5310933a28b02cd85602a35c140ab2f367dd6a", "message": "cast space", "committedDate": "2020-07-21T15:38:18Z", "type": "commit"}]}