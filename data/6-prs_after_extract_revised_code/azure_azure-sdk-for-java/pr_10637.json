{"pr_number": 10637, "pr_title": "Add support for associated link name, session id, and clean up ManagementNode", "pr_createdAt": "2020-04-30T11:45:50Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10637", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MzE5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10637#discussion_r418243199", "bodyText": "Another error case : Where user pass in a session id which is not equal to current active session id.", "author": "hemanttanwar", "createdAt": "2020-04-30T19:36:18Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ManagementChannelTests.java", "diffHunk": "@@ -117,11 +137,9 @@ void teardown(TestInfo testInfo) {\n     void setsSessionState(byte[] state) {\n         // Arrange\n         final String sessionId = \"A session-id\";\n-        managementChannel = new ManagementChannel(Mono.just(requestResponseChannel), NAMESPACE, ENTITY_PATH, sessionId,\n-            tokenManager, messageSerializer, Duration.ofSeconds(10));\n \n         // Act\n-        StepVerifier.create(managementChannel.setSessionState(state))\n+        StepVerifier.create(managementChannel.setSessionState(sessionId, state, LINK_NAME))", "originalCommit": "e79698d480073ed07d40403293f5e872ad530079", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0NzM5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10637#discussion_r418247397", "bodyText": "This is done on the management channel. If another application passes you this id, you can complete it as long as someone is renewing that lock. the .NET code doesn't check that the session is not lost.", "author": "conniey", "createdAt": "2020-04-30T19:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MzE5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0ODA4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10637#discussion_r418248086", "bodyText": "If this is done on the actual receive link, then it checks to see if it is not lost.", "author": "conniey", "createdAt": "2020-04-30T19:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI0MzE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ada83121848d8c19017d34427ac9601008e4049d", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ManagementChannelTests.java b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ManagementChannelTests.java\nindex 3e415870826..3cccaf25979 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ManagementChannelTests.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/test/java/com/azure/messaging/servicebus/implementation/ManagementChannelTests.java\n\n@@ -137,9 +117,11 @@ class ManagementChannelTests {\n     void setsSessionState(byte[] state) {\n         // Arrange\n         final String sessionId = \"A session-id\";\n+        managementChannel = new ManagementChannel(Mono.just(requestResponseChannel), NAMESPACE, ENTITY_PATH, sessionId,\n+            tokenManager, messageSerializer, Duration.ofSeconds(10));\n \n         // Act\n-        StepVerifier.create(managementChannel.setSessionState(sessionId, state, LINK_NAME))\n+        StepVerifier.create(managementChannel.setSessionState(state))\n             .expectComplete()\n             .verify();\n \n"}}, {"oid": "ada83121848d8c19017d34427ac9601008e4049d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ada83121848d8c19017d34427ac9601008e4049d", "message": "Initial changes to management node.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "20cbf078da98d9e7c216aa581facb5e7866323b8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/20cbf078da98d9e7c216aa581facb5e7866323b8", "message": "Cleaning up ManagementNode interface. Adding session and associated link.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "2dd86f485e2d0ae99078a0d3e1b682e76d2f787f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2dd86f485e2d0ae99078a0d3e1b682e76d2f787f", "message": "Fixing client and test breaks.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "a16b34b9e453ac53ae1001e226d2a658cc5fece6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a16b34b9e453ac53ae1001e226d2a658cc5fece6", "message": "Fixing bug where correct management node not returned.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "f2bb18cd593fc311df2cf3e311c044b5867bd584", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f2bb18cd593fc311df2cf3e311c044b5867bd584", "message": "Move single call ManagementChannel method back into parent method.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "e803ee32b05183b1552efdd847c8452755e81272", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e803ee32b05183b1552efdd847c8452755e81272", "message": "Adding logging and test case for peaked messages.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "6f342013f7ba621f39e1350d963bf5162d59942e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6f342013f7ba621f39e1350d963bf5162d59942e", "message": "Adding key x-opt-enqueue-sequence-number.", "committedDate": "2020-04-30T19:56:29Z", "type": "commit"}, {"oid": "b6c127ae8d58abb13ebacbc81dba643671fb9a25", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b6c127ae8d58abb13ebacbc81dba643671fb9a25", "message": "Fixing log comment.", "committedDate": "2020-04-30T19:56:30Z", "type": "commit"}, {"oid": "b6c127ae8d58abb13ebacbc81dba643671fb9a25", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b6c127ae8d58abb13ebacbc81dba643671fb9a25", "message": "Fixing log comment.", "committedDate": "2020-04-30T19:56:30Z", "type": "forcePushed"}]}