{"pr_number": 17613, "pr_title": "validate access token", "pr_createdAt": "2020-11-17T04:38:57Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17613", "timeline": [{"oid": "29b5cd02949071d8a424e86989b46ac5038d5a61", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29b5cd02949071d8a424e86989b46ac5038d5a61", "message": "* Make changes according to checkstyle\n* add unit tests\n* pom file add resource-server dependencies\n* spring.factories file add autoconfiguration", "committedDate": "2020-11-17T04:37:10Z", "type": "commit"}, {"oid": "081cb825c1b3c89a3c6d80ebed3840666e83e714", "url": "https://github.com/Azure/azure-sdk-for-java/commit/081cb825c1b3c89a3c6d80ebed3840666e83e714", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-17T05:58:28Z", "type": "commit"}, {"oid": "c8a35081d3c9d0bb71eb4644bbe81a72cf492c8a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c8a35081d3c9d0bb71eb4644bbe81a72cf492c8a", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-17T06:24:03Z", "type": "commit"}, {"oid": "b9aa0670c97ebcdaa2110626eb73d72e5d5c8482", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b9aa0670c97ebcdaa2110626eb73d72e5d5c8482", "message": "* add JavaDoc\n* update AADResourceServerAutoConfiguration\n* update AADResourceServerAutoConfigurationTest", "committedDate": "2020-11-17T07:14:55Z", "type": "commit"}, {"oid": "fdfb007337da1376e97c3ad7336e0b2531fcc74b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fdfb007337da1376e97c3ad7336e0b2531fcc74b", "message": "* remove tenant validator\n* issuer validator verify that the STS URI matches\n* Verify the audience through AppIdUri\n* update unit test\n* Update JwkKeySetUri to get via ServiceEndpoints", "committedDate": "2020-11-18T10:03:40Z", "type": "commit"}, {"oid": "bddc2e461448b63d0d8385cf6e1e39bbd62d406a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bddc2e461448b63d0d8385cf6e1e39bbd62d406a", "message": "* add Converter,it's effect will be to store the UserPrincipal to Authentication", "committedDate": "2020-11-19T07:38:52Z", "type": "commit"}, {"oid": "cb82a9b0d172e6d170ae4bf93a4eda733565bc21", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cb82a9b0d172e6d170ae4bf93a4eda733565bc21", "message": "Merge branch 'master' into access_token_validate", "committedDate": "2020-11-19T07:49:25Z", "type": "commit"}, {"oid": "073274635c3b0060bc54ee9bf640a642dbb8c306", "url": "https://github.com/Azure/azure-sdk-for-java/commit/073274635c3b0060bc54ee9bf640a642dbb8c306", "message": "Merge branch 'master' into access_token_validate", "committedDate": "2020-11-19T08:05:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0ODg0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r525648843", "bodyText": "We should use another name for this field here.", "author": "saragluna", "createdAt": "2020-11-18T02:10:34Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtIssuerValidator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.autoconfigure.aad;\n+\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import org.springframework.security.oauth2.core.OAuth2TokenValidator;\n+import org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.jwt.JwtClaimValidator;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * Validates the \"iss\" claim in a {@link Jwt}, that is matches a configured value\n+ */\n+public class AADJwtIssuerValidator implements OAuth2TokenValidator<Jwt> {\n+\n+    private static final String LOGIN_MICROSOFT_ONLINE_ISSUER = \"https://login.microsoftonline.com/\";\n+    private static final String STS_WINDOWS_ISSUER = \"https://sts.windows.net/\";\n+    private static final String STS_CHINA_CLOUD_API_ISSUER = \"https://sts.chinacloudapi.cn/\";\n+    private static final String COMMON = \"common\";", "originalCommit": "b9aa0670c97ebcdaa2110626eb73d72e5d5c8482", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwOTEyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527509126", "bodyText": "You mean the COMMON  field?", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T08:08:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0ODg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fdfb007337da1376e97c3ad7336e0b2531fcc74b", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtIssuerValidator.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtIssuerValidator.java\nindex fddb298c337..1dbc9c30318 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtIssuerValidator.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtIssuerValidator.java\n\n@@ -2,7 +2,6 @@\n // Licensed under the MIT License.\n package com.azure.spring.autoconfigure.aad;\n \n-import java.util.Set;\n import java.util.function.Predicate;\n import org.springframework.security.oauth2.core.OAuth2TokenValidator;\n import org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM1NTU0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527355549", "bodyText": "Why convert the aud to a list instead of string?", "author": "saragluna", "createdAt": "2020-11-20T02:33:52Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtAudienceValidator.java", "diffHunk": "@@ -0,0 +1,40 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.autoconfigure.aad;\n+\n+import java.util.List;\n+import org.springframework.security.oauth2.core.OAuth2TokenValidator;\n+import org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.jwt.JwtClaimValidator;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * Validates the \"aud\" claim in a {@link Jwt}, that is matches a configured value\n+ */\n+public class AADJwtAudienceValidator implements OAuth2TokenValidator<Jwt> {\n+\n+    private final JwtClaimValidator<List<String>> validator;\n+\n+    /**\n+     * Constructs a {@link AADJwtAudienceValidator} using the provided parameters\n+     *\n+     * @param audiences - The audience that each {@link Jwt} should have.\n+     */\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+    public AADJwtAudienceValidator(List<String> audiences) {\n+        Assert.notNull(audiences, \"audiences cannot be null\");\n+        this.validator = new JwtClaimValidator(AADTokenClaim.AUD, aud -> audiences.containsAll((List<String>) aud));", "originalCommit": "073274635c3b0060bc54ee9bf640a642dbb8c306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUyNDc3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527524773", "bodyText": "This is a default transformation for Spring Security Resource Server.We can also modify it.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T08:35:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM1NTU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtAudienceValidator.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtAudienceValidator.java\nsimilarity index 77%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtAudienceValidator.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtAudienceValidator.java\nindex b5b5d9fef76..19b163cf576 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AADJwtAudienceValidator.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtAudienceValidator.java\n\n@@ -1,7 +1,8 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n-package com.azure.spring.autoconfigure.aad;\n+package com.azure.spring.aad.resource;\n \n+import com.azure.spring.autoconfigure.aad.AADTokenClaim;\n import java.util.List;\n import org.springframework.security.oauth2.core.OAuth2TokenValidator;\n import org.springframework.security.oauth2.core.OAuth2TokenValidatorResult;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM1OTg2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527359866", "bodyText": "need any log info here?", "author": "saragluna", "createdAt": "2020-11-20T02:49:19Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.azure.spring.autoconfigure.aad;\n+\n+import com.nimbusds.jose.JWSObject;\n+import com.nimbusds.jwt.JWTClaimsSet;\n+import com.nimbusds.jwt.JWTClaimsSet.Builder;\n+import java.text.ParseException;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import org.springframework.core.convert.converter.Converter;\n+import org.springframework.security.authentication.AbstractAuthenticationToken;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken.TokenType;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\n+import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;\n+\n+/**\n+ *  A {@link Converter} that takes a {@link Jwt} and converts it into a {@link PreAuthenticatedAuthenticationToken}.\n+ */\n+public class AzureJwtBearerTokenAuthenticationConverter implements Converter<Jwt, AbstractAuthenticationToken> {\n+\n+    private final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n+\n+    public AzureJwtBearerTokenAuthenticationConverter() {\n+    }\n+\n+    public AbstractAuthenticationToken convert(Jwt jwt) {\n+        AbstractAuthenticationToken token = this.jwtAuthenticationConverter.convert(jwt);\n+        Collection<GrantedAuthority> authorities = token.getAuthorities();\n+        OAuth2AccessToken accessToken = new OAuth2AccessToken(TokenType.BEARER, jwt.getTokenValue(), jwt.getIssuedAt(),\n+            jwt.getExpiresAt());\n+        Map<String, Object> attributes = jwt.getClaims();\n+        JWTClaimsSet.Builder builder = new Builder();\n+        for (Entry<String, Object> entry : attributes.entrySet()) {\n+            builder.claim(entry.getKey(), entry.getValue());\n+        }\n+        JWSObject jwsObject = null;\n+        try {\n+            jwsObject = JWSObject.parse(accessToken.getTokenValue());\n+        } catch (ParseException e) {\n+            e.printStackTrace();", "originalCommit": "073274635c3b0060bc54ee9bf640a642dbb8c306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDAwNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527360007", "bodyText": "should we throw this exception?", "author": "saragluna", "createdAt": "2020-11-20T02:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM1OTg2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMjAwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527502003", "bodyText": "We should have a log here.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T08:00:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM1OTg2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\nsimilarity index 73%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\nindex 8179b84e3f7..2754b5550b4 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\n\n@@ -1,12 +1,15 @@\n-package com.azure.spring.autoconfigure.aad;\n+package com.azure.spring.aad.resource;\n \n+import com.azure.spring.autoconfigure.aad.UserPrincipal;\n+import com.azure.spring.autoconfigure.aad.UserPrincipalManager;\n import com.nimbusds.jose.JWSObject;\n import com.nimbusds.jwt.JWTClaimsSet;\n import com.nimbusds.jwt.JWTClaimsSet.Builder;\n import java.text.ParseException;\n import java.util.Collection;\n-import java.util.Map;\n import java.util.Map.Entry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.core.convert.converter.Converter;\n import org.springframework.security.authentication.AbstractAuthenticationToken;\n import org.springframework.security.core.GrantedAuthority;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDE1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527360150", "bodyText": "Does this includes both scope_ and role_?", "author": "saragluna", "createdAt": "2020-11-20T02:50:16Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.azure.spring.autoconfigure.aad;\n+\n+import com.nimbusds.jose.JWSObject;\n+import com.nimbusds.jwt.JWTClaimsSet;\n+import com.nimbusds.jwt.JWTClaimsSet.Builder;\n+import java.text.ParseException;\n+import java.util.Collection;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import org.springframework.core.convert.converter.Converter;\n+import org.springframework.security.authentication.AbstractAuthenticationToken;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken.TokenType;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\n+import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;\n+\n+/**\n+ *  A {@link Converter} that takes a {@link Jwt} and converts it into a {@link PreAuthenticatedAuthenticationToken}.\n+ */\n+public class AzureJwtBearerTokenAuthenticationConverter implements Converter<Jwt, AbstractAuthenticationToken> {\n+\n+    private final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n+\n+    public AzureJwtBearerTokenAuthenticationConverter() {\n+    }\n+\n+    public AbstractAuthenticationToken convert(Jwt jwt) {\n+        AbstractAuthenticationToken token = this.jwtAuthenticationConverter.convert(jwt);\n+        Collection<GrantedAuthority> authorities = token.getAuthorities();", "originalCommit": "073274635c3b0060bc54ee9bf640a642dbb8c306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzUwMTUwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527501501", "bodyText": "Here is getting one of the two and seeing which one the user needs.Gets permissions in scp by default.Of course, the user can also be configured to obtain permissions in role.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T07:59:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\nsimilarity index 73%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\nindex 8179b84e3f7..2754b5550b4 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\n\n@@ -1,12 +1,15 @@\n-package com.azure.spring.autoconfigure.aad;\n+package com.azure.spring.aad.resource;\n \n+import com.azure.spring.autoconfigure.aad.UserPrincipal;\n+import com.azure.spring.autoconfigure.aad.UserPrincipalManager;\n import com.nimbusds.jose.JWSObject;\n import com.nimbusds.jwt.JWTClaimsSet;\n import com.nimbusds.jwt.JWTClaimsSet.Builder;\n import java.text.ParseException;\n import java.util.Collection;\n-import java.util.Map;\n import java.util.Map.Entry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.core.convert.converter.Converter;\n import org.springframework.security.authentication.AbstractAuthenticationToken;\n import org.springframework.security.core.GrantedAuthority;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDU2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527360560", "bodyText": "We need more test cases in this one", "author": "saragluna", "createdAt": "2020-11-20T02:51:49Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AADResourceServerAutoConfigurationTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.autoconfigure.aad;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.azure.spring.autoconfigure.aad.AADResourceServerAutoConfiguration.DefaultAzureOAuth2ResourceServerWebSecurityConfigurerAdapter;\n+import org.junit.Test;\n+import org.springframework.boot.autoconfigure.AutoConfigurations;\n+import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.oauth2.jwt.JwtDecoder;\n+import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\n+\n+public class AADResourceServerAutoConfigurationTest {", "originalCommit": "073274635c3b0060bc54ee9bf640a642dbb8c306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5OTAxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527499019", "bodyText": "okay.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T07:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDU2MA=="}], "type": "inlineReview", "revised_code": {"commit": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AADResourceServerAutoConfigurationTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AADResourceServerAutoConfigurationTest.java\ndeleted file mode 100644\nindex cd279d4ca62..00000000000\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AADResourceServerAutoConfigurationTest.java\n+++ /dev/null\n\n@@ -1,46 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-package com.azure.spring.autoconfigure.aad;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-import com.azure.spring.autoconfigure.aad.AADResourceServerAutoConfiguration.DefaultAzureOAuth2ResourceServerWebSecurityConfigurerAdapter;\n-import org.junit.Test;\n-import org.springframework.boot.autoconfigure.AutoConfigurations;\n-import org.springframework.boot.test.context.runner.WebApplicationContextRunner;\n-import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n-import org.springframework.security.oauth2.jwt.JwtDecoder;\n-import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;\n-\n-public class AADResourceServerAutoConfigurationTest {\n-\n-    private final WebApplicationContextRunner contextRunner = new WebApplicationContextRunner()\n-        .withConfiguration(AutoConfigurations.of(AADResourceServerAutoConfiguration.class))\n-        .withPropertyValues(\"azure.activedirectory.client-id=fake-client-id\",\n-            \"azure.activedirectory.user-group.allowed-groups=fake-group\",\n-            TestConstants.ALLOW_TELEMETRY_PROPERTY + \"=false\",\n-            \"azure.service.endpoints.global.aadSigninUri=https://login.microsoftonline.com/\");\n-\n-\n-    @Test\n-    public void testCreateJwtDecoderByJwkKeySetUri() {\n-        this.contextRunner\n-            .run(context -> {\n-                final JwtDecoder jwtDecoder = context.getBean(JwtDecoder.class);\n-                assertThat(jwtDecoder).isNotNull();\n-                assertThat(jwtDecoder).isExactlyInstanceOf(NimbusJwtDecoder.class);\n-            });\n-    }\n-\n-    @Test\n-    public void testCreateWebSecurityConfigurerAdapter() {\n-        this.contextRunner\n-            .run(context -> {\n-                WebSecurityConfigurerAdapter webSecurityConfigurerAdapter = context\n-                    .getBean(DefaultAzureOAuth2ResourceServerWebSecurityConfigurerAdapter.class);\n-                assertThat(webSecurityConfigurerAdapter).isNotNull();\n-            });\n-    }\n-\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDY4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527360689", "bodyText": "Do we have tid?", "author": "saragluna", "createdAt": "2020-11-20T02:52:21Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverterTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.spring.autoconfigure.aad;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.time.Instant;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.springframework.security.authentication.AbstractAuthenticationToken;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+\n+public class AzureJwtBearerTokenAuthenticationConverterTest {", "originalCommit": "073274635c3b0060bc54ee9bf640a642dbb8c306", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ5ODc4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r527498786", "bodyText": "I'm going to add a method to the UserPrincipal to get the tid.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-20T07:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverterTest.java b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverterTest.java\nindex f3852981830..402968b16eb 100644\n--- a/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverterTest.java\n+++ b/sdk/spring/azure-spring-boot/src/test/java/com/azure/spring/autoconfigure/aad/AzureJwtBearerTokenAuthenticationConverterTest.java\n\n@@ -4,6 +4,7 @@ import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n+import com.azure.spring.aad.resource.AzureJwtBearerTokenAuthenticationConverter;\n import java.time.Instant;\n import java.util.HashMap;\n import java.util.Map;\n"}}, {"oid": "3f8dac054188fa2a20c9666017ce8b7c104ccbab", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3f8dac054188fa2a20c9666017ce8b7c104ccbab", "message": "* update file name\n* add more unit test", "committedDate": "2020-11-20T10:19:23Z", "type": "commit"}, {"oid": "4b6e974ac15a64155cd1ed846e2f1f2eb270e6b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b6e974ac15a64155cd1ed846e2f1f2eb270e6b1", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-23T01:42:28Z", "type": "commit"}, {"oid": "ce65efe10644fd9e111b7bda939880f46a655807", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce65efe10644fd9e111b7bda939880f46a655807", "message": "Merge branch 'master' into access_token_validate", "committedDate": "2020-11-23T01:52:39Z", "type": "commit"}, {"oid": "05d929d46d405ebe6a97a7ae6437a65869afe7fe", "url": "https://github.com/Azure/azure-sdk-for-java/commit/05d929d46d405ebe6a97a7ae6437a65869afe7fe", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-23T02:16:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0OTgwNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528449807", "bodyText": "better use resource.server here", "author": "saragluna", "createdAt": "2020-11-23T02:50:53Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java", "diffHunk": "@@ -1,8 +1,10 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n-package com.azure.spring.autoconfigure.aad;\n+package com.azure.spring.aad.resource;", "originalCommit": "05d929d46d405ebe6a97a7ae6437a65869afe7fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MTE3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528561179", "bodyText": "okay", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-23T09:20:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0OTgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "4e4d053e2902177133a7a8e8893e60494df3538a", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\nsimilarity index 92%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\nindex 8b0a5168e47..457f4fbf7c1 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\n\n@@ -1,10 +1,12 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n-package com.azure.spring.aad.resource;\n+package com.azure.spring.aad.resource.server;\n \n \n import com.azure.spring.aad.implementation.AzureActiveDirectoryProperties;\n import com.azure.spring.aad.implementation.IdentityEndpoints;\n+import com.azure.spring.aad.resource.server.validator.AzureJwtAudienceValidator;\n+import com.azure.spring.aad.resource.server.validator.AzureJwtIssuerValidator;\n import java.util.ArrayList;\n import java.util.List;\n import org.springframework.beans.factory.annotation.Autowired;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDE5OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528450198", "bodyText": "Maybe move this line up?", "author": "saragluna", "createdAt": "2020-11-23T02:53:09Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java", "diffHunk": "@@ -86,8 +82,11 @@ public JwtDecoder jwtDecoderByJwkKeySetUri() {\n \n         @Override\n         protected void configure(HttpSecurity http) throws Exception {\n-            http.authorizeRequests((requests) -> requests.anyRequest().authenticated());\n-            http.oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\n+            http\n+                .authorizeRequests((requests) -> requests.anyRequest().authenticated())", "originalCommit": "05d929d46d405ebe6a97a7ae6437a65869afe7fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2MTIzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528561238", "bodyText": "okay", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-23T09:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "4e4d053e2902177133a7a8e8893e60494df3538a", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\nsimilarity index 92%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\nindex 8b0a5168e47..457f4fbf7c1 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureActiveDirectoryResourceConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureActiveDirectoryResourceServerConfiguration.java\n\n@@ -82,8 +84,7 @@ public class AzureActiveDirectoryResourceConfiguration {\n \n         @Override\n         protected void configure(HttpSecurity http) throws Exception {\n-            http\n-                .authorizeRequests((requests) -> requests.anyRequest().authenticated())\n+            http.authorizeRequests((requests) -> requests.anyRequest().authenticated())\n                 .oauth2ResourceServer()\n                 .jwt()\n                 .jwtAuthenticationConverter(new AzureJwtBearerTokenAuthenticationConverter());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDMzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528450335", "bodyText": "Why do we choose Azure instead of AAD here?", "author": "saragluna", "createdAt": "2020-11-23T02:54:11Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtAudienceValidator.java", "diffHunk": "@@ -12,17 +13,17 @@\n /**\n  * Validates the \"aud\" claim in a {@link Jwt}, that is matches a configured value\n  */\n-public class AADJwtAudienceValidator implements OAuth2TokenValidator<Jwt> {\n+public class AzureJwtAudienceValidator implements OAuth2TokenValidator<Jwt> {", "originalCommit": "05d929d46d405ebe6a97a7ae6437a65869afe7fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDUyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528450522", "bodyText": "Shouldn't we also log the exception?", "author": "saragluna", "createdAt": "2020-11-23T02:55:05Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.aad.resource;\n+\n+import com.azure.spring.autoconfigure.aad.UserPrincipal;\n+import com.azure.spring.autoconfigure.aad.UserPrincipalManager;\n+import com.nimbusds.jose.JWSObject;\n+import com.nimbusds.jwt.JWTClaimsSet;\n+import com.nimbusds.jwt.JWTClaimsSet.Builder;\n+import java.text.ParseException;\n+import java.util.Collection;\n+import java.util.Map.Entry;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.convert.converter.Converter;\n+import org.springframework.security.authentication.AbstractAuthenticationToken;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken.TokenType;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationConverter;\n+import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;\n+\n+/**\n+ * A {@link Converter} that takes a {@link Jwt} and converts it into a {@link PreAuthenticatedAuthenticationToken}.\n+ */\n+public class AzureJwtBearerTokenAuthenticationConverter implements Converter<Jwt, AbstractAuthenticationToken> {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(UserPrincipalManager.class);\n+    private final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n+\n+    public AzureJwtBearerTokenAuthenticationConverter() {\n+    }\n+\n+    public AbstractAuthenticationToken convert(Jwt jwt) {\n+        AbstractAuthenticationToken token = this.jwtAuthenticationConverter.convert(jwt);\n+        Collection<GrantedAuthority> authorities = token.getAuthorities();\n+        OAuth2AccessToken accessToken = new OAuth2AccessToken(TokenType.BEARER, jwt.getTokenValue(), jwt.getIssuedAt(),\n+            jwt.getExpiresAt());\n+        JWTClaimsSet.Builder builder = new Builder();\n+        for (Entry<String, Object> entry : jwt.getClaims().entrySet()) {\n+            builder.claim(entry.getKey(), entry.getValue());\n+        }\n+        JWTClaimsSet jwtClaimsSet = builder.build();\n+        JWSObject jwsObject = null;\n+        try {\n+            jwsObject = JWSObject.parse(accessToken.getTokenValue());\n+        } catch (ParseException e) {\n+            LOGGER.error(\"When create an instance of JWSObject, an exception is resolved on the access token.\");", "originalCommit": "05d929d46d405ebe6a97a7ae6437a65869afe7fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDY0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528450642", "bodyText": "Should we rethrow the exception here?", "author": "saragluna", "createdAt": "2020-11-23T02:55:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTMzOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r528565339", "bodyText": "I'll add the exception record, but we can't throw it.", "author": "ZhuXiaoBing-cn", "createdAt": "2020-11-23T09:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ1MDUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "4e4d053e2902177133a7a8e8893e60494df3538a", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\nsimilarity index 82%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\nindex 491215469ac..89e7599517a 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/AzureJwtBearerTokenAuthenticationConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\n\n@@ -1,9 +1,8 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n-package com.azure.spring.aad.resource;\n+package com.azure.spring.aad.resource.server;\n \n import com.azure.spring.autoconfigure.aad.UserPrincipal;\n-import com.azure.spring.autoconfigure.aad.UserPrincipalManager;\n import com.nimbusds.jose.JWSObject;\n import com.nimbusds.jwt.JWTClaimsSet;\n import com.nimbusds.jwt.JWTClaimsSet.Builder;\n"}}, {"oid": "4e4d053e2902177133a7a8e8893e60494df3538a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4e4d053e2902177133a7a8e8893e60494df3538a", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-23T06:15:43Z", "type": "commit"}, {"oid": "b362dfb049d7628f96fefd67611bbc5953a063ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b362dfb049d7628f96fefd67611bbc5953a063ee", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-23T06:17:58Z", "type": "commit"}, {"oid": "ae39fe7a00dd5ba0d73ee514f575d8d4b1e71457", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae39fe7a00dd5ba0d73ee514f575d8d4b1e71457", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-23T06:18:23Z", "type": "commit"}, {"oid": "acaeefa00b197d30e77c34cbc1f29482112c1a4c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/acaeefa00b197d30e77c34cbc1f29482112c1a4c", "message": "* update AzureJwtBearerTokenAuthenticationConverter", "committedDate": "2020-11-23T07:00:58Z", "type": "commit"}, {"oid": "d25e9df4497c0cc87a9149e85b54554e2e0f58f2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d25e9df4497c0cc87a9149e85b54554e2e0f58f2", "message": "Merge branch 'master' into access_token_validate", "committedDate": "2020-11-23T07:04:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2NTAwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r529165002", "bodyText": "We should use another method, error(String, Throwable) here.", "author": "saragluna", "createdAt": "2020-11-24T02:45:37Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java", "diffHunk": "@@ -46,7 +45,8 @@ public AbstractAuthenticationToken convert(Jwt jwt) {\n         try {\n             jwsObject = JWSObject.parse(accessToken.getTokenValue());\n         } catch (ParseException e) {\n-            LOGGER.error(\"When create an instance of JWSObject, an exception is resolved on the access token.\");\n+            LOGGER.error(", "originalCommit": "4e4d053e2902177133a7a8e8893e60494df3538a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a31f1a6e648f0c9129984be6aace6bf5282266ae", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\nindex 89e7599517a..9d8f429a867 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\n\n@@ -24,31 +15,32 @@ import org.springframework.security.web.authentication.preauth.PreAuthenticatedA\n  */\n public class AzureJwtBearerTokenAuthenticationConverter implements Converter<Jwt, AbstractAuthenticationToken> {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(AzureJwtBearerTokenAuthenticationConverter.class);\n-    private final JwtAuthenticationConverter jwtAuthenticationConverter = new JwtAuthenticationConverter();\n+    private Converter<Jwt, Collection<GrantedAuthority>> jwtGrantedConverter\n+        = new JwtGrantedAuthoritiesConverter();\n \n     public AzureJwtBearerTokenAuthenticationConverter() {\n     }\n \n+    public AzureJwtBearerTokenAuthenticationConverter(String authoritiesClaimName) {\n+        JwtGrantedAuthoritiesConverter jwtGrantedAuthoritiesConverter = new JwtGrantedAuthoritiesConverter();\n+        jwtGrantedAuthoritiesConverter.setAuthoritiesClaimName(authoritiesClaimName);\n+        this.jwtGrantedConverter = jwtGrantedAuthoritiesConverter;\n+    }\n+\n+    protected Collection<GrantedAuthority> extractAuthorities(Jwt jwt) {\n+        return this.jwtGrantedConverter.convert(jwt);\n+    }\n+\n     @Override\n     public AbstractAuthenticationToken convert(Jwt jwt) {\n-        OAuth2AccessToken accessToken = new OAuth2AccessToken(\n-            OAuth2AccessToken.TokenType.BEARER, jwt.getTokenValue(), jwt.getIssuedAt(), jwt.getExpiresAt());\n-        AbstractAuthenticationToken token = this.jwtAuthenticationConverter.convert(jwt);\n-        Collection<GrantedAuthority> authorities = token.getAuthorities();\n-        JWTClaimsSet.Builder builder = new Builder();\n-        for (Entry<String, Object> entry : jwt.getClaims().entrySet()) {\n-            builder.claim(entry.getKey(), entry.getValue());\n-        }\n-        JWTClaimsSet jwtClaimsSet = builder.build();\n-        JWSObject jwsObject = null;\n-        try {\n-            jwsObject = JWSObject.parse(accessToken.getTokenValue());\n-        } catch (ParseException e) {\n-            LOGGER.error(\n-                e.getMessage() + \". When create an instance of JWSObject, an exception is resolved on the token.\");\n-        }\n-        UserPrincipal userPrincipal = new UserPrincipal(accessToken.getTokenValue(), jwsObject, jwtClaimsSet);\n-        return new PreAuthenticatedAuthenticationToken(userPrincipal, null, authorities);\n+        Collection<GrantedAuthority> authorities = extractAuthorities(jwt);\n+        AzureOAuth2AuthenticatedPrincipal authenticatedPrincipal = new AzureOAuth2AuthenticatedPrincipal(\n+            jwt.getHeaders(), jwt.getClaims(), authorities, jwt.getTokenValue());\n+        return new PreAuthenticatedAuthenticationToken(authenticatedPrincipal, null, authorities);\n+    }\n+\n+    public void setJwtGrantedAuthoritiesConverter(\n+        Converter<Jwt, Collection<GrantedAuthority>> jwtGrantedAuthoritiesConverter) {\n+        this.jwtGrantedConverter = jwtGrantedAuthoritiesConverter;\n     }\n }\n"}}, {"oid": "a31f1a6e648f0c9129984be6aace6bf5282266ae", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a31f1a6e648f0c9129984be6aace6bf5282266ae", "message": "* add AzureOAuth2AuthenticatedPrincipal\n* add unit test", "committedDate": "2020-11-25T01:46:55Z", "type": "commit"}, {"oid": "f7aa628113926cfb072b7e0cb3952fb73ac9dcc0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f7aa628113926cfb072b7e0cb3952fb73ac9dcc0", "message": "Merge branch 'master' into access_token_validate\n\n# Conflicts:\n#\tsdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/implementation/AzureActiveDirectoryProperties.java", "committedDate": "2020-11-25T02:29:10Z", "type": "commit"}, {"oid": "0851fc65054639f590a5548a2e02e9d63025746f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0851fc65054639f590a5548a2e02e9d63025746f", "message": "* update AzureActiveDirectoryResourceServerConfiguration", "committedDate": "2020-11-25T02:35:18Z", "type": "commit"}, {"oid": "0ac20f994bb211b20a9c7018ce0032ed6a6ee8da", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ac20f994bb211b20a9c7018ce0032ed6a6ee8da", "message": "* Make changes according to checkstyle", "committedDate": "2020-11-25T02:57:55Z", "type": "commit"}, {"oid": "9f80db079a731776cecbd59d5937eee4681558ed", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f80db079a731776cecbd59d5937eee4681558ed", "message": "* Make changes according to checkstyle.\n* For AzureOAuth2AuthenticatedPrincipal add multiple constructors, to implement change authoritiesClaimName, authorityPrefix.\n* Changes the PreAuthenticatedAuthenticationToken to BearerTokenAuthentication in AzureJwtBearerTokenAuthenticationConverter.\n* add unit test in AzureJwtBearerTokenAuthenticationConverterTest.", "committedDate": "2020-11-25T08:12:44Z", "type": "commit"}, {"oid": "fd2155b9878f438147b1387fc51b0d412036f6b4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd2155b9878f438147b1387fc51b0d412036f6b4", "message": "* update unit test", "committedDate": "2020-11-26T01:35:27Z", "type": "commit"}, {"oid": "7403602d543faa119d837cd6dfbb9dc4ab930cf0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7403602d543faa119d837cd6dfbb9dc4ab930cf0", "message": "* Modify invalid import", "committedDate": "2020-11-26T09:32:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc1Mjc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17613#discussion_r530752791", "bodyText": "Change this doc.", "author": "saragluna", "createdAt": "2020-11-26T03:25:59Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java", "diffHunk": "@@ -0,0 +1,60 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.aad.resource.server;\n+\n+import java.util.Collection;\n+import org.springframework.core.convert.converter.Converter;\n+import org.springframework.security.authentication.AbstractAuthenticationToken;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.oauth2.core.OAuth2AccessToken;\n+import org.springframework.security.oauth2.jwt.Jwt;\n+import org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthentication;\n+import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\n+import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;\n+import org.springframework.util.Assert;\n+\n+/**\n+ * A {@link Converter} that takes a {@link Jwt} and converts it into a {@link PreAuthenticatedAuthenticationToken}.", "originalCommit": "fd2155b9878f438147b1387fc51b0d412036f6b4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7403602d543faa119d837cd6dfbb9dc4ab930cf0", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\nindex 74ab28018a8..f5f7de17bc6 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/resource/server/AzureJwtBearerTokenAuthenticationConverter.java\n\n@@ -10,11 +10,10 @@ import org.springframework.security.oauth2.core.OAuth2AccessToken;\n import org.springframework.security.oauth2.jwt.Jwt;\n import org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthentication;\n import org.springframework.security.oauth2.server.resource.authentication.JwtGrantedAuthoritiesConverter;\n-import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;\n import org.springframework.util.Assert;\n \n /**\n- * A {@link Converter} that takes a {@link Jwt} and converts it into a {@link PreAuthenticatedAuthenticationToken}.\n+ * A {@link Converter} that takes a {@link Jwt} and converts it into a {@link BearerTokenAuthentication}.\n  */\n public class AzureJwtBearerTokenAuthenticationConverter implements Converter<Jwt, AbstractAuthenticationToken> {\n \n"}}]}