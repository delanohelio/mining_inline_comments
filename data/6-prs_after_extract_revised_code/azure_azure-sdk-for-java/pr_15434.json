{"pr_number": 15434, "pr_title": "Upgrade to spring cosmos track 2 library", "pr_createdAt": "2020-09-22T01:33:51Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/15434", "timeline": [{"oid": "cc48c2f5fda18f5d0e0694bd7100add1815a47eb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cc48c2f5fda18f5d0e0694bd7100add1815a47eb", "message": "upgrade to spring cosmos track 2", "committedDate": "2020-09-21T06:15:20Z", "type": "commit"}, {"oid": "c754092f1beafa2751c7b80647228b4f8f84c55f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c754092f1beafa2751c7b80647228b4f8f84c55f", "message": "rename cosmos track 2 library", "committedDate": "2020-09-21T10:46:08Z", "type": "commit"}, {"oid": "4187ce3c38b3a11412c895232e2d637f929e1b44", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4187ce3c38b3a11412c895232e2d637f929e1b44", "message": "fix broken link", "committedDate": "2020-09-22T02:04:55Z", "type": "commit"}, {"oid": "50444f927b120adc2284f5d33e679c723f4d31a4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/50444f927b120adc2284f5d33e679c723f4d31a4", "message": "update according reviewer comments", "committedDate": "2020-09-22T02:40:05Z", "type": "commit"}, {"oid": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/499f2968c262a1a1c72b4a35fb5962b84eed31c0", "message": "add back cosmos properties configuration", "committedDate": "2020-09-22T06:44:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyNzc5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492627794", "bodyText": "Call it Cosmos DB here.", "author": "saragluna", "createdAt": "2020-09-22T10:24:30Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-cosmos/src/main/java/com/azure/cosmos/CosmosSampleApplication.java", "diffHunk": "@@ -30,7 +30,7 @@ public static void main(String[] args) {\n     public void run(String... var1) throws Exception {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\", \"test address line one\");\n \n-        // Save the User class to Azure CosmosDB database.\n+        // Save the User class to Azure Cosmos database.", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "chunk": "diff --git a/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-cosmos/src/main/java/com/azure/cosmos/CosmosSampleApplication.java b/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-cosmos/src/main/java/com/azure/cosmos/CosmosSampleApplication.java\nindex 4876622cf76..51427578edd 100644\n--- a/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-cosmos/src/main/java/com/azure/cosmos/CosmosSampleApplication.java\n+++ b/sdk/spring/azure-spring-boot-samples/azure-spring-boot-sample-cosmos/src/main/java/com/azure/cosmos/CosmosSampleApplication.java\n\n@@ -23,6 +25,9 @@ public class CosmosSampleApplication implements CommandLineRunner {\n     @Autowired\n     private UserRepository repository;\n \n+    @Autowired\n+    private ApplicationContext applicationContext;\n+\n     public static void main(String[] args) {\n         SpringApplication.run(CosmosSampleApplication.class, args);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyODQyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492628423", "bodyText": "Same here.", "author": "saragluna", "createdAt": "2020-09-22T10:25:39Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-complete/src/main/java/sample/convert/ConvertSampleApplication.java", "diffHunk": "@@ -35,7 +35,7 @@ public void run(String... var1) throws Exception {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\",\n                 \"test address line one\");\n \n-        // Save the User class to Azure CosmosDB database.\n+        // Save the User class to Azure Cosmos database.\n         final Mono<User> saveUserMono = repository.save(testUser);", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "chunk": "diff --git a/sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-complete/src/main/java/sample/convert/ConvertSampleApplication.java b/sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-complete/src/main/java/sample/convert/ConvertSampleApplication.java\nindex e0d9cd90d64..f9fdf91b38d 100644\n--- a/sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-complete/src/main/java/sample/convert/ConvertSampleApplication.java\n+++ b/sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-complete/src/main/java/sample/convert/ConvertSampleApplication.java\n\n@@ -35,7 +35,7 @@ public class ConvertSampleApplication implements CommandLineRunner {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\",\n                 \"test address line one\");\n \n-        // Save the User class to Azure Cosmos database.\n+        // Save the User class to Azure Cosmos DB database.\n         final Mono<User> saveUserMono = repository.save(testUser);\n \n         final Flux<User> firstNameUserFlux = repository.findByFirstName(\"testFirstName\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYyOTMxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492629314", "bodyText": "Same here.", "author": "saragluna", "createdAt": "2020-09-22T10:27:33Z", "path": "sdk/spring/azure-spring-boot-samples/azure-spring-cloud-appconfiguration-conversion-sample-initial/src/main/java/sample/convert/ConvertSampleApplication.java", "diffHunk": "@@ -33,7 +33,7 @@ public void run(String... var1) throws Exception {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\",\n             \"test address line one\");\n \n-        // Save the User class to Azure CosmosDB database.\n+        // Save the User class to Azure Cosmos database.", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMzgyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492633826", "bodyText": "We didn't change this package name in this PR?", "author": "saragluna", "createdAt": "2020-09-22T10:36:14Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,53 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.microsoft.azure.spring.autoconfigure.cosmos;", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEyNTEyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r493125124", "bodyText": "Jack Wu will change it later.", "author": "moarychan", "createdAt": "2020-09-23T01:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzMzgyNg=="}], "type": "inlineReview", "revised_code": {"commit": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfiguration.java\nindex db644640519..65615dab75c 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfiguration.java\n\n@@ -3,6 +3,7 @@\n \n package com.microsoft.azure.spring.autoconfigure.cosmos;\n \n+import com.azure.cosmos.ConnectionMode;\n import com.azure.cosmos.CosmosClient;\n import com.azure.cosmos.CosmosClientBuilder;\n import com.azure.spring.data.cosmos.config.AbstractCosmosConfiguration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNDk4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492634986", "bodyText": "Just to double check, is this ID the ID of the database?", "author": "saragluna", "createdAt": "2020-09-22T10:38:28Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthIndicator.java", "diffHunk": "@@ -21,32 +21,32 @@\n public class CosmosHealthIndicator extends AbstractHealthIndicator {\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(CosmosHealthIndicator.class);\n-    @Value(\"${azure.cosmosdb.database}\")\n+    @Value(\"${azure.cosmos.database}\")\n     private String dbName;\n-    @Value(\"${azure.cosmosdb.uri}\")\n+    @Value(\"${azure.cosmos.uri}\")\n     private String uri;\n \n     @Autowired\n     private CosmosClient cosmosClient;\n \n     public CosmosHealthIndicator(CosmosClient cosmosClient) {\n-        super(\"CosmosDB health check failed\");\n+        super(\"Cosmos health check failed\");\n         Assert.notNull(cosmosClient, \"CosmosClient must not be null\");\n         this.cosmosClient = cosmosClient;\n     }\n \n     @Override\n     protected void doHealthCheck(Builder builder) throws Exception {\n-        CosmosDatabaseResponse response = this.cosmosClient.getDatabase(dbName).read().block();\n+        CosmosDatabaseResponse response = this.cosmosClient.getDatabase(dbName).read();\n \n         if (response != null) {\n             LOGGER.info(\"The health indicator cost {} RUs, cosmos uri: {}, dbName: {}\",\n-                response.requestCharge(), uri, dbName);\n+                response.getRequestCharge(), uri, dbName);\n         }\n         if (response == null) {\n             builder.down();\n         } else {\n-            builder.up().withDetail(\"database\", response.database().id());\n+            builder.up().withDetail(\"database\", response.getProperties().getId());\n         }", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEyNjc5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r493126790", "bodyText": "yes,\n    /**\n     * Gets the cosmos database properties\n     *\n     * @return the cosmos database properties\n     */\n    public CosmosDatabaseProperties getProperties() {\n        return super.getProperties();\n    }\n\n    /**\n     * Gets the name of the resource.\n     *\n     * @return the name of the resource.\n     */\n    public String getId() {\n        return this.database.getId();\n    }", "author": "moarychan", "createdAt": "2020-09-23T01:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNDk4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "67a2d9dac089238710d5d3c26ccfb9f5a37e2f9a", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthIndicator.java b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthIndicator.java\nindex 41f229d3aa6..4695bbc2171 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthIndicator.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthIndicator.java\n\n@@ -27,17 +27,17 @@ public class CosmosHealthIndicator extends AbstractHealthIndicator {\n     private String uri;\n \n     @Autowired\n-    private CosmosClient cosmosClient;\n+    private CosmosAsyncClient cosmosAsyncClient;\n \n-    public CosmosHealthIndicator(CosmosClient cosmosClient) {\n+    public CosmosHealthIndicator(CosmosAsyncClient cosmosAsyncClient) {\n         super(\"Cosmos health check failed\");\n-        Assert.notNull(cosmosClient, \"CosmosClient must not be null\");\n-        this.cosmosClient = cosmosClient;\n+        Assert.notNull(cosmosAsyncClient, \"CosmosClient must not be null\");\n+        this.cosmosAsyncClient = cosmosAsyncClient;\n     }\n \n     @Override\n     protected void doHealthCheck(Builder builder) throws Exception {\n-        CosmosDatabaseResponse response = this.cosmosClient.getDatabase(dbName).read();\n+        CosmosDatabaseResponse response = this.cosmosAsyncClient.getDatabase(dbName).read().block();\n \n         if (response != null) {\n             LOGGER.info(\"The health indicator cost {} RUs, cosmos uri: {}, dbName: {}\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNjkwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492636900", "bodyText": "Same here.", "author": "saragluna", "createdAt": "2020-09-22T10:42:38Z", "path": "sdk/spring/azure-spring-boot/src/samples/java/com/azure/spring/cosmos/CosmosSampleApplication.java", "diffHunk": "@@ -30,7 +30,7 @@ public static void main(String[] args) {\n     public void run(String... var1) {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\", \"test address line one\");\n \n-        // Save the User class to Azure CosmosDB database.\n+        // Save the User class to Azure Cosmos database.", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/samples/java/com/azure/spring/cosmos/CosmosSampleApplication.java b/sdk/spring/azure-spring-boot/src/samples/java/com/azure/spring/cosmos/CosmosSampleApplication.java\nindex 5bfb46273e5..485448c39ee 100644\n--- a/sdk/spring/azure-spring-boot/src/samples/java/com/azure/spring/cosmos/CosmosSampleApplication.java\n+++ b/sdk/spring/azure-spring-boot/src/samples/java/com/azure/spring/cosmos/CosmosSampleApplication.java\n\n@@ -30,7 +30,7 @@ public class CosmosSampleApplication implements CommandLineRunner {\n     public void run(String... var1) {\n         final User testUser = new User(\"testId\", \"testFirstName\", \"testLastName\", \"test address line one\");\n \n-        // Save the User class to Azure Cosmos database.\n+        // Save the User class to Azure Cosmos DB database.\n         final Mono<User> saveUserMono = repository.save(testUser);\n \n         final Flux<User> firstNameUserFlux = repository.findByFirstName(\"testFirstName\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNzk0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492637946", "bodyText": "How do we configure the connection policy now?", "author": "saragluna", "createdAt": "2020-09-22T10:44:53Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java", "diffHunk": "@@ -107,14 +110,6 @@ public void setAllowTelemetry(boolean allowTelemetry) {\n         this.allowTelemetry = allowTelemetry;\n     }\n \n-    public ConnectionPolicy getConnectionPolicy() {", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEyODM3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r493128373", "bodyText": "the default connectionPolicy instance will be created in CosmosClientBuilder.\n    /**\n     * Instantiates a new Cosmos client builder.\n     */\n    public CosmosClientBuilder() {\n        //  Build default connection policy with direct default connection config\n        this.connectionPolicy = new ConnectionPolicy(DirectConnectionConfig.getDefaultConfig());\n        //  Some default values\n        this.userAgentSuffix = \"\";\n        this.throttlingRetryOptions = new ThrottlingRetryOptions();\n    }", "author": "moarychan", "createdAt": "2020-09-23T01:34:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNzk0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzODc1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492638752", "bodyText": "What's this test for?", "author": "saragluna", "createdAt": "2020-09-22T10:46:32Z", "path": "sdk/spring/azure-spring-boot/src/test/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosAutoConfigurationTest.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.microsoft.azure.spring.autoconfigure.cosmos;\n+\n+\n+import com.azure.cosmos.ThrottlingRetryOptions;\n+import com.azure.cosmos.implementation.ConnectionPolicy;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Ignore\n+public class CosmosAutoConfigurationTest {", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEzMDEzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r493130134", "bodyText": "it's used for testing properties setting of ConnectionPolicy", "author": "moarychan", "createdAt": "2020-09-23T01:36:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzODc1Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0MTA1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r492641051", "bodyText": "How is this credential used now and does it support key rotation?", "author": "saragluna", "createdAt": "2020-09-22T10:51:15Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java", "diffHunk": "@@ -130,4 +125,12 @@ public ResponseDiagnosticsProcessor getResponseDiagnosticsProcessor() {\n     public void setResponseDiagnosticsProcessor(ResponseDiagnosticsProcessor responseDiagnosticsProcessor) {\n         this.responseDiagnosticsProcessor = responseDiagnosticsProcessor;\n     }\n+\n+    public AzureKeyCredential getCredential() {", "originalCommit": "499f2968c262a1a1c72b4a35fb5962b84eed31c0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java\nindex 1e3555cb0c1..d311f0a689f 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosProperties.java\n\n@@ -126,11 +131,19 @@ public class CosmosProperties {\n         this.responseDiagnosticsProcessor = responseDiagnosticsProcessor;\n     }\n \n-    public AzureKeyCredential getCredential() {\n+    public String getCredential() {\n         return credential;\n     }\n \n-    public void setCredential(AzureKeyCredential credential) {\n+    public void setCredential(String credential) {\n         this.credential = credential;\n     }\n+\n+    public ConnectionMode getConnectionMode() {\n+        return connectionMode;\n+    }\n+\n+    public void setConnectionMode(ConnectionMode connectionMode) {\n+        this.connectionMode = connectionMode;\n+    }\n }\n"}}, {"oid": "237f86fd5cf0df161ccf3046493bce7f22ceba48", "url": "https://github.com/Azure/azure-sdk-for-java/commit/237f86fd5cf0df161ccf3046493bce7f22ceba48", "message": "updated according reviewer's comments", "committedDate": "2020-09-23T06:46:47Z", "type": "commit"}, {"oid": "c97b971dcf16ca06de5147ab89f8b69fc291841a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c97b971dcf16ca06de5147ab89f8b69fc291841a", "message": "updated new properties processing", "committedDate": "2020-09-23T10:26:01Z", "type": "commit"}, {"oid": "0225a77b5d5a802fa5b9be997cd5aa358d142200", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0225a77b5d5a802fa5b9be997cd5aa358d142200", "message": "update AzureKeyCredential class usage", "committedDate": "2020-09-24T08:21:34Z", "type": "commit"}, {"oid": "dff7dc2cba40d7de912e1547b4d5945f127db21a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dff7dc2cba40d7de912e1547b4d5945f127db21a", "message": "Merge branch 'master' of github", "committedDate": "2020-09-24T09:10:19Z", "type": "commit"}, {"oid": "ade38997a591b8c94b995de6f905c9e8c56a96d4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ade38997a591b8c94b995de6f905c9e8c56a96d4", "message": "remove unused import", "committedDate": "2020-09-25T02:25:28Z", "type": "commit"}, {"oid": "67a2d9dac089238710d5d3c26ccfb9f5a37e2f9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/67a2d9dac089238710d5d3c26ccfb9f5a37e2f9a", "message": "update health contributor configuration", "committedDate": "2020-09-25T08:05:43Z", "type": "commit"}, {"oid": "01c20982613f70570e3f8e76b1deda75c63ad449", "url": "https://github.com/Azure/azure-sdk-for-java/commit/01c20982613f70570e3f8e76b1deda75c63ad449", "message": "merge from master", "committedDate": "2020-09-25T08:10:45Z", "type": "commit"}, {"oid": "082802880086d5befdffa0d3592badcabc5697e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/082802880086d5befdffa0d3592badcabc5697e7", "message": "update bean name", "committedDate": "2020-09-25T08:12:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgyMjYwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r494822602", "bodyText": "Why do we change to use async client instead?", "author": "saragluna", "createdAt": "2020-09-25T08:13:14Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/microsoft/azure/spring/autoconfigure/cosmos/CosmosHealthConfiguration.java", "diffHunk": "@@ -16,15 +16,15 @@\n  * CosmosHealthConfiguration\n  */\n @Configuration\n-@ConditionalOnClass({ CosmosClient.class, HealthIndicator.class})\n+@ConditionalOnClass({ CosmosAsyncClient.class, HealthIndicator.class})", "originalCommit": "67a2d9dac089238710d5d3c26ccfb9f5a37e2f9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgyNzI5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/15434#discussion_r494827295", "bodyText": "there's a new bean cosmosAsyncClient instead of cosmosClient in AbstractCosmosConfiguration class, just follow the spring-cosmos.\n    /**\n     * Declare CosmosAsyncClient bean.\n     *\n     * @param cosmosClientBuilder cosmosClientBuilder\n     * @return CosmosAsyncClient bean\n     */\n    @Bean\n    public CosmosAsyncClient cosmosAsyncClient(CosmosClientBuilder cosmosClientBuilder) {\n        return CosmosFactory.createCosmosAsyncClient(cosmosClientBuilder);\n    }", "author": "moarychan", "createdAt": "2020-09-25T08:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgyMjYwMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "5ebc4bad1cf70d456193d9cec94aa13bc52566f0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5ebc4bad1cf70d456193d9cec94aa13bc52566f0", "message": "fix errors", "committedDate": "2020-09-25T10:45:23Z", "type": "commit"}]}