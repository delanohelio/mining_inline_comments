{"pr_number": 10900, "pr_title": "Container soft delete", "pr_createdAt": "2020-05-07T16:48:08Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10900", "timeline": [{"oid": "59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59c78b217a5f3bcd188b051e0d8a3b54f5e6ba9b", "message": "change versioned account for tests variable names", "committedDate": "2020-04-13T16:37:13Z", "type": "commit"}, {"oid": "cbfa86af23cf366fc9904fa86040a473c042ef75", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cbfa86af23cf366fc9904fa86040a473c042ef75", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73", "committedDate": "2020-04-20T15:00:42Z", "type": "commit"}, {"oid": "f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5b8a406e6b14251e0e9d800c1ea7e08c251439e", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73", "committedDate": "2020-04-30T15:10:12Z", "type": "commit"}, {"oid": "0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e6a057da79b32d1096f7acea08f9d35dc6d77e7", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73", "committedDate": "2020-05-05T16:55:08Z", "type": "commit"}, {"oid": "dbe71dfe62c843fbdc4a710115bb36d05e432db0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbe71dfe62c843fbdc4a710115bb36d05e432db0", "message": "Merge remote-tracking branch 'upstream/feature/storage/stg73' into feature/storage/stg73", "committedDate": "2020-05-06T01:01:40Z", "type": "commit"}, {"oid": "fe5dd2f0ac5121c1f0afe4441ca67494887f538d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe5dd2f0ac5121c1f0afe4441ca67494887f538d", "message": "list deleted containers.", "committedDate": "2020-05-06T16:09:36Z", "type": "commit"}, {"oid": "72a8c56eb7c137a2f73b42a8367673128eb4c1b8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/72a8c56eb7c137a2f73b42a8367673128eb4c1b8", "message": "restore.", "committedDate": "2020-05-07T00:05:33Z", "type": "commit"}, {"oid": "9f74e6e6b34bbb170723ac48a495f7b7bf3d696b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f74e6e6b34bbb170723ac48a495f7b7bf3d696b", "message": "more tests.", "committedDate": "2020-05-07T16:46:58Z", "type": "commit"}, {"oid": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "message": "make ci happy again", "committedDate": "2020-05-07T17:04:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDIwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421670202", "bodyText": "We're restoring a deleted container right?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Restores a previously created container.  The restored container\n          \n          \n            \n                 * Restores a previously delete container. The restored container", "author": "alzimmermsft", "createdAt": "2020-05-07T17:25:37Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously created container.  The restored container", "originalCommit": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyNDY3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421724671", "bodyText": "done. thank you!", "author": "kasobol-msft", "createdAt": "2020-05-07T18:57:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDIwMg=="}], "type": "inlineReview", "revised_code": {"commit": "a51540490f05ddf05bd14723ff7d59475e0294d2", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex 2a0253363d2..dab8055c1a7 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1047,11 +1047,11 @@ public final class BlobContainerAsyncClient {\n     }\n \n     /**\n-     * Restores a previously created container.  The restored container\n+     * Restores a previously deleted container.  The restored container\n      * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n      * If the container associated with this {@link BlobContainerAsyncClient}\n      * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional is Container Soft Delete is enabled\n+     * This API is only functional if Container Soft Delete is enabled\n      * for the storage account associated with the container.\n      *\n      * @param deletedContainerName The name of the previously deleted container.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDQ4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421670487", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This API is only functional is Container Soft Delete is enabled\n          \n          \n            \n                 * This API is only functional if Container Soft Delete is enabled", "author": "alzimmermsft", "createdAt": "2020-05-07T17:26:04Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously created container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional is Container Soft Delete is enabled", "originalCommit": "59ace12694c20f0e3dc3c271c7f83e09719e0ef9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyNDcxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421724718", "bodyText": "done. thank you!", "author": "kasobol-msft", "createdAt": "2020-05-07T18:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY3MDQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a51540490f05ddf05bd14723ff7d59475e0294d2", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex 2a0253363d2..dab8055c1a7 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1047,11 +1047,11 @@ public final class BlobContainerAsyncClient {\n     }\n \n     /**\n-     * Restores a previously created container.  The restored container\n+     * Restores a previously deleted container.  The restored container\n      * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n      * If the container associated with this {@link BlobContainerAsyncClient}\n      * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional is Container Soft Delete is enabled\n+     * This API is only functional if Container Soft Delete is enabled\n      * for the storage account associated with the container.\n      *\n      * @param deletedContainerName The name of the previously deleted container.\n"}}, {"oid": "a51540490f05ddf05bd14723ff7d59475e0294d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a51540490f05ddf05bd14723ff7d59475e0294d2", "message": "fix comments.", "committedDate": "2020-05-07T17:41:34Z", "type": "commit"}, {"oid": "4d4b7bc950c694a19d37d069fe54c7f3975a704d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4d4b7bc950c694a19d37d069fe54c7f3975a704d", "message": "decouple sas version.", "committedDate": "2020-05-07T18:56:47Z", "type": "commit"}, {"oid": "87ff793c7e3c08c9405dc5964efadf539c33e84e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/87ff793c7e3c08c9405dc5964efadf539c33e84e", "message": "aaaaaaaaaaaaaa", "committedDate": "2020-05-07T19:15:07Z", "type": "commit"}, {"oid": "2d9e206b84db164a3c137cf4bf95b6883ebb829f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2d9e206b84db164a3c137cf4bf95b6883ebb829f", "message": "checkstyle...", "committedDate": "2020-05-07T19:29:19Z", "type": "commit"}, {"oid": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "message": "datalake sas tests.", "committedDate": "2020-05-07T20:25:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421834330", "bodyText": "At a higher level, is this what the user would expect? My naive expectation would be that the container is restored into its previous container name?", "author": "JonathanGiles", "createdAt": "2020-05-07T22:38:35Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NzAwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421847004", "bodyText": "Yes. That's how the underlying API works. However there's nothing stopping customer from restoring into same name if nobody created container with same name.", "author": "kasobol-msft", "createdAt": "2020-05-07T23:16:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1MTQxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421851415", "bodyText": "That's not quite my question - I'm not asking how the API works, I was seeking to clarify that this aligns with the users expectations (in the absence of any particular API or implementation).", "author": "JonathanGiles", "createdAt": "2020-05-07T23:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1OTAzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421859030", "bodyText": "Oh I think I see what you mean. restore sounds like it should be acting on current BlobContainerClient so current implementation may sound little bit backwards. What we have here now is more of \"create from deleted container\".\nI think we have few options now. Either change wording here or reverse this API or move it up to service client.\nChanging wording would be:\nclient.createFrom(string deletedContainerName, string deleteContainerVersion) or something like that.\nReversing would mean two overloads:\nclient.restore(string deletedVersion) - this would preserve name\nclient.restore(string deletedVersion, string destinationContainerName) - that would land in renamed container.\nMoving up would mean:\nBlobServiceClient.restoreContainer(string deletedContainerName, string deletedContainerVersion)\nBlobServiceClient.restoreContainer(string deletedContainerName, string deletedContainerVersion, string destinationContainerName)\nWorth noting that deletedContainerVersion can be retrieved at BlobServiceClient level through listing. So maybe restoring procedure should be controlled at this level as well.\n@JonathanGiles  what do you think?\nAlso looping in @seanmcc-msft @tg-msft for this discussion. I guess we'd want to be consistent in .NET if we are changing that (PR reference Azure/azure-sdk-for-net#11244 ). And @xiafu-msft  for Python implementation.", "author": "kasobol-msft", "createdAt": "2020-05-07T23:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3ODUzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421878538", "bodyText": "The current .NET implementation is on the BlobContainerClient:\n        /// <summary>\n        /// Restores a previously created container.  The restored container\n        /// will be renamed to the name of this <see cref=\"BlobContainerClient\"/>.\n        /// If the container associated with this <see cref=\"BlobContainerClient\"/>\n        /// already exists, this call will result in a 409 (conflict).\n        /// This API is only functional is Container Soft Delete is enabled\n        /// for the storage account associated with the container.\n        /// </summary>\n               public virtual Response Restore(\n            string deletedContainerName,\n            string deletedContainerVersion,\n            CancellationToken cancellationToken = default) {...}\n\nThe current user experience for .NET:\nBlobContainerClient container = \n    blobServiceClient.GetBlobContainerClient(\"nameToRestoreContainerTo\";\nawait container.RestoreAsync(\"deletedContainerName\", \"deletedContainerVersion\");\n\nThe restored container will \"become\" the container associated with this BlobContainerClient, and now users can interact with it via this client.\nFor the 3 proposed options:\nclient.createFrom(string deletedContainerName, string deleteContainerVersion) \nI'm not a huge fan of this one.  I'd rather stick with \"Restore\" in the API name to align with the service.  Also, the name \"createFrom\"could be confusing to new users who are just trying to create a Container.\nclient.restore(string deletedVersion)\nI could get behind this one.\nclient.restore(string deletedVersion, string destinationContainerName)\nI think this one doesn't align super well with our current user experience.  Currently, a BlobContainerClient only interact with the Container it is associated with.  This would break that convention.\nBlobServiceClient.restoreContainer(string deletedContainerName, string deletedContainerVersion)\nBlobServiceClient.restoreContainer(string deletedContainerName, string deletedContainerVersion, string destinationContainerName)\nThese are ok, I'd want restoreContainer to return a BlobContainerClient for convenience.\nI prefer the current .NET implementation the most.", "author": "seanmcc-msft", "createdAt": "2020-05-08T01:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg5Nzc4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421897780", "bodyText": "I'd recommend storage discuss this internally and work with @tg-msft to land that across the languages as necessary.", "author": "JonathanGiles", "createdAt": "2020-05-08T02:15:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3MTY5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423171694", "bodyText": "I think I agree with Sean and what Kamil has. Best option would be to align with undelete on blobs, but since that only restores in place, it doesn't offer much guidance here. Perhaps the next best thing is to look at copy, which has the client target the destination and then passes the source as a parameter. I think what .NET is doing most closely aligns with that, and if undelete for blobs ever allows you to move the blob as a part of that operation, we should have the source be a parameter.\nI definitely think there should be an easy restore-in-place overload for cases where the source and destination are the same, so the customer just doesn't need to pass in a name at all. And I think we should rework the javadocs here to be a little clearer about what's happening.\nAlso, for the sake of consistency with blobs, I think we should call this undelete. Since we link to the REST docs in our javadocs, I don't really see a likelihood that customers will get lost hunting through rest docs for the corresponding method.", "author": "rickle-msft", "createdAt": "2020-05-11T16:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MDA2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423250062", "bodyText": "In terms of existing APIs and patterns, this feels like a mix of Blob's Undelete and DataLake's Rename operation.\nI really like Sean's suggestion because I think that removes all the confusion about how to use the API:\nclass BlobServiceClient\n{\n    Response<BlobContainerClient> RestoreContainer(\n        string deletedContainerName,\n        string deletedContainerVersion,\n        string destinationContainerName = null);\n}\nThis doesn't hide the destinationContainerName concept in the BlobContainerClient you use to invoke the API.  Instead it's something you can pass if you want it to change or leave null to keep the same name.", "author": "tg-msft", "createdAt": "2020-05-11T18:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwODk4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423308981", "bodyText": "@tg-msft Both undelete and rename have the client pointing to the target rather than accessing them from the parent container. If restore is similar to both of those, why would introduce a different calling pattern?", "author": "rickle-msft", "createdAt": "2020-05-11T20:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzMDc4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423330781", "bodyText": "By looking at BlobContainerClient.create and BlobContainerClient.delete family (which seem to be relatives of restore - you have to create and delete container in order to restore, same story for .NET) I noticed that we have them both at BlobContainerClient and BlobServiceClient. So, I'd suggest to keep what we already have at Container level (plus extra overload that doesn't take name) and add mirroring methods to ServiceClient.\n@tg-msft @seanmcc-msft what do you think?", "author": "kasobol-msft", "createdAt": "2020-05-11T21:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzMjI0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423332247", "bodyText": "@kasobol-msft, sounds good.\nSo for STG 73, it looks like users will only be able to restore containers under their original name (based on Emily's ongoing email thread with them, there's a bug), with the restore + rename functionality coming in 75.  So we could hold off on the overload that takes new name for now.", "author": "seanmcc-msft", "createdAt": "2020-05-11T21:32:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQwMTM4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423401380", "bodyText": "I completely agree on Undelete vs Restore.  We should use the same name for everything and I've left that feedback on one of the .NET PRs.  In .NET it doesn't matter which way we move thanks to [EditorBrowsable(Never)], but I'd vote for consistency with whatever the other languages are going to call this.\nThe reason I like moving this method up to the parent client is because the return type makes more sense.  When I call BlobClientContainer.Rename(name), I get why you're returning a new client (if I understand that clients are effectively cloud pointers).  If I call BlobContainerClient.Restore() I have no idea why it's returning a new client instance (\"is it actually the same instance, or is it a new instance slightly different from my last one, or ...?\").  If I call BlobServiceClient.Restore(name) it's really easy to understand that the returned client represents the restored container.  I don't feel strongly about this if everyone else prefers keeping it on BlobContainerClient.\nThe one thing I wouldn't do is put it on both BlobServiceClient and BlobContainerClient.  That pattern is an on-ramp where we have GetClient/List/Meta-operations on the parent, Create/Delete on both, and everything else on the child.  If you want to explore expanding the set of operations on both, we should push the architects to clarify the guidelines around hierarchical clients because they're not all written down today.  That discussion was a very large can of worms.  \ud83d\ude04", "author": "tg-msft", "createdAt": "2020-05-12T00:52:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQyMDk2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423420963", "bodyText": "Thanks @tg-msft @seanmcc-msft @rickle-msft for inputs.\nI'm going to pull that API up to service client.\nThe prevailing reason for me would be that we actually need at least a tuple - name and versionid of deleted container - something that's only available at BlobServiceClient level through listing. So one won't be able to complete the whole experience with BlobContainerClient alone.", "author": "kasobol-msft", "createdAt": "2020-05-12T02:07:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk2ODY1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423968650", "bodyText": "Azure/azure-sdk-for-net#12025", "author": "seanmcc-msft", "createdAt": "2020-05-12T19:07:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDMzMA=="}], "type": "inlineReview", "revised_code": {"commit": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex dab8055c1a7..f1bdd8566b6 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1045,47 +1045,4 @@ public final class BlobContainerAsyncClient {\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n-        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n-    }\n-\n-    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n-                                                    Context context) {\n-        return this.azureBlobStorage.containers().restoreWithRestResponseAsync(null, null,\n-            null, deletedContainerName, deletedContainerVersion, context)\n-            .map(response -> new SimpleResponse<>(response, null));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDA4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421840089", "bodyText": "FYI - Deprecation needs to be called out and discussed in more detail whenever it occurs.", "author": "JonathanGiles", "createdAt": "2020-05-07T22:55:14Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java", "diffHunk": "@@ -42,13 +45,53 @@ public BlobContainerListDetails setRetrieveMetadata(boolean retrieveMetadata) {\n         return this;\n     }\n \n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @return a flag indicating whether deleted containers should be returned\n+     */\n+    public boolean getRetrieveDeleted() {\n+        return this.retrieveDeleted;\n+    }\n+\n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @param retrieveDeleted Flag indicating whether deleted containers should be returned.\n+     * @return the updated ContainerListDetails object\n+     */\n+    public BlobContainerListDetails setRetrieveDeleted(boolean retrieveDeleted) {\n+        this.retrieveDeleted = retrieveDeleted;\n+        return this;\n+    }\n+\n     /**\n      * @return the listing flags\n+     * @deprecated use {@link #toIncludeTypes()}\n      */\n+    @Deprecated", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NjI5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421846297", "bodyText": "I added more verbose description in @deprecated JavaDoc section. Is there any other place we should be calling this out?", "author": "kasobol-msft", "createdAt": "2020-05-07T23:14:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDA4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg1MTk3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421851976", "bodyText": "Generally - when review requests are made, explicitly mentioning deprecations is the best practice. Eventually I would imagine tooling will be added to our repo to make it automatic, but it's still a good idea to surface it ASAP so we don't make a decision without full consideration.", "author": "JonathanGiles", "createdAt": "2020-05-07T23:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "da057e7179d9d92060ae1179f4d781b95b6040ac", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\nindex 546955670d7..ff7eabf3e3f 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\n\n@@ -67,7 +67,9 @@ public final class BlobContainerListDetails {\n \n     /**\n      * @return the listing flags\n-     * @deprecated use {@link #toIncludeTypes()}\n+     * @deprecated {@link BlobContainerListDetails} now contains multiple options.\n+     * In order to retrieve all of them use {@link #toIncludeTypes()}. Otherwise this will only convert result of\n+     * {{@link #setRetrieveMetadata(boolean)}} for backwards compatibility.\n      */\n     @Deprecated\n     public ListBlobContainersIncludeType toIncludeType() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDQyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421840424", "bodyText": "There needs to be much more JavaDoc here.", "author": "JonathanGiles", "createdAt": "2020-05-07T22:56:12Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java", "diffHunk": "@@ -42,13 +45,53 @@ public BlobContainerListDetails setRetrieveMetadata(boolean retrieveMetadata) {\n         return this;\n     }\n \n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @return a flag indicating whether deleted containers should be returned\n+     */\n+    public boolean getRetrieveDeleted() {\n+        return this.retrieveDeleted;\n+    }\n+\n+    /**\n+     * Whether deleted containers should be returned.\n+     *\n+     * @param retrieveDeleted Flag indicating whether deleted containers should be returned.\n+     * @return the updated ContainerListDetails object\n+     */\n+    public BlobContainerListDetails setRetrieveDeleted(boolean retrieveDeleted) {\n+        this.retrieveDeleted = retrieveDeleted;\n+        return this;\n+    }\n+\n     /**\n      * @return the listing flags\n+     * @deprecated use {@link #toIncludeTypes()}\n      */\n+    @Deprecated\n     public ListBlobContainersIncludeType toIncludeType() {\n         if (this.retrieveMetadata) {\n             return ListBlobContainersIncludeType.METADATA;\n         }\n         return null;\n     }\n+\n+    /**\n+     * @return the listing flags", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NTk1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r421845954", "bodyText": "I've added more.", "author": "kasobol-msft", "createdAt": "2020-05-07T23:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDQyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjcxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423942710", "bodyText": "I ended up converting this to private method inside client.", "author": "kasobol-msft", "createdAt": "2020-05-12T18:23:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "da057e7179d9d92060ae1179f4d781b95b6040ac", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\nindex 546955670d7..ff7eabf3e3f 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/BlobContainerListDetails.java\n\n@@ -67,7 +67,9 @@ public final class BlobContainerListDetails {\n \n     /**\n      * @return the listing flags\n-     * @deprecated use {@link #toIncludeTypes()}\n+     * @deprecated {@link BlobContainerListDetails} now contains multiple options.\n+     * In order to retrieve all of them use {@link #toIncludeTypes()}. Otherwise this will only convert result of\n+     * {{@link #setRetrieveMetadata(boolean)}} for backwards compatibility.\n      */\n     @Deprecated\n     public ListBlobContainersIncludeType toIncludeType() {\n"}}, {"oid": "da057e7179d9d92060ae1179f4d781b95b6040ac", "url": "https://github.com/Azure/azure-sdk-for-java/commit/da057e7179d9d92060ae1179f4d781b95b6040ac", "message": "pr feedback.", "committedDate": "2020-05-07T23:12:46Z", "type": "commit"}, {"oid": "e2aa643728110eb8628e7496274fea2e415d6d59", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e2aa643728110eb8628e7496274fea2e415d6d59", "message": "rename sas service version", "committedDate": "2020-05-08T00:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjMzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422286333", "bodyText": "The docs should point to the REST docs and should have a code snippet.", "author": "rickle-msft", "createdAt": "2020-05-08T17:59:41Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjQ5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423942490", "bodyText": "I added snippets and left TODO for links as we don't have them yet.", "author": "kasobol-msft", "createdAt": "2020-05-12T18:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NjMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex dab8055c1a7..f1bdd8566b6 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1045,47 +1045,4 @@ public final class BlobContainerAsyncClient {\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n-        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n-    }\n-\n-    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n-                                                    Context context) {\n-        return this.azureBlobStorage.containers().restoreWithRestResponseAsync(null, null,\n-            null, deletedContainerName, deletedContainerVersion, context)\n-            .map(response -> new SimpleResponse<>(response, null));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTIxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422289215", "bodyText": "Was there a discussion around restore vs undelete? Restore sounds cleaner, but we already have undelete blobs, so not sure if we want to be consistent.", "author": "rickle-msft", "createdAt": "2020-05-08T18:05:50Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5NjU1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422296555", "bodyText": "This also differs from blobs in that with blobs the client must point to the deleted blob. Here the client points to the new destination. It may be worth discussing whether we depart from the rest api and have the client point to the deleted container and then do some work internally to switch things around.", "author": "rickle-msft", "createdAt": "2020-05-08T18:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNjkzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423126935", "bodyText": "@rickle-msft  We have a discussion started above - #10900 (comment) - please see ideas there and share your pick.\nFor undelete vs restore. That discussion happened on .NET PR for the same feature. Restore has been picked even though we also have blob undelete there.", "author": "kasobol-msft", "createdAt": "2020-05-11T15:32:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTIxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjI0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423942241", "bodyText": "We landed on \"undelete\" and moving up to service client.", "author": "kasobol-msft", "createdAt": "2020-05-12T18:22:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTIxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex dab8055c1a7..f1bdd8566b6 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1045,47 +1045,4 @@ public final class BlobContainerAsyncClient {\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n-        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n-    }\n-\n-    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n-                                                    Context context) {\n-        return this.azureBlobStorage.containers().restoreWithRestResponseAsync(null, null,\n-            null, deletedContainerName, deletedContainerVersion, context)\n-            .map(response -> new SimpleResponse<>(response, null));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MDg4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r422290889", "bodyText": "I think we also want to be adding this tracing context", "author": "rickle-msft", "createdAt": "2020-05-08T18:09:20Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java", "diffHunk": "@@ -1045,4 +1045,47 @@ private boolean validateNoETag(BlobRequestConditions modifiedRequestConditions)\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n+        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n+     * If the container associated with this {@link BlobContainerAsyncClient}\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A reactive response signaling completion.\n+     */\n+    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n+        try {\n+            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n+                                                    Context context) {", "originalCommit": "a1eb7635fa803aae7efeadc6a012258a0b1dd7c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MjAwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r423942002", "bodyText": "added.", "author": "kasobol-msft", "createdAt": "2020-05-12T18:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MDg4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\nindex dab8055c1a7..f1bdd8566b6 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobContainerAsyncClient.java\n\n@@ -1045,47 +1045,4 @@ public final class BlobContainerAsyncClient {\n         }\n         return modifiedRequestConditions.getIfMatch() == null && modifiedRequestConditions.getIfNoneMatch() == null;\n     }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Void> restore(String deletedContainerName, String deletedContainerVersion) {\n-        return this.restoreWithResponse(deletedContainerName, deletedContainerVersion).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the name of this {@link BlobContainerAsyncClient}.\n-     * If the container associated with this {@link BlobContainerAsyncClient}\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A reactive response signaling completion.\n-     */\n-    public Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context -> restoreWithResponse(deletedContainerName, deletedContainerVersion, context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n-    }\n-\n-    Mono<Response<Void>> restoreWithResponse(String deletedContainerName, String deletedContainerVersion,\n-                                                    Context context) {\n-        return this.azureBlobStorage.containers().restoreWithRestResponseAsync(null, null,\n-            null, deletedContainerName, deletedContainerVersion, context)\n-            .map(response -> new SimpleResponse<>(response, null));\n-    }\n }\n"}}, {"oid": "e56dba1ec9d8488d435caf47637f09cd8da1547e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e56dba1ec9d8488d435caf47637f09cd8da1547e", "message": "move to service client.", "committedDate": "2020-05-12T02:54:09Z", "type": "commit"}, {"oid": "25ba3b9433a5f712dc76ce9f3bca5970975eae72", "url": "https://github.com/Azure/azure-sdk-for-java/commit/25ba3b9433a5f712dc76ce9f3bca5970975eae72", "message": "Satisfy the checkstyle.", "committedDate": "2020-05-12T15:12:20Z", "type": "commit"}, {"oid": "c95f39e81875eacbe148d62ec84c29559ce76c84", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c95f39e81875eacbe148d62ec84c29559ce76c84", "message": "Code snippets.", "committedDate": "2020-05-12T16:31:39Z", "type": "commit"}, {"oid": "5bfde58cde1c9a673fc1721a29e8a969f9080f00", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5bfde58cde1c9a673fc1721a29e8a969f9080f00", "message": "pr feedback", "committedDate": "2020-05-12T16:46:04Z", "type": "commit"}, {"oid": "73b27e8f22e67a52c2a707883274e8c1e5f69059", "url": "https://github.com/Azure/azure-sdk-for-java/commit/73b27e8f22e67a52c2a707883274e8c1e5f69059", "message": "step verifier", "committedDate": "2020-05-12T17:30:22Z", "type": "commit"}, {"oid": "6fb3d35075dd3829bfcc8a5420e7ace3ad2ca77c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6fb3d35075dd3829bfcc8a5420e7ace3ad2ca77c", "message": "docs", "committedDate": "2020-05-12T17:48:27Z", "type": "commit"}, {"oid": "3d046ddacd3a57930742ab41c02064321830883f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d046ddacd3a57930742ab41c02064321830883f", "message": "fix test", "committedDate": "2020-05-12T18:11:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Njk1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424086956", "bodyText": "Why is this here now instead of on the Details type? Is it so we don't have to have a public method on Details to allow access across packages?", "author": "rickle-msft", "createdAt": "2020-05-12T23:17:09Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -325,14 +325,37 @@ public String getAccountUrl() {\n         ListBlobContainersOptions options, Duration timeout) {\n         options = options == null ? new ListBlobContainersOptions() : options;\n \n-        ListBlobContainersIncludeType includeType = options.getDetails().toIncludeType();\n         return StorageImplUtils.applyOptionalTimeout(\n             this.azureBlobStorage.services().listBlobContainersSegmentWithRestResponseAsync(\n                 options.getPrefix(), marker, options.getMaxResultsPerPage(),\n-                includeType == null ? null : Collections.singletonList(includeType),\n+                toIncludeTypes(options.getDetails()),\n                 null, null, Context.NONE), timeout);\n     }\n \n+    /**\n+     * Converts {@link BlobContainerListDetails} into list of {@link ListBlobContainersIncludeType}\n+     * that contains only options selected. If no option is selected then null is returned.\n+     *\n+     * @return a list of selected options converted into {@link ListBlobContainersIncludeType}, null if none\n+     * of options has been selected.\n+     */\n+    private List<ListBlobContainersIncludeType> toIncludeTypes(BlobContainerListDetails blobContainerListDetails) {", "originalCommit": "3d046ddacd3a57930742ab41c02064321830883f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNzczMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424107731", "bodyText": "This is the result of discussion on the APIView. We don't expect customer to call this and we have option to hide it as there is only one place this is being used.", "author": "kasobol-msft", "createdAt": "2020-05-13T00:29:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Njk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "57e8f662c7bf46daaee0f419a7467c49586c205b", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\nindex c94d8e97043..6765c7f1dd2 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n\n@@ -344,12 +344,12 @@ public final class BlobServiceAsyncClient {\n             && (blobContainerListDetails.getRetrieveMetadata() || blobContainerListDetails.getRetrieveDeleted());\n         if (hasDetails) {\n             List<ListBlobContainersIncludeType> flags = new ArrayList<>(2);\n-            if (blobContainerListDetails.getRetrieveMetadata()) {\n-                flags.add(ListBlobContainersIncludeType.METADATA);\n-            }\n             if (blobContainerListDetails.getRetrieveDeleted()) {\n                 flags.add(ListBlobContainersIncludeType.DELETED);\n             }\n+            if (blobContainerListDetails.getRetrieveMetadata()) {\n+                flags.add(ListBlobContainersIncludeType.METADATA);\n+            }\n             return flags;\n         } else {\n             return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzY3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424087670", "bodyText": "Unless the rest docs already say this, maybe we should add where this version can be retrieved from", "author": "rickle-msft", "createdAt": "2020-05-12T23:19:34Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -717,4 +740,123 @@ private void throwOnAnonymousAccess() {\n                 + \"credentials\"));\n         }\n     }\n+\n+    /**\n+     * Restores a previously deleted container.\n+     * If the container associated with provided <code>deletedContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.", "originalCommit": "3d046ddacd3a57930742ab41c02064321830883f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNzI2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424107261", "bodyText": "We don't have rest docs yet so I'd hold on with that. However I've showcased how to get version id in the sample snippets. I think that should be enough.", "author": "kasobol-msft", "createdAt": "2020-05-13T00:27:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NzY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "3843d028eb0c4e35cee147705c791d7d7d610d82", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\nindex c94d8e97043..505fc139173 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n\n@@ -761,68 +762,14 @@ public final class BlobServiceAsyncClient {\n      */\n     public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n         String deletedContainerName, String deletedContainerVersion) {\n-        return this.undeleteBlobContainer(deletedContainerName,\n-            deletedContainerVersion, deletedContainerName);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the <code>destinationContainerName</code>.\n-     * If the container associated with provided <code>destinationContainerName</code>\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     * For more information, see the\n-     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String-String}\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @param destinationContainerName The name of the destination container.\n-     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n-     * to interact with the restored container.\n-     */\n-    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n-        String deletedContainerName, String deletedContainerVersion, String destinationContainerName) {\n         return this.undeleteBlobContainerWithResponse(deletedContainerName,\n-            deletedContainerVersion, destinationContainerName).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.\n-     * If the container associated with provided <code>deletedContainerName</code>\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     * For more information, see the\n-     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse#String-String}\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} contains a {@link\n-     * BlobContainerAsyncClient} used to interact with the restored container.\n-     */\n-    public Mono<Response<BlobContainerAsyncClient>> undeleteBlobContainerWithResponse(\n-        String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context ->\n-                undeleteBlobContainerWithResponse(deletedContainerName, deletedContainerVersion, deletedContainerName,\n-                    context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+            deletedContainerVersion, null).flatMap(FluxUtil::toMono);\n     }\n \n     /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the <code>destinationContainerName</code>.\n+     * Restores a previously deleted container. The restored container\n+     * will be renamed to the <code>destinationContainerName</code> if provided in <code>options</code>.\n+     * Otherwise <code>deletedContainerName</code> is used as destination container name.\n      * If the container associated with provided <code>destinationContainerName</code>\n      * already exists, this call will result in a 409 (conflict).\n      * This API is only functional if Container Soft Delete is enabled\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4ODU5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424088599", "bodyText": "I think we can get rid of this overload and the next one. We can have just the min and then the max is WithResponse.\nAlso, should we move the destinationContainerName into UndeleteContainerOptions so we don't have to add overloads later. Continuing the conversation we had around tags.", "author": "rickle-msft", "createdAt": "2020-05-12T23:22:26Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java", "diffHunk": "@@ -717,4 +740,123 @@ private void throwOnAnonymousAccess() {\n                 + \"credentials\"));\n         }\n     }\n+\n+    /**\n+     * Restores a previously deleted container.\n+     * If the container associated with provided <code>deletedContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n+     * to interact with the restored container.\n+     */\n+    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n+        String deletedContainerName, String deletedContainerVersion) {\n+        return this.undeleteBlobContainer(deletedContainerName,\n+            deletedContainerVersion, deletedContainerName);\n+    }\n+\n+    /**\n+     * Restores a previously deleted container.  The restored container\n+     * will be renamed to the <code>destinationContainerName</code>.\n+     * If the container associated with provided <code>destinationContainerName</code>\n+     * already exists, this call will result in a 409 (conflict).\n+     * This API is only functional if Container Soft Delete is enabled\n+     * for the storage account associated with the container.\n+     * For more information, see the\n+     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String-String}\n+     *\n+     * @param deletedContainerName The name of the previously deleted container.\n+     * @param deletedContainerVersion The version of the previously deleted container.\n+     * @param destinationContainerName The name of the destination container.\n+     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n+     * to interact with the restored container.\n+     */\n+    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(", "originalCommit": "3d046ddacd3a57930742ab41c02064321830883f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3NDc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10900#discussion_r424574791", "bodyText": "Done", "author": "kasobol-msft", "createdAt": "2020-05-13T16:32:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4ODU5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3843d028eb0c4e35cee147705c791d7d7d610d82", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\nindex c94d8e97043..505fc139173 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/BlobServiceAsyncClient.java\n\n@@ -761,68 +762,14 @@ public final class BlobServiceAsyncClient {\n      */\n     public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n         String deletedContainerName, String deletedContainerVersion) {\n-        return this.undeleteBlobContainer(deletedContainerName,\n-            deletedContainerVersion, deletedContainerName);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the <code>destinationContainerName</code>.\n-     * If the container associated with provided <code>destinationContainerName</code>\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     * For more information, see the\n-     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainer#String-String-String}\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @param destinationContainerName The name of the destination container.\n-     * @return A {@link Mono} containing a {@link BlobContainerAsyncClient} used\n-     * to interact with the restored container.\n-     */\n-    public Mono<BlobContainerAsyncClient> undeleteBlobContainer(\n-        String deletedContainerName, String deletedContainerVersion, String destinationContainerName) {\n         return this.undeleteBlobContainerWithResponse(deletedContainerName,\n-            deletedContainerVersion, destinationContainerName).flatMap(FluxUtil::toMono);\n-    }\n-\n-    /**\n-     * Restores a previously deleted container.\n-     * If the container associated with provided <code>deletedContainerName</code>\n-     * already exists, this call will result in a 409 (conflict).\n-     * This API is only functional if Container Soft Delete is enabled\n-     * for the storage account associated with the container.\n-     * For more information, see the\n-     * <a href=\"TBD\">Azure Docs</a>. TODO (kasobol-msft) add link to REST API docs\n-     *\n-     * <p><strong>Code Samples</strong></p>\n-     *\n-     * {@codesnippet com.azure.storage.blob.BlobServiceAsyncClient.undeleteBlobContainerWithResponse#String-String}\n-     *\n-     * @param deletedContainerName The name of the previously deleted container.\n-     * @param deletedContainerVersion The version of the previously deleted container.\n-     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} contains a {@link\n-     * BlobContainerAsyncClient} used to interact with the restored container.\n-     */\n-    public Mono<Response<BlobContainerAsyncClient>> undeleteBlobContainerWithResponse(\n-        String deletedContainerName, String deletedContainerVersion) {\n-        try {\n-            return withContext(context ->\n-                undeleteBlobContainerWithResponse(deletedContainerName, deletedContainerVersion, deletedContainerName,\n-                    context));\n-        } catch (RuntimeException ex) {\n-            return monoError(logger, ex);\n-        }\n+            deletedContainerVersion, null).flatMap(FluxUtil::toMono);\n     }\n \n     /**\n-     * Restores a previously deleted container.  The restored container\n-     * will be renamed to the <code>destinationContainerName</code>.\n+     * Restores a previously deleted container. The restored container\n+     * will be renamed to the <code>destinationContainerName</code> if provided in <code>options</code>.\n+     * Otherwise <code>deletedContainerName</code> is used as destination container name.\n      * If the container associated with provided <code>destinationContainerName</code>\n      * already exists, this call will result in a 409 (conflict).\n      * This API is only functional if Container Soft Delete is enabled\n"}}, {"oid": "57e8f662c7bf46daaee0f419a7467c49586c205b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/57e8f662c7bf46daaee0f419a7467c49586c205b", "message": "add test where all detail options are selected.", "committedDate": "2020-05-13T00:24:32Z", "type": "commit"}, {"oid": "3843d028eb0c4e35cee147705c791d7d7d610d82", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3843d028eb0c4e35cee147705c791d7d7d610d82", "message": "pr feedback.", "committedDate": "2020-05-13T16:16:44Z", "type": "commit"}]}