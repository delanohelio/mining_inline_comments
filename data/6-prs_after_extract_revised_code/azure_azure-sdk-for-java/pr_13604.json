{"pr_number": 13604, "pr_title": "Cross language consistency updates ", "pr_createdAt": "2020-07-29T21:16:10Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13604", "timeline": [{"oid": "8b2e97842561b4e8a2b4781158acaf021ac835da", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8b2e97842561b4e8a2b4781158acaf021ac835da", "message": "update checks", "committedDate": "2020-07-30T22:56:39Z", "type": "forcePushed"}, {"oid": "3073daf8a24e65fb26fc60671d16a0071aac670e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3073daf8a24e65fb26fc60671d16a0071aac670e", "message": "rename consistency update", "committedDate": "2020-07-30T23:10:48Z", "type": "commit"}, {"oid": "595df4b58c5ce23aee304d54270eef5b192f7e52", "url": "https://github.com/Azure/azure-sdk-for-java/commit/595df4b58c5ce23aee304d54270eef5b192f7e52", "message": "update changelog", "committedDate": "2020-07-30T23:11:15Z", "type": "commit"}, {"oid": "2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "message": "update checks", "committedDate": "2020-07-30T23:12:54Z", "type": "commit"}, {"oid": "2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "message": "update checks", "committedDate": "2020-07-30T23:12:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NDA0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463344040", "bodyText": "make sure to update codesnippet for all changes. Some has done but most not.", "author": "mssfang", "createdAt": "2020-07-31T00:33:26Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java", "diffHunk": "@@ -188,9 +188,9 @@\n      * <p><strong>Code sample</strong></p>\n      * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomForms#Flux-long-string-recognizeOptions}", "originalCommit": "2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "459c4df8be9309b7461944af1f59e73c42f41336", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\nindex 68a564ae8f8..aaf2eab3621 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/FormRecognizerAsyncClient.java\n\n@@ -186,7 +186,7 @@ public final class FormRecognizerAsyncClient {\n      * {@code Flux} must produce the same data each time it is subscribed to.\n      *\n      * <p><strong>Code sample</strong></p>\n-     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomForms#Flux-long-string-recognizeOptions}\n+     * {@codesnippet com.azure.ai.formrecognizer.FormRecognizerAsyncClient.beginRecognizeCustomForms#string-Flux-long-recognizeOptions}\n      *\n      * @param modelId The UUID string format custom trained model Id to be used.\n      * @param form The data of the form to recognize form information from.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NDQ0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463344448", "bodyText": "it is this ok to delete? just wondering.", "author": "mssfang", "createdAt": "2020-07-31T00:35:01Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/implementation/models/LengthUnit.java", "diffHunk": "@@ -1,47 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.", "originalCommit": "2bdb7c2ec91ef2d9ecee2af2d4259b8bff40083c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1MDQ0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463350447", "bodyText": "Yeah, since the name and properties are same, moved it over to models from implementation.models", "author": "samvaity", "createdAt": "2020-07-31T00:57:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM0NDQ0OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "459c4df8be9309b7461944af1f59e73c42f41336", "url": "https://github.com/Azure/azure-sdk-for-java/commit/459c4df8be9309b7461944af1f59e73c42f41336", "message": "update readme", "committedDate": "2020-07-31T01:03:39Z", "type": "commit"}, {"oid": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ab218ff7f116b97f3dd049694108eddc2c2ec173", "message": "fix checkstyle errors", "committedDate": "2020-07-31T01:55:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MDY1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463750654", "bodyText": "nit: 'The' instead of 'the'", "author": "mssfang", "createdAt": "2020-07-31T17:55:49Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTable.java", "diffHunk": "@@ -32,18 +32,18 @@\n     /*\n      * The 1 based page number.\n      */\n-    private final Integer pageNumber;\n+    private final int pageNumber;\n \n     /**\n      * Constructs a FormTable object.\n      *\n      * @param rowCount Number of rows.\n      * @param columnCount Number of columns.\n-     * @param cells ist of cells contained in the table.\n+     * @param cells the list of cells contained in the table.", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTable.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTable.java\nindex 4039a2e41ec..f899e42c98d 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTable.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTable.java\n\n@@ -37,8 +37,8 @@ public final class FormTable {\n     /**\n      * Constructs a FormTable object.\n      *\n-     * @param rowCount Number of rows.\n-     * @param columnCount Number of columns.\n+     * @param rowCount the number of rows in the table.\n+     * @param columnCount the number of columns in the table.\n      * @param cells the list of cells contained in the table.\n      * @param pageNumber the 1-based page number in the input document.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MDg4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463750883", "bodyText": "extra space", "author": "mssfang", "createdAt": "2020-07-31T17:56:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTableCell.java", "diffHunk": "@@ -57,8 +57,7 @@\n \n     /**\n      * Constructs a FormTableCell object.\n-     *\n-     * @param rowIndex Row index of the cell.\n+     *  @param rowIndex Row index of the cell.", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTableCell.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTableCell.java\nindex 3b4117ab31d..aec0a0d0242 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTableCell.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormTableCell.java\n\n@@ -57,16 +57,17 @@ public final class FormTableCell extends FormElement {\n \n     /**\n      * Constructs a FormTableCell object.\n-     *  @param rowIndex Row index of the cell.\n-     * @param columnIndex Column index of the cell.\n-     * @param rowSpan Number of rows spanned by this cell.\n-     * @param columnSpan Number of columns spanned by this cell.\n-     * @param text The recognized text value.\n-     * @param boundingBox The bounding box properties of the cell.\n-     * @param confidence Confidence value of the recognized text.\n-     * @param isHeader Is the current cell a header cell?\n-     * @param isFooter Is the current cell a footer cell?\n-     * @param pageNumber The 1 based page number of the cell\n+     *\n+     * @param rowIndex the row index of the cell.\n+     * @param columnIndex the column index of the cell.\n+     * @param rowSpan the number of rows spanned by this cell.\n+     * @param columnSpan the number of columns spanned by this cell.\n+     * @param text the recognized text value.\n+     * @param boundingBox the bounding box properties of the cell.\n+     * @param confidence the confidence value of the recognized text.\n+     * @param isHeader the boolean indicating if the current cell a header cell?\n+     * @param isFooter the boolean indicating if the current cell a footer cell?\n+     * @param pageNumber the 1 based page number of the cell\n      * @param fieldElements a list of references to the elements constituting this table cell.\n      */\n     public FormTableCell(final int rowIndex, final int columnIndex, final int rowSpan,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MTA3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463751077", "bodyText": "extra space", "author": "mssfang", "createdAt": "2020-07-31T17:56:39Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormWord.java", "diffHunk": "@@ -18,13 +18,12 @@\n \n     /**\n      * Creates raw OCR item.\n-     *\n-     * @param text The text content of ExtractedField.\n+     *  @param text The text content of ExtractedField.", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormWord.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormWord.java\nindex 43fc11e6e52..750d16f66f1 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormWord.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/models/FormWord.java\n\n@@ -17,11 +17,12 @@ public final class FormWord extends FormElement {\n     private final float confidence;\n \n     /**\n-     * Creates raw OCR item.\n-     *  @param text The text content of ExtractedField.\n-     * @param boundingBox The BoundingBox of ExtractedField.\n-     * @param pageNumber The 1 based page number.\n-     * @param confidence the confidence.\n+     * Constructs a FormWord object.\n+     *\n+     * @param text the text content of recognized field.\n+     * @param boundingBox the BoundingBox of recognized field.\n+     * @param pageNumber the 1 based page number.\n+     * @param confidence the confidence property of the Form Word.\n      */\n     public FormWord(String text, BoundingBox boundingBox, int pageNumber, final float confidence) {\n         super(text, boundingBox, pageNumber);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MTkxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463751917", "bodyText": "do we still need fromString() since we are change it regular enum?", "author": "mssfang", "createdAt": "2020-07-31T17:58:19Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/CustomFormModelStatus.java", "diffHunk": "@@ -1,38 +1,60 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n \n package com.azure.ai.formrecognizer.training.models;\n \n-import com.azure.core.util.ExpandableStringEnum;\n-\n /**\n- * Defines enum values for CustomFormModelStatus.\n+ * Defines values for CustomFormModelStatus.\n  */\n-public final class CustomFormModelStatus extends ExpandableStringEnum<CustomFormModelStatus> {\n+public enum CustomFormModelStatus {\n+    /**\n+     * Enum value creating.\n+     */\n+    CREATING(\"creating\"),\n \n     /**\n-     * Static value Creating for CustomFormModelStatus.\n+     * Enum value ready.\n      */\n-    public static final CustomFormModelStatus CREATING = fromString(\"creating\");\n+    READY(\"ready\"),\n \n     /**\n-     * Static value ready for CustomFormModelStatus.\n+     * Enum value invalid.\n      */\n-    public static final CustomFormModelStatus READY = fromString(\"ready\");\n+    INVALID(\"invalid\");\n \n     /**\n-     * Static value invalid for CustomFormModelStatus.\n+     * The actual serialized value for a CustomFormModelStatus instance.\n      */\n-    public static final CustomFormModelStatus INVALID = fromString(\"invalid\");\n+    private final String value;\n+\n+    CustomFormModelStatus(String value) {\n+        this.value = value;\n+    }\n \n     /**\n-     * Parses a serialized value to a {@code CustomFormModelStatus} instance.\n+     * Parses a serialized value to a CustomFormModelStatus instance.\n      *\n      * @param value the serialized value to parse.\n      *\n      * @return the parsed CustomFormModelStatus object, or null if unable to parse.\n      */\n     public static CustomFormModelStatus fromString(String value) {\n-        return fromString(value, CustomFormModelStatus.class);\n+        CustomFormModelStatus[] items = CustomFormModelStatus.values();", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MzUwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463753506", "bodyText": "nit: extra line for \"new RecognizeOptions()\" is not necessary.", "author": "mssfang", "createdAt": "2020-07-31T18:01:30Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java", "diffHunk": "@@ -55,17 +55,17 @@ public static void main(String[] args) throws IOException {\n         byte[] fileContent = Files.readAllBytes(analyzeFile.toPath());\n \n         PollerFlux<OperationResult, List<RecognizedForm>> labeledCustomFormPoller =\n-            client.beginRecognizeCustomForms(toFluxByteBuffer(new ByteArrayInputStream(fileContent)),\n-                analyzeFile.length(), \"{labeled_model_Id}\",\n-                new RecognizeOptions()\n+            client.beginRecognizeCustomForms(\"{labeled_model_Id}\", toFluxByteBuffer(new ByteArrayInputStream(fileContent)),\n+                analyzeFile.length(),\n+                    new RecognizeOptions()", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java\nindex 9f8d41ed418..532f1fffa03 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/AdvancedDiffLabeledUnlabeledDataAsync.java\n\n@@ -55,7 +55,8 @@ public class AdvancedDiffLabeledUnlabeledDataAsync {\n         byte[] fileContent = Files.readAllBytes(analyzeFile.toPath());\n \n         PollerFlux<OperationResult, List<RecognizedForm>> labeledCustomFormPoller =\n-            client.beginRecognizeCustomForms(\"{labeled_model_Id}\", toFluxByteBuffer(new ByteArrayInputStream(fileContent)),\n+            client.beginRecognizeCustomForms(\"{labeled_model_Id}\",\n+                toFluxByteBuffer(new ByteArrayInputStream(fileContent)),\n                 analyzeFile.length(),\n                     new RecognizeOptions()\n                     .setContentType(FormContentType.APPLICATION_PDF)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NDM2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463754364", "bodyText": "nit: extra line is not necessary.", "author": "mssfang", "createdAt": "2020-07-31T18:03:30Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/GetBoundingBoxesAsync.java", "diffHunk": "@@ -37,8 +37,8 @@ public static void main(String[] args) {\n         String modelId = \"{model_Id}\";\n         String formUrl = \"{form_url}\";\n         PollerFlux<OperationResult, List<RecognizedForm>> recognizeFormPoller =\n-            client.beginRecognizeCustomFormsFromUrl(formUrl, modelId,\n-                new RecognizeOptions()\n+            client.beginRecognizeCustomFormsFromUrl(modelId, formUrl,\n+                    new RecognizeOptions()", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NDczMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463754730", "bodyText": "nit: extra line is not necessary", "author": "mssfang", "createdAt": "2020-07-31T18:04:17Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeCustomFormsAsync.java", "diffHunk": "@@ -46,8 +46,8 @@ public static void main(String[] args) throws IOException {\n         String modelId = \"{modelId}\";\n         PollerFlux<OperationResult, List<RecognizedForm>> recognizeFormPoller;\n         try (InputStream targetStream = new ByteArrayInputStream(fileContent)) {\n-            recognizeFormPoller = client.beginRecognizeCustomForms(toFluxByteBuffer(targetStream), sourceFile.length(),\n-                modelId);\n+            recognizeFormPoller = client.beginRecognizeCustomForms(modelId, toFluxByteBuffer(targetStream), sourceFile.length()\n+            );", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeCustomFormsAsync.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeCustomFormsAsync.java\nindex 22b5fd9fd65..e7d26d52dc8 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeCustomFormsAsync.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/samples/java/com/azure/ai/formrecognizer/RecognizeCustomFormsAsync.java\n\n@@ -46,8 +46,8 @@ public class RecognizeCustomFormsAsync {\n         String modelId = \"{modelId}\";\n         PollerFlux<OperationResult, List<RecognizedForm>> recognizeFormPoller;\n         try (InputStream targetStream = new ByteArrayInputStream(fileContent)) {\n-            recognizeFormPoller = client.beginRecognizeCustomForms(modelId, toFluxByteBuffer(targetStream), sourceFile.length()\n-            );\n+            recognizeFormPoller = client.beginRecognizeCustomForms(modelId, toFluxByteBuffer(targetStream),\n+                sourceFile.length());\n         }\n \n         Mono<List<RecognizedForm>> recognizeFormResult = recognizeFormPoller\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg4OTAyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r463889021", "bodyText": "Might be worth noting that this flag is not supported for training with labels. The service will throw an exception if it set to True in that case", "author": "kristapratico", "createdAt": "2020-07-31T23:45:47Z", "path": "sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/TrainingFileFilter.java", "diffHunk": "@@ -48,21 +48,21 @@ public TrainingFileFilter setPrefix(String prefix) {\n      * Get the flag to indicate if sub folders within the set of prefix folders will also need to be included when\n      * searching for content to be preprocessed.\n      *\n-     * @return the includeSubFolders value.\n+     * @return the includeSubfolders value.\n      */\n-    public Boolean isIncludeSubFolders() {\n-        return this.includeSubFolders;\n+    public Boolean isSubfoldersIncluded() {\n+        return this.includeSubfolders;\n     }\n \n     /**\n-     * Set the includeSubFolders flag to indicate if sub folders are also to be included when\n+     * Set the includeSubfolders flag to indicate if sub folders are also to be included when", "originalCommit": "ab218ff7f116b97f3dd049694108eddc2c2ec173", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc1NTg0OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13604#discussion_r464755848", "bodyText": "@kinelski do you know if we have this info in .NET?", "author": "maririos", "createdAt": "2020-08-04T02:04:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg4OTAyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "88336f433236583b992b0713bba80d35456a9e22", "chunk": "diff --git a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/TrainingFileFilter.java b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/TrainingFileFilter.java\nindex 17fe5b8496a..bd39939a0d4 100644\n--- a/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/TrainingFileFilter.java\n+++ b/sdk/formrecognizer/azure-ai-formrecognizer/src/main/java/com/azure/ai/formrecognizer/training/models/TrainingFileFilter.java\n\n@@ -47,6 +48,7 @@ public final class TrainingFileFilter {\n     /**\n      * Get the flag to indicate if sub folders within the set of prefix folders will also need to be included when\n      * searching for content to be preprocessed.\n+     * Not supported if training with labels.\n      *\n      * @return the includeSubfolders value.\n      */\n"}}, {"oid": "88336f433236583b992b0713bba80d35456a9e22", "url": "https://github.com/Azure/azure-sdk-for-java/commit/88336f433236583b992b0713bba80d35456a9e22", "message": "doc updates", "committedDate": "2020-08-03T17:46:57Z", "type": "commit"}]}