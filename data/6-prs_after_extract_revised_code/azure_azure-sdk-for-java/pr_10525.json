{"pr_number": 10525, "pr_title": "Adds session operations to receiver", "pr_createdAt": "2020-04-27T15:39:53Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10525", "timeline": [{"oid": "6ff6c2d9d1d9e4d05ce4088cab7aad3acac1a913", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6ff6c2d9d1d9e4d05ce4088cab7aad3acac1a913", "message": "Splitting management node into multiple interfaces. Adding session operations.", "committedDate": "2020-04-27T15:32:53Z", "type": "commit"}, {"oid": "9a3a0aa4162df925c1d1bcfd31f0103f7a20f34d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a3a0aa4162df925c1d1bcfd31f0103f7a20f34d", "message": "Adding tests.", "committedDate": "2020-04-27T15:32:53Z", "type": "commit"}, {"oid": "9658e1ada5113aa0a5a78e5862bc83e8df9e994c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9658e1ada5113aa0a5a78e5862bc83e8df9e994c", "message": "Remove extra interfaces.", "committedDate": "2020-04-27T15:35:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkyMjg5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10525#discussion_r415922897", "bodyText": "Alphabetized methods in addition to adding session ones.", "author": "conniey", "createdAt": "2020-04-27T15:41:03Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusManagementNode.java", "diffHunk": "@@ -6,7 +6,6 @@\n import com.azure.messaging.servicebus.ServiceBusMessage;", "originalCommit": "9658e1ada5113aa0a5a78e5862bc83e8df9e994c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "dc9f536b1f6fd2f53f5da6321ccdcf221d045b7f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc9f536b1f6fd2f53f5da6321ccdcf221d045b7f", "message": "Clean up api. ManagementChannel already has sessionId.", "committedDate": "2020-04-27T15:52:55Z", "type": "commit"}, {"oid": "acda3bfb2bdb76ac7285e7847b6693937d406d0d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/acda3bfb2bdb76ac7285e7847b6693937d406d0d", "message": "Replace with .count()", "committedDate": "2020-04-27T16:40:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyMzA5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10525#discussion_r416023095", "bodyText": "The check map.containsKey(ManagementConstants.SESSION_STATE) : Does not have value if  we do it after we already try to get sessionState.  Either this check should be before or not required because sessionState == null will be sufficient.", "author": "hemanttanwar", "createdAt": "2020-04-27T17:49:56Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -96,6 +97,44 @@\n             })).then();\n     }\n \n+    @Override\n+    public Mono<byte[]> getSessionState() {\n+        if (!isSessionEnabled) {\n+            return monoError(logger, new IllegalStateException(\"Cannot get session state for non-session management node\"));\n+        }\n+\n+        return isAuthorized(ManagementConstants.OPERATION_GET_SESSION_STATE).then(createChannel.flatMap(channel -> {\n+            final Message message = createManagementMessage(ManagementConstants.OPERATION_GET_SESSION_STATE, null);\n+\n+            final Map<String, Object> body = new HashMap<>();\n+            body.put(ManagementConstants.SESSION_ID, sessionId);\n+\n+            message.setBody(new AmqpValue(body));\n+\n+            return sendWithVerify(channel, message);\n+        })).flatMap(response -> {\n+            final Object value = ((AmqpValue) response.getBody()).getValue();\n+\n+            if (!(value instanceof Map)) {\n+                return monoError(logger, Exceptions.propagate(new AmqpException(false, String.format(\n+                    \"Body not expected when renewing session. Id: %s. Value: %s\", sessionId, value),\n+                    getErrorContext())));\n+            }\n+\n+            @SuppressWarnings(\"unchecked\")\n+            final Map<String, Object> map = (Map<String, Object>) value;\n+            final Object sessionState = map.get(ManagementConstants.SESSION_STATE);\n+\n+            if (!map.containsKey(ManagementConstants.SESSION_STATE) || sessionState == null) {\n+                logger.info(\"sessionId[{}]. Does not have a session state.\", sessionId);", "originalCommit": "acda3bfb2bdb76ac7285e7847b6693937d406d0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e020e1a8575c9784ba2f1344e225e74c3a9c140", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\nindex 5f26ab9a130..46bf1293fa8 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n\n@@ -125,7 +125,7 @@ public class ManagementChannel implements ServiceBusManagementNode {\n             final Map<String, Object> map = (Map<String, Object>) value;\n             final Object sessionState = map.get(ManagementConstants.SESSION_STATE);\n \n-            if (!map.containsKey(ManagementConstants.SESSION_STATE) || sessionState == null) {\n+            if (sessionState == null) {\n                 logger.info(\"sessionId[{}]. Does not have a session state.\", sessionId);\n                 return Mono.empty();\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNjUwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10525#discussion_r416026501", "bodyText": "sessionId : If this session id  is not maintained by this receiver. Should we validate it against list of session id this received is actively managing ? So if this session id  is managed by some other receiver, we thro error for example \"Session id is not managed by this receiver\".", "author": "hemanttanwar", "createdAt": "2020-04-27T17:54:46Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -190,6 +191,24 @@ public String getEntityPath() {\n         return updateDisposition(lockToken, DispositionStatus.COMPLETED, null, null, null);\n     }\n \n+    /**\n+     * Gets the state of a session given its identifier.\n+     *\n+     * @param sessionId Identifier of session to get.\n+     *\n+     * @return The session state or an empty Mono if there is no state set for the session.\n+     * @throws IllegalStateException if the receiver is a non-session receiver.\n+     */\n+    public Mono<byte[]> getSessionState(String sessionId) {", "originalCommit": "acda3bfb2bdb76ac7285e7847b6693937d406d0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzNTYxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10525#discussion_r416035611", "bodyText": "There is only one sessionId in the current implementation. This feature does not exist.", "author": "conniey", "createdAt": "2020-04-27T18:07:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAyNjUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e020e1a8575c9784ba2f1344e225e74c3a9c140", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex c0b16265004..5ffd824a5c4 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -200,7 +200,10 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * @throws IllegalStateException if the receiver is a non-session receiver.\n      */\n     public Mono<byte[]> getSessionState(String sessionId) {\n-        if (!isSessionReceiver) {\n+        if (isDisposed.get()) {\n+            return monoError(logger, new IllegalStateException(\n+                String.format(INVALID_OPERATION_DISPOSED_RECEIVER, \"getSessionState\")));\n+        } else if (!isSessionReceiver) {\n             return monoError(logger, new IllegalStateException(\"Cannot get session state on a non-session receiver.\"));\n         } else {\n             return connectionProcessor\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzMjI2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10525#discussion_r416032268", "bodyText": "Are we going to add these API in ServiceBusReceiverClient .\nAlso will we add integration test for this ?", "author": "hemanttanwar", "createdAt": "2020-04-27T18:02:46Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -494,6 +513,43 @@ public String getEntityPath() {\n             });\n     }\n \n+    /**\n+     * Sets the state of a session given its identifier.\n+     *\n+     * @param sessionId Identifier of session to get.\n+     *\n+     * @return The next expiration time for the session lock.\n+     * @throws IllegalStateException if the receiver is a non-session receiver.\n+     */\n+    public Mono<Instant> renewSessionLock(String sessionId) {\n+        if (!isSessionReceiver) {", "originalCommit": "acda3bfb2bdb76ac7285e7847b6693937d406d0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1e020e1a8575c9784ba2f1344e225e74c3a9c140", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex c0b16265004..5ffd824a5c4 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -522,7 +528,10 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * @throws IllegalStateException if the receiver is a non-session receiver.\n      */\n     public Mono<Instant> renewSessionLock(String sessionId) {\n-        if (!isSessionReceiver) {\n+        if (isDisposed.get()) {\n+            return monoError(logger, new IllegalStateException(\n+                String.format(INVALID_OPERATION_DISPOSED_RECEIVER, \"renewSessionLock\")));\n+        } else if (!isSessionReceiver) {\n             return monoError(logger, new IllegalStateException(\"Cannot renew session lock on a non-session receiver.\"));\n         } else {\n             return connectionProcessor\n"}}, {"oid": "1e020e1a8575c9784ba2f1344e225e74c3a9c140", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e020e1a8575c9784ba2f1344e225e74c3a9c140", "message": "Add tests and simplify conditions.", "committedDate": "2020-04-27T18:49:41Z", "type": "commit"}, {"oid": "cc0d08ce3638b7981d1592a027a7aede11dd5bfe", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cc0d08ce3638b7981d1592a027a7aede11dd5bfe", "message": "Fixing tests.", "committedDate": "2020-04-27T19:03:52Z", "type": "commit"}, {"oid": "f0a954293c366ff88c457939643acfc4472fe9b6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f0a954293c366ff88c457939643acfc4472fe9b6", "message": "Adding test for session state.", "committedDate": "2020-04-27T19:16:04Z", "type": "commit"}, {"oid": "dfee869bba89cff4eabaf545bc8e5d2519d91dd4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dfee869bba89cff4eabaf545bc8e5d2519d91dd4", "message": "Clean up messages.", "committedDate": "2020-04-27T19:52:37Z", "type": "commit"}, {"oid": "75c74d3a9fcde98ab8b1a0b6f69760618569c1ef", "url": "https://github.com/Azure/azure-sdk-for-java/commit/75c74d3a9fcde98ab8b1a0b6f69760618569c1ef", "message": "Adding synchronous methods.", "committedDate": "2020-04-28T03:57:26Z", "type": "commit"}, {"oid": "facfceab28ca1af761562f708def93123740a5c9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/facfceab28ca1af761562f708def93123740a5c9", "message": "Adding tests.", "committedDate": "2020-04-28T04:05:15Z", "type": "commit"}, {"oid": "039014b56fb86a76cf5564b5517c8811dced5d0e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/039014b56fb86a76cf5564b5517c8811dced5d0e", "message": "Adding methods to get information for session receive link.", "committedDate": "2020-04-28T05:26:02Z", "type": "commit"}, {"oid": "415b0928621da7aae2153137703d8a4ee981878c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/415b0928621da7aae2153137703d8a4ee981878c", "message": "Adding session receiver tests", "committedDate": "2020-04-28T06:07:14Z", "type": "commit"}, {"oid": "7a353867a8d461645ac2b6388cc9a2f45d5b9630", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a353867a8d461645ac2b6388cc9a2f45d5b9630", "message": "Adding more tests.", "committedDate": "2020-04-28T06:50:22Z", "type": "commit"}, {"oid": "73000cfd7724367cc5efcfdd536b9535e0fe499e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/73000cfd7724367cc5efcfdd536b9535e0fe499e", "message": "Fix tests.", "committedDate": "2020-04-28T06:53:44Z", "type": "commit"}]}