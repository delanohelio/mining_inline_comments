{"pr_number": 11227, "pr_title": "[TA] Make fromString method package-private", "pr_createdAt": "2020-05-16T01:10:00Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11227", "timeline": [{"oid": "d82c62f4b591a3c94adfaabbabd54c09854b2265", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d82c62f4b591a3c94adfaabbabd54c09854b2265", "message": "make fromString package-private", "committedDate": "2020-05-16T01:07:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwMjI2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426102268", "bodyText": "Redundant null check that catched in the code quality process.\n[ERROR] Redundant nullcheck of documentSentimentLabel, which is known to be non-null in com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient.convertToAnalyzeSentimentResult(DocumentSentiment) [com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient] Redundant null check at AnalyzeSentimentAsyncClient.java:[line 147] RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\n[ERROR] Redundant nullcheck of sentenceSentimentLabel, which is known to be non-null in com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient.lambda$convertToAnalyzeSentimentResult$9(SentenceSentiment) [com.azure.ai.textanalytics.AnalyzeSentimentAsyncClient] Redundant null check at AnalyzeSentimentAsyncClient.java:[line 161] RCN_REDUNDANT_NULLCHECK_OF_NONNULL_", "author": "mssfang", "createdAt": "2020-05-16T01:10:27Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -144,43 +141,21 @@\n      * @return The {@link AnalyzeSentimentResult} to be returned by the SDK.\n      */\n     private AnalyzeSentimentResult convertToAnalyzeSentimentResult(DocumentSentiment documentSentiment) {\n-        // Document text sentiment\n-        final TextSentiment documentSentimentLabel = TextSentiment.fromString(\n-            documentSentiment.getSentiment().toString());\n-        if (documentSentimentLabel == null) {", "originalCommit": "d82c62f4b591a3c94adfaabbabd54c09854b2265", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMzc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426823791", "bodyText": "This started coming up from the current change?", "author": "samvaity", "createdAt": "2020-05-18T18:42:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwMjI2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NDQ0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426854444", "bodyText": "Yes. Null checking here is an redundant check. As the error message explained here.", "author": "mssfang", "createdAt": "2020-05-18T19:43:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwMjI2OA=="}], "type": "inlineReview", "revised_code": {"commit": "e521c53467a64b97443928f4c61915b7c92b239e", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java b/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\nindex b505d60099a..93cf01b4581 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\n\n@@ -141,10 +143,28 @@ class AnalyzeSentimentAsyncClient {\n      * @return The {@link AnalyzeSentimentResult} to be returned by the SDK.\n      */\n     private AnalyzeSentimentResult convertToAnalyzeSentimentResult(DocumentSentiment documentSentiment) {\n+        // Document text sentiment\n+        if (documentSentiment.getSentiment() == null) {\n+            // Not throw exception for an invalid Sentiment type because we should not skip processing the\n+            // other response. It is a service issue.\n+            logger.logExceptionAsWarning(\n+                new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n+                    documentSentiment.getSentiment())));\n+        }\n+\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getConfidenceScores();\n         // Sentence text sentiment\n         final List<SentenceSentiment> sentenceSentiments = documentSentiment.getSentences().stream()\n             .map(sentenceSentiment -> {\n+                final SentenceSentimentValue sentenceSentimentValue = sentenceSentiment.getSentiment();\n+                if (sentenceSentimentValue == null) {\n+                    // Not throw exception for an invalid Sentiment type because we should not skip processing the\n+                    // other response. It is a service issue.\n+                    logger.logExceptionAsWarning(\n+                        new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n+                            sentenceSentiment.getSentiment())));\n+                }\n+\n                 final SentimentConfidenceScorePerLabel confidenceScorePerSentence =\n                     sentenceSentiment.getConfidenceScores();\n                 return new SentenceSentiment(sentenceSentiment.getText(),\n"}}, {"oid": "c22acec4615badd248e370adc0241c627c0082c8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c22acec4615badd248e370adc0241c627c0082c8", "message": "remove public modifiler in fromString()", "committedDate": "2020-05-16T01:15:50Z", "type": "commit"}, {"oid": "9ef54069c9a599fc03bf09ad1a957a4327023e31", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9ef54069c9a599fc03bf09ad1a957a4327023e31", "message": "rename parameter name", "committedDate": "2020-05-16T02:05:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMTU0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426821546", "bodyText": "don't need this>", "author": "samvaity", "createdAt": "2020-05-18T18:38:15Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/WarningCode.java", "diffHunk": "@@ -30,7 +30,7 @@\n      * @return The corresponding {@link WarningCode}.\n      */\n     @JsonCreator", "originalCommit": "9ef54069c9a599fc03bf09ad1a957a4327023e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMjAxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426822017", "bodyText": "Is this a generated model https://github.com/Azure/azure-sdk-for-java/pull/11227/files#diff-2683c3cab1fd268997bc5df017c80afcL3?", "author": "samvaity", "createdAt": "2020-05-18T18:39:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2MTkzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r426861936", "bodyText": "WarningCode is not a generated model.\nif you take a look at what JsonCreator annotation's description:\nhttps://fasterxml.github.io/jackson-annotations/javadoc/2.7/com/fasterxml/jackson/annotation/JsonCreator.html\nSpeaking of what other SDK's behavior of including this annotation. They included it as well.", "author": "mssfang", "createdAt": "2020-05-18T19:59:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMjI1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r428322251", "bodyText": "It should be included on the deserialization layer i.e on the service side equivalent model. Don't need it here.", "author": "samvaity", "createdAt": "2020-05-20T21:38:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMTU0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA2NDYwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r427064605", "bodyText": "We don't want to check for nulls anymore?\nInitially, you were checking for null for sentenceSentimentLabel and documentSentimentLabel and throwing an exception.\nIs it fine for sentimentLabel and documentSentimentLabel to be null?", "author": "samvaity", "createdAt": "2020-05-19T06:42:50Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -144,43 +141,21 @@\n      * @return The {@link AnalyzeSentimentResult} to be returned by the SDK.\n      */\n     private AnalyzeSentimentResult convertToAnalyzeSentimentResult(DocumentSentiment documentSentiment) {\n-        // Document text sentiment\n-        final TextSentiment documentSentimentLabel = TextSentiment.fromString(\n-            documentSentiment.getSentiment().toString());\n-        if (documentSentimentLabel == null) {\n-            // Not throw exception for an invalid Sentiment type because we should not skip processing the\n-            // other response. It is a service issue.\n-            logger.logExceptionAsWarning(\n-                new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n-                    documentSentiment.getSentiment())));\n-        }\n-\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getConfidenceScores();\n-\n         // Sentence text sentiment\n         final List<SentenceSentiment> sentenceSentiments = documentSentiment.getSentences().stream()\n             .map(sentenceSentiment -> {\n-                final TextSentiment sentenceSentimentLabel = TextSentiment.fromString(\n-                    sentenceSentiment.getSentiment().toString());\n-                if (sentenceSentimentLabel == null) {\n-                    // Not throw exception for an invalid Sentiment type because we should not skip processing the\n-                    // other response. It is a service issue.\n-                    logger.logExceptionAsWarning(\n-                        new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n-                            sentenceSentiment.getSentiment())));\n-                }\n                 final SentimentConfidenceScorePerLabel confidenceScorePerSentence =\n                     sentenceSentiment.getConfidenceScores();\n-\n                 return new SentenceSentiment(sentenceSentiment.getText(),\n-                    sentenceSentimentLabel,\n+                    sentenceSentiment.getSentiment().toString(),", "originalCommit": "9ef54069c9a599fc03bf09ad1a957a4327023e31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY3NDQ4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11227#discussion_r427674488", "bodyText": "Yes. Same reason as https://github.com/Azure/azure-sdk-for-java/pull/11227/files/9ef54069c9a599fc03bf09ad1a957a4327023e31#r426102268", "author": "mssfang", "createdAt": "2020-05-20T00:26:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA2NDYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e521c53467a64b97443928f4c61915b7c92b239e", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java b/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\nindex b505d60099a..93cf01b4581 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java\n\n@@ -141,10 +143,28 @@ class AnalyzeSentimentAsyncClient {\n      * @return The {@link AnalyzeSentimentResult} to be returned by the SDK.\n      */\n     private AnalyzeSentimentResult convertToAnalyzeSentimentResult(DocumentSentiment documentSentiment) {\n+        // Document text sentiment\n+        if (documentSentiment.getSentiment() == null) {\n+            // Not throw exception for an invalid Sentiment type because we should not skip processing the\n+            // other response. It is a service issue.\n+            logger.logExceptionAsWarning(\n+                new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n+                    documentSentiment.getSentiment())));\n+        }\n+\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getConfidenceScores();\n         // Sentence text sentiment\n         final List<SentenceSentiment> sentenceSentiments = documentSentiment.getSentences().stream()\n             .map(sentenceSentiment -> {\n+                final SentenceSentimentValue sentenceSentimentValue = sentenceSentiment.getSentiment();\n+                if (sentenceSentimentValue == null) {\n+                    // Not throw exception for an invalid Sentiment type because we should not skip processing the\n+                    // other response. It is a service issue.\n+                    logger.logExceptionAsWarning(\n+                        new RuntimeException(String.format(Locale.ROOT, \"'%s' is not valid text sentiment.\",\n+                            sentenceSentiment.getSentiment())));\n+                }\n+\n                 final SentimentConfidenceScorePerLabel confidenceScorePerSentence =\n                     sentenceSentiment.getConfidenceScores();\n                 return new SentenceSentiment(sentenceSentiment.getText(),\n"}}, {"oid": "e521c53467a64b97443928f4c61915b7c92b239e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e521c53467a64b97443928f4c61915b7c92b239e", "message": "have null check back", "committedDate": "2020-05-20T02:51:57Z", "type": "commit"}, {"oid": "04087e09c49b2a1caeaa8525aa8762dc18961f25", "url": "https://github.com/Azure/azure-sdk-for-java/commit/04087e09c49b2a1caeaa8525aa8762dc18961f25", "message": "remove Transform conflict", "committedDate": "2020-05-20T03:41:56Z", "type": "commit"}, {"oid": "5848b1d8561ef819f1841171968f6edb6f1afc33", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5848b1d8561ef819f1841171968f6edb6f1afc33", "message": "hide fromString9)", "committedDate": "2020-05-20T03:48:31Z", "type": "commit"}, {"oid": "7fc12f696fa02c0cc73e4bf1c63b1e2aaaca15cd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7fc12f696fa02c0cc73e4bf1c63b1e2aaaca15cd", "message": "null check", "committedDate": "2020-05-20T06:10:09Z", "type": "commit"}]}