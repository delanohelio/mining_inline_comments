{"pr_number": 18060, "pr_title": "[Communication] - Common - Adding TokenRefreshOptions to CommunicationTokenCredential ctor", "pr_createdAt": "2020-12-10T01:42:22Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18060", "timeline": [{"oid": "10a6b6c39a6b9d50b81f8527502878493f2fef00", "url": "https://github.com/Azure/azure-sdk-for-java/commit/10a6b6c39a6b9d50b81f8527502878493f2fef00", "message": "Adding TokenRefreshOptions", "committedDate": "2020-12-10T01:41:04Z", "type": "commit"}, {"oid": "69145df0396789549be7d1bf903eeb3e4af58515", "url": "https://github.com/Azure/azure-sdk-for-java/commit/69145df0396789549be7d1bf903eeb3e4af58515", "message": "Resolve merge conflicts", "committedDate": "2020-12-14T19:07:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NjU3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543586572", "bodyText": "I think we should rename initialToken to simply token everywhere.\nFor the constructor with refresh options, token can be an optional argument in the options bag, we don't need it as a top-level arg in the constructor.", "author": "DominikMe", "createdAt": "2020-12-15T18:31:52Z", "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationTokenCredential.java", "diffHunk": "@@ -61,19 +62,14 @@ public CommunicationTokenCredential(TokenRefresher tokenRefresher) {\n      * CallbackOffsetMinutes defaulted to two minutes. To modify this default, call\n      * setCallbackOffsetMinutes after construction\n      * \n-     * @param tokenRefresher implementation to supply fresh token when reqested\n+     * @param tokenRefreshOptions implementation to supply fresh token when reqested\n      * @param initialToken serialized JWT token\n-     * @param refreshProactively when set to true, turn on proactive fetching to call\n-     *                           tokenRefresher before token expiry by minutes set\n-     *                           with setCallbackOffsetMinutes or default value of\n-     *                           two minutes\n      */\n-    public CommunicationTokenCredential(TokenRefresher tokenRefresher, String initialToken,\n-            boolean refreshProactively) {\n-        this(tokenRefresher);\n+    public CommunicationTokenCredential(TokenRefreshOptions tokenRefreshOptions, String initialToken) {", "originalCommit": "69145df0396789549be7d1bf903eeb3e4af58515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2NDgyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543664821", "bodyText": "Sure, thanks Dom, Java does not have optional arguments so I've overloaded the constructor with the token param", "author": "minnieliu", "createdAt": "2020-12-15T20:30:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NjU3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "7b8b0c4c0bd88241b28b1214c775ef9d5f6a9368", "chunk": "diff --git a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationTokenCredential.java b/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationTokenCredential.java\nindex 5ba7fb71564..4e6091a1c8d 100644\n--- a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationTokenCredential.java\n+++ b/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/CommunicationTokenCredential.java\n\n@@ -37,45 +37,35 @@ public final class CommunicationTokenCredential implements AutoCloseable {\n     /**\n      * Create with serialized JWT token\n      * \n-     * @param initialToken serialized JWT token\n+     * @param token serialized JWT token\n      */\n-    public CommunicationTokenCredential(String initialToken) {\n-        Objects.requireNonNull(initialToken, \"'initialToken' cannot be null.\");\n-        setToken(initialToken);\n+    public CommunicationTokenCredential(String token) {\n+        Objects.requireNonNull(token, \"'token' cannot be null.\");\n+        setToken(token);\n     }\n \n     /**\n-     * Create with a tokenRefresher\n+     * Create with tokenRefreshOptions, which includes a token supplier and optional serialized JWT token.\n+     * If refresh proactively is true, callback function tokenRefresher will be called\n+     * ahead of the token expiry by the number of minutes specified by\n+     * CallbackOffsetMinutes defaulted to ten minutes. To modify this default, call\n+     * setCallbackOffsetMinutes after construction\n      * \n      * @param tokenRefreshOptions implementation to supply fresh token when reqested\n      */\n-    public CommunicationTokenCredential(TokenRefreshOptions tokenRefreshOptions) {\n+    public CommunicationTokenCredential(CommunicationTokenRefreshOptions tokenRefreshOptions) {\n         TokenRefresher tokenRefresher = tokenRefreshOptions.getTokenRefresher();\n         Objects.requireNonNull(tokenRefresher, \"'tokenRefresher' cannot be null.\");\n         refresher = tokenRefresher;\n-    }\n-\n-    /**\n-     * Create with serialized JWT token and a token supplier to auto-refresh the\n-     * token before it expires. Callback function tokenRefresher will be called\n-     * ahead of the token expiry by the number of minutes specified by\n-     * CallbackOffsetMinutes defaulted to two minutes. To modify this default, call\n-     * setCallbackOffsetMinutes after construction\n-     * \n-     * @param tokenRefreshOptions implementation to supply fresh token when reqested\n-     * @param initialToken serialized JWT token\n-     */\n-    public CommunicationTokenCredential(TokenRefreshOptions tokenRefreshOptions, String initialToken) {\n-        this(tokenRefreshOptions);\n-        Objects.requireNonNull(initialToken, \"'initialToken' cannot be null.\");\n-        setToken(initialToken);\n-        if (tokenRefreshOptions.getRefreshProactively()) {\n-            OffsetDateTime nextFetchTime = accessToken.getExpiresAt().minusMinutes(DEFAULT_EXPIRING_OFFSET_MINUTES);\n-            fetchingTask = new FetchingTask(this, nextFetchTime);\n+        if (tokenRefreshOptions.getToken() != null) {\n+            setToken(tokenRefreshOptions.getToken());\n+            if (tokenRefreshOptions.getRefreshProactively()) {\n+                OffsetDateTime nextFetchTime = accessToken.getExpiresAt().minusMinutes(DEFAULT_EXPIRING_OFFSET_MINUTES);\n+                fetchingTask = new FetchingTask(this, nextFetchTime);\n+            }\n         }\n     }\n \n-\n     /**\n      * Get Azure core access token from credential\n      * \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NzMwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543587305", "bodyText": "To avoid naming ambiguity I can hear Kryzsztof ask to rename this to CommunicationTokenRefreshOptions and I think we should. :-)", "author": "DominikMe", "createdAt": "2020-12-15T18:33:01Z", "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.common;\n+\n+/**\n+ * Options for refreshing CommunicationTokenCredential\n+ */\n+public class TokenRefreshOptions {", "originalCommit": "69145df0396789549be7d1bf903eeb3e4af58515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2NTA0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543665044", "bodyText": "Done ;)", "author": "minnieliu", "createdAt": "2020-12-15T20:30:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NzMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7b8b0c4c0bd88241b28b1214c775ef9d5f6a9368", "chunk": "diff --git a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java b/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java\ndeleted file mode 100644\nindex 33c46247f93..00000000000\n--- a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-package com.azure.communication.common;\n-\n-/**\n- * Options for refreshing CommunicationTokenCredential\n- */\n-public class TokenRefreshOptions {\n-    private final TokenRefresher tokenRefresher;\n-    private final boolean refreshProactively;\n-\n-    /**\n-     * Creates a TokenRefreshOptions object\n-     * \n-     * @param tokenRefresher the token refresher to provide capacity to fetch fresh token\n-     * @param refreshProactively when set to true, turn on proactive fetching to call\n-     *                           tokenRefresher before token expiry by minutes set\n-     *                           with setCallbackOffsetMinutes or default value of\n-     *                           two minutes\n-     */\n-    public TokenRefreshOptions(TokenRefresher tokenRefresher, boolean refreshProactively) {\n-        this.tokenRefresher = tokenRefresher;\n-        this.refreshProactively = refreshProactively;\n-    }\n-\n-    /**\n-     * @return the token refresher to provide capacity to fetch fresh token\n-     */\n-    public TokenRefresher getTokenRefresher() {\n-        return tokenRefresher;\n-    }\n-\n-    /**\n-     * @return whether or not to refresh token proactively\n-     */\n-    public boolean getRefreshProactively() {\n-        return refreshProactively;\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4Nzc5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543587797", "bodyText": "As mentioned above, token can go here too. The comment can explain that token is an optional initial token.", "author": "DominikMe", "createdAt": "2020-12-15T18:33:52Z", "path": "sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.communication.common;\n+\n+/**\n+ * Options for refreshing CommunicationTokenCredential\n+ */\n+public class TokenRefreshOptions {\n+    private final TokenRefresher tokenRefresher;\n+    private final boolean refreshProactively;\n+\n+    /**\n+     * Creates a TokenRefreshOptions object\n+     * \n+     * @param tokenRefresher the token refresher to provide capacity to fetch fresh token\n+     * @param refreshProactively when set to true, turn on proactive fetching to call\n+     *                           tokenRefresher before token expiry by minutes set\n+     *                           with setCallbackOffsetMinutes or default value of\n+     *                           two minutes\n+     */\n+    public TokenRefreshOptions(TokenRefresher tokenRefresher, boolean refreshProactively) {", "originalCommit": "69145df0396789549be7d1bf903eeb3e4af58515", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2NTI5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18060#discussion_r543665293", "bodyText": "Done, thanks Dom", "author": "minnieliu", "createdAt": "2020-12-15T20:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4Nzc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7b8b0c4c0bd88241b28b1214c775ef9d5f6a9368", "chunk": "diff --git a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java b/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java\ndeleted file mode 100644\nindex 33c46247f93..00000000000\n--- a/sdk/communication/azure-communication-common/src/main/java/com/azure/communication/common/TokenRefreshOptions.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-package com.azure.communication.common;\n-\n-/**\n- * Options for refreshing CommunicationTokenCredential\n- */\n-public class TokenRefreshOptions {\n-    private final TokenRefresher tokenRefresher;\n-    private final boolean refreshProactively;\n-\n-    /**\n-     * Creates a TokenRefreshOptions object\n-     * \n-     * @param tokenRefresher the token refresher to provide capacity to fetch fresh token\n-     * @param refreshProactively when set to true, turn on proactive fetching to call\n-     *                           tokenRefresher before token expiry by minutes set\n-     *                           with setCallbackOffsetMinutes or default value of\n-     *                           two minutes\n-     */\n-    public TokenRefreshOptions(TokenRefresher tokenRefresher, boolean refreshProactively) {\n-        this.tokenRefresher = tokenRefresher;\n-        this.refreshProactively = refreshProactively;\n-    }\n-\n-    /**\n-     * @return the token refresher to provide capacity to fetch fresh token\n-     */\n-    public TokenRefresher getTokenRefresher() {\n-        return tokenRefresher;\n-    }\n-\n-    /**\n-     * @return whether or not to refresh token proactively\n-     */\n-    public boolean getRefreshProactively() {\n-        return refreshProactively;\n-    }\n-}\n"}}, {"oid": "7b8b0c4c0bd88241b28b1214c775ef9d5f6a9368", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b8b0c4c0bd88241b28b1214c775ef9d5f6a9368", "message": "Address PR comments", "committedDate": "2020-12-15T20:28:07Z", "type": "commit"}, {"oid": "de17498e9caed101781ed3a31a7d975116538a0c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/de17498e9caed101781ed3a31a7d975116538a0c", "message": "Update changelog", "committedDate": "2020-12-15T22:28:46Z", "type": "commit"}, {"oid": "e2abe9b8851ae94a74e3974258f06c5c1c7326c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e2abe9b8851ae94a74e3974258f06c5c1c7326c0", "message": "Update changelog", "committedDate": "2020-12-15T22:36:57Z", "type": "commit"}]}