{"pr_number": 10421, "pr_title": "fix: mgmt network spotbugs", "pr_createdAt": "2020-04-22T04:44:28Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10421", "timeline": [{"oid": "63eda5f904c329a80fe25023cebf236d83fd0723", "url": "https://github.com/Azure/azure-sdk-for-java/commit/63eda5f904c329a80fe25023cebf236d83fd0723", "message": "fix: mgmt network spotbugs", "committedDate": "2020-04-22T04:43:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412665923", "bodyText": "Could be reviewed carefully.", "author": "ChenTanyi", "createdAt": "2020-04-22T04:45:08Z", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java", "diffHunk": "@@ -578,30 +578,30 @@ private static ApplicationGatewayFrontendImpl useSubnetFromIPConfigForFrontend(\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return true if already found, false if ok to create, null if conflict\n+     * @return positive if already found, 0 if ok to create, negative if conflict\n      */\n-    <T> Boolean needToCreate(T byName, T byPort, String name) {\n+    <T> int needToCreate(T byName, T byPort, String name) {", "originalCommit": "63eda5f904c329a80fe25023cebf236d83fd0723", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4ODczNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412688737", "bodyText": "Em, what does spotbugs say on Boolean?", "author": "weidongxu-microsoft", "createdAt": "2020-04-22T05:51:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MzE0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412693145", "bodyText": "If return null for Boolean, it will cause NPE for boolean as return type.\nA method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. This method can be invoked as though it returned a value of type boolean, and the compiler will insert automatic unboxing of the Boolean value. If a null value is returned, this will result in a NullPointerException.\nhttps://github.com/codacy/codacy-findbugs/blob/master/src/main/resources/docs/description/NP_BOOLEAN_RETURN_NULL.md", "author": "ChenTanyi", "createdAt": "2020-04-22T06:02:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NDMyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412694323", "bodyText": "Agree. But int does not make it clearer as well (at least for human). Who would know a integer only can take 3 values? If you do like clarity, do enum.", "author": "weidongxu-microsoft", "createdAt": "2020-04-22T06:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyNTE4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412725184", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-04-22T07:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NTkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "5e4c11f74002ba00ffce5c14a04993eeaf9443dc", "chunk": "diff --git a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java\nindex e2963d7feda..f0fb7e06539 100644\n--- a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java\n+++ b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ApplicationGatewayImpl.java\n\n@@ -578,33 +579,39 @@ class ApplicationGatewayImpl\n      * @param byName object found by name\n      * @param byPort object found by port\n      * @param name the desired name of the object\n-     * @return positive if already found, 0 if ok to create, negative if conflict\n+     * @return CreationState\n      */\n-    <T> int needToCreate(T byName, T byPort, String name) {\n+    <T> CreationState needToCreate(T byName, T byPort, String name) {\n         if (byName != null && byPort != null) {\n             // If objects with this name and/or port already exist...\n             if (byName == byPort) {\n                 // ...and it is the same object, then do nothing\n-                return 0;\n+                return CreationState.Found;\n             } else {\n                 // ...but if they are inconsistent, then fail fast\n-                return -1;\n+                return CreationState.InvalidState;\n             }\n         } else if (byPort != null) {\n             // If no object with the requested name, but the port number is found...\n             if (name == null) {\n                 // ...and no name is requested, then do nothing, because the object already exists\n-                return 0;\n+                return CreationState.Found;\n             } else {\n                 // ...but if a clashing name is requested, then fail fast\n-                return -1;\n+                return CreationState.InvalidState;\n             }\n         } else {\n             // Ok to create the object\n-            return 1;\n+            return CreationState.NeedToCreate;\n         }\n     }\n \n+    enum CreationState {\n+        Found,\n+        NeedToCreate,\n+        InvalidState,\n+    }\n+\n     String futureResourceId() {\n         return new StringBuilder()\n             .append(super.resourceIdBase())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412666079", "bodyText": "Could be reviewed carefully.", "author": "ChenTanyi", "createdAt": "2020-04-22T04:45:38Z", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java", "diffHunk": "@@ -10,21 +10,28 @@\n import com.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringInner;\n import com.azure.management.network.models.ExpressRouteCircuitPeeringsInner;\n+import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n+import com.azure.management.resources.fluentcore.model.Refreshable;\n import com.azure.management.resources.fluentcore.model.implementation.CreatableUpdatableImpl;\n import com.azure.management.resources.fluentcore.utils.Utils;\n import java.util.Arrays;\n import reactor.core.publisher.Mono;\n \n-class ExpressRouteCircuitPeeringImpl\n+interface ExpressRouteCircuitPeeringParent<ModelT, InnerT>\n+    extends GroupableResource<NetworkManager, InnerT>,\n+    Refreshable<ModelT> {}", "originalCommit": "63eda5f904c329a80fe25023cebf236d83fd0723", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNTA3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412715073", "bodyText": "Any detail about this new interface?", "author": "weidongxu-microsoft", "createdAt": "2020-04-22T06:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNzU1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412717559", "bodyText": "In order to deal with the peering inner in route filter. https://github.com/Azure/azure-sdk-for-java/pull/10421/files#diff-54b158e5bec26f0a0848f449f42c704cR55\nMaybe I think I could remove the interface and use in ExpressRouteCircuitPeering template.", "author": "ChenTanyi", "createdAt": "2020-04-22T06:53:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMjI1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412722253", "bodyText": "I have removed it and add template in ExpressRouteCircuitPeeringImpl", "author": "ChenTanyi", "createdAt": "2020-04-22T07:01:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjA3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "daa4016c067bb4cf61b062520c8f168570bc1023", "chunk": "diff --git a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java\nindex b66c6dfa5b7..f919e2473d3 100644\n--- a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java\n+++ b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/ExpressRouteCircuitPeeringImpl.java\n\n@@ -2,7 +2,6 @@\n // Licensed under the MIT License.\n package com.azure.management.network.implementation;\n \n-import com.azure.management.network.ExpressRouteCircuit;\n import com.azure.management.network.ExpressRouteCircuitPeering;\n import com.azure.management.network.ExpressRouteCircuitPeeringConfig;\n import com.azure.management.network.ExpressRoutePeeringState;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412666304", "bodyText": "Not sure if it better use if instead of assert", "author": "ChenTanyi", "createdAt": "2020-04-22T04:46:18Z", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -414,6 +414,7 @@ VirtualNetworkGatewayIPConfiguration defaultIPConfiguration() {\n             // ...and no need to create VNet\n             networkObservable = Mono.empty(); // ...and don't create another VNet\n         } else {\n+            assert creatableNetwork != null;", "originalCommit": "63eda5f904c329a80fe25023cebf236d83fd0723", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MTA3MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412691070", "bodyText": "Maybe just check not null, throw IllegalState if null?", "author": "weidongxu-microsoft", "createdAt": "2020-04-22T05:57:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NjA4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412696080", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-04-22T06:09:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2NjMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "5d21fcbcd32fa993e8c09abb68b1e3060b986987", "chunk": "diff --git a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java\nindex 0ee7adaa3ed..7dc501ac7a4 100644\n--- a/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java\n+++ b/sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java\n\n@@ -413,8 +416,7 @@ class VirtualNetworkGatewayImpl\n         if (defaultIPConfig.subnetName() != null) {\n             // ...and no need to create VNet\n             networkObservable = Mono.empty(); // ...and don't create another VNet\n-        } else {\n-            assert creatableNetwork != null;\n+        } else if (creatableNetwork != null) {\n             // But if default IP config does not have a subnet specified, then create a VNet\n             networkObservable =\n                 Utils\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NjI2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412676268", "bodyText": "Does this get passed by checkstyle?", "author": "xseeseesee", "createdAt": "2020-04-22T05:16:54Z", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/ExpressRouteCircuitPeering.java", "diffHunk": "@@ -121,16 +121,16 @@\n              *     same VLAN ID\n              * @return next stage of definition\n              */\n-            WithPeerAsn withVlanId(int vlanId);\n+            WithPeerASN withVlanId(int vlanId);\n         }\n \n         /** The stage of Express Route Circuit Peering definition allowing to specify AS number for peering. */\n-        interface WithPeerAsn {\n+        interface WithPeerASN {\n             /**\n-             * @param peerAsn AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n+             * @param peerASN AS number for peering. Both 2-byte and 4-byte AS numbers can be used\n              * @return next stage of definition\n              */\n-            WithCreate withPeerAsn(long peerAsn);\n+            WithCreate withPeerASN(long peerASN);", "originalCommit": "63eda5f904c329a80fe25023cebf236d83fd0723", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4NTQ5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412685490", "bodyText": "Yes, the checkstyle doesn't add ASN in blacklist.", "author": "ChenTanyi", "createdAt": "2020-04-22T05:42:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY3NjI2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MDQyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412690428", "bodyText": "Any effect on this deleted interface?", "author": "weidongxu-microsoft", "createdAt": "2020-04-22T05:55:38Z", "path": "sdk/network/mgmt/src/main/java/com/azure/management/network/implementation/NetworkPeeringImpl.java", "diffHunk": "@@ -24,8 +24,7 @@\n         NetworkPeering, Network, VirtualNetworkPeeringInner, NetworkPeeringImpl, NetworkManager>\n     implements NetworkPeering,\n         NetworkPeering.Definition,\n-        NetworkPeering.Update,\n-        IndependentChild.DefinitionStages.WithParentResource<NetworkPeering, Network> {", "originalCommit": "63eda5f904c329a80fe25023cebf236d83fd0723", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MzQ0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10421#discussion_r412693442", "bodyText": "No, the deletion is just because the super class has such implements", "author": "ChenTanyi", "createdAt": "2020-04-22T06:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5MDQyOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "daa4016c067bb4cf61b062520c8f168570bc1023", "url": "https://github.com/Azure/azure-sdk-for-java/commit/daa4016c067bb4cf61b062520c8f168570bc1023", "message": "fix: compile error and checkstyle", "committedDate": "2020-04-22T06:04:20Z", "type": "commit"}, {"oid": "5d21fcbcd32fa993e8c09abb68b1e3060b986987", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5d21fcbcd32fa993e8c09abb68b1e3060b986987", "message": "fix: change assert to IllegalStateException", "committedDate": "2020-04-22T06:08:11Z", "type": "commit"}, {"oid": "5e4c11f74002ba00ffce5c14a04993eeaf9443dc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e4c11f74002ba00ffce5c14a04993eeaf9443dc", "message": "feat: change needToCreate return enum", "committedDate": "2020-04-22T06:18:13Z", "type": "commit"}, {"oid": "598f160ae98f2179b341f1afdc51042ad6457e24", "url": "https://github.com/Azure/azure-sdk-for-java/commit/598f160ae98f2179b341f1afdc51042ad6457e24", "message": "fix: unit test error", "committedDate": "2020-04-22T06:46:53Z", "type": "commit"}, {"oid": "212afc85a813bfbf214b1dd814c35dce88398ebc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/212afc85a813bfbf214b1dd814c35dce88398ebc", "message": "feat: remove ExpressRouteCircuitPeeringParent interface", "committedDate": "2020-04-22T07:01:09Z", "type": "commit"}, {"oid": "26a6c2d4e243b97020f0e3b5ece2c504d1a9b84e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/26a6c2d4e243b97020f0e3b5ece2c504d1a9b84e", "message": "fix: revapi error in azure-samples", "committedDate": "2020-04-22T07:19:13Z", "type": "commit"}]}