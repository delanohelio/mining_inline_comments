{"pr_number": 7737, "pr_title": "Performance framework wiring + rules enforcement", "pr_createdAt": "2020-01-27T18:06:00Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7737", "timeline": [{"oid": "94b8b5ab0aa912b00689a0281ea5a61423c206c1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/94b8b5ab0aa912b00689a0281ea5a61423c206c1", "message": "rewire framework", "committedDate": "2020-01-26T20:40:20Z", "type": "commit"}, {"oid": "f9b54036c26e87d3bf4f84629cdd775c225d4f74", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f9b54036c26e87d3bf4f84629cdd775c225d4f74", "message": "move storage tests + fix checkstyle issues", "committedDate": "2020-01-27T18:01:38Z", "type": "commit"}, {"oid": "0ea643eec4aa07afc7b40260c320c441e424172c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ea643eec4aa07afc7b40260c320c441e424172c", "message": "fix pom", "committedDate": "2020-01-27T18:05:04Z", "type": "commit"}, {"oid": "97a0c5d5c29d2de7c0ddbb93b74ab57cbc2e8c01", "url": "https://github.com/Azure/azure-sdk-for-java/commit/97a0c5d5c29d2de7c0ddbb93b74ab57cbc2e8c01", "message": "Update test locations", "committedDate": "2020-01-28T19:54:38Z", "type": "commit"}, {"oid": "a404e74c3f03e7e5ff00af33b34aa662b9157777", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a404e74c3f03e7e5ff00af33b34aa662b9157777", "message": "structure the tests", "committedDate": "2020-02-03T00:57:43Z", "type": "commit"}, {"oid": "01992045456dac65bbfa3d7b576b5ccfe511a986", "url": "https://github.com/Azure/azure-sdk-for-java/commit/01992045456dac65bbfa3d7b576b5ccfe511a986", "message": "update pom", "committedDate": "2020-02-03T02:24:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ3NTI3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r374475279", "bodyText": "Delete these lines.", "author": "srnagar", "createdAt": "2020-02-04T05:02:04Z", "path": "common/azure-core-test-perf/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,15 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+module com.azure.core.test.perf {\n+    requires reactor.core;\n+    requires jcommander;\n+    requires reactor.netty;\n+    requires io.netty.handler;\n+    requires com.fasterxml.jackson.annotation;\n+    requires com.fasterxml.jackson.core;\n+    requires com.fasterxml.jackson.databind;\n+    requires com.azure.core;\n+//    requires transitive com.fasterxml.jackson.core;\n+//    opens com.azure.core.test.perf to com.fasterxml.jackson.databind;", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/common/azure-core-test-perf/src/main/java/module-info.java b/common/perf-test-core/src/main/java/module-info.java\nsimilarity index 76%\nrename from common/azure-core-test-perf/src/main/java/module-info.java\nrename to common/perf-test-core/src/main/java/module-info.java\nindex a8a2051501b..30c13dd9985 100644\n--- a/common/azure-core-test-perf/src/main/java/module-info.java\n+++ b/common/perf-test-core/src/main/java/module-info.java\n\n@@ -10,6 +10,4 @@ module com.azure.core.test.perf {\n     requires com.fasterxml.jackson.core;\n     requires com.fasterxml.jackson.databind;\n     requires com.azure.core;\n-//    requires transitive com.fasterxml.jackson.core;\n-//    opens com.azure.core.test.perf to com.fasterxml.jackson.databind;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzMTMzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375431338", "bodyText": "A little bit more descriptive Javadoc will help users  of this framework. For example , explain what count mean here   and specify default if you have any.", "author": "hemanttanwar", "createdAt": "2020-02-05T18:30:20Z", "path": "common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java", "diffHunk": "@@ -0,0 +1,22 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.test.perf;\n+\n+import com.beust.jcommander.Parameter;\n+\n+/**\n+ * Represents the count option for performance tests.", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java b/common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java\nsimilarity index 79%\nrename from common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java\nrename to common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java\nindex 7729eb743af..240f079512b 100644\n--- a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java\n+++ b/common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java\n\n@@ -1,12 +1,13 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.core.test.perf;\n+package com.azure.perf.test.core;\n \n import com.beust.jcommander.Parameter;\n \n /**\n  * Represents the count option for performance tests.\n+ * For example, can be used to indicate the number of resources to create prior to running the test.\n  */\n public class CountOptions extends PerfStressOptions {\n     @Parameter(names = { \"-c\", \"--count\" }, description = \"Number of items\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzMjczMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375432730", "bodyText": "shouldn't cleanup be turned on by default ?  i.e. noCleanup = true", "author": "hemanttanwar", "createdAt": "2020-02-05T18:33:09Z", "path": "common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java", "diffHunk": "@@ -0,0 +1,112 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.test.perf;\n+\n+import com.beust.jcommander.Parameter;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+/**\n+ * Represents the command line configurable options for a performance test.\n+ */\n+@JsonPropertyOrder(alphabetic = true)\n+public class PerfStressOptions {\n+    @Parameter(names = { \"-d\", \"--duration\" }, description = \"duration of test in seconds\")\n+    private int duration = 10;\n+\n+    @Parameter(names = { \"--host\" }, description = \"Host to redirect HTTP requests\")\n+    private String host;\n+\n+    @Parameter(names = { \"--insecure\" }, description = \"Allow untrusted SSL server certs\")\n+    private boolean insecure = false;\n+\n+    @Parameter(names = { \"-i\", \"--iterations\" }, description = \"Number of iterations of main test loop\")\n+    private int iterations = 1;\n+\n+    @Parameter(names = { \"--no-cleanup\" }, description = \"Disables test cleanup\")\n+    private boolean noCleanup = false;\n+", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0MDUxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r376640512", "bodyText": "it is turned on by default.\nThis flag is to indicate if you don't want the cleanup.", "author": "g2vinay", "createdAt": "2020-02-07T22:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzMjczMA=="}], "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\nsimilarity index 98%\nrename from common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java\nrename to common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\nindex 137892ed59e..11ca7a3fcb8 100644\n--- a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java\n+++ b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.core.test.perf;\n+package com.azure.perf.test.core;\n \n import com.beust.jcommander.Parameter;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzMzU0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375433541", "bodyText": "Renaming warmup  to warmupDuration  would increase readability.", "author": "hemanttanwar", "createdAt": "2020-02-05T18:34:58Z", "path": "common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java", "diffHunk": "@@ -0,0 +1,112 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.test.perf;\n+\n+import com.beust.jcommander.Parameter;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+\n+/**\n+ * Represents the command line configurable options for a performance test.\n+ */\n+@JsonPropertyOrder(alphabetic = true)\n+public class PerfStressOptions {\n+    @Parameter(names = { \"-d\", \"--duration\" }, description = \"duration of test in seconds\")\n+    private int duration = 10;\n+\n+    @Parameter(names = { \"--host\" }, description = \"Host to redirect HTTP requests\")\n+    private String host;\n+\n+    @Parameter(names = { \"--insecure\" }, description = \"Allow untrusted SSL server certs\")\n+    private boolean insecure = false;\n+\n+    @Parameter(names = { \"-i\", \"--iterations\" }, description = \"Number of iterations of main test loop\")\n+    private int iterations = 1;\n+\n+    @Parameter(names = { \"--no-cleanup\" }, description = \"Disables test cleanup\")\n+    private boolean noCleanup = false;\n+\n+    @Parameter(names = { \"-p\", \"--parallel\" }, description = \"Number of operations to execute in parallel\")\n+    private int parallel = 1;\n+\n+    @Parameter(names = { \"--port\" }, description = \"port to redirect HTTP requests\")\n+    private int port = -1;\n+\n+    @Parameter(names = { \"-w\", \"--warmup\" }, description = \"duration of warmup in seconds\")\n+    private int warmup = 10;\n+", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\nsimilarity index 98%\nrename from common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java\nrename to common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\nindex 137892ed59e..11ca7a3fcb8 100644\n--- a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressOptions.java\n+++ b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressOptions.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.core.test.perf;\n+package com.azure.perf.test.core;\n \n import com.beust.jcommander.Parameter;\n import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzNTMwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375435303", "bodyText": "Again,  a bit more documentation on purpose of this class, how this could be used by someone.", "author": "hemanttanwar", "createdAt": "2020-02-05T18:38:35Z", "path": "common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.test.perf;\n+\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents the abstraction of a Performance test class.\n+ * @param <TOptions> the options configured for the test.", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressTest.java b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressTest.java\nsimilarity index 77%\nrename from common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressTest.java\nrename to common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressTest.java\nindex 31177e6b0fd..85b4036bdee 100644\n--- a/common/azure-core-test-perf/src/main/java/com/azure/core/test/perf/PerfStressTest.java\n+++ b/common/perf-test-core/src/main/java/com/azure/perf/test/core/PerfStressTest.java\n\n@@ -1,12 +1,21 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.core.test.perf;\n+package com.azure.perf.test.core;\n \n import reactor.core.publisher.Mono;\n \n /**\n  * Represents the abstraction of a Performance test class.\n+ *\n+ * <p>\n+ *     The performance test class needs to extend this class. The test class should override {@link PerfStressTest#run()}\n+ *     and {@link PerfStressTest#runAsync()} methods and the synchronous and asynchronous test logic respectively.\n+ *     To add any test setup and logic the test class should override {@link PerfStressTest#globalSetupAsync()}\n+ *     and {@link PerfStressTest#globalCleanupAsync()} methods .\n+ * </p>\n+ *\n+ *\n  * @param <TOptions> the options configured for the test.\n  */\n public abstract class PerfStressTest<TOptions extends PerfStressOptions> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzNjg2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375436863", "bodyText": "Naming convention : Since all other class uses name like GetBlobTest, UploadBlockBlobTest    , may be here we can rename it to DownloadBlobTest to remain consistent.", "author": "hemanttanwar", "createdAt": "2020-02-05T18:41:48Z", "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.perf;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+\n+import com.azure.core.test.perf.RandomFlux;\n+import com.azure.core.test.perf.SizeOptions;\n+import com.azure.storage.blob.*;\n+import com.azure.storage.blob.perf.core.ContainerTest;\n+\n+import reactor.core.publisher.Mono;\n+\n+public class DownloadTest extends ContainerTest<SizeOptions> {", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadTest.java b/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadBlobTest.java\nsimilarity index 87%\nrename from sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadTest.java\nrename to sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadBlobTest.java\nindex 1b30c03e15c..9efabbc3011 100644\n--- a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadTest.java\n+++ b/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/DownloadBlobTest.java\n\n@@ -6,18 +6,18 @@ package com.azure.storage.blob.perf;\n import java.io.IOException;\n import java.io.OutputStream;\n \n-import com.azure.core.test.perf.RandomFlux;\n-import com.azure.core.test.perf.SizeOptions;\n+import com.azure.perf.test.core.RandomFlux;\n+import com.azure.perf.test.core.SizeOptions;\n import com.azure.storage.blob.*;\n import com.azure.storage.blob.perf.core.ContainerTest;\n \n import reactor.core.publisher.Mono;\n \n-public class DownloadTest extends ContainerTest<SizeOptions> {\n+public class DownloadBlobTest extends ContainerTest<SizeOptions> {\n     private final BlobClient blobClient;\n     private final BlobAsyncClient blobAsyncClient;\n \n-    public DownloadTest(SizeOptions options) {\n+    public DownloadBlobTest(SizeOptions options) {\n         super(options);\n         String blobName = \"downloadTest\";\n         blobClient = blobContainerClient.getBlobClient(blobName);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQzNzQwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r375437406", "bodyText": "rename UploadBlobTest ?", "author": "hemanttanwar", "createdAt": "2020-02-05T18:42:48Z", "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadTest.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.perf;\n+\n+import com.azure.core.test.perf.RandomFlux;\n+import com.azure.core.test.perf.SizeOptions;\n+import com.azure.storage.blob.perf.core.RandomBlobTest;\n+import reactor.core.publisher.Mono;\n+\n+public class UploadTest extends RandomBlobTest<SizeOptions> {\n+", "originalCommit": "01992045456dac65bbfa3d7b576b5ccfe511a986", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "chunk": "diff --git a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadTest.java b/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlobTest.java\nsimilarity index 71%\nrename from sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadTest.java\nrename to sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlobTest.java\nindex be228d02223..f17f0955296 100644\n--- a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadTest.java\n+++ b/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/UploadBlobTest.java\n\n@@ -3,14 +3,14 @@\n \n package com.azure.storage.blob.perf;\n \n-import com.azure.core.test.perf.RandomFlux;\n-import com.azure.core.test.perf.SizeOptions;\n+import com.azure.perf.test.core.RandomFlux;\n+import com.azure.perf.test.core.SizeOptions;\n import com.azure.storage.blob.perf.core.RandomBlobTest;\n import reactor.core.publisher.Mono;\n \n-public class UploadTest extends RandomBlobTest<SizeOptions> {\n+public class UploadBlobTest extends RandomBlobTest<SizeOptions> {\n \n-    public UploadTest(SizeOptions options) {\n+    public UploadBlobTest(SizeOptions options) {\n         super(options);\n     }\n \n"}}, {"oid": "70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "url": "https://github.com/Azure/azure-sdk-for-java/commit/70875a73b8a7fc138b84d0264d5c8f2c43a7b047", "message": "address feedback", "committedDate": "2020-02-07T22:36:37Z", "type": "commit"}, {"oid": "108cd57a63c310a347c55205308a5e778a6aebaf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/108cd57a63c310a347c55205308a5e778a6aebaf", "message": "update external_dep", "committedDate": "2020-02-07T22:53:55Z", "type": "commit"}, {"oid": "48ecd2e62ed75c0263f3194291d7a38e8ad6475c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/48ecd2e62ed75c0263f3194291d7a38e8ad6475c", "message": "update versioning files + jcommander usage", "committedDate": "2020-02-07T23:49:51Z", "type": "commit"}, {"oid": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3c3849bde7fb84d4e2379eb069aea752c92c703c", "message": "update pom", "committedDate": "2020-02-09T07:52:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI4NzAzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379287036", "bodyText": "CircularFlux is a misleading name as this class is not a type of Flux. Instead this could be ByteBufferUtil with the static method named createRecurringByteBufferFlux(ByteBuffer byteBufferToRepeat, long numberOfBytes).", "author": "srnagar", "createdAt": "2020-02-14T07:41:13Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java", "diffHunk": "@@ -1,10 +1,25 @@\n-package com.azure.perfstress;\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n \n import java.nio.ByteBuffer;\n \n import reactor.core.publisher.Flux;\n \n+/**\n+ * Represents a Flux with repeated values.\n+ */\n public class CircularFlux {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\nsimilarity index 93%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\nindex 5bd3a281fbc..7751ee82bdc 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import java.nio.ByteBuffer;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI4ODQyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379288423", "bodyText": "If remaining is 0, then this can cause divisionByZero exception on line 26 and if byteBuffer.remaining() is greater than size, then the flux will be empty.", "author": "srnagar", "createdAt": "2020-02-14T07:45:54Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java", "diffHunk": "@@ -1,10 +1,25 @@\n-package com.azure.perfstress;\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n \n import java.nio.ByteBuffer;\n \n import reactor.core.publisher.Flux;\n \n+/**\n+ * Represents a Flux with repeated values.\n+ */\n public class CircularFlux {\n+\n+    /**\n+     * Creates a {@link Flux} of {@code size} with repeated values of {@code byteBuffer}.\n+     *\n+     * @param byteBuffer the byteBuffer to create Flux from.\n+     * @param size the size of the flux to create.\n+     * @return The created {@link Flux}\n+     */\n+    @SuppressWarnings(\"cast\")\n     public static Flux<ByteBuffer> create(ByteBuffer byteBuffer, long size) {\n         int remaining = byteBuffer.remaining();", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\nsimilarity index 93%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\nindex 5bd3a281fbc..7751ee82bdc 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularFlux.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CircularFlux.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import java.nio.ByteBuffer;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI4OTIzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379289238", "bodyText": "Should all the static create() methods to create various types of inputs used for testing be under one class? Don't see the need for creating one class for one static method.  For e.g. the CircularFlux, CircularStream both have just a single static create() method.", "author": "srnagar", "createdAt": "2020-02-14T07:48:45Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularStream.java", "diffHunk": "@@ -8,7 +11,16 @@\n \n import reactor.core.publisher.Flux;\n \n+/**\n+ * Represents a stream with repeated values.\n+ */\n public class CircularStream {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI4OTQyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379289425", "bodyText": "Same here - do some validation here before dividing by remaining.", "author": "srnagar", "createdAt": "2020-02-14T07:49:25Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularStream.java", "diffHunk": "@@ -8,7 +11,16 @@\n \n import reactor.core.publisher.Flux;\n \n+/**\n+ * Represents a stream with repeated values.\n+ */\n public class CircularStream {\n+    /**\n+     * Creates a stream of {@code size}with repeated values of {@code byteArray}.\n+     * @param byteArray the array to create stream from.\n+     * @param size the size of the stream to create.\n+     * @return The created {@link InputStream}\n+     */\n     public static InputStream create(byte[] byteArray, long size) {\n         int remaining = byteArray.length;", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MDc3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379290771", "bodyText": "Consider refactoring this method to not use Flux and Vector. Converting a byteArray to InputStream can be done without using these.", "author": "srnagar", "createdAt": "2020-02-14T07:53:45Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CircularStream.java", "diffHunk": "@@ -8,7 +11,16 @@\n \n import reactor.core.publisher.Flux;\n \n+/**\n+ * Represents a stream with repeated values.\n+ */\n public class CircularStream {\n+    /**\n+     * Creates a stream of {@code size}with repeated values of {@code byteArray}.\n+     * @param byteArray the array to create stream from.\n+     * @param size the size of the stream to create.\n+     * @return The created {@link InputStream}\n+     */\n     public static InputStream create(byte[] byteArray, long size) {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MTQzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379291432", "bodyText": "Any reason this can't directly be included in PerfStressOptions? Seems like a generic option that can be included in the base type and this class can be deleted.", "author": "srnagar", "createdAt": "2020-02-14T07:55:59Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import com.beust.jcommander.Parameter;\n+\n+/**\n+ * Represents the count option for performance tests.\n+ * For example, can be used to indicate the number of resources to create prior to running the test.\n+ */\n+public class CountOptions extends PerfStressOptions {\n+    @Parameter(names = { \"-c\", \"--count\" }, description = \"Number of items\")\n+    private int count = 10;", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java\nsimilarity index 79%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java\nindex 240f079512b..7729eb743af 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/CountOptions.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/CountOptions.java\n\n@@ -1,13 +1,12 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import com.beust.jcommander.Parameter;\n \n /**\n  * Represents the count option for performance tests.\n- * For example, can be used to indicate the number of resources to create prior to running the test.\n  */\n public class CountOptions extends PerfStressOptions {\n     @Parameter(names = { \"-c\", \"--count\" }, description = \"Number of items\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MTk0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379291943", "bodyText": "Publishers should return errors in error channel. This should instead be:\npublic Mono<Void> runAsync() {\n   return Mono.error(new IllegalArgumentException();\n}", "author": "srnagar", "createdAt": "2020-02-14T07:57:42Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/ExceptionTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import reactor.core.publisher.Mono;\n+\n+class ExceptionTest extends PerfStressTest<PerfStressOptions> {\n+\n+    /**\n+     * Sets up the Exception test.\n+     * @param options the options to setup the test with.\n+     */\n+    public ExceptionTest(PerfStressOptions options) {\n+        super(options);\n+    }\n+\n+    @Override\n+    public void run() {\n+        try {\n+            throw new IllegalArgumentException();\n+        } catch (Exception ex) {\n+        }\n+    }\n+\n+    @Override\n+    public Mono<Void> runAsync() {\n+        try {\n+            throw new IllegalArgumentException();", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/ExceptionTest.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/ExceptionTest.java\nsimilarity index 95%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/ExceptionTest.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/ExceptionTest.java\nindex 0910c3ef408..e5f77d113df 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/ExceptionTest.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/ExceptionTest.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import reactor.core.publisher.Mono;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MzMwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379293302", "bodyText": "Same as earlier comments - this method can be along with other create methods that create inputstream, flux of repeating bytebuffers.", "author": "srnagar", "createdAt": "2020-02-14T08:02:02Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomFlux.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import java.nio.ByteBuffer;\n+import java.util.Random;\n+\n+import reactor.core.publisher.Flux;\n+\n+/**\n+ * Represents a Random Flux to be used in performance tests.\n+ */\n+public class RandomFlux {\n+    private static final byte[] RANDOM_BYTES;\n+    private static final ByteBuffer RANDOM_BYTE_BUFFER;\n+\n+    static {\n+        RANDOM_BYTES = new byte[1024 * 1024];\n+        (new Random(0)).nextBytes(RANDOM_BYTES);\n+        RANDOM_BYTE_BUFFER = ByteBuffer.wrap(RANDOM_BYTES).asReadOnlyBuffer();\n+    }\n+\n+    /**\n+     * Creates a random flux of specified size.\n+     * @param size the size of the stream\n+     * @return the {@link Flux} of {@code size}\n+     */\n+    public static Flux<ByteBuffer> create(long size) {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomFlux.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomFlux.java\nsimilarity index 96%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomFlux.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomFlux.java\nindex ac222246c0d..6ec265a733f 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomFlux.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomFlux.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import java.nio.ByteBuffer;\n import java.util.Random;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MzM4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379293383", "bodyText": "same as above - consolidate.", "author": "srnagar", "createdAt": "2020-02-14T08:02:20Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomStream.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.util.Random;\n+\n+/**\n+ * Represents a Random Stream to be used in performance tests.\n+ */\n+public class RandomStream {\n+    private static final int SIZE = (1024 * 1024 * 1024) + 1;\n+    private static final byte[] RANDOM_BYTES;\n+\n+    static {\n+        // _randomBytes = new byte[1024 * 1024];\n+        RANDOM_BYTES = new byte[SIZE];\n+        (new Random(0)).nextBytes(RANDOM_BYTES);\n+    }\n+\n+    /**\n+     * Creates a random stream of specified size.\n+     * @param size the size of the stream\n+     *\n+     * @throws IllegalArgumentException if {@code size} is more than {@link RandomStream#SIZE}\n+     * @return the {@link InputStream} of {@code size}\n+     */\n+    public static InputStream create(long size) {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomStream.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomStream.java\nsimilarity index 97%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomStream.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomStream.java\nindex 4ba230e9ba1..a121e652d6d 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/RandomStream.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/RandomStream.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import java.io.ByteArrayInputStream;\n import java.io.InputStream;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5MzYyMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379293622", "bodyText": "Don't need a new class for this. This can go into PerfStressOptions.", "author": "srnagar", "createdAt": "2020-02-14T08:03:06Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/SizeOptions.java", "diffHunk": "@@ -0,0 +1,22 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import com.beust.jcommander.Parameter;\n+\n+/**\n+ * Represents the size option for performance test.\n+ */\n+public class SizeOptions extends PerfStressOptions {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/SizeOptions.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SizeOptions.java\nsimilarity index 94%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/SizeOptions.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SizeOptions.java\nindex 6059080cded..26c94e02bf2 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/SizeOptions.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SizeOptions.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import com.beust.jcommander.Parameter;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NDIxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379294216", "bodyText": "Add documentation on how to run this app from command line and from IDE too.", "author": "srnagar", "createdAt": "2020-02-14T08:05:10Z", "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/App.java", "diffHunk": "@@ -0,0 +1,33 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.perf;\n+\n+import com.azure.perf.test.core.PerfStressProgram;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class App {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/App.java b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/App.java\nsimilarity index 83%\nrename from sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/App.java\nrename to sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/App.java\nindex 88779330773..eefe6859a38 100644\n--- a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/App.java\n+++ b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/App.java\n\n@@ -3,26 +3,20 @@\n \n package com.azure.storage.blob.perf;\n \n-import com.azure.perf.test.core.PerfStressProgram;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n+import com.azure.core.test.perf.PerfStressProgram;\n \n public class App {\n     public static void main(String[] args) {\n         Class<?>[] testClasses;\n \n-\n-        List<String> strings = new ArrayList<>();\n-\n         try {\n             testClasses = new Class<?>[] {\n-                Class.forName(\"com.azure.storage.blob.perf.DownloadBlobTest\"),\n+                Class.forName(\"com.azure.storage.blob.perf.DownloadTest\"),\n                 Class.forName(\"com.azure.storage.blob.perf.GetBlobsTest\"),\n                 Class.forName(\"com.azure.storage.blob.perf.UploadBlockBlobTest\"),\n                 Class.forName(\"com.azure.storage.blob.perf.UploadFromFileTest\"),\n                 Class.forName(\"com.azure.storage.blob.perf.UploadOutputStreamTest\"),\n-                Class.forName(\"com.azure.storage.blob.perf.UploadBlobTest\"),\n+                Class.forName(\"com.azure.storage.blob.perf.UploadTest\"),\n             };\n         } catch (ClassNotFoundException e) {\n             throw new RuntimeException(e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NDQyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379294426", "bodyText": "Name this as ListBlobsTest", "author": "srnagar", "createdAt": "2020-02-14T08:05:49Z", "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.perf;\n+\n+import java.util.UUID;\n+\n+import com.azure.perf.test.core.CountOptions;\n+import com.azure.storage.blob.perf.core.ContainerTest;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+public class GetBlobsTest extends ContainerTest<CountOptions> {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java\nsimilarity index 77%\nrename from sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java\nrename to sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java\nindex e9fe2e4b1b4..00e9886d764 100644\n--- a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java\n+++ b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/GetBlobsTest.java\n\n@@ -5,7 +5,7 @@ package com.azure.storage.blob.perf;\n \n import java.util.UUID;\n \n-import com.azure.perf.test.core.CountOptions;\n+import com.azure.core.test.perf.CountOptions;\n import com.azure.storage.blob.perf.core.ContainerTest;\n import reactor.core.publisher.Flux;\n import reactor.core.publisher.Mono;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NTIwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379295201", "bodyText": "Can this be named BlobTestBase instead?", "author": "srnagar", "createdAt": "2020-02-14T08:08:12Z", "path": "sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java", "diffHunk": "@@ -1,32 +1,35 @@\n-package com.azure.storage.blob.perfstress.core;\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.storage.blob.perf.core;\n \n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.util.UUID;\n \n-import com.azure.perfstress.PerfStressOptions;\n+import com.azure.perf.test.core.PerfStressOptions;\n import com.azure.storage.blob.BlobAsyncClient;\n import com.azure.storage.blob.BlobClient;\n import com.azure.storage.blob.specialized.BlockBlobAsyncClient;\n import com.azure.storage.blob.specialized.BlockBlobClient;\n \n public abstract class RandomBlobTest<TOptions extends PerfStressOptions> extends ContainerTest<TOptions> {", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java\nsimilarity index 88%\nrename from sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java\nrename to sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java\nindex d050028c177..2f216d26657 100644\n--- a/sdk/storage/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java\n+++ b/sdk/storage/azure-storage-blob/perf-test/src/main/java/com/azure/storage/blob/perf/core/RandomBlobTest.java\n\n@@ -8,7 +8,7 @@ import java.io.InputStream;\n import java.io.OutputStream;\n import java.util.UUID;\n \n-import com.azure.perf.test.core.PerfStressOptions;\n+import com.azure.core.test.perf.PerfStressOptions;\n import com.azure.storage.blob.BlobAsyncClient;\n import com.azure.storage.blob.BlobClient;\n import com.azure.storage.blob.specialized.BlockBlobAsyncClient;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI5NzAwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7737#discussion_r379297009", "bodyText": "This can be replaced by (int) Math.pow(2, instanceCount) and the method below can be deleted.", "author": "srnagar", "createdAt": "2020-02-14T08:13:38Z", "path": "common/perf-test-core/src/main/java/com/azure/perf/test/core/SleepTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.perf.test.core;\n+\n+import com.azure.core.util.logging.ClientLogger;\n+import reactor.core.publisher.Mono;\n+\n+import java.time.Duration;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+\n+class SleepTest extends PerfStressTest<PerfStressOptions> {\n+    private static final ClientLogger LOGGER = new ClientLogger(SleepTest.class);\n+    private static final AtomicInteger INSTANCE_COUNT = new AtomicInteger();\n+    private final int secondsPerOperation;\n+\n+\n+    public SleepTest(PerfStressOptions options) {\n+        super(options);\n+\n+        int instanceCount = SleepTest.INSTANCE_COUNT.incrementAndGet();\n+        secondsPerOperation = pow(2, instanceCount);", "originalCommit": "3c3849bde7fb84d4e2379eb069aea752c92c703c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76d0b58ba5c8a202134282dac7fd1236470697cd", "chunk": "diff --git a/common/perf-test-core/src/main/java/com/azure/perf/test/core/SleepTest.java b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SleepTest.java\nsimilarity index 97%\nrename from common/perf-test-core/src/main/java/com/azure/perf/test/core/SleepTest.java\nrename to sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SleepTest.java\nindex 8d6997aa74a..fcc1dc88c77 100644\n--- a/common/perf-test-core/src/main/java/com/azure/perf/test/core/SleepTest.java\n+++ b/sdk/core/azure-core-test-perf/src/main/java/com/azure/core/test/perf/SleepTest.java\n\n@@ -1,7 +1,7 @@\n // Copyright (c) Microsoft Corporation. All rights reserved.\n // Licensed under the MIT License.\n \n-package com.azure.perf.test.core;\n+package com.azure.core.test.perf;\n \n import com.azure.core.util.logging.ClientLogger;\n import reactor.core.publisher.Mono;\n"}}, {"oid": "76d0b58ba5c8a202134282dac7fd1236470697cd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/76d0b58ba5c8a202134282dac7fd1236470697cd", "message": "update storage pom service xml", "committedDate": "2020-02-18T18:47:01Z", "type": "commit"}, {"oid": "97313e057fb077edc2d576b64b333e68b75e2a22", "url": "https://github.com/Azure/azure-sdk-for-java/commit/97313e057fb077edc2d576b64b333e68b75e2a22", "message": "remove old storage perf-test location", "committedDate": "2020-02-18T18:48:55Z", "type": "commit"}, {"oid": "aeea0ffc499b02c06a214816377708515fac5c84", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aeea0ffc499b02c06a214816377708515fac5c84", "message": "Merge branch 'performance-framrwork-wiring' of ssh://github.com/g2vinay/azure-sdk-for-java into performance-framrwork-wiring", "committedDate": "2020-02-18T20:22:28Z", "type": "commit"}, {"oid": "4ff691f5482c3689343cf451b3853db248299fb2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4ff691f5482c3689343cf451b3853db248299fb2", "message": "feedback update", "committedDate": "2020-02-18T23:03:16Z", "type": "commit"}, {"oid": "61100adc7a12fc70f0c8486075bf9af3288ca232", "url": "https://github.com/Azure/azure-sdk-for-java/commit/61100adc7a12fc70f0c8486075bf9af3288ca232", "message": "lexical ordering", "committedDate": "2020-02-19T00:36:50Z", "type": "commit"}, {"oid": "6163ddb609d329fb4d00fd01d2a2b7fde8568687", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6163ddb609d329fb4d00fd01d2a2b7fde8568687", "message": "Merge branch 'master' into performance-framrwork-wiring", "committedDate": "2020-02-19T00:40:28Z", "type": "commit"}, {"oid": "eadacd96eefc15a514f7b9cb71b187b2d8f60be2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eadacd96eefc15a514f7b9cb71b187b2d8f60be2", "message": "update storage pom service xml", "committedDate": "2020-02-19T01:01:34Z", "type": "commit"}, {"oid": "a2d9489b869c847732245ad245bff5d346b54307", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a2d9489b869c847732245ad245bff5d346b54307", "message": "update storage pom service", "committedDate": "2020-02-19T01:27:36Z", "type": "commit"}]}