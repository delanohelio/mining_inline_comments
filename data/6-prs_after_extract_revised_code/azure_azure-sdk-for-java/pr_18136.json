{"pr_number": 18136, "pr_title": "Add refresh token converter to fix scopes error", "pr_createdAt": "2020-12-15T03:12:24Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18136", "timeline": [{"oid": "45d389afe7e23285adf32582b99149b52effb5a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/45d389afe7e23285adf32582b99149b52effb5a2", "message": "add RefreshTokenGrantRequestEntityConverter works when use refresh_token get access_token", "committedDate": "2020-12-14T07:38:48Z", "type": "commit"}, {"oid": "c9ee1372f01160f3216dbf984ad364eb299f8974", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9ee1372f01160f3216dbf984ad364eb299f8974", "message": "add AzureHandlerMethodArgumentResolver to change the DefaultOAuth2AuthorizedClientManager", "committedDate": "2020-12-14T07:40:39Z", "type": "commit"}, {"oid": "42d5e28fd6bbac556e2eccccd50eb0f5da7c3f85", "url": "https://github.com/Azure/azure-sdk-for-java/commit/42d5e28fd6bbac556e2eccccd50eb0f5da7c3f85", "message": "add WebMvcConfigurer to add Argument Resolvers which use custom authorized client manager", "committedDate": "2020-12-15T02:54:08Z", "type": "commit"}, {"oid": "1b55a6097ad9bab0b4b88e8285f5c6769cdd4521", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b55a6097ad9bab0b4b88e8285f5c6769cdd4521", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into add-refresh-token-converter", "committedDate": "2020-12-15T02:54:25Z", "type": "commit"}, {"oid": "d66f7d56a9745dc73130ebfe48ce6607eccdaab0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d66f7d56a9745dc73130ebfe48ce6607eccdaab0", "message": "add dependency to support WebMvcConfigurer", "committedDate": "2020-12-15T02:55:34Z", "type": "commit"}, {"oid": "24d4901cfcc6f58be47600f67a744190f1f8d804", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24d4901cfcc6f58be47600f67a744190f1f8d804", "message": "Unified dependency version", "committedDate": "2020-12-15T03:01:18Z", "type": "commit"}, {"oid": "9a8ac067b61e3261de7cb86ce0f22e491542640c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a8ac067b61e3261de7cb86ce0f22e491542640c", "message": "format code for pipeline", "committedDate": "2020-12-15T08:29:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NTQ1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543165457", "bodyText": "So the only logic we added is the constructor?", "author": "chenrujun", "createdAt": "2020-12-15T09:05:24Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureHandlerMethodArgumentResolver.java", "diffHunk": "@@ -0,0 +1,141 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.core.MethodParameter;\n+import org.springframework.core.annotation.AnnotatedElementUtils;\n+import org.springframework.lang.Nullable;\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.authority.AuthorityUtils;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizeRequest;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProviderBuilder;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProvider;\n+import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n+import org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2ClientCredentialsGrantRequest;\n+import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n+import org.springframework.util.Assert;\n+import org.springframework.util.StringUtils;\n+import org.springframework.web.bind.support.WebDataBinderFactory;\n+import org.springframework.web.context.request.NativeWebRequest;\n+import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n+import org.springframework.web.method.support.ModelAndViewContainer;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * Azure handler method argument resolver to add custom OAuth2AuthorizedClientManager\n+ */\n+public final class AzureHandlerMethodArgumentResolver implements HandlerMethodArgumentResolver {\n+    private static final Authentication ANONYMOUS_AUTHENTICATION = new AnonymousAuthenticationToken(\n+        \"anonymous\", \"anonymousUser\", AuthorityUtils.createAuthorityList(\"ROLE_ANONYMOUS\"));\n+\n+    private final OAuth2AuthorizedClientManager authorizedClientManager;\n+\n+    private final boolean defaultAuthorizedClientManager;\n+\n+    public AzureHandlerMethodArgumentResolver(OAuth2AuthorizedClientManager authorizedClientManager) {", "originalCommit": "9a8ac067b61e3261de7cb86ce0f22e491542640c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74ac190d34cba1ff2f5ff17118718c02f61ab7dc", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureHandlerMethodArgumentResolver.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureHandlerMethodArgumentResolver.java\ndeleted file mode 100644\nindex e3d64339aca..00000000000\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureHandlerMethodArgumentResolver.java\n+++ /dev/null\n\n@@ -1,141 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-\n-package com.azure.spring.aad.webapp;\n-\n-import org.springframework.core.MethodParameter;\n-import org.springframework.core.annotation.AnnotatedElementUtils;\n-import org.springframework.lang.Nullable;\n-import org.springframework.security.authentication.AnonymousAuthenticationToken;\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.authority.AuthorityUtils;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizeRequest;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClient;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProviderBuilder;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProvider;\n-import org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient;\n-import org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2ClientCredentialsGrantRequest;\n-import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n-import org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n-import org.springframework.util.Assert;\n-import org.springframework.util.StringUtils;\n-import org.springframework.web.bind.support.WebDataBinderFactory;\n-import org.springframework.web.context.request.NativeWebRequest;\n-import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n-import org.springframework.web.method.support.ModelAndViewContainer;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-\n-/**\n- * Azure handler method argument resolver to add custom OAuth2AuthorizedClientManager\n- */\n-public final class AzureHandlerMethodArgumentResolver implements HandlerMethodArgumentResolver {\n-    private static final Authentication ANONYMOUS_AUTHENTICATION = new AnonymousAuthenticationToken(\n-        \"anonymous\", \"anonymousUser\", AuthorityUtils.createAuthorityList(\"ROLE_ANONYMOUS\"));\n-\n-    private final OAuth2AuthorizedClientManager authorizedClientManager;\n-\n-    private final boolean defaultAuthorizedClientManager;\n-\n-    public AzureHandlerMethodArgumentResolver(OAuth2AuthorizedClientManager authorizedClientManager) {\n-        Assert.notNull(authorizedClientManager, \"authorizedClientManager cannot be null\");\n-        this.authorizedClientManager = authorizedClientManager;\n-        this.defaultAuthorizedClientManager = false;\n-    }\n-\n-    public AzureHandlerMethodArgumentResolver(ClientRegistrationRepository clientRegistrationRepository,\n-                                              OAuth2AuthorizedClientRepository authorizedClientRepository) {\n-        Assert.notNull(clientRegistrationRepository, \"clientRegistrationRepository cannot be null\");\n-        Assert.notNull(authorizedClientRepository, \"authorizedClientRepository cannot be null\");\n-        this.authorizedClientManager = new DefaultOAuth2AuthorizedClientManager(\n-            clientRegistrationRepository, authorizedClientRepository);\n-        this.defaultAuthorizedClientManager = true;\n-    }\n-\n-    @Override\n-    public boolean supportsParameter(MethodParameter parameter) {\n-        Class<?> parameterType = parameter.getParameterType();\n-        return (OAuth2AuthorizedClient.class.isAssignableFrom(parameterType)\n-            && (AnnotatedElementUtils.findMergedAnnotation(\n-                parameter.getParameter(), RegisteredOAuth2AuthorizedClient.class) != null));\n-    }\n-\n-    @Override\n-    public Object resolveArgument(MethodParameter parameter,\n-                                  @Nullable ModelAndViewContainer mavContainer,\n-                                  NativeWebRequest webRequest,\n-                                  @Nullable WebDataBinderFactory binderFactory) {\n-        String clientRegistrationId = this.resolveClientRegistrationId(parameter);\n-        if (StringUtils.isEmpty(clientRegistrationId)) {\n-            throw new IllegalArgumentException(\"Unable to resolve the Client Registration Identifier. \"\n-                + \"It must be provided via @RegisteredOAuth2AuthorizedClient(\\\"client1\\\") or \"\n-                + \"@RegisteredOAuth2AuthorizedClient(registrationId = \\\"client1\\\").\");\n-        }\n-\n-        Authentication principal = SecurityContextHolder.getContext().getAuthentication();\n-        if (principal == null) {\n-            principal = ANONYMOUS_AUTHENTICATION;\n-        }\n-        HttpServletRequest servletRequest = webRequest.getNativeRequest(HttpServletRequest.class);\n-        HttpServletResponse servletResponse = webRequest.getNativeResponse(HttpServletResponse.class);\n-\n-        OAuth2AuthorizeRequest authorizeRequest = OAuth2AuthorizeRequest.withClientRegistrationId(clientRegistrationId)\n-            .principal(principal)\n-            .attribute(HttpServletRequest.class.getName(), servletRequest)\n-            .attribute(HttpServletResponse.class.getName(), servletResponse)\n-            .build();\n-\n-        return this.authorizedClientManager.authorize(authorizeRequest);\n-    }\n-\n-    private String resolveClientRegistrationId(MethodParameter parameter) {\n-        RegisteredOAuth2AuthorizedClient authorizedClientAnnotation = AnnotatedElementUtils.findMergedAnnotation(\n-            parameter.getParameter(), RegisteredOAuth2AuthorizedClient.class);\n-\n-        Authentication principal = SecurityContextHolder.getContext().getAuthentication();\n-\n-        Assert.notNull(authorizedClientAnnotation, \"authorizedClientAnnotation cannot be null\");\n-        String clientRegistrationId = null;\n-        if (!StringUtils.isEmpty(authorizedClientAnnotation.registrationId())) {\n-            clientRegistrationId = authorizedClientAnnotation.registrationId();\n-        } else if (!StringUtils.isEmpty(authorizedClientAnnotation.value())) {\n-            clientRegistrationId = authorizedClientAnnotation.value();\n-        } else if (principal != null && OAuth2AuthenticationToken.class.isAssignableFrom(principal.getClass())) {\n-            clientRegistrationId = ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();\n-        }\n-\n-        return clientRegistrationId;\n-    }\n-\n-    private void updateDefaultAuthorizedClientManager(\n-        OAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest> clientCredentialsTokenResponseClient) {\n-\n-        OAuth2AuthorizedClientProvider authorizedClientProvider =\n-            OAuth2AuthorizedClientProviderBuilder.builder()\n-                .authorizationCode()\n-                .refreshToken()\n-                .clientCredentials(configurer ->\n-                    configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient))\n-                .password()\n-                .build();\n-        ((DefaultOAuth2AuthorizedClientManager) this.authorizedClientManager)\n-            .setAuthorizedClientProvider(authorizedClientProvider);\n-    }\n-\n-    @Deprecated\n-    public void setClientCredentialsTokenResponseClient(\n-        OAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest> clientCredentialsTokenResponseClient) {\n-        Assert.notNull(clientCredentialsTokenResponseClient, \"clientCredentialsTokenResponseClient cannot be null\");\n-        Assert.state(this.defaultAuthorizedClientManager, \"The client cannot be set when the constructor used is \"\n-            + \"\\\"OAuth2AuthorizedClientArgumentResolver(OAuth2AuthorizedClientManager)\\\". \"\n-            + \"Instead, use the constructor \"\n-            + \"\\\"OAuth2AuthorizedClientArgumentResolver(\"\n-            + \"ClientRegistrationRepository, OAuth2AuthorizedClientRepository)\\\".\");\n-        updateDefaultAuthorizedClientManager(clientCredentialsTokenResponseClient);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2NjUwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543166506", "bodyText": "Do we need to make it as a bean?", "author": "chenrujun", "createdAt": "2020-12-15T09:06:58Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java", "diffHunk": "@@ -0,0 +1,66 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProvider;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProviderBuilder;\n+import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n+import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n+import org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n+import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+import java.util.List;\n+\n+/**\n+ * Abstract configuration class, used to make RefreshTokenGrantRequestEntityConverter take effect.\n+ */\n+public abstract class AzureWebMvcConfigurer implements WebMvcConfigurer {\n+\n+    @Autowired\n+    private AzureClientRegistrationRepository clientRegistrations;\n+\n+    @Autowired\n+    ClientRegistrationRepository clientRegistrationRepository;\n+\n+    @Autowired\n+    OAuth2AuthorizedClientRepository authorizedClientRepository;\n+\n+    public OAuth2AuthorizedClientManager authorizedClientManager(", "originalCommit": "9a8ac067b61e3261de7cb86ce0f22e491542640c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74ac190d34cba1ff2f5ff17118718c02f61ab7dc", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\nindex 810808bd78e..f72755b7313 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\n\n@@ -5,14 +5,10 @@ package com.azure.spring.aad.webapp;\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProvider;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientProviderBuilder;\n import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n-import org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;\n-import org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository;\n+import org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver;\n import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE2Nzc0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543167749", "bodyText": "Can we use AzureActiveDirectoryConfiguration.AZURE_CLIENT_REGISTRATION_ID.equals(...)?", "author": "chenrujun", "createdAt": "2020-12-15T09:08:45Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java", "diffHunk": "@@ -0,0 +1,46 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.RequestEntity;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequestEntityConverter;\n+import org.springframework.security.oauth2.client.registration.ClientRegistration;\n+import org.springframework.util.MultiValueMap;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Used to set \"scope\" parameter when use \"refresh_token\" to get \"access_token\".\n+ */\n+public class RefreshTokenGrantRequestEntityConverter extends OAuth2RefreshTokenGrantRequestEntityConverter {\n+\n+    private final List<ClientRegistration> otherClients;\n+\n+    public RefreshTokenGrantRequestEntityConverter(List<ClientRegistration> otherClients) {\n+        this.otherClients = otherClients;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public RequestEntity<?> convert(OAuth2RefreshTokenGrantRequest refreshTokenGrantRequest) {\n+        RequestEntity<?> result = super.convert(refreshTokenGrantRequest);\n+        if (isRequestForDefaultClient(refreshTokenGrantRequest)) {\n+            Optional.ofNullable(result)\n+                .map(HttpEntity::getBody)\n+                .map(b -> (MultiValueMap<String, String>) b)\n+                .ifPresent(body -> body.add(\"scope\", scopeValue(refreshTokenGrantRequest)));\n+        }\n+        return result;\n+    }\n+\n+    private boolean isRequestForDefaultClient(OAuth2RefreshTokenGrantRequest request) {\n+        return otherClients.contains(request.getClientRegistration());", "originalCommit": "9a8ac067b61e3261de7cb86ce0f22e491542640c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "74ac190d34cba1ff2f5ff17118718c02f61ab7dc", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java\nindex bd3d49a520c..bfd5891db06 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java\n\n@@ -7,10 +7,8 @@ import org.springframework.http.HttpEntity;\n import org.springframework.http.RequestEntity;\n import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequestEntityConverter;\n-import org.springframework.security.oauth2.client.registration.ClientRegistration;\n import org.springframework.util.MultiValueMap;\n \n-import java.util.List;\n import java.util.Optional;\n \n /**\n"}}, {"oid": "74ac190d34cba1ff2f5ff17118718c02f61ab7dc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/74ac190d34cba1ff2f5ff17118718c02f61ab7dc", "message": "code format", "committedDate": "2020-12-15T09:44:51Z", "type": "commit"}, {"oid": "6065dffc8ba7d1f66a24261d82e0ac6ee7f6edb5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6065dffc8ba7d1f66a24261d82e0ac6ee7f6edb5", "message": "remove unused function", "committedDate": "2020-12-15T09:46:38Z", "type": "commit"}, {"oid": "cf41c79c703bf09c245f3f938e51316270da9938", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf41c79c703bf09c245f3f938e51316270da9938", "message": "fix error for dependency", "committedDate": "2020-12-15T09:53:39Z", "type": "commit"}, {"oid": "d5a39d049033db60d05584eba4ebab64ca605438", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d5a39d049033db60d05584eba4ebab64ca605438", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into add-refresh-token-converter", "committedDate": "2020-12-15T10:59:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4MzU3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543783573", "bodyText": "It's not sample, this code will take effect. I prefer the following description:\nTemp solution to make RefreshTokenGrantRequestEntityConverter take effect.", "author": "chenrujun", "createdAt": "2020-12-16T00:20:07Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -172,4 +206,21 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .oidcUserService(oidcUserService);\n         }\n     }\n+\n+    /**\n+     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nindex a24122e27c7..28ba744c732 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n\n@@ -208,18 +211,20 @@ public class AzureActiveDirectoryConfiguration {\n     }\n \n     /**\n-     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.\n-     * TODO: spring-security can't inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n-     *  Future versions may support this , this may be a better solution\n-     *  issues : https://github.com/spring-projects/spring-security/issues/8700\n+     * Temp solution to make RefreshTokenGrantRequestEntityConverter take effect.\n+     * TODO: remove this logic after spring-security can inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n+     * issue: https://github.com/spring-projects/spring-security/issues/8700\n      */\n     @Order(HIGHEST_PRECEDENCE)\n     @Configuration\n-    public static class DefaultAzureWebMvcContext extends AzureWebMvcConfigurer {\n+    public static class AzureWebMvcContext implements WebMvcConfigurer {\n+\n+        @Autowired\n+        OAuth2AuthorizedClientManager clientManager;\n \n         @Override\n         public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n-            super.addArgumentResolvers(argumentResolvers);\n+            argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(clientManager));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDA3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543784078", "bodyText": "Use one space instead of two after *.\nNo space after issues.\nIt will be issue instead of issues.", "author": "chenrujun", "createdAt": "2020-12-16T00:21:33Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -172,4 +206,21 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .oidcUserService(oidcUserService);\n         }\n     }\n+\n+    /**\n+     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.\n+     * TODO: spring-security can't inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n+     *  Future versions may support this , this may be a better solution\n+     *  issues : https://github.com/spring-projects/spring-security/issues/8700", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nindex a24122e27c7..28ba744c732 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n\n@@ -208,18 +211,20 @@ public class AzureActiveDirectoryConfiguration {\n     }\n \n     /**\n-     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.\n-     * TODO: spring-security can't inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n-     *  Future versions may support this , this may be a better solution\n-     *  issues : https://github.com/spring-projects/spring-security/issues/8700\n+     * Temp solution to make RefreshTokenGrantRequestEntityConverter take effect.\n+     * TODO: remove this logic after spring-security can inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n+     * issue: https://github.com/spring-projects/spring-security/issues/8700\n      */\n     @Order(HIGHEST_PRECEDENCE)\n     @Configuration\n-    public static class DefaultAzureWebMvcContext extends AzureWebMvcConfigurer {\n+    public static class AzureWebMvcContext implements WebMvcConfigurer {\n+\n+        @Autowired\n+        OAuth2AuthorizedClientManager clientManager;\n \n         @Override\n         public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n-            super.addArgumentResolvers(argumentResolvers);\n+            argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(clientManager));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NDQzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543784432", "bodyText": "TODO: remove this logic after spring-security can inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver", "author": "chenrujun", "createdAt": "2020-12-16T00:22:23Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -172,4 +206,21 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .oidcUserService(oidcUserService);\n         }\n     }\n+\n+    /**\n+     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.\n+     * TODO: spring-security can't inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nindex a24122e27c7..28ba744c732 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n\n@@ -208,18 +211,20 @@ public class AzureActiveDirectoryConfiguration {\n     }\n \n     /**\n-     * Sample configuration to make RefreshTokenGrantRequestEntityConverter take effect.\n-     * TODO: spring-security can't inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n-     *  Future versions may support this , this may be a better solution\n-     *  issues : https://github.com/spring-projects/spring-security/issues/8700\n+     * Temp solution to make RefreshTokenGrantRequestEntityConverter take effect.\n+     * TODO: remove this logic after spring-security can inject OAuth2AuthorizedClientManager to OAuth2AuthorizedClientArgumentResolver\n+     * issue: https://github.com/spring-projects/spring-security/issues/8700\n      */\n     @Order(HIGHEST_PRECEDENCE)\n     @Configuration\n-    public static class DefaultAzureWebMvcContext extends AzureWebMvcConfigurer {\n+    public static class AzureWebMvcContext implements WebMvcConfigurer {\n+\n+        @Autowired\n+        OAuth2AuthorizedClientManager clientManager;\n \n         @Override\n         public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n-            super.addArgumentResolvers(argumentResolvers);\n+            argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(clientManager));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NTYzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543785636", "bodyText": "What is this method used for?", "author": "chenrujun", "createdAt": "2020-12-16T00:25:38Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n+import org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver;\n+import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+import java.util.List;\n+\n+/**\n+ * Abstract configuration class, used to make RefreshTokenGrantRequestEntityConverter take effect.\n+ */\n+public abstract class AzureWebMvcConfigurer implements WebMvcConfigurer {\n+\n+    @Autowired\n+    OAuth2AuthorizedClientManager oAuth2AuthorizedClientManager;\n+\n+    public OAuth2AccessTokenResponseClient<OAuth2RefreshTokenGrantRequest> oAuth2AccessTokenResponseClient() {", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\ndeleted file mode 100644\nindex f72755b7313..00000000000\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-\n-package com.azure.spring.aad.webapp;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n-import org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver;\n-import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n-import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n-\n-import java.util.List;\n-\n-/**\n- * Abstract configuration class, used to make RefreshTokenGrantRequestEntityConverter take effect.\n- */\n-public abstract class AzureWebMvcConfigurer implements WebMvcConfigurer {\n-\n-    @Autowired\n-    OAuth2AuthorizedClientManager oAuth2AuthorizedClientManager;\n-\n-    public OAuth2AccessTokenResponseClient<OAuth2RefreshTokenGrantRequest> oAuth2AccessTokenResponseClient() {\n-        DefaultRefreshTokenTokenResponseClient result = new DefaultRefreshTokenTokenResponseClient();\n-        result.setRequestEntityConverter(\n-            new RefreshTokenGrantRequestEntityConverter());\n-        return result;\n-    }\n-\n-    @Override\n-    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n-        argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(oAuth2AuthorizedClientManager));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NjU5MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543786590", "bodyText": "Can we delete AzureWebMvcConfigurer and let DefaultAzureWebMvcContext implements WebMvcConfigurer?", "author": "chenrujun", "createdAt": "2020-12-16T00:28:03Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java", "diffHunk": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n+import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n+import org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver;\n+import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n+\n+import java.util.List;\n+\n+/**\n+ * Abstract configuration class, used to make RefreshTokenGrantRequestEntityConverter take effect.\n+ */\n+public abstract class AzureWebMvcConfigurer implements WebMvcConfigurer {", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\ndeleted file mode 100644\nindex f72755b7313..00000000000\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureWebMvcConfigurer.java\n+++ /dev/null\n\n@@ -1,36 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-\n-package com.azure.spring.aad.webapp;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager;\n-import org.springframework.security.oauth2.client.endpoint.DefaultRefreshTokenTokenResponseClient;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient;\n-import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n-import org.springframework.security.oauth2.client.web.method.annotation.OAuth2AuthorizedClientArgumentResolver;\n-import org.springframework.web.method.support.HandlerMethodArgumentResolver;\n-import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n-\n-import java.util.List;\n-\n-/**\n- * Abstract configuration class, used to make RefreshTokenGrantRequestEntityConverter take effect.\n- */\n-public abstract class AzureWebMvcConfigurer implements WebMvcConfigurer {\n-\n-    @Autowired\n-    OAuth2AuthorizedClientManager oAuth2AuthorizedClientManager;\n-\n-    public OAuth2AccessTokenResponseClient<OAuth2RefreshTokenGrantRequest> oAuth2AccessTokenResponseClient() {\n-        DefaultRefreshTokenTokenResponseClient result = new DefaultRefreshTokenTokenResponseClient();\n-        result.setRequestEntityConverter(\n-            new RefreshTokenGrantRequestEntityConverter());\n-        return result;\n-    }\n-\n-    @Override\n-    public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {\n-        argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(oAuth2AuthorizedClientManager));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4NzEwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543787104", "bodyText": "I prefer AzureOauth2RefreshTokenGrantRequestEntityConverter.", "author": "chenrujun", "createdAt": "2020-12-16T00:29:21Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.spring.aad.webapp;\n+\n+import org.springframework.http.HttpEntity;\n+import org.springframework.http.RequestEntity;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequest;\n+import org.springframework.security.oauth2.client.endpoint.OAuth2RefreshTokenGrantRequestEntityConverter;\n+import org.springframework.util.MultiValueMap;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Used to set \"scope\" parameter when use \"refresh_token\" to get \"access_token\".\n+ */\n+public class RefreshTokenGrantRequestEntityConverter extends OAuth2RefreshTokenGrantRequestEntityConverter {", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureOauth2RefreshTokenGrantRequestEntityConverter.java\nsimilarity index 91%\nrename from sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java\nrename to sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureOauth2RefreshTokenGrantRequestEntityConverter.java\nindex bfd5891db06..5b3f179b573 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/RefreshTokenGrantRequestEntityConverter.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureOauth2RefreshTokenGrantRequestEntityConverter.java\n\n@@ -14,7 +14,7 @@ import java.util.Optional;\n /**\n  * Used to set \"scope\" parameter when use \"refresh_token\" to get \"access_token\".\n  */\n-public class RefreshTokenGrantRequestEntityConverter extends OAuth2RefreshTokenGrantRequestEntityConverter {\n+public class AzureOauth2RefreshTokenGrantRequestEntityConverter extends OAuth2RefreshTokenGrantRequestEntityConverter {\n \n     @SuppressWarnings(\"unchecked\")\n     public RequestEntity<?> convert(OAuth2RefreshTokenGrantRequest refreshTokenGrantRequest) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4ODI3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18136#discussion_r543788274", "bodyText": "Move this to AzureActiveDirectoryConfiguration", "author": "chenrujun", "createdAt": "2020-12-16T00:32:15Z", "path": "sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java", "diffHunk": "@@ -58,6 +67,31 @@ public OAuth2AuthorizedClientRepository authorizedClientRepository(AzureClientRe\n         return new AzureAuthorizedClientRepository(repo);\n     }\n \n+    @Bean\n+    @ConditionalOnProperty(prefix = \"azure.activedirectory.user-group\", value = \"allowed-groups\")", "originalCommit": "cf41c79c703bf09c245f3f938e51316270da9938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e995c1a930e9c953002385f1e056971652fb10a2", "chunk": "diff --git a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\nindex a24122e27c7..28ba744c732 100644\n--- a/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n+++ b/sdk/spring/azure-spring-boot/src/main/java/com/azure/spring/aad/webapp/AzureActiveDirectoryConfiguration.java\n\n@@ -68,14 +73,13 @@ public class AzureActiveDirectoryConfiguration {\n     }\n \n     @Bean\n-    @ConditionalOnProperty(prefix = \"azure.activedirectory.user-group\", value = \"allowed-groups\")\n     public OAuth2AuthorizedClientManager authorizedClientManager(\n         ClientRegistrationRepository clientRegistrationRepository,\n         OAuth2AuthorizedClientRepository authorizedClientRepository) {\n \n         DefaultRefreshTokenTokenResponseClient responseClient = new DefaultRefreshTokenTokenResponseClient();\n         responseClient.setRequestEntityConverter(\n-            new RefreshTokenGrantRequestEntityConverter());\n+            new AzureOauth2RefreshTokenGrantRequestEntityConverter());\n \n         OAuth2AuthorizedClientProvider authorizedClientProvider =\n             OAuth2AuthorizedClientProviderBuilder.builder()\n"}}, {"oid": "e995c1a930e9c953002385f1e056971652fb10a2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e995c1a930e9c953002385f1e056971652fb10a2", "message": "code format", "committedDate": "2020-12-16T01:57:58Z", "type": "commit"}, {"oid": "59338bbf5304d724d07d3db8340803b7aa1129d6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/59338bbf5304d724d07d3db8340803b7aa1129d6", "message": "code format for pipeline", "committedDate": "2020-12-16T02:20:54Z", "type": "commit"}, {"oid": "31c5c669974d44ffab422f9b24c9899f48234030", "url": "https://github.com/Azure/azure-sdk-for-java/commit/31c5c669974d44ffab422f9b24c9899f48234030", "message": "add dependency in starter", "committedDate": "2020-12-16T06:09:46Z", "type": "commit"}, {"oid": "31c5c669974d44ffab422f9b24c9899f48234030", "url": "https://github.com/Azure/azure-sdk-for-java/commit/31c5c669974d44ffab422f9b24c9899f48234030", "message": "add dependency in starter", "committedDate": "2020-12-16T06:09:46Z", "type": "forcePushed"}, {"oid": "e72f4c7c998dd72e13a7f8d97434a8d61a3ff27f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e72f4c7c998dd72e13a7f8d97434a8d61a3ff27f", "message": "fix error dependency", "committedDate": "2020-12-16T06:15:21Z", "type": "commit"}, {"oid": "ac9fbfda70c4cf192192e27f4538cc72ffede67a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ac9fbfda70c4cf192192e27f4538cc72ffede67a", "message": "add missing includes", "committedDate": "2020-12-16T06:29:20Z", "type": "commit"}]}