{"pr_number": 14270, "pr_title": "add resource manager throttling info", "pr_createdAt": "2020-08-19T08:10:46Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14270", "timeline": [{"oid": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/175995bdd51c61fc8c1fc080a1052deb6a9c2bd6", "message": "add resource manager throttling info", "committedDate": "2020-08-19T08:09:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472850399", "bodyText": "It would be nice if we can try parse it, regex maybe. We can give user the string, and if we can parse, put value to commonRateLimits.", "author": "weidongxu-microsoft", "createdAt": "2020-08-19T08:20:48Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header\n+ */\n+public class ResourceManagerThrottlingInfo {\n+    // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n+    private static final List<String> COMMON_RATE_LIMIT_HEADERS = Arrays.asList(\n+        \"x-ms-ratelimit-remaining-subscription-reads\",\n+        \"x-ms-ratelimit-remaining-subscription-writes\",\n+        \"x-ms-ratelimit-remaining-tenant-reads\",\n+        \"x-ms-ratelimit-remaining-tenant-writes\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-requests\",\n+        \"x-ms-ratelimit-remaining-subscription-resource-entities-read\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-requests\",\n+        \"x-ms-ratelimit-remaining-tenant-resource-entities-read\"\n+    );\n+\n+    // refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n+    private static final String RESOURCE_RATE_LIMIT_HEADERS = \"x-ms-ratelimit-remaining-resource\";", "originalCommit": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1NzA2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472857065", "bodyText": "It could be parsed, but it contains two value for different duration 3 min and 30 min. What should we use? such as x-ms-ratelimit-remaining-resource-3min?", "author": "ChenTanyi", "createdAt": "2020-08-19T08:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2MTQ2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472861461", "bodyText": "Yes, maybe x-ms-ratelimit-remaining-resource-PutVM3Min and x-ms-ratelimit-remaining-resource-PutVM30Min for Microsoft.Compute/PutVM3Min;239,Microsoft.Compute/PutVM30Min;1199.\nOr maybe a data structure more complex than key/value pair?", "author": "weidongxu-microsoft", "createdAt": "2020-08-19T08:38:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDM5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "86bbab63934a6a53df5eeb23bea96836b9ca7c7a", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\nindex 0e358d8ffd7..2673aeb64df 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n\n@@ -11,9 +11,12 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n- * The class to collect all throttling info from response header\n+ * The class to collect all throttling info from response header.\n+ * Some service has different rate limit but not visible in response header, like network/storage.\n  */\n public class ResourceManagerThrottlingInfo {\n     // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MjUxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472852519", "bodyText": "Probably need to notify that the code in callback is not thread-safe.", "author": "weidongxu-microsoft", "createdAt": "2020-08-19T08:24:16Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "diffHunk": "@@ -7,86 +7,28 @@\n import com.azure.core.http.HttpPipelineNextPolicy;\n import com.azure.core.http.HttpResponse;\n import com.azure.core.http.policy.HttpPipelinePolicy;\n-import com.azure.core.util.DateTimeRfc1123;\n-import com.azure.core.util.FluxUtil;\n-import com.azure.core.util.logging.ClientLogger;\n-import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.time.Instant;\n-import java.time.OffsetDateTime;\n-import java.util.concurrent.TimeUnit;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import java.util.function.Consumer;\n \n /**\n- * A Http Pipeline Policy for automatic retry when Azure Resource Manager is throttling\n- * because of too many read/write requests.\n- * <p>\n- * For each subscription and tenant, Azure Resource Manager limits read requests to 15,000 per hour and\n- *   write requests to 1,200 per hour. These limits apply to each Azure Resource Manager instance.\n+ * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private static final String RETRY_MESSAGE_FORMAT =\n-        \"Azure Resource Manager read/write per hour limit reached. Will retry in: %d seconds\";\n+    private final Consumer<? super ResourceManagerThrottlingInfo> callback;\n+\n+    /**\n+     * Creates the resource manager throttling policy\n+     * @param callback consume the ResourceManagerThrottlingInfo for every request", "originalCommit": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86bbab63934a6a53df5eeb23bea96836b9ca7c7a", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\nindex 30c81c5cb2d..65eb244e101 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\n\n@@ -20,7 +20,7 @@ public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n \n     /**\n      * Creates the resource manager throttling policy\n-     * @param callback consume the ResourceManagerThrottlingInfo for every request\n+     * @param callback consume the ResourceManagerThrottlingInfo for every request, it is not a thread-safe method\n      */\n     public ResourceManagerThrottlingPolicy(Consumer<? super ResourceManagerThrottlingInfo> callback) {\n         this.callback = callback;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472853241", "bodyText": "If possible, get info on whether network/storage has limit but does not return in headers.", "author": "weidongxu-microsoft", "createdAt": "2020-08-19T08:25:18Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -0,0 +1,91 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.resourcemanager.resources.fluentcore.utils;\n+\n+import com.azure.core.http.HttpHeaders;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * The class to collect all throttling info from response header", "originalCommit": "175995bdd51c61fc8c1fc080a1052deb6a9c2bd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg3MzI4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472873280", "bodyText": "I didn't see the network/storage have specific header for throttling.", "author": "ChenTanyi", "createdAt": "2020-08-19T08:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwMDA1Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r472900057", "bodyText": "I know. I mean if other service has limitation but not visible in header, we should mention it in javadoc (that this util tries to help but in some case not able to).", "author": "weidongxu-microsoft", "createdAt": "2020-08-19T09:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MzI0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "86bbab63934a6a53df5eeb23bea96836b9ca7c7a", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\nindex 0e358d8ffd7..2673aeb64df 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n\n@@ -11,9 +11,12 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n- * The class to collect all throttling info from response header\n+ * The class to collect all throttling info from response header.\n+ * Some service has different rate limit but not visible in response header, like network/storage.\n  */\n public class ResourceManagerThrottlingInfo {\n     // refer https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/request-limits-and-throttling\n"}}, {"oid": "86bbab63934a6a53df5eeb23bea96836b9ca7c7a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/86bbab63934a6a53df5eeb23bea96836b9ca7c7a", "message": "add additional comment and regex for resource limit", "committedDate": "2020-08-20T02:23:05Z", "type": "commit"}, {"oid": "ff61c045f401d702f38598667c1c018bd51e170a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ff61c045f401d702f38598667c1c018bd51e170a", "message": "add test and fix regex", "committedDate": "2020-08-20T03:09:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjYwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473562600", "bodyText": "Should we put Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\") to a static, to save runtime cost to do it every time?", "author": "weidongxu-microsoft", "createdAt": "2020-08-20T03:14:58Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -47,6 +50,11 @@ public ResourceManagerThrottlingInfo(HttpHeaders headers) {\n             }\n         }\n         resourceRateLimit = headers.getValue(RESOURCE_RATE_LIMIT_HEADERS);\n+        Matcher matcher = Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\").matcher(resourceRateLimit);", "originalCommit": "ff61c045f401d702f38598667c1c018bd51e170a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODYwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628606", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-08-20T06:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2MjYwMA=="}], "type": "inlineReview", "revised_code": {"commit": "23201affcb71666463bbb1682d99b16465631290", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\nindex 1871e53d2f6..d438fce404f 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n\n@@ -49,11 +50,11 @@ public class ResourceManagerThrottlingInfo {\n                 commonRateLimits.put(header, value);\n             }\n         }\n-        resourceRateLimit = headers.getValue(RESOURCE_RATE_LIMIT_HEADERS);\n-        Matcher matcher = Pattern.compile(\"\\\\w+\\\\.\\\\w+/([^;]+);(\\\\d+)\").matcher(resourceRateLimit);\n+        resourceRateLimit = headers.getValue(RESOURCE_RATE_LIMIT_HEADER);\n+        Matcher matcher = Pattern.compile(RESOURCE_RATE_LIMIT_HEADER_PATTERN).matcher(resourceRateLimit);\n         while (matcher.find()) {\n             commonRateLimits.put(\n-                String.format(\"%s-%s\", RESOURCE_RATE_LIMIT_HEADERS, matcher.group(1)), matcher.group(2));\n+                String.format(\"%s-%s\", RESOURCE_RATE_LIMIT_HEADER, matcher.group(1)), matcher.group(2));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Mjk3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473562979", "bodyText": "a specific rate limit header value from compute should be enough. without parsed here seems grammatically not correct.", "author": "weidongxu-microsoft", "createdAt": "2020-08-20T03:16:22Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java", "diffHunk": "@@ -83,7 +91,7 @@ public static ResourceManagerThrottlingInfo fromHeaders(HttpHeaders headers) {\n \n     /**\n      * refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n-     * @return a specific rate limit from compute\n+     * @return a specific rate limit header value without parsed from compute", "originalCommit": "ff61c045f401d702f38598667c1c018bd51e170a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODUzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628533", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-08-20T06:03:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2Mjk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "23201affcb71666463bbb1682d99b16465631290", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\nindex 1871e53d2f6..d438fce404f 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/utils/ResourceManagerThrottlingInfo.java\n\n@@ -91,7 +92,7 @@ public class ResourceManagerThrottlingInfo {\n \n     /**\n      * refer https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n-     * @return a specific rate limit header value without parsed from compute\n+     * @return a specific rate limit header value from compute\n      */\n     public String getResourceRateLimit() {\n         return resourceRateLimit;\n"}}, {"oid": "23201affcb71666463bbb1682d99b16465631290", "url": "https://github.com/Azure/azure-sdk-for-java/commit/23201affcb71666463bbb1682d99b16465631290", "message": "fix comment and move info test to a new class", "committedDate": "2020-08-20T03:25:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3MzA4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473573081", "bodyText": "The callback seems better to take a HttpResponse, so received be able to match request/response with throttling info.", "author": "weidongxu-microsoft", "createdAt": "2020-08-20T03:57:12Z", "path": "sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java", "diffHunk": "@@ -7,86 +7,28 @@\n import com.azure.core.http.HttpPipelineNextPolicy;\n import com.azure.core.http.HttpResponse;\n import com.azure.core.http.policy.HttpPipelinePolicy;\n-import com.azure.core.util.DateTimeRfc1123;\n-import com.azure.core.util.FluxUtil;\n-import com.azure.core.util.logging.ClientLogger;\n-import com.azure.resourcemanager.resources.fluentcore.utils.SdkContext;\n+import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.nio.charset.StandardCharsets;\n-import java.time.Duration;\n-import java.time.Instant;\n-import java.time.OffsetDateTime;\n-import java.util.concurrent.TimeUnit;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import java.util.function.Consumer;\n \n /**\n- * A Http Pipeline Policy for automatic retry when Azure Resource Manager is throttling\n- * because of too many read/write requests.\n- * <p>\n- * For each subscription and tenant, Azure Resource Manager limits read requests to 15,000 per hour and\n- *   write requests to 1,200 per hour. These limits apply to each Azure Resource Manager instance.\n+ * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private static final String RETRY_MESSAGE_FORMAT =\n-        \"Azure Resource Manager read/write per hour limit reached. Will retry in: %d seconds\";\n+    private final Consumer<? super ResourceManagerThrottlingInfo> callback;", "originalCommit": "ff61c045f401d702f38598667c1c018bd51e170a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYyODQ4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14270#discussion_r473628483", "bodyText": "done", "author": "ChenTanyi", "createdAt": "2020-08-20T06:03:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU3MzA4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e07388cdaaa794a8852c825c09a5c9ef5dec8ac7", "chunk": "diff --git a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\nindex 65eb244e101..dabfe7530bf 100644\n--- a/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\n+++ b/sdk/resourcemanager/azure-resourcemanager-resources/src/main/java/com/azure/resourcemanager/resources/fluentcore/policy/ResourceManagerThrottlingPolicy.java\n\n@@ -10,25 +10,30 @@ import com.azure.core.http.policy.HttpPipelinePolicy;\n import com.azure.resourcemanager.resources.fluentcore.utils.ResourceManagerThrottlingInfo;\n import reactor.core.publisher.Mono;\n \n-import java.util.function.Consumer;\n+import java.util.function.BiConsumer;\n \n /**\n  * A Http Pipeline Policy for automatic send throttling rate limit info to a call back function\n  */\n public class ResourceManagerThrottlingPolicy implements HttpPipelinePolicy {\n-    private final Consumer<? super ResourceManagerThrottlingInfo> callback;\n+    private final BiConsumer<? super HttpResponse, ? super ResourceManagerThrottlingInfo> callback;\n \n     /**\n      * Creates the resource manager throttling policy\n      * @param callback consume the ResourceManagerThrottlingInfo for every request, it is not a thread-safe method\n      */\n-    public ResourceManagerThrottlingPolicy(Consumer<? super ResourceManagerThrottlingInfo> callback) {\n+    public ResourceManagerThrottlingPolicy(\n+        BiConsumer<? super HttpResponse, ? super ResourceManagerThrottlingInfo> callback) {\n         this.callback = callback;\n     }\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n         return next.clone().process()\n-            .doOnNext(response -> callback.accept(ResourceManagerThrottlingInfo.fromHeaders(response.getHeaders())));\n+            .flatMap(response -> {\n+                HttpResponse bufferedResponse = response.buffer();\n+                callback.accept(bufferedResponse, ResourceManagerThrottlingInfo.fromHeaders(response.getHeaders()));\n+                return Mono.just(bufferedResponse);\n+            });\n     }\n }\n"}}, {"oid": "0824c0b1cc39ebf60d5994daecd05ddd5d43fe6e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0824c0b1cc39ebf60d5994daecd05ddd5d43fe6e", "message": "fix checkstyle", "committedDate": "2020-08-20T05:28:22Z", "type": "commit"}, {"oid": "e07388cdaaa794a8852c825c09a5c9ef5dec8ac7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e07388cdaaa794a8852c825c09a5c9ef5dec8ac7", "message": "return response as well in ResourceManagerThrottlingPolicy", "committedDate": "2020-08-20T05:58:34Z", "type": "commit"}, {"oid": "8887a1b13954b5ce754c6c726bc6fdaab192c81b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8887a1b13954b5ce754c6c726bc6fdaab192c81b", "message": "use static pattern", "committedDate": "2020-08-20T05:59:27Z", "type": "commit"}, {"oid": "e3bc20636537d723b524dc351d5bb457cf7a0000", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e3bc20636537d723b524dc351d5bb457cf7a0000", "message": "compile error in java 8", "committedDate": "2020-08-20T06:43:03Z", "type": "commit"}]}