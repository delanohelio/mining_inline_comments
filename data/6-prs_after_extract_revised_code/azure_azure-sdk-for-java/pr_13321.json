{"pr_number": 13321, "pr_title": "Allow Long as ID type in Entity for Cosmos DB", "pr_createdAt": "2020-07-20T02:52:55Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13321", "timeline": [{"oid": "1949d5b0e2052516353e8bc82e169aafdfce620b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1949d5b0e2052516353e8bc82e169aafdfce620b", "message": "Allow Long as ID type in Entity for Cosmos DB", "committedDate": "2020-07-20T02:51:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020095", "bodyText": "I think we need this change for ReactiveCosmosTemplate as well.", "author": "kushagraThapar", "createdAt": "2020-07-20T03:44:27Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java", "diffHunk": "@@ -454,9 +455,20 @@ public void deleteById(String containerName, Object id, PartitionKey partitionKe\n         Assert.notNull(ids, \"Id list should not be null\");\n         Assert.notNull(domainType, \"domainType should not be null.\");\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n-\n+        final List<Object> idList = new ArrayList<>();", "originalCommit": "1949d5b0e2052516353e8bc82e169aafdfce620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NjAyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457146023", "bodyText": "Should be, but there's o similar method in ReactiveCosmosTemplate,  I unified the procesing of ID type conversion.", "author": "moarychan", "createdAt": "2020-07-20T07:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjgzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522835", "bodyText": "Good, makes sense.", "author": "kushagraThapar", "createdAt": "2020-07-20T16:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "70aa09c72c749642780fdb06690dd1219f0856ad", "chunk": "diff --git a/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java b/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java\nindex c5ca9c5efef..922f72a97fd 100644\n--- a/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java\n+++ b/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/core/CosmosTemplate.java\n\n@@ -457,15 +454,7 @@ public class CosmosTemplate implements CosmosOperations, ApplicationContextAware\n         Assert.hasText(containerName, \"container should not be null, empty or only whitespaces\");\n         final List<Object> idList = new ArrayList<>();\n         for (ID id : ids) {\n-            if (id instanceof String) {\n-                idList.add(id);\n-            } else if (id instanceof Integer) {\n-                idList.add(Integer.toString((Integer) id));\n-            } else if (id instanceof Long) {\n-                idList.add(Long.toString((Long) id));\n-            } else {\n-                throw new IllegalQueryException(\"Type of id field must be String or Integer or Long\");\n-            }\n+            idList.add(CosmosUtils.getStringIDValue(id));\n         }\n         final DocumentQuery query = new DocumentQuery(Criteria.getInstance(CriteriaType.IN, \"id\",\n             Collections.singletonList(idList), Part.IgnoreCaseType.NEVER));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020565", "bodyText": "Please make sure this also works for ReactiveCosmosRepository", "author": "kushagraThapar", "createdAt": "2020-07-20T03:45:41Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/test/java/com/azure/spring/data/cosmos/repository/repository/LongIdDomainRepository.java", "diffHunk": "@@ -0,0 +1,12 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.spring.data.cosmos.repository.repository;\n+\n+import com.azure.spring.data.cosmos.domain.LongIdDomain;\n+import com.azure.spring.data.cosmos.repository.CosmosRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface LongIdDomainRepository extends CosmosRepository<LongIdDomain, Long> {", "originalCommit": "1949d5b0e2052516353e8bc82e169aafdfce620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NjU4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457146586", "bodyText": "added  ReactiveLongIdDomainPartitionPartitionRepositoryIT, please review", "author": "moarychan", "createdAt": "2020-07-20T07:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyNDEwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457524108", "bodyText": "Looks good, thanks.", "author": "kushagraThapar", "createdAt": "2020-07-20T16:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDU2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457020726", "bodyText": "Can we add a unit test for this in CosmosEntityInformationUnitTest.java class ?", "author": "kushagraThapar", "createdAt": "2020-07-20T03:46:06Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/repository/support/CosmosEntityInformation.java", "diffHunk": "@@ -201,8 +201,10 @@ private Field getIdField(Class<?> domainType) {\n             throw new IllegalArgumentException(\"domain should contain @Id field or field named id\");\n         } else if (idField.getType() != String.class\n                 && idField.getType() != Integer.class\n-                && idField.getType() != int.class) {\n-            throw new IllegalArgumentException(\"type of id field must be String or Integer\");\n+                && idField.getType() != int.class", "originalCommit": "1949d5b0e2052516353e8bc82e169aafdfce620b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE0NzAwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457147009", "bodyText": "Added in CosmosEntityInformationUnitTest, please check", "author": "moarychan", "createdAt": "2020-07-20T07:54:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjk1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522958", "bodyText": "Thanks.", "author": "kushagraThapar", "createdAt": "2020-07-20T16:02:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAyMDcyNg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "70aa09c72c749642780fdb06690dd1219f0856ad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/70aa09c72c749642780fdb06690dd1219f0856ad", "message": "Unified processing of ID type conversion and added test cases\nhttps://github.com/Azure/azure-sdk-for-java/issues/12712", "committedDate": "2020-07-20T07:50:53Z", "type": "commit"}, {"oid": "1e42ed2c5b89685d1124bf941b31b3fb9c3e7f4c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1e42ed2c5b89685d1124bf941b31b3fb9c3e7f4c", "message": "Updated code smell", "committedDate": "2020-07-20T09:45:22Z", "type": "commit"}, {"oid": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2", "message": "Updated code smell", "committedDate": "2020-07-20T09:46:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjYzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457522634", "bodyText": "This should return  type, why is it returning Object ?", "author": "kushagraThapar", "createdAt": "2020-07-20T16:01:57Z", "path": "sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java", "diffHunk": "@@ -45,4 +47,26 @@\n         //  Process response diagnostics\n         responseDiagnosticsProcessor.processResponseDiagnostics(responseDiagnostics);\n     }\n+\n+    /**\n+     * ID value should be string value, real id type will be String, Integer, Long,\n+     * all of these must be converted to String type.\n+     * @param idValue id value to find\n+     * @throws IllegalArgumentException thrown if id value fail the validation.\n+     * @throws IllegalQueryException thrown if id value fail the validation.\n+     * @return String id value\n+     */\n+    public static Object getStringIDValue(Object idValue) {", "originalCommit": "103ffa2f9ce3e08e1185e9388ab62e1cedbcbbc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0ODkzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13321#discussion_r457548934", "bodyText": "@moarychan - I have pushed a commit to fix this.", "author": "kushagraThapar", "createdAt": "2020-07-20T16:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMjYzNA=="}], "type": "inlineReview", "revised_code": {"commit": "2aa5b64cdd0f340bd00c26f6f726899bdc3ac98e", "chunk": "diff --git a/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java b/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java\nindex 191e6d2fceb..9f6aaa69479 100644\n--- a/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java\n+++ b/sdk/cosmos/azure-spring-data-cosmos/src/main/java/com/azure/spring/data/cosmos/common/CosmosUtils.java\n\n@@ -56,11 +56,11 @@ public class CosmosUtils {\n      * @throws IllegalQueryException thrown if id value fail the validation.\n      * @return String id value\n      */\n-    public static Object getStringIDValue(Object idValue) {\n+    public static String getStringIDValue(Object idValue) {\n         Assert.notNull(idValue, \"id should not be null\");\n         if (idValue instanceof String) {\n             Assert.hasText(idValue.toString(), \"id should not be empty or only whitespaces.\");\n-            return idValue;\n+            return (String) idValue;\n         } else if (idValue instanceof Integer) {\n             return Integer.toString((Integer) idValue);\n         } else if (idValue instanceof Long) {\n"}}, {"oid": "2aa5b64cdd0f340bd00c26f6f726899bdc3ac98e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2aa5b64cdd0f340bd00c26f6f726899bdc3ac98e", "message": "Updated getStringIDValue API to return String instead of Object", "committedDate": "2020-07-20T16:36:46Z", "type": "commit"}]}