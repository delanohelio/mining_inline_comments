{"pr_number": 9984, "pr_title": "Cosmos v4 encryption", "pr_createdAt": "2020-04-08T22:22:11Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9984", "timeline": [{"oid": "ea52d30d6ca35ed547dddad6b8a7fc89e120e03e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ea52d30d6ca35ed547dddad6b8a7fc89e120e03e", "message": "encryption draft", "committedDate": "2020-04-08T21:23:27Z", "type": "commit"}, {"oid": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "message": "added sample code", "committedDate": "2020-04-08T22:04:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNDQ3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406614478", "bodyText": "I see most of the classes here public - does this mean they are visible in the package or outside as well? We should try to restrict classes not needed in the public contract.", "author": "abhijitpai", "createdAt": "2020-04-10T05:55:47Z", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java", "diffHunk": "@@ -0,0 +1,112 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import javax.crypto.BadPaddingException;\n+import javax.crypto.Cipher;\n+import javax.crypto.IllegalBlockSizeException;\n+import javax.crypto.NoSuchPaddingException;\n+import javax.crypto.ShortBufferException;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.Closeable;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.NoSuchAlgorithmException;\n+\n+public class AesCryptoServiceProvider {", "originalCommit": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTE0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541142", "bodyText": "addressed. I made most of the classes to be package private.", "author": "moderakh", "createdAt": "2020-04-20T17:01:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNDQ3OA=="}], "type": "inlineReview", "revised_code": {"commit": "ed26d12bab4a71750919aa7458a886ec5a3989d9", "chunk": "diff --git a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java\nindex 05d4bccc0a8..83bfed28e8d 100644\n--- a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java\n+++ b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AesCryptoServiceProvider.java\n\n@@ -15,7 +15,7 @@ import java.security.InvalidAlgorithmParameterException;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n \n-public class AesCryptoServiceProvider {\n+class AesCryptoServiceProvider {\n     private final String ALGO_NAME = \"AES\";\n \n     private final Cipher cipher;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTE5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615196", "bodyText": "sensitive2?", "author": "abhijitpai", "createdAt": "2020-04-10T05:58:54Z", "path": "sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java", "diffHunk": "@@ -0,0 +1,136 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+package com.azure.cosmos;\n+\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256Algorithm;\n+import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256EncryptionKey;\n+import com.azure.cosmos.implementation.encryption.EncryptionType;\n+import com.azure.cosmos.implementation.encryption.TestUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava25.collect.ImmutableList;\n+import com.azure.cosmos.models.CosmosItemRequestOptions;\n+import com.azure.cosmos.models.CosmosItemResponse;\n+import com.azure.cosmos.models.ModelBridgeInternal;\n+import com.azure.cosmos.models.PartitionKey;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.UUID;\n+\n+/**\n+ * Code snippets for {@link ChangeFeedProcessor}\n+ */\n+public class EncryptionCodeSnippet {\n+\n+    public void encryptionSample() {\n+        CosmosClientBuilder builder = new CosmosClientBuilder();\n+\n+        CosmosClient client = builder.key(\"key\")\n+            .endpoint(\"endpoint\")\n+            .dataEncryptionKeyProvider(naiveDataEncryptionKeyProvider())\n+            .buildClient();\n+\n+\n+        CosmosContainer container = client.getDatabase(\"myDb\").getContainer(\"myCol\");\n+\n+        Pojo pojo = new Pojo();\n+        pojo.id = UUID.randomUUID().toString();\n+        pojo.mypk = UUID.randomUUID().toString();\n+        pojo.nonSensitive = UUID.randomUUID().toString();\n+        pojo.sensitive1 = \"this is a secret to be encrypted\";\n+        pojo.sensitive1 = \"this is a another secret to be encrypted\";", "originalCommit": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTQwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541402", "bodyText": "thanks addressed.", "author": "moderakh", "createdAt": "2020-04-20T17:01:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTE5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "21e98da976be75be2b3eee919d4a53e24241f26b", "chunk": "diff --git a/sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java b/sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java\nindex 9f3b2293f72..bb39a85c821 100644\n--- a/sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java\n+++ b/sdk/cosmos/azure-cosmos-encryption/src/samples/java/com/azure/cosmos/EncryptionCodeSnippet.java\n\n@@ -4,7 +4,7 @@ package com.azure.cosmos;\n \n import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256Algorithm;\n import com.azure.cosmos.implementation.encryption.AeadAes256CbcHmac256EncryptionKey;\n-import com.azure.cosmos.implementation.encryption.EncryptionType;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionType;\n import com.azure.cosmos.implementation.encryption.TestUtils;\n import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTUwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615508", "bodyText": "Maybe InMemoryKeyProvider instead of Java", "author": "abhijitpai", "createdAt": "2020-04-10T06:00:14Z", "path": "sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java", "diffHunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+\n+import javax.crypto.SecretKeyFactory;\n+import javax.crypto.spec.PBEKeySpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.Security;\n+import java.security.spec.InvalidKeySpecException;\n+import java.security.spec.KeySpec;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+\n+public class JavaKeyProvider implements DataEncryptionKeyProvider {", "originalCommit": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTMwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541303", "bodyText": "thanks. renamed this in the test.", "author": "moderakh", "createdAt": "2020-04-20T17:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTUwOA=="}], "type": "inlineReview", "revised_code": {"commit": "21e98da976be75be2b3eee919d4a53e24241f26b", "chunk": "diff --git a/sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java b/sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java\ndeleted file mode 100644\nindex 372f2b07de1..00000000000\n--- a/sdk/cosmos/azure-cosmos-encryption/src/test/java/com/azure/cosmos/implementation/encryption/JavaKeyProvider.java\n+++ /dev/null\n\n@@ -1,32 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-\n-package com.azure.cosmos.implementation.encryption;\n-\n-import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n-import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n-import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n-import org.bouncycastle.jce.provider.BouncyCastleProvider;\n-\n-import javax.crypto.SecretKeyFactory;\n-import javax.crypto.spec.PBEKeySpec;\n-import javax.crypto.spec.SecretKeySpec;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.Security;\n-import java.security.spec.InvalidKeySpecException;\n-import java.security.spec.KeySpec;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Random;\n-\n-public class JavaKeyProvider implements DataEncryptionKeyProvider {\n-    private Map<String, DataEncryptionKey> keyMap = new HashMap<>();\n-    public void addKey(DataEncryptionKey key) {\n-        keyMap.put(key.getId(), key);\n-    }\n-\n-    @Override\n-    public DataEncryptionKey loadDataEncryptionKey(String id, CosmosEncryptionAlgorithm algorithm) {\n-        return keyMap.get(id);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTkzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406615936", "bodyText": "encryptionAlgorithm - now we save the string", "author": "abhijitpai", "createdAt": "2020-04-10T06:02:15Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";", "originalCommit": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTgxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541812", "bodyText": "thanks It is in par with .net now. we can decrypt what dotnet can encrypt", "author": "moderakh", "createdAt": "2020-04-20T17:02:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNTkzNg=="}], "type": "inlineReview", "revised_code": {"commit": "21e98da976be75be2b3eee919d4a53e24241f26b", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\nindex a30737f0641..dbfe4ca2d87 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\n\n@@ -193,9 +193,12 @@ public final class Constants {\n         public static final String  KeyWrapMetadataType = \"type\";\n         public static final String  KeyWrapMetadataValue = \"value\";\n         public static final String  EncryptedInfo = \"_ei\";\n-        public static final String  DataEncryptionKeyRid = \"_ek\";\n+//        public static final String  DataEncryptionKeyRid = \"_ek\";\n         public static final String  EncryptionFormatVersion = \"_ef\";\n         public static final String  EncryptedData = \"_ed\";\n+        public static final String  EncryptionAlgorithm = \"_ea\";\n+        public static final String  DataEncryptionKeyId = \"_en\";\n+\n     }\n \n     public static final class UrlEncodingInfo {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjEzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r406616134", "bodyText": "We use _en now for the name of the DEK instead of RID. There is also _ea to save the algo name.", "author": "abhijitpai", "createdAt": "2020-04-10T06:03:01Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java", "diffHunk": "@@ -185,6 +185,17 @@\n         public static final String SSL_COMPLETION_HANDLER_NAME = \"ssl-completion-handler\";\n         public static final String HTTP_PROXY_HANDLER_NAME = \"http-proxy-handler\";\n         public static final String LOGGING_HANDLER_NAME = \"logging-handler\";\n+\n+        // encryption\n+        public static final String WrappedDataEncryptionKey = \"wrappedDataEncryptionKey\";\n+        public static final String  EncryptionAlgorithmId = \"encryptionAlgorithmId\";\n+        public static final String  KeyWrapMetadata = \"keyWrapMetadata\";\n+        public static final String  KeyWrapMetadataType = \"type\";\n+        public static final String  KeyWrapMetadataValue = \"value\";\n+        public static final String  EncryptedInfo = \"_ei\";\n+        public static final String  DataEncryptionKeyRid = \"_ek\";", "originalCommit": "bfdceec5fa6cb9329234dbd1f209bd6374b4c3e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0MTk4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r411541984", "bodyText": "thanks addressed. It is in par with .net now. we can decrypt what dotnet can encrypt", "author": "moderakh", "createdAt": "2020-04-20T17:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "21e98da976be75be2b3eee919d4a53e24241f26b", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\nindex a30737f0641..dbfe4ca2d87 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Constants.java\n\n@@ -193,9 +193,12 @@ public final class Constants {\n         public static final String  KeyWrapMetadataType = \"type\";\n         public static final String  KeyWrapMetadataValue = \"value\";\n         public static final String  EncryptedInfo = \"_ei\";\n-        public static final String  DataEncryptionKeyRid = \"_ek\";\n+//        public static final String  DataEncryptionKeyRid = \"_ek\";\n         public static final String  EncryptionFormatVersion = \"_ef\";\n         public static final String  EncryptedData = \"_ed\";\n+        public static final String  EncryptionAlgorithm = \"_ea\";\n+        public static final String  DataEncryptionKeyId = \"_en\";\n+\n     }\n \n     public static final class UrlEncodingInfo {\n"}}, {"oid": "68a98c0c0d6facf906142c56df6fe3c129b6fd9b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/68a98c0c0d6facf906142c56df6fe3c129b6fd9b", "message": "Merge branch 'master' into users/moderakh/v4-encryption-merge-master", "committedDate": "2020-04-14T21:04:32Z", "type": "commit"}, {"oid": "e1452a4b2c5706b689e6f65b37cb6b2bcf211f36", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e1452a4b2c5706b689e6f65b37cb6b2bcf211f36", "message": "undo changes for bom", "committedDate": "2020-04-14T21:08:52Z", "type": "commit"}, {"oid": "21e98da976be75be2b3eee919d4a53e24241f26b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/21e98da976be75be2b3eee919d4a53e24241f26b", "message": "encryption and storing key in cosmos container", "committedDate": "2020-04-20T16:45:35Z", "type": "commit"}, {"oid": "ed26d12bab4a71750919aa7458a886ec5a3989d9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed26d12bab4a71750919aa7458a886ec5a3989d9", "message": "minor cleanup", "committedDate": "2020-04-20T16:55:45Z", "type": "commit"}, {"oid": "91c54351e980bec77c1642bd534d2d598f03f189", "url": "https://github.com/Azure/azure-sdk-for-java/commit/91c54351e980bec77c1642bd534d2d598f03f189", "message": "Merge branch 'master' into users/moderakh/merge-master-to-encryption", "committedDate": "2020-04-20T16:58:36Z", "type": "commit"}, {"oid": "b13ee3a707b32359535182e25e91b4863aae2f8f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b13ee3a707b32359535182e25e91b4863aae2f8f", "message": "minor cleanup", "committedDate": "2020-04-20T21:21:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjQ0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412506441", "bodyText": "Why are these modeled as Illegalstate?\nNot fully related to this PR and can be addressed through separate PR.", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:32:18Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java", "diffHunk": "@@ -560,6 +565,15 @@ public ValueHolder(V v) {\n         }\n     }\n \n+    public static <T> T parse(byte[] item, Class<T> itemClassType, EncryptionOptions encryptionOptions) {\n+\n+        try {\n+            return getSimpleObjectMapper().readValue(item, itemClassType);\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Failed to get POJO.\", e);", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDY0MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445760640", "bodyText": "We are currently (even prior to this PR) were throwing IllegalStateException on json parsing failure.\nI agree we need to change this everywhere. Will track this.", "author": "moderakh", "createdAt": "2020-06-25T18:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNjQ0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "408d76ba78902533d870611913ecda5931e193ee", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java\nindex c370135fbe9..3a153674966 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Utils.java\n\n@@ -565,6 +578,18 @@ public class Utils {\n         }\n     }\n \n+    public static <T> T parse(byte[] item, Class<T> itemClassType, ItemDeserializer itemDeserializer) {\n+        if (Utils.isEmpty(item)) {\n+            return null;\n+        }\n+\n+        if (itemDeserializer == null) {\n+            return Utils.parse(item, itemClassType);\n+        }\n+\n+        return itemDeserializer.parseFrom(itemClassType, item);\n+    }\n+\n     public static <T> T parse(byte[] item, Class<T> itemClassType, EncryptionOptions encryptionOptions) {\n \n         try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNzA1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412507051", "bodyText": "Is it expected?", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:33:31Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java", "diffHunk": "@@ -0,0 +1,13 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+\n+/**\n+ * Encryption types that may be supported.\n+ */\n+public enum EncryptionType {\n+    PLAIN_TEXT,", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MDkzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445760930", "bodyText": "thanks for pointing out. removed.", "author": "moderakh", "createdAt": "2020-06-25T18:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwNzA1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ce4f3ea408bc12eeace127a0890b7f64f4dfe51f", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java\nindex 324f5030bd5..0cedd828ef6 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/EncryptionType.java\n\n@@ -8,6 +8,5 @@ package com.azure.cosmos.implementation.encryption.api;\n  * Encryption types that may be supported.\n  */\n public enum EncryptionType {\n-    PLAIN_TEXT,\n     RANDOMIZED;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODE1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412508158", "bodyText": "loadDataEncryptionKey [](start = 22, length = 21)\n\nloadDataEncryptionKey -> fetchDataEncryptionKey or getDataEncryptionKey\nload kind of hinting at expected statefulness/mutability of the object", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:35:32Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+/**\n+ * Abstraction for a provider to get data encryption keys for use in client-side encryption.\n+ * See https://aka.ms/CosmosClientEncryption for more information on client-side encryption support in Azure Cosmos DB.\n+ */\n+public interface DataEncryptionKeyProvider {\n+\n+    /**\n+     * Retrieves the data encryption key for the given id.\n+     * @param id Identifier of the data encryption key.\n+     * @param encryptionAlgorithm Encryption algorithm that the retrieved key will be used with.\n+     * @return Data encryption key bytes.\n+     * TODO: @moderakh look into if this method needs to be async.\n+     */\n+    DataEncryptionKey loadDataEncryptionKey(", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2MjEwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445762101", "bodyText": "sure, changed to get.", "author": "moderakh", "createdAt": "2020-06-25T18:41:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODE1OA=="}], "type": "inlineReview", "revised_code": {"commit": "ce4f3ea408bc12eeace127a0890b7f64f4dfe51f", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java\nindex 9b1b5a5aaa7..15a8973d0a2 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/DataEncryptionKeyProvider.java\n\n@@ -16,7 +16,7 @@ public interface DataEncryptionKeyProvider {\n      * @return Data encryption key bytes.\n      * TODO: @moderakh look into if this method needs to be async.\n      */\n-    DataEncryptionKey loadDataEncryptionKey(\n+    DataEncryptionKey getDataEncryptionKey(\n         String id,\n         String encryptionAlgorithm);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODc4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412508780", "bodyText": "Does the string match with .NET version?", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:36:37Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/api/CosmosEncryptionAlgorithm.java", "diffHunk": "@@ -0,0 +1,18 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption.api;\n+\n+// TODO: enum string type?\n+\n+/**\n+ * Algorithms for use with client-side encryption support in Azure Cosmos DB.\n+ */\n+public class CosmosEncryptionAlgorithm {\n+\n+    /**\n+     * Authenticated Encryption algorithm based on https://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05\n+     */\n+    public static final String AEAes256CbcHmacSha256Randomized = \"AEAes256CbcHmacSha256Randomized\";", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2ODg0NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445768844", "bodyText": "yes it does, we can do full e2e encryption by dot net decryption by java", "author": "moderakh", "createdAt": "2020-06-25T18:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODc4MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwOTcyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412509726", "bodyText": "Why decryption is excluded?", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:38:32Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -224,7 +225,7 @@ public String getId() {\n                                    item,\n                                    requestOptions,\n                                    true)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, getItemDeserializerWithoutDecryption()))", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgwNjQ4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445806481", "bodyText": "initially I didn't want to decrypt the encrypted fields on write. so for that reason decryption was excluded for write operation.\nHowever this is changed now to be in par with .Net. addressed.", "author": "moderakh", "createdAt": "2020-06-25T20:02:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwOTcyNg=="}], "type": "inlineReview", "revised_code": {"commit": "90db035f158d234a8589ec56da3d2039ca9e058e", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\nindex 9ec3198e166..1a19c26fb7c 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\n\n@@ -225,7 +230,7 @@ public class CosmosAsyncContainer {\n                                    item,\n                                    requestOptions,\n                                    true)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, getItemDeserializerWithoutDecryption()))\n+                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, getItemDeserializer()))\n                    .single();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxMTY4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412511687", "bodyText": "Is the implementation leveraged from other libraries?\nIf those implementations are in same shared repo, any possibility of avoiding the code copy?", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:42:12Z", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java", "diffHunk": "@@ -0,0 +1,382 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionType;\n+\n+\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+\n+/**\n+ * This class implements authenticated encryption algorithm with associated data as described in\n+ * http://tools.ietf.org/html/draft-mcgrew-aead-aes-cbc-hmac-sha2-05 - specifically this implements\n+ * AEAD_AES_256_CBC_HMAC_SHA256 algorithm.\n+ * This (and AeadAes256CbcHmac256EncryptionKey) implementation for Cosmos DB is same as the existing\n+ * SQL client implementation with StyleCop related changes - also, we restrict to randomized encryption to start with.\n+ */\n+class AeadAes256CbcHmac256Algorithm implements DataEncryptionKey {\n+\n+    public final static String ALGORITHM_NAME = \"AEAD_AES_256_CBC_HMAC_SHA256\";", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTcwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445799703", "bodyText": "I didn't find any lib providing this out of the box to be used as a lib. I will look again after the PR merges if we can re-use any other lib.", "author": "moderakh", "createdAt": "2020-06-25T19:49:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxMTY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d1ce16d985bc5a4d786d9f27f614b27a0426c27c", "chunk": "diff --git a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java\nindex e92dec716cc..5ee1be227aa 100644\n--- a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java\n+++ b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/AeadAes256CbcHmac256Algorithm.java\n\n@@ -332,7 +332,6 @@ class AeadAes256CbcHmac256Algorithm implements DataEncryptionKey {\n \n             try (AesCryptoServiceProvider.ICryptoTransform decryptor = aesAlg.createDecryptor()) {\n                 plainText = decryptor.transformFinalBlock(cipherText, offset, count);\n-\n             }\n         } finally {\n             // Return the provider to the pool.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDQ2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r412514466", "bodyText": "Does it work for nested JPath?", "author": "kirankumarkolli", "createdAt": "2020-04-21T21:47:21Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {\n+\n+    public ObjectNode encryptAsync(\n+        ObjectNode itemJObj,\n+        EncryptionOptions encryptionOptions,\n+        DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        assert (itemJObj != null);\n+        assert (encryptionOptions != null);\n+        assert (encryptionOptions.getPathsToEncrypt() != null);\n+        assert (!encryptionOptions.getPathsToEncrypt().isEmpty());\n+\n+        for (String path : encryptionOptions.getPathsToEncrypt()) {\n+            if (StringUtils.isEmpty(path) || path.charAt(0) != '/' || path.lastIndexOf('/') != 0) {\n+                throw new IllegalArgumentException(\"Invalid encryption path: \" + path);\n+            }\n+        }\n+\n+        if (encryptionOptions.getDataEncryptionKeyId() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getDataEncryptionKeyId.\" + encryptionOptions.getDataEncryptionKeyId());\n+        }\n+\n+        if (encryptionOptions.getEncryptionAlgorithm() == null) {\n+            throw new IllegalArgumentException(\"Invalid encryption options: encryptionOptions.getEncryptionAlgorithm.\" + encryptionOptions.getEncryptionAlgorithm());\n+        }\n+\n+        if (dataEncryptionKeyProvider == null) {\n+            throw new IllegalArgumentException(RMResources.EncryptionKeyProviderNotConfigured);\n+        }\n+\n+        ObjectNode toEncryptJObj = Utils.getSimpleObjectMapper().createObjectNode();\n+\n+        for (String pathToEncrypt : encryptionOptions.getPathsToEncrypt()) {\n+            String propertyName = pathToEncrypt.substring(1);", "originalCommit": "b13ee3a707b32359535182e25e91b4863aae2f8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc2OTI1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r445769254", "bodyText": "for now it doesn't I am tracking this after this PR.", "author": "moderakh", "createdAt": "2020-06-25T18:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNDQ2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ce4f3ea408bc12eeace127a0890b7f64f4dfe51f", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\nindex 3a21d196d32..6be714545ee 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\n\n@@ -67,7 +67,7 @@ public class EncryptionProcessor {\n         SensitiveDataTransformer serializer = new SensitiveDataTransformer();\n         byte[] plainText = serializer.toByteArray(toEncryptJObj);\n \n-        DataEncryptionKey dataEncryptionKey = dataEncryptionKeyProvider.loadDataEncryptionKey(encryptionOptions.getDataEncryptionKeyId(), encryptionOptions.getEncryptionAlgorithm());\n+        DataEncryptionKey dataEncryptionKey = dataEncryptionKeyProvider.getDataEncryptionKey(encryptionOptions.getDataEncryptionKeyId(), encryptionOptions.getEncryptionAlgorithm());\n \n         EncryptionProperties encryptionProperties = new EncryptionProperties(\n             /* encryptionFormatVersion: */ 2,\n"}}, {"oid": "408d76ba78902533d870611913ecda5931e193ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/408d76ba78902533d870611913ecda5931e193ee", "message": "Merge branch 'master' into users/moderakh/encryption-20200618", "committedDate": "2020-06-23T23:55:40Z", "type": "commit"}, {"oid": "d8056720845f325b696d1270c2970d2d9aa183ed", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d8056720845f325b696d1270c2970d2d9aa183ed", "message": "Merge branch 'master' into feature/cosmos/v4-encryption", "committedDate": "2020-06-24T00:26:45Z", "type": "commit"}, {"oid": "a05704f277143e6becfa7204d3c314ebb07f6dd8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a05704f277143e6becfa7204d3c314ebb07f6dd8", "message": "added back removed files", "committedDate": "2020-06-24T00:28:19Z", "type": "commit"}, {"oid": "d308e38faad65a314f2ebb64a32ff2fbe6e50d3a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d308e38faad65a314f2ebb64a32ff2fbe6e50d3a", "message": "Merge branch 'master' into feature/cosmos/v4-encryption", "committedDate": "2020-06-25T18:14:59Z", "type": "commit"}, {"oid": "ce4f3ea408bc12eeace127a0890b7f64f4dfe51f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ce4f3ea408bc12eeace127a0890b7f64f4dfe51f", "message": "address code review comments", "committedDate": "2020-06-25T18:50:41Z", "type": "commit"}, {"oid": "90db035f158d234a8589ec56da3d2039ca9e058e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90db035f158d234a8589ec56da3d2039ca9e058e", "message": "decrypt on write as well", "committedDate": "2020-06-25T20:01:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNDY4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447924689", "bodyText": "Indent", "author": "kirankumarkolli", "createdAt": "2020-06-30T19:22:19Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java", "diffHunk": "@@ -453,11 +454,14 @@ public String getId() {\n         if (options == null) {\n             options = new CosmosItemRequestOptions();\n         }\n+\n         ModelBridgeInternal.setPartitionKey(options, partitionKey);\n         RequestOptions requestOptions = ModelBridgeInternal.toRequestOptions(options);\n+\n         return this.getDatabase().getDocClientWrapper()\n                    .readDocument(getItemLink(itemId), requestOptions)\n-                   .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType))\n+            // TODO: add a deserializer and pass down?", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTAyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450419024", "bodyText": "thanks fixed.", "author": "moderakh", "createdAt": "2020-07-06T18:55:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNDY4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\nindex 1a19c26fb7c..c48a8f82aab 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosAsyncContainer.java\n\n@@ -460,7 +460,7 @@ public class CosmosAsyncContainer {\n \n         return this.getDatabase().getDocClientWrapper()\n                    .readDocument(getItemLink(itemId), requestOptions)\n-            // TODO: add a deserializer and pass down?\n+                   // TODO: add a deserializer and pass down?\n                    .map(response -> ModelBridgeInternal.createCosmosAsyncItemResponse(response, itemType, this.getItemDeserializer()))\n                    .single();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTE5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447925197", "bodyText": "missing warning", "author": "kirankumarkolli", "createdAt": "2020-06-30T19:23:10Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODk4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418981", "bodyText": "thanks. fixed.", "author": "moderakh", "createdAt": "2020-07-06T18:55:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\nindex 70a115f1512..e7c26c76e6f 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\n\n@@ -96,6 +96,7 @@ public final class CosmosBridgeInternal {\n         return copy;\n     }\n \n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,\n                                                          DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n         cosmosClientBuilder.dataEncryptionKeyProvider(dataEncryptionKeyProvider);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTQ5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447925493", "bodyText": "Will it be revisited once the stream contracts are available?", "author": "kirankumarkolli", "createdAt": "2020-06-30T19:23:45Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java", "diffHunk": "@@ -94,4 +95,10 @@ public static CosmosClientBuilder cloneCosmosClientBuilder(CosmosClientBuilder b\n \n         return copy;\n     }\n+\n+    public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,\n+                                                         DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n+        cosmosClientBuilder.dataEncryptionKeyProvider(dataEncryptionKeyProvider);", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODY0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418642", "bodyText": "yes. I am committed to that.", "author": "moderakh", "createdAt": "2020-07-06T18:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNTQ5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\nindex 70a115f1512..e7c26c76e6f 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosBridgeInternal.java\n\n@@ -96,6 +96,7 @@ public final class CosmosBridgeInternal {\n         return copy;\n     }\n \n+    @Warning(value = INTERNAL_USE_ONLY_WARNING)\n     public static CosmosClientBuilder setDateKeyProvider(CosmosClientBuilder cosmosClientBuilder,\n                                                          DataEncryptionKeyProvider dataEncryptionKeyProvider) {\n         cosmosClientBuilder.dataEncryptionKeyProvider(dataEncryptionKeyProvider);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjU3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r447926574", "bodyText": "ItemDeserializer [](start = 17, length = 16)\n\nItemDeserializer vs core serialzer contracts", "author": "kirankumarkolli", "createdAt": "2020-06-30T19:25:43Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/ItemDeserializer.java", "diffHunk": "@@ -0,0 +1,68 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation;\n+\n+import com.azure.cosmos.implementation.encryption.EncryptionProcessor;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+\n+public interface ItemDeserializer {", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODkxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450418912", "bodyText": "this is internal class, not public contract. For now keeping it as is.", "author": "moderakh", "createdAt": "2020-07-06T18:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjU3NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NjM3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r448256374", "bodyText": "How are the soft contracts managed?\nAre there gates to treat them as contract and don't regress?", "author": "kirankumarkolli", "createdAt": "2020-07-01T10:02:22Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -490,6 +492,15 @@ public CosmosClientBuilder preferredRegions(List<String> preferredRegions) {\n         return this;\n     }\n \n+    CosmosClientBuilder dataEncryptionKeyProvider(DataEncryptionKeyProvider dataEncryptionKeyProvider) {", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NzA5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r448257093", "bodyText": "Will it be pushed the encryption package?", "author": "kirankumarkolli", "createdAt": "2020-07-01T10:03:49Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java", "diffHunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.implementation.Constants;\n+import com.azure.cosmos.implementation.InternalServerErrorException;\n+import com.azure.cosmos.implementation.RMResources;\n+import com.azure.cosmos.implementation.Utils;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.CosmosEncryptionAlgorithm;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.implementation.encryption.api.EncryptionOptions;\n+import com.azure.cosmos.implementation.guava27.Strings;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.JsonNodeType;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+public class EncryptionProcessor {", "originalCommit": "90db035f158d234a8589ec56da3d2039ca9e058e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTI5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450419293", "bodyText": "in upcoming PRs once I bring in new changes form .Net we will get parity and this will move.", "author": "moderakh", "createdAt": "2020-07-06T18:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI1NzA5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d1ce16d985bc5a4d786d9f27f614b27a0426c27c", "chunk": "diff --git a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\nindex 6be714545ee..04e225a377f 100644\n--- a/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\n+++ b/sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/encryption/EncryptionProcessor.java\n\n@@ -126,7 +126,7 @@ public class EncryptionProcessor {\n         return itemJObj;\n     }\n \n-    class SensitiveDataTransformer {\n+    static class SensitiveDataTransformer {\n         public <T> ObjectNode toObjectNode(byte[] plainText) {\n             if (Utils.isEmpty(plainText)) {\n                 return null;\n"}}, {"oid": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "message": "review comments", "committedDate": "2020-07-06T18:57:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDEyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r450614129", "bodyText": "Is it a requirement on container definition?\nThen the code-docs and samples needs to explicit cover it.", "author": "kirankumarkolli", "createdAt": "2020-07-07T05:10:29Z", "path": "sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.cosmos.implementation.encryption;\n+\n+import com.azure.cosmos.CosmosAsyncContainer;\n+import com.azure.cosmos.CosmosAsyncDatabase;\n+import com.azure.cosmos.implementation.apachecommons.lang.StringUtils;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKey;\n+import com.azure.cosmos.implementation.encryption.api.DataEncryptionKeyProvider;\n+import com.azure.cosmos.models.CosmosContainerResponse;\n+import reactor.core.publisher.Mono;\n+import reactor.util.function.Tuple2;\n+\n+import java.time.Duration;\n+import java.util.List;\n+\n+public class CosmosDataEncryptionKeyProvider implements DataEncryptionKeyProvider {\n+    private static final String ContainerPartitionKeyPath = \"/id\";", "originalCommit": "0e0ce5ba96f689689f5c9d8005ead6b1e2506378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNTE1NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9984#discussion_r451835155", "bodyText": "sure added a TODO for tracking that.", "author": "moderakh", "createdAt": "2020-07-08T21:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNDEyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e43a3c7240dadd11a2934f606ea223932e42cb6b", "chunk": "diff --git a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java\nindex f5afb74b448..682c438abe9 100644\n--- a/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java\n+++ b/sdk/cosmos/azure-cosmos-encryption/src/main/java/com/azure/cosmos/implementation/encryption/CosmosDataEncryptionKeyProvider.java\n\n@@ -16,6 +16,7 @@ import java.time.Duration;\n import java.util.List;\n \n public class CosmosDataEncryptionKeyProvider implements DataEncryptionKeyProvider {\n+    // TODO: proper sample and documentation on container\n     private static final String ContainerPartitionKeyPath = \"/id\";\n     private final DataEncryptionKeyContainerCore dataEncryptionKeyContainerCore;\n     private final DekCache DekCache;\n"}}, {"oid": "e43a3c7240dadd11a2934f606ea223932e42cb6b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e43a3c7240dadd11a2934f606ea223932e42cb6b", "message": "code review", "committedDate": "2020-07-08T21:28:37Z", "type": "commit"}, {"oid": "7aca1feeea843607c3259a84d7df85cff16c16e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7aca1feeea843607c3259a84d7df85cff16c16e9", "message": "Merge branch 'master' into feature/cosmos/v4-encryption", "committedDate": "2020-07-08T21:32:34Z", "type": "commit"}, {"oid": "d1ce16d985bc5a4d786d9f27f614b27a0426c27c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d1ce16d985bc5a4d786d9f27f614b27a0426c27c", "message": "spotbug issues", "committedDate": "2020-07-09T20:35:37Z", "type": "commit"}, {"oid": "d989e1332c3aca0cf5ec0e0c21eae1a8e908d997", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d989e1332c3aca0cf5ec0e0c21eae1a8e908d997", "message": "checkstyle rules", "committedDate": "2020-07-10T17:10:40Z", "type": "commit"}, {"oid": "811b035b815518a38f4ca0566896d0547f9c7ddc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/811b035b815518a38f4ca0566896d0547f9c7ddc", "message": "fixed checkstyle", "committedDate": "2020-07-10T17:12:58Z", "type": "commit"}, {"oid": "b7578b9439d47bd3277bdbc778766d1b607f1c63", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b7578b9439d47bd3277bdbc778766d1b607f1c63", "message": "code style rule", "committedDate": "2020-07-10T17:19:19Z", "type": "commit"}, {"oid": "38226cc0a36cc1ad608e3442be0944ff1289043d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/38226cc0a36cc1ad608e3442be0944ff1289043d", "message": "infra update", "committedDate": "2020-07-10T17:38:05Z", "type": "commit"}, {"oid": "9fad903e75d1407cd955eb315b637b3ddea2c6c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9fad903e75d1407cd955eb315b637b3ddea2c6c0", "message": "Merge branch 'master' into feature/cosmos/v4-encryption", "committedDate": "2020-07-10T18:40:48Z", "type": "commit"}, {"oid": "903d43d274272b34873cc742f3ae506609b46049", "url": "https://github.com/Azure/azure-sdk-for-java/commit/903d43d274272b34873cc742f3ae506609b46049", "message": "fixed typo", "committedDate": "2020-07-10T18:57:57Z", "type": "commit"}, {"oid": "590a8105a78ecb333902daf95fd414ced25303c6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/590a8105a78ecb333902daf95fd414ced25303c6", "message": "fixed gate ci", "committedDate": "2020-07-10T19:11:22Z", "type": "commit"}, {"oid": "902acf848852d8cabaea3832de28eccdec98b8f8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/902acf848852d8cabaea3832de28eccdec98b8f8", "message": "pom file", "committedDate": "2020-07-10T19:24:34Z", "type": "commit"}, {"oid": "1efcf5b0c5d373a807330a8a1b0c4683ebed7765", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1efcf5b0c5d373a807330a8a1b0c4683ebed7765", "message": "dependency fix", "committedDate": "2020-07-10T19:36:23Z", "type": "commit"}, {"oid": "bde97d004e64c3301cb837675b5696028b17a7eb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bde97d004e64c3301cb837675b5696028b17a7eb", "message": "code review", "committedDate": "2020-07-10T20:07:24Z", "type": "commit"}, {"oid": "9ea0a6e6b1ec2af207e0bfe51ed77ba353bcce51", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9ea0a6e6b1ec2af207e0bfe51ed77ba353bcce51", "message": "removed bcprov-ext-jdk15on", "committedDate": "2020-07-10T20:11:52Z", "type": "commit"}, {"oid": "86d25ff1bdb7342797a1630230d68da0bd5195a4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/86d25ff1bdb7342797a1630230d68da0bd5195a4", "message": "code review comment", "committedDate": "2020-07-10T20:15:46Z", "type": "commit"}, {"oid": "ec628f606a016aa1ccc22026600760077594e1c1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec628f606a016aa1ccc22026600760077594e1c1", "message": "code review comment addressed", "committedDate": "2020-07-10T20:17:14Z", "type": "commit"}, {"oid": "f8d0a37e95130c38f28b33a437ab0c33e5205d04", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f8d0a37e95130c38f28b33a437ab0c33e5205d04", "message": "fixed version mismatch", "committedDate": "2020-07-10T20:25:07Z", "type": "commit"}, {"oid": "5e97dd866317fb0677d6846c917b485f60f6fa68", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5e97dd866317fb0677d6846c917b485f60f6fa68", "message": "code review comments", "committedDate": "2020-07-10T21:00:32Z", "type": "commit"}, {"oid": "bf0829d20ab8bc6ea15ce0707b9e4857572aefba", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bf0829d20ab8bc6ea15ce0707b9e4857572aefba", "message": "readme", "committedDate": "2020-07-10T21:45:19Z", "type": "commit"}, {"oid": "de10a875d9e9cce6cd4f14d3ac23ea0f4c20e76a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/de10a875d9e9cce6cd4f14d3ac23ea0f4c20e76a", "message": "readme update", "committedDate": "2020-07-10T21:53:48Z", "type": "commit"}, {"oid": "1904fbd201e1be1526b4cd50a8a6a7a13df1bc79", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1904fbd201e1be1526b4cd50a8a6a7a13df1bc79", "message": "readme update", "committedDate": "2020-07-10T22:04:49Z", "type": "commit"}, {"oid": "bc8761628d2c828b927e5271f3af5ab2fe42934e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bc8761628d2c828b927e5271f3af5ab2fe42934e", "message": "readme update", "committedDate": "2020-07-10T22:08:24Z", "type": "commit"}, {"oid": "89aa6ee9be1f5627468c6703617a0101e4657b95", "url": "https://github.com/Azure/azure-sdk-for-java/commit/89aa6ee9be1f5627468c6703617a0101e4657b95", "message": "changelog added", "committedDate": "2020-07-10T22:12:56Z", "type": "commit"}, {"oid": "1a4b69fd01635a16259ce1db107d198e1b61c2fc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a4b69fd01635a16259ce1db107d198e1b61c2fc", "message": "readme update", "committedDate": "2020-07-10T22:21:12Z", "type": "commit"}, {"oid": "36e325e06ba20e60fa855ee21bb14257958c3b83", "url": "https://github.com/Azure/azure-sdk-for-java/commit/36e325e06ba20e60fa855ee21bb14257958c3b83", "message": "one word", "committedDate": "2020-07-10T22:30:27Z", "type": "commit"}, {"oid": "eea0781c99f78409dc4f139f0bc6205ffd7dd40f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eea0781c99f78409dc4f139f0bc6205ffd7dd40f", "message": "readme verifier skip", "committedDate": "2020-07-10T23:03:07Z", "type": "commit"}, {"oid": "cd8f025856546be21ba3965f82974c64def1e56c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cd8f025856546be21ba3965f82974c64def1e56c", "message": "run only unit tests in unit test phase", "committedDate": "2020-07-10T23:46:25Z", "type": "commit"}, {"oid": "3feb4272ea8d6745cd8b90364d2c60c456014aab", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3feb4272ea8d6745cd8b90364d2c60c456014aab", "message": "minor test fix", "committedDate": "2020-07-14T19:26:37Z", "type": "commit"}, {"oid": "6e97928c42273b269a6a97702032cfe34efdc14a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6e97928c42273b269a6a97702032cfe34efdc14a", "message": "update", "committedDate": "2020-07-15T22:01:29Z", "type": "commit"}, {"oid": "5d21d9b138651b893112e075eeb0c4e421917664", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5d21d9b138651b893112e075eeb0c4e421917664", "message": "Merge branch 'master' into feature/cosmos/v4-encryption", "committedDate": "2020-07-15T22:12:38Z", "type": "commit"}, {"oid": "f0175b62779e2de32b8a7391e504d0128b7ac7fc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f0175b62779e2de32b8a7391e504d0128b7ac7fc", "message": "version update", "committedDate": "2020-07-15T22:13:34Z", "type": "commit"}, {"oid": "17ba37db7ea970d1dbcb71d998d7f866c8eb7d1d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/17ba37db7ea970d1dbcb71d998d7f866c8eb7d1d", "message": "fixed a few tests", "committedDate": "2020-07-15T23:03:54Z", "type": "commit"}, {"oid": "ec27fbf590e53652cc71d9b94b6a075fce7e5350", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec27fbf590e53652cc71d9b94b6a075fce7e5350", "message": "fixed test", "committedDate": "2020-07-15T23:05:35Z", "type": "commit"}, {"oid": "d45fd99d5821cb6e9886fb7ef618792df0f3a479", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d45fd99d5821cb6e9886fb7ef618792df0f3a479", "message": "fix NPE", "committedDate": "2020-07-16T17:39:15Z", "type": "commit"}]}