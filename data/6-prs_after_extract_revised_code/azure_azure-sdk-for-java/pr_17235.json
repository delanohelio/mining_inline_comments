{"pr_number": 17235, "pr_title": "75 tags", "pr_createdAt": "2020-11-05T19:32:36Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17235", "timeline": [{"oid": "397c7f749eea75fc9b43870e335c3c0c91306972", "url": "https://github.com/Azure/azure-sdk-for-java/commit/397c7f749eea75fc9b43870e335c3c0c91306972", "message": "Generated code for 75 tags updates", "committedDate": "2020-11-03T19:23:13Z", "type": "commit"}, {"oid": "79692d2a4bad9431570637a3287803556168e292", "url": "https://github.com/Azure/azure-sdk-for-java/commit/79692d2a4bad9431570637a3287803556168e292", "message": "stg 75 blob tags", "committedDate": "2020-11-05T01:10:49Z", "type": "commit"}, {"oid": "695385e61db1bfd0ad85343b48985c5cb210e060", "url": "https://github.com/Azure/azure-sdk-for-java/commit/695385e61db1bfd0ad85343b48985c5cb210e060", "message": "Test fixes & docstring", "committedDate": "2020-11-05T02:10:38Z", "type": "commit"}, {"oid": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/937c1a5916c5a42e6b718b5aaeb7782d22a00bd8", "message": "Recordings", "committedDate": "2020-11-05T19:04:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMxODM5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518318396", "bodyText": "Should we use Collections.emptyMap() here to use a singleton instead of creating a new instance?", "author": "alzimmermsft", "createdAt": "2020-11-05T19:39:51Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java", "diffHunk": "@@ -15,8 +18,19 @@\n      * @param name The blob name\n      */\n     public TaggedBlobItem(String containerName, String name) {\n+        this(containerName, name, new HashMap<>());", "originalCommit": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8961969c41c2a502cb85291f7e94b2a45d586760", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java\nindex 46351b3a69d..6dc96696a7c 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/models/TaggedBlobItem.java\n\n@@ -18,7 +19,7 @@ public final class TaggedBlobItem {\n      * @param name The blob name\n      */\n     public TaggedBlobItem(String containerName, String name) {\n-        this(containerName, name, new HashMap<>());\n+        this(containerName, name, Collections.emptyMap());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518320083", "bodyText": "Thoughts on deferring instantiation of a new map until we know the FilterBlobItem has tags, if it doesn't use the singleton Collections.emptyMap().", "author": "alzimmermsft", "createdAt": "2020-11-05T19:42:57Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();", "originalCommit": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNzU3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518327577", "bodyText": "This translates responses of an API where you filter blobs by tags. Unless you're purposefully using an older service version, tags should never be empty.", "author": "jaschrep-msft", "createdAt": "2020-11-05T19:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMTU3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518331579", "bodyText": "Given a refactor Gauri suggested, it may actually be good to do this, as the guarantee I presented would no longer be applicable.", "author": "jaschrep-msft", "createdAt": "2020-11-05T20:03:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMzU1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518333550", "bodyText": "yeah, we shouldn't create empty maps if not required.", "author": "kasobol-msft", "createdAt": "2020-11-05T20:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyMDA4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8961969c41c2a502cb85291f7e94b2a45d586760", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\nindex 32b7e34dab8..c4e9ee713d4 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n\n@@ -247,13 +249,7 @@ public class ModelHelper {\n         blobItem.setCurrentVersion(blobItemInternal.isCurrentVersion());\n         blobItem.setIsPrefix(blobItemInternal.isPrefix());\n \n-        Map<String, String> tags = new HashMap<>();\n-        if (blobItemInternal.getBlobTags() != null && blobItemInternal.getBlobTags().getBlobTagSet() != null) {\n-            for (BlobTag tag : blobItemInternal.getBlobTags().getBlobTagSet()) {\n-                tags.put(tag.getKey(), tag.getValue());\n-            }\n-        }\n-        blobItem.setTags(tags);\n+        blobItem.setTags(tagMapFromBlobTags(blobItemInternal.getBlobTags()));\n \n         blobItem.setObjectReplicationSourcePolicies(\n             transformObjectReplicationMetadata(blobItemInternal.getObjectReplicationMetadata()));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyODAxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518328014", "bodyText": "Could we consolidate this logic (BlobTagSet -> Map of tags) into another method in ModelHelper? There's some duplicate logic in BlobAsyncClient.getTagsWithResponse and ModelHelper.populateBlobItem,", "author": "gapra-msft", "createdAt": "2020-11-05T19:57:26Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -259,6 +261,17 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        Map<String, String> tags = new HashMap<>();\n+        if (filterBlobItem.getTags() != null && filterBlobItem.getTags().getBlobTagSet() != null) {\n+            for (BlobTag tag : filterBlobItem.getTags().getBlobTagSet()) {", "originalCommit": "937c1a5916c5a42e6b718b5aaeb7782d22a00bd8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8961969c41c2a502cb85291f7e94b2a45d586760", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\nindex 32b7e34dab8..c4e9ee713d4 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n\n@@ -247,13 +249,7 @@ public class ModelHelper {\n         blobItem.setCurrentVersion(blobItemInternal.isCurrentVersion());\n         blobItem.setIsPrefix(blobItemInternal.isPrefix());\n \n-        Map<String, String> tags = new HashMap<>();\n-        if (blobItemInternal.getBlobTags() != null && blobItemInternal.getBlobTags().getBlobTagSet() != null) {\n-            for (BlobTag tag : blobItemInternal.getBlobTags().getBlobTagSet()) {\n-                tags.put(tag.getKey(), tag.getValue());\n-            }\n-        }\n-        blobItem.setTags(tags);\n+        blobItem.setTags(tagMapFromBlobTags(blobItemInternal.getBlobTags()));\n \n         blobItem.setObjectReplicationSourcePolicies(\n             transformObjectReplicationMetadata(blobItemInternal.getObjectReplicationMetadata()));\n"}}, {"oid": "8961969c41c2a502cb85291f7e94b2a45d586760", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8961969c41c2a502cb85291f7e94b2a45d586760", "message": "Addressed minor PR comments", "committedDate": "2020-11-05T20:13:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MDU0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17235#discussion_r518340549", "bodyText": "if (blobTags ==null || blobTags.getBlobTagSet() == null || blobTags.getBlobTagsSet().isEmpty()) {\n return Collections.emptyMap();\n} else {\n   tags = new HashMap<>();\n   for (BlobTag tag : blobTags.getBlobTagSet()) {\n       tags.put(tag.getKey(), tag.getValue());\n  }\n  return tags;\n}\n\ngives much less branches and might make future reader happier.\nYou can also try streams API to reduce this even more see https://mkyong.com/java8/java-8-convert-list-to-map/", "author": "kasobol-msft", "createdAt": "2020-11-05T20:20:43Z", "path": "sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java", "diffHunk": "@@ -245,20 +249,38 @@ public static BlobItem populateBlobItem(BlobItemInternal blobItemInternal) {\n         blobItem.setCurrentVersion(blobItemInternal.isCurrentVersion());\n         blobItem.setIsPrefix(blobItemInternal.isPrefix());\n \n-        Map<String, String> tags = new HashMap<>();\n-        if (blobItemInternal.getBlobTags() != null && blobItemInternal.getBlobTags().getBlobTagSet() != null) {\n-            for (BlobTag tag : blobItemInternal.getBlobTags().getBlobTagSet()) {\n-                tags.put(tag.getKey(), tag.getValue());\n-            }\n-        }\n-        blobItem.setTags(tags);\n+        blobItem.setTags(tagMapFromBlobTags(blobItemInternal.getBlobTags()));\n \n         blobItem.setObjectReplicationSourcePolicies(\n             transformObjectReplicationMetadata(blobItemInternal.getObjectReplicationMetadata()));\n \n         return blobItem;\n     }\n \n+    public static TaggedBlobItem populateTaggedBlobItem(FilterBlobItem filterBlobItem) {\n+        return new TaggedBlobItem(filterBlobItem.getContainerName(), filterBlobItem.getName(),\n+            tagMapFromBlobTags(filterBlobItem.getTags()));\n+    }\n+\n+    private static Map<String, String> tagMapFromBlobTags(BlobTags blobTags) {\n+        Map<String, String> tags;\n+        if (blobTags != null && blobTags.getBlobTagSet() != null) {\n+            if (blobTags.getBlobTagSet().size() == 0){\n+                return Collections.emptyMap();\n+            }\n+\n+            tags = new HashMap<>();\n+            for (BlobTag tag : blobTags.getBlobTagSet()) {\n+                tags.put(tag.getKey(), tag.getValue());\n+            }\n+        }\n+        else {\n+            tags = Collections.emptyMap();\n+        }\n+\n+        return tags;", "originalCommit": "8961969c41c2a502cb85291f7e94b2a45d586760", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36ddbce30ee9f42894682d6b01f32500f3f741f1", "chunk": "diff --git a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\nindex c4e9ee713d4..8ebb448461e 100644\n--- a/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n+++ b/sdk/storage/azure-storage-blob/src/main/java/com/azure/storage/blob/implementation/util/ModelHelper.java\n\n@@ -263,22 +263,15 @@ public class ModelHelper {\n     }\n \n     private static Map<String, String> tagMapFromBlobTags(BlobTags blobTags) {\n-        Map<String, String> tags;\n-        if (blobTags != null && blobTags.getBlobTagSet() != null) {\n-            if (blobTags.getBlobTagSet().size() == 0){\n-                return Collections.emptyMap();\n-            }\n-\n-            tags = new HashMap<>();\n+        if (blobTags == null || blobTags.getBlobTagSet() == null || blobTags.getBlobTagSet().isEmpty()) {\n+            return Collections.emptyMap();\n+        } else {\n+            Map<String, String> tags = new HashMap<>();\n             for (BlobTag tag : blobTags.getBlobTagSet()) {\n                 tags.put(tag.getKey(), tag.getValue());\n             }\n+            return tags;\n         }\n-        else {\n-            tags = Collections.emptyMap();\n-        }\n-\n-        return tags;\n     }\n \n     /**\n"}}, {"oid": "36ddbce30ee9f42894682d6b01f32500f3f741f1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/36ddbce30ee9f42894682d6b01f32500f3f741f1", "message": "PR feedback", "committedDate": "2020-11-05T20:30:20Z", "type": "commit"}, {"oid": "e288958c0a39380e27ded2e21ae58d15e64646ea", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e288958c0a39380e27ded2e21ae58d15e64646ea", "message": "Cleaned unused import", "committedDate": "2020-11-05T20:48:22Z", "type": "commit"}, {"oid": "316182f4f5d75fba3a47b5c273002d237747a99c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/316182f4f5d75fba3a47b5c273002d237747a99c", "message": "changelog", "committedDate": "2020-11-05T21:33:11Z", "type": "commit"}, {"oid": "d401fce1862e9abd65a336e3f41ca0f354694d6d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d401fce1862e9abd65a336e3f41ca0f354694d6d", "message": "Changed swagger source", "committedDate": "2020-11-06T19:14:16Z", "type": "commit"}]}