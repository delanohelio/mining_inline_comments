{"pr_number": 17013, "pr_title": "Add Azure Arc MI Support", "pr_createdAt": "2020-10-30T16:50:18Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17013", "timeline": [{"oid": "d0beeb8f4b4019eacca30722b17eedb19af5c210", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0beeb8f4b4019eacca30722b17eedb19af5c210", "message": "Add logic to authenticate with Azure Arc MI", "committedDate": "2020-10-29T06:12:24Z", "type": "commit"}, {"oid": "9c72769049a0bab3d8e42dfb7512160188b4981d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c72769049a0bab3d8e42dfb7512160188b4981d", "message": "add tests", "committedDate": "2020-10-30T01:02:39Z", "type": "commit"}, {"oid": "4b9d17a7e24bff5760ce7c2047df14598b985eaf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b9d17a7e24bff5760ce7c2047df14598b985eaf", "message": "update javadocs", "committedDate": "2020-10-30T16:49:27Z", "type": "commit"}, {"oid": "f0846112f8cecca495f94fb3f0f2bcf430cf19b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f0846112f8cecca495f94fb3f0f2bcf430cf19b1", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support", "committedDate": "2020-10-30T17:00:50Z", "type": "commit"}, {"oid": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ada0c6b9824f700ec78f6fe62c102a40718df8ae", "message": "update javadocs", "committedDate": "2020-10-30T17:07:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5OTkxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515299915", "bodyText": "missing @param environment", "author": "jianghaolu", "createdAt": "2020-10-30T18:28:02Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.azure.identity;\n+\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential.\n+ */\n+abstract class ManagedIdentityServiceCredential {\n+    final IdentityClient identityClient;\n+    final String clientId;\n+    final String environment;\n+\n+    /**\n+     * Creates an instance of ManagedIdentityServiceCredential.\n+     * @param clientId the client id of user assigned or system assigned identity\n+     * @param identityClient the identity client to acquire a token with.\n+     */", "originalCommit": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0MjUyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517642527", "bodyText": "added.", "author": "g2vinay", "createdAt": "2020-11-04T21:30:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5OTkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\nindex c785281e913..0dda38aef70 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\n\n@@ -1,8 +1,11 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n package com.azure.identity;\n \n import com.azure.core.credential.AccessToken;\n-import com.azure.core.credential.TokenCredential;\n import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.logging.ClientLogger;\n import com.azure.identity.implementation.IdentityClient;\n import reactor.core.publisher.Mono;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMDY4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515300684", "bodyText": "move to parent class.", "author": "g2vinay", "createdAt": "2020-10-30T18:29:31Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.identity;\n+\n+import com.azure.core.annotation.Immutable;\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential for Azure Arc Service.\n+ */\n+@Immutable\n+class ArcIdentityCredential extends ManagedIdentityServiceCredential {\n+    private final String identityEndpoint;\n+    private final ClientLogger logger = new ClientLogger(ArcIdentityCredential.class);\n+\n+    /**\n+     * Creates an instance of {@link ArcIdentityCredential}.\n+     *\n+     * @param clientId The client ID of user assigned or system assigned identity.\n+     * @param identityClient The identity client to acquire a token with.\n+     */\n+    ArcIdentityCredential(String clientId, IdentityClient identityClient) {\n+        super(clientId, identityClient, \"AZURE ARC IDENTITY ENDPOINT\");\n+        Configuration configuration = Configuration.getGlobalConfiguration().clone();\n+        this.identityEndpoint = configuration.get(Configuration.PROPERTY_IDENTITY_ENDPOINT);\n+        if (identityEndpoint != null) {\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n+        }\n+    }\n+\n+    private void validateEndpointProtocol(String endpoint, String endpointName) {", "originalCommit": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java\nindex 296ca8e33c5..6b9d134978a 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ArcIdentityCredential.java\n\n@@ -30,15 +30,7 @@ class ArcIdentityCredential extends ManagedIdentityServiceCredential {\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n         this.identityEndpoint = configuration.get(Configuration.PROPERTY_IDENTITY_ENDPOINT);\n         if (identityEndpoint != null) {\n-            validateEndpointProtocol(this.identityEndpoint, \"Identity\");\n-        }\n-    }\n-\n-    private void validateEndpointProtocol(String endpoint, String endpointName) {\n-        if (!(endpoint.startsWith(\"https\") || endpoint.startsWith(\"http\"))) {\n-            throw logger.logExceptionAsError(\n-                new IllegalArgumentException(\n-                    String.format(\"%s endpoint should start with 'https' or 'http' scheme.\", endpointName)));\n+            validateEndpointProtocol(this.identityEndpoint, \"Identity\", logger);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMTI0Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515301242", "bodyText": "should clientId and environment be private since they have getters?", "author": "jianghaolu", "createdAt": "2020-10-30T18:30:35Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.azure.identity;\n+\n+import com.azure.core.credential.AccessToken;\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.credential.TokenRequestContext;\n+import com.azure.identity.implementation.IdentityClient;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * The Managed Service Identity credential.\n+ */\n+abstract class ManagedIdentityServiceCredential {\n+    final IdentityClient identityClient;\n+    final String clientId;", "originalCommit": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0MjQ1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517642452", "bodyText": "made private.", "author": "g2vinay", "createdAt": "2020-11-04T21:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMTI0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\nindex c785281e913..0dda38aef70 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityServiceCredential.java\n\n@@ -1,8 +1,11 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n package com.azure.identity;\n \n import com.azure.core.credential.AccessToken;\n-import com.azure.core.credential.TokenCredential;\n import com.azure.core.credential.TokenRequestContext;\n+import com.azure.core.util.logging.ClientLogger;\n import com.azure.identity.implementation.IdentityClient;\n import reactor.core.publisher.Mono;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzA5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515303091", "bodyText": "Environment variable IMDS_ENDPOINT is never used in ArcIdentityCredential, is that normal?", "author": "jianghaolu", "createdAt": "2020-10-30T18:34:34Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -36,14 +36,19 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)\n-                || (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)\n-                        && configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER))) {\n-            appServiceMSICredential = new AppServiceMsiCredential(clientId, identityClient);\n-            virtualMachineMSICredential = null;\n+        if (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)) {\n+            if (configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER)) {\n+                managedIdentityServiceCredential = new AppServiceMsiCredential(clientId, identityClient);\n+            } else if (configuration.contains(PROPERTY_IMDS_ENDPOINT)) {", "originalCommit": "ada0c6b9824f700ec78f6fe62c102a40718df8ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzI4MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515303280", "bodyText": "If so - what's the value for?", "author": "jianghaolu", "createdAt": "2020-10-30T18:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwNDE5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r515304191", "bodyText": "Currently, its just used to determine the Arc Env.\nAfter discussing with @catalinaperalta , she mentioned we won't try auth with their IMDS endpoint.\nWe use the IDENTITY_ENDPOINT for auth req.", "author": "g2vinay", "createdAt": "2020-10-30T18:36:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3Nzc4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518377789", "bodyText": "This is correct we only use IMDS_ENDPOINT as a signal to indicate that were on an Arc host.", "author": "schaabs", "createdAt": "2020-11-05T21:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzA5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\nindex 4ab9104fcc2..9562442f570 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n\n@@ -31,6 +32,7 @@ public final class ManagedIdentityCredential implements TokenCredential {\n      * @param identityClientOptions the options for configuring the identity client.\n      */\n     ManagedIdentityCredential(String clientId, IdentityClientOptions identityClientOptions) {\n+        this.clientId = clientId;\n         IdentityClient identityClient = new IdentityClientBuilder()\n             .clientId(clientId)\n             .identityClientOptions(identityClientOptions)\n"}}, {"oid": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6f86b55d598b38acf27250b3d9b24d4c82b0044d", "message": "update code", "committedDate": "2020-11-04T21:29:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTMyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517795321", "bodyText": "If managedIdentityServiceCredential is null, getToken() method throws an exception. So, why not throw that exception here itself? Why delay throwing exception until later? Since this is final it won't change after the constructor is called anyway.", "author": "srnagar", "createdAt": "2020-11-05T05:07:47Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -36,14 +36,19 @@\n             .identityClientOptions(identityClientOptions)\n             .build();\n         Configuration configuration = Configuration.getGlobalConfiguration().clone();\n-        if (configuration.contains(Configuration.PROPERTY_MSI_ENDPOINT)\n-                || (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)\n-                        && configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER))) {\n-            appServiceMSICredential = new AppServiceMsiCredential(clientId, identityClient);\n-            virtualMachineMSICredential = null;\n+        if (configuration.contains(Configuration.PROPERTY_IDENTITY_ENDPOINT)) {\n+            if (configuration.contains(Configuration.PROPERTY_IDENTITY_HEADER)) {\n+                managedIdentityServiceCredential = new AppServiceMsiCredential(clientId, identityClient);\n+            } else if (configuration.contains(PROPERTY_IMDS_ENDPOINT)) {\n+                managedIdentityServiceCredential = new ArcIdentityCredential(clientId, identityClient);\n+            } else {\n+                managedIdentityServiceCredential = null;", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMzAyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518233027", "bodyText": "yeah, this is by design.\nWe don't throw exceptions beyond user input validation at build/construction level.\nDefaultAzureCredential will start to break at the construction level too, which shouldn't happen and this will be a breaking change as well.", "author": "g2vinay", "createdAt": "2020-11-05T17:36:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTMyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\nindex 4ab9104fcc2..9562442f570 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n\n@@ -31,6 +32,7 @@ public final class ManagedIdentityCredential implements TokenCredential {\n      * @param identityClientOptions the options for configuring the identity client.\n      */\n     ManagedIdentityCredential(String clientId, IdentityClientOptions identityClientOptions) {\n+        this.clientId = clientId;\n         IdentityClient identityClient = new IdentityClientBuilder()\n             .clientId(clientId)\n             .identityClientOptions(identityClientOptions)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTc5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517795794", "bodyText": "This can potentially throw NPE if managedIdentityServiceCredential is null. So, as mentioned above, it might be better to just throw an exception in ctor itself if it's null.", "author": "srnagar", "createdAt": "2020-11-05T05:09:36Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java", "diffHunk": "@@ -53,22 +58,19 @@\n      * @return the client ID of user assigned or system assigned identity.\n      */\n     public String getClientId() {\n-        return this.appServiceMSICredential != null\n-            ? this.appServiceMSICredential.getClientId()\n-            : this.virtualMachineMSICredential.getClientId();\n+        return managedIdentityServiceCredential.getClientId();", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMzE5NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518233195", "bodyText": "udpated", "author": "g2vinay", "createdAt": "2020-11-05T17:36:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NTc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\nindex 4ab9104fcc2..9562442f570 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/ManagedIdentityCredential.java\n\n@@ -58,7 +60,7 @@ public final class ManagedIdentityCredential implements TokenCredential {\n      * @return the client ID of user assigned or system assigned identity.\n      */\n     public String getClientId() {\n-        return managedIdentityServiceCredential.getClientId();\n+        return this.clientId;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzUwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517797500", "bodyText": "Where is this scanner used? s is overwritten on line 810 before it's used. Also, update the variable name to scanner to make it more readable.", "author": "srnagar", "createdAt": "2020-11-05T05:16:36Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 5fbd1fdad50..86ba77f1556 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -756,7 +756,7 @@ public class IdentityClient {\n     public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n                                                                       TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n-            HttpURLConnection connection;\n+            HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzYwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517797604", "bodyText": "If the status is 410, do we expect to swallow the exception and continue?", "author": "srnagar", "createdAt": "2020-11-05T05:16:58Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");\n+            } catch (IOException e) {\n+                int status = connection.getResponseCode();\n+                if (status != 401) {\n+                    throw logger.logExceptionAsError(new ClientAuthenticationException(String.format(\"Expected a 401\"\n+                         + \" Unauthorized response from Azure Arc Managed Identity Endpoint, received: %d\", status),\n+                        null, e));\n+                }", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMzQxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518233411", "bodyText": "you mean 401,\nyes we are expected to swallow it and read the response.", "author": "g2vinay", "createdAt": "2020-11-05T17:36:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzYwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyOTY3Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518329677", "bodyText": "Yeah, I meant 401. In that case, can we add a logger to indicate that we ignored this exception?", "author": "srnagar", "createdAt": "2020-11-05T20:00:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5NzYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 5fbd1fdad50..86ba77f1556 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -756,7 +756,7 @@ public class IdentityClient {\n     public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n                                                                       TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n-            HttpURLConnection connection;\n+            HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5ODk4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517798981", "bodyText": "Should the connection be closed here before throwing the exception?", "author": "srnagar", "createdAt": "2020-11-05T05:22:18Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();\n+\n+            try {\n+                Scanner s = new Scanner(connection.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\");\n+            } catch (IOException e) {\n+                int status = connection.getResponseCode();\n+                if (status != 401) {\n+                    throw logger.logExceptionAsError(new ClientAuthenticationException(String.format(\"Expected a 401\"", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMzYxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518233612", "bodyText": "added it to finally block.", "author": "g2vinay", "createdAt": "2020-11-05T17:36:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5ODk4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 5fbd1fdad50..86ba77f1556 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -756,7 +756,7 @@ public class IdentityClient {\n     public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n                                                                       TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n-            HttpURLConnection connection;\n+            HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTgyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r517799828", "bodyText": "openConnection() and connect() can throw exceptions too. We should wrap this in a try-finally block to clean up the connection in case of failures.", "author": "srnagar", "createdAt": "2020-11-05T05:25:36Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -745,6 +745,80 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n                     }));\n     }\n \n+\n+    /**\n+     * Asynchronously acquire a token from the App Service Managed Service Identity endpoint.\n+     *\n+     * @param identityEndpoint the Identity endpoint to acquire token from\n+     * @param request the details of the token request\n+     * @return a Publisher that emits an AccessToken\n+     */\n+    public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n+                                                                      TokenRequestContext request) {\n+        return Mono.fromCallable(() -> {\n+            HttpURLConnection connection;\n+            StringBuilder payload = new StringBuilder();\n+            payload.append(\"resource=\");\n+            payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n+            payload.append(\"&api-version=\");\n+            payload.append(URLEncoder.encode(\"2019-11-01\", \"UTF-8\"));\n+\n+            URL url = new URL(String.format(\"%s?%s\", identityEndpoint, payload));\n+            connection = (HttpURLConnection) url.openConnection();\n+            connection.setRequestMethod(\"GET\");\n+            connection.setRequestProperty(\"Metadata\", \"true\");\n+            connection.connect();", "originalCommit": "6f86b55d598b38acf27250b3d9b24d4c82b0044d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMzc4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17013#discussion_r518233789", "bodyText": "updated.", "author": "g2vinay", "createdAt": "2020-11-05T17:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc5OTgyOA=="}], "type": "inlineReview", "revised_code": {"commit": "5db074f02db14ea112eadebf6cf1237830829b49", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 5fbd1fdad50..86ba77f1556 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -756,7 +756,7 @@ public class IdentityClient {\n     public Mono<AccessToken> authenticateToArcManagedIdentityEndpoint(String identityEndpoint,\n                                                                       TokenRequestContext request) {\n         return Mono.fromCallable(() -> {\n-            HttpURLConnection connection;\n+            HttpURLConnection connection = null;\n             StringBuilder payload = new StringBuilder();\n             payload.append(\"resource=\");\n             payload.append(URLEncoder.encode(ScopeUtil.scopesToResource(request.getScopes()), \"UTF-8\"));\n"}}, {"oid": "5db074f02db14ea112eadebf6cf1237830829b49", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5db074f02db14ea112eadebf6cf1237830829b49", "message": "refactor code", "committedDate": "2020-11-05T17:35:39Z", "type": "commit"}, {"oid": "9918900a714a449badb6345953d9881d35a6ef1b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9918900a714a449badb6345953d9881d35a6ef1b", "message": "update error message", "committedDate": "2020-11-09T17:53:13Z", "type": "commit"}, {"oid": "455aeceeb039d4cafe22c09e6f84b5025cf08743", "url": "https://github.com/Azure/azure-sdk-for-java/commit/455aeceeb039d4cafe22c09e6f84b5025cf08743", "message": "fix spotbugs", "committedDate": "2020-11-09T17:55:09Z", "type": "commit"}, {"oid": "8cc38eef72718461d482a599a27f00e97194d0b5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8cc38eef72718461d482a599a27f00e97194d0b5", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support", "committedDate": "2020-11-09T17:58:04Z", "type": "commit"}, {"oid": "f7fe2984d8459534fb65e8ff43303a19be01ae98", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f7fe2984d8459534fb65e8ff43303a19be01ae98", "message": "Merge remote-tracking branch 'upstream/master' into add-azure-arc-mi-support", "committedDate": "2020-11-09T18:26:56Z", "type": "commit"}, {"oid": "b710fc4ced4c34bf171ed6ad0527fa4e8de4005f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b710fc4ced4c34bf171ed6ad0527fa4e8de4005f", "message": "fix checkstyle", "committedDate": "2020-11-09T18:37:45Z", "type": "commit"}, {"oid": "fd861544be356da3165ffe5da9b72aecb2a08e58", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fd861544be356da3165ffe5da9b72aecb2a08e58", "message": "update test", "committedDate": "2020-11-09T18:50:35Z", "type": "commit"}]}