{"pr_number": 7514, "pr_title": "Refactor test methods for Text Analytics", "pr_createdAt": "2020-01-17T01:19:11Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7514", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NTkxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r368185910", "bodyText": "What reason to make runner a static method?", "author": "mssfang", "createdAt": "2020-01-18T00:15:57Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -254,468 +251,179 @@\n     abstract void analyseSentimentForListLanguageHint();\n \n     // Detect Language runner\n-    void detectLanguageShowStatisticsRunner(BiConsumer<List<DetectLanguageInput>,\n+    static void detectLanguageShowStatisticsRunner(BiConsumer<List<DetectLanguageInput>,", "originalCommit": "9e1b1cb886d4284b9ed0e55fb6db16a5e2c9a370", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE2OTQ4MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369169481", "bodyText": "here, just to keep consistent with other methods in the file.", "author": "samvaity", "createdAt": "2020-01-21T18:29:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NTkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI5NzkxOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369297918", "bodyText": "We should make it non-static. I think make the method static will not be safe if we want the tests parallel.", "author": "mssfang", "createdAt": "2020-01-21T23:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NTkxMA=="}], "type": "inlineReview", "revised_code": {"commit": "f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\nindex 60a43e687ed..58947f7ab7e 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\n\n@@ -251,7 +251,7 @@ public abstract class TextAnalyticsClientTestBase extends TestBase {\n     abstract void analyseSentimentForListLanguageHint();\n \n     // Detect Language runner\n-    static void detectLanguageShowStatisticsRunner(BiConsumer<List<DetectLanguageInput>,\n+    void detectLanguageShowStatisticsRunner(BiConsumer<List<DetectLanguageInput>,\n         TextAnalyticsRequestOptions> testRunner) {\n         final List<DetectLanguageInput> detectLanguageInputs = TestUtils.getDetectLanguageInputs();\n \n"}}, {"oid": "f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "message": "make test runners non-static", "committedDate": "2020-01-22T00:18:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxNzU0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369717549", "bodyText": "Doesn't look like this needs to be public.", "author": "conniey", "createdAt": "2020-01-22T18:05:54Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java", "diffHunk": "@@ -0,0 +1,252 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics;\n+\n+import com.azure.ai.textanalytics.models.AnalyzeSentimentResult;\n+import com.azure.ai.textanalytics.models.DetectLanguageInput;\n+import com.azure.ai.textanalytics.models.DetectLanguageResult;\n+import com.azure.ai.textanalytics.models.DetectedLanguage;\n+import com.azure.ai.textanalytics.models.DocumentResultCollection;\n+import com.azure.ai.textanalytics.models.ExtractKeyPhraseResult;\n+import com.azure.ai.textanalytics.models.LinkedEntity;\n+import com.azure.ai.textanalytics.models.LinkedEntityMatch;\n+import com.azure.ai.textanalytics.models.NamedEntity;\n+import com.azure.ai.textanalytics.models.RecognizeEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult;\n+import com.azure.ai.textanalytics.models.TextDocumentBatchStatistics;\n+import com.azure.ai.textanalytics.models.TextDocumentInput;\n+import com.azure.ai.textanalytics.models.TextDocumentStatistics;\n+import com.azure.ai.textanalytics.models.TextSentiment;\n+import com.azure.ai.textanalytics.models.TextSentimentClass;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Contains helper methods for generating inputs for test methods\n+ */\n+public final class TestUtils {", "originalCommit": "f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\nindex 318d68db8ca..3989d690d51 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n\n@@ -21,6 +21,7 @@ import com.azure.ai.textanalytics.models.TextDocumentStatistics;\n import com.azure.ai.textanalytics.models.TextSentiment;\n import com.azure.ai.textanalytics.models.TextSentimentClass;\n \n+import java.time.Duration;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxODgwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369718803", "bodyText": "This isn't needed. If the key doesn't exist, then the value returned will be null.", "author": "conniey", "createdAt": "2020-01-22T18:08:41Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -857,156 +561,113 @@ static void validateAnalysedSentiment(TextSentiment expectedSentiment, TextSenti\n         assertEquals(expectedSentiment.getPositiveScore() > 0, actualSentiment.getPositiveScore() > 0);\n     }\n \n-    static void assertRestException(Throwable exception, Class<? extends HttpResponseException> expectedExceptionType,\n-        int expectedStatusCode) {\n-        assertEquals(expectedExceptionType, exception.getClass());\n-        assertEquals(expectedStatusCode, ((HttpResponseException) exception).getResponse().getStatusCode());\n-    }\n-\n-    static void assertRestException(Runnable exceptionThrower,\n-        Class<? extends HttpResponseException> expectedExceptionType, int expectedStatusCode) {\n-        try {\n-            exceptionThrower.run();\n-            fail();\n-        } catch (Throwable ex) {\n-            assertRestException(ex, expectedExceptionType, expectedStatusCode);\n-        }\n-    }\n-\n     /**\n-     * Helper method to get the expected Batch Detected Languages\n+     * Helper method to verify {@link DocumentResult documents} returned in a batch request.\n      */\n-    static DocumentResultCollection<DetectLanguageResult> getExpectedBatchDetectedLanguages() {\n-        DetectedLanguage detectedLanguage1 = new DetectedLanguage(\"English\", \"en\", 1.0);\n-        DetectedLanguage detectedLanguage2 = new DetectedLanguage(\"Spanish\", \"es\", 1.0);\n-        DetectedLanguage detectedLanguage3 = new DetectedLanguage(\"(Unknown)\", \"(Unknown)\", 0.0);\n-        List<DetectedLanguage> detectedLanguageList1 = Collections.singletonList(detectedLanguage1);\n-        List<DetectedLanguage> detectedLanguageList2 = Collections.singletonList(detectedLanguage2);\n-        List<DetectedLanguage> detectedLanguageList3 = Collections.singletonList(detectedLanguage3);\n-\n-        TextDocumentStatistics textDocumentStatistics1 = new TextDocumentStatistics(26, 1);\n-        TextDocumentStatistics textDocumentStatistics2 = new TextDocumentStatistics(39, 1);\n-        TextDocumentStatistics textDocumentStatistics3 = new TextDocumentStatistics(6, 1);\n+    private static <T extends DocumentResult> void validateDocumentResult(boolean showStatistics,\n+        DocumentResultCollection<T> expectedResults, DocumentResultCollection<T> actualResults,\n+        BiConsumer<T, T> additionalAssertions) {\n \n-        DetectLanguageResult detectLanguageResult1 = new DetectLanguageResult(\"0\", textDocumentStatistics1, null, detectedLanguage1, detectedLanguageList1);\n-        DetectLanguageResult detectLanguageResult2 = new DetectLanguageResult(\"1\", textDocumentStatistics2, null, detectedLanguage2, detectedLanguageList2);\n-        DetectLanguageResult detectLanguageResult3 = new DetectLanguageResult(\"2\", textDocumentStatistics3, null, detectedLanguage3, detectedLanguageList3);\n+        final Map<String, T> expected = expectedResults.stream().collect(Collectors.toMap(r -> r.getId(), r -> r));\n+        final Map<String, T> actual = actualResults.stream().collect(Collectors.toMap(r -> r.getId(), r -> r));\n \n-        TextDocumentBatchStatistics textDocumentBatchStatistics = new TextDocumentBatchStatistics(3, 3, 0, 3);\n-        List<DetectLanguageResult> detectLanguageResultList = Arrays.asList(detectLanguageResult1, detectLanguageResult2, detectLanguageResult3);\n+        assertEquals(expected.size(), actual.size());\n \n-        return new DocumentResultCollection<>(detectLanguageResultList, MODEL_VERSION, textDocumentBatchStatistics);\n-    }\n+        if (showStatistics) {\n+            validateBatchStatistics(expectedResults.getStatistics(), actualResults.getStatistics());\n+        }\n \n-    static DocumentResultCollection<RecognizeEntitiesResult> getExpectedBatchNamedEntities() {\n-        NamedEntity namedEntity1 = new NamedEntity(\"Seattle\", \"Location\", null, 26, 7, 0.80624294281005859);\n-        NamedEntity namedEntity2 = new NamedEntity(\"last week\", \"DateTime\", \"DateRange\", 34, 9, 0.8);\n-        NamedEntity namedEntity3 = new NamedEntity(\"Microsoft\", \"Organization\", null, 10, 9, 0.99983596801757812);\n+        expected.forEach((key, expectedValue) -> {\n+            T actualValue = actual.get(key);\n \n-        List<NamedEntity> namedEntityList1 = Arrays.asList(namedEntity1, namedEntity2);\n-        List<NamedEntity> namedEntityList2 = Collections.singletonList(namedEntity3);\n+            assertTrue(actual.containsKey(key));", "originalCommit": "f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\nindex 58947f7ab7e..bebb8cc6205 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java\n\n@@ -579,8 +578,6 @@ public abstract class TextAnalyticsClientTestBase extends TestBase {\n \n         expected.forEach((key, expectedValue) -> {\n             T actualValue = actual.get(key);\n-\n-            assertTrue(actual.containsKey(key));\n             assertNotNull(actualValue);\n \n             if (showStatistics) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxOTU5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369719591", "bodyText": "Consider setting StepVerifier.defaultTimeout so that it is not infinite. And resetting it when the test class finishes.", "author": "conniey", "createdAt": "2020-01-22T18:10:16Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTestBase.java", "diffHunk": "@@ -7,6 +7,7 @@\n import com.azure.ai.textanalytics.models.DetectLanguageInput;", "originalCommit": "f5446ac717c7a2bddc93b4be2da61dc0e4b620d2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3ODAxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r369878014", "bodyText": "Updated.", "author": "samvaity", "createdAt": "2020-01-23T00:27:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxOTU5MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1c160efc9919a6063ffe760bdaced07d6cf20ca4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1c160efc9919a6063ffe760bdaced07d6cf20ca4", "message": "refactor test methods TA", "committedDate": "2020-01-23T00:25:47Z", "type": "commit"}, {"oid": "cf203a8736124d8c8e97837ceaf756d8d6406523", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cf203a8736124d8c8e97837ceaf756d8d6406523", "message": "make test runners non-static", "committedDate": "2020-01-23T00:25:48Z", "type": "commit"}, {"oid": "dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "message": "update feedback", "committedDate": "2020-01-23T00:25:48Z", "type": "commit"}, {"oid": "dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dd28d37edfe3b02d64371c5a6b65bba23fd3f8b1", "message": "update feedback", "committedDate": "2020-01-23T00:25:48Z", "type": "forcePushed"}, {"oid": "43db7a69679a4e2f2f756e7ed45ca2ec22b08a30", "url": "https://github.com/Azure/azure-sdk-for-java/commit/43db7a69679a4e2f2f756e7ed45ca2ec22b08a30", "message": "empty line", "committedDate": "2020-01-23T00:28:58Z", "type": "commit"}, {"oid": "1a6df3a429372b1a9123c2ac559463f66cae0134", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a6df3a429372b1a9123c2ac559463f66cae0134", "message": "fix build error", "committedDate": "2020-01-23T20:55:10Z", "type": "commit"}, {"oid": "1a6df3a429372b1a9123c2ac559463f66cae0134", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1a6df3a429372b1a9123c2ac559463f66cae0134", "message": "fix build error", "committedDate": "2020-01-23T20:55:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MzI5Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370763296", "bodyText": "We should remove all the score equal comparison. Currently. the nightly live test failed because of it.\nhttps://dev.azure.com/azure-sdk/internal/_build/results?buildId=242950&view=logs&j=4d5db6ce-0b7f-527e-b115-2367ee6e1fef&t=b7d16dfc-4abf-5ff2-eaa7-e82f3df2ef1b", "author": "mssfang", "createdAt": "2020-01-24T17:54:43Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java", "diffHunk": "@@ -0,0 +1,250 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics;\n+\n+import com.azure.ai.textanalytics.models.AnalyzeSentimentResult;\n+import com.azure.ai.textanalytics.models.DetectLanguageInput;\n+import com.azure.ai.textanalytics.models.DetectLanguageResult;\n+import com.azure.ai.textanalytics.models.DetectedLanguage;\n+import com.azure.ai.textanalytics.models.DocumentResultCollection;\n+import com.azure.ai.textanalytics.models.ExtractKeyPhraseResult;\n+import com.azure.ai.textanalytics.models.LinkedEntity;\n+import com.azure.ai.textanalytics.models.LinkedEntityMatch;\n+import com.azure.ai.textanalytics.models.NamedEntity;\n+import com.azure.ai.textanalytics.models.RecognizeEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult;\n+import com.azure.ai.textanalytics.models.TextDocumentBatchStatistics;\n+import com.azure.ai.textanalytics.models.TextDocumentInput;\n+import com.azure.ai.textanalytics.models.TextDocumentStatistics;\n+import com.azure.ai.textanalytics.models.TextSentiment;\n+import com.azure.ai.textanalytics.models.TextSentimentClass;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Contains helper methods for generating inputs for test methods\n+ */\n+final class TestUtils {\n+    private static final String DEFAULT_MODEL_VERSION = \"2019-10-01\";\n+    static final List<String> SENTIMENT_INPUTS = Arrays.asList(\"The hotel was dark and unclean. The restaurant had amazing gnocchi.\",\n+        \"The restaurant had amazing gnocchi. The hotel was dark and unclean.\");\n+\n+    static final List<String> NAMED_ENTITY_INPUTS = Arrays.asList(\n+        \"I had a wonderful trip to Seattle last week.\", \"I work at Microsoft.\");\n+\n+    static final List<String> LINKED_ENTITY_INPUTS = Arrays.asList(\n+        \"I had a wonderful trip to Seattle last week.\",\n+        \"I work at Microsoft.\");\n+\n+    static final List<String> KEY_PHRASE_INPUTS = Arrays.asList(\n+        \"Hello world. This is some input text that I love.\",\n+        \"Bonjour tout le monde\");\n+\n+    static final List<String> PII_ENTITY_INPUTS = Arrays.asList(\n+        \"Microsoft employee with ssn 859-98-0987 is using our awesome API's.\",\n+        \"Your ABA number - 111000025 - is the first 9 digits in the lower left hand corner of your personal check.\");\n+\n+    static final List<String> DETECT_LANGUAGE_INPUTS = Arrays.asList(\n+        \"This is written in English\", \"Este es un document escrito en Espa\u00f1ol.\", \"~@!~:)\");\n+\n+    static List<DetectLanguageInput> getDetectLanguageInputs() {\n+        return Arrays.asList(\n+            new DetectLanguageInput(\"0\", DETECT_LANGUAGE_INPUTS.get(0), \"US\"),\n+            new DetectLanguageInput(\"1\", DETECT_LANGUAGE_INPUTS.get(1)),\n+            new DetectLanguageInput(\"2\", DETECT_LANGUAGE_INPUTS.get(2), \"US\")\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentNamedEntityInputs() {\n+        return Arrays.asList(\n+            new TextDocumentInput(\"0\", NAMED_ENTITY_INPUTS.get(0)),\n+            new TextDocumentInput(\"1\", NAMED_ENTITY_INPUTS.get(1))\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentPiiInputs() {\n+        return Arrays.asList(\n+            new TextDocumentInput(\"0\", TestUtils.PII_ENTITY_INPUTS.get(0)),\n+            new TextDocumentInput(\"1\", TestUtils.PII_ENTITY_INPUTS.get(1))\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentLinkedEntityInputs() {\n+        return Arrays.asList(\n+            new TextDocumentInput(\"0\", TestUtils.LINKED_ENTITY_INPUTS.get(0)),\n+            new TextDocumentInput(\"1\", TestUtils.LINKED_ENTITY_INPUTS.get(1))\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentKeyPhraseInputs() {\n+        return Arrays.asList(\n+            new TextDocumentInput(\"0\", KEY_PHRASE_INPUTS.get(0)),\n+            new TextDocumentInput(\"1\", KEY_PHRASE_INPUTS.get(1))\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentSentimentInputs() {\n+        return Arrays.asList(\n+            new TextDocumentInput(\"0\", TestUtils.SENTIMENT_INPUTS.get(0)),\n+            new TextDocumentInput(\"1\", TestUtils.SENTIMENT_INPUTS.get(1))\n+        );\n+    }\n+\n+    /**\n+     * Helper method to get the expected Batch Detected Languages\n+     */\n+    static DocumentResultCollection<DetectLanguageResult> getExpectedBatchDetectedLanguages() {\n+        DetectedLanguage detectedLanguage1 = new DetectedLanguage(\"English\", \"en\", 1.0);\n+        DetectedLanguage detectedLanguage2 = new DetectedLanguage(\"Spanish\", \"es\", 1.0);\n+        DetectedLanguage detectedLanguage3 = new DetectedLanguage(\"(Unknown)\", \"(Unknown)\", 0.0);\n+        List<DetectedLanguage> detectedLanguageList1 = Collections.singletonList(detectedLanguage1);\n+        List<DetectedLanguage> detectedLanguageList2 = Collections.singletonList(detectedLanguage2);\n+        List<DetectedLanguage> detectedLanguageList3 = Collections.singletonList(detectedLanguage3);\n+\n+        TextDocumentStatistics textDocumentStatistics1 = new TextDocumentStatistics(26, 1);\n+        TextDocumentStatistics textDocumentStatistics2 = new TextDocumentStatistics(39, 1);\n+        TextDocumentStatistics textDocumentStatistics3 = new TextDocumentStatistics(6, 1);\n+\n+        DetectLanguageResult detectLanguageResult1 = new DetectLanguageResult(\"0\", textDocumentStatistics1, null, detectedLanguage1, detectedLanguageList1);\n+        DetectLanguageResult detectLanguageResult2 = new DetectLanguageResult(\"1\", textDocumentStatistics2, null, detectedLanguage2, detectedLanguageList2);\n+        DetectLanguageResult detectLanguageResult3 = new DetectLanguageResult(\"2\", textDocumentStatistics3, null, detectedLanguage3, detectedLanguageList3);\n+\n+        TextDocumentBatchStatistics textDocumentBatchStatistics = new TextDocumentBatchStatistics(3, 3, 0, 3);\n+        List<DetectLanguageResult> detectLanguageResultList = Arrays.asList(detectLanguageResult1, detectLanguageResult2, detectLanguageResult3);\n+\n+        return new DocumentResultCollection<>(detectLanguageResultList, DEFAULT_MODEL_VERSION, textDocumentBatchStatistics);\n+    }\n+\n+    /**\n+     * Helper method to get the expected Batch Named Entities\n+     */\n+    static DocumentResultCollection<RecognizeEntitiesResult> getExpectedBatchNamedEntities() {\n+        NamedEntity namedEntity1 = new NamedEntity(\"Seattle\", \"Location\", null, 26, 7, 0.80624294281005859);", "originalCommit": "1a6df3a429372b1a9123c2ac559463f66cae0134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5ODUxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370798510", "bodyText": "Updated to not check for equality for offset/length/score properties on models.", "author": "samvaity", "createdAt": "2020-01-24T19:16:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODY3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370898672", "bodyText": "should the score value need to clean up also?", "author": "mssfang", "createdAt": "2020-01-25T00:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MzI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODg5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370898893", "bodyText": "same question apply to other hard-coded numerical values", "author": "mssfang", "createdAt": "2020-01-25T00:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc2MzI5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3b4f33a94b2babeb2629fa0b994629485d6e86a4", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\nindex 15c849d41e8..f3ce666a5d0 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n\n@@ -24,6 +24,8 @@ import com.azure.ai.textanalytics.models.TextSentimentClass;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n \n /**\n  * Contains helper methods for generating inputs for test methods\n"}}, {"oid": "c607b46ec92186c392a9b71d965d134be3b0948b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c607b46ec92186c392a9b71d965d134be3b0948b", "message": "remove score/length/offset equals validations", "committedDate": "2020-01-24T19:15:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODk3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370808979", "bodyText": "This will be cumbersome to manage if you add another \"named_entity_input\" or add to those other lists. I would suggest mapping.\n        return IntStream.range(0, contents.size())\n            .mapToObj(index -> {\n                return new TextDocumentInput(String.valueOf(index), contents.get(index));\n            }).collect(Collectors.toUnmodifiableList());", "author": "conniey", "createdAt": "2020-01-24T19:39:46Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java", "diffHunk": "@@ -0,0 +1,250 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics;\n+\n+import com.azure.ai.textanalytics.models.AnalyzeSentimentResult;\n+import com.azure.ai.textanalytics.models.DetectLanguageInput;\n+import com.azure.ai.textanalytics.models.DetectLanguageResult;\n+import com.azure.ai.textanalytics.models.DetectedLanguage;\n+import com.azure.ai.textanalytics.models.DocumentResultCollection;\n+import com.azure.ai.textanalytics.models.ExtractKeyPhraseResult;\n+import com.azure.ai.textanalytics.models.LinkedEntity;\n+import com.azure.ai.textanalytics.models.LinkedEntityMatch;\n+import com.azure.ai.textanalytics.models.NamedEntity;\n+import com.azure.ai.textanalytics.models.RecognizeEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizeLinkedEntitiesResult;\n+import com.azure.ai.textanalytics.models.RecognizePiiEntitiesResult;\n+import com.azure.ai.textanalytics.models.TextDocumentBatchStatistics;\n+import com.azure.ai.textanalytics.models.TextDocumentInput;\n+import com.azure.ai.textanalytics.models.TextDocumentStatistics;\n+import com.azure.ai.textanalytics.models.TextSentiment;\n+import com.azure.ai.textanalytics.models.TextSentimentClass;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Contains helper methods for generating inputs for test methods\n+ */\n+final class TestUtils {\n+    private static final String DEFAULT_MODEL_VERSION = \"2019-10-01\";\n+    static final List<String> SENTIMENT_INPUTS = Arrays.asList(\"The hotel was dark and unclean. The restaurant had amazing gnocchi.\",\n+        \"The restaurant had amazing gnocchi. The hotel was dark and unclean.\");\n+\n+    static final List<String> NAMED_ENTITY_INPUTS = Arrays.asList(\n+        \"I had a wonderful trip to Seattle last week.\", \"I work at Microsoft.\");\n+\n+    static final List<String> LINKED_ENTITY_INPUTS = Arrays.asList(\n+        \"I had a wonderful trip to Seattle last week.\",\n+        \"I work at Microsoft.\");\n+\n+    static final List<String> KEY_PHRASE_INPUTS = Arrays.asList(\n+        \"Hello world. This is some input text that I love.\",\n+        \"Bonjour tout le monde\");\n+\n+    static final List<String> PII_ENTITY_INPUTS = Arrays.asList(\n+        \"Microsoft employee with ssn 859-98-0987 is using our awesome API's.\",\n+        \"Your ABA number - 111000025 - is the first 9 digits in the lower left hand corner of your personal check.\");\n+\n+    static final List<String> DETECT_LANGUAGE_INPUTS = Arrays.asList(\n+        \"This is written in English\", \"Este es un document escrito en Espa\u00f1ol.\", \"~@!~:)\");\n+\n+    static List<DetectLanguageInput> getDetectLanguageInputs() {\n+        return Arrays.asList(\n+            new DetectLanguageInput(\"0\", DETECT_LANGUAGE_INPUTS.get(0), \"US\"),\n+            new DetectLanguageInput(\"1\", DETECT_LANGUAGE_INPUTS.get(1)),\n+            new DetectLanguageInput(\"2\", DETECT_LANGUAGE_INPUTS.get(2), \"US\")\n+        );\n+    }\n+\n+    static List<TextDocumentInput> getTextDocumentNamedEntityInputs() {\n+        return Arrays.asList(", "originalCommit": "c607b46ec92186c392a9b71d965d134be3b0948b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2ODczMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7514#discussion_r370868733", "bodyText": "Updated", "author": "samvaity", "createdAt": "2020-01-24T22:22:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwODk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3b4f33a94b2babeb2629fa0b994629485d6e86a4", "chunk": "diff --git a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\nindex 15c849d41e8..f3ce666a5d0 100644\n--- a/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n+++ b/sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TestUtils.java\n\n@@ -24,6 +24,8 @@ import com.azure.ai.textanalytics.models.TextSentimentClass;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n \n /**\n  * Contains helper methods for generating inputs for test methods\n"}}, {"oid": "3b4f33a94b2babeb2629fa0b994629485d6e86a4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3b4f33a94b2babeb2629fa0b994629485d6e86a4", "message": "use generic TextDocumentInput method for inputs", "committedDate": "2020-01-26T22:04:59Z", "type": "forcePushed"}, {"oid": "dc2f6baeae3ba370758c397967c88b3ba0dfee63", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dc2f6baeae3ba370758c397967c88b3ba0dfee63", "message": "use generic TextDocumentInput method for inputs", "committedDate": "2020-01-26T22:11:04Z", "type": "forcePushed"}, {"oid": "45df27d111f38d7782687ad03ae361a827650f17", "url": "https://github.com/Azure/azure-sdk-for-java/commit/45df27d111f38d7782687ad03ae361a827650f17", "message": "use generic TextDocumentInput method for inputs", "committedDate": "2020-01-26T22:19:31Z", "type": "commit"}, {"oid": "45df27d111f38d7782687ad03ae361a827650f17", "url": "https://github.com/Azure/azure-sdk-for-java/commit/45df27d111f38d7782687ad03ae361a827650f17", "message": "use generic TextDocumentInput method for inputs", "committedDate": "2020-01-26T22:19:31Z", "type": "forcePushed"}]}