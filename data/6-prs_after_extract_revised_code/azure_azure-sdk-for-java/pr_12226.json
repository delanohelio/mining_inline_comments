{"pr_number": 12226, "pr_title": "Allow overriding restricted headers for JDK 12+ HttpClient", "pr_createdAt": "2020-06-16T09:42:47Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/12226", "timeline": [{"oid": "f33f9dec9eb026eb68666d8fdfa246b311216ece", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f33f9dec9eb026eb68666d8fdfa246b311216ece", "message": "Allow overriding restricted headers for JDK 12+ HttpClient", "committedDate": "2020-06-16T09:37:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MjcxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440992712", "bodyText": "Does the JVM check both environment and system properties when allowing these headers to be used? If not we should use whichever it uses directly as Configuration will lookup against both.", "author": "alzimmermsft", "createdAt": "2020-06-16T16:40:39Z", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);\n+        restrictedHeaders.addAll(DEFAULT_RESTRICTED_HEADERS);\n+        restrictedHeaders.removeAll(allowRestrictedHeaders);\n+        return restrictedHeaders;\n+    }\n+\n+    private Set<String> getAllowRestrictedHeaders() {\n+        Properties properties = getNetworkProperties();\n+        String[] allowRestrictedHeadersNetProperties =\n+            properties.getProperty(JDK_HTTPCLIENT_ALLOW_RESTRICTED_HEADERS, \"\").split(\",\");\n+\n+        // Read all allowed restricted headers from configuration\n+        Configuration config = (this.configuration == null)", "originalCommit": "f33f9dec9eb026eb68666d8fdfa246b311216ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NzgxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441047816", "bodyText": "Since most of our proxy and other configurations are checking both, users might want to use the same location (either env var or sys properties) for all their configurations. So, checking both as it makes it easier for the user.", "author": "srnagar", "createdAt": "2020-06-16T18:13:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MjcxMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5ODgzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440998832", "bodyText": "There are several ways to have allowlist. Could you update the message here? Also, change whitelist wording.\nDo we want to change the log level to WARNING?", "author": "sima-zhu", "createdAt": "2020-06-16T16:50:34Z", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "diffHunk": "@@ -89,7 +75,7 @@\n             if (headers != null) {\n                 for (HttpHeader header : headers) {\n                     final String headerName = header.getName();\n-                    if (!JDK12_RESTRICTED_HEADERS.contains(headerName)) {\n+                    if (!restrictedHeaders.contains(headerName)) {\n                         final String headerValue = header.getValue();\n                         builder.setHeader(headerName, headerValue);\n                     } else {", "originalCommit": "f33f9dec9eb026eb68666d8fdfa246b311216ece", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a2b09e2c05d83e6765ec5503db19abc75d627617", "chunk": "diff --git a/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java b/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\nindex 88da0525b56..6578c830cc2 100644\n--- a/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\n+++ b/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\n\n@@ -79,8 +79,10 @@ class JdkAsyncHttpClient implements HttpClient {\n                         final String headerValue = header.getValue();\n                         builder.setHeader(headerName, headerValue);\n                     } else {\n-                        logger.error(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n-                            + \"and above (unless it is whitelisted in JAVA_HOME/conf/net.properties).\");\n+                        logger.warning(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n+                            + \"and above. This header can be whitelisted in JAVA_HOME/conf/net.properties or in \"\n+                            + \"System.setProperty() or in Configuration. Use the key 'jdk.httpclient\"\n+                            + \".allowRestrictedHeaders' and a comma separated list of header names.\");\n                     }\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5OTkwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r440999902", "bodyText": "What's the purpose of having Case_Insensitive_Order?", "author": "sima-zhu", "createdAt": "2020-06-16T16:52:21Z", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClientBuilder.java", "diffHunk": "@@ -144,7 +182,56 @@ public HttpClient build() {\n                         buildProxyOptions.getPassword()));\n             }\n         }\n-        return new JdkAsyncHttpClient(httpClientBuilder.build());\n+        return new JdkAsyncHttpClient(httpClientBuilder.build(), Collections.unmodifiableSet(getRestrictedHeaders()));\n+    }\n+\n+    Set<String> getRestrictedHeaders() {\n+        // Compute the effective restricted headers by removing the allowed headers from default restricted headers\n+        Set<String> allowRestrictedHeaders = getAllowRestrictedHeaders();\n+        Set<String> restrictedHeaders = new TreeSet<>(String.CASE_INSENSITIVE_ORDER);", "originalCommit": "f33f9dec9eb026eb68666d8fdfa246b311216ece", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0OTE0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441049141", "bodyText": "Case insensitive order will allow for set.contains() to ignore case and evaluate if the header is restricted or not. See unit tests.", "author": "srnagar", "createdAt": "2020-06-16T18:16:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5OTkwMg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a2b09e2c05d83e6765ec5503db19abc75d627617", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a2b09e2c05d83e6765ec5503db19abc75d627617", "message": "Run rest proxy tests for JDK 12 and above only", "committedDate": "2020-06-16T21:10:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE5MTkxMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/12226#discussion_r441191910", "bodyText": "'added to the allow list'", "author": "JonathanGiles", "createdAt": "2020-06-16T23:11:13Z", "path": "sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java", "diffHunk": "@@ -89,12 +75,14 @@\n             if (headers != null) {\n                 for (HttpHeader header : headers) {\n                     final String headerName = header.getName();\n-                    if (!JDK12_RESTRICTED_HEADERS.contains(headerName)) {\n+                    if (!restrictedHeaders.contains(headerName)) {\n                         final String headerValue = header.getValue();\n                         builder.setHeader(headerName, headerValue);\n                     } else {\n-                        logger.error(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n-                            + \"and above (unless it is whitelisted in JAVA_HOME/conf/net.properties).\");\n+                        logger.warning(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n+                            + \"and above. This header can be whitelisted in JAVA_HOME/conf/net.properties or in \"", "originalCommit": "a2b09e2c05d83e6765ec5503db19abc75d627617", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "226943a3758bb354ecbbfe843ea2438a39a293b7", "chunk": "diff --git a/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java b/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\nindex 6578c830cc2..583d4a40e49 100644\n--- a/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\n+++ b/sdk/core/azure-core-http-jdk-httpclient/src/main/java/com/azure/core/http/jdk/httpclient/JdkAsyncHttpClient.java\n\n@@ -80,8 +80,8 @@ class JdkAsyncHttpClient implements HttpClient {\n                         builder.setHeader(headerName, headerValue);\n                     } else {\n                         logger.warning(\"The header '\" + headerName + \"' is restricted by default in JDK HttpClient 12 \"\n-                            + \"and above. This header can be whitelisted in JAVA_HOME/conf/net.properties or in \"\n-                            + \"System.setProperty() or in Configuration. Use the key 'jdk.httpclient\"\n+                            + \"and above. This header can be added to allow list in JAVA_HOME/conf/net.properties \"\n+                            + \"or in System.setProperty() or in Configuration. Use the key 'jdk.httpclient\"\n                             + \".allowRestrictedHeaders' and a comma separated list of header names.\");\n                     }\n                 }\n"}}, {"oid": "226943a3758bb354ecbbfe843ea2438a39a293b7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/226943a3758bb354ecbbfe843ea2438a39a293b7", "message": "Run junit tests on JDK 12 or above", "committedDate": "2020-06-17T05:47:31Z", "type": "commit"}, {"oid": "29ccf022ab8926f18f69f4989ec6470203ef6652", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29ccf022ab8926f18f69f4989ec6470203ef6652", "message": "Skip jacoco coverage check until JDK 12 is supported in pipeline", "committedDate": "2020-06-17T06:24:16Z", "type": "commit"}]}