{"pr_number": 8825, "pr_title": "EncryptedBlobClientBuilder enhancements", "pr_createdAt": "2020-03-06T22:19:34Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8825", "timeline": [{"oid": "ed67bc936a09d0eaa44f5c21de86fcb022f68dc9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ed67bc936a09d0eaa44f5c21de86fcb022f68dc9", "message": "Added initial CPK ground work", "committedDate": "2020-03-04T18:49:00Z", "type": "commit"}, {"oid": "f56f1b4e75287d063b918ce6ceb50d0ae7afa926", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f56f1b4e75287d063b918ce6ceb50d0ae7afa926", "message": "added tests and removed ability to get cpk from a blob", "committedDate": "2020-03-06T22:12:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE3MjA0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389172041", "bodyText": "remove this comment", "author": "gapra-msft", "createdAt": "2020-03-06T22:20:05Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java", "diffHunk": "@@ -93,13 +94,17 @@\n      * @param containerName The container name.\n      * @param blobName The blob name.\n      * @param snapshot The snapshot identifier for the blob, pass {@code null} to interact with the blob directly.\n+     * @param customerProvidedKey Customer provided key used during encryption of the blob's data on the server, pass\n+     * {@code null} to allow the service to use its own encryption.\n      * @param key The key used to encrypt and decrypt data.\n      * @param keyWrapAlgorithm The algorithm used to wrap/unwrap the key during encryption.\n      */\n     EncryptedBlobAsyncClient(HttpPipeline pipeline, String url, BlobServiceVersion serviceVersion, String accountName,\n-        String containerName, String blobName, String snapshot, AsyncKeyEncryptionKey key, String keyWrapAlgorithm) {\n-        super(pipeline, url, serviceVersion, accountName, containerName, blobName, snapshot, null /*cpk*/,\n-            null /*encryption scope*/);\n+        String containerName, String blobName, String snapshot, CpkInfo customerProvidedKey,\n+        AsyncKeyEncryptionKey key, String keyWrapAlgorithm) {\n+        super(pipeline, url, serviceVersion, accountName, containerName, blobName, snapshot, customerProvidedKey,\n+            null);\n+        // Note encryption scope is always null when passed in from the client builder.", "originalCommit": "f56f1b4e75287d063b918ce6ceb50d0ae7afa926", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java\nindex 61aaa2d42c7..3de42944d1b 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobAsyncClient.java\n\n@@ -104,7 +104,6 @@ public class EncryptedBlobAsyncClient extends BlobAsyncClient {\n         AsyncKeyEncryptionKey key, String keyWrapAlgorithm) {\n         super(pipeline, url, serviceVersion, accountName, containerName, blobName, snapshot, customerProvidedKey,\n             null);\n-        // Note encryption scope is always null when passed in from the client builder.\n \n         this.keyWrapper = key;\n         this.keyWrapAlgorithm = keyWrapAlgorithm;\n"}}, {"oid": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "message": "removed comment", "committedDate": "2020-03-06T23:18:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMDc5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389910791", "bodyText": "If one is not present", "author": "rickle-msft", "createdAt": "2020-03-09T19:26:09Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -469,19 +472,37 @@ public EncryptedBlobClientBuilder retryOptions(RequestRetryOptions retryOptions)\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.", "originalCommit": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NzQ3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389967474", "bodyText": "done", "author": "gapra-msft", "createdAt": "2020-03-09T21:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMDc5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex d52974795dc..b088e524ca9 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -472,9 +472,10 @@ public final class EncryptedBlobClientBuilder {\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy if one is not present.\n      *\n-     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}.\n+     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}\n+     * and {@link #customerProvidedKey(CustomerProvidedKey) customer provided key}.\n      *\n      * <p>Use this method after setting the key in {@link #key(AsyncKeyEncryptionKey, String) key} and keyResolver in\n      * {@link #keyResolver(AsyncKeyEncryptionKeyResolver)}.</p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzc2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389913762", "bodyText": "cpk isn't ignored, right? Maybe for a bit of future-proofing, we should specify that any options used to configure a pipeline are ignored?", "author": "rickle-msft", "createdAt": "2020-03-09T19:31:53Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -469,19 +472,37 @@ public EncryptedBlobClientBuilder retryOptions(RequestRetryOptions retryOptions)\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.\n      *\n      * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}.", "originalCommit": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkyMDAyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389920029", "bodyText": "It's also not copied since it isn't a pipeline option. I guess it feels a little weird to stay stuff outside the pipeline won't be copied, but the pipeline is a weird concept for people, so maybe it's best to be explicit.", "author": "rickle-msft", "createdAt": "2020-03-09T19:44:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzc2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NzkxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389967911", "bodyText": "I think they might get confused cause they dont know what options are pipeline and what arent, I'll just say except CPK", "author": "gapra-msft", "createdAt": "2020-03-09T21:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMzc2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex d52974795dc..b088e524ca9 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -472,9 +472,10 @@ public final class EncryptedBlobClientBuilder {\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy if one is not present.\n      *\n-     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}.\n+     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}\n+     * and {@link #customerProvidedKey(CustomerProvidedKey) customer provided key}.\n      *\n      * <p>Use this method after setting the key in {@link #key(AsyncKeyEncryptionKey, String) key} and keyResolver in\n      * {@link #keyResolver(AsyncKeyEncryptionKeyResolver)}.</p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNDA1OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389914059", "bodyText": "Can we check to ensure one isn't already present? I suppose it wouldn't matter because we remove the encryption metadata, so it wouldn't double decrypt, but it's probably safer if we check.", "author": "rickle-msft", "createdAt": "2020-03-09T19:32:33Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -469,19 +472,37 @@ public EncryptedBlobClientBuilder retryOptions(RequestRetryOptions retryOptions)\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.\n      *\n      * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}.\n      *\n+     * <p>Use this method after setting the key in {@link #key(AsyncKeyEncryptionKey, String) key} and keyResolver in\n+     * {@link #keyResolver(AsyncKeyEncryptionKeyResolver)}.</p>\n+     *\n      * @param httpPipeline HttpPipeline to use for sending service requests and receiving responses.\n      * @return the updated EncryptedBlobClientBuilder object\n      */\n     public EncryptedBlobClientBuilder pipeline(HttpPipeline httpPipeline) {\n         if (this.httpPipeline != null && httpPipeline == null) {\n             logger.info(\"HttpPipeline is being set to 'null' when it was previously configured.\");\n         }\n+        checkValidEncryptionParameters();\n+\n+        HttpPipeline pipeline = null;\n+        if (httpPipeline != null) {\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new BlobDecryptionPolicy(keyWrapper, keyResolver));\n+            for (int i = 0; i < httpPipeline.getPolicyCount(); i++) {", "originalCommit": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2Njc5NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389966794", "bodyText": "will do", "author": "gapra-msft", "createdAt": "2020-03-09T21:17:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNDA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex d52974795dc..b088e524ca9 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -472,9 +472,10 @@ public final class EncryptedBlobClientBuilder {\n     }\n \n     /**\n-     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy.\n+     * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy if one is not present.\n      *\n-     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}.\n+     * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}\n+     * and {@link #customerProvidedKey(CustomerProvidedKey) customer provided key}.\n      *\n      * <p>Use this method after setting the key in {@link #key(AsyncKeyEncryptionKey, String) key} and keyResolver in\n      * {@link #keyResolver(AsyncKeyEncryptionKeyResolver)}.</p>\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxOTQwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389919408", "bodyText": "Can you add \"for security reasons\" to hopefully preempt some customers who may ask for this?", "author": "rickle-msft", "createdAt": "2020-03-09T19:43:04Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -512,6 +552,9 @@ public EncryptedBlobClientBuilder serviceVersion(BlobServiceVersion version) {\n      * <p>If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint} and\n      * {@link #serviceVersion(BlobServiceVersion) serviceVersion}.</p>\n      *\n+     * <p>Note that this method does not copy over the {@link CustomerProvidedKey} and encryption scope properties", "originalCommit": "1c429a76a42a682fff5e3132ca1e562fc7b36b8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NzM4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8825#discussion_r389967387", "bodyText": "done", "author": "gapra-msft", "createdAt": "2020-03-09T21:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxOTQwOA=="}], "type": "inlineReview", "revised_code": {"commit": "41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex d52974795dc..b088e524ca9 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -552,8 +558,9 @@ public final class EncryptedBlobClientBuilder {\n      * <p>If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint} and\n      * {@link #serviceVersion(BlobServiceVersion) serviceVersion}.</p>\n      *\n-     * <p>Note that this method does not copy over the {@link CustomerProvidedKey} and encryption scope properties\n-     * from the provided client. To set CPK, please use {@link #customerProvidedKey(CustomerProvidedKey)}.</p>\n+     * <p>Note that for security reasons, this method does not copy over the {@link CustomerProvidedKey} and\n+     * encryption scope properties from the provided client. To set CPK, please use\n+     * {@link #customerProvidedKey(CustomerProvidedKey)}.</p>\n      *\n      * @param blobClient BlobClient used to configure the builder.\n      * @return the updated EncryptedBlobClientBuilder object\n"}}, {"oid": "41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/41d2b2c3097e472bc9118fb4f64bea4752e75ed7", "message": "addressed PR comments", "committedDate": "2020-03-09T21:18:08Z", "type": "commit"}]}