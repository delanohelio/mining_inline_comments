{"pr_number": 9411, "pr_title": "Updates ServiceBusClientBuilder to match API changes", "pr_createdAt": "2020-03-23T23:08:23Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9411", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwMzk4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9411#discussion_r396903982", "bodyText": "ReceiveMessageOptions :  Should this be removed ? You have added these properties in  ServiceBusReceiverBuilder already.", "author": "hemanttanwar", "createdAt": "2020-03-24T05:04:04Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiveMessageOptions.java", "diffHunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.", "originalCommit": "c7e376e21caf269cec2d70ec6759ad4cfb35a188", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0OTM1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9411#discussion_r397349350", "bodyText": "This is a package-private class. It's easier than passing around 6 parameters.", "author": "conniey", "createdAt": "2020-03-24T17:51:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwMzk4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MDE2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9411#discussion_r397370161", "bodyText": "Okay, Its fine. This package-private. No need to take it out.", "author": "hemanttanwar", "createdAt": "2020-03-24T18:23:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwMzk4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f27bbcbe23000b218e5b03d15b38ea20a981c33c", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiveMessageOptions.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiveMessageOptions.java\nindex 2e1bd6b04ce..b6d3833c6d3 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiveMessageOptions.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiveMessageOptions.java\n\n@@ -16,8 +16,8 @@ class ReceiveMessageOptions {\n     private final int prefetchCount;\n     private final Duration maxAutoRenewDuration;\n \n-    ReceiveMessageOptions(boolean autoComplete, ReceiveMode receiveMode, int prefetchCount,\n-        Duration maxAutoRenewDuration) {\n+    ReceiveMessageOptions(boolean autoComplete, Duration maxAutoRenewDuration, int prefetchCount,\n+        ReceiveMode receiveMode) {\n         this.autoComplete = autoComplete;\n         this.receiveMode = receiveMode;\n         this.prefetchCount = prefetchCount;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwNTM3Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9411#discussion_r396905372", "bodyText": "Should we use term producers ? This is eventhub term. How about senders", "author": "hemanttanwar", "createdAt": "2020-03-24T05:10:41Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -140,90 +148,77 @@ public ServiceBusClientBuilder proxyOptions(ProxyOptions proxyOptions) {\n     }\n \n     /**\n-     * Specify connection string and  queue name for connection to Queue.\n+     * Sets the retry options for Service Bus clients. If not specified, the default retry options are used.\n      *\n-     * @param connectionString to connect to service bus resource.\n-     * @param topicOrQueueName The name of the queue.\n-     *\n-     * @return The {@link ServiceBusClientBuilder}.\n-     */\n-    public ServiceBusClientBuilder connectionString(String connectionString, String topicOrQueueName) {\n-        this.serviceBusResourceName = topicOrQueueName;\n-        return connectionString(connectionString);\n-    }\n-\n-    /**\n-     * @param retryPolicy to recover from Connection.\n+     * @param retryOptions The retry options to use.\n      *\n-     * @return The {@link ServiceBusClientBuilder}.\n+     * @return The updated {@link ServiceBusClientBuilder} object.\n      */\n-    public ServiceBusClientBuilder retryPolicy(AmqpRetryPolicy retryPolicy) {\n+    public ServiceBusClientBuilder retryOptions(AmqpRetryOptions retryOptions) {\n+        this.retryOptions = retryOptions;\n         return this;\n     }\n \n     /**\n-     * This is valid for receiving messages only.\n+     * Sets the scheduler to use.\n      *\n-     * @param receiveMessageOptions for receiving.\n+     * @param scheduler Scheduler to be used.\n      *\n-     * @return The {@link ServiceBusClientBuilder}.\n+     * @return The updated {@link ServiceBusClientBuilder} object.\n      */\n-    public ServiceBusClientBuilder receiveMessageOptions(ReceiveMessageOptions receiveMessageOptions) {\n-        this.receiveMessageOptions = receiveMessageOptions;\n+    ServiceBusClientBuilder scheduler(Scheduler scheduler) {\n+        this.scheduler = scheduler;\n         return this;\n     }\n \n     /**\n-     * @param transportType to use.\n+     * Sets the transport type by which all the communication with Azure Service Bus occurs. Default value is {@link\n+     * AmqpTransportType#AMQP}.\n      *\n-     * @return The {@link ServiceBusClientBuilder}.\n+     * @param transportType The transport type to use.\n+     *\n+     * @return The updated {@link ServiceBusClientBuilder} object.\n      */\n     public ServiceBusClientBuilder transportType(AmqpTransportType transportType) {\n         this.transport = transportType;\n         return this;\n     }\n \n     /**\n-     * @param retryOptions to manage AMQP connection.\n+     * A new instance of {@link ServiceBusSenderClientBuilder} used to configure Service Bus message producers.", "originalCommit": "c7e376e21caf269cec2d70ec6759ad4cfb35a188", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d49f9b011258418310e46157d4cf257008cb33c0", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex 6d4fe9eb5a5..e41e90eff41 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -189,7 +190,7 @@ public final class ServiceBusClientBuilder {\n      *\n      * @return A new instance of {@link ServiceBusSenderClientBuilder}.\n      */\n-    public ServiceBusSenderClientBuilder senderClientBuilder() {\n+    public ServiceBusSenderClientBuilder buildSenderClientBuilder() {\n         return new ServiceBusSenderClientBuilder();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwNjY2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9411#discussion_r396906669", "bodyText": "I thought of changing this in APIview\nrenewDuration->renewalDuration", "author": "hemanttanwar", "createdAt": "2020-03-24T05:16:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -338,4 +320,252 @@ private ProxyOptions getDefaultProxyConfiguration(Configuration configuration) {\n \n         return new ProxyOptions(authentication, proxy, username, password);\n     }\n+\n+    private static boolean isNullOrEmpty(String item) {\n+        return item == null || item.isEmpty();\n+    }\n+\n+    /**\n+     * Builder for creating {@link ServiceBusSenderClient} and {@link ServiceBusSenderAsyncClient} to publish messages\n+     * to Service Bus.\n+     */\n+    public final class ServiceBusSenderClientBuilder {\n+        private String queueOrTopicName;\n+\n+        private ServiceBusSenderClientBuilder() {\n+        }\n+\n+        /**\n+         * Sets the name of the Service Bus resource to publish messages to.\n+         *\n+         * @param queueOrTopicName Name of the Service Bus resource to publish messages to.\n+         *\n+         * @return The updated {@link ServiceBusSenderClientBuilder} builder.\n+         */\n+        public ServiceBusSenderClientBuilder entityName(String queueOrTopicName) {\n+            this.queueOrTopicName = queueOrTopicName;\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an <b>asynchronous</b> {@link ServiceBusSenderAsyncClient client} for transmitting {@link\n+         * ServiceBusMessage} to a Service Bus queue or topic.\n+         *\n+         * @return A new {@link ServiceBusSenderAsyncClient} for transmitting to a Service queue or topic.\n+         */\n+        public ServiceBusSenderAsyncClient buildAsyncClient() {\n+            final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n+\n+            if (isNullOrEmpty(connectionStringEntityName) && isNullOrEmpty(queueOrTopicName)) {\n+                throw logger.logExceptionAsError(new IllegalStateException(\n+                    \"Cannot create sender without setting the entityName\"));\n+            }\n+            if (!isNullOrEmpty(connectionStringEntityName) && !isNullOrEmpty(queueOrTopicName)\n+                && !connectionStringEntityName.equals(queueOrTopicName)) {\n+                throw logger.logExceptionAsError(new IllegalStateException(String.format(\n+                    \"entityName '%s' from connection string does not match the queueOrTopicName '%s' set in sender.\",\n+                    connectionStringEntityName, queueOrTopicName)));\n+            }\n+\n+            final String entityName = queueOrTopicName != null ? queueOrTopicName : connectionStringEntityName;\n+\n+            return new ServiceBusSenderAsyncClient(entityName, connectionProcessor, retryOptions, tracerProvider,\n+                messageSerializer);\n+        }\n+\n+        /**\n+         * Creates a <b>synchronous</b> {@link ServiceBusSenderClient client} for transmitting {@link ServiceBusMessage}\n+         * to a Service Bus queue or topic.\n+         *\n+         * @return A new {@link ServiceBusSenderAsyncClient} for transmitting to a Service queue or topic.\n+         */\n+        public ServiceBusSenderClient buildClient() {\n+            return new ServiceBusSenderClient(buildAsyncClient());\n+        }\n+    }\n+\n+    /**\n+     * Builder for creating {@link ServiceBusReceiverClient} and {@link ServiceBusReceiverAsyncClient} to consume\n+     * messages from Service Bus.\n+     */\n+    public final class ServiceBusReceiverClientBuilder {\n+        // Using 0 pre-fetch count for both receive modes, to avoid message lock lost exceptions in application receiving\n+        // messages at a slow rate. Applications can set it to a higher value if they need better performance.\n+        private static final int DEFAULT_PREFETCH_COUNT = 1;\n+\n+        private boolean autoComplete;\n+        private Duration maxAutoLockRenewalDuration;\n+        private int prefetchCount = DEFAULT_PREFETCH_COUNT;\n+        private String queueName;\n+        private String subscriptionName;\n+        private String topicName;\n+        private ReceiveMode receiveMode = ReceiveMode.PEEK_LOCK;\n+\n+        private ServiceBusReceiverClientBuilder() {\n+        }\n+\n+        /**\n+         * Sets whether or not to automatically complete a received message after it has been processed.\n+         *\n+         * @param autoComplete {@code true} to automatically complete a received message after it has been\n+         *     processed; {@code false} otherwise.\n+         *\n+         * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n+         */\n+        public ServiceBusReceiverClientBuilder isAutoComplete(boolean autoComplete) {\n+            this.autoComplete = autoComplete;\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the maximum duration within which the lock will be renewed automatically. This value should be greater\n+         * than the longest message lock duration.\n+         *\n+         * @param renewDuration The maximum duration within which the lock will be renewed automatically.\n+         *\n+         * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n+         */\n+        public ServiceBusReceiverClientBuilder maxAutoLockRenewalDuration(Duration renewDuration) {", "originalCommit": "c7e376e21caf269cec2d70ec6759ad4cfb35a188", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f27bbcbe23000b218e5b03d15b38ea20a981c33c", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex 6d4fe9eb5a5..7759474c3e7 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -322,7 +323,7 @@ public final class ServiceBusClientBuilder {\n     }\n \n     private static boolean isNullOrEmpty(String item) {\n-        return item == null || item.isEmpty();\n+        return item != null && !item.isEmpty();\n     }\n \n     /**\n"}}, {"oid": "f27bbcbe23000b218e5b03d15b38ea20a981c33c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f27bbcbe23000b218e5b03d15b38ea20a981c33c", "message": "Updating client builder.", "committedDate": "2020-03-24T22:42:31Z", "type": "commit"}, {"oid": "8d6929ed9890efb7ead9373ce5a9c86e49228ccb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8d6929ed9890efb7ead9373ce5a9c86e49228ccb", "message": "Fixing tests", "committedDate": "2020-03-24T22:42:32Z", "type": "commit"}, {"oid": "d6c577a4aef8042e80c1b2c9d80c54d6344a3d9f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6c577a4aef8042e80c1b2c9d80c54d6344a3d9f", "message": "Adding documentation.", "committedDate": "2020-03-24T22:42:33Z", "type": "commit"}, {"oid": "b5c84a075aa6ab4c1cbb8de7b54339c6819781b2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b5c84a075aa6ab4c1cbb8de7b54339c6819781b2", "message": "Fixing samples.", "committedDate": "2020-03-24T22:42:33Z", "type": "commit"}, {"oid": "cef1a11a1ac1a7329f4f64adaf0b17f444f306ab", "url": "https://github.com/Azure/azure-sdk-for-java/commit/cef1a11a1ac1a7329f4f64adaf0b17f444f306ab", "message": "Fix README samples.", "committedDate": "2020-03-24T22:42:33Z", "type": "commit"}, {"oid": "8e9938641b0fb375517ad355ff2099763b2e04d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8e9938641b0fb375517ad355ff2099763b2e04d2", "message": "Add queue name.", "committedDate": "2020-03-24T22:42:34Z", "type": "commit"}, {"oid": "24e38998fe65734e98428fa9f853a50a45bd6690", "url": "https://github.com/Azure/azure-sdk-for-java/commit/24e38998fe65734e98428fa9f853a50a45bd6690", "message": "Fixing bug", "committedDate": "2020-03-24T22:42:34Z", "type": "commit"}, {"oid": "d49f9b011258418310e46157d4cf257008cb33c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d49f9b011258418310e46157d4cf257008cb33c0", "message": "Fix checkstyles.", "committedDate": "2020-03-24T22:42:35Z", "type": "commit"}, {"oid": "0755024e7d2f725e76e67f4d8739fd6f6666c4e8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0755024e7d2f725e76e67f4d8739fd6f6666c4e8", "message": "Fixing suppressions.", "committedDate": "2020-03-24T22:42:35Z", "type": "commit"}, {"oid": "b258162d231dbb79ceb23af6689a66adfd09a22d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b258162d231dbb79ceb23af6689a66adfd09a22d", "message": "Fix build breaks.", "committedDate": "2020-03-24T23:01:35Z", "type": "forcePushed"}, {"oid": "b9ce5bb0c7e617d737e54d94a5c8a6c7250a0367", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b9ce5bb0c7e617d737e54d94a5c8a6c7250a0367", "message": "Fix build breaks.", "committedDate": "2020-03-24T23:03:22Z", "type": "commit"}, {"oid": "b9ce5bb0c7e617d737e54d94a5c8a6c7250a0367", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b9ce5bb0c7e617d737e54d94a5c8a6c7250a0367", "message": "Fix build breaks.", "committedDate": "2020-03-24T23:03:22Z", "type": "forcePushed"}, {"oid": "b1e71403ecc83b66fefda6b64571cfb9200eae67", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1e71403ecc83b66fefda6b64571cfb9200eae67", "message": "Fixing tests.", "committedDate": "2020-03-24T23:06:31Z", "type": "commit"}, {"oid": "95a13eafa50b4759c9375b041c925e41b20b28a1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/95a13eafa50b4759c9375b041c925e41b20b28a1", "message": "Updating language.", "committedDate": "2020-03-25T01:09:52Z", "type": "commit"}, {"oid": "ac2bbbc2f3993bb98e515303da3d44983da30165", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ac2bbbc2f3993bb98e515303da3d44983da30165", "message": "Fix checkstyle issues.", "committedDate": "2020-03-25T01:13:58Z", "type": "commit"}, {"oid": "f8b664d8a00ff404cdcfcc43441cd92a62fe8a3d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f8b664d8a00ff404cdcfcc43441cd92a62fe8a3d", "message": "Fix snippets.", "committedDate": "2020-03-25T01:33:39Z", "type": "commit"}, {"oid": "7ba80d15b09807637c5bfe5c546896910219fb1d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ba80d15b09807637c5bfe5c546896910219fb1d", "message": "Fix checkstyle.", "committedDate": "2020-03-25T02:13:57Z", "type": "commit"}, {"oid": "7ba80d15b09807637c5bfe5c546896910219fb1d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ba80d15b09807637c5bfe5c546896910219fb1d", "message": "Fix checkstyle.", "committedDate": "2020-03-25T02:13:57Z", "type": "forcePushed"}]}