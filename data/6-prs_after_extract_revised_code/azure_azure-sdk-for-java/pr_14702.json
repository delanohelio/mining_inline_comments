{"pr_number": 14702, "pr_title": "Convert ModelData.model to String", "pr_createdAt": "2020-09-01T23:31:22Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14702", "timeline": [{"oid": "dabe1e742d10e69fa5b07ce847bd7f08c22c4bda", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dabe1e742d10e69fa5b07ce847bd7f08c22c4bda", "message": "Convert ModelData.model to String", "committedDate": "2020-09-01T23:29:58Z", "type": "commit"}, {"oid": "65eb1f457d0dc53f63cb0b58be074848dbce6873", "url": "https://github.com/Azure/azure-sdk-for-java/commit/65eb1f457d0dc53f63cb0b58be074848dbce6873", "message": "Update DigitalTwinModelData.java", "committedDate": "2020-09-01T23:36:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481490054", "bodyText": "This constructor is currently public because this class lives in a different package than the convenience layer.", "author": "azabbasi", "createdAt": "2020-09-01T23:37:42Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {", "originalCommit": "65eb1f457d0dc53f63cb0b58be074848dbce6873", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjYzMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492633", "bodyText": "A user should never need to initialize this type, correct?", "author": "abhipsaMisra", "createdAt": "2020-09-01T23:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5ODM0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481498349", "bodyText": "correct, I am talking to Srikanta to see what we should do here.", "author": "azabbasi", "createdAt": "2020-09-02T00:05:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUwMzI3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481503271", "bodyText": "@srnagar", "author": "azabbasi", "createdAt": "2020-09-02T00:22:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTEyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482271123", "bodyText": "Spoke to @azabbasi offline and discussed 3 options.\n\nLeave the public ctor as-is since this is output-only model and the user is not expected to create a new instance\nUse an interface for public model type and define a concrete type in implementation package\nUse a helper type to convert from internal type to public type and make the ctor package-private on the public type.\n\nFor options 1 and 3, flatten the internal ModelData type and pass the properties directly.", "author": "srnagar", "createdAt": "2020-09-02T18:16:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5OTIyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482299220", "bodyText": "Thank you Srikanta. I went with the 3rd option as it seems to be the cleanest", "author": "azabbasi", "createdAt": "2020-09-02T18:46:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MDA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "c95d60af878108cbc0ad738abc35625912855102", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\nindex d7635bb1a8e..9c5feef5fbe 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n\n@@ -24,12 +24,20 @@ public class DigitalTwinModelData {\n     public DigitalTwinModelData(ModelData modelData) {\n         mapper = new ObjectMapper();\n \n+        String modelStringValue = null;\n+\n+        try {\n+            modelStringValue = mapper.writeValueAsString(modelData.getModel());\n+        } catch (JsonProcessingException e) {\n+            e.printStackTrace();\n+        }\n+\n         this.setId(modelData.getId())\n             .setUploadTime(modelData.getUploadTime())\n             .setDisplayName(modelData.getDisplayName())\n             .setDescription(modelData.getDescription())\n             .setDecommissioned(modelData.isDecommissioned())\n-            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+            .setModel(modelStringValue);\n     }\n \n     /*\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjA1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492058", "bodyText": "this gives us correctly formatted json string, correct?", "author": "abhipsaMisra", "createdAt": "2020-09-01T23:44:22Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));", "originalCommit": "65eb1f457d0dc53f63cb0b58be074848dbce6873", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5ODIwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481498206", "bodyText": "no, I had to use writeValueAsString to get that out of the object.", "author": "azabbasi", "createdAt": "2020-09-02T00:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjA1OA=="}], "type": "inlineReview", "revised_code": {"commit": "c95d60af878108cbc0ad738abc35625912855102", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\nindex d7635bb1a8e..9c5feef5fbe 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n\n@@ -24,12 +24,20 @@ public class DigitalTwinModelData {\n     public DigitalTwinModelData(ModelData modelData) {\n         mapper = new ObjectMapper();\n \n+        String modelStringValue = null;\n+\n+        try {\n+            modelStringValue = mapper.writeValueAsString(modelData.getModel());\n+        } catch (JsonProcessingException e) {\n+            e.printStackTrace();\n+        }\n+\n         this.setId(modelData.getId())\n             .setUploadTime(modelData.getUploadTime())\n             .setDisplayName(modelData.getDisplayName())\n             .setDescription(modelData.getDescription())\n             .setDecommissioned(modelData.isDecommissioned())\n-            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+            .setModel(modelStringValue);\n     }\n \n     /*\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjQ1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492451", "bodyText": "I don't think we need java doc comments on these private fields, the getters and setters have the comments already, so this feels repetitive. What do you think?", "author": "abhipsaMisra", "createdAt": "2020-09-01T23:45:32Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.digitaltwins.core.implementation.models.ModelData;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * The DigitalTwinModelData representing the model and its corresponding metadata.\n+ */\n+@Fluent\n+public class DigitalTwinModelData {\n+\n+    private final ObjectMapper mapper;\n+\n+    /**\n+     * Creates a new instance of DigitalTwinModelData.\n+     * @param modelData The model data.\n+     */\n+    public DigitalTwinModelData(ModelData modelData) {\n+        mapper = new ObjectMapper();\n+\n+        this.setId(modelData.getId())\n+            .setUploadTime(modelData.getUploadTime())\n+            .setDisplayName(modelData.getDisplayName())\n+            .setDescription(modelData.getDescription())\n+            .setDecommissioned(modelData.isDecommissioned())\n+            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+    }\n+\n+    /*\n+     * A language map that contains the localized display names as specified in\n+     * the model definition.\n+     */", "originalCommit": "65eb1f457d0dc53f63cb0b58be074848dbce6873", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5Mjk5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r481492993", "bodyText": "This is a copy of the ModelData, I tried to keep changes as minimal as possible.", "author": "azabbasi", "createdAt": "2020-09-01T23:47:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ5MjQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c95d60af878108cbc0ad738abc35625912855102", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\nindex d7635bb1a8e..9c5feef5fbe 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/DigitalTwinModelData.java\n\n@@ -24,12 +24,20 @@ public class DigitalTwinModelData {\n     public DigitalTwinModelData(ModelData modelData) {\n         mapper = new ObjectMapper();\n \n+        String modelStringValue = null;\n+\n+        try {\n+            modelStringValue = mapper.writeValueAsString(modelData.getModel());\n+        } catch (JsonProcessingException e) {\n+            e.printStackTrace();\n+        }\n+\n         this.setId(modelData.getId())\n             .setUploadTime(modelData.getUploadTime())\n             .setDisplayName(modelData.getDisplayName())\n             .setDescription(modelData.getDescription())\n             .setDecommissioned(modelData.isDecommissioned())\n-            .setModel(mapper.convertValue(modelData.getModel(), String.class));\n+            .setModel(modelStringValue);\n     }\n \n     /*\n"}}, {"oid": "c95d60af878108cbc0ad738abc35625912855102", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c95d60af878108cbc0ad738abc35625912855102", "message": "Update DigitalTwinModelData.java", "committedDate": "2020-09-02T00:04:54Z", "type": "commit"}, {"oid": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/231450064831cb1d4d8b4fbb8d3db84ec21c95ca", "message": "Include model definition by default.", "committedDate": "2020-09-02T00:19:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482289099", "bodyText": "Will this be included retrieving multiple models also?", "author": "bikamani", "createdAt": "2020-09-02T18:35:47Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java", "diffHunk": "@@ -35,8 +35,9 @@ public ListModelOptions setMaxItemCount(Integer maxItemCount) {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n+     * Enabled by default.\n      */\n-    private Boolean includeModelDefinition;\n+    private Boolean includeModelDefinition = true;", "originalCommit": "231450064831cb1d4d8b4fbb8d3db84ec21c95ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI5OTg5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482299899", "bodyText": "yes, it's only used for the list operation and it is turned on by default in .NET, so I turned it on by default in here too.", "author": "azabbasi", "createdAt": "2020-09-02T18:47:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNTcxNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482305715", "bodyText": "Isn't this false by default, on the .NET client?", "author": "abhipsaMisra", "createdAt": "2020-09-02T18:53:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0OTY3NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482349674", "bodyText": "no, On by default.", "author": "azabbasi", "createdAt": "2020-09-02T19:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM3MDc5Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482370793", "bodyText": "Correction:\nOn GetModel we use default value of true and do not have an overload to change it. So this constant will not change.\nOn ListModel, default value is false.", "author": "azabbasi", "createdAt": "2020-09-02T19:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4OTA5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "1f51ab57e1bb60089179f8644368ee999f007d16", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java\nindex ce69fa6fd1f..2c4b6ba3da5 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/util/ListModelOptions.java\n\n@@ -35,9 +35,9 @@ public final class ListModelOptions {\n \n     /*\n      * Whether to include the model definition in the result. If false, only the model metadata will be returned.\n-     * Enabled by default.\n+     * Disabled by default.\n      */\n-    private Boolean includeModelDefinition = true;\n+    private Boolean includeModelDefinition = false;\n \n     /**\n      * Get the includeModelDefinition property.\n"}}, {"oid": "a4321332393fffd11d0a391a430a9aa91c3adea4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a4321332393fffd11d0a391a430a9aa91c3adea4", "message": "Use converter approach to construct Models", "committedDate": "2020-09-02T18:45:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMTE2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482301168", "bodyText": "We call this ModelData in the .NET client, maybe call it the same here as well?", "author": "abhipsaMisra", "createdAt": "2020-09-02T18:48:52Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -750,19 +752,19 @@ public HttpPipeline getHttpPipeline() {\n      * @return A {@link PagedFlux} of created models and the http response.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<ModelData> createModels(List<String> models) {\n+    public PagedFlux<DigitalTwinModelData> createModels(List<String> models) {", "originalCommit": "a4321332393fffd11d0a391a430a9aa91c3adea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNjk5MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482306991", "bodyText": "sure, we can reuse the same name now that they are in 2 different packages.", "author": "azabbasi", "createdAt": "2020-09-02T18:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwMTE2OA=="}], "type": "inlineReview", "revised_code": {"commit": "1f51ab57e1bb60089179f8644368ee999f007d16", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\nindex 10325d6ceb0..db432b61275 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n\n@@ -752,19 +750,19 @@ public final class DigitalTwinsAsyncClient {\n      * @return A {@link PagedFlux} of created models and the http response.\n      */\n     @ServiceMethod(returns = ReturnType.COLLECTION)\n-    public PagedFlux<DigitalTwinModelData> createModels(List<String> models) {\n+    public PagedFlux<ModelData> createModels(List<String> models) {\n         return new PagedFlux<>(\n             () -> withContext(context -> createModelsSinglePageAsync(models, context)),\n             nextLink -> withContext(context -> Mono.empty()));\n     }\n \n-    PagedFlux<DigitalTwinModelData> createModels(List<String> models, Context context){\n+    PagedFlux<ModelData> createModels(List<String> models, Context context){\n         return new PagedFlux<>(\n             () -> createModelsSinglePageAsync(models, context),\n             nextLink -> Mono.empty());\n     }\n \n-    Mono<PagedResponse<DigitalTwinModelData>> createModelsSinglePageAsync(List<String> models, Context context)\n+    Mono<PagedResponse<ModelData>> createModelsSinglePageAsync(List<String> models, Context context)\n     {\n         List<Object> modelsPayload = new ArrayList<>();\n         for (String model: models) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNDU3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482304575", "bodyText": "Should we thrown an exception here? An exception here indicates that service sent us incorrectly formatted data, we should surface this exception up.", "author": "abhipsaMisra", "createdAt": "2020-09-02T18:52:29Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * Creates publicly facing object types\n+ */\n+public class ModelConverter {\n+    public static DigitalTwinModelData convertToDigitalTwinModelData(\n+        String id,\n+        Object model,\n+        OffsetDateTime uploadTime,\n+        Map<String, String> description,\n+        Map<String, String> displayName,\n+        Boolean isDecommissioned)\n+    {\n+        String modelStringValue = null;\n+\n+        if (model!= null){\n+            try {\n+                modelStringValue = new ObjectMapper().writeValueAsString(model);\n+            } catch (JsonProcessingException e) {\n+                e.printStackTrace();", "originalCommit": "a4321332393fffd11d0a391a430a9aa91c3adea4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f51ab57e1bb60089179f8644368ee999f007d16", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java\ndeleted file mode 100644\nindex d338f3b8591..00000000000\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-package com.azure.digitaltwins.core.models;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-\n-import java.time.OffsetDateTime;\n-import java.util.Map;\n-\n-/**\n- * Creates publicly facing object types\n- */\n-public class ModelConverter {\n-    public static DigitalTwinModelData convertToDigitalTwinModelData(\n-        String id,\n-        Object model,\n-        OffsetDateTime uploadTime,\n-        Map<String, String> description,\n-        Map<String, String> displayName,\n-        Boolean isDecommissioned)\n-    {\n-        String modelStringValue = null;\n-\n-        if (model!= null){\n-            try {\n-                modelStringValue = new ObjectMapper().writeValueAsString(model);\n-            } catch (JsonProcessingException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-\n-        return new DigitalTwinModelData()\n-            .setId(id)\n-            .setUploadTime(uploadTime)\n-            .setDisplayName(displayName)\n-            .setDescription(description)\n-            .setDecommissioned(isDecommissioned)\n-            .setModel(modelStringValue);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNzA3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482307076", "bodyText": "Why not have the converter take in the PL ModelData directly?", "author": "abhipsaMisra", "createdAt": "2020-09-02T18:55:08Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.azure.digitaltwins.core.models;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.time.OffsetDateTime;\n+import java.util.Map;\n+\n+/**\n+ * Creates publicly facing object types\n+ */\n+public class ModelConverter {\n+    public static DigitalTwinModelData convertToDigitalTwinModelData(\n+        String id,\n+        Object model,\n+        OffsetDateTime uploadTime,\n+        Map<String, String> description,\n+        Map<String, String> displayName,\n+        Boolean isDecommissioned)", "originalCommit": "a4321332393fffd11d0a391a430a9aa91c3adea4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwODM3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482308371", "bodyText": "good question, we cannot expose any models from the implementation package to the user. and now that we are hiding the ModelData, we can't take it as a parameter here since this is in the core.model package", "author": "azabbasi", "createdAt": "2020-09-02T18:56:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNzA3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1f51ab57e1bb60089179f8644368ee999f007d16", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java\ndeleted file mode 100644\nindex d338f3b8591..00000000000\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelConverter.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-package com.azure.digitaltwins.core.models;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-\n-import java.time.OffsetDateTime;\n-import java.util.Map;\n-\n-/**\n- * Creates publicly facing object types\n- */\n-public class ModelConverter {\n-    public static DigitalTwinModelData convertToDigitalTwinModelData(\n-        String id,\n-        Object model,\n-        OffsetDateTime uploadTime,\n-        Map<String, String> description,\n-        Map<String, String> displayName,\n-        Boolean isDecommissioned)\n-    {\n-        String modelStringValue = null;\n-\n-        if (model!= null){\n-            try {\n-                modelStringValue = new ObjectMapper().writeValueAsString(model);\n-            } catch (JsonProcessingException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-\n-        return new DigitalTwinModelData()\n-            .setId(id)\n-            .setUploadTime(uploadTime)\n-            .setDisplayName(displayName)\n-            .setDescription(description)\n-            .setDecommissioned(isDecommissioned)\n-            .setModel(modelStringValue);\n-    }\n-}\n"}}, {"oid": "1f51ab57e1bb60089179f8644368ee999f007d16", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1f51ab57e1bb60089179f8644368ee999f007d16", "message": "Add converters package", "committedDate": "2020-09-02T19:50:55Z", "type": "commit"}, {"oid": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a27c5c247d84ee84bdeaf4b235bd20b6195ff19e", "message": "Update ModelDataConverter.java", "committedDate": "2020-09-02T19:55:22Z", "type": "commit"}, {"oid": "8f1bb57567353c2bcd9118e3154bf942750047fa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8f1bb57567353c2bcd9118e3154bf942750047fa", "message": "fix format", "committedDate": "2020-09-02T19:57:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM5ODY0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482398645", "bodyText": "can be method reference: .map(ModelDataConverter::map)", "author": "abhipsaMisra", "createdAt": "2020-09-02T20:13:04Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -777,13 +777,20 @@ public HttpPipeline getHttpPipeline() {\n \n         return protocolLayer.getDigitalTwinModels().addWithResponseAsync(modelsPayload, context)\n             .map(\n-                listResponse -> new PagedResponseBase<>(\n-                    listResponse.getRequest(),\n-                    listResponse.getStatusCode(),\n-                    listResponse.getHeaders(),\n-                    listResponse.getValue(),\n-                    null,\n-                    ((ResponseBase)listResponse).getDeserializedHeaders()));\n+                objectPagedResponse -> {\n+                    List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n+                        .map(object -> ModelDataConverter.map(object))", "originalCommit": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\nindex db432b61275..96a567046f1 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n\n@@ -779,7 +779,7 @@ public final class DigitalTwinsAsyncClient {\n             .map(\n                 objectPagedResponse -> {\n                     List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n-                        .map(object -> ModelDataConverter.map(object))\n+                        .map(ModelDataConverter::map)\n                         .filter(Objects::nonNull)\n                         .collect(Collectors.toList());\n                     return new PagedResponseBase<>(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMDE3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482400176", "bodyText": "nit: tabbing needs to be fixed", "author": "abhipsaMisra", "createdAt": "2020-09-02T20:14:15Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -810,7 +817,15 @@ public HttpPipeline getHttpPipeline() {\n     Mono<Response<ModelData>> getModelWithResponse(String modelId, Context context){\n         return protocolLayer\n             .getDigitalTwinModels()\n-            .getByIdWithResponseAsync(modelId, includeModelDefinition, context);\n+            .getByIdWithResponseAsync(modelId, includeModelDefinitionOnGet, context)\n+            .map(response -> {\n+                com.azure.digitaltwins.core.implementation.models.ModelData modelData = response.getValue();\n+                return new SimpleResponse<>(\n+                response.getRequest(),", "originalCommit": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\nindex db432b61275..96a567046f1 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n\n@@ -821,10 +821,10 @@ public final class DigitalTwinsAsyncClient {\n             .map(response -> {\n                 com.azure.digitaltwins.core.implementation.models.ModelData modelData = response.getValue();\n                 return new SimpleResponse<>(\n-                response.getRequest(),\n-                response.getStatusCode(),\n-                response.getHeaders(),\n-                ModelDataConverter.map(modelData));\n+                    response.getRequest(),\n+                    response.getStatusCode(),\n+                    response.getHeaders(),\n+                    ModelDataConverter.map(modelData));\n             });\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjE5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482402199", "bodyText": "method reference here as well -> anywhere we are calling a static method can be replaced by a method reference", "author": "abhipsaMisra", "createdAt": "2020-09-02T20:15:46Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java", "diffHunk": "@@ -851,11 +866,39 @@ public HttpPipeline getHttpPipeline() {\n             listModelOptions.getDependenciesFor(),\n             listModelOptions.getIncludeModelDefinition(),\n             new DigitalTwinModelsListOptions().setMaxItemCount(listModelOptions.getMaxItemCount()),\n-            context);\n+            context)\n+            .map(\n+                objectPagedResponse -> {\n+                    List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n+                        .map(object -> ModelDataConverter.map(object))", "originalCommit": "a27c5c247d84ee84bdeaf4b235bd20b6195ff19e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjgwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482402809", "bodyText": "https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html", "author": "abhipsaMisra", "createdAt": "2020-09-02T20:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwMjE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\nindex db432b61275..96a567046f1 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/DigitalTwinsAsyncClient.java\n\n@@ -870,7 +870,7 @@ public final class DigitalTwinsAsyncClient {\n             .map(\n                 objectPagedResponse -> {\n                     List<ModelData> convertedList = objectPagedResponse.getValue().stream()\n-                        .map(object -> ModelDataConverter.map(object))\n+                        .map(ModelDataConverter::map)\n                         .filter(Objects::nonNull)\n                         .collect(Collectors.toList());\n                     return new PagedResponseBase<>(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQwNDcwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14702#discussion_r482404706", "bodyText": "these comments need to be updated -> DigitalTwinModelData", "author": "abhipsaMisra", "createdAt": "2020-09-02T20:17:44Z", "path": "sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java", "diffHunk": "@@ -66,7 +66,7 @@\n      * definition.\n      *\n      * @param displayName the displayName value to set.\n-     * @return the ModelData object itself.\n+     * @return the DigitalTwinModelData object itself.", "originalCommit": "8f1bb57567353c2bcd9118e3154bf942750047fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "chunk": "diff --git a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java\nindex 864024df808..6eee937348a 100644\n--- a/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java\n+++ b/sdk/digitaltwins/azure-digitaltwins-core/src/main/java/com/azure/digitaltwins/core/models/ModelData.java\n\n@@ -66,7 +66,7 @@ public class ModelData {\n      * definition.\n      *\n      * @param displayName the displayName value to set.\n-     * @return the DigitalTwinModelData object itself.\n+     * @return the ModelData object itself.\n      */\n     public ModelData setDisplayName(Map<String, String> displayName) {\n         this.displayName = displayName;\n"}}, {"oid": "ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ca7f3d623dbc79481fb2362e89c2867d72cd94e3", "message": "Address comments.", "committedDate": "2020-09-02T20:30:53Z", "type": "commit"}, {"oid": "31936804dfc9e2d4dcab922d327a080fc86470d8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/31936804dfc9e2d4dcab922d327a080fc86470d8", "message": "Update session recording", "committedDate": "2020-09-02T20:33:32Z", "type": "commit"}, {"oid": "21ed6f8953a721109514f2ffadf55a19b5b2c491", "url": "https://github.com/Azure/azure-sdk-for-java/commit/21ed6f8953a721109514f2ffadf55a19b5b2c491", "message": "Update SampleTest.java", "committedDate": "2020-09-02T21:20:05Z", "type": "commit"}]}