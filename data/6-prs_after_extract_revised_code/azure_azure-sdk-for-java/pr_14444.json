{"pr_number": 14444, "pr_title": "Identity adfs support aug 2020", "pr_createdAt": "2020-08-25T23:35:31Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/14444", "timeline": [{"oid": "d52deac8e12c66fae979329f5ad092cd3fca0841", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d52deac8e12c66fae979329f5ad092cd3fca0841", "message": "update", "committedDate": "2020-08-25T07:54:15Z", "type": "commit"}, {"oid": "9e12a3170d111646c005577073e1f2dd9c4d04f5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e12a3170d111646c005577073e1f2dd9c4d04f5", "message": "add support for adfs tenants", "committedDate": "2020-08-25T23:33:47Z", "type": "commit"}, {"oid": "d253f2a3e5a360db0b71db57070db66c4f18ddd4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d253f2a3e5a360db0b71db57070db66c4f18ddd4", "message": "update", "committedDate": "2020-08-25T23:43:39Z", "type": "commit"}, {"oid": "469921b561ec89d3367d653246298935d42e4f9f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/469921b561ec89d3367d653246298935d42e4f9f", "message": "code updates", "committedDate": "2020-08-28T21:37:43Z", "type": "commit"}, {"oid": "50a7cce118159bfa7ee6052c67cb6addbaa54e8a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/50a7cce118159bfa7ee6052c67cb6addbaa54e8a", "message": "update pom.", "committedDate": "2020-08-28T21:55:16Z", "type": "commit"}, {"oid": "4b742b5def48de8ed54370019295995429d2783d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4b742b5def48de8ed54370019295995429d2783d", "message": "fix test", "committedDate": "2020-08-28T22:14:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1ODQ3OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#discussion_r479558479", "bodyText": "Use string constants.", "author": "srnagar", "createdAt": "2020-08-28T22:22:47Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -640,38 +639,20 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @return a Publisher that emits an AccessToken\n      */\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n-        String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        return AuthorizationCodeListener.create(port)\n-            .flatMap(server -> {\n-                URI redirectUri;\n-                String browserUri;\n-                try {\n-                    redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n-                    browserUri =\n-                        String.format(\"%s/oauth2/v2.0/authorize?response_type=code&response_mode=query&prompt\"\n-                                + \"=select_account&client_id=%s&redirect_uri=%s&state=%s&scope=%s\",\n-                            authorityUrl,\n-                            clientId,\n-                            redirectUri.toString(),\n-                            UUID.randomUUID(),\n-                            String.join(\" \", request.getScopes()));\n-                } catch (URISyntaxException e) {\n-                    return server.dispose().then(Mono.error(e));\n-                }\n+        URI redirectUri;\n+        try {\n+            redirectUri = new URI(String.format(\"http://localhost:%s\", port));", "originalCommit": "4b742b5def48de8ed54370019295995429d2783d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "154187521731bd08db06f17b55573f791dba8be8", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 27d371de208..93ab41910d3 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -641,7 +642,7 @@ public class IdentityClient {\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n         URI redirectUri;\n         try {\n-            redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n+            redirectUri = new URI(HTTP_LOCALHOST + \":\" + port);\n         } catch (URISyntaxException e) {\n             return Mono.error(logger.logExceptionAsError(new RuntimeException(e)));\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1ODgzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#discussion_r479558836", "bodyText": "Do you need to use fromFuture? Can it just be:\n.flatMap(pc -> pc.acquireToken(parameters));", "author": "srnagar", "createdAt": "2020-08-28T22:24:04Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java", "diffHunk": "@@ -640,38 +639,20 @@ private HttpPipeline setupPipeline(HttpClient httpClient) {\n      * @return a Publisher that emits an AccessToken\n      */\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n-        String authorityUrl = options.getAuthorityHost().replaceAll(\"/+$\", \"\") + \"/\" + tenantId;\n-        return AuthorizationCodeListener.create(port)\n-            .flatMap(server -> {\n-                URI redirectUri;\n-                String browserUri;\n-                try {\n-                    redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n-                    browserUri =\n-                        String.format(\"%s/oauth2/v2.0/authorize?response_type=code&response_mode=query&prompt\"\n-                                + \"=select_account&client_id=%s&redirect_uri=%s&state=%s&scope=%s\",\n-                            authorityUrl,\n-                            clientId,\n-                            redirectUri.toString(),\n-                            UUID.randomUUID(),\n-                            String.join(\" \", request.getScopes()));\n-                } catch (URISyntaxException e) {\n-                    return server.dispose().then(Mono.error(e));\n-                }\n+        URI redirectUri;\n+        try {\n+            redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n+        } catch (URISyntaxException e) {\n+            return Mono.error(logger.logExceptionAsError(new RuntimeException(e)));\n+        }\n+        InteractiveRequestParameters parameters = InteractiveRequestParameters.builder(redirectUri)\n+                                                     .scopes(new HashSet<>(request.getScopes()))\n+                                                     .build();\n+        Mono<IAuthenticationResult> acquireToken = publicClientApplicationAccessor.getValue()\n+                               .flatMap(pc -> Mono.fromFuture(() -> pc.acquireToken(parameters)));", "originalCommit": "4b742b5def48de8ed54370019295995429d2783d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgzMjIzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/14444#discussion_r479832230", "bodyText": "its needed, because we get back a CompletableFuture.", "author": "g2vinay", "createdAt": "2020-08-30T23:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1ODgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "154187521731bd08db06f17b55573f791dba8be8", "chunk": "diff --git a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\nindex 27d371de208..93ab41910d3 100644\n--- a/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n+++ b/sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/IdentityClient.java\n\n@@ -641,7 +642,7 @@ public class IdentityClient {\n     public Mono<MsalToken> authenticateWithBrowserInteraction(TokenRequestContext request, int port) {\n         URI redirectUri;\n         try {\n-            redirectUri = new URI(String.format(\"http://localhost:%s\", port));\n+            redirectUri = new URI(HTTP_LOCALHOST + \":\" + port);\n         } catch (URISyntaxException e) {\n             return Mono.error(logger.logExceptionAsError(new RuntimeException(e)));\n         }\n"}}, {"oid": "154187521731bd08db06f17b55573f791dba8be8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/154187521731bd08db06f17b55573f791dba8be8", "message": "Address Feedback + Code Refactor", "committedDate": "2020-08-30T22:13:26Z", "type": "commit"}, {"oid": "c5d1dd8f8edf2abaccbe0dae4a07d4f9408d439a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c5d1dd8f8edf2abaccbe0dae4a07d4f9408d439a", "message": "fix module info", "committedDate": "2020-08-30T23:36:22Z", "type": "commit"}]}