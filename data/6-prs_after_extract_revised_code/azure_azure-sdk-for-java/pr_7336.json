{"pr_number": 7336, "pr_title": "Continue to use same .receive() method on disconnection", "pr_createdAt": "2020-01-10T07:25:32Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7336", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxOTQ1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7336#discussion_r365219450", "bodyText": "getScopesFromResource() might be a better name for this method?", "author": "srnagar", "createdAt": "2020-01-10T12:51:30Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/AzureTokenManagerProvider.java", "diffHunk": "@@ -47,7 +47,7 @@ public TokenManager getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, S\n         final String scopes = getResourceString(resource);", "originalCommit": "437b1bc4484829d8e9402394b409090d20252182", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6458e56013b1cbd7936ced5da04c044f8c7a6e2", "chunk": "diff --git a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/AzureTokenManagerProvider.java b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/AzureTokenManagerProvider.java\nindex b83d839d7a6..470e92558f1 100644\n--- a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/AzureTokenManagerProvider.java\n+++ b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/AzureTokenManagerProvider.java\n\n@@ -44,7 +44,7 @@ public class AzureTokenManagerProvider implements TokenManagerProvider {\n      */\n     @Override\n     public TokenManager getTokenManager(Mono<ClaimsBasedSecurityNode> cbsNodeMono, String resource) {\n-        final String scopes = getResourceString(resource);\n+        final String scopes = getScopesFromResource(resource);\n         final String tokenAudience = String.format(Locale.US, TOKEN_AUDIENCE_FORMAT, fullyQualifiedNamespace, resource);\n \n         logger.info(\"Creating new token manager for audience[{}], resource[{}]\", tokenAudience, resource);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMzMyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7336#discussion_r365223325", "bodyText": "Would it be more efficient if we just kept track of offset (long value) and convert to EventPosition only when the link goes down to restore the link? It prevents creating a lot of EventPosition objects.", "author": "srnagar", "createdAt": "2020-01-10T13:02:45Z", "path": "sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubPartitionAsyncConsumer.java", "diffHunk": "@@ -3,127 +3,68 @@\n \n package com.azure.messaging.eventhubs;\n \n-import com.azure.core.amqp.implementation.AmqpReceiveLink;\n import com.azure.core.amqp.implementation.MessageSerializer;\n import com.azure.core.util.logging.ClientLogger;\n+import com.azure.messaging.eventhubs.implementation.AmqpReceiveLinkProcessor;\n+import com.azure.messaging.eventhubs.models.EventPosition;\n import com.azure.messaging.eventhubs.models.LastEnqueuedEventProperties;\n import com.azure.messaging.eventhubs.models.PartitionContext;\n import com.azure.messaging.eventhubs.models.PartitionEvent;\n import com.azure.messaging.eventhubs.models.ReceiveOptions;\n import org.apache.qpid.proton.message.Message;\n import reactor.core.publisher.EmitterProcessor;\n import reactor.core.publisher.Flux;\n-import reactor.core.publisher.Mono;\n \n import java.util.concurrent.atomic.AtomicBoolean;\n-import java.util.concurrent.atomic.AtomicInteger;\n import java.util.concurrent.atomic.AtomicReference;\n-import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n \n /**\n  * A package-private consumer responsible for reading {@link EventData} from a specific Event Hub partition in the\n  * context of a specific consumer group.\n  */\n class EventHubPartitionAsyncConsumer implements AutoCloseable {\n-    private static final AtomicReferenceFieldUpdater<EventHubPartitionAsyncConsumer, AmqpReceiveLink>\n-        RECEIVE_LINK_FIELD_UPDATER = AtomicReferenceFieldUpdater.newUpdater(\n-        EventHubPartitionAsyncConsumer.class, AmqpReceiveLink.class, \"receiveLink\");\n-\n-    // We don't want to dump too many credits on the link at once. It's easy enough to ask for more.\n-    private static final int MINIMUM_REQUEST = 0;\n-    private static final int MAXIMUM_REQUEST = 100;\n-\n-    private final AtomicInteger creditsToRequest = new AtomicInteger(1);\n+    private final ClientLogger logger = new ClientLogger(EventHubPartitionAsyncConsumer.class);\n     private final AtomicBoolean isDisposed = new AtomicBoolean();\n     private final AtomicReference<LastEnqueuedEventProperties> lastEnqueuedEventProperties = new AtomicReference<>();\n-    private final ClientLogger logger = new ClientLogger(EventHubPartitionAsyncConsumer.class);\n+    private final AmqpReceiveLinkProcessor amqpReceiveLinkProcessor;\n     private final MessageSerializer messageSerializer;\n     private final String fullyQualifiedNamespace;\n     private final String eventHubName;\n     private final String consumerGroup;\n     private final String partitionId;\n-    private final EmitterProcessor<PartitionEvent> emitterProcessor;\n-    private final Flux<PartitionEvent> messageFlux;\n     private final boolean trackLastEnqueuedEventProperties;\n+    private final EmitterProcessor<PartitionEvent> emitterProcessor;\n \n-    private volatile AmqpReceiveLink receiveLink;\n-\n-    EventHubPartitionAsyncConsumer(Mono<AmqpReceiveLink> receiveLinkMono, MessageSerializer messageSerializer,\n-        String fullyQualifiedNamespace, String eventHubName, String consumerGroup, String partitionId,\n-        int prefetchCount, boolean trackLastEnqueuedEventProperties) {\n+    EventHubPartitionAsyncConsumer(AmqpReceiveLinkProcessor amqpReceiveLinkProcessor,\n+        MessageSerializer messageSerializer, String fullyQualifiedNamespace, String eventHubName, String consumerGroup,\n+        String partitionId, AtomicReference<EventPosition> currentEventPosition,\n+        boolean trackLastEnqueuedEventProperties) {\n+        this.amqpReceiveLinkProcessor = amqpReceiveLinkProcessor;\n         this.messageSerializer = messageSerializer;\n         this.fullyQualifiedNamespace = fullyQualifiedNamespace;\n         this.eventHubName = eventHubName;\n         this.consumerGroup = consumerGroup;\n         this.partitionId = partitionId;\n-        this.emitterProcessor = EmitterProcessor.create(prefetchCount, false);\n+        this.emitterProcessor = amqpReceiveLinkProcessor\n+            .map(message -> onMessageReceived(message))\n+            .doOnNext(event -> {\n+                // Keep track of the last position so if the link goes down, we don't start from the original location.\n+                final Long offset = event.getData().getOffset();\n+                if (offset != null) {\n+                    currentEventPosition.set(EventPosition.fromOffset(offset));", "originalCommit": "437b1bc4484829d8e9402394b409090d20252182", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0NjcyOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7336#discussion_r365346729", "bodyText": "Makes sense. I'll update it.", "author": "conniey", "createdAt": "2020-01-10T17:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMzMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6458e56013b1cbd7936ced5da04c044f8c7a6e2", "chunk": "diff --git a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubPartitionAsyncConsumer.java b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubPartitionAsyncConsumer.java\nindex 02e47a12d58..73a55a800f9 100644\n--- a/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubPartitionAsyncConsumer.java\n+++ b/sdk/eventhubs/azure-messaging-eventhubs/src/main/java/com/azure/messaging/eventhubs/EventHubPartitionAsyncConsumer.java\n\n@@ -15,8 +15,10 @@ import org.apache.qpid.proton.message.Message;\n import reactor.core.publisher.EmitterProcessor;\n import reactor.core.publisher.Flux;\n \n+import java.util.Objects;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Supplier;\n \n /**\n  * A package-private consumer responsible for reading {@link EventData} from a specific Event Hub partition in the\n"}}, {"oid": "d6458e56013b1cbd7936ced5da04c044f8c7a6e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6458e56013b1cbd7936ced5da04c044f8c7a6e2", "message": "Update to getScopeFromResource.", "committedDate": "2020-01-14T00:16:41Z", "type": "forcePushed"}, {"oid": "a9dc952aef45e18fb7473ad5af2c00aa3e947ec2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a9dc952aef45e18fb7473ad5af2c00aa3e947ec2", "message": "Fix logging.", "committedDate": "2020-01-14T08:07:53Z", "type": "commit"}, {"oid": "5f22186723a7f88049751570ee2fe335115ac5f3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f22186723a7f88049751570ee2fe335115ac5f3", "message": " Adds AmqpChannelProcessor and test.", "committedDate": "2020-01-14T08:07:54Z", "type": "commit"}, {"oid": "85cb4e11e2afe6751260b96672664260ebeaf602", "url": "https://github.com/Azure/azure-sdk-for-java/commit/85cb4e11e2afe6751260b96672664260ebeaf602", "message": "Delete AmqpChannelProcessor and test.", "committedDate": "2020-01-14T08:07:55Z", "type": "commit"}, {"oid": "d57f3c7a3ffd22a672525ba6153b1cece4f0aa06", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d57f3c7a3ffd22a672525ba6153b1cece4f0aa06", "message": "Add AmqpLinkMessageProcessor and partition async consumer.", "committedDate": "2020-01-14T08:07:56Z", "type": "commit"}, {"oid": "7c270855749fcf3cc4e62f7f02f79e256c812218", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7c270855749fcf3cc4e62f7f02f79e256c812218", "message": "Add AmqpReceiveLinkProcessor and test.", "committedDate": "2020-01-14T08:07:56Z", "type": "commit"}, {"oid": "659a481862ffb50dd6663f1d4d8887a1347ed233", "url": "https://github.com/Azure/azure-sdk-for-java/commit/659a481862ffb50dd6663f1d4d8887a1347ed233", "message": "Connect AMQP link processor to EventHubConsumer.", "committedDate": "2020-01-14T08:07:57Z", "type": "commit"}, {"oid": "6ff212d4e383424d1bd24497ccc4f4f0315d47e9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6ff212d4e383424d1bd24497ccc4f4f0315d47e9", "message": "Adding tests for EventHubPartitionAsyncConsumer.", "committedDate": "2020-01-14T08:07:58Z", "type": "commit"}, {"oid": "bc8c78c08d27f679f6748c2911f5e61c145ab948", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bc8c78c08d27f679f6748c2911f5e61c145ab948", "message": "Enabling tests.", "committedDate": "2020-01-14T08:07:59Z", "type": "commit"}, {"oid": "943d8b3a7d5cf53ba4cadad1b2b3b781bbb1b5d4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/943d8b3a7d5cf53ba4cadad1b2b3b781bbb1b5d4", "message": "Add support for updating link position.", "committedDate": "2020-01-14T08:08:00Z", "type": "commit"}, {"oid": "41952343efb726c9625d65aacf45da25c7ae8b6e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/41952343efb726c9625d65aacf45da25c7ae8b6e", "message": "Fix assertions.", "committedDate": "2020-01-14T08:08:01Z", "type": "commit"}, {"oid": "004f413cbc6c3e2240fc06ab394bbfaedb9c3d72", "url": "https://github.com/Azure/azure-sdk-for-java/commit/004f413cbc6c3e2240fc06ab394bbfaedb9c3d72", "message": "Update test with receive.", "committedDate": "2020-01-14T08:08:02Z", "type": "commit"}, {"oid": "c902645988570f9a84a22cc6579021dbb7036ae2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c902645988570f9a84a22cc6579021dbb7036ae2", "message": "Remove all public modifiers.", "committedDate": "2020-01-14T08:08:02Z", "type": "commit"}, {"oid": "b869fff63588464167d796daea27554d380921b9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b869fff63588464167d796daea27554d380921b9", "message": "Fix bug where we're constantly asking for more connections.", "committedDate": "2020-01-14T08:08:03Z", "type": "commit"}, {"oid": "61d596548ed689b07152d98dfb3a2ca22b79c129", "url": "https://github.com/Azure/azure-sdk-for-java/commit/61d596548ed689b07152d98dfb3a2ca22b79c129", "message": "Fixing integration tests.", "committedDate": "2020-01-14T08:08:04Z", "type": "commit"}, {"oid": "11f7ce3dbc19ade91198627d61d1298a11435106", "url": "https://github.com/Azure/azure-sdk-for-java/commit/11f7ce3dbc19ade91198627d61d1298a11435106", "message": "Fixing checkstyle issues.", "committedDate": "2020-01-14T08:08:05Z", "type": "commit"}, {"oid": "1cb3e06f85c1f8561a31ea8ddcd12dfadd1035d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1cb3e06f85c1f8561a31ea8ddcd12dfadd1035d2", "message": "Pass Supplier for EventPosition.", "committedDate": "2020-01-14T08:08:06Z", "type": "commit"}, {"oid": "f58df9f4a6f7b51565b572ccf1e6178b71fe698a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f58df9f4a6f7b51565b572ccf1e6178b71fe698a", "message": "Adding tests.", "committedDate": "2020-01-14T08:08:07Z", "type": "commit"}, {"oid": "9774305afb8746a8919d7edbc96c5f0828f45b9a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9774305afb8746a8919d7edbc96c5f0828f45b9a", "message": "Request another link on link closure", "committedDate": "2020-01-14T08:08:08Z", "type": "commit"}, {"oid": "94180976e455e88f32eb1e6ce7a15482180452ef", "url": "https://github.com/Azure/azure-sdk-for-java/commit/94180976e455e88f32eb1e6ce7a15482180452ef", "message": "Fix tests.", "committedDate": "2020-01-14T08:08:08Z", "type": "commit"}, {"oid": "9d9ce08ca09dd6967a9ed06d791bfe30738f82f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9d9ce08ca09dd6967a9ed06d791bfe30738f82f7", "message": "When EndpointState == closed, also close the link.", "committedDate": "2020-01-14T08:08:09Z", "type": "commit"}, {"oid": "9849d1bf362f769dcb356dcce0a2fb15470d65f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9849d1bf362f769dcb356dcce0a2fb15470d65f7", "message": "Fix tests.", "committedDate": "2020-01-14T08:08:10Z", "type": "commit"}, {"oid": "3716892fa94191f1c07f7cced8cc6726a7a6bdb3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3716892fa94191f1c07f7cced8cc6726a7a6bdb3", "message": "Fix test errors.", "committedDate": "2020-01-14T08:08:11Z", "type": "commit"}, {"oid": "df5dbfd9fad5c04b6c1bb99667ebe679d3ed9dcd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/df5dbfd9fad5c04b6c1bb99667ebe679d3ed9dcd", "message": "Update to getScopeFromResource.", "committedDate": "2020-01-14T08:08:12Z", "type": "commit"}, {"oid": "b347611ff371f01e043d7bf2e3c477a107f5f710", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b347611ff371f01e043d7bf2e3c477a107f5f710", "message": "Update RetryUtil to log more information.", "committedDate": "2020-01-14T08:08:13Z", "type": "commit"}, {"oid": "c559a876677bb73b62a94729658fa73e91f1b8f5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c559a876677bb73b62a94729658fa73e91f1b8f5", "message": "Fix test.", "committedDate": "2020-01-14T08:08:14Z", "type": "commit"}, {"oid": "17e7e261cd48a9e8ac393def33e0868842cf3ba2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/17e7e261cd48a9e8ac393def33e0868842cf3ba2", "message": "Adding ReactorConnection to handle transient errors.", "committedDate": "2020-01-14T08:08:14Z", "type": "commit"}, {"oid": "9d9ebf16da9a524382160f9c797156121a23a753", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9d9ebf16da9a524382160f9c797156121a23a753", "message": "Passing reference to parent connection for disposed.", "committedDate": "2020-01-14T08:08:15Z", "type": "commit"}, {"oid": "9d9ebf16da9a524382160f9c797156121a23a753", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9d9ebf16da9a524382160f9c797156121a23a753", "message": "Passing reference to parent connection for disposed.", "committedDate": "2020-01-14T08:08:15Z", "type": "forcePushed"}, {"oid": "2a9aa7b761807d923fbf53224ea015de0b61917f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2a9aa7b761807d923fbf53224ea015de0b61917f", "message": "Fixing message.", "committedDate": "2020-01-14T08:16:58Z", "type": "commit"}]}