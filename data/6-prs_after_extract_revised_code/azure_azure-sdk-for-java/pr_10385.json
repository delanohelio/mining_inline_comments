{"pr_number": 10385, "pr_title": "Adding support for completing messages on receiver link. Moving logic out of azure-core-amqp. Adding more status codes", "pr_createdAt": "2020-04-21T02:23:03Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10385", "timeline": [{"oid": "0f2a1e595eead2ab883ff791f125bcefd4d2087a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0f2a1e595eead2ab883ff791f125bcefd4d2087a", "message": "Adding missing AmqpResponseCode from .NET's AMQP library.", "committedDate": "2020-04-20T15:25:43Z", "type": "commit"}, {"oid": "16cc857e3faf6480ac41a127c35335ee0814b865", "url": "https://github.com/Azure/azure-sdk-for-java/commit/16cc857e3faf6480ac41a127c35335ee0814b865", "message": "Using a processor rather than a sink that could be null.", "committedDate": "2020-04-20T15:26:14Z", "type": "commit"}, {"oid": "9f3657565b27cbb15d182e9b6b44d410b60f8ca0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9f3657565b27cbb15d182e9b6b44d410b60f8ca0", "message": "Not throwing IllegalArgumentException when AMQP error condition not found. Being more versatile in parsing response codes.", "committedDate": "2020-04-20T15:41:22Z", "type": "commit"}, {"oid": "d9ab30beaed01af446a9d5eebcc971d379cfc434", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d9ab30beaed01af446a9d5eebcc971d379cfc434", "message": "Adding flexibility to decoding RequestResponse messages.", "committedDate": "2020-04-20T16:42:56Z", "type": "commit"}, {"oid": "007a3605dae6f680318ed016ab4e9e6d00cee2cf", "url": "https://github.com/Azure/azure-sdk-for-java/commit/007a3605dae6f680318ed016ab4e9e6d00cee2cf", "message": "Move message deserialization and validation out of RequestResponseChannel. Just validate a matching message.", "committedDate": "2020-04-20T17:21:57Z", "type": "commit"}, {"oid": "733058666673a9ce9ae435b3abc12560c268e1a3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/733058666673a9ce9ae435b3abc12560c268e1a3", "message": "Fixing exceptions and adding a test.", "committedDate": "2020-04-20T20:32:02Z", "type": "commit"}, {"oid": "7aade5831faf0f7559287acb0231302bc771b7df", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7aade5831faf0f7559287acb0231302bc771b7df", "message": "Adding condition when it is actually a symbol.", "committedDate": "2020-04-20T21:22:40Z", "type": "commit"}, {"oid": "b06e14afc0613974252896318bdba04ce8c42848", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b06e14afc0613974252896318bdba04ce8c42848", "message": "Fixing error handling in RequestResponseChannel.", "committedDate": "2020-04-20T21:44:41Z", "type": "commit"}, {"oid": "782dafa269b5e957402c004a329c1d44072a19e2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/782dafa269b5e957402c004a329c1d44072a19e2", "message": "Update message lock container to expire lock tokens.", "committedDate": "2020-04-20T22:56:46Z", "type": "commit"}, {"oid": "14376291df7125b5c33f6e0417331bd61ac8f5b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/14376291df7125b5c33f6e0417331bd61ac8f5b1", "message": "Add methods for reading RequestResponse status codes and error messages.", "committedDate": "2020-04-20T22:57:17Z", "type": "commit"}, {"oid": "a42da761f3a62be7f54538282d61ed98d63f2c56", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a42da761f3a62be7f54538282d61ed98d63f2c56", "message": "Use correct error message.", "committedDate": "2020-04-20T22:57:55Z", "type": "commit"}, {"oid": "bbe6119c4613d2026074cca55b546aeb014f6a29", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bbe6119c4613d2026074cca55b546aeb014f6a29", "message": "Add comment for service bus session and unnamed session.", "committedDate": "2020-04-20T22:58:33Z", "type": "commit"}, {"oid": "39bf5612ddab751cb22d41e65b302f4740164def", "url": "https://github.com/Azure/azure-sdk-for-java/commit/39bf5612ddab751cb22d41e65b302f4740164def", "message": "MessageLockContainer removed from constructor.", "committedDate": "2020-04-20T22:59:02Z", "type": "commit"}, {"oid": "ae1168b49854a547e90762b8c2f5ba5e64d83acb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ae1168b49854a547e90762b8c2f5ba5e64d83acb", "message": "Adding support for keeping sessions open.", "committedDate": "2020-04-20T22:59:53Z", "type": "commit"}, {"oid": "4fc291bf574eb2a1220c1f64bd577dd278900e0f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4fc291bf574eb2a1220c1f64bd577dd278900e0f", "message": "Adding support for settling messages on receive link.", "committedDate": "2020-04-20T23:00:45Z", "type": "commit"}, {"oid": "7a5fd32261a90a1fc7efad8644ec77a585b4b1e1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a5fd32261a90a1fc7efad8644ec77a585b4b1e1", "message": "Fixing tests.", "committedDate": "2020-04-20T23:01:57Z", "type": "commit"}, {"oid": "3bf2d935281e0b60800405013c4cb8c808ad2cf5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3bf2d935281e0b60800405013c4cb8c808ad2cf5", "message": "Fixing test failures.", "committedDate": "2020-04-21T02:16:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgyMDYyMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r411820623", "bodyText": "Changed from hex to dec values for readability.", "author": "conniey", "createdAt": "2020-04-21T02:23:32Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/exception/AmqpResponseCode.java", "diffHunk": "@@ -10,13 +10,54 @@\n  * Error response codes returned from AMQP.\n  */\n public enum AmqpResponseCode {\n-    ACCEPTED(0xca),\n+    ACCEPTED(202),", "originalCommit": "3bf2d935281e0b60800405013c4cb8c808ad2cf5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "246c2e0257649351d682d618f9e3cfcbf13b7af9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/246c2e0257649351d682d618f9e3cfcbf13b7af9", "message": "Fix incorrect formatting", "committedDate": "2020-04-21T02:29:51Z", "type": "commit"}, {"oid": "2c87e2734950a2ad445273890f8ba26b072d2aad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2c87e2734950a2ad445273890f8ba26b072d2aad", "message": "Adding error condition.", "committedDate": "2020-04-21T13:56:34Z", "type": "commit"}, {"oid": "1368b371445a454fdefbfeee1ed4410fb998d8a1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1368b371445a454fdefbfeee1ed4410fb998d8a1", "message": "Fixing tests.", "committedDate": "2020-04-21T15:19:23Z", "type": "commit"}, {"oid": "2d14fa563ccfdb2784891af71d204e855f0f4251", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2d14fa563ccfdb2784891af71d204e855f0f4251", "message": "Fixing logic when completing messages.", "committedDate": "2020-04-21T16:34:24Z", "type": "commit"}, {"oid": "8fbecfe8c2e779b39ea1751c9d6588cdc3d93bd6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8fbecfe8c2e779b39ea1751c9d6588cdc3d93bd6", "message": "Waiting for work to be completed.", "committedDate": "2020-04-21T17:39:00Z", "type": "commit"}, {"oid": "7b4bfe61f3566bf3995835a330fabe357f5f9f0e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7b4bfe61f3566bf3995835a330fabe357f5f9f0e", "message": "test cleanup.", "committedDate": "2020-04-21T17:50:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDc2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412334768", "bodyText": "How are we checking the error condition and throw error when service did not send OK status code ?", "author": "hemanttanwar", "createdAt": "2020-04-21T17:06:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -86,19 +84,11 @@\n         return isAuthorized(ManagementConstants.OPERATION_CANCEL_SCHEDULED_MESSAGE)\n             .then(createChannel.flatMap(channel -> {\n                 final Message requestMessage = createManagementMessage(\n-                    ManagementConstants.OPERATION_CANCEL_SCHEDULED_MESSAGE, channel.getReceiveLinkName());\n+                    ManagementConstants.OPERATION_CANCEL_SCHEDULED_MESSAGE, null);\n \n                 requestMessage.setBody(new AmqpValue(Collections.singletonMap(ManagementConstants.SEQUENCE_NUMBERS,\n                     new Long[]{sequenceNumber})));\n                 return channel.sendWithAck(requestMessage);\n-            }).map(responseMessage -> {\n-                int statusCode = RequestResponseUtils.getResponseStatusCode(responseMessage);\n-\n-                if (statusCode == AmqpResponseCode.OK.getValue()) {\n-                    return Mono.empty();", "originalCommit": "1368b371445a454fdefbfeee1ed4410fb998d8a1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM4NTIxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412385212", "bodyText": "Resolved", "author": "conniey", "createdAt": "2020-04-21T18:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNDc2OA=="}], "type": "inlineReview", "revised_code": {"commit": "0dfa82ff99f971a20d8d7e0df9f6a79504ec6bf9", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\nindex 95ed9d506d4..b504af20ae5 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n\n@@ -88,7 +90,8 @@ public class ManagementChannel implements ServiceBusManagementNode {\n \n                 requestMessage.setBody(new AmqpValue(Collections.singletonMap(ManagementConstants.SEQUENCE_NUMBERS,\n                     new Long[]{sequenceNumber})));\n-                return channel.sendWithAck(requestMessage);\n+\n+                return sendWithVerify(channel, requestMessage);\n             })).then();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzNjczOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412336738", "bodyText": "Should we use CoreUtils.isNullOrEmpty(associatedLinkName) here ?", "author": "hemanttanwar", "createdAt": "2020-04-21T17:09:16Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java", "diffHunk": "@@ -417,17 +383,17 @@ private Message createDispositionMessage(UUID[] lockTokens, DispositionStatus di\n      * Creates an AMQP message with the required application properties.\n      *\n      * @param operation Management operation to perform (ie. peek, update-disposition, etc.)\n-     * @param linkName Name of receiver link associated with operation.\n+     * @param associatedLinkName Name of the open receive link that first received the message.\n      * @return An AMQP message with the required headers.\n      */\n-    private Message createManagementMessage(String operation, String linkName) {\n+    private Message createManagementMessage(String operation, String associatedLinkName) {\n         final Duration serverTimeout = MessageUtils.adjustServerTimeout(operationTimeout);\n         final Map<String, Object> applicationProperties = new HashMap<>();\n         applicationProperties.put(ManagementConstants.MANAGEMENT_OPERATION_KEY, operation);\n         applicationProperties.put(ManagementConstants.SERVER_TIMEOUT, serverTimeout.toMillis());\n \n-        if (linkName != null && !linkName.isEmpty()) {\n-            applicationProperties.put(ManagementConstants.ASSOCIATED_LINK_NAME_KEY, linkName);\n+        if (associatedLinkName != null && !associatedLinkName.isEmpty()) {", "originalCommit": "1368b371445a454fdefbfeee1ed4410fb998d8a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0dfa82ff99f971a20d8d7e0df9f6a79504ec6bf9", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\nindex 95ed9d506d4..b504af20ae5 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ManagementChannel.java\n\n@@ -384,6 +407,7 @@ public class ManagementChannel implements ServiceBusManagementNode {\n      *\n      * @param operation Management operation to perform (ie. peek, update-disposition, etc.)\n      * @param associatedLinkName Name of the open receive link that first received the message.\n+     *\n      * @return An AMQP message with the required headers.\n      */\n     private Message createManagementMessage(String operation, String associatedLinkName) {\n"}}, {"oid": "0dfa82ff99f971a20d8d7e0df9f6a79504ec6bf9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0dfa82ff99f971a20d8d7e0df9f6a79504ec6bf9", "message": "Add verification for success.", "committedDate": "2020-04-21T18:13:43Z", "type": "commit"}, {"oid": "bacc41fe0228453797145543e03c7ca347dc98a6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bacc41fe0228453797145543e03c7ca347dc98a6", "message": "Adding verification of messages back.", "committedDate": "2020-04-21T18:16:31Z", "type": "commit"}, {"oid": "a13a639341043b092493e6b675e6524d21ee2ad5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a13a639341043b092493e6b675e6524d21ee2ad5", "message": "Fixing checkstyle", "committedDate": "2020-04-21T19:44:33Z", "type": "commit"}, {"oid": "96598b52a13e9192c998bf7837e3eda6b24a7814", "url": "https://github.com/Azure/azure-sdk-for-java/commit/96598b52a13e9192c998bf7837e3eda6b24a7814", "message": "Updating duratin.", "committedDate": "2020-04-21T19:51:23Z", "type": "commit"}, {"oid": "0ea84f36abea1d05c26dc3bbe771e4355a4b5045", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0ea84f36abea1d05c26dc3bbe771e4355a4b5045", "message": "Fixing spotbugs.", "committedDate": "2020-04-21T21:13:36Z", "type": "commit"}, {"oid": "58bb77e88b8f7970f34adc154f867f9060b4735e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/58bb77e88b8f7970f34adc154f867f9060b4735e", "message": "Fix errors when sending message through management channel.", "committedDate": "2020-04-22T00:02:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQwODc1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412408750", "bodyText": "nit: FluxUtil in azure-core has monoError static helper log and return errors.", "author": "srnagar", "createdAt": "2020-04-21T18:52:29Z", "path": "sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/RequestResponseChannel.java", "diffHunk": "@@ -220,8 +196,7 @@ public boolean isDisposed() {\n         }\n \n         if (message == null) {\n-            return Mono.error(logger.logExceptionAsError(\n-                new IllegalArgumentException(\"message cannot be null\")));\n+            return Mono.error(logger.logExceptionAsError(new NullPointerException(\"message cannot be null\")));", "originalCommit": "bacc41fe0228453797145543e03c7ca347dc98a6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d1d77d8d58185f50de07ffab60a0efaa5981717", "chunk": "diff --git a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/RequestResponseChannel.java b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/RequestResponseChannel.java\nindex 11df998089a..54be2b819b2 100644\n--- a/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/RequestResponseChannel.java\n+++ b/sdk/core/azure-core-amqp/src/main/java/com/azure/core/amqp/implementation/RequestResponseChannel.java\n\n@@ -191,20 +192,18 @@ public class RequestResponseChannel implements Disposable {\n      */\n     public Mono<Message> sendWithAck(final Message message) {\n         if (isDisposed()) {\n-            return Mono.error(logger.logExceptionAsError(new IllegalStateException(\n-                \"Cannot send a message when request response channel is disposed.\")));\n+            return monoError(logger, new IllegalStateException(\n+                \"Cannot send a message when request response channel is disposed.\"));\n         }\n \n         if (message == null) {\n-            return Mono.error(logger.logExceptionAsError(new NullPointerException(\"message cannot be null\")));\n+            return monoError(logger, new NullPointerException(\"message cannot be null\"));\n         }\n         if (message.getMessageId() != null) {\n-            return Mono.error(logger.logExceptionAsError(\n-                new IllegalArgumentException(\"message.getMessageId() should be null\")));\n+            return monoError(logger, new IllegalArgumentException(\"message.getMessageId() should be null\"));\n         }\n         if (message.getReplyTo() != null) {\n-            return Mono.error(logger.logExceptionAsError(\n-                new IllegalArgumentException(\"message.getReplyTo() should be null\")));\n+            return monoError(logger, new IllegalArgumentException(\"message.getReplyTo() should be null\"));\n         }\n \n         final UnsignedLong messageId = UnsignedLong.valueOf(requestId.incrementAndGet());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMjM1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412612354", "bodyText": "Can this be configurable? Or at least made a constant?", "author": "srnagar", "createdAt": "2020-04-22T01:57:21Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -118,9 +112,10 @@\n         this.receiveMode = receiverOptions.getReceiveMode();\n         this.sessionId = receiverOptions.getSessionId();\n         this.entityType = entityType;\n-        this.messageLockContainer = messageLockContainer;\n         this.onClientClose = onClientClose;\n \n+        this.linkName = StringUtil.getRandomString(entityPath);\n+        this.managementNodeLocks = new MessageLockContainer(Duration.ofSeconds(30));", "originalCommit": "58bb77e88b8f7970f34adc154f867f9060b4735e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6d1d77d8d58185f50de07ffab60a0efaa5981717", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex bee2ac288b1..c115a68b408 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -115,7 +115,7 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n         this.onClientClose = onClientClose;\n \n         this.linkName = StringUtil.getRandomString(entityPath);\n-        this.managementNodeLocks = new MessageLockContainer(Duration.ofSeconds(30));\n+        this.managementNodeLocks = new MessageLockContainer(cleanupInterval);\n         this.defaultReceiveOptions = new ReceiveAsyncOptions()\n             .setEnableAutoComplete(true)\n             .setMaxAutoRenewDuration(connectionProcessor.getRetryOptions().getTryTimeout());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMzcwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412613702", "bodyText": "Maybe worth making this log info as removing expired entries should be uncommon and users should be able to see it at info level? Also, consider adding a count of expired entries removed in the log.", "author": "srnagar", "createdAt": "2020-04-22T02:01:11Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java", "diffHunk": "@@ -3,14 +3,41 @@\n \n package com.azure.messaging.servicebus.implementation;\n \n+import com.azure.core.util.logging.ClientLogger;\n+import reactor.core.Disposable;\n+import reactor.core.publisher.Flux;\n+\n+import java.time.Duration;\n import java.time.Instant;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n /**\n- * Container of Message lock and related metadata related.\n+ * Container for message locks that are cleaned up periodically.\n  */\n-public class MessageLockContainer {\n-    private final ConcurrentHashMap<String, Instant> lockTokenExpirationMap = new ConcurrentHashMap<>();\n+public class MessageLockContainer implements AutoCloseable {\n+    private final ClientLogger logger = new ClientLogger(MessageLockContainer.class);\n+    private final ConcurrentHashMap<String, Instant> lockTokens = new ConcurrentHashMap<>();\n+    private final AtomicBoolean isDisposed = new AtomicBoolean();\n+    private final Disposable cleanupOperation;\n+\n+    public MessageLockContainer(Duration cleanupInterval) {\n+        cleanupOperation = Flux.interval(cleanupInterval).subscribe(e -> {\n+            if (lockTokens.isEmpty()) {\n+                return;\n+            }\n+\n+            final Instant now = Instant.now();\n+            final boolean removed = lockTokens.entrySet().removeIf(entry -> {\n+                final Instant expiration = entry.getValue();\n+                return expiration != null && expiration.isBefore(now);\n+            });\n+\n+            if (removed) {\n+                logger.verbose(\"{}: Removed expired entries.\", e);", "originalCommit": "58bb77e88b8f7970f34adc154f867f9060b4735e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkzMjY4NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10385#discussion_r412932684", "bodyText": "makes sense. I updated it!", "author": "conniey", "createdAt": "2020-04-22T12:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMzcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "6d1d77d8d58185f50de07ffab60a0efaa5981717", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\nindex 798df88b8d4..00386f6090d 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\n\n@@ -28,14 +28,15 @@ public class MessageLockContainer implements AutoCloseable {\n             }\n \n             final Instant now = Instant.now();\n-            final boolean removed = lockTokens.entrySet().removeIf(entry -> {\n+            lockTokens.entrySet().removeIf(entry -> {\n                 final Instant expiration = entry.getValue();\n-                return expiration != null && expiration.isBefore(now);\n+                final boolean isExpired = expiration != null && expiration.isBefore(now);\n+                if (isExpired) {\n+                    logger.info(\"lockToken[{}]. expiration[{}]. Removing expired entry. \",\n+                        entry.getKey(), expiration, e);\n+                }\n+                return isExpired;\n             });\n-\n-            if (removed) {\n-                logger.verbose(\"{}: Removed expired entries.\", e);\n-            }\n         });\n     }\n \n"}}, {"oid": "629845b430c5692a35efe2a0fc114e37b766d765", "url": "https://github.com/Azure/azure-sdk-for-java/commit/629845b430c5692a35efe2a0fc114e37b766d765", "message": "Adding verbosity to message processor.", "committedDate": "2020-04-22T11:40:51Z", "type": "commit"}, {"oid": "9e844dd0e962c5c3725dffe22e918135e90e47b0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9e844dd0e962c5c3725dffe22e918135e90e47b0", "message": "Increase timeout.", "committedDate": "2020-04-22T11:47:59Z", "type": "commit"}, {"oid": "6d1d77d8d58185f50de07ffab60a0efaa5981717", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6d1d77d8d58185f50de07ffab60a0efaa5981717", "message": "Making cleanup duration configurable.", "committedDate": "2020-04-22T12:00:18Z", "type": "commit"}, {"oid": "630862d5fa32ee6674de9dddb67596ca3b2d4553", "url": "https://github.com/Azure/azure-sdk-for-java/commit/630862d5fa32ee6674de9dddb67596ca3b2d4553", "message": "Fixing tests.", "committedDate": "2020-04-22T13:00:26Z", "type": "commit"}, {"oid": "d6e0913fc78598496358ab25e95533db2496543f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6e0913fc78598496358ab25e95533db2496543f", "message": "Fixing checkstyle", "committedDate": "2020-04-22T14:25:45Z", "type": "commit"}, {"oid": "d6e0913fc78598496358ab25e95533db2496543f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d6e0913fc78598496358ab25e95533db2496543f", "message": "Fixing checkstyle", "committedDate": "2020-04-22T14:25:45Z", "type": "forcePushed"}]}