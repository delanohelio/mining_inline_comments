{"pr_number": 10364, "pr_title": "fix: cosmos spotbugs", "pr_createdAt": "2020-04-20T07:58:06Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10364", "timeline": [{"oid": "c246992073089017c509d72b33fbad27df32dba0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c246992073089017c509d72b33fbad27df32dba0", "message": "fix: cosmos spotbugs", "committedDate": "2020-04-20T07:57:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411174800", "bodyText": "Why it using lro regry duration?", "author": "weidongxu-microsoft", "createdAt": "2020-04-20T08:03:35Z", "path": "sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java", "diffHunk": "@@ -622,7 +603,7 @@ private void addLocationsForParameters(HasLocations locationParameters, List<Fai\n                                         .flatMap(\n                                             index -> {\n                                                 data.set(0, data.get(0) + 30);\n-                                                return Mono.delay(manager().getSdkContext().getLroRetryDuration());\n+                                                return Mono.delay(SdkContext.getLroRetryDuration());", "originalCommit": "c246992073089017c509d72b33fbad27df32dba0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTMyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411181328", "bodyText": "The cosmos multi location prevision is async. It will return succeeded when first location is done. This func I think is to ensure all location is succeeded.", "author": "ChenTanyi", "createdAt": "2020-04-20T08:14:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5MzQzOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411193439", "bodyText": "Yes, but why use getLroRetryDuration? It should be only used for LRO, but this is not.", "author": "weidongxu-microsoft", "createdAt": "2020-04-20T08:32:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NjI0Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411196246", "bodyText": "You can use getDelayDuration with a specified delay.", "author": "weidongxu-microsoft", "createdAt": "2020-04-20T08:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NjY3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411196671", "bodyText": "This is a LRO situation, just isn't a common LRO situation.", "author": "ChenTanyi", "createdAt": "2020-04-20T08:37:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE5NzExMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411197112", "bodyText": "Long running operation to wait all location prevision complete.", "author": "ChenTanyi", "createdAt": "2020-04-20T08:38:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMTAyOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411201028", "bodyText": "An operation takes long time does not means that it is LRO.\nThe specific var is used here for the PollerFlux.\n   public <T, U> PollerFlux<PollResult<T>, U> getLroResultAsync(Mono<SimpleResponse<Flux<ByteBuffer>>> lroInit,\n                                                                 HttpPipeline httpPipeline,\n                                                                 Type pollResultType, Type finalResultType) {\n        return PollerFactory.create(\n            getSerializerAdapter(),\n            httpPipeline,\n            pollResultType,\n            finalResultType,\n            SdkContext.getLroRetryDuration(),\n            activationOperation(lroInit)\n        );\n    }", "author": "weidongxu-microsoft", "createdAt": "2020-04-20T08:44:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMjAyMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411202020", "bodyText": "Track1 is such\n                        ).repeatWhen(new Func1<Observable<? extends java.lang.Void>, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Observable<? extends Void> observable) {\n                                data.set(0, data.get(0) + 5);\n                                return observable.delay(5, TimeUnit.SECONDS);\n                            }\n                        })", "author": "weidongxu-microsoft", "createdAt": "2020-04-20T08:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNDQwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10364#discussion_r411214402", "bodyText": "Done, change to getDelayDuration.", "author": "ChenTanyi", "createdAt": "2020-04-20T09:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE3NDgwMA=="}], "type": "inlineReview", "revised_code": {"commit": "77edcb00726ed8d573f795651c2a052a47adce5d", "chunk": "diff --git a/sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java b/sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java\nindex 1327e1c9029..701463b00c1 100644\n--- a/sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java\n+++ b/sdk/cosmos/mgmt/src/main/java/com/azure/management/cosmosdb/implementation/CosmosDBAccountImpl.java\n\n@@ -603,7 +605,7 @@ class CosmosDBAccountImpl\n                                         .flatMap(\n                                             index -> {\n                                                 data.set(0, data.get(0) + 30);\n-                                                return Mono.delay(SdkContext.getLroRetryDuration());\n+                                                return Mono.delay(SdkContext.getDelayDuration(Duration.ofSeconds(30)));\n                                             }));\n                     }\n                 });\n"}}, {"oid": "77edcb00726ed8d573f795651c2a052a47adce5d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/77edcb00726ed8d573f795651c2a052a47adce5d", "message": "feat: change lro retry duration to delay duration", "committedDate": "2020-04-20T09:03:56Z", "type": "commit"}]}