{"pr_number": 9721, "pr_title": "Updated EncryptedClientBuilder", "pr_createdAt": "2020-03-31T20:40:48Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9721", "timeline": [{"oid": "9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "message": "Updated EncryptedClientBuilder", "committedDate": "2020-03-31T20:41:53Z", "type": "commit"}, {"oid": "9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "message": "Updated EncryptedClientBuilder", "committedDate": "2020-03-31T20:41:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDI1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9721#discussion_r401204252", "bodyText": "not particularly picky about this: but since we're now throwing on finding the decryption policy, could we just throw an exception in the for loop when we encounter it? That way we dont need to loop over all the rest of the policies if the first policy was a decryption policy?", "author": "gapra-msft", "createdAt": "2020-03-31T20:45:48Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -155,8 +156,28 @@ public EncryptedBlobAsyncClient buildEncryptedBlobAsyncClient() {\n     }\n \n     private HttpPipeline getHttpPipeline() {\n+        // Prefer the pipeline set by the customer.\n         if (httpPipeline != null) {\n-            return  httpPipeline;\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            // Check that BlobDecryptionPolicy not already present while copying them over to a new policy list.\n+            boolean decryptionPolicyPresent = false;\n+            for (int i = 0; i < httpPipeline.getPolicyCount(); i++) {\n+                HttpPipelinePolicy currPolicy = httpPipeline.getPolicy(i);\n+                decryptionPolicyPresent |= currPolicy instanceof BlobDecryptionPolicy;\n+                policies.add(currPolicy);\n+            }\n+            // If a decryption policy is not already present, add it to the front.\n+            if (!decryptionPolicyPresent) {", "originalCommit": "9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "331acd6ef2f987973132035a0f1adc6bfcf559d6", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex 3fc333e01fd..092ffd16f47 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -163,17 +163,17 @@ public final class EncryptedBlobClientBuilder {\n             boolean decryptionPolicyPresent = false;\n             for (int i = 0; i < httpPipeline.getPolicyCount(); i++) {\n                 HttpPipelinePolicy currPolicy = httpPipeline.getPolicy(i);\n-                decryptionPolicyPresent |= currPolicy instanceof BlobDecryptionPolicy;\n+                if (currPolicy instanceof BlobDecryptionPolicy) {\n+                    throw logger.logExceptionAsError(new IllegalArgumentException(\"The passed pipeline was already\"\n+                        + \" configured for encryption/decryption in a way that might conflict with the passed key \"\n+                        + \"information. Please ensure that the passed pipeline is not already configured for \"\n+                        + \"encryption/decryption\"));\n+                }\n                 policies.add(currPolicy);\n             }\n-            // If a decryption policy is not already present, add it to the front.\n-            if (!decryptionPolicyPresent) {\n-                policies.add(0, new BlobDecryptionPolicy(keyWrapper, keyResolver));\n-            } else {\n-                throw new IllegalArgumentException(\"The passed pipeline was already configured for \"\n-                    + \"encryption/decryption in a way that might conflict with the passed key information. Please \"\n-                    + \"ensure that the passed pipeline is not already configured for encryption/decryption\");\n-            }\n+            // There is guaranteed not to be a decryption policy in the provided pipeline. Add one to the front.\n+            policies.add(0, new BlobDecryptionPolicy(keyWrapper, keyResolver));\n+\n             return new HttpPipelineBuilder()\n                 .httpClient(httpPipeline.getHttpClient())\n                 .policies(policies.toArray(new HttpPipelinePolicy[0]))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDg3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9721#discussion_r401204873", "bodyText": "typo: configured for configured for", "author": "gapra-msft", "createdAt": "2020-03-31T20:47:02Z", "path": "sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java", "diffHunk": "@@ -473,42 +493,20 @@ public EncryptedBlobClientBuilder retryOptions(RequestRetryOptions retryOptions)\n \n     /**\n      * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy if one is not present.\n-     *\n+     * Note that the underlying pipeline should not already be configured for configured for encryption/decryption.", "originalCommit": "9a8838b5f1afe17a8fe9837dcd2bf60b2e33d7ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNTA5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9721#discussion_r401205097", "bodyText": "same below in blobClient methods", "author": "gapra-msft", "createdAt": "2020-03-31T20:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDg3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "331acd6ef2f987973132035a0f1adc6bfcf559d6", "chunk": "diff --git a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\nindex 3fc333e01fd..092ffd16f47 100644\n--- a/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n+++ b/sdk/storage/azure-storage-blob-cryptography/src/main/java/com/azure/storage/blob/specialized/cryptography/EncryptedBlobClientBuilder.java\n\n@@ -493,7 +493,7 @@ public final class EncryptedBlobClientBuilder {\n \n     /**\n      * Sets the {@link HttpPipeline} to use for the service client, and adds a decryption policy if one is not present.\n-     * Note that the underlying pipeline should not already be configured for configured for encryption/decryption.\n+     * Note that the underlying pipeline should not already be configured for encryption/decryption.\n      * <p>\n      * If {@code pipeline} is set, all other settings are ignored, aside from {@link #endpoint(String) endpoint}\n      * and {@link #customerProvidedKey(CustomerProvidedKey) customer provided key}.\n"}}, {"oid": "331acd6ef2f987973132035a0f1adc6bfcf559d6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/331acd6ef2f987973132035a0f1adc6bfcf559d6", "message": "Fixed CI failures", "committedDate": "2020-04-03T21:31:52Z", "type": "commit"}, {"oid": "7aecbd71beaace0a49aae274346a31b2e012991b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7aecbd71beaace0a49aae274346a31b2e012991b", "message": "Merge branch 'master' into encryptedClientUpdate", "committedDate": "2020-04-03T21:40:38Z", "type": "commit"}]}