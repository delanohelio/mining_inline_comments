{"pr_number": 9860, "pr_title": "Fixes issues in auto-* operations", "pr_createdAt": "2020-04-03T22:13:04Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9860", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MjQwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403362403", "bodyText": "Package-private class renamed from ReceiveMessageOptions.", "author": "conniey", "createdAt": "2020-04-03T22:16:27Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java", "diffHunk": "@@ -0,0 +1,37 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.", "originalCommit": "ed4312eaafaaeb0990cc3f064a0b36b781f73950", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b61b5c2305a6b1df65833c734078d63b2d960dcb", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\ndeleted file mode 100644\nindex 13cec4511a3..00000000000\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ReceiverOptions.java\n+++ /dev/null\n\n@@ -1,37 +0,0 @@\n-// Copyright (c) Microsoft Corporation. All rights reserved.\n-// Licensed under the MIT License.\n-\n-package com.azure.messaging.servicebus;\n-\n-import com.azure.messaging.servicebus.models.ReceiveMode;\n-\n-/**\n- * Options set when creating a service bus receiver.\n- */\n-class ReceiverOptions {\n-    private final ReceiveMode receiveMode;\n-    private final int prefetchCount;\n-\n-    ReceiverOptions(ReceiveMode receiveMode, int prefetchCount) {\n-        this.receiveMode = receiveMode;\n-        this.prefetchCount = prefetchCount;\n-    }\n-\n-    /**\n-     * Gets the receive mode for the message.\n-     *\n-     * @return the receive mode for the message.\n-     */\n-    ReceiveMode getReceiveMode() {\n-        return receiveMode;\n-    }\n-\n-    /**\n-     * Gets the prefetch count of the receiver.\n-     *\n-     * @return The prefetch count of the receiver.\n-     */\n-    int getPrefetchCount() {\n-        return prefetchCount;\n-    }\n-}\n"}}, {"oid": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/623699f6aa34f37212109aee10c0d9a7d7a5d3c3", "message": "Fix tests.", "committedDate": "2020-04-04T18:41:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxMjE3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403512178", "bodyText": "May be explaining here that  To disable auto-renew, user have to set MaxAutoRenewDuration to zero. And default is true", "author": "hemanttanwar", "createdAt": "2020-04-04T20:16:44Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java", "diffHunk": "@@ -346,25 +353,44 @@ public String getEntityPath() {\n     }\n \n     /**\n-     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity and completes them\n+     * when they are finished processing.\n      *\n      * @return A stream of messages from the Service Bus entity.\n      */\n     public Flux<ServiceBusReceivedMessage> receive() {\n+        return receive(defaultReceiveOptions);\n+    }\n+\n+    /**\n+     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     *\n+     * @return A stream of messages from the Service Bus entity.", "originalCommit": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6459a3269b2902e0299b32dd76be5bbeaf4ecdd9", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\nindex e37ba57ea23..136f1a5cd82 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceiverAsyncClient.java\n\n@@ -356,14 +357,26 @@ public final class ServiceBusReceiverAsyncClient implements AutoCloseable {\n      * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity and completes them\n      * when they are finished processing.\n      *\n+     * <p>\n+     * By default, each successfully consumed message is {@link #complete(MessageLockToken) auto-completed} and {@link\n+     * #renewMessageLock(MessageLockToken) auto-renewed}. When downstream consumers throw an exception, the\n+     * auto-completion feature will {@link #abandon(MessageLockToken) abandon} the message. {@link\n+     * #renewMessageLock(MessageLockToken) Auto-renewal} occurs until the {@link AmqpRetryOptions#getTryTimeout()\n+     * operation timeout} has elapsed.\n+     * </p>\n+     *\n      * @return A stream of messages from the Service Bus entity.\n+     * @throws AmqpException if {@link AmqpRetryOptions#getTryTimeout() operation timeout} has elapsed and\n+     *     downstream consumers are still processing the message.\n      */\n     public Flux<ServiceBusReceivedMessage> receive() {\n         return receive(defaultReceiveOptions);\n     }\n \n     /**\n-     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity.\n+     * Receives a stream of {@link ServiceBusReceivedMessage messages} from the Service Bus entity with a set of\n+     * options. To disable lock auto-renewal, set {@link ReceiveAsyncOptions#setMaxAutoRenewDuration(Duration)\n+     * setMaxAutoRenewDuration} to {@link Duration#ZERO} or {@code null}.\n      *\n      * @return A stream of messages from the Service Bus entity.\n      * @throws NullPointerException if {@code options} is null.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDI2Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403514262", "bodyText": "One option could be calculate isAutoRenewLock here using maxAutoLockRenewal value and  remove this argument isAutoRenewLock being passed in. But  it is not must.", "author": "hemanttanwar", "createdAt": "2020-04-04T20:38:25Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java", "diffHunk": "@@ -34,24 +42,26 @@\n     private final ClientLogger logger = new ClientLogger(ServiceBusMessageProcessor.class);\n     private final boolean isAutoComplete;\n     private final AmqpRetryOptions retryOptions;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> completeFunction;\n-    private final Function<ServiceBusReceivedMessage, Mono<Void>> onAbandon;\n-    private final Function<ServiceBusReceivedMessage, Mono<Instant>> onRenewLock;\n+    private final AmqpErrorContext errorContext;\n+    private final Function<MessageLockToken, Mono<Void>> completeFunction;\n+    private final Function<MessageLockToken, Mono<Void>> onAbandon;\n+    private final Function<MessageLockToken, Mono<Instant>> onRenewLock;\n     private final Deque<ServiceBusReceivedMessage> messageQueue = new ConcurrentLinkedDeque<>();\n     private final boolean isAutoRenewLock;\n     private final Duration maxAutoLockRenewal;\n     private final MessageLockContainer messageLockContainer;\n \n     ServiceBusMessageProcessor(boolean isAutoComplete, boolean isAutoRenewLock, Duration maxAutoLockRenewal,", "originalCommit": "623699f6aa34f37212109aee10c0d9a7d7a5d3c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUyNDIwNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403524205", "bodyText": "I thought about that. But decoupling it seemed like a better approach to separate responsibility.", "author": "conniey", "createdAt": "2020-04-04T21:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDI2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b61b5c2305a6b1df65833c734078d63b2d960dcb", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java\nindex 76cdbb51590..6a1aabd02ac 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/ServiceBusMessageProcessor.java\n\n@@ -42,26 +34,24 @@ class ServiceBusMessageProcessor extends FluxProcessor<ServiceBusReceivedMessage\n     private final ClientLogger logger = new ClientLogger(ServiceBusMessageProcessor.class);\n     private final boolean isAutoComplete;\n     private final AmqpRetryOptions retryOptions;\n-    private final AmqpErrorContext errorContext;\n-    private final Function<MessageLockToken, Mono<Void>> completeFunction;\n-    private final Function<MessageLockToken, Mono<Void>> onAbandon;\n-    private final Function<MessageLockToken, Mono<Instant>> onRenewLock;\n+    private final Function<ServiceBusReceivedMessage, Mono<Void>> completeFunction;\n+    private final Function<ServiceBusReceivedMessage, Mono<Void>> onAbandon;\n+    private final Function<ServiceBusReceivedMessage, Mono<Instant>> onRenewLock;\n     private final Deque<ServiceBusReceivedMessage> messageQueue = new ConcurrentLinkedDeque<>();\n     private final boolean isAutoRenewLock;\n     private final Duration maxAutoLockRenewal;\n     private final MessageLockContainer messageLockContainer;\n \n     ServiceBusMessageProcessor(boolean isAutoComplete, boolean isAutoRenewLock, Duration maxAutoLockRenewal,\n-        AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer, AmqpErrorContext errorContext,\n-        Function<MessageLockToken, Mono<Void>> onComplete,\n-        Function<MessageLockToken, Mono<Void>> onAbandon,\n-        Function<MessageLockToken, Mono<Instant>> onRenewLock) {\n+        AmqpRetryOptions retryOptions, MessageLockContainer messageLockContainer,\n+        Function<ServiceBusReceivedMessage, Mono<Void>> completeFunction,\n+        Function<ServiceBusReceivedMessage, Mono<Void>> onAbandon,\n+        Function<ServiceBusReceivedMessage, Mono<Instant>> onRenewLock) {\n \n         super();\n \n         this.retryOptions = Objects.requireNonNull(retryOptions, \"'retryOptions' cannot be null.\");\n-        this.errorContext = Objects.requireNonNull(errorContext, \"'errorContext' cannot be null.\");\n-        this.completeFunction = Objects.requireNonNull(onComplete, \"'onComplete' cannot be null.\");\n+        this.completeFunction = Objects.requireNonNull(completeFunction, \"'completeFunction' cannot be null.\");\n         this.onAbandon = Objects.requireNonNull(onAbandon, \"'onAbandon' cannot be null.\");\n         this.onRenewLock = Objects.requireNonNull(onRenewLock, \"'onRenewLock' cannot be null.\");\n         this.messageLockContainer = Objects.requireNonNull(messageLockContainer,\n"}}, {"oid": "6459a3269b2902e0299b32dd76be5bbeaf4ecdd9", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6459a3269b2902e0299b32dd76be5bbeaf4ecdd9", "message": "Add documentation.", "committedDate": "2020-04-04T22:05:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc2NjYxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9860#discussion_r403766616", "bodyText": "While  you are changing this to String, you can look at receiveDeferredMessage , there is a problem where we are not calling addOrUpdate  in receiveDeferredMessage  in PEEK LOCK mode. Thus once we receive DeferredMessage, it can not be Completed or deadLetter because MessageLockContainer does not have an entry for this message lock.", "author": "hemanttanwar", "createdAt": "2020-04-05T22:35:48Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java", "diffHunk": "@@ -23,7 +23,7 @@\n      * @return The updated value in the container. If the expiration time in the container is larger than\n      *     {@code lockTokenExpiration}, then the current container value is used.\n      */\n-    public Instant addOrUpdate(UUID lockToken, Instant lockTokenExpiration) {\n+    public Instant addOrUpdate(String lockToken, Instant lockTokenExpiration) {", "originalCommit": "6459a3269b2902e0299b32dd76be5bbeaf4ecdd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b61b5c2305a6b1df65833c734078d63b2d960dcb", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\nindex 72eb056fbe6..3e3b55f9136 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/implementation/MessageLockContainer.java\n\n@@ -23,7 +23,7 @@ public class MessageLockContainer {\n      * @return The updated value in the container. If the expiration time in the container is larger than\n      *     {@code lockTokenExpiration}, then the current container value is used.\n      */\n-    public Instant addOrUpdate(String lockToken, Instant lockTokenExpiration) {\n+    public Instant addOrUpdate(UUID lockToken, Instant lockTokenExpiration) {\n         return lockTokenExpirationMap.compute(lockToken, (key, existing) -> {\n             if (existing == null) {\n                 return lockTokenExpiration;\n"}}, {"oid": "b61b5c2305a6b1df65833c734078d63b2d960dcb", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b61b5c2305a6b1df65833c734078d63b2d960dcb", "message": "Adding ReceiveAsyncOptions", "committedDate": "2020-04-06T16:47:46Z", "type": "commit"}, {"oid": "775222b5a44d7521e3dbab462ba656f9d19dea49", "url": "https://github.com/Azure/azure-sdk-for-java/commit/775222b5a44d7521e3dbab462ba656f9d19dea49", "message": "Pulling in autocomplete and lock renewal.", "committedDate": "2020-04-06T16:47:47Z", "type": "commit"}, {"oid": "475b8f6e841618c6a5b7381867105c6289f4dc09", "url": "https://github.com/Azure/azure-sdk-for-java/commit/475b8f6e841618c6a5b7381867105c6289f4dc09", "message": "Extract isAutoComplete and maxAutoRenewDuration into class.", "committedDate": "2020-04-06T16:47:47Z", "type": "commit"}, {"oid": "29937165a4af539c0a7169631ad4b2854b2cb3e0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/29937165a4af539c0a7169631ad4b2854b2cb3e0", "message": "Fix spacing", "committedDate": "2020-04-06T16:47:48Z", "type": "commit"}, {"oid": "90bc08352ad47329ee15666624470c83d8aaacf4", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90bc08352ad47329ee15666624470c83d8aaacf4", "message": "Remove build breaks.", "committedDate": "2020-04-06T16:47:48Z", "type": "commit"}, {"oid": "a08ac9e9354601b1efa5c22a56a1863d2a89499f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a08ac9e9354601b1efa5c22a56a1863d2a89499f", "message": "Change node to all String.", "committedDate": "2020-04-06T16:47:49Z", "type": "commit"}, {"oid": "86a4bd52439ae48d0e0eb613a3c1625f83ea6273", "url": "https://github.com/Azure/azure-sdk-for-java/commit/86a4bd52439ae48d0e0eb613a3c1625f83ea6273", "message": "Fix tests.", "committedDate": "2020-04-06T16:47:49Z", "type": "commit"}, {"oid": "f790134a9b76eb4d2f0100dc6a52cfeb46640134", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f790134a9b76eb4d2f0100dc6a52cfeb46640134", "message": "Add documentation.", "committedDate": "2020-04-06T16:47:50Z", "type": "commit"}, {"oid": "e476fc0fafa4472f2cbc6ecb31ac13eee1671751", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e476fc0fafa4472f2cbc6ecb31ac13eee1671751", "message": "Fixing tests.", "committedDate": "2020-04-06T16:47:50Z", "type": "commit"}, {"oid": "203b7147ddfd829d911970e83db580a717b803ad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/203b7147ddfd829d911970e83db580a717b803ad", "message": "Fix checkstyles", "committedDate": "2020-04-06T16:47:51Z", "type": "commit"}, {"oid": "203b7147ddfd829d911970e83db580a717b803ad", "url": "https://github.com/Azure/azure-sdk-for-java/commit/203b7147ddfd829d911970e83db580a717b803ad", "message": "Fix checkstyles", "committedDate": "2020-04-06T16:47:51Z", "type": "forcePushed"}, {"oid": "153d48f33ee93cd6010003ce3f9c5b2f34e0518a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/153d48f33ee93cd6010003ce3f9c5b2f34e0518a", "message": "Fix spotbugs.", "committedDate": "2020-04-06T18:01:00Z", "type": "commit"}]}