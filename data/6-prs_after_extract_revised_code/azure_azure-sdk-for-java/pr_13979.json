{"pr_number": 13979, "pr_title": "Updated Changefeed to be able to read last consumable. Also unified cursor.", "pr_createdAt": "2020-08-11T16:31:15Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/13979", "timeline": [{"oid": "19020446dc46c4a9f8236bce56a101599c112a2b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/19020446dc46c4a9f8236bce56a101599c112a2b", "message": "Added support for writing, serializing and deserializing new cursor", "committedDate": "2020-08-04T19:27:51Z", "type": "commit"}, {"oid": "93deb8595bd4f7cd7c25523d052b897ad8254054", "url": "https://github.com/Azure/azure-sdk-for-java/commit/93deb8595bd4f7cd7c25523d052b897ad8254054", "message": "Added support to read from new cursor", "committedDate": "2020-08-04T21:19:31Z", "type": "commit"}, {"oid": "608fc287f0a774418c492c8dfd2e52ef8f157954", "url": "https://github.com/Azure/azure-sdk-for-java/commit/608fc287f0a774418c492c8dfd2e52ef8f157954", "message": "Removed all references to old cursor", "committedDate": "2020-08-04T21:40:34Z", "type": "commit"}, {"oid": "1be6ff372edef81b509909e4ba410386240b446b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1be6ff372edef81b509909e4ba410386240b446b", "message": "Added tests for ChangefeedCursor", "committedDate": "2020-08-04T23:29:05Z", "type": "commit"}, {"oid": "fe4ca41ff12afc043d9a3ac0142076ce75cde77a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fe4ca41ff12afc043d9a3ac0142076ce75cde77a", "message": "Modified BlobChangefeedPagedFlux tests", "committedDate": "2020-08-05T16:12:53Z", "type": "commit"}, {"oid": "71b4140db779acba55324c5806957506d6743d34", "url": "https://github.com/Azure/azure-sdk-for-java/commit/71b4140db779acba55324c5806957506d6743d34", "message": "Fixed bug where last consumable would not be included in iteration", "committedDate": "2020-08-05T17:18:58Z", "type": "commit"}, {"oid": "6425bac3cd5965f94c30103577b8558d4d5baeff", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6425bac3cd5965f94c30103577b8558d4d5baeff", "message": "In the middle of changing chunk test", "committedDate": "2020-08-05T18:19:10Z", "type": "commit"}, {"oid": "969e8210a430722e8008ae80f766b4fcd7e3b215", "url": "https://github.com/Azure/azure-sdk-for-java/commit/969e8210a430722e8008ae80f766b4fcd7e3b215", "message": "modified chunk test", "committedDate": "2020-08-06T16:06:38Z", "type": "commit"}, {"oid": "806082dfd9b410c3655806ac8566529511237f70", "url": "https://github.com/Azure/azure-sdk-for-java/commit/806082dfd9b410c3655806ac8566529511237f70", "message": "Added more tests for chunk", "committedDate": "2020-08-06T18:39:46Z", "type": "commit"}, {"oid": "2de1c4355e99336f6bb14451639e24b75731abf5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2de1c4355e99336f6bb14451639e24b75731abf5", "message": "Added more test for Chunk", "committedDate": "2020-08-06T19:44:13Z", "type": "commit"}, {"oid": "a43a72059ef7c6b141898cf9752e93be1d379e17", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a43a72059ef7c6b141898cf9752e93be1d379e17", "message": "Added more chunk tests and added code to check for cursor version", "committedDate": "2020-08-06T20:02:18Z", "type": "commit"}, {"oid": "92e3f55e11bb235207e3749ab4b508b2c104d333", "url": "https://github.com/Azure/azure-sdk-for-java/commit/92e3f55e11bb235207e3749ab4b508b2c104d333", "message": "Modified some ShardTest", "committedDate": "2020-08-06T21:03:34Z", "type": "commit"}, {"oid": "ec202d9ab53e9a51c034e632018607afad203820", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ec202d9ab53e9a51c034e632018607afad203820", "message": "Added more tests", "committedDate": "2020-08-06T22:42:15Z", "type": "commit"}, {"oid": "8e35e1b0228b252e8eb767a36a6e687c4800660a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8e35e1b0228b252e8eb767a36a6e687c4800660a", "message": "modifying tests", "committedDate": "2020-08-07T16:41:59Z", "type": "commit"}, {"oid": "db241c89ecfcc19b017e38c7034347233a104465", "url": "https://github.com/Azure/azure-sdk-for-java/commit/db241c89ecfcc19b017e38c7034347233a104465", "message": "Updated segment test", "committedDate": "2020-08-07T19:23:22Z", "type": "commit"}, {"oid": "a98e2225ebf755616a1f365137e22590d33924bd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a98e2225ebf755616a1f365137e22590d33924bd", "message": "Modified Changefeed test", "committedDate": "2020-08-07T19:50:31Z", "type": "commit"}, {"oid": "eba82b795ed19103fb85257b6382770df587f657", "url": "https://github.com/Azure/azure-sdk-for-java/commit/eba82b795ed19103fb85257b6382770df587f657", "message": "Added prints", "committedDate": "2020-08-07T23:02:23Z", "type": "commit"}, {"oid": "11ce4ef6fd9b9eb41af176f7f580e93f1754e0e3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/11ce4ef6fd9b9eb41af176f7f580e93f1754e0e3", "message": "Added more tests", "committedDate": "2020-08-10T16:41:16Z", "type": "commit"}, {"oid": "81aac47f3217d1c8777b985dfc24819e0dbb8c61", "url": "https://github.com/Azure/azure-sdk-for-java/commit/81aac47f3217d1c8777b985dfc24819e0dbb8c61", "message": "Added code for test", "committedDate": "2020-08-10T18:37:33Z", "type": "commit"}, {"oid": "38a16474c34db57198c7d2f2ffd30e75b15cd2b2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/38a16474c34db57198c7d2f2ffd30e75b15cd2b2", "message": "Added some new recorded tests", "committedDate": "2020-08-10T23:10:40Z", "type": "commit"}, {"oid": "5c47ebd8de4ec45ef45c40bb48c8a83ef79a3937", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5c47ebd8de4ec45ef45c40bb48c8a83ef79a3937", "message": "Added all CF tests", "committedDate": "2020-08-11T02:38:20Z", "type": "commit"}, {"oid": "dcd26e3ca9124e314000a75bd0f6bbd6a73cba6d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dcd26e3ca9124e314000a75bd0f6bbd6a73cba6d", "message": "Added comment", "committedDate": "2020-08-11T02:40:32Z", "type": "commit"}, {"oid": "f175ed74177023919f1eb0a329e033549a02fa81", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f175ed74177023919f1eb0a329e033549a02fa81", "message": "Modified to use url host instead of url hash", "committedDate": "2020-08-11T16:29:28Z", "type": "commit"}, {"oid": "90c418d5d5d224650c6adbd0be37a2944eca6b6a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/90c418d5d5d224650c6adbd0be37a2944eca6b6a", "message": "Optimized imports", "committedDate": "2020-08-11T16:31:56Z", "type": "commit"}, {"oid": "c220bd656a561ddccb30982305e52225490a3f95", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c220bd656a561ddccb30982305e52225490a3f95", "message": "Modified pom", "committedDate": "2020-08-11T17:50:27Z", "type": "commit"}, {"oid": "6fa06c7b0871f3e85d24fe59c7ca5b822f4dc322", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6fa06c7b0871f3e85d24fe59c7ca5b822f4dc322", "message": "Added code to pass Analyze step", "committedDate": "2020-08-11T18:54:30Z", "type": "commit"}, {"oid": "787e9ee3c333c230fbaa6e6e16b0182da19b16fa", "url": "https://github.com/Azure/azure-sdk-for-java/commit/787e9ee3c333c230fbaa6e6e16b0182da19b16fa", "message": "Added code to change cursor starting point", "committedDate": "2020-08-12T17:17:14Z", "type": "commit"}, {"oid": "f3e3b63665d254a6ce0629ab54b6cef6dceb740f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f3e3b63665d254a6ce0629ab54b6cef6dceb740f", "message": "Updated AvroParser logic to live in BlockSchema", "committedDate": "2020-08-12T20:11:57Z", "type": "commit"}, {"oid": "7a7df8664b36ac569c05c160eedbffc6fec1a046", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a7df8664b36ac569c05c160eedbffc6fec1a046", "message": "Cleaned up more code", "committedDate": "2020-08-12T20:15:29Z", "type": "commit"}, {"oid": "1b9ee845f5aa544f5023d98ccc9358e9ad45e472", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1b9ee845f5aa544f5023d98ccc9358e9ad45e472", "message": "Removed comment", "committedDate": "2020-08-12T20:16:40Z", "type": "commit"}, {"oid": "31b8801f9535ffd516837c6a6780bdca305ad3f2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/31b8801f9535ffd516837c6a6780bdca305ad3f2", "message": "Fixed some more stuff", "committedDate": "2020-08-12T20:45:41Z", "type": "commit"}, {"oid": "149da3fcaf78dde9fc1f7650ad38cd89e7e64185", "url": "https://github.com/Azure/azure-sdk-for-java/commit/149da3fcaf78dde9fc1f7650ad38cd89e7e64185", "message": "Added readme sample", "committedDate": "2020-08-12T22:31:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNTQ1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470035450", "bodyText": "endTime is/should be optional parameter. How do we handle that case? I.e. we should default to lastConsumable if end time is null . Also if end time is null we shouldn't populate it in the cursor.", "author": "kasobol-msft", "createdAt": "2020-08-13T15:25:02Z", "path": "sdk/storage/azure-storage-blob-changefeed/src/main/java/com/azure/storage/blob/changefeed/Changefeed.java", "diffHunk": "@@ -100,25 +116,24 @@\n     private Mono<OffsetDateTime> populateLastConsumable() {\n         /* We can keep the entire metadata file in memory since it is expected to only be a few hundred bytes. */\n         return DownloadUtils.downloadToByteArray(this.client, METADATA_SEGMENT_PATH)\n+            .flatMap(DownloadUtils::parseJson)\n             /* Parse JSON for last consumable. */\n-            .flatMap(json -> {\n-                try {\n-                    JsonNode jsonNode = MAPPER.reader().readTree(json);\n-                    this.lastConsumable = OffsetDateTime.parse(jsonNode.get(\"lastConsumable\").asText());\n-                    if (this.lastConsumable.isBefore(endTime)) {\n-                        this.safeEndTime = this.lastConsumable;\n-                    }\n-                    return Mono.just(this.lastConsumable);\n-                } catch (IOException e) {\n-                    return FluxUtil.monoError(logger, new UncheckedIOException(e));\n+            .flatMap(jsonNode -> {\n+                /* Last consumable time. The latest time the changefeed can safely be read from.*/\n+                OffsetDateTime lastConsumableTime = OffsetDateTime.parse(jsonNode.get(\"lastConsumable\").asText());\n+                /* Soonest time between lastConsumable and endTime. */\n+                OffsetDateTime safeEndTime = this.endTime;\n+                if (lastConsumableTime.isBefore(endTime)) {", "originalCommit": "149da3fcaf78dde9fc1f7650ad38cd89e7e64185", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1MTI1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470051253", "bodyText": "I think ChangefeedFactory deals with this - we default to the Max time\nOffsetDateTime start = startTime == null ? OffsetDateTime.MIN : startTime;\nOffsetDateTime end = endTime == null ? OffsetDateTime.MAX : endTime;\n    return new Changefeed(this.client, start, end, null, segmentFactory);", "author": "gapra-msft", "createdAt": "2020-08-13T15:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNTQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1MTgxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470051816", "bodyText": "I feel like if endTime is null, the user just wants to go forever so I don't see the issue in doing this", "author": "gapra-msft", "createdAt": "2020-08-13T15:49:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNTQ1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NDczOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470054739", "bodyText": "great. sounds good.", "author": "kasobol-msft", "createdAt": "2020-08-13T15:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNTQ1MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MDI3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470040275", "bodyText": "I'd go back to ObjectIndex. Avro doesn't know it's used in CF context. It's supposed to be general purpose parser.", "author": "kasobol-msft", "createdAt": "2020-08-13T15:32:16Z", "path": "sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroObject.java", "diffHunk": "@@ -35,8 +42,8 @@ public long getBlockOffset() {\n     /**\n      * @return The index of the object in the block.\n      */\n-    public long getObjectBlockIndex() {\n-        return objectBlockIndex;\n+    public long getEventIndex() {", "originalCommit": "149da3fcaf78dde9fc1f7650ad38cd89e7e64185", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NTM3OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470055378", "bodyText": "done", "author": "gapra-msft", "createdAt": "2020-08-13T15:55:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MDI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e0e00ca1f777ad8ff5a811f182c9bae8413eadc8", "chunk": "diff --git a/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroObject.java b/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroObject.java\nindex 0f8f2a840b9..3d238033a73 100644\n--- a/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroObject.java\n+++ b/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroObject.java\n\n@@ -42,8 +42,8 @@ public class AvroObject {\n     /**\n      * @return The index of the object in the block.\n      */\n-    public long getEventIndex() {\n-        return eventIndex;\n+    public long getObjectIndex() {\n+        return objectIndex;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MTI2Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470041266", "bodyText": "maybe this should be called beginIndex or beginObjectIndex. Threshold sounds more like upper boundary.", "author": "kasobol-msft", "createdAt": "2020-08-13T15:33:46Z", "path": "sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroParser.java", "diffHunk": "@@ -106,31 +103,26 @@ private void onFilteredHeader(Object header) {\n \n         /* On reading the header, read a block. */\n         if (!partialRead) { /* Only do this if we are reading the stream from start to finish. */\n-            onBlock(-1L);\n+            onBlock(0L);\n         }\n     }\n \n     /**\n      * Block handler.\n      *\n-     * @param index The object index after which to start aggregating events in the block.\n+     * @param threshold The object index after which to start aggregating events in the block.\n      *                         By default this is 0 to collect all objects in the block.\n      */\n-    private void onBlock(Object index) {\n+    private void onBlock(Object threshold) {\n         /* On reading the block, read another block. */\n-        AvroSchema.checkType(\"objectBlockIndex\", index, Long.class);\n-        long threshold = (Long) index;\n+        AvroSchema.checkType(\"threshold\", threshold, Long.class);\n \n-        this.blockOffset = this.state.getSourceOffset();\n-        this.objectBlockIndex = 0;\n-        AvroBlockSchema blockSchema = new AvroBlockSchema(\n+        final AvroBlockSchema blockSchema = new AvroBlockSchema(\n             this.objectType,\n+            (Long) threshold,", "originalCommit": "149da3fcaf78dde9fc1f7650ad38cd89e7e64185", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1NTQzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/13979#discussion_r470055436", "bodyText": "done", "author": "gapra-msft", "createdAt": "2020-08-13T15:55:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MTI2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "e0e00ca1f777ad8ff5a811f182c9bae8413eadc8", "chunk": "diff --git a/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroParser.java b/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroParser.java\nindex c53030cc58f..fc785aad3fc 100644\n--- a/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroParser.java\n+++ b/sdk/storage/azure-storage-internal-avro/src/main/java/com/azure/storage/internal/avro/implementation/AvroParser.java\n\n@@ -110,16 +110,16 @@ public class AvroParser {\n     /**\n      * Block handler.\n      *\n-     * @param threshold The object index after which to start aggregating events in the block.\n+     * @param beginObjectIndex The object index after which to start aggregating events in the block.\n      *                         By default this is 0 to collect all objects in the block.\n      */\n-    private void onBlock(Object threshold) {\n+    private void onBlock(Object beginObjectIndex) {\n         /* On reading the block, read another block. */\n-        AvroSchema.checkType(\"threshold\", threshold, Long.class);\n+        AvroSchema.checkType(\"beginObjectIndex\", beginObjectIndex, Long.class);\n \n         final AvroBlockSchema blockSchema = new AvroBlockSchema(\n             this.objectType,\n-            (Long) threshold,\n+            (Long) beginObjectIndex,\n             o -> {\n                 AvroSchema.checkType(\"object\", o, AvroObject.class);\n                 this.objects.add((AvroObject) o);\n"}}, {"oid": "e0e00ca1f777ad8ff5a811f182c9bae8413eadc8", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e0e00ca1f777ad8ff5a811f182c9bae8413eadc8", "message": "renamed eventIndex to objectIndex", "committedDate": "2020-08-13T15:54:10Z", "type": "commit"}]}