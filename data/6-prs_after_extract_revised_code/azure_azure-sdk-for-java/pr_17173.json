{"pr_number": 17173, "pr_title": "T2 ServiceBus - Add byte array constructor", "pr_createdAt": "2020-11-04T16:08:19Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17173", "timeline": [{"oid": "78efc8a80216070203ec3a7d8337b051c8b16438", "url": "https://github.com/Azure/azure-sdk-for-java/commit/78efc8a80216070203ec3a7d8337b051c8b16438", "message": "added byte array constructor", "committedDate": "2020-11-04T16:07:10Z", "type": "commit"}, {"oid": "9a0bcfaa843cc66fdebe28f0072096a9700cf04a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9a0bcfaa843cc66fdebe28f0072096a9700cf04a", "message": "added byte array constructor", "committedDate": "2020-11-04T16:19:13Z", "type": "commit"}, {"oid": "c4c70e7804461adc4d4cd2ecbcdcb84f9ec06fc6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4c70e7804461adc4d4cd2ecbcdcb84f9ec06fc6", "message": "added byte array constructor", "committedDate": "2020-11-04T16:23:44Z", "type": "commit"}, {"oid": "1cfa51be6bdd8524a30d2915b404bc215dd6ee3d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1cfa51be6bdd8524a30d2915b404bc215dd6ee3d", "message": "added byte array constructor", "committedDate": "2020-11-04T16:27:41Z", "type": "commit"}, {"oid": "fa753807c6f092846a6f3058cb08e0b8b41e42fd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/fa753807c6f092846a6f3058cb08e0b8b41e42fd", "message": "Added unit test", "committedDate": "2020-11-04T17:01:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNjAwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517516002", "bodyText": "Functionally this works. But BinaryData.fromBytes() copies the byte array. Then when you get the byte array back from BinaryData, it's copied again. This will happen to every message. So this might not be the most optimal way.\nIs it possible to use the body directly without the double copy?", "author": "YijunXieMS", "createdAt": "2020-11-04T17:35:34Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessage.java", "diffHunk": "@@ -57,6 +57,17 @@\n \n     private Context context;\n \n+    /**\n+     * Creates a {@link ServiceBusMessage} with given byte array body.\n+     *\n+     * @param body The content of the Service bus message.\n+     *\n+     * @throws NullPointerException if {@code body} is null.\n+     */\n+    public ServiceBusMessage(byte[] body) {\n+        this(BinaryData.fromBytes(Objects.requireNonNull(body, \"'body' cannot be null.\")));", "originalCommit": "fa753807c6f092846a6f3058cb08e0b8b41e42fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxOTcwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517519708", "bodyText": "Althought .Net is doing the way you suggested., We talked about this with Jonathan as well and we want to keep it this way as long as we do drastically impact performance.\nEven earlier when only had byte[] , we were copying the array. Because we have a build time check for it. Also by having separate copy, we ensure in multi threaded, one thread is not changing data after creating SBM.\nFrom performance point of view, I asked Vinay to test and see if there are some degradation of performance because of this and his data suggest there was no  degradation.", "author": "hemanttanwar", "createdAt": "2020-11-04T17:41:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNjAwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUyNjczMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517526732", "bodyText": "No more concern if there is no impact to CPU performance and GC", "author": "YijunXieMS", "createdAt": "2020-11-04T17:53:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNjAwMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzMzE2MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517533160", "bodyText": "I don't see any test that uses this constructor and verifies contents.", "author": "conniey", "createdAt": "2020-11-04T18:03:47Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusMessage.java", "diffHunk": "@@ -57,6 +57,17 @@\n \n     private Context context;\n \n+    /**", "originalCommit": "fa753807c6f092846a6f3058cb08e0b8b41e42fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MTQxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517541414", "bodyText": "added", "author": "hemanttanwar", "createdAt": "2020-11-04T18:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzMzE2MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "3e33a13c3e6bcbf142466c9ae5a7d083aac4a795", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3e33a13c3e6bcbf142466c9ae5a7d083aac4a795", "message": "Added test", "committedDate": "2020-11-04T18:39:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MTc4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517561786", "bodyText": "Why do we need this constructor? This instance is always created by the SDK code. So, we can just use BinaryData. I think we should add getBodyAsBytes() for the user to get the byte[] in ServiceBusREceivedMessage.", "author": "srnagar", "createdAt": "2020-11-04T18:54:06Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java", "diffHunk": "@@ -52,9 +53,14 @@ public AmqpAnnotatedMessage getAmqpAnnotatedMessage() {\n     }\n \n     ServiceBusReceivedMessage(BinaryData body) {\n+        Objects.requireNonNull(body, \"'body' cannot be null.\");\n         amqpAnnotatedMessage = new AmqpAnnotatedMessage(new AmqpDataBody(Collections.singletonList(body.toBytes())));\n     }\n \n+    ServiceBusReceivedMessage(byte[] body) {\n+        this(BinaryData.fromBytes(Objects.requireNonNull(body, \"'body' cannot be null.\")));\n+    }", "originalCommit": "3e33a13c3e6bcbf142466c9ae5a7d083aac4a795", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2Njk5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517566997", "bodyText": "yes this is internal to us and I added it for consistency. But I will remove  this constructor", "author": "hemanttanwar", "createdAt": "2020-11-04T19:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU2MTc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ceb2f871a333e8b6858e3071cbd0a5d5f18d1dc6", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java\nindex 761585698ac..85f2b253b0c 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java\n\n@@ -57,10 +57,6 @@ public final class ServiceBusReceivedMessage {\n         amqpAnnotatedMessage = new AmqpAnnotatedMessage(new AmqpDataBody(Collections.singletonList(body.toBytes())));\n     }\n \n-    ServiceBusReceivedMessage(byte[] body) {\n-        this(BinaryData.fromBytes(Objects.requireNonNull(body, \"'body' cannot be null.\")));\n-    }\n-\n     /**\n      * Gets the actual payload/data wrapped by the {@link ServiceBusReceivedMessage}.\n      *\n"}}, {"oid": "ceb2f871a333e8b6858e3071cbd0a5d5f18d1dc6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/ceb2f871a333e8b6858e3071cbd0a5d5f18d1dc6", "message": "Review comments", "committedDate": "2020-11-04T19:15:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU4ODEyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517588127", "bodyText": "What happens if the AmqpBodyType is SEQUENCE or VALUE?", "author": "srnagar", "createdAt": "2020-11-04T19:42:30Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusReceivedMessage.java", "diffHunk": "@@ -84,6 +86,15 @@ public BinaryData getBody() {\n         }\n     }\n \n+    /**\n+     * Gets the actual payload/data wrapped by the {@link ServiceBusReceivedMessage}.\n+     *\n+     * @return A byte array representing the data.\n+     */\n+    public byte[] getBodyAsBytes() {\n+        return getBody().toBytes();\n+    }", "originalCommit": "ceb2f871a333e8b6858e3071cbd0a5d5f18d1dc6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU5NTExNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17173#discussion_r517595117", "bodyText": "We will design with other languages,\nBut I see we can have something like\npublic AmqpSequenceBody getBodyAsSequence();\nand in getBodyAsBytes we continue to throw for any type other than Types=DATA  which is bytes in AMQP.  t", "author": "hemanttanwar", "createdAt": "2020-11-04T19:55:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU4ODEyNw=="}], "type": "inlineReview", "revised_code": null}]}