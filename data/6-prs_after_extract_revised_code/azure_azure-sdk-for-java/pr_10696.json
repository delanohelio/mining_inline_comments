{"pr_number": 10696, "pr_title": "Update API interface for preview-2 and bug fixes.", "pr_createdAt": "2020-05-04T20:54:43Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/10696", "timeline": [{"oid": "68e5bad07d06975d5cba17d5a944b6da6bdca6ee", "url": "https://github.com/Azure/azure-sdk-for-java/commit/68e5bad07d06975d5cba17d5a944b6da6bdca6ee", "message": "Move DeadLetterOptions.", "committedDate": "2020-05-04T16:19:47Z", "type": "commit"}, {"oid": "17d91af24df1aff0cd0d6c4e54941c8af56f06f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/17d91af24df1aff0cd0d6c4e54941c8af56f06f7", "message": "Adding APIs.", "committedDate": "2020-05-04T16:19:47Z", "type": "commit"}, {"oid": "5f0dca26928f51a77973cda788774162eb16697c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5f0dca26928f51a77973cda788774162eb16697c", "message": "Updating itnerface.", "committedDate": "2020-05-04T16:19:47Z", "type": "commit"}, {"oid": "499e0e755e2f92b95a9744b36a223b391e09ae8d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/499e0e755e2f92b95a9744b36a223b391e09ae8d", "message": "Fixing names of autocomplete.", "committedDate": "2020-05-04T16:19:47Z", "type": "commit"}, {"oid": "14e12827448de303ff3644015f7dafafee57b862", "url": "https://github.com/Azure/azure-sdk-for-java/commit/14e12827448de303ff3644015f7dafafee57b862", "message": "Fixing names of autocomplete.", "committedDate": "2020-05-04T16:19:48Z", "type": "commit"}, {"oid": "5ee146b66a2e99a5413ee9a72e57f95b5164cb11", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5ee146b66a2e99a5413ee9a72e57f95b5164cb11", "message": "Adding ServiceBusMessageContext.\nAdding dead-letter reason and description.\nAdding deserialization for them.", "committedDate": "2020-05-04T16:38:40Z", "type": "commit"}, {"oid": "15821b571b5e3cc7a13efe50d89d495822c408b0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/15821b571b5e3cc7a13efe50d89d495822c408b0", "message": "Updating ServiceBusClientBuilder interface.", "committedDate": "2020-05-04T16:44:49Z", "type": "commit"}, {"oid": "b41b6be909a1ec7ecf2b6bdb62aa5800d764b291", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b41b6be909a1ec7ecf2b6bdb62aa5800d764b291", "message": "Fixing ServiceBusMessageTest after ctor is removed.", "committedDate": "2020-05-04T16:45:19Z", "type": "commit"}, {"oid": "92810427477ea41429e80dc505311cbf68742b8c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/92810427477ea41429e80dc505311cbf68742b8c", "message": "Add missing methods to ServiceBusReceiverAsyncClient.", "committedDate": "2020-05-04T17:31:14Z", "type": "commit"}, {"oid": "43bf4cb918d4d96bb934316e4cd0f9431af7be56", "url": "https://github.com/Azure/azure-sdk-for-java/commit/43bf4cb918d4d96bb934316e4cd0f9431af7be56", "message": "Move ServiceBusAsyncConsumer as package-private class into main.", "committedDate": "2020-05-04T17:32:41Z", "type": "commit"}, {"oid": "c76b81744d0d4b90e54a82c4c8cc713373620d5c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c76b81744d0d4b90e54a82c4c8cc713373620d5c", "message": "Fix build breaks in ManagementChannel and ServiceBusAsyncConsumerTest", "committedDate": "2020-05-04T17:37:39Z", "type": "commit"}, {"oid": "c1cd062fec580461d9b9454c62056a1dd384097c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c1cd062fec580461d9b9454c62056a1dd384097c", "message": "Update tol use messageutils.", "committedDate": "2020-05-04T17:41:17Z", "type": "commit"}, {"oid": "65fce82730cf1cbc75522783a7f79491b6573080", "url": "https://github.com/Azure/azure-sdk-for-java/commit/65fce82730cf1cbc75522783a7f79491b6573080", "message": "Update MessageUtils to dezip files.", "committedDate": "2020-05-04T17:42:45Z", "type": "commit"}, {"oid": "b319da966412351b674201e9bf43d5a1f7c899d0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b319da966412351b674201e9bf43d5a1f7c899d0", "message": "Fix build breaks.", "committedDate": "2020-05-04T17:46:47Z", "type": "commit"}, {"oid": "7a7d7bfada8c0365696cfc16f47729537e970fdd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7a7d7bfada8c0365696cfc16f47729537e970fdd", "message": "Fixing more API changes.", "committedDate": "2020-05-04T17:57:48Z", "type": "commit"}, {"oid": "64803b8a9b54a13811c111aa207b8f8f3bc7d286", "url": "https://github.com/Azure/azure-sdk-for-java/commit/64803b8a9b54a13811c111aa207b8f8f3bc7d286", "message": "Fixing test build breaks.", "committedDate": "2020-05-04T19:32:08Z", "type": "commit"}, {"oid": "f5f6416a98bd0c6982f53b05ba51369fec11772b", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f5f6416a98bd0c6982f53b05ba51369fec11772b", "message": "Add updateDisposition to ServiceBusReceiver interface.", "committedDate": "2020-05-04T19:36:12Z", "type": "commit"}, {"oid": "e7c0809181a4cf3ace88d39dbc1b142dae5be563", "url": "https://github.com/Azure/azure-sdk-for-java/commit/e7c0809181a4cf3ace88d39dbc1b142dae5be563", "message": "Fixing samples.", "committedDate": "2020-05-04T19:41:19Z", "type": "commit"}, {"oid": "b1a61eb6cfcd2a423129f1a52c2ef24f841b73ca", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b1a61eb6cfcd2a423129f1a52c2ef24f841b73ca", "message": "Fixing more test breaks.", "committedDate": "2020-05-04T20:05:53Z", "type": "commit"}, {"oid": "f73e732d6359edbf41d83f69d20259e2eaf46768", "url": "https://github.com/Azure/azure-sdk-for-java/commit/f73e732d6359edbf41d83f69d20259e2eaf46768", "message": "Add javadocs to new methods.", "committedDate": "2020-05-04T20:21:03Z", "type": "commit"}, {"oid": "2034aca6a2a6a6b0f78bd30087c9996a34a38e6f", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2034aca6a2a6a6b0f78bd30087c9996a34a38e6f", "message": "Adding methods for receiving and completing.", "committedDate": "2020-05-04T20:46:55Z", "type": "commit"}, {"oid": "c4b527b32137b8dd988f706fc90e9bfa739b7872", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c4b527b32137b8dd988f706fc90e9bfa739b7872", "message": "Fix tests.", "committedDate": "2020-05-04T21:05:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNTYxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10696#discussion_r419735613", "bodyText": "I gave some of the comment in PR  #10680  about this and some documentation.", "author": "hemanttanwar", "createdAt": "2020-05-04T21:20:20Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -570,20 +631,158 @@ public ServiceBusReceiverClientBuilder subscriptionName(String subscriptionName)\n          * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n          * @see #subscriptionName A subscription name should be set as well.\n          */\n-        public ServiceBusReceiverClientBuilder topicName(String topicName) {\n+        public ServiceBusSessionReceiverClientBuilder topicName(String topicName) {\n             this.topicName = topicName;\n             return this;\n         }\n \n         /**\n-         * Sets the session id.\n+         * Creates an <b>asynchronous</b>, <b>session-aware</b> Service Bus receiver responsible for reading\n+         * {@link ServiceBusMessage messages} from a specific queue or topic.\n          *\n-         * @param sessionId session id.\n+         * @return An new {@link ServiceBusReceiverAsyncClient} that receives messages from a queue or topic.\n+         * @throws IllegalStateException if {@link #queueName(String) queueName} or {@link #topicName(String)\n+         *     topicName} are not set or, both of these fields are set. It is also thrown if the Service Bus {@link\n+         *     #connectionString(String) connectionString} contains an {@code EntityPath} that does not match one set in\n+         *     {@link #queueName(String) queueName} or {@link #topicName(String) topicName}. Lastly, if a {@link\n+         *     #topicName(String) topicName} is set, but {@link #subscriptionName(String) subscriptionName} is not.\n+         * @throws IllegalArgumentException Queue or topic name are not set via {@link #queueName(String)\n+         *     queueName()} or {@link #topicName(String) topicName()}, respectively.\n+         */\n+        public ServiceBusReceiverAsyncClient buildAsyncClient() {\n+            final MessagingEntityType entityType = validateEntityPaths(logger, connectionStringEntityName, topicName,\n+                queueName);\n+            final String entityPath = getEntityPath(logger, entityType, queueName, topicName, subscriptionName);\n+\n+            if (prefetchCount < 1) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(String.format(\n+                    \"prefetchCount (%s) cannot be less than 1.\", prefetchCount)));\n+            }\n+\n+            final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n+            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount, sessionId,\n+                isRollingSessionReceiver(), maxConcurrentSessions);\n+\n+            return new ServiceBusReceiverAsyncClient(connectionProcessor.getFullyQualifiedNamespace(), entityPath,\n+                entityType, receiverOptions, connectionProcessor, ServiceBusConstants.OPERATION_TIMEOUT,\n+                tracerProvider, messageSerializer, ServiceBusClientBuilder.this::onClientClose);\n+        }\n+\n+        /**\n+         * Creates a <b>synchronous</b>, <b>session-aware</b> Service Bus receiver responsible for reading\n+         * {@link ServiceBusMessage messages} from a specific queue or topic.\n+         *\n+         * @return An new {@link ServiceBusReceiverClient} that receives messages from a queue or topic.\n+         * @throws IllegalStateException if {@link #queueName(String) queueName} or {@link #topicName(String)\n+         *     topicName} are not set or, both of these fields are set. It is also thrown if the Service Bus {@link\n+         *     #connectionString(String) connectionString} contains an {@code EntityPath} that does not match one set in\n+         *     {@link #queueName(String) queueName} or {@link #topicName(String) topicName}. Lastly, if a {@link\n+         *     #topicName(String) topicName} is set, but {@link #subscriptionName(String) subscriptionName} is not.\n+         * @throws IllegalArgumentException Queue or topic name are not set via {@link #queueName(String)\n+         *     queueName()} or {@link #topicName(String) topicName()}, respectively.\n+         */\n+        public ServiceBusReceiverClient buildClient() {\n+            return new ServiceBusReceiverClient(buildAsyncClient(), retryOptions.getTryTimeout());\n+        }\n+\n+        /**\n+         * This is a rolling session receiver only if maxConcurrentSessions is > 0 AND sessionId is null or empty. If\n+         * there is a sessionId, this is going to be a single, named session receiver.\n+         *\n+         * @return {@code true} if this is an unnamed rolling session receiver; {@code false} otherwise.\n+         */\n+        private boolean isRollingSessionReceiver() {\n+            if (maxConcurrentSessions == null) {\n+                return false;\n+            }\n+\n+            if (maxConcurrentSessions < 1) {\n+                throw logger.logExceptionAsError(\n+                    new IllegalArgumentException(\"Maximum number of concurrent sessions must be positive.\"));\n+            }\n+\n+            return CoreUtils.isNullOrEmpty(sessionId);", "originalCommit": "2034aca6a2a6a6b0f78bd30087c9996a34a38e6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1ODIyNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10696#discussion_r419758224", "bodyText": "Resolved from my response. #10687 (comment)", "author": "conniey", "createdAt": "2020-05-04T22:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNTYxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a556cc1bee9f9a7877cf227cc83dd2740a6835bd", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex dd47b17366c..f04282180a4 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -624,7 +632,7 @@ public final class ServiceBusClientBuilder {\n         }\n \n         /**\n-         * Sets the name of the topic.\n+         * Sets the name of the topic. <b>{@link #subscriptionName(String)} must also be set.</b>\n          *\n          * @param topicName Name of the topic.\n          *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczNjYzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/10696#discussion_r419736634", "bodyText": "To avoid using doing mistake and not setting session id :  Sets the name of the subscription in the topic to listen to. You must also set {@code subscriptionName}.", "author": "hemanttanwar", "createdAt": "2020-05-04T21:22:21Z", "path": "sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java", "diffHunk": "@@ -570,20 +631,158 @@ public ServiceBusReceiverClientBuilder subscriptionName(String subscriptionName)\n          * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n          * @see #subscriptionName A subscription name should be set as well.\n          */\n-        public ServiceBusReceiverClientBuilder topicName(String topicName) {\n+        public ServiceBusSessionReceiverClientBuilder topicName(String topicName) {\n             this.topicName = topicName;\n             return this;\n         }\n \n         /**\n-         * Sets the session id.\n+         * Creates an <b>asynchronous</b>, <b>session-aware</b> Service Bus receiver responsible for reading\n+         * {@link ServiceBusMessage messages} from a specific queue or topic.\n          *\n-         * @param sessionId session id.\n+         * @return An new {@link ServiceBusReceiverAsyncClient} that receives messages from a queue or topic.\n+         * @throws IllegalStateException if {@link #queueName(String) queueName} or {@link #topicName(String)\n+         *     topicName} are not set or, both of these fields are set. It is also thrown if the Service Bus {@link\n+         *     #connectionString(String) connectionString} contains an {@code EntityPath} that does not match one set in\n+         *     {@link #queueName(String) queueName} or {@link #topicName(String) topicName}. Lastly, if a {@link\n+         *     #topicName(String) topicName} is set, but {@link #subscriptionName(String) subscriptionName} is not.\n+         * @throws IllegalArgumentException Queue or topic name are not set via {@link #queueName(String)\n+         *     queueName()} or {@link #topicName(String) topicName()}, respectively.\n+         */\n+        public ServiceBusReceiverAsyncClient buildAsyncClient() {\n+            final MessagingEntityType entityType = validateEntityPaths(logger, connectionStringEntityName, topicName,\n+                queueName);\n+            final String entityPath = getEntityPath(logger, entityType, queueName, topicName, subscriptionName);\n+\n+            if (prefetchCount < 1) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(String.format(\n+                    \"prefetchCount (%s) cannot be less than 1.\", prefetchCount)));\n+            }\n+\n+            final ServiceBusConnectionProcessor connectionProcessor = getOrCreateConnectionProcessor(messageSerializer);\n+            final ReceiverOptions receiverOptions = new ReceiverOptions(receiveMode, prefetchCount, sessionId,\n+                isRollingSessionReceiver(), maxConcurrentSessions);\n+\n+            return new ServiceBusReceiverAsyncClient(connectionProcessor.getFullyQualifiedNamespace(), entityPath,\n+                entityType, receiverOptions, connectionProcessor, ServiceBusConstants.OPERATION_TIMEOUT,\n+                tracerProvider, messageSerializer, ServiceBusClientBuilder.this::onClientClose);\n+        }\n+\n+        /**\n+         * Creates a <b>synchronous</b>, <b>session-aware</b> Service Bus receiver responsible for reading\n+         * {@link ServiceBusMessage messages} from a specific queue or topic.\n+         *\n+         * @return An new {@link ServiceBusReceiverClient} that receives messages from a queue or topic.\n+         * @throws IllegalStateException if {@link #queueName(String) queueName} or {@link #topicName(String)\n+         *     topicName} are not set or, both of these fields are set. It is also thrown if the Service Bus {@link\n+         *     #connectionString(String) connectionString} contains an {@code EntityPath} that does not match one set in\n+         *     {@link #queueName(String) queueName} or {@link #topicName(String) topicName}. Lastly, if a {@link\n+         *     #topicName(String) topicName} is set, but {@link #subscriptionName(String) subscriptionName} is not.\n+         * @throws IllegalArgumentException Queue or topic name are not set via {@link #queueName(String)\n+         *     queueName()} or {@link #topicName(String) topicName()}, respectively.\n+         */\n+        public ServiceBusReceiverClient buildClient() {\n+            return new ServiceBusReceiverClient(buildAsyncClient(), retryOptions.getTryTimeout());\n+        }\n+\n+        /**\n+         * This is a rolling session receiver only if maxConcurrentSessions is > 0 AND sessionId is null or empty. If\n+         * there is a sessionId, this is going to be a single, named session receiver.\n+         *\n+         * @return {@code true} if this is an unnamed rolling session receiver; {@code false} otherwise.\n+         */\n+        private boolean isRollingSessionReceiver() {\n+            if (maxConcurrentSessions == null) {\n+                return false;\n+            }\n+\n+            if (maxConcurrentSessions < 1) {\n+                throw logger.logExceptionAsError(\n+                    new IllegalArgumentException(\"Maximum number of concurrent sessions must be positive.\"));\n+            }\n+\n+            return CoreUtils.isNullOrEmpty(sessionId);\n+        }\n+    }\n+\n+    /**\n+     * Builder for creating {@link ServiceBusReceiverClient} and {@link ServiceBusReceiverAsyncClient} to consume\n+     * messages from Service Bus.\n+     */\n+    @ServiceClientBuilder(serviceClients = {ServiceBusReceiverClient.class, ServiceBusReceiverAsyncClient.class})\n+    public final class ServiceBusReceiverClientBuilder {\n+        private int prefetchCount = DEFAULT_PREFETCH_COUNT;\n+        private String queueName;\n+        private ReceiveMode receiveMode = ReceiveMode.PEEK_LOCK;\n+        private String subscriptionName;\n+        private String topicName;\n+\n+        private ServiceBusReceiverClientBuilder() {\n+        }\n+\n+        /**\n+         * Sets the prefetch count of the receiver. Prefetch speeds up the message flow by aiming to have a message\n+         * readily available for local retrieval when and before the application asks for one using {@link\n+         * ServiceBusReceiverAsyncClient#receive()}. Setting a non-zero value will prefetch that number of messages.\n+         * Setting the value to zero turns prefetch off. For both {@link ReceiveMode#PEEK_LOCK PEEK_LOCK} and {@link\n+         * ReceiveMode#RECEIVE_AND_DELETE RECEIVE_AND_DELETE} modes the default value is 1.\n+         *\n+         * @param prefetchCount The prefetch count.\n          *\n          * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n          */\n-        public ServiceBusReceiverClientBuilder sessionId(String sessionId) {\n-            this.sessionId = sessionId;\n+        public ServiceBusReceiverClientBuilder prefetchCount(int prefetchCount) {\n+            this.prefetchCount = prefetchCount;\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the name of the queue to create a receiver for.\n+         *\n+         * @param queueName Name of the queue.\n+         *\n+         * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n+         */\n+        public ServiceBusReceiverClientBuilder queueName(String queueName) {\n+            this.queueName = queueName;\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the receive mode for the receiver.\n+         *\n+         * @param receiveMode Mode for receiving messages.\n+         *\n+         * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n+         */\n+        public ServiceBusReceiverClientBuilder receiveMode(ReceiveMode receiveMode) {\n+            this.receiveMode = receiveMode;\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the name of the subscription in the topic to listen to.\n+         *\n+         * @param subscriptionName Name of the subscription.\n+         *\n+         * @return The modified {@link ServiceBusReceiverClientBuilder} object.\n+         * @see #topicName A topic name should be set as well.\n+         */\n+        public ServiceBusReceiverClientBuilder subscriptionName(String subscriptionName) {\n+            this.subscriptionName = subscriptionName;\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the name of the topic.\n+         *\n+         * @param topicName Name of the topic.", "originalCommit": "2034aca6a2a6a6b0f78bd30087c9996a34a38e6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a556cc1bee9f9a7877cf227cc83dd2740a6835bd", "chunk": "diff --git a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\nindex dd47b17366c..f04282180a4 100644\n--- a/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n+++ b/sdk/servicebus/azure-messaging-servicebus/src/main/java/com/azure/messaging/servicebus/ServiceBusClientBuilder.java\n\n@@ -624,7 +632,7 @@ public final class ServiceBusClientBuilder {\n         }\n \n         /**\n-         * Sets the name of the topic.\n+         * Sets the name of the topic. <b>{@link #subscriptionName(String)} must also be set.</b>\n          *\n          * @param topicName Name of the topic.\n          *\n"}}, {"oid": "b466de9a697e7c13e724e648ddff67cde79641d2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b466de9a697e7c13e724e648ddff67cde79641d2", "message": "Fixing tests.", "committedDate": "2020-05-04T21:46:58Z", "type": "commit"}, {"oid": "6568c0eb36a6a0f6ec0ad26f1c20ea18ae1baa16", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6568c0eb36a6a0f6ec0ad26f1c20ea18ae1baa16", "message": "Update javadocs with returns.", "committedDate": "2020-05-04T21:51:48Z", "type": "commit"}, {"oid": "8f14e98a958006d5b71c0923c27e19bae0ee0acc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8f14e98a958006d5b71c0923c27e19bae0ee0acc", "message": "Fix checkstyle issues.", "committedDate": "2020-05-04T21:55:24Z", "type": "commit"}, {"oid": "a556cc1bee9f9a7877cf227cc83dd2740a6835bd", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a556cc1bee9f9a7877cf227cc83dd2740a6835bd", "message": "Fixing documentation.", "committedDate": "2020-05-04T22:14:24Z", "type": "commit"}]}