{"pr_number": 6893, "pr_title": " KEYCLOAK-13007 Add LDAPAccountTest", "pr_createdAt": "2020-03-13T15:55:18Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6893", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxODcxNw==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392318717", "bodyText": "No need to configure WebAuthn for this test. You can remove this.", "author": "vmuzikar", "createdAt": "2020-03-13T15:58:31Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ */\n+@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n+public class LDAPAccountTest extends AbstractAccountTest {\n+    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n+\n+    @Page\n+    private SigningInPage signingInPage;\n+\n+    private SigningInPage.CredentialType passwordCredentialType;\n+    @ClassRule\n+    public static LDAPRule ldapRule = new LDAPRule();\n+\n+    @Override\n+    protected void afterAbstractKeycloakTestRealmImport() {\n+        super.afterAbstractKeycloakTestRealmImport();\n+\n+        // configure WebAuthn\n+        // we can't do this during the realm import because we'd need to specify all built-in flows as well\n+\n+        AuthenticationFlowRepresentation flow = new AuthenticationFlowRepresentation();\n+        flow.setId(WEBAUTHN_FLOW_ID);\n+        flow.setAlias(\"webauthn flow\");\n+        flow.setProviderId(\"basic-flow\");\n+        flow.setBuiltIn(false);\n+        flow.setTopLevel(true);\n+        testRealmResource().flows().createFlow(flow);\n+\n+        AuthenticationExecutionRepresentation execution = new AuthenticationExecutionRepresentation();\n+        execution.setAuthenticator(WebAuthnAuthenticatorFactory.PROVIDER_ID);\n+        execution.setPriority(10);\n+        execution.setRequirement(REQUIRED.toString());\n+        execution.setParentFlow(WEBAUTHN_FLOW_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        execution.setAuthenticator(WebAuthnPasswordlessAuthenticatorFactory.PROVIDER_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        RequiredActionProviderSimpleRepresentation requiredAction = new RequiredActionProviderSimpleRepresentation();\n+        requiredAction.setProviderId(WebAuthnRegisterFactory.PROVIDER_ID);\n+        requiredAction.setName(\"blahblah\");\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        requiredAction.setProviderId(WebAuthnPasswordlessRegisterFactory.PROVIDER_ID);\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        // no need to actually configure the authentication, in Account Console tests we just verify the registration", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxOTE3OQ==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392319179", "bodyText": "No need for this. updatePasswordPage is not used anywhere in this test.", "author": "vmuzikar", "createdAt": "2020-03-13T15:59:18Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ */\n+@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n+public class LDAPAccountTest extends AbstractAccountTest {\n+    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n+\n+    @Page\n+    private SigningInPage signingInPage;\n+\n+    private SigningInPage.CredentialType passwordCredentialType;\n+    @ClassRule\n+    public static LDAPRule ldapRule = new LDAPRule();\n+\n+    @Override\n+    protected void afterAbstractKeycloakTestRealmImport() {\n+        super.afterAbstractKeycloakTestRealmImport();\n+\n+        // configure WebAuthn\n+        // we can't do this during the realm import because we'd need to specify all built-in flows as well\n+\n+        AuthenticationFlowRepresentation flow = new AuthenticationFlowRepresentation();\n+        flow.setId(WEBAUTHN_FLOW_ID);\n+        flow.setAlias(\"webauthn flow\");\n+        flow.setProviderId(\"basic-flow\");\n+        flow.setBuiltIn(false);\n+        flow.setTopLevel(true);\n+        testRealmResource().flows().createFlow(flow);\n+\n+        AuthenticationExecutionRepresentation execution = new AuthenticationExecutionRepresentation();\n+        execution.setAuthenticator(WebAuthnAuthenticatorFactory.PROVIDER_ID);\n+        execution.setPriority(10);\n+        execution.setRequirement(REQUIRED.toString());\n+        execution.setParentFlow(WEBAUTHN_FLOW_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        execution.setAuthenticator(WebAuthnPasswordlessAuthenticatorFactory.PROVIDER_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        RequiredActionProviderSimpleRepresentation requiredAction = new RequiredActionProviderSimpleRepresentation();\n+        requiredAction.setProviderId(WebAuthnRegisterFactory.PROVIDER_ID);\n+        requiredAction.setName(\"blahblah\");\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        requiredAction.setProviderId(WebAuthnPasswordlessRegisterFactory.PROVIDER_ID);\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        // no need to actually configure the authentication, in Account Console tests we just verify the registration\n+    }\n+\n+    @Override\n+    public void setDefaultPageUriParameters() {\n+        super.setDefaultPageUriParameters();\n+        updatePasswordPage.setAuthRealm(TEST);", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxOTk5OQ==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392319999", "bodyText": "No need for WebAuthn in this test.", "author": "vmuzikar", "createdAt": "2020-03-13T16:00:40Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ */\n+@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n+public class LDAPAccountTest extends AbstractAccountTest {\n+    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMDA0Mw==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392320043", "bodyText": "No need for WebAuthn in this test.", "author": "vmuzikar", "createdAt": "2020-03-13T16:00:44Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ */\n+@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMDIxOA==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392320218", "bodyText": "Change the author to yourself. ;)", "author": "vmuzikar", "createdAt": "2020-03-13T16:01:00Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMjQ2Mg==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392322462", "bodyText": "This is not used anywhere.", "author": "vmuzikar", "createdAt": "2020-03-13T16:04:58Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.*;\n+import org.junit.runners.MethodSorters;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.common.Profile;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.credential.OTPCredentialModel;\n+import org.keycloak.models.credential.PasswordCredentialModel;\n+import org.keycloak.models.credential.WebAuthnCredentialModel;\n+import org.keycloak.models.utils.TimeBasedOTP;\n+import org.keycloak.representations.idm.*;\n+import org.keycloak.storage.ldap.idm.model.LDAPObject;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.auth.page.login.OTPSetup;\n+import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n+import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n+import org.keycloak.testsuite.util.LDAPRule;\n+import org.keycloak.testsuite.util.LDAPTestUtils;\n+\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n+import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n+import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n+\n+/**\n+ * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ */\n+@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n+@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n+public class LDAPAccountTest extends AbstractAccountTest {\n+    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n+\n+    @Page\n+    private SigningInPage signingInPage;\n+\n+    private SigningInPage.CredentialType passwordCredentialType;\n+    @ClassRule\n+    public static LDAPRule ldapRule = new LDAPRule();\n+\n+    @Override\n+    protected void afterAbstractKeycloakTestRealmImport() {\n+        super.afterAbstractKeycloakTestRealmImport();\n+\n+        // configure WebAuthn\n+        // we can't do this during the realm import because we'd need to specify all built-in flows as well\n+\n+        AuthenticationFlowRepresentation flow = new AuthenticationFlowRepresentation();\n+        flow.setId(WEBAUTHN_FLOW_ID);\n+        flow.setAlias(\"webauthn flow\");\n+        flow.setProviderId(\"basic-flow\");\n+        flow.setBuiltIn(false);\n+        flow.setTopLevel(true);\n+        testRealmResource().flows().createFlow(flow);\n+\n+        AuthenticationExecutionRepresentation execution = new AuthenticationExecutionRepresentation();\n+        execution.setAuthenticator(WebAuthnAuthenticatorFactory.PROVIDER_ID);\n+        execution.setPriority(10);\n+        execution.setRequirement(REQUIRED.toString());\n+        execution.setParentFlow(WEBAUTHN_FLOW_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        execution.setAuthenticator(WebAuthnPasswordlessAuthenticatorFactory.PROVIDER_ID);\n+        testRealmResource().flows().addExecution(execution);\n+\n+        RequiredActionProviderSimpleRepresentation requiredAction = new RequiredActionProviderSimpleRepresentation();\n+        requiredAction.setProviderId(WebAuthnRegisterFactory.PROVIDER_ID);\n+        requiredAction.setName(\"blahblah\");\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        requiredAction.setProviderId(WebAuthnPasswordlessRegisterFactory.PROVIDER_ID);\n+        testRealmResource().flows().registerRequiredAction(requiredAction);\n+\n+        // no need to actually configure the authentication, in Account Console tests we just verify the registration\n+    }\n+\n+    @Override\n+    public void setDefaultPageUriParameters() {\n+        super.setDefaultPageUriParameters();\n+        updatePasswordPage.setAuthRealm(TEST);\n+    }\n+\n+    @Before\n+    public void beforeSigningInTest() {\n+        passwordCredentialType = signingInPage.getCredentialType(PasswordCredentialModel.TYPE);\n+        RealmRepresentation realm = testRealmResource().toRepresentation();", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\nindex f2de77cf6e..014d69aebf 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LDAPAccountTest.java\n\n@@ -19,41 +19,23 @@ package org.keycloak.testsuite.ui.account2;\n \n import org.jboss.arquillian.graphene.page.Page;\n import org.junit.*;\n-import org.junit.runners.MethodSorters;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n-import org.keycloak.authentication.authenticators.browser.WebAuthnPasswordlessAuthenticatorFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnPasswordlessRegisterFactory;\n-import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n-import org.keycloak.common.Profile;\n import org.keycloak.models.RealmModel;\n-import org.keycloak.models.credential.OTPCredentialModel;\n import org.keycloak.models.credential.PasswordCredentialModel;\n-import org.keycloak.models.credential.WebAuthnCredentialModel;\n-import org.keycloak.models.utils.TimeBasedOTP;\n import org.keycloak.representations.idm.*;\n import org.keycloak.storage.ldap.idm.model.LDAPObject;\n-import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n-import org.keycloak.testsuite.auth.page.login.OTPSetup;\n-import org.keycloak.testsuite.auth.page.login.UpdatePassword;\n import org.keycloak.testsuite.federation.ldap.LDAPTestContext;\n-import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n import org.keycloak.testsuite.ui.account2.page.SigningInPage;\n import org.keycloak.testsuite.util.LDAPRule;\n import org.keycloak.testsuite.util.LDAPTestUtils;\n \n-import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n import static org.keycloak.representations.idm.CredentialRepresentation.PASSWORD;\n import static org.keycloak.testsuite.admin.Users.setPasswordFor;\n import static org.keycloak.testsuite.auth.page.AuthRealm.TEST;\n \n /**\n- * @author Vaclav Muzikar <vmuzikar@redhat.com>\n+ * @author Alfredo Moises Boullosa <aboullos@redhat.com>\n  */\n-@EnableFeature(value = Profile.Feature.ACCOUNT2, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.ACCOUNT_API, skipRestart = true)\n-@EnableFeature(value = Profile.Feature.WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n public class LDAPAccountTest extends AbstractAccountTest {\n-    public static final String WEBAUTHN_FLOW_ID = \"75e2390e-f296-49e6-acf8-6d21071d7e10\";\n \n     @Page\n     private SigningInPage signingInPage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyMzA2Nw==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392323067", "bodyText": "getItemElement can never return null. It will either return the element or throw an exception.", "author": "vmuzikar", "createdAt": "2020-03-13T16:06:03Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java", "diffHunk": "@@ -192,6 +192,15 @@ public String getUserLabel() {\n             return getTextFromItem(LABEL);\n         }\n \n+        public boolean hasCreatedAt() {\n+            boolean result = false;\n+            try {\n+                result = getItemElement(CREATED_AT) != null;", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\nindex 2f01ac234e..04e68e2fcb 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\n\n@@ -195,7 +195,7 @@ public class SigningInPage extends AbstractLoggedInPage {\n         public boolean hasCreatedAt() {\n             boolean result = false;\n             try {\n-                result = getItemElement(CREATED_AT) != null;\n+                result = getItemElement(CREATED_AT).isDisplayed();\n             } catch (NoSuchElementException e) {}\n \n             return result;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyNDg5NA==", "url": "https://github.com/keycloak/keycloak/pull/6893#discussion_r392324894", "bodyText": "This is just a code style / optimization suggestion. I'll leave it up to you if you change it.\nNo need to create another variable. You can use something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        boolean result = false;\n          \n          \n            \n                        try {\n          \n          \n            \n                            result = getItemElement(CREATED_AT) != null;\n          \n          \n            \n                        } catch (NoSuchElementException e) {}\n          \n          \n            \n            \n          \n          \n            \n                        return result;\n          \n          \n            \n                        try {\n          \n          \n            \n                            return getItemElement(CREATED_AT).isDisplayed();\n          \n          \n            \n                        } catch (NoSuchElementException e) {\n          \n          \n            \n                            return false;\n          \n          \n            \n                        }", "author": "vmuzikar", "createdAt": "2020-03-13T16:09:11Z", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java", "diffHunk": "@@ -192,6 +192,15 @@ public String getUserLabel() {\n             return getTextFromItem(LABEL);\n         }\n \n+        public boolean hasCreatedAt() {\n+            boolean result = false;\n+            try {\n+                result = getItemElement(CREATED_AT) != null;\n+            } catch (NoSuchElementException e) {}\n+\n+            return result;", "originalCommit": "b1cb0fd24145c56cee003e404671aedda49c82ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "chunk": "diff --git a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\nindex 2f01ac234e..04e68e2fcb 100644\n--- a/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\n+++ b/testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/SigningInPage.java\n\n@@ -195,7 +195,7 @@ public class SigningInPage extends AbstractLoggedInPage {\n         public boolean hasCreatedAt() {\n             boolean result = false;\n             try {\n-                result = getItemElement(CREATED_AT) != null;\n+                result = getItemElement(CREATED_AT).isDisplayed();\n             } catch (NoSuchElementException e) {}\n \n             return result;\n"}}, {"oid": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "url": "https://github.com/keycloak/keycloak/commit/ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "message": "KEYCLOAK-13007 Add LDAPAccountTest", "committedDate": "2020-03-13T18:35:14Z", "type": "commit"}, {"oid": "ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "url": "https://github.com/keycloak/keycloak/commit/ad0b53ebe18a37605ab1367fc4490be9a8f16ec4", "message": "KEYCLOAK-13007 Add LDAPAccountTest", "committedDate": "2020-03-13T18:35:14Z", "type": "forcePushed"}]}