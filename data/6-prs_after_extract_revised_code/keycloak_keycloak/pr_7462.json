{"pr_number": 7462, "pr_title": "[KEYCLOAK-15807] - Wrong parsing of Cookie header", "pr_createdAt": "2020-10-01T20:24:09Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7462", "timeline": [{"oid": "9e4f74e679def6b83147d3f967ec016a70da2d7e", "url": "https://github.com/keycloak/keycloak/commit/9e4f74e679def6b83147d3f967ec016a70da2d7e", "message": "[KEYCLOAK-15807] - Wrong parsing of Cookie header", "committedDate": "2020-10-01T20:45:20Z", "type": "forcePushed"}, {"oid": "091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "url": "https://github.com/keycloak/keycloak/commit/091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "message": "[KEYCLOAK-15807] - Wrong parsing of Cookie header", "committedDate": "2020-10-01T20:59:20Z", "type": "commit"}, {"oid": "091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "url": "https://github.com/keycloak/keycloak/commit/091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "message": "[KEYCLOAK-15807] - Wrong parsing of Cookie header", "committedDate": "2020-10-01T20:59:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzI4Nw==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498513287", "bodyText": "Parsing cookies like that every time we look up a specific cookie is not optimal. Ideally, we should be parsing only once.\nAlso, I'm not sure what motivated parsing the Cookie header is still valid. See https://issues.redhat.com/browse/KEYCLOAK-5270. So I'm wondering if we should just remove this part of the code.", "author": "pedroigor", "createdAt": "2020-10-01T21:06:27Z", "path": "services/src/main/java/org/keycloak/services/util/CookieHelper.java", "diffHunk": "@@ -128,13 +125,21 @@ public static void addCookie(String name, String value, String path, String doma\n     }\n \n \n-    public static Set<String> parseCookie(String cookieHeader, String name) {\n-        String parts[] = cookieHeader.split(\"[;,]\");\n+    public static Set<String> parseCookie(String header, String name) {", "originalCommit": "091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY0MTExNA==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498641114", "bodyText": "You mean removing the part where cookies are parsed from a request's header and keep only this  Cookie cookie = headers.getCookies().get(name);?\nIf we still want to or need to support IE <= 11 we need to keep it otherwise KEYCLOAK-5270 will become again an issue. I agree it's not nice but it's a workaround for a bug in IE which doesn't handle cookies with overlapping paths correctly.", "author": "martin-kanis", "createdAt": "2020-10-02T06:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMTQ3Mg==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498731472", "bodyText": "IE 10 is supposed to not get any updates including security fixes. I'm not sure if we want to support a browser in this situation. Thus my question.\nIE 11 is still there I think but will soon enter EOL too. And maybe the original issue that resulted in that code is now fixed in IE 11 (from 2018 to now, some time has passed :))", "author": "pedroigor", "createdAt": "2020-10-02T10:05:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTgyMA==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498739820", "bodyText": "@martin-kanis But yeah, if we want to be more defensive than we can change the current code to correctly follow the spec.", "author": "pedroigor", "createdAt": "2020-10-02T10:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczOTk4NQ==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498739985", "bodyText": "IE11 is unfortunately still supported https://access.redhat.com/articles/2342861 :( It seems we need to live with historic browsers and rather not introduce regressions as you know how the browser-specific regressions are painful to debug and resolve (As it is the end-user with IE11 for whom the things stopped working and developers/administrators usually don't have chance to test it on their own due the fact that they don't have easy access to those prehistoric browsers)", "author": "mposolda", "createdAt": "2020-10-02T10:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUxMzI4Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNDAyMg==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498704022", "bodyText": "It seems that with current KEycloak we support parsing more \"Cookie\" headers and even same cookies in each header. Something like this:\nCookie: foo=val1\nCookie: foo=val2\n\nWith this change, we will always have just the \"val1\" from the first cookie if I understand correctly? I don't have clue about side-effects of this and if there are some regressions of this and some (old) browsers will stop working as expected etc. Not sure if this is same what @martin-kanis mentioned?", "author": "mposolda", "createdAt": "2020-10-02T09:06:57Z", "path": "services/src/main/java/org/keycloak/services/util/CookieHelper.java", "diffHunk": "@@ -106,20 +108,15 @@ public static void addCookie(String name, String value, String path, String doma\n \n     private static Set<String> getInternalCookieValue(String name) {\n         HttpHeaders headers = Resteasy.getContextData(HttpHeaders.class);\n-\n         Set<String> cookiesVal = new HashSet<>();\n \n         // check for cookies in the request headers\n-        List<String> cookieHeader = headers.getRequestHeaders().get(HttpHeaders.COOKIE);\n-        if (cookieHeader != null) {\n-            logger.debugv(\"{1} cookie found in the request's header\", name);\n-            cookieHeader.stream().map(s -> parseCookie(s, name)).forEach(cookiesVal::addAll);\n-        }\n+        cookiesVal.addAll(parseCookie(headers.getRequestHeaders().getFirst(HttpHeaders.COOKIE), name));", "originalCommit": "091579ab357c00d9ed1a7becc2ae1aeb89f1ac69", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNzM1Nw==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498707357", "bodyText": "I suggest to add some test to \"CookieHelper\" as well for the format like this. To doublecheck that we don't have regressions. WDYT?", "author": "mposolda", "createdAt": "2020-10-02T09:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNDAyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczNTc0OA==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498735748", "bodyText": "As per https://tools.ietf.org/html/rfc6265#section-5.4, \"When the user agent generates an HTTP request, the user agent MUST NOT attach more than one Cookie header field.\".\nAs per parsing multiple cookies within the same header, the test is checking that. As long as they have different values.\nBut again, I'm not sure if this code is necessary for two main reasons:\n\nOld and EOL browser support seems to be the reason behind that code\nResteasy should parse the cookies just like that already ?\n\nPlus the fact that we are adding some overhead on every request to parse the header whenever a cookie is queried.", "author": "pedroigor", "createdAt": "2020-10-02T10:15:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNDAyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MTk5MQ==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498741991", "bodyText": "@mposolda It's still working with multiple cookies scenario which you described. It should be covered by the following test CookiesPathTest.testMultipleCookies.\n@pedroigor I agree that Resteasy parser for parsing cookies from a header is definitely better than the previous custom one. It's now really a question whether we want to support a wrong behavior of IE11 and live with this performance penalty. Another argument why keep it might be related to product as I assume there are more strict rules regarding the IE11 support.", "author": "martin-kanis", "createdAt": "2020-10-02T10:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNDAyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc1NzI0Mg==", "url": "https://github.com/keycloak/keycloak/pull/7462#discussion_r498757242", "bodyText": "We can live with it, mainly due to the fact that otherwise we won't be able to parse multiple values for a same cookie. And that is one of the things this changeset tries to fix where the same cookie is sent multiple times but due to the wrong parsing no cookies are actually parsed.", "author": "pedroigor", "createdAt": "2020-10-02T11:06:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcwNDAyMg=="}], "type": "inlineReview", "revised_code": null}]}