{"pr_number": 6791, "pr_title": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs", "pr_createdAt": "2020-02-14T19:08:17Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6791", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380049355", "bodyText": "This is not going to work as Keycloak may be exposed on a different context-path on the reverse proxy. I.e. frontendUrl could be \"https://mykeycloak.org/\" while Keycloak is listening on \"https://10.9.10.10:8443/auth\".", "author": "stianst", "createdAt": "2020-02-17T08:51:56Z", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlService.java", "diffHunk": "@@ -517,6 +517,19 @@ public Response execute(String samlRequest, String samlResponse, String relaySta\n             else\n                 return handleSamlResponse(samlResponse, relayState);\n         }\n+\n+        /**\n+         * KEYCLOAK-12616, KEYCLOAK-12944: construct the expected destination URI in the same way that {@link KeycloakUriInfo#getAbsolutePath()}\n+         * used to do prior to the changes introduced by the addition of the default hostname provider.\n+         *\n+         * @param session a reference to the {@link KeycloakSession}.\n+         * @return the constructed {@link URI}.\n+         */\n+        protected URI getExpectedDestinationUri(final KeycloakSession session) {\n+            KeycloakUriInfo info = session.getContext().getUri();\n+            URI baseUri = info.getBaseUri();\n+            return info.getAbsolutePathBuilder().scheme(baseUri.getScheme()).host(baseUri.getHost()).port(baseUri.getPort()).build();", "originalCommit": "0c8b6be4be661cb41d940675e8822ae34cf914f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTYxNA==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380049614", "bodyText": "It would be better to just load the actual destination of the endpoints, rather than build it based on the request.", "author": "stianst", "createdAt": "2020-02-17T08:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NDg0MA==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380054840", "bodyText": "See what @pedroigor did as an example: 7efaf98#diff-19561d5afe444c1530b7f14bd01a7124R500", "author": "stianst", "createdAt": "2020-02-17T09:02:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODU5Nw==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380148597", "bodyText": "@stianst first version of the fix was using the baseUri + destination of the endpoints. So if proxy is on https://mykeycloak.org/ the URL to be validated would be https://mykeycloak.org/realms/demo/protocol/saml. Reason I changed it is that the above is exactly what we used to do before the changes introduced by the HostnameProvider so I thought users would be setting the destination with the /auth/ path anyway and changing it would \"break\" existing clients.\nI will revert to my original impl in which the baseUri is composed with the endpoint destination.", "author": "sguilhen", "createdAt": "2020-02-17T12:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE1MTExNg==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380151116", "bodyText": "This is not going to work as Keycloak may be exposed on a different context-path on the reverse proxy. I.e. frontendUrl could be \"https://mykeycloak.org/\" while Keycloak is listening on \"https://10.9.10.10:8443/auth\".\n\nIt does work as this is just the URL used for validating the destination. The redirection uses the baseUri so it properly redirects back to the proxy. I assumed users were setting the destination with the /auth/ path because of the way we used to buld the validation URL. I agree the destination should be set using solely the proxy path, so I will change that.", "author": "sguilhen", "createdAt": "2020-02-17T12:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzMTMyMg==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380331322", "bodyText": "Changed it so it now uses the destination of the SAML request endpoint. Test was improved as well, it now checks that the request fails if the frontendUrl isn't set to the proxy address.", "author": "sguilhen", "createdAt": "2020-02-17T18:58:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b8fce19d01c5a7be00e01f54ae7f27f85052543", "chunk": "diff --git a/services/src/main/java/org/keycloak/protocol/saml/SamlService.java b/services/src/main/java/org/keycloak/protocol/saml/SamlService.java\nindex fbfeb24eaa..76d15ab7da 100755\n--- a/services/src/main/java/org/keycloak/protocol/saml/SamlService.java\n+++ b/services/src/main/java/org/keycloak/protocol/saml/SamlService.java\n\n@@ -519,16 +520,15 @@ public class SamlService extends AuthorizationEndpointBase {\n         }\n \n         /**\n-         * KEYCLOAK-12616, KEYCLOAK-12944: construct the expected destination URI in the same way that {@link KeycloakUriInfo#getAbsolutePath()}\n-         * used to do prior to the changes introduced by the addition of the default hostname provider.\n+         * KEYCLOAK-12616, KEYCLOAK-12944: construct the expected destination URI using the configured base URI.\n          *\n          * @param session a reference to the {@link KeycloakSession}.\n          * @return the constructed {@link URI}.\n          */\n         protected URI getExpectedDestinationUri(final KeycloakSession session) {\n-            KeycloakUriInfo info = session.getContext().getUri();\n-            URI baseUri = info.getBaseUri();\n-            return info.getAbsolutePathBuilder().scheme(baseUri.getScheme()).host(baseUri.getHost()).port(baseUri.getPort()).build();\n+            final String realmName = session.getContext().getRealm().getName();\n+            final URI baseUri = session.getContext().getUri().getBaseUri();\n+            return Urls.samlRequestEndpoint(baseUri, realmName);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NzQ3OQ==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380057479", "bodyText": "See above. In the test the destination URL should not match the Keycloak server's context path as it may be different on the reverse proxy.", "author": "stianst", "createdAt": "2020-02-17T09:08:34Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.testsuite.saml;\n+\n+import java.net.URI;\n+import java.util.HashMap;\n+\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriBuilder;\n+\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.util.EntityUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.keycloak.protocol.saml.SamlProtocol;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.saml.SAML2LogoutRequestBuilder;\n+import org.keycloak.saml.processing.api.saml.v2.request.SAML2Request;\n+import org.keycloak.services.resources.RealmsResource;\n+import org.keycloak.testsuite.util.ReverseProxy;\n+import org.keycloak.testsuite.util.SamlClient;\n+import org.w3c.dom.Document;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.keycloak.testsuite.util.Matchers.statusCodeIsHC;\n+\n+/**\n+ * SAML tests using a {@code frontendUrl} that points to a reverse proxy. The SAML request destination should be validated\n+ * against the proxy address and any redirection should also have the proxy as target.\n+ *\n+ * @author <a href=\"mailto:sguilhen@redhat.com\">Stefan Guilhen</a>\n+ */\n+public class SamlReverseProxyTest extends AbstractSamlTest {\n+\n+    @ClassRule\n+    public static ReverseProxy proxy = new ReverseProxy();\n+\n+    // destination should match the path of the keycloak server, which includes the /auth/ element.\n+    private static final String DESTINATION_URL  = proxy.getUrl() + \"/auth/\";", "originalCommit": "0c8b6be4be661cb41d940675e8822ae34cf914f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyMjAwNQ==", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380322005", "bodyText": "Got it, changed so it doesn't add /auth anymore.", "author": "sguilhen", "createdAt": "2020-02-17T18:26:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NzQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2b8fce19d01c5a7be00e01f54ae7f27f85052543", "chunk": "diff --git a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java\nindex dc37c6be81..3f8b016caa 100644\n--- a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java\n+++ b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java\n\n@@ -27,8 +27,7 @@ import org.apache.http.client.methods.HttpUriRequest;\n import org.apache.http.impl.client.CloseableHttpClient;\n import org.apache.http.impl.client.HttpClientBuilder;\n import org.apache.http.util.EntityUtils;\n-import org.junit.After;\n-import org.junit.Before;\n+import org.hamcrest.Matcher;\n import org.junit.ClassRule;\n import org.junit.Test;\n import org.keycloak.protocol.saml.SamlProtocol;\n"}}, {"oid": "2b8fce19d01c5a7be00e01f54ae7f27f85052543", "url": "https://github.com/keycloak/keycloak/commit/2b8fce19d01c5a7be00e01f54ae7f27f85052543", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL", "committedDate": "2020-02-17T18:25:10Z", "type": "forcePushed"}, {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "url": "https://github.com/keycloak/keycloak/commit/6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL", "committedDate": "2020-02-17T19:04:26Z", "type": "commit"}, {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "url": "https://github.com/keycloak/keycloak/commit/6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL", "committedDate": "2020-02-17T19:04:26Z", "type": "forcePushed"}]}