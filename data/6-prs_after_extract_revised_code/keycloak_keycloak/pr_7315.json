{"pr_number": 7315, "pr_title": "KEYCLOAK-14972 Add independent GroupProvider interface", "pr_createdAt": "2020-08-01T08:03:12Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7315", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU2Njg3OA==", "url": "https://github.com/keycloak/keycloak/pull/7315#discussion_r468566878", "bodyText": "Missing header", "author": "sguilhen", "createdAt": "2020-08-11T13:10:49Z", "path": "server-spi-private/src/main/java/org/keycloak/models/GroupProviderFactory.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package org.keycloak.models;", "originalCommit": "77a34aa3bfde1ecee84c09f20325e61bcc330e6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dcef545fd273f8189ec33bb93b60ddf57a861f44", "chunk": "diff --git a/server-spi-private/src/main/java/org/keycloak/models/GroupProviderFactory.java b/server-spi-private/src/main/java/org/keycloak/models/GroupProviderFactory.java\nindex e36c16e569..2d1e783bae 100644\n--- a/server-spi-private/src/main/java/org/keycloak/models/GroupProviderFactory.java\n+++ b/server-spi-private/src/main/java/org/keycloak/models/GroupProviderFactory.java\n\n@@ -1,3 +1,20 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.keycloak.models;\n \n import org.keycloak.provider.ProviderFactory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU2NzU2Mw==", "url": "https://github.com/keycloak/keycloak/pull/7315#discussion_r468567563", "bodyText": "Missing header", "author": "sguilhen", "createdAt": "2020-08-11T13:11:55Z", "path": "server-spi/src/main/java/org/keycloak/models/GroupProvider.java", "diffHunk": "@@ -0,0 +1,181 @@\n+package org.keycloak.models;", "originalCommit": "77a34aa3bfde1ecee84c09f20325e61bcc330e6c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dcef545fd273f8189ec33bb93b60ddf57a861f44", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/models/GroupProvider.java b/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\nindex be81e1ce18..e836ff2504 100644\n--- a/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\n+++ b/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\n\n@@ -1,3 +1,20 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.keycloak.models;\n \n import org.keycloak.provider.Provider;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU2ODQyNw==", "url": "https://github.com/keycloak/keycloak/pull/7315#discussion_r468568427", "bodyText": "Shouldn't we have Stream variants for these methods? - I'm assuming this will come in a separate PR as part of the streamification epic, so this looks ok for this PR.", "author": "sguilhen", "createdAt": "2020-08-11T13:13:22Z", "path": "server-spi/src/main/java/org/keycloak/models/GroupProvider.java", "diffHunk": "@@ -0,0 +1,181 @@\n+package org.keycloak.models;\n+\n+import org.keycloak.provider.Provider;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * Provider of group records\n+ * @author mhajas\n+ *\n+ */\n+public interface GroupProvider extends Provider {\n+\n+    /**\n+     * Returns a group from the given realm with the corresponding id\n+     * \n+     * @param id Id.\n+     * @param realm Realm.\n+     * @return GroupModel with the corresponding id.\n+     * @deprecated Use method {@code getGroupById(realm, id)}\n+     */\n+    default GroupModel getGroupById(String id, RealmModel realm) {\n+        return getGroupById(realm, id);\n+    }\n+\n+    /**\n+     * Returns a group from the given realm with the corresponding id\n+     *\n+     * @param realm Realm.\n+     * @param id Id.\n+     * @return GroupModel with the corresponding id.\n+     */\n+    GroupModel getGroupById(RealmModel realm, String id);\n+\n+    /**\n+     * Returns groups for the given realm.\n+     *\n+     * @param realm Realm.\n+     * @return List of groups in the Realm.\n+     */\n+    List<GroupModel> getGroups(RealmModel realm);\n+\n+    /**\n+     * Returns a number of groups/top level groups (i.e. groups without parent group) for the given realm.\n+     *\n+     * @param realm Realm.\n+     * @param onlyTopGroups When true the function returns a count of top level groups only.\n+     * @return Number of groups/top level groups.\n+     */\n+    Long getGroupsCount(RealmModel realm, Boolean onlyTopGroups);\n+\n+    /**\n+     * Returns number of groups with the given string in name for the given realm.\n+     *\n+     * @param realm Realm.\n+     * @param search Searched string.\n+     * @return Number of groups with the given string in its name.\n+     */\n+    Long getGroupsCountByNameContaining(RealmModel realm, String search);\n+\n+    /**\n+     * Returns groups with the given role in the given realm.\n+     *\n+     * @param realm Realm.\n+     * @param role Role.\n+     * @param firstResult First result to return. Ignored if negative.\n+     * @param maxResults Maximum number of results to return. Ignored if negative.\n+     * @return List of groups with the given role.\n+     */\n+    List<GroupModel> getGroupsByRole(RealmModel realm, RoleModel role, int firstResult, int maxResults);", "originalCommit": "77a34aa3bfde1ecee84c09f20325e61bcc330e6c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYzODMxOA==", "url": "https://github.com/keycloak/keycloak/pull/7315#discussion_r468638318", "bodyText": "This is going to be part of #7328", "author": "mhajas", "createdAt": "2020-08-11T14:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU2ODQyNw=="}], "type": "inlineReview", "revised_code": {"commit": "dcef545fd273f8189ec33bb93b60ddf57a861f44", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/models/GroupProvider.java b/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\nindex be81e1ce18..e836ff2504 100644\n--- a/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\n+++ b/server-spi/src/main/java/org/keycloak/models/GroupProvider.java\n\n@@ -1,3 +1,20 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n package org.keycloak.models;\n \n import org.keycloak.provider.Provider;\n"}}, {"oid": "dcef545fd273f8189ec33bb93b60ddf57a861f44", "url": "https://github.com/keycloak/keycloak/commit/dcef545fd273f8189ec33bb93b60ddf57a861f44", "message": "KEYCLOAK-14972 Add independent GroupProvider interface", "committedDate": "2020-08-11T14:46:48Z", "type": "forcePushed"}, {"oid": "750c68acce2644fd65b6c2f86e1afe6a2e6431dd", "url": "https://github.com/keycloak/keycloak/commit/750c68acce2644fd65b6c2f86e1afe6a2e6431dd", "message": "KEYCLOAK-14972 Add independent GroupProvider interface", "committedDate": "2020-08-13T12:25:34Z", "type": "commit"}, {"oid": "750c68acce2644fd65b6c2f86e1afe6a2e6431dd", "url": "https://github.com/keycloak/keycloak/commit/750c68acce2644fd65b6c2f86e1afe6a2e6431dd", "message": "KEYCLOAK-14972 Add independent GroupProvider interface", "committedDate": "2020-08-13T12:25:34Z", "type": "forcePushed"}]}