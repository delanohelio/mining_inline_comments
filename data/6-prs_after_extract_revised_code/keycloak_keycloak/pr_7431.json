{"pr_number": 7431, "pr_title": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "pr_createdAt": "2020-09-18T15:53:44Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7431", "timeline": [{"oid": "a335c8907c059ca9272ecd937e4d0862f60d1adf", "url": "https://github.com/keycloak/keycloak/commit/a335c8907c059ca9272ecd937e4d0862f60d1adf", "message": "KEYCLOAK-15522 Run time bounded execution in main thread", "committedDate": "2020-09-23T14:19:36Z", "type": "forcePushed"}, {"oid": "957a4867048e3856d50ace91e69cab2886b4a9dc", "url": "https://github.com/keycloak/keycloak/commit/957a4867048e3856d50ace91e69cab2886b4a9dc", "message": "KEYCLOAK-15522 Run time bounded execution in main thread", "committedDate": "2020-10-01T15:45:28Z", "type": "forcePushed"}, {"oid": "eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "url": "https://github.com/keycloak/keycloak/commit/eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-02T07:27:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNDYzNg==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r500524636", "bodyText": "With Realms, Roles, etc, we are doing the other way around - adding the stream variant and making the old list-based methods. Are we changing this?", "author": "sguilhen", "createdAt": "2020-10-06T18:53:01Z", "path": "server-spi/src/main/java/org/keycloak/models/UserProvider.java", "diffHunk": "@@ -57,6 +58,9 @@\n \n     UserModel getServiceAccount(ClientModel client);\n     List<UserModel> getUsers(RealmModel realm, boolean includeServiceAccounts);\n+    default Stream<UserModel> getUsersStream(RealmModel realm, boolean includeServiceAccounts) {\n+        return getUsers(realm, includeServiceAccounts).stream();\n+    }", "originalCommit": "eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzNjkxMw==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r503236913", "bodyText": "@sguilhen Sorry for confusion, I will remove this.\nTo explain why I did that. I wanted to make work of the streamification easier because this way all code in UserStorageManager is already using the correct method (getUsersStream()). Providing the getUsersStream method is, I would say, out of the scope of this issue. We should have all the streamification work under one issue, therefore I provided a default method for the Stream variant, expecting switching those will be part of the streamification work.", "author": "mhajas", "createdAt": "2020-10-12T11:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNDYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "262747980c6e0971c58f29d567cdcf50b8f17f96", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/models/UserProvider.java b/server-spi/src/main/java/org/keycloak/models/UserProvider.java\nindex 22c2c08c5a..c3c5bb1939 100755\n--- a/server-spi/src/main/java/org/keycloak/models/UserProvider.java\n+++ b/server-spi/src/main/java/org/keycloak/models/UserProvider.java\n\n@@ -58,9 +57,6 @@ public interface UserProvider extends Provider,\n \n     UserModel getServiceAccount(ClientModel client);\n     List<UserModel> getUsers(RealmModel realm, boolean includeServiceAccounts);\n-    default Stream<UserModel> getUsersStream(RealmModel realm, boolean includeServiceAccounts) {\n-        return getUsers(realm, includeServiceAccounts).stream();\n-    }\n     List<UserModel> getUsers(RealmModel realm, int firstResult, int maxResults, boolean includeServiceAccounts);\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNDk4NQ==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r500524985", "bodyText": "Same... I think we should settle to a single way of doing things, this is getting confusing.", "author": "sguilhen", "createdAt": "2020-10-06T18:53:39Z", "path": "server-spi/src/main/java/org/keycloak/storage/federated/UserAttributeFederatedStorage.java", "diffHunk": "@@ -31,4 +32,7 @@\n     void removeAttribute(RealmModel realm, String userId, String name);\n     MultivaluedHashMap<String, String> getAttributes(RealmModel realm, String userId);\n     List<String> getUsersByUserAttribute(RealmModel realm, String name, String value);\n+    default Stream<String> getUsersByUserAttributeStream(RealmModel realm, String name, String value) {\n+        return getUsersByUserAttribute(realm, name, value).stream();\n+    }", "originalCommit": "eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzNjk4OQ==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r503236989", "bodyText": "I will remove this.", "author": "mhajas", "createdAt": "2020-10-12T11:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyNDk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "262747980c6e0971c58f29d567cdcf50b8f17f96", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/storage/federated/UserAttributeFederatedStorage.java b/server-spi/src/main/java/org/keycloak/storage/federated/UserAttributeFederatedStorage.java\nindex 453a5c82ce..14d3bbfb68 100644\n--- a/server-spi/src/main/java/org/keycloak/storage/federated/UserAttributeFederatedStorage.java\n+++ b/server-spi/src/main/java/org/keycloak/storage/federated/UserAttributeFederatedStorage.java\n\n@@ -32,7 +31,4 @@ public interface UserAttributeFederatedStorage {\n     void removeAttribute(RealmModel realm, String userId, String name);\n     MultivaluedHashMap<String, String> getAttributes(RealmModel realm, String userId);\n     List<String> getUsersByUserAttribute(RealmModel realm, String name, String value);\n-    default Stream<String> getUsersByUserAttributeStream(RealmModel realm, String name, String value) {\n-        return getUsersByUserAttribute(realm, name, value).stream();\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA4MjYyMg==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r503082622", "bodyText": "Are we going to add javadoc for the default methods?", "author": "vramik", "createdAt": "2020-10-12T07:12:34Z", "path": "server-spi/src/main/java/org/keycloak/storage/user/UserQueryProvider.java", "diffHunk": "@@ -144,6 +145,10 @@ default int getUsersCount(RealmModel realm, boolean includeServiceAccount) {\n     }\n \n     List<UserModel> getUsers(RealmModel realm);\n+    default Stream<UserModel> getUsersStream(RealmModel realm) {", "originalCommit": "eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzNzk5MQ==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r503237991", "bodyText": "I will be adding all Javadocs in https://issues.redhat.com/browse/KEYCLOAK-15524. I will start working on that after the streamification is done. Anyway, I am about to remove these methods from interfaces, so that we avoid confusion.", "author": "mhajas", "createdAt": "2020-10-12T11:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA4MjYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "262747980c6e0971c58f29d567cdcf50b8f17f96", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/storage/user/UserQueryProvider.java b/server-spi/src/main/java/org/keycloak/storage/user/UserQueryProvider.java\nindex e7d4d0fbab..91a66403b7 100644\n--- a/server-spi/src/main/java/org/keycloak/storage/user/UserQueryProvider.java\n+++ b/server-spi/src/main/java/org/keycloak/storage/user/UserQueryProvider.java\n\n@@ -145,10 +144,6 @@ public interface UserQueryProvider {\n     }\n \n     List<UserModel> getUsers(RealmModel realm);\n-    default Stream<UserModel> getUsersStream(RealmModel realm) {\n-        return getUsers(realm).stream();\n-    }\n-\n     List<UserModel> getUsers(RealmModel realm, int firstResult, int maxResults);\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA4ODk2Mw==", "url": "https://github.com/keycloak/keycloak/pull/7431#discussion_r503088963", "bodyText": "The same: should we add a java-doc here?", "author": "vramik", "createdAt": "2020-10-12T07:25:39Z", "path": "server-spi/src/main/java/org/keycloak/storage/federated/UserGroupMembershipFederatedStorage.java", "diffHunk": "@@ -39,5 +39,8 @@\n     void joinGroup(RealmModel realm, String userId, GroupModel group);\n     void leaveGroup(RealmModel realm, String userId, GroupModel group);\n     List<String> getMembership(RealmModel realm, GroupModel group, int firstResult, int max);\n+    default Stream<String> getMembershipStream(RealmModel realm, GroupModel group, int firstResult, int max) {", "originalCommit": "eb5e9e26e5a1941a8aab4bd17ef454f2f062a1fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "262747980c6e0971c58f29d567cdcf50b8f17f96", "chunk": "diff --git a/server-spi/src/main/java/org/keycloak/storage/federated/UserGroupMembershipFederatedStorage.java b/server-spi/src/main/java/org/keycloak/storage/federated/UserGroupMembershipFederatedStorage.java\nindex 080e21e358..eb116d2164 100644\n--- a/server-spi/src/main/java/org/keycloak/storage/federated/UserGroupMembershipFederatedStorage.java\n+++ b/server-spi/src/main/java/org/keycloak/storage/federated/UserGroupMembershipFederatedStorage.java\n\n@@ -39,8 +39,5 @@ public interface UserGroupMembershipFederatedStorage {\n     void joinGroup(RealmModel realm, String userId, GroupModel group);\n     void leaveGroup(RealmModel realm, String userId, GroupModel group);\n     List<String> getMembership(RealmModel realm, GroupModel group, int firstResult, int max);\n-    default Stream<String> getMembershipStream(RealmModel realm, GroupModel group, int firstResult, int max) {\n-        return getMembership(realm, group, firstResult, max).stream();\n-    }\n \n }\n"}}, {"oid": "262747980c6e0971c58f29d567cdcf50b8f17f96", "url": "https://github.com/keycloak/keycloak/commit/262747980c6e0971c58f29d567cdcf50b8f17f96", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-12T11:56:42Z", "type": "forcePushed"}, {"oid": "7fd9bbdf2e9667a6d2cb8e38eb094c8739a0f7db", "url": "https://github.com/keycloak/keycloak/commit/7fd9bbdf2e9667a6d2cb8e38eb094c8739a0f7db", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-12T14:49:38Z", "type": "forcePushed"}, {"oid": "2cc2edc54b074550e72ad8d5a70e3aae17bb7c18", "url": "https://github.com/keycloak/keycloak/commit/2cc2edc54b074550e72ad8d5a70e3aae17bb7c18", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-14T07:13:32Z", "type": "forcePushed"}, {"oid": "42b8022dd32be41e553171500e3bdd94015e195f", "url": "https://github.com/keycloak/keycloak/commit/42b8022dd32be41e553171500e3bdd94015e195f", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-15T08:14:12Z", "type": "forcePushed"}, {"oid": "3f468ce9151614236dd7f1a47b0c939c0370344a", "url": "https://github.com/keycloak/keycloak/commit/3f468ce9151614236dd7f1a47b0c939c0370344a", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-15T14:20:58Z", "type": "commit"}, {"oid": "3f468ce9151614236dd7f1a47b0c939c0370344a", "url": "https://github.com/keycloak/keycloak/commit/3f468ce9151614236dd7f1a47b0c939c0370344a", "message": "KEYCLOAK-15522 Use AbstractStorageManager in UserStorageManager", "committedDate": "2020-10-15T14:20:58Z", "type": "forcePushed"}]}