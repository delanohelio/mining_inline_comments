{"pr_number": 6846, "pr_title": "[KEYCLOAK-12192] - Missing Input Validation in IDP Urls", "pr_createdAt": "2020-02-27T21:53:16Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6846", "timeline": [{"oid": "38260e4aa52c50e8a4d12c6424e486616c46b72a", "url": "https://github.com/keycloak/keycloak/commit/38260e4aa52c50e8a4d12c6424e486616c46b72a", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs (Info)", "committedDate": "2020-02-27T21:56:05Z", "type": "forcePushed"}, {"oid": "464f05f2eb3e6f5be40b57975af164a418d685e9", "url": "https://github.com/keycloak/keycloak/commit/464f05f2eb3e6f5be40b57975af164a418d685e9", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs", "committedDate": "2020-02-28T13:05:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NzgyOQ==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387467829", "bodyText": "Why are these being added? Looks like they are not used.", "author": "stianst", "createdAt": "2020-03-04T06:19:09Z", "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProviderConfig.java", "diffHunk": "@@ -27,12 +30,18 @@\n \n     public static final String USE_JWKS_URL = \"useJwksUrl\";\n     public static final String VALIDATE_SIGNATURE = \"validateSignature\";\n+    public static final String PUBLIC_KEY_SIGNATURE_VERIFIER = \"publicKeySignatureVerifier\";\n+    public static final String PUBLIC_KEY_SIGNATURE_VERIFIER_KEY_ID = \"publicKeySignatureVerifierKeyId\";", "originalCommit": "464f05f2eb3e6f5be40b57975af164a418d685e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b41419151f31d34bd987a72faf386a98606b7589", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProviderConfig.java b/services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProviderConfig.java\nindex 6cda3bbc21..1fcaf5cc5f 100755\n--- a/services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProviderConfig.java\n+++ b/services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProviderConfig.java\n\n@@ -30,8 +31,6 @@ public class OIDCIdentityProviderConfig extends OAuth2IdentityProviderConfig {\n \n     public static final String USE_JWKS_URL = \"useJwksUrl\";\n     public static final String VALIDATE_SIGNATURE = \"validateSignature\";\n-    public static final String PUBLIC_KEY_SIGNATURE_VERIFIER = \"publicKeySignatureVerifier\";\n-    public static final String PUBLIC_KEY_SIGNATURE_VERIFIER_KEY_ID = \"publicKeySignatureVerifierKeyId\";\n \n \n     public OIDCIdentityProviderConfig(IdentityProviderModel identityProviderModel) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODQ3MA==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387468470", "bodyText": "I don't think this is the correct place to add validation for Urls. How about adding it to org.keycloak.validation.UrlValidation instead?", "author": "stianst", "createdAt": "2020-03-04T06:21:27Z", "path": "services/src/main/java/org/keycloak/services/Urls.java", "diffHunk": "@@ -273,4 +277,33 @@ private static UriBuilder themeBase(URI baseUri) {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n+\n+    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{", "originalCommit": "464f05f2eb3e6f5be40b57975af164a418d685e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxMzE2Ng==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387613166", "bodyText": "What if we move to org.keycloak.common.util.UriUtils instead of creating a new class?", "author": "pedroigor", "createdAt": "2020-03-04T11:42:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODQ3MA=="}], "type": "inlineReview", "revised_code": {"commit": "b41419151f31d34bd987a72faf386a98606b7589", "chunk": "diff --git a/services/src/main/java/org/keycloak/services/Urls.java b/services/src/main/java/org/keycloak/services/Urls.java\nindex 6f4beef0ea..5630ed2135 100755\n--- a/services/src/main/java/org/keycloak/services/Urls.java\n+++ b/services/src/main/java/org/keycloak/services/Urls.java\n\n@@ -277,33 +273,4 @@ public class Urls {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n-\n-    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{\n-        if (url == null) {\n-            return;\n-        }\n-\n-        URL parsed;\n-\n-        try {\n-            parsed = new URL(url);\n-        } catch (MalformedURLException e) {\n-            throw new IllegalArgumentException(\"The url [\" + name + \"] is malformed\", e);\n-        }\n-\n-        String protocol = parsed.getProtocol().toLowerCase();\n-\n-        if (!protocol.startsWith(\"http\")) {\n-            throw new IllegalArgumentException(\"Invalid protocol/scheme for url [\" + name + \"]\");\n-        }\n-\n-        ClientConnection connection = session.getContext().getConnection();\n-\n-        if (connection != null) {\n-            if (!\"https\".equals(protocol) && session.getContext().getRealm()\n-                    .getSslRequired().isRequired(connection)) {\n-                throw new IllegalArgumentException(\"The url [\" + name + \"] requires secure connections\");\n-            }\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODcyNw==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387468727", "bodyText": "Should this not be an exact match on http or https? Otherwise the accepted protocol could be \"httpasdfsadfsafdsadfasdfsafdsadfsafdsadf\".", "author": "stianst", "createdAt": "2020-03-04T06:22:29Z", "path": "services/src/main/java/org/keycloak/services/Urls.java", "diffHunk": "@@ -273,4 +277,33 @@ private static UriBuilder themeBase(URI baseUri) {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n+\n+    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{\n+        if (url == null) {\n+            return;\n+        }\n+\n+        URL parsed;\n+\n+        try {\n+            parsed = new URL(url);\n+        } catch (MalformedURLException e) {\n+            throw new IllegalArgumentException(\"The url [\" + name + \"] is malformed\", e);\n+        }\n+\n+        String protocol = parsed.getProtocol().toLowerCase();\n+\n+        if (!protocol.startsWith(\"http\")) {", "originalCommit": "464f05f2eb3e6f5be40b57975af164a418d685e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxNTQyNw==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387615427", "bodyText": "How you would even accept requests for a protocol that is unknown by the server? It would be either http or https, right?", "author": "pedroigor", "createdAt": "2020-03-04T11:47:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYyNDU2Mg==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387624562", "bodyText": "Forget about it. This is about validating input and not incoming connections.", "author": "pedroigor", "createdAt": "2020-03-04T12:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2ODcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "b41419151f31d34bd987a72faf386a98606b7589", "chunk": "diff --git a/services/src/main/java/org/keycloak/services/Urls.java b/services/src/main/java/org/keycloak/services/Urls.java\nindex 6f4beef0ea..5630ed2135 100755\n--- a/services/src/main/java/org/keycloak/services/Urls.java\n+++ b/services/src/main/java/org/keycloak/services/Urls.java\n\n@@ -277,33 +273,4 @@ public class Urls {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n-\n-    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{\n-        if (url == null) {\n-            return;\n-        }\n-\n-        URL parsed;\n-\n-        try {\n-            parsed = new URL(url);\n-        } catch (MalformedURLException e) {\n-            throw new IllegalArgumentException(\"The url [\" + name + \"] is malformed\", e);\n-        }\n-\n-        String protocol = parsed.getProtocol().toLowerCase();\n-\n-        if (!protocol.startsWith(\"http\")) {\n-            throw new IllegalArgumentException(\"Invalid protocol/scheme for url [\" + name + \"]\");\n-        }\n-\n-        ClientConnection connection = session.getContext().getConnection();\n-\n-        if (connection != null) {\n-            if (!\"https\".equals(protocol) && session.getContext().getRealm()\n-                    .getSslRequired().isRequired(connection)) {\n-                throw new IllegalArgumentException(\"The url [\" + name + \"] requires secure connections\");\n-            }\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2OTE4Mg==", "url": "https://github.com/keycloak/keycloak/pull/6846#discussion_r387469182", "bodyText": "This is not correct. You are checking here if SSL is required to the IP address of the admin that is adding the identity provider. It should be checking if SSL is required for the address of the identity provider.", "author": "stianst", "createdAt": "2020-03-04T06:24:16Z", "path": "services/src/main/java/org/keycloak/services/Urls.java", "diffHunk": "@@ -273,4 +277,33 @@ private static UriBuilder themeBase(URI baseUri) {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n+\n+    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{\n+        if (url == null) {\n+            return;\n+        }\n+\n+        URL parsed;\n+\n+        try {\n+            parsed = new URL(url);\n+        } catch (MalformedURLException e) {\n+            throw new IllegalArgumentException(\"The url [\" + name + \"] is malformed\", e);\n+        }\n+\n+        String protocol = parsed.getProtocol().toLowerCase();\n+\n+        if (!protocol.startsWith(\"http\")) {\n+            throw new IllegalArgumentException(\"Invalid protocol/scheme for url [\" + name + \"]\");\n+        }\n+\n+        ClientConnection connection = session.getContext().getConnection();\n+\n+        if (connection != null) {\n+            if (!\"https\".equals(protocol) && session.getContext().getRealm()\n+                    .getSslRequired().isRequired(connection)) {\n+                throw new IllegalArgumentException(\"The url [\" + name + \"] requires secure connections\");", "originalCommit": "464f05f2eb3e6f5be40b57975af164a418d685e9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b41419151f31d34bd987a72faf386a98606b7589", "chunk": "diff --git a/services/src/main/java/org/keycloak/services/Urls.java b/services/src/main/java/org/keycloak/services/Urls.java\nindex 6f4beef0ea..5630ed2135 100755\n--- a/services/src/main/java/org/keycloak/services/Urls.java\n+++ b/services/src/main/java/org/keycloak/services/Urls.java\n\n@@ -277,33 +273,4 @@ public class Urls {\n     public static URI samlRequestEndpoint(final URI baseUri, final String realmName) {\n         return realmBase(baseUri).path(RealmsResource.class, \"getProtocol\").build(realmName, SamlProtocol.LOGIN_PROTOCOL);\n     }\n-\n-    public static void checkUrl(KeycloakSession session, String url, String name) throws IllegalArgumentException{\n-        if (url == null) {\n-            return;\n-        }\n-\n-        URL parsed;\n-\n-        try {\n-            parsed = new URL(url);\n-        } catch (MalformedURLException e) {\n-            throw new IllegalArgumentException(\"The url [\" + name + \"] is malformed\", e);\n-        }\n-\n-        String protocol = parsed.getProtocol().toLowerCase();\n-\n-        if (!protocol.startsWith(\"http\")) {\n-            throw new IllegalArgumentException(\"Invalid protocol/scheme for url [\" + name + \"]\");\n-        }\n-\n-        ClientConnection connection = session.getContext().getConnection();\n-\n-        if (connection != null) {\n-            if (!\"https\".equals(protocol) && session.getContext().getRealm()\n-                    .getSslRequired().isRequired(connection)) {\n-                throw new IllegalArgumentException(\"The url [\" + name + \"] requires secure connections\");\n-            }\n-        }\n-    }\n }\n"}}, {"oid": "b41419151f31d34bd987a72faf386a98606b7589", "url": "https://github.com/keycloak/keycloak/commit/b41419151f31d34bd987a72faf386a98606b7589", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs", "committedDate": "2020-03-04T12:21:25Z", "type": "forcePushed"}, {"oid": "06d8bc66bb022642d8ef11b12c9dfb4ffc078e27", "url": "https://github.com/keycloak/keycloak/commit/06d8bc66bb022642d8ef11b12c9dfb4ffc078e27", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs", "committedDate": "2020-03-04T19:22:13Z", "type": "forcePushed"}, {"oid": "fde518a5cfbd647f06ac1132b5a75b6a5b60dfe6", "url": "https://github.com/keycloak/keycloak/commit/fde518a5cfbd647f06ac1132b5a75b6a5b60dfe6", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs", "committedDate": "2020-03-04T21:22:15Z", "type": "commit"}, {"oid": "fde518a5cfbd647f06ac1132b5a75b6a5b60dfe6", "url": "https://github.com/keycloak/keycloak/commit/fde518a5cfbd647f06ac1132b5a75b6a5b60dfe6", "message": "[KEYCLOAK-12192] - Missing Input Validation in IDP Authorization URLs", "committedDate": "2020-03-04T21:22:15Z", "type": "forcePushed"}]}