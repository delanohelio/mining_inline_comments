{"pr_number": 6977, "pr_title": "KEYCLOAK-9623 Disabling logged in user will not allow other user to l\u2026", "pr_createdAt": "2020-04-14T14:52:35Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1NTc1NA==", "url": "https://github.com/keycloak/keycloak/pull/6977#discussion_r412455754", "bodyText": "@martin-kanis Based on the discussion on keycloak-dev, we will handle the case of disabled user differently than the case of user registration. So I am sorry for the confusion :)\nStill I believe it will be slightly better to call \"authenticationManager.backchannelLogout\" instead of directly call just \"removeUserSession\" . That would mean an attempt to propagate to logout to the applications or identity brokers, which is good. Is it possible? I will accept this PR afterwards.", "author": "mposolda", "createdAt": "2020-04-21T20:06:41Z", "path": "services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java", "diffHunk": "@@ -188,16 +189,20 @@ protected AuthenticationSessionModel createAuthenticationSession(ClientModel cli\n             UserSessionModel userSession = userSessionCrossDCManager.getUserSessionIfExistsRemotely(manager, realm);\n \n             if (userSession != null) {\n-                String userSessionId = userSession.getId();\n-                rootAuthSession = session.authenticationSessions().createRootAuthenticationSession(userSessionId, realm);\n-                authSession = rootAuthSession.createAuthenticationSession(client);\n-                logger.debugf(\"Sent request to authz endpoint. We don't have root authentication session with ID '%s' but we have userSession.\" +\n-                        \"Re-created root authentication session with same ID. Client is: %s . New authentication session tab ID: %s\", userSessionId, client.getClientId(), authSession.getTabId());\n+                UserModel user = userSession.getUser();\n+                if (user != null && !user.isEnabled()) {\n+                    authSession = createNewAuthenticationSession(manager, client);\n+\n+                    session.sessions().removeUserSession(realm, userSession);", "originalCommit": "8f1733840269caa7039754c2a7882c4cd6300dad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkwMjQ2Mw==", "url": "https://github.com/keycloak/keycloak/pull/6977#discussion_r412902463", "bodyText": "Done", "author": "martin-kanis", "createdAt": "2020-04-22T11:33:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1NTc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "7160c634931a671e4154ed0183205137a027448e", "chunk": "diff --git a/services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java b/services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java\nindex e300af8d3a..6d02d12c47 100755\n--- a/services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java\n+++ b/services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java\n\n@@ -193,7 +193,7 @@ public abstract class AuthorizationEndpointBase {\n                 if (user != null && !user.isEnabled()) {\n                     authSession = createNewAuthenticationSession(manager, client);\n \n-                    session.sessions().removeUserSession(realm, userSession);\n+                    AuthenticationManager.backchannelLogout(session, userSession, true);\n                 } else {\n                     String userSessionId = userSession.getId();\n                     rootAuthSession = session.authenticationSessions().createRootAuthenticationSession(userSessionId, realm);\n"}}, {"oid": "448af9d1818336bdc0410eb1a0d665ab30c4dff8", "url": "https://github.com/keycloak/keycloak/commit/448af9d1818336bdc0410eb1a0d665ab30c4dff8", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session", "committedDate": "2020-04-22T11:08:16Z", "type": "forcePushed"}, {"oid": "7160c634931a671e4154ed0183205137a027448e", "url": "https://github.com/keycloak/keycloak/commit/7160c634931a671e4154ed0183205137a027448e", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session", "committedDate": "2020-04-22T11:32:51Z", "type": "commit"}, {"oid": "7160c634931a671e4154ed0183205137a027448e", "url": "https://github.com/keycloak/keycloak/commit/7160c634931a671e4154ed0183205137a027448e", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session", "committedDate": "2020-04-22T11:32:51Z", "type": "forcePushed"}]}