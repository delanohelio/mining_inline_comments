{"pr_number": 6838, "pr_title": "KEYCLOAK-12606 Add missing test", "pr_createdAt": "2020-02-26T15:38:10Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6838", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzMzg3NA==", "url": "https://github.com/keycloak/keycloak/pull/6838#discussion_r385033874", "bodyText": "Please use Creator.create(RealmResource realm, UserRepresentation rep) instead.", "author": "hmlnarik", "createdAt": "2020-02-27T10:20:03Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/updaters/UserCreator.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.testsuite.updaters;\n+\n+import org.keycloak.admin.client.resource.RealmResource;\n+import org.keycloak.admin.client.resource.UserResource;\n+import org.keycloak.representations.idm.UserRepresentation;\n+\n+import javax.ws.rs.NotFoundException;\n+import java.io.Closeable;\n+\n+import static org.keycloak.testsuite.admin.ApiUtil.createUserWithAdminClient;\n+\n+/**\n+ *  Creates a temporary user and makes sure it is removed.\n+ */\n+public class UserCreator implements Closeable {", "originalCommit": "a0f19df6f2171b2932bb4fdbf9bbf50a05a5b6f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86dd72a4d8851a729eb738034eeec68ec988c9af", "chunk": "diff --git a/testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/updaters/UserCreator.java b/testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/updaters/UserCreator.java\ndeleted file mode 100644\nindex f3dfeaf790..0000000000\n--- a/testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/updaters/UserCreator.java\n+++ /dev/null\n\n@@ -1,52 +0,0 @@\n-/*\n- * Copyright 2018 Red Hat, Inc. and/or its affiliates\n- * and other contributors as indicated by the @author tags.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.keycloak.testsuite.updaters;\n-\n-import org.keycloak.admin.client.resource.RealmResource;\n-import org.keycloak.admin.client.resource.UserResource;\n-import org.keycloak.representations.idm.UserRepresentation;\n-\n-import javax.ws.rs.NotFoundException;\n-import java.io.Closeable;\n-\n-import static org.keycloak.testsuite.admin.ApiUtil.createUserWithAdminClient;\n-\n-/**\n- *  Creates a temporary user and makes sure it is removed.\n- */\n-public class UserCreator implements Closeable {\n-\n-    private final UserResource userResource;\n-\n-    public UserCreator(RealmResource realm, UserRepresentation rep) {\n-        String userId = createUserWithAdminClient(realm, rep);\n-        this.userResource = realm.users().get(userId);\n-    }\n-\n-    public UserResource user() {\n-        return this.userResource;\n-    }\n-\n-    @Override\n-    public void close() {\n-        try {\n-            userResource.remove();\n-        } catch (NotFoundException e) {\n-            // ignore\n-        }\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAzNDg4Mw==", "url": "https://github.com/keycloak/keycloak/pull/6838#discussion_r385034883", "bodyText": "feel free to use try-with-resources form instead of adding cleanup", "author": "hmlnarik", "createdAt": "2020-02-27T10:21:44Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerLoginHintTest.java", "diffHunk": "@@ -86,4 +95,35 @@ protected void loginUser() {\n         Assert.assertTrue(\"There must be user \" + bc.getUserLogin() + \" in realm \" + bc.consumerRealmName(),\n                 isUserFound);\n     }\n+\n+    @Test\n+    public void loginHintWithExistingUser() {\n+        getCleanup(bc.consumerRealmName()).addCleanup(", "originalCommit": "a0f19df6f2171b2932bb4fdbf9bbf50a05a5b6f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "86dd72a4d8851a729eb738034eeec68ec988c9af", "chunk": "diff --git a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerLoginHintTest.java b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerLoginHintTest.java\nindex 1cb45220e3..f5004a033b 100644\n--- a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerLoginHintTest.java\n+++ b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerLoginHintTest.java\n\n@@ -98,32 +95,29 @@ public class KcOidcBrokerLoginHintTest extends AbstractBrokerTest {\n \n     @Test\n     public void loginHintWithExistingUser() {\n-        getCleanup(bc.consumerRealmName()).addCleanup(\n-                new UserCreator(\n-                        adminClient.realm(bc.consumerRealmName()),\n-                        UserBuilder.create()\n-                                .username(bc.getUserLogin())\n-                                .password(bc.getUserPassword())\n-                                .email(bc.getUserEmail())\n-                                .enabled(true)\n-                                .build()\n-                        )\n-        );\n-\n-        driver.navigate().to(getAccountUrl(bc.consumerRealmName()));\n-        waitForPageToLoad();\n-        driver.navigate().to(driver.getCurrentUrl() + \"&login_hint=\" + USER_EMAIL + \"&kc_idp_hint=\" + IDP_OIDC_ALIAS);\n-        waitForPageToLoad();\n-\n-        loginPage.login(bc.getUserPassword());\n-\n-        updateAccountInformationPage.assertCurrent();\n-        updateAccountInformationPage.updateAccountInformation(bc.getUserLogin(), bc.getUserEmail(), \"Firstname\", \"Lastname\");\n-\n-        idpConfirmLinkPage.assertCurrent();\n-        idpConfirmLinkPage.clickLinkAccount();\n-\n-        loginPage.login(bc.getUserPassword());\n-        accountPage.isCurrent();\n+        try (Creator<UserResource> c = Creator.create(adminClient.realm(bc.consumerRealmName()),\n+                UserBuilder.create()\n+                        .username(bc.getUserLogin())\n+                        .password(bc.getUserPassword())\n+                        .email(bc.getUserEmail())\n+                        .enabled(true)\n+                        .build()\n+            )) {\n+            driver.navigate().to(getAccountUrl(bc.consumerRealmName()));\n+            waitForPageToLoad();\n+            driver.navigate().to(driver.getCurrentUrl() + \"&login_hint=\" + USER_EMAIL + \"&kc_idp_hint=\" + IDP_OIDC_ALIAS);\n+            waitForPageToLoad();\n+\n+            loginPage.login(bc.getUserPassword());\n+\n+            updateAccountInformationPage.assertCurrent();\n+            updateAccountInformationPage.updateAccountInformation(bc.getUserLogin(), bc.getUserEmail(), \"Firstname\", \"Lastname\");\n+\n+            idpConfirmLinkPage.assertCurrent();\n+            idpConfirmLinkPage.clickLinkAccount();\n+\n+            loginPage.login(bc.getUserPassword());\n+            accountPage.isCurrent();\n+        }\n     }\n }\n"}}, {"oid": "86dd72a4d8851a729eb738034eeec68ec988c9af", "url": "https://github.com/keycloak/keycloak/commit/86dd72a4d8851a729eb738034eeec68ec988c9af", "message": "KEYCLOAK-12606 Add test", "committedDate": "2020-02-27T16:23:54Z", "type": "forcePushed"}, {"oid": "c57ccd294ebfaf57e7d9b81ecdead7b450201700", "url": "https://github.com/keycloak/keycloak/commit/c57ccd294ebfaf57e7d9b81ecdead7b450201700", "message": "KEYCLOAK-12606 Add test", "committedDate": "2020-03-02T17:22:24Z", "type": "commit"}, {"oid": "c57ccd294ebfaf57e7d9b81ecdead7b450201700", "url": "https://github.com/keycloak/keycloak/commit/c57ccd294ebfaf57e7d9b81ecdead7b450201700", "message": "KEYCLOAK-12606 Add test", "committedDate": "2020-03-02T17:22:24Z", "type": "forcePushed"}]}