{"pr_number": 6970, "pr_title": "KEYCLOAK-10983 Namespace support for LDAP group mapper", "pr_createdAt": "2020-04-07T23:52:03Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6970", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1NjA2Mg==", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r423856062", "bodyText": "Is it possible to change tooltip to contain more details? I would use something like: Keycloak group path the LDAP groups are added to. For example if value '/Applications/App1' is used, then LDAP groups will be available in Keycloak under group 'App1', which is child of top level group 'Applications'. The default value is '/' so LDAP groups will be mapped to the Keycloak groups at the top level. The configured group path must already exists in the Keycloak when creating this mapper.", "author": "mposolda", "createdAt": "2020-05-12T16:08:13Z", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -198,6 +198,12 @@\n                 .helpText(\"If this flag is true, then during sync of groups from LDAP to Keycloak, we will keep just those Keycloak groups, which still exists in LDAP. Rest will be deleted\")\n                 .type(ProviderConfigProperty.BOOLEAN_TYPE)\n                 .defaultValue(\"false\")\n+                .add()\n+                .property().name(GroupMapperConfig.LDAP_GROUPS_PATH)\n+                .label(\"Groups Path\")\n+                .helpText(\"Keycloak group path the LDAP groups are added to\")", "originalCommit": "ce3360e05f76325bb4b8f2c6f6f032fe705822fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0MzM1Ng==", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r425843356", "bodyText": "Sure. If you don't mind then I'll use your tooltip text as-is \ud83d\udc4d", "author": "tjuerge", "createdAt": "2020-05-15T14:33:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1NjA2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d8ef5de0e99e53cfc59c8c502378a5dca7c87301", "chunk": "diff --git a/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java b/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\nindex 197b059ee4..6f99cfd2d1 100644\n--- a/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\n+++ b/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\n\n@@ -201,7 +211,10 @@ public class GroupLDAPStorageMapperFactory extends AbstractLDAPStorageMapperFact\n                 .add()\n                 .property().name(GroupMapperConfig.LDAP_GROUPS_PATH)\n                 .label(\"Groups Path\")\n-                .helpText(\"Keycloak group path the LDAP groups are added to\")\n+                .helpText(\"Keycloak group path the LDAP groups are added to. For example if value '/Applications/App1' is used, \"\n+                \t\t+ \"then LDAP groups will be available in Keycloak under group 'App1', which is child of top level group 'Applications'. \"\n+                \t\t+ \"The default value is '/' so LDAP groups will be mapped to the Keycloak groups at the top level. \"\n+                \t\t+ \"The configured group path must already exists in the Keycloak when creating this mapper.\")\n                 .type(ProviderConfigProperty.STRING_TYPE)\n                 .defaultValue(\"/\")\n                 .add();\n"}}, {"oid": "ce3360e05f76325bb4b8f2c6f6f032fe705822fa", "url": "https://github.com/keycloak/keycloak/commit/ce3360e05f76325bb4b8f2c6f6f032fe705822fa", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-04-07T22:33:50Z", "type": "forcePushed"}, {"oid": "66bd0e50f60631011ce93028dbeb5669c3bdbaa8", "url": "https://github.com/keycloak/keycloak/commit/66bd0e50f60631011ce93028dbeb5669c3bdbaa8", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-05-23T19:13:20Z", "type": "forcePushed"}, {"oid": "d8ef5de0e99e53cfc59c8c502378a5dca7c87301", "url": "https://github.com/keycloak/keycloak/commit/d8ef5de0e99e53cfc59c8c502378a5dca7c87301", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-05-23T21:45:53Z", "type": "forcePushed"}, {"oid": "350f4a27d7d4319085cc35aa3ab82d14b3d07fba", "url": "https://github.com/keycloak/keycloak/commit/350f4a27d7d4319085cc35aa3ab82d14b3d07fba", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-05-24T13:26:55Z", "type": "forcePushed"}, {"oid": "e873c7037470e1fdc25efc40998fcaef9fdcaddb", "url": "https://github.com/keycloak/keycloak/commit/e873c7037470e1fdc25efc40998fcaef9fdcaddb", "message": "KEYCLOAK-14236 Support for custom Firefox preferences", "committedDate": "2020-05-22T12:24:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ==", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430471495", "bodyText": "Is it possible to use generic message without adding \"group\" variable into the text? Maybe just something like \"Groups path group does not exist  - please create the group on specified path first\" .\nThe reason is some potential for various injection attacks, which would be possible if the user input (variable \"group\") is shown in the notification in the UI.\nBonus point: If you manage to localize the error message, it will be nice as well. The message with specified key will just need to be added to this file and that should be enough: https://github.com/keycloak/keycloak/blob/master/themes/src/main/resources/theme/base/admin/messages/messages_en.properties", "author": "mposolda", "createdAt": "2020-05-26T14:49:03Z", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -282,6 +292,12 @@ public void validateConfiguration(KeycloakSession session, RealmModel realm, Com\n         }\n \n         LDAPUtils.validateCustomLdapFilter(config.getConfig().getFirst(GroupMapperConfig.GROUPS_LDAP_FILTER));\n+\n+        checkMandatoryConfigAttribute(GroupMapperConfig.LDAP_GROUPS_PATH, \"Groups Path\", config);\n+        String group = config.getConfig().getFirst(GroupMapperConfig.LDAP_GROUPS_PATH).trim();\n+        if (!\"/\".equals(group) && KeycloakModelUtils.findGroupByPath(realm, group) == null) {\n+            throw new ComponentValidationException(\"Groups path group '\" + group + \"' does not exist - please create it first\");", "originalCommit": "8bf22a5554dda835ec7aaa13663707b73800aa95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3ODA2NA==", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430478064", "bodyText": "Sure. And now I know why the other exception messages are so generic.", "author": "tjuerge", "createdAt": "2020-05-26T14:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NDg0NA==", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430484844", "bodyText": "And here we go", "author": "tjuerge", "createdAt": "2020-05-26T15:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "453c1d8590c2e49df66d8c1d3c9726ec81c9cb7b", "chunk": "diff --git a/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java b/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\nindex 6f99cfd2d1..0e502d0da6 100644\n--- a/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\n+++ b/federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java\n\n@@ -296,7 +296,7 @@ public class GroupLDAPStorageMapperFactory extends AbstractLDAPStorageMapperFact\n         checkMandatoryConfigAttribute(GroupMapperConfig.LDAP_GROUPS_PATH, \"Groups Path\", config);\n         String group = config.getConfig().getFirst(GroupMapperConfig.LDAP_GROUPS_PATH).trim();\n         if (!\"/\".equals(group) && KeycloakModelUtils.findGroupByPath(realm, group) == null) {\n-            throw new ComponentValidationException(\"Groups path group '\" + group + \"' does not exist - please create it first\");\n+            throw new ComponentValidationException(\"ldapErrorMissingGroupsPathGroup\");\n         }\n     }\n \n"}}, {"oid": "453c1d8590c2e49df66d8c1d3c9726ec81c9cb7b", "url": "https://github.com/keycloak/keycloak/commit/453c1d8590c2e49df66d8c1d3c9726ec81c9cb7b", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-05-26T15:04:40Z", "type": "commit"}, {"oid": "453c1d8590c2e49df66d8c1d3c9726ec81c9cb7b", "url": "https://github.com/keycloak/keycloak/commit/453c1d8590c2e49df66d8c1d3c9726ec81c9cb7b", "message": "Namespace support to group-ldap-mapper\n\nPreviously, Keycloak did only support syncing groups from LDAP federation provider as top-level KC groups.\n\nThis approach has some limitations:\n- If using multiple group mappers then there\u2019s no way to isolate the KC groups synched by each group mapper.\n- If the option \"Drop non-existing groups during sync\u201d is activated then all KC groups (including the manually created ones) are deleted.\n- There\u2019s no way to inherit roles from a parent KC group.\n\nThis patch introduces support to specify a prefix for the resulting group path, which effectively serves as a namespace for a group.\n\nA path prefix can be specified via the newly introduced `Groups Path` config option on the mapper. This groups path defaults to `/` for top-level groups.\n\nThis also enables to have multiple `group-ldap-mapper`'s which can manage groups within their own namespace.\n\nAn `group-ldap-mapper` with a `Group Path` configured as `/Applications/App1` will only manage groups under that path. Other groups, either manually created or managed by other `group-ldap-mapper` are not affected.", "committedDate": "2020-05-26T15:04:40Z", "type": "forcePushed"}]}