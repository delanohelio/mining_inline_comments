{"pr_number": 6832, "pr_title": "KEYCLOAK-12816 Fix representation to model conversion", "pr_createdAt": "2020-02-25T13:46:53Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6832", "timeline": [{"oid": "99b2a6ac0f91edc6b51b080d7c4de1b0809c4d8f", "url": "https://github.com/keycloak/keycloak/commit/99b2a6ac0f91edc6b51b080d7c4de1b0809c4d8f", "message": "KEYCLOAK-12816 Fix representation to model conversion", "committedDate": "2020-02-25T13:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NTA4MA==", "url": "https://github.com/keycloak/keycloak/pull/6832#discussion_r385345080", "bodyText": "Very minor nitpicking: This comment is now not true anymore as with the fix, it wouldn't fail anymore. Maybe slightly updating this comment (and possibly add reference to JIRA) could be fine?", "author": "mposolda", "createdAt": "2020-02-27T20:09:43Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/CustomFlowTest.java", "diffHunk": "@@ -270,37 +266,33 @@ public void validateX509FlowUpdate() throws Exception {\n         flow.setTopLevel(true);\n         flow.setBuiltIn(false);\n \n-        try {\n-            String executionId;\n-            try (Response response = authMgmtResource.createFlow(flow)) {\n-                Assert.assertThat(\"Create flow\", response, statusCodeIs(Response.Status.CREATED));\n-                AuthenticationFlowRepresentation newFlow = findFlowByAlias(flowAlias);\n-                flowId = newFlow.getId();\n-            }\n-\n-            //add execution - username-password form\n-            Map<String, String> data = new HashMap<>();\n-            data.put(\"provider\", ValidateX509CertificateUsernameFactory.PROVIDER_ID);\n-            authMgmtResource.addExecution(flowAlias, data);\n+        try (Creator.Flow amr = Creator.create(testRealm(), flow)) {\n+            AuthenticationManagementResource authMgmtResource = amr.resource();\n \n-            List<AuthenticationExecutionInfoRepresentation> executions = authMgmtResource.getExecutions(flowAlias);\n-            assertThat(executions, hasSize(1));\n-            final AuthenticationExecutionInfoRepresentation execution = executions.get(0);\n-            executionId = execution.getId();\n+            //add execution - X509 username\n+            final AuthenticationExecutionInfoRepresentation execution = amr.addExecution(ValidateX509CertificateUsernameFactory.PROVIDER_ID);\n+            String executionId = execution.getId();\n \n             Map<String, String> config = new HashMap<>();\n             config.put(AbstractX509ClientCertificateAuthenticator.ENABLE_CRL, Boolean.TRUE.toString());\n             AuthenticatorConfigRepresentation authConfig = new AuthenticatorConfigRepresentation();\n             authConfig.setAlias(\"Config alias\");\n             authConfig.setConfig(config);\n \n+            String acId;\n             try (Response resp = authMgmtResource.newExecutionConfig(executionId, authConfig)) {\n                 assertThat(resp, statusCodeIs(Status.CREATED));\n+                acId = ApiUtil.getCreatedId(resp);\n             }\n-        } finally {\n-            if (flowId != null) {\n-                authMgmtResource.deleteFlow(flowId);\n-            }\n+\n+            authConfig = authMgmtResource.getAuthenticatorConfig(acId);\n+            authConfig.getConfig().put(AbstractX509ClientCertificateAuthenticator.ENABLE_CRL, Boolean.FALSE.toString());\n+            authConfig.getConfig().put(AbstractX509ClientCertificateAuthenticator.CRL_RELATIVE_PATH, \"\");\n+\n+            authMgmtResource.updateAuthenticatorConfig(acId, authConfig);\n+\n+            // Saving the same options for the second time would fail for CRL_RELATIVE_PATH on Oracle due to \"\" == NULL weirdness", "originalCommit": "99b2a6ac0f91edc6b51b080d7c4de1b0809c4d8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}