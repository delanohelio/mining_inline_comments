{"pr_number": 7007, "pr_title": "KEYCLOAK-13962  SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "pr_createdAt": "2020-04-24T17:33:40Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7007", "timeline": [{"oid": "8fa61413b54bff01fe453c67cea5d65ce6c9a2b3", "url": "https://github.com/keycloak/keycloak/commit/8fa61413b54bff01fe453c67cea5d65ce6c9a2b3", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-03T15:02:15Z", "type": "commit"}, {"oid": "8fa61413b54bff01fe453c67cea5d65ce6c9a2b3", "url": "https://github.com/keycloak/keycloak/commit/8fa61413b54bff01fe453c67cea5d65ce6c9a2b3", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-03T15:02:15Z", "type": "forcePushed"}, {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "url": "https://github.com/keycloak/keycloak/commit/6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-03T17:05:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNjE3Mg==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452036172", "bodyText": "There should be no exception thrown. The destination is attribute only mandatory in certain cases, see the SAML spec above.\nThe code should be similar to:\nif (authnRequest.getDestination() != null) {\n    destinationUrl = authnRequest.getDestination().toString();\n}\nSimilar code needs to be in keycloakInitiatedBrowserLogout and backchannelLogout methods.", "author": "hmlnarik", "createdAt": "2020-07-09T08:02:09Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -121,6 +125,10 @@ public Response performLogin(AuthenticationRequest request) {\n                 authnRequest = it.next().beforeSendingLoginRequest(authnRequest, request.getAuthenticationSession());\n             }\n \n+            destinationUrl = ofNullable(authnRequest.getDestination())\n+                    .map(URI::toString)\n+                    .orElseThrow(() -> new IdentityBrokerException(\"No destination in login request\"));\n+", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\nindex aa17d1fd7c..f58e857bd6 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n\n@@ -125,9 +125,9 @@ public class SAMLIdentityProvider extends AbstractIdentityProvider<SAMLIdentityP\n                 authnRequest = it.next().beforeSendingLoginRequest(authnRequest, request.getAuthenticationSession());\n             }\n \n-            destinationUrl = ofNullable(authnRequest.getDestination())\n-                    .map(URI::toString)\n-                    .orElseThrow(() -> new IdentityBrokerException(\"No destination in login request\"));\n+            if (authnRequest.getDestination() != null) {\n+                destinationUrl = authnRequest.getDestination().toString();\n+            }\n \n             if (postBinding) {\n                 return binding.postBinding(authnRequestBuilder.toDocument()).request(destinationUrl);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzEyNg==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037126", "bodyText": "Remove, destination is optional per spec.", "author": "hmlnarik", "createdAt": "2020-07-09T08:04:03Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -212,6 +220,9 @@ protected LogoutRequestType buildLogoutRequest(UserSessionModel userSession, Uri\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, userSession, null);\n         }\n+        if (logoutRequest.getDestination() == null) {\n+            throw new IdentityBrokerException(\"No destination in logout request\");\n+        }", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\nindex aa17d1fd7c..f58e857bd6 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n\n@@ -220,9 +231,6 @@ public class SAMLIdentityProvider extends AbstractIdentityProvider<SAMLIdentityP\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, userSession, null);\n         }\n-        if (logoutRequest.getDestination() == null) {\n-            throw new IdentityBrokerException(\"No destination in logout request\");\n-        }\n         return logoutRequest;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzIzNg==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037236", "bodyText": "Remove, destination is optional per spec.", "author": "hmlnarik", "createdAt": "2020-07-09T08:04:13Z", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -538,6 +538,10 @@ public ResponseType transformLoginResponse(List<ProtocolMapperProcessor<SAMLLogi\n             response = (ResponseType) it.next().beforeSendingResponse(response, clientSessionCtx.getClientSession());\n         }\n \n+        if (response.getDestination() == null) {\n+            throw new RuntimeException(\"No destination in login response\");\n+        }\n+", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\nindex 298131cb9a..b1ef1a09ff 100755\n--- a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n+++ b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n\n@@ -538,10 +538,6 @@ public class SamlProtocol implements LoginProtocol {\n             response = (ResponseType) it.next().beforeSendingResponse(response, clientSessionCtx.getClientSession());\n         }\n \n-        if (response.getDestination() == null) {\n-            throw new RuntimeException(\"No destination in login response\");\n-        }\n-\n         return response;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzI2Ng==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037266", "bodyText": "Remove, destination is optional per spec.", "author": "hmlnarik", "createdAt": "2020-07-09T08:04:18Z", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -745,6 +749,9 @@ protected LogoutRequestType createLogoutRequest(String logoutUrl, AuthenticatedC\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n+        if (logoutRequest.getDestination() == null) {\n+            throw new RuntimeException(\"No destination in logout request\");\n+        }", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\nindex 298131cb9a..b1ef1a09ff 100755\n--- a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n+++ b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n\n@@ -749,10 +745,6 @@ public class SamlProtocol implements LoginProtocol {\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n-        if (logoutRequest.getDestination() == null) {\n-            throw new RuntimeException(\"No destination in logout request\");\n-        }\n-        \n         return logoutRequest;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzI5OQ==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037299", "bodyText": "Remove, destination is optional per spec.", "author": "hmlnarik", "createdAt": "2020-07-09T08:04:23Z", "path": "services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java", "diffHunk": "@@ -523,6 +523,9 @@ public Response authenticated(BrokeredIdentityContext context) {\n             for(Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n                 loginResponse = it.next().beforeProcessingLoginResponse(loginResponse, authenticationSession);\n             }\n+            if (loginResponse.getDestination() == null) {\n+                throw new RuntimeException(\"No destination in login response\");\n+            }", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java b/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java\nindex b18cc0d272..6cfd2961fe 100755\n--- a/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java\n+++ b/services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java\n\n@@ -523,9 +523,6 @@ public class IdentityBrokerService implements IdentityProvider.AuthenticationCal\n             for(Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n                 loginResponse = it.next().beforeProcessingLoginResponse(loginResponse, authenticationSession);\n             }\n-            if (loginResponse.getDestination() == null) {\n-                throw new RuntimeException(\"No destination in login response\");\n-            }\n         }\n \n         session.getContext().setClient(authenticationSession.getClient());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzUzOQ==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037539", "bodyText": "Remove, destination is optional per spec.", "author": "hmlnarik", "createdAt": "2020-07-09T08:04:47Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java", "diffHunk": "@@ -334,6 +334,12 @@ protected Response logoutRequest(LogoutRequestType request, String relayState) {\n                 }\n             }\n \n+            if (request.getDestination() == null) {\n+                event.detail(Details.REASON, \"no_destination_in_logout_request\");\n+                event.error(Errors.INVALID_SAML_AUTHN_REQUEST);\n+                return ErrorPage.error(session, null, Response.Status.BAD_REQUEST, Messages.INVALID_REQUEST);\n+            }", "originalCommit": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d356aed27d48872c30e6581f093a792db5392c50", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java b/services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java\nindex 73f4c61884..8ce9126b08 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java\n\n@@ -334,12 +334,6 @@ public class SAMLEndpoint {\n                 }\n             }\n \n-            if (request.getDestination() == null) {\n-                event.detail(Details.REASON, \"no_destination_in_logout_request\");\n-                event.error(Errors.INVALID_SAML_AUTHN_REQUEST);\n-                return ErrorPage.error(session, null, Response.Status.BAD_REQUEST, Messages.INVALID_REQUEST);\n-            }\n-\n             String issuerURL = getEntityId(session.getContext().getUri(), realm);\n             SAML2LogoutResponseBuilder builder = new SAML2LogoutResponseBuilder();\n             builder.logoutRequestID(request.getID());\n"}}, {"oid": "d356aed27d48872c30e6581f093a792db5392c50", "url": "https://github.com/keycloak/keycloak/commit/d356aed27d48872c30e6581f093a792db5392c50", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-09T09:43:06Z", "type": "commit"}, {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b", "url": "https://github.com/keycloak/keycloak/commit/9090ac225f38ae79df5c8f70cfc2acd22740280b", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-09T09:44:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212088", "bodyText": "Please do remove the else part. In case destination is not set, the original value of singleLogoutServiceUrl should be used for submission.", "author": "hmlnarik", "createdAt": "2020-07-11T16:41:01Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -162,6 +167,12 @@ public void backchannelLogout(KeycloakSession session, UserSessionModel userSess\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+            if (logoutRequest.getDestination() != null) {\n+                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+            } else {", "originalCommit": "9090ac225f38ae79df5c8f70cfc2acd22740280b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjEzNw==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453512137", "bodyText": "I managed this case exactly as it is done a few lines above. This method does not support blank values for singleLogoutServiceUrl, should we allow blank values after building the logout request anyway?\n\n  \n    \n      keycloak/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n    \n    \n         Line 163\n      in\n      f8a4f66\n    \n    \n    \n    \n\n        \n          \n           if (singleLogoutServiceUrl == null || singleLogoutServiceUrl.trim().equals(\"\") || !getConfig().isBackchannelSupported()) return;", "author": "looorent", "createdAt": "2020-07-13T09:19:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MjM5NA==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454592394", "bodyText": "By this line, the singleLogoutServiceUrl is guaranteed to be non-null and non-empty exactly because of the mentioned check. Hence use the value from the singleLogoutServiceUrl.", "author": "hmlnarik", "createdAt": "2020-07-14T19:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNTAxNA==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454925014", "bodyText": "Based on this comment, I understood that you wanted me to put the request's destination insingleLogoutServiceUrl because custom processors could be involved in buildLogoutRequest  (as we do for the destination url in the login flow). I can remove this, no problem.", "author": "looorent", "createdAt": "2020-07-15T09:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}], "type": "inlineReview", "revised_code": {"commit": "91eabbb9a0019f28f10f18b3255ba9e3d618e443", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\nindex 59c8e3be16..3d64b55a05 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n\n@@ -167,11 +167,6 @@ public class SAMLIdentityProvider extends AbstractIdentityProvider<SAMLIdentityP\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n-            if (logoutRequest.getDestination() != null) {\n-                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n-            } else {\n-                return;\n-            }\n \n             int status = SimpleHttp.doPost(singleLogoutServiceUrl, session)\n                     .param(GeneralConstants.SAML_REQUEST_KEY, binding.postBinding(SAML2Request.convert(logoutRequest)).encoded())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA5NQ==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212095", "bodyText": "Same as above", "author": "hmlnarik", "createdAt": "2020-07-11T16:41:12Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -186,6 +197,11 @@ public Response keycloakInitiatedBrowserLogout(KeycloakSession session, UserSess\n        } else {\n             try {\n                 LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+                if (logoutRequest.getDestination() != null) {\n+                    singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+                } else {\n+                    return null;", "originalCommit": "9090ac225f38ae79df5c8f70cfc2acd22740280b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMzMwNQ==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453513305", "bodyText": "Same answer as above. This is inspired from this existing line:\n\n  \n    \n      keycloak/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n    \n    \n         Line 183\n      in\n      f8a4f66\n    \n    \n    \n    \n\n        \n          \n           if (singleLogoutServiceUrl == null || singleLogoutServiceUrl.trim().equals(\"\")) return null;", "author": "looorent", "createdAt": "2020-07-13T09:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "91eabbb9a0019f28f10f18b3255ba9e3d618e443", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\nindex 59c8e3be16..3d64b55a05 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n\n@@ -197,11 +192,6 @@ public class SAMLIdentityProvider extends AbstractIdentityProvider<SAMLIdentityP\n        } else {\n             try {\n                 LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n-                if (logoutRequest.getDestination() != null) {\n-                    singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n-                } else {\n-                    return null;\n-                }\n                 JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n                 if (getConfig().isPostBindingLogout()) {\n                     return binding.postBinding(SAML2Request.convert(logoutRequest)).request(singleLogoutServiceUrl);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjEzMA==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212130", "bodyText": "Remove unrelated change", "author": "hmlnarik", "createdAt": "2020-07-11T16:41:26Z", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -54,6 +54,7 @@\n import java.util.Set;\n import java.util.TreeSet;\n \n+", "originalCommit": "9090ac225f38ae79df5c8f70cfc2acd22740280b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22f6d5d75e982c9a00ee0b0b6586b67ee117eecf", "chunk": "diff --git a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\nindex 59c8e3be16..abdbae83b2 100755\n--- a/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n+++ b/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n\n@@ -54,7 +54,6 @@ import java.util.Iterator;\n import java.util.Set;\n import java.util.TreeSet;\n \n-\n /**\n  * @author Pedro Igor\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MjU0NQ==", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454592545", "bodyText": "Remove unrelated change", "author": "hmlnarik", "createdAt": "2020-07-14T19:28:45Z", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -745,7 +745,7 @@ protected LogoutRequestType createLogoutRequest(String logoutUrl, AuthenticatedC\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n-        \n+", "originalCommit": "9090ac225f38ae79df5c8f70cfc2acd22740280b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "91eabbb9a0019f28f10f18b3255ba9e3d618e443", "chunk": "diff --git a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\nindex bbb8286b65..7ad4f877bd 100755\n--- a/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n+++ b/services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java\n\n@@ -745,7 +745,7 @@ public class SamlProtocol implements LoginProtocol {\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n-\n+        \n         return logoutRequest;\n     }\n \n"}}, {"oid": "91eabbb9a0019f28f10f18b3255ba9e3d618e443", "url": "https://github.com/keycloak/keycloak/commit/91eabbb9a0019f28f10f18b3255ba9e3d618e443", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-15T09:48:45Z", "type": "commit"}, {"oid": "22f6d5d75e982c9a00ee0b0b6586b67ee117eecf", "url": "https://github.com/keycloak/keycloak/commit/22f6d5d75e982c9a00ee0b0b6586b67ee117eecf", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-15T09:51:02Z", "type": "commit"}, {"oid": "53d1bb8861dd3c80ee395e4430c1bc47f4ee5dd5", "url": "https://github.com/keycloak/keycloak/commit/53d1bb8861dd3c80ee395e4430c1bc47f4ee5dd5", "message": "KEYCLOAK-13962 SAML2 Identity Provider - During login phase, SamlAuthenticationPreprocessors are not taken into account to produce an appropriate destination url", "committedDate": "2020-07-15T15:06:00Z", "type": "commit"}]}