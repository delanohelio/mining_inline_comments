{"pr_number": 7334, "pr_title": "KEYCLOAK-14767 OpenShift Review Endpoint audience fix", "pr_createdAt": "2020-08-13T08:59:07Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7334", "timeline": [{"oid": "39b05b499c238899bb9d02ef681e500dc58fd38e", "url": "https://github.com/keycloak/keycloak/commit/39b05b499c238899bb9d02ef681e500dc58fd38e", "message": "KEYCLOAK-14767 OpenShift Review Endpoint audience fix", "committedDate": "2020-08-13T08:58:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU4Njc1Nw==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475586757", "bodyText": "Why to remove this test? Is it not valid anymore?", "author": "vmuzikar", "createdAt": "2020-08-24T13:07:57Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/openshift/OpenShiftTokenReviewEndpointTest.java", "diffHunk": "@@ -228,29 +241,10 @@ public void customScopes() {\n     }\n \n     @Test\n-    public void emptyScope() throws Exception {", "originalCommit": "39b05b499c238899bb9d02ef681e500dc58fd38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYxNTk4Mg==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475615982", "bodyText": "Yes, this is not valid anymore. If you remove all the scopes, you won't get any audience in the token. So with adding audience to the Token Retrospection Endpoint, this has no sense anymore.", "author": "slaskawi", "createdAt": "2020-08-24T13:45:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU4Njc1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwMzcwMQ==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475603701", "bodyText": "Is this really invoked without audience? I can see it added here:\n\n  \n    \n      keycloak/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/openshift/OpenShiftTokenReviewEndpointTest.java\n    \n    \n         Line 379\n      in\n      39b05b4\n    \n    \n    \n    \n\n        \n          \n           spec.setAudiences(new String[]{\"account\"}); \n        \n    \n  \n\n\nBut maybe I'm just missing something. :)", "author": "vmuzikar", "createdAt": "2020-08-24T13:35:31Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/openshift/OpenShiftTokenReviewEndpointTest.java", "diffHunk": "@@ -228,29 +241,10 @@ public void customScopes() {\n     }\n \n     @Test\n-    public void emptyScope() throws Exception {\n-        ClientRepresentation clientRep = testRealm().clients().findByClientId(\"test-app\").get(0);\n-        List<ClientScopeRepresentation> scopesBefore = testRealm().clients().get(clientRep.getId()).getDefaultClientScopes();\n-\n-        try (ClientAttributeUpdater cau = ClientAttributeUpdater.forClient(adminClient, \"test\", clientRep.getClientId())\n-                .setConsentRequired(false)\n-                .setFullScopeAllowed(false)\n-                .setDefaultClientScopes(Collections.EMPTY_LIST)\n-                .update()) {\n-\n-            oauth.openid(false);\n-            try {\n-                new Review()\n-                        .invoke()\n-                        .assertSuccess()\n-                        .assertEmptyScope();\n-            } finally {\n-                oauth.openid(true);\n-            }\n-        }\n-        // The default client scopes should be same like before.\n-        int scopesAfterSize = testRealm().clients().get(clientRep.getId()).getDefaultClientScopes().size();\n-        assertEquals(scopesBefore.size(), scopesAfterSize);\n+    public void emptyAudience() {\n+        new Review().username(\"empty-audience\")\n+                .invoke()", "originalCommit": "39b05b499c238899bb9d02ef681e500dc58fd38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYxNzE5OQ==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475617199", "bodyText": "It's the other way around. The account audience is being added to the expected audience. The Token itself will have empty audience emitted from the Token Endpoint.", "author": "slaskawi", "createdAt": "2020-08-24T13:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwMzcwMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwODIwMw==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475608203", "bodyText": "Just a silly question. For some reason, originally it was prohibited for expectedAudience to be null. Why to allow it now? And are we 100% sure this doesn't create e.g. some vulnerability?", "author": "vmuzikar", "createdAt": "2020-08-24T13:39:20Z", "path": "core/src/main/java/org/keycloak/TokenVerifier.java", "diffHunk": "@@ -366,11 +366,18 @@ private void removeCheck(Predicate<? super T> check) {\n     /**\n      * Add check for verifying that token contains the expectedAudience\n      *\n-     * @param expectedAudience Audience, which needs to be in the target token. Can't be null\n+     * @param expectedAudiences Audiences, which needs to be in the target token. Can be <code>null</code>.\n      * @return This token verifier\n      */\n-    public TokenVerifier<T> audience(String expectedAudience) {\n-        return this.replaceCheck(AudienceCheck.class, true, new AudienceCheck(expectedAudience));\n+    public TokenVerifier<T> audience(String... expectedAudiences) {\n+        if (expectedAudiences == null || expectedAudiences.length == 0) {\n+            return this.replaceCheck(AudienceCheck.class, true, new AudienceCheck(null));", "originalCommit": "39b05b499c238899bb9d02ef681e500dc58fd38e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYyMTY4Mw==", "url": "https://github.com/keycloak/keycloak/pull/7334#discussion_r475621683", "bodyText": "The behavior remains the same here. In the old code, (with String expectedAudience), if you pass null there, you will effectively invoke return this.replaceCheck(AudienceCheck.class, true, new AudienceCheck(null));\nThe problem with the updated code is that the argument can be a null or an empty array. In both cases, I'm explicitly adding return this.replaceCheck(AudienceCheck.class, true, new AudienceCheck(null));.\nIn both cases, this blows up in the runtime here.", "author": "slaskawi", "createdAt": "2020-08-24T13:50:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYwODIwMw=="}], "type": "inlineReview", "revised_code": null}]}