{"pr_number": 6638, "pr_title": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "pr_createdAt": "2020-01-06T15:03:32Z", "pr_url": "https://github.com/keycloak/keycloak/pull/6638", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5NjI3NQ==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363796275", "bodyText": "nit: assertThat(users, hasSize(1));", "author": "hmlnarik", "createdAt": "2020-01-07T15:15:42Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -716,6 +718,19 @@ public void attributes() {\n         assertNull(user1.getAttributes());\n     }\n \n+    @Test\n+    public void testImportUserWithNullAttribute() {\n+        RealmRepresentation rep = loadJson(getClass().getResourceAsStream(\"/import/testrealm-user-null-attr.json\"), RealmRepresentation.class);\n+\n+        try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n+            List<UserRepresentation> users = c.resource().users().list();\n+            // there should be only one user\n+            assertThat(users.size(), equalTo(1));", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc144b6a198aab57fe3c721eb7569fb9c93896b3", "chunk": "diff --git a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\nindex 3c57247f52..bfd346bc9b 100755\n--- a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\n+++ b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\n\n@@ -725,8 +725,8 @@ public class UserTest extends AbstractAdminTest {\n         try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n             List<UserRepresentation> users = c.resource().users().list();\n             // there should be only one user\n-            assertThat(users.size(), equalTo(1));\n-            // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n+            assertThat(users, hasSize(1));\n+            // test there are only 2 attributes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n             assertThat(users.get(0).getAttributes().size(), equalTo(2));\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5NjQxNA==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363796414", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n          \n          \n            \n                        // test there are only 2 attributes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported", "author": "hmlnarik", "createdAt": "2020-01-07T15:15:58Z", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -716,6 +718,19 @@ public void attributes() {\n         assertNull(user1.getAttributes());\n     }\n \n+    @Test\n+    public void testImportUserWithNullAttribute() {\n+        RealmRepresentation rep = loadJson(getClass().getResourceAsStream(\"/import/testrealm-user-null-attr.json\"), RealmRepresentation.class);\n+\n+        try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n+            List<UserRepresentation> users = c.resource().users().list();\n+            // there should be only one user\n+            assertThat(users.size(), equalTo(1));\n+            // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc144b6a198aab57fe3c721eb7569fb9c93896b3", "chunk": "diff --git a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\nindex 3c57247f52..bfd346bc9b 100755\n--- a/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\n+++ b/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java\n\n@@ -725,8 +725,8 @@ public class UserTest extends AbstractAdminTest {\n         try (Creator<RealmResource> c = Creator.create(adminClient, rep)) {\n             List<UserRepresentation> users = c.resource().users().list();\n             // there should be only one user\n-            assertThat(users.size(), equalTo(1));\n-            // test there are only 2 attibutes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n+            assertThat(users, hasSize(1));\n+            // test there are only 2 attributes imported from json file, attribute \"key3\" : [ null ] shoudn't be imported\n             assertThat(users.get(0).getAttributes().size(), equalTo(2));\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc5ODA5MA==", "url": "https://github.com/keycloak/keycloak/pull/6638#discussion_r363798090", "bodyText": "No need to realize this list into memory via .collect. you can either obtain a stream iterator() or use Stream.forEach().", "author": "hmlnarik", "createdAt": "2020-01-07T15:19:09Z", "path": "model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java", "diffHunk": "@@ -147,8 +152,9 @@ public void setAttribute(String name, List<String> values) {\n         // Remove all existing\n         removeAttribute(name);\n \n-        // Put all new\n-        for (String value : values) {\n+        List<String> nonNullValues = values.stream().filter(Objects::nonNull).collect(Collectors.toList());", "originalCommit": "2588db4cc48a4fb153362594155c34144188e2ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc144b6a198aab57fe3c721eb7569fb9c93896b3", "chunk": "diff --git a/model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java b/model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java\nindex e7d040dfd6..91e0546c7d 100755\n--- a/model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java\n+++ b/model/jpa/src/main/java/org/keycloak/models/jpa/UserAdapter.java\n\n@@ -151,12 +151,7 @@ public class UserAdapter implements UserModel, JpaModel<UserEntity> {\n     public void setAttribute(String name, List<String> values) {\n         // Remove all existing\n         removeAttribute(name);\n-\n-        List<String> nonNullValues = values.stream().filter(Objects::nonNull).collect(Collectors.toList());\n-        // Put all new nonNull values\n-        for (String value : nonNullValues) {\n-            persistAttributeValue(name, value);\n-        }\n+        values.stream().filter(Objects::nonNull).forEach((value) -> persistAttributeValue(name, value));\n     }\n \n     private void persistAttributeValue(String name, String value) {\n"}}, {"oid": "bc144b6a198aab57fe3c721eb7569fb9c93896b3", "url": "https://github.com/keycloak/keycloak/commit/bc144b6a198aab57fe3c721eb7569fb9c93896b3", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:03:19Z", "type": "forcePushed"}, {"oid": "5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "url": "https://github.com/keycloak/keycloak/commit/5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:45:56Z", "type": "commit"}, {"oid": "5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "url": "https://github.com/keycloak/keycloak/commit/5c9705411aa344dcbeb80133b5f2fc93db5df2a2", "message": "KEYCLOAK-7014 - Correctly handle null-values in UserAttributes", "committedDate": "2020-01-08T12:45:56Z", "type": "forcePushed"}]}