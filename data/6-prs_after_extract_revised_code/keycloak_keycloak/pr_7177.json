{"pr_number": 7177, "pr_title": "KEYCLOAK-13206 Session Status iframe cannot access cookies when 3rd party cookies are blocked", "pr_createdAt": "2020-06-17T17:04:40Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7177", "timeline": [{"oid": "b9433660b5f413c0d8e3332c13f55c2b764794e5", "url": "https://github.com/keycloak/keycloak/commit/b9433660b5f413c0d8e3332c13f55c2b764794e5", "message": "KEYCLOAK-13206 Session Status iframe cannot access cookies when 3rd party cookies are blocked\n\nCo-authored-by: mhajas <mhajas@redhat.com>", "committedDate": "2020-06-17T17:07:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442111754", "bodyText": "Not sure this has any other simple solution but tests using this boolean will start failing once chrome will block 3rd party cookies by default. Do you have any idea, how to avoid this? Maybe some simple app with iframe within testsuite-providers which will check this? WDYT?", "author": "mhajas", "createdAt": "2020-06-18T09:59:11Z", "path": "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/SuiteContext.java", "diffHunk": "@@ -58,7 +60,9 @@\n      * True if the testsuite is running in the adapter backward compatibility testing mode,\n      * i.e. if the tests are running against newer auth server\n      */\n-    private static final boolean adapterCompatTesting = Boolean.parseBoolean(System.getProperty(\"testsuite.adapter.compat.testing\"));\n+    private static final boolean adapterCompatTesting = parseBoolean(System.getProperty(\"testsuite.adapter.compat.testing\"));\n+\n+    private static final boolean browserStrictCookies = parseBoolean(System.getProperty(\"browser.strict.cookies\"));", "originalCommit": "b9433660b5f413c0d8e3332c13f55c2b764794e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMzI0NA==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442133244", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final boolean browserStrictCookies = parseBoolean(System.getProperty(\"browser.strict.cookies\"));\n          \n          \n            \n                private static final boolean browserStrictCookies = parseBoolean(System.getProperty(\"browser.strict.cookies\")) && !\"localhost\".equals(AUTH_SERVER_HOST);", "author": "mhajas", "createdAt": "2020-06-18T10:39:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NDI3OQ==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442174279", "bodyText": "We won't be testing this with Chrome for now. We'll be using FF in controlled CI environment where we're using a stable version, not relying on auto updates.", "author": "vmuzikar", "createdAt": "2020-06-18T12:02:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5MDQ2Nw==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442190467", "bodyText": "These tests are running in server pipeline with chrome. But I just realized, we can rely on the fact that server pipeline is using localhost by default.", "author": "mhajas", "createdAt": "2020-06-18T12:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE5MTM5NQ==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442191395", "bodyText": "Yes, with localhost cookies are not blocked.", "author": "vmuzikar", "createdAt": "2020-06-18T12:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMDEyOA==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r442210128", "bodyText": "Anyway, I think this part && !\"localhost\".equals(AUTH_SERVER_HOST); makes sense because if you run tests without auth.server.host or/and (not sure) auth.server.host2, tests will fail, because 3rd party are not blocked. Or maybe we can set some default values for hosts when browser.strict.cookies == true. Maybe using nip.io/xip.io WDYT?", "author": "mhajas", "createdAt": "2020-06-18T13:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzYzMDc1Mg==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r443630752", "bodyText": "I wouldn't add the suggested comparison to localhost here. The browserStrictCookies property just tells us the browser treats cookies in some way and doesn't tell us when they'll be blocked. It's up to the test to know it.\nAlso, when the tests fail without setting proper hosts for server, it's actually correct behavior IMHO. It points out a miscofigured test.\nBut I agree maybe we could add a special Maven profile to set hosts to some precofigured values. But I'm not sure about it \u2013\u00a0if we want to hardcode a 3rd party services directly into POM. IMHO that belongs to the test pipeline.", "author": "vmuzikar", "createdAt": "2020-06-22T15:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE4NTA5MQ==", "url": "https://github.com/keycloak/keycloak/pull/7177#discussion_r446185091", "bodyText": "Well, I think it should fail sooner than in the test if one fails to set hosts properly. However, it would be harder to implement it as we don't know whether we should enforce auth.server.host + app.server.host or auth.server.host + auth.server.host2. Unless we unify those two and use only auth/app.server.host. Do you have any idea how to solve it? If no we can probably leave it as it is.", "author": "mhajas", "createdAt": "2020-06-26T13:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTc1NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "990b091e2ab101af4922dbfa09e740454deaa368", "url": "https://github.com/keycloak/keycloak/commit/990b091e2ab101af4922dbfa09e740454deaa368", "message": "KEYCLOAK-13206 Session Status iframe cannot access cookies when 3rd party cookies are blocked\n\nCo-authored-by: mhajas <mhajas@redhat.com>", "committedDate": "2020-06-22T14:40:30Z", "type": "forcePushed"}, {"oid": "8cc0e25da6f4ea311bbdc7eb81ba8500b8a28577", "url": "https://github.com/keycloak/keycloak/commit/8cc0e25da6f4ea311bbdc7eb81ba8500b8a28577", "message": "KEYCLOAK-13206 Session Status iframe cannot access cookies when 3rd party cookies are blocked\n\nCo-authored-by: mhajas <mhajas@redhat.com>", "committedDate": "2020-06-30T15:10:56Z", "type": "commit"}, {"oid": "8cc0e25da6f4ea311bbdc7eb81ba8500b8a28577", "url": "https://github.com/keycloak/keycloak/commit/8cc0e25da6f4ea311bbdc7eb81ba8500b8a28577", "message": "KEYCLOAK-13206 Session Status iframe cannot access cookies when 3rd party cookies are blocked\n\nCo-authored-by: mhajas <mhajas@redhat.com>", "committedDate": "2020-06-30T15:10:56Z", "type": "forcePushed"}]}