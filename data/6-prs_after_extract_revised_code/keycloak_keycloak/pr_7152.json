{"pr_number": 7152, "pr_title": "[KEYCLOAK-14343] Truststore SPI support for LDAP with StartTLS [KEYCLOAK-14358] Enable StartTLS LDAP tests", "pr_createdAt": "2020-06-08T16:38:51Z", "pr_url": "https://github.com/keycloak/keycloak/pull/7152", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDA4Ng==", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r437454086", "bodyText": "I think that lines 86-87 should be replaced with:\nTruststoreProvider provider = session.getProvider(TruststoreProvider.class);\n\nThis is more proper use of KeycloakSession SPI and at the same time, it is not hardcoded to \"file\" provider - the users can in theory replace the \"file\" provider with something else", "author": "mposolda", "createdAt": "2020-06-09T14:11:38Z", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java", "diffHunk": "@@ -76,15 +80,22 @@ private void createLdapContext() throws NamingException {\n \n         ldapContext = new InitialLdapContext(connProp, null);\n         if (ldapConfig.isStartTls()) {\n+            SSLSocketFactory sslSocketFactory = null;\n+            String useTruststoreSpi = ldapConfig.getUseTruststoreSpi();\n+            if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "originalCommit": "35dac0171626716dcdfe7704356670f7f806e225", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1MDI2NQ==", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r438650265", "bodyText": "@mposolda Thanks for the review & suggestion of the fix! (didn't know there's more easier / appropriate way on how to achieve the same). Both instances fixed per your suggestion", "author": "iankko", "createdAt": "2020-06-11T09:12:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDA4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ee237540ed1cf02b7e5dc3cccee3709d13a505c3", "chunk": "diff --git a/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java b/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java\nindex 5822ebf202..d70536c277 100644\n--- a/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java\n+++ b/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java\n\n@@ -83,8 +82,7 @@ public final class LDAPContextManager implements AutoCloseable {\n             SSLSocketFactory sslSocketFactory = null;\n             String useTruststoreSpi = ldapConfig.getUseTruststoreSpi();\n             if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n-                TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");\n-                TruststoreProvider provider = truststoreFactory.create(session);\n+                TruststoreProvider provider = session.getProvider(TruststoreProvider.class);\n                 sslSocketFactory = provider.getSSLSocketFactory();\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDY5Mw==", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r437454693", "bodyText": "Same comment as above", "author": "mposolda", "createdAt": "2020-06-09T14:12:26Z", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java", "diffHunk": "@@ -511,7 +515,15 @@ public void authenticate(String dn, String password) throws AuthenticationExcept\n \n             authCtx = new InitialLdapContext(env, null);\n             if (config.isStartTls()) {\n-                tlsResponse = LDAPContextManager.startTLS(authCtx, \"simple\", dn, password.toCharArray());\n+                SSLSocketFactory sslSocketFactory = null;\n+                String useTruststoreSpi = config.getUseTruststoreSpi();\n+                if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                    TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "originalCommit": "35dac0171626716dcdfe7704356670f7f806e225", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1MDM4Ng==", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r438650386", "bodyText": "Fixed", "author": "iankko", "createdAt": "2020-06-11T09:12:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDY5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ee237540ed1cf02b7e5dc3cccee3709d13a505c3", "chunk": "diff --git a/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java b/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java\nindex 3e4d75dbc1..3c506abc0e 100644\n--- a/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java\n+++ b/federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java\n\n@@ -518,8 +517,7 @@ public class LDAPOperationManager {\n                 SSLSocketFactory sslSocketFactory = null;\n                 String useTruststoreSpi = config.getUseTruststoreSpi();\n                 if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n-                    TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");\n-                    TruststoreProvider provider = truststoreFactory.create(session);\n+                    TruststoreProvider provider = session.getProvider(TruststoreProvider.class);\n                     sslSocketFactory = provider.getSSLSocketFactory();\n                 }\n \n"}}, {"oid": "ee237540ed1cf02b7e5dc3cccee3709d13a505c3", "url": "https://github.com/keycloak/keycloak/commit/ee237540ed1cf02b7e5dc3cccee3709d13a505c3", "message": "[KEYCLOAK-14343] Truststore SPI support for LDAP with StartTLS\n\nSigned-off-by:  Tero Saarni <tero.saarni@est.tech>\nCo-authored-by: Jan Lieskovsky <jlieskov@redhat.com>", "committedDate": "2020-06-11T09:07:55Z", "type": "commit"}, {"oid": "e7ea4ee2fee6f2117c0e7794fd7d8c3fbbb94ca6", "url": "https://github.com/keycloak/keycloak/commit/e7ea4ee2fee6f2117c0e7794fd7d8c3fbbb94ca6", "message": "[KEYCLOAK-14358] Enable StartTLS LDAP tests\n\nThanks to KEYCLOAK-14343 Use Truststore SPI StartTLS bug fix\nthey will work with Truststore SPI used by auth server Wildfly too\n\nSigned-off-by: Jan Lieskovsky <jlieskov@redhat.com>", "committedDate": "2020-06-11T09:07:55Z", "type": "commit"}, {"oid": "e7ea4ee2fee6f2117c0e7794fd7d8c3fbbb94ca6", "url": "https://github.com/keycloak/keycloak/commit/e7ea4ee2fee6f2117c0e7794fd7d8c3fbbb94ca6", "message": "[KEYCLOAK-14358] Enable StartTLS LDAP tests\n\nThanks to KEYCLOAK-14343 Use Truststore SPI StartTLS bug fix\nthey will work with Truststore SPI used by auth server Wildfly too\n\nSigned-off-by: Jan Lieskovsky <jlieskov@redhat.com>", "committedDate": "2020-06-11T09:07:55Z", "type": "forcePushed"}]}