{"pr_number": 2834, "pr_title": "[NCL-5386] - Implementation of native query to retrieve minimized list of artifact\u2026", "pr_createdAt": "2020-02-05T08:06:17Z", "pr_url": "https://github.com/project-ncl/pnc/pull/2834", "timeline": [{"oid": "f2c5d15fd34658f911301d5e67c1b9fdefbb8ef2", "url": "https://github.com/project-ncl/pnc/commit/f2c5d15fd34658f911301d5e67c1b9fdefbb8ef2", "message": "Implementation of native query to retrieve minimized list of artifact dependencies given a build record", "committedDate": "2020-02-05T08:04:11Z", "type": "commit"}, {"oid": "fd4cab12adbab2886a1a758d721ae38c4925c3d4", "url": "https://github.com/project-ncl/pnc/commit/fd4cab12adbab2886a1a758d721ae38c4925c3d4", "message": "Add missing methods", "committedDate": "2020-02-05T08:15:05Z", "type": "commit"}, {"oid": "b8bce9069aa59d366d42d9de17fd6e262f0071ea", "url": "https://github.com/project-ncl/pnc/commit/b8bce9069aa59d366d42d9de17fd6e262f0071ea", "message": "Added CodeReady files to be ignored", "committedDate": "2020-02-05T08:15:29Z", "type": "commit"}, {"oid": "5559e8b7e408f92723040cd77072863b4c0af82f", "url": "https://github.com/project-ncl/pnc/commit/5559e8b7e408f92723040cd77072863b4c0af82f", "message": "Fix ClassCast exception when getting results of count from native query", "committedDate": "2020-02-05T09:11:10Z", "type": "commit"}, {"oid": "09c941c13cfffdc61a5da99a9d7a91bfafa18723", "url": "https://github.com/project-ncl/pnc/commit/09c941c13cfffdc61a5da99a9d7a91bfafa18723", "message": "Fix org.hsqldb.HsqlException when offset is equal to 0", "committedDate": "2020-02-05T09:45:59Z", "type": "commit"}, {"oid": "deeca0801bb9608e4f6e29788386fb5db00c4ea7", "url": "https://github.com/project-ncl/pnc/commit/deeca0801bb9608e4f6e29788386fb5db00c4ea7", "message": "Add missing properties to ArtifactRest and initialize empty collections", "committedDate": "2020-02-05T12:53:11Z", "type": "commit"}, {"oid": "1e0e19b4620e20cf3ee0251d0fcb516672eb1535", "url": "https://github.com/project-ncl/pnc/commit/1e0e19b4620e20cf3ee0251d0fcb516672eb1535", "message": "Cleanup and implementation of native query for the other related REST endpoint to get the list of Artifacts built given a BuildRecord", "committedDate": "2020-02-05T13:49:25Z", "type": "commit"}, {"oid": "4c2406b70e12c2516598bb625f87a10bc8aa6a2f", "url": "https://github.com/project-ncl/pnc/commit/4c2406b70e12c2516598bb625f87a10bc8aa6a2f", "message": "Implementation of missing methods in ArtifactRepositoryMock", "committedDate": "2020-02-05T14:05:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNDQzMA==", "url": "https://github.com/project-ncl/pnc/pull/2834#discussion_r375824430", "bodyText": "I think, it is redundant as we have a Builder for this class.", "author": "jbartece", "createdAt": "2020-02-06T13:11:57Z", "path": "rest-model/src/main/java/org/jboss/pnc/rest/restmodel/TargetRepositoryRest.java", "diffHunk": "@@ -78,6 +78,15 @@\n     @NotNull(groups = {WhenUpdating.class, WhenCreatingNew.class})\n     private Set<Integer> artifactIds = new HashSet<>();\n \n+    public TargetRepositoryRest(Integer id, Boolean temporaryRepo,", "originalCommit": "4c2406b70e12c2516598bb625f87a10bc8aa6a2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2MDIyMA==", "url": "https://github.com/project-ncl/pnc/pull/2834#discussion_r375860220", "bodyText": "Fair point, will fix that!", "author": "vibe13", "createdAt": "2020-02-06T14:21:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNDQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "438e850f4de722192b965926d6a5130163d2f524", "chunk": "diff --git a/rest-model/src/main/java/org/jboss/pnc/rest/restmodel/TargetRepositoryRest.java b/rest-model/src/main/java/org/jboss/pnc/rest/restmodel/TargetRepositoryRest.java\nindex bdd520d81..be42c217e 100644\n--- a/rest-model/src/main/java/org/jboss/pnc/rest/restmodel/TargetRepositoryRest.java\n+++ b/rest-model/src/main/java/org/jboss/pnc/rest/restmodel/TargetRepositoryRest.java\n\n@@ -78,15 +78,6 @@ public class TargetRepositoryRest implements GenericEntity<Integer> {\n     @NotNull(groups = {WhenUpdating.class, WhenCreatingNew.class})\n     private Set<Integer> artifactIds = new HashSet<>();\n \n-    public TargetRepositoryRest(Integer id, Boolean temporaryRepo,\n-            String identifier, TargetRepository.Type repositoryType, String repositoryPath) {\n-        this.id = id;\n-        this.temporaryRepo = temporaryRepo;\n-        this.identifier = identifier;\n-        this.repositoryType = repositoryType;\n-        this.repositoryPath = repositoryPath;\n-    }\n-\n     public TargetRepositoryRest(TargetRepository targetRepository) {\n         id = targetRepository.getId();\n         identifier = targetRepository.getIdentifier();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNDU3Ng==", "url": "https://github.com/project-ncl/pnc/pull/2834#discussion_r375824576", "bodyText": "What is the reason to set it as nativeQuery?", "author": "jbartece", "createdAt": "2020-02-06T13:12:16Z", "path": "datastore/src/main/java/org/jboss/pnc/datastore/repositories/internal/ArtifactSpringRepository.java", "diffHunk": "@@ -18,12 +18,108 @@\n package org.jboss.pnc.datastore.repositories.internal;\n \n import org.jboss.pnc.model.Artifact;\n+import org.jboss.pnc.spi.datastore.repositories.ArtifactRepository.RawArtifact;\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n+import org.springframework.data.jpa.repository.Query;\n+\n+import java.util.List;\n \n import javax.enterprise.context.Dependent;\n \n @Dependent\n public interface ArtifactSpringRepository extends JpaRepository<Artifact, Integer>, JpaSpecificationExecutor<Artifact> {\n \n-}\n+    @Query(\n+            value = \"SELECT DISTINCT \" +\n+                    \" artifact.id, \" +\n+                    \" artifact.artifactQuality, \" +\n+                    \" artifact.deployPath, \" +\n+                    \" artifact.filename, \" +\n+                    \" artifact.identifier, \" +\n+                    \" artifact.importDate, \" +\n+                    \" artifact.md5, \" +\n+                    \" artifact.originUrl, \" +\n+                    \" artifact.sha1, \" +\n+                    \" artifact.sha256, \" +\n+                    \" artifact.size, \" +\n+                    \" artifact.targetRepository_id as targetRepositoryId, \" +\n+                    \" targetRepository.temporaryRepo, \" +\n+                    \" targetRepository.identifier as targetRepositoryIdentifier, \" +\n+                    \" targetRepository.repositoryPath, \" +\n+                    \" targetRepository.repositoryType \" +\n+                    \"FROM Artifact artifact \" +\n+                    \"INNER JOIN build_record_artifact_dependencies_map dependency_artifact \" +\n+                    \"  ON dependency_artifact.dependency_artifact_id = artifact.id \" +\n+                    \"INNER JOIN BuildRecord buildRecord \" +\n+                    \"  ON dependency_artifact.build_record_id = buildRecord.id \" +\n+                    \"INNER JOIN TargetRepository targetRepository \" +\n+                    \"  ON targetRepository.id = artifact.targetRepository_id \" +\n+                    \"WHERE \" +\n+                    \" buildRecord.id = ?1 \" +\n+                    \"ORDER BY \" +\n+                    \" artifact.id ASC LIMIT ?2 OFFSET ?3\",\n+            nativeQuery = true)\n+    List<RawArtifact> getMinimizedDependencyArtifactsForBuildRecord(Integer buildRecordId, int pageSize, int offset);\n+\n+    @Query(\n+            value = \"SELECT COUNT(DISTINCT artifact.id) \" +\n+                    \"FROM Artifact artifact \" +\n+                    \"INNER JOIN build_record_artifact_dependencies_map dependency_artifact \" +\n+                    \"  ON dependency_artifact.dependency_artifact_id = artifact.id \" +\n+                    \"INNER JOIN BuildRecord buildRecord \" +\n+                    \"  ON dependency_artifact.build_record_id = buildRecord.id \" +\n+                    \"INNER JOIN TargetRepository targetRepository \" +\n+                    \"  ON targetRepository.id = artifact.targetRepository_id \" +\n+                    \"WHERE \" +\n+                    \" buildRecord.id = ?1\",\n+            nativeQuery = true)\n+    Object[] countMinimizedDependencyArtifactsForBuildRecord(Integer buildRecordId);\n+\n+    @Query(\n+            value = \"SELECT DISTINCT \" +\n+                    \" artifact.id, \" +\n+                    \" artifact.artifactQuality, \" +\n+                    \" artifact.deployPath, \" +\n+                    \" artifact.filename, \" +\n+                    \" artifact.identifier, \" +\n+                    \" artifact.importDate, \" +\n+                    \" artifact.md5, \" +\n+                    \" artifact.originUrl, \" +\n+                    \" artifact.sha1, \" +\n+                    \" artifact.sha256, \" +\n+                    \" artifact.size, \" +\n+                    \" artifact.targetRepository_id as targetRepositoryId, \" +\n+                    \" targetRepository.temporaryRepo, \" +\n+                    \" targetRepository.identifier as targetRepositoryIdentifier, \" +\n+                    \" targetRepository.repositoryPath, \" +\n+                    \" targetRepository.repositoryType \" +\n+                    \"FROM Artifact artifact \" +\n+                    \"INNER JOIN build_record_built_artifact_map built_artifact \" +\n+                    \"  ON built_artifact.built_artifact_id = artifact.id \" +\n+                    \"INNER JOIN BuildRecord buildRecord \" +\n+                    \"  ON built_artifact.build_record_id = buildRecord.id \" +\n+                    \"INNER JOIN TargetRepository targetRepository \" +\n+                    \"  ON targetRepository.id = artifact.targetRepository_id \" +\n+                    \"WHERE \" +\n+                    \" buildRecord.id = ?1 \" +\n+                    \"ORDER BY \" +\n+                    \" artifact.id ASC LIMIT ?2 OFFSET ?3\",\n+            nativeQuery = true)\n+    List<RawArtifact> getMinimizedBuiltArtifactsForBuildRecord(Integer buildRecordId, int pageSize, int offset);\n+\n+    @Query(\n+            value = \"SELECT COUNT(DISTINCT artifact.id) \" +\n+                    \"FROM Artifact artifact \" +\n+                    \"INNER JOIN build_record_built_artifact_map built_artifact \" +\n+                    \"  ON built_artifact.built_artifact_id = artifact.id \" +\n+                    \"INNER JOIN BuildRecord buildRecord \" +\n+                    \"  ON built_artifact.build_record_id = buildRecord.id \" +\n+                    \"INNER JOIN TargetRepository targetRepository \" +\n+                    \"  ON targetRepository.id = artifact.targetRepository_id \" +\n+                    \"WHERE \" +\n+                    \" buildRecord.id = ?1\",\n+            nativeQuery = true)", "originalCommit": "4c2406b70e12c2516598bb625f87a10bc8aa6a2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2MTQyNw==", "url": "https://github.com/project-ncl/pnc/pull/2834#discussion_r375861427", "bodyText": "With standard JPA I could not mange to override at runtime some EAGER fetches, so I had to go to native queries.", "author": "vibe13", "createdAt": "2020-02-06T14:23:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNDU3Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9cdfd06f456002633ce437266f2a0c008ce0a39d", "url": "https://github.com/project-ncl/pnc/commit/9cdfd06f456002633ce437266f2a0c008ce0a39d", "message": "Update build tasks timing capture points.", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "c74a2a1bd07c085114a7ff99337ac11a515f0b1e", "url": "https://github.com/project-ncl/pnc/commit/c74a2a1bd07c085114a7ff99337ac11a515f0b1e", "message": "[NCL-5297] Add parameter description", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "0056fc09be58c2704c3deffb0b363f133f9bf10f", "url": "https://github.com/project-ncl/pnc/commit/0056fc09be58c2704c3deffb0b363f133f9bf10f", "message": "NCL-5270 Add days support [v1.8 only]", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "e81453a0ec1d8c518a993903a003f69613cb428e", "url": "https://github.com/project-ncl/pnc/commit/e81453a0ec1d8c518a993903a003f69613cb428e", "message": "NCL-5270 Fix select init state [v1.8 only]", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "66259dde097d2a1497cb7b57db5b02f95fe72a69", "url": "https://github.com/project-ncl/pnc/commit/66259dde097d2a1497cb7b57db5b02f95fe72a69", "message": "NCL-5270 Add titles and change order [v1.8 only]", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "438e850f4de722192b965926d6a5130163d2f524", "url": "https://github.com/project-ncl/pnc/commit/438e850f4de722192b965926d6a5130163d2f524", "message": "Removal of new constructor and use of all args constructor", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}, {"oid": "d3efcd0f62c5f0e2cb8a2528b6b783bc83877c98", "url": "https://github.com/project-ncl/pnc/commit/d3efcd0f62c5f0e2cb8a2528b6b783bc83877c98", "message": "Fix the calculation of cache hit ratios and do filter non supported stats", "committedDate": "2020-02-06T16:13:57Z", "type": "commit"}]}