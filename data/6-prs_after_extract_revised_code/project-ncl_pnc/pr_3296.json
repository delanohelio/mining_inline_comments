{"pr_number": 3296, "pr_title": "[NCL-6032] - PNC should wait for a pod to be available instead of giv\u2026", "pr_createdAt": "2020-09-09T13:58:37Z", "pr_url": "https://github.com/project-ncl/pnc/pull/3296", "timeline": [{"oid": "c4f6dd024e405d2f9afcfba2bb4ce338ba8ffbd5", "url": "https://github.com/project-ncl/pnc/commit/c4f6dd024e405d2f9afcfba2bb4ce338ba8ffbd5", "message": "[NCL-6032] - PNC should wait for a pod to be available instead of giving a SYSTEM_ERROR after 300s", "committedDate": "2020-09-09T13:58:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r485909168", "bodyText": "I think we can get rid of like 65:\ntimeout = reader.getIntValueFromPropertyOrDefault(PULLING_MONITOR_TIMEOUT_KEY, DEFAULT_TIMEOUT);\n\nSince that'll make it confusing on how to configure the default polling monitor timeout (env var v/s config file). Then on line 84, we can just use the 'DEFAULT_TIMEOUT' as our timeout. WDYT?", "author": "thescouser89", "createdAt": "2020-09-09T20:40:52Z", "path": "common/src/main/java/org/jboss/pnc/common/monitor/PollingMonitor.java", "diffHunk": "@@ -84,6 +84,19 @@ public PollingMonitor() {\n         return monitor(condition, checkInterval, timeout, DEFAULT_TIME_UNIT);", "originalCommit": "c4f6dd024e405d2f9afcfba2bb4ce338ba8ffbd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxNzc2Mg==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r485917762", "bodyText": "I think I also added that env var in the README.md. So if we decide to remove it, we should also remove it in the README.md", "author": "thescouser89", "createdAt": "2020-09-09T20:57:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NTI0Mg==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r485945242", "bodyText": "@thescouser89  It makes sense to me Dustin! While looking at the code I was already wondering about that, but should we then add pulling_monitor_check_interval to the env vars as well (and remove it as you suggested for pulling_monitor_timeout)? As it would also be confusing that 2 similar properties are set in different ways?\nThe pulling_monitor_threadpool is trickier to be moved to I would leave it where it is.\nThanks!", "author": "vibe13", "createdAt": "2020-09-09T21:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAyNTU4NQ==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486025585", "bodyText": "I'm a tiny bit confused. pulling_monitor_check_interval should already be an env var.\nOut of topic, but I think I remember now why I did set it as env vars. It was because I couldn't access the module config there and had to find some loophole to configure it.", "author": "thescouser89", "createdAt": "2020-09-10T02:28:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwNDMzMw==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486204333", "bodyText": "Ok sorry, I created the confusion. So looking more carefully, both pulling_monitor_check_interval and pulling_monitor_timeout are configurable via env vars.  I would leave them as indeed there is no access to the module config file there, and they can be used to override the default values.\nHowever, the PollingMonitor is used not only in the OpenshiftStartedEnvironment, but also in the DefaultBuildCoordinator, so I would not change the default values. What if we leave the chance to override the default values also via config file, so that:\n\nif PollingMonitor is used as a utility class from the common package, users can use default or override them via env vars\nif OpenShiftStartedEnvironment needs to apply different default values for the timeout or check interval, it can do so without impacting others (e.g. DefaultBuildCoordinator)\nDepending on the use case, different checks may be tuned with different timeouts and intervals?\n\nLast thing: it is pOllingmonitor right? Not pUllingmonitor. What if I unify all the naming to and env vars to the correct name? :-)\nThanks!", "author": "vibe13", "createdAt": "2020-09-10T09:39:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyMzM0NA==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486423344", "bodyText": "To be honest, I think the env vars would be confusing. I would personally remove it and just make the caller specify a custom check internal and timeout if required with method parameters. We also don't use the env vars anymore in our deployments so it's safe to remove.", "author": "thescouser89", "createdAt": "2020-09-10T15:12:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTE2OA=="}], "type": "inlineReview", "revised_code": {"commit": "5bf9f261bb385d94bf19e9706700e4a73c96e87d", "chunk": "diff --git a/common/src/main/java/org/jboss/pnc/common/monitor/PollingMonitor.java b/common/src/main/java/org/jboss/pnc/common/monitor/PollingMonitor.java\nindex de0d94430..b823388eb 100644\n--- a/common/src/main/java/org/jboss/pnc/common/monitor/PollingMonitor.java\n+++ b/common/src/main/java/org/jboss/pnc/common/monitor/PollingMonitor.java\n\n@@ -81,27 +72,30 @@ public class PollingMonitor {\n      * @return CancellableCompletableFuture\n      */\n     public CancellableCompletableFuture<Void> monitor(Supplier<Boolean> condition) {\n-        return monitor(condition, checkInterval, timeout, DEFAULT_TIME_UNIT);\n+        return monitor(condition, DEFAULT_CHECK_INTERVAL, DEFAULT_TIMEOUT, DEFAULT_TIME_UNIT);\n     }\n \n     /**\n      * Periodically checks the condition and calls onMonitorComplete when it returns true. If the specified timeout is\n      * reached onMonitorError is called.\n      *\n-     * @param condition\n-     * @param timeout specified in seconds\n+     * @param condition the condition to check\n+     * @param checkInterval interval between checks\n+     * @param timeout\n+     * @param timeUnit\n+     * \n      * @return CancellableCompletableFuture\n      */\n-    public CancellableCompletableFuture<Void> monitor(Supplier<Boolean> condition, int timeout) {\n-        log.debug(\"Monitoring condition with specified timeout of {}\", timeout);\n-        return monitor(condition, checkInterval, timeout, DEFAULT_TIME_UNIT);\n-    }\n-\n     public CancellableCompletableFuture<Void> monitor(\n             Supplier<Boolean> condition,\n             int checkInterval,\n             int timeout,\n             TimeUnit timeUnit) {\n+        log.debug(\n+                \"Monitoring condition with specified checkInterval of {}, timeout of {}, timeUnit {}\",\n+                timeout,\n+                checkInterval,\n+                timeUnit);\n         return scheduledExecutor.scheduleWithFixedDelayAndTimeout(condition, 0L, checkInterval, timeout, timeUnit);\n     }\n \n"}}, {"oid": "65ad3cafd85863b3b5febc6335afc1a20019e452", "url": "https://github.com/project-ncl/pnc/commit/65ad3cafd85863b3b5febc6335afc1a20019e452", "message": "Add and manage list of retry-able pod statuses; add Error and InvalidImageName to the list of detected pod error statuses", "committedDate": "2020-09-09T21:52:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3NDEwMQ==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486174101", "bodyText": "Since the value is assigned in the previous line from the constant, what is the case for null ?", "author": "matejonnet", "createdAt": "2020-09-10T08:51:34Z", "path": "moduleconfig/src/main/java/org/jboss/pnc/common/json/moduleconfig/OpenshiftEnvironmentDriverModuleConfig.java", "diffHunk": "@@ -92,9 +98,30 @@ public OpenshiftEnvironmentDriverModuleConfig(\n         this.containerPort = containerPort;\n         this.keepBuildAgentInstance = keepBuildAgentInstance != null ? keepBuildAgentInstance : false;\n         this.exposeBuildAgentOnPublicUrl = exposeBuildAgentOnPublicUrl != null ? exposeBuildAgentOnPublicUrl : false;\n-        this.creationPodRetry = creationPodRetry;\n         this.builderPodMemory = builderPodMemory == null ? DEFAULT_BUILDER_POD_MEMORY : builderPodMemory;\n \n+        this.creationPodRetry = DEFAULT_CREATION_POD_RETRY;\n+        if (creationPodRetry != null) {\n+            try {\n+                this.creationPodRetry = Integer.parseInt(creationPodRetry);\n+            } catch (NumberFormatException e) {\n+                log.error(\n+                        \"Couldn't parse the value of creation pod retry from the configuration. Using default ({} retries)\",\n+                        DEFAULT_CREATION_POD_RETRY);\n+            }\n+        }\n+\n+        this.pollingMonitorTimeout = PollingMonitor.DEFAULT_TIMEOUT;\n+        if (pollingMonitorTimeout != null) {", "originalCommit": "65ad3cafd85863b3b5febc6335afc1a20019e452", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwNzMxNw==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486207317", "bodyText": "pollingMonitorTimeout comes from the config file mapping and is passed as parameter, it's not the same variable", "author": "vibe13", "createdAt": "2020-09-10T09:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3NDEwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5bf9f261bb385d94bf19e9706700e4a73c96e87d", "chunk": "diff --git a/moduleconfig/src/main/java/org/jboss/pnc/common/json/moduleconfig/OpenshiftEnvironmentDriverModuleConfig.java b/moduleconfig/src/main/java/org/jboss/pnc/common/json/moduleconfig/OpenshiftEnvironmentDriverModuleConfig.java\nindex caf2e6c24..6616fe275 100644\n--- a/moduleconfig/src/main/java/org/jboss/pnc/common/json/moduleconfig/OpenshiftEnvironmentDriverModuleConfig.java\n+++ b/moduleconfig/src/main/java/org/jboss/pnc/common/json/moduleconfig/OpenshiftEnvironmentDriverModuleConfig.java\n\n@@ -122,6 +125,17 @@ public class OpenshiftEnvironmentDriverModuleConfig extends EnvironmentDriverMod\n             }\n         }\n \n+        this.pollingMonitorCheckInterval = PollingMonitor.DEFAULT_CHECK_INTERVAL;\n+        if (pollingMonitorCheckInterval != null) {\n+            try {\n+                this.pollingMonitorCheckInterval = Integer.parseInt(pollingMonitorCheckInterval);\n+            } catch (NumberFormatException e) {\n+                log.error(\n+                        \"Couldn't parse the value of polling monitor check interval. Using default ({} seconds)\",\n+                        PollingMonitor.DEFAULT_CHECK_INTERVAL);\n+            }\n+        }\n+\n         log.debug(\"Created new instance {}\", toString());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3NTYzMQ==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486175631", "bodyText": "Please use \"readable\" variable name. eg: failedStartException", "author": "matejonnet", "createdAt": "2020-09-10T08:54:06Z", "path": "openshift-environment-driver/src/main/java/org/jboss/pnc/environment/openshift/OpenshiftStartedEnvironment.java", "diffHunk": "@@ -476,8 +478,21 @@ private void monitorInitialization(\n                         if (retries == 0) {\n                             onError.accept(new Exception(throwable));\n                         } else {\n-                            logger.error(\"Creating build environment failed! Retrying...\", throwable);\n-                            retryEnvironment(onComplete, onError, retries);\n+                            PodFailedStartException pfsExc = null;", "originalCommit": "65ad3cafd85863b3b5febc6335afc1a20019e452", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwODM5Ng==", "url": "https://github.com/project-ncl/pnc/pull/3296#discussion_r486208396", "bodyText": "sure, done.", "author": "vibe13", "createdAt": "2020-09-10T09:46:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3NTYzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "258b64edeffec3e56e15d6fe6223101ee293e169", "chunk": "diff --git a/openshift-environment-driver/src/main/java/org/jboss/pnc/environment/openshift/OpenshiftStartedEnvironment.java b/openshift-environment-driver/src/main/java/org/jboss/pnc/environment/openshift/OpenshiftStartedEnvironment.java\nindex 28d8425bd..3e792afc7 100644\n--- a/openshift-environment-driver/src/main/java/org/jboss/pnc/environment/openshift/OpenshiftStartedEnvironment.java\n+++ b/openshift-environment-driver/src/main/java/org/jboss/pnc/environment/openshift/OpenshiftStartedEnvironment.java\n\n@@ -478,15 +478,15 @@ public class OpenshiftStartedEnvironment implements StartedEnvironment {\n                         if (retries == 0) {\n                             onError.accept(new Exception(throwable));\n                         } else {\n-                            PodFailedStartException pfsExc = null;\n+                            PodFailedStartException podFailedStartExc = null;\n                             if (throwable instanceof PodFailedStartException) {\n-                                pfsExc = (PodFailedStartException) throwable;\n+                                podFailedStartExc = (PodFailedStartException) throwable;\n                             } else if (throwable.getCause() instanceof PodFailedStartException) {\n-                                pfsExc = (PodFailedStartException) throwable.getCause();\n+                                podFailedStartExc = (PodFailedStartException) throwable.getCause();\n                             }\n \n-                            if (pfsExc != null\n-                                    && !Arrays.asList(POD_RETRYABLE_STATUSES).contains(pfsExc.getPodStatus())) {\n+                            if (podFailedStartExc != null\n+                                    && !Arrays.asList(POD_RETRYABLE_STATUSES).contains(podFailedStartExc.getPodStatus())) {\n                                 // the status is not to be retried\n                                 onError.accept(new Exception(throwable));\n                             } else {\n"}}, {"oid": "258b64edeffec3e56e15d6fe6223101ee293e169", "url": "https://github.com/project-ncl/pnc/commit/258b64edeffec3e56e15d6fe6223101ee293e169", "message": "Renaming of exception to readable name", "committedDate": "2020-09-10T09:46:11Z", "type": "commit"}, {"oid": "a975fe379bc2d3894ef4a700cafac707fc9118f0", "url": "https://github.com/project-ncl/pnc/commit/a975fe379bc2d3894ef4a700cafac707fc9118f0", "message": "Fix formatting", "committedDate": "2020-09-10T10:13:06Z", "type": "commit"}, {"oid": "5bf9f261bb385d94bf19e9706700e4a73c96e87d", "url": "https://github.com/project-ncl/pnc/commit/5bf9f261bb385d94bf19e9706700e4a73c96e87d", "message": "Removal of env var and renaming of PullingMonitor occurrences to PollingMonitor", "committedDate": "2020-09-10T15:51:23Z", "type": "commit"}, {"oid": "0351668d6724afb963431d0a58c606c92654839b", "url": "https://github.com/project-ncl/pnc/commit/0351668d6724afb963431d0a58c606c92654839b", "message": "Specify new polling monitor check interval", "committedDate": "2020-09-10T15:56:58Z", "type": "commit"}]}