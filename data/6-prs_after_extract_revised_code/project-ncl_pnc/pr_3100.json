{"pr_number": 3100, "pr_title": "Add javadoc to request, response and notification DTOs", "pr_createdAt": "2020-06-16T09:51:57Z", "pr_url": "https://github.com/project-ncl/pnc/pull/3100", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczODc3NA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440738774", "bodyText": "import", "author": "vibe13", "createdAt": "2020-06-16T10:09:53Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildPushRequest.java", "diffHunk": "@@ -32,6 +33,9 @@\n @JsonDeserialize(builder = GroupBuildPushRequest.Builder.class)\n public class GroupBuildPushRequest {\n \n+    /**\n+     * Koji tag prefix, to which the builds should be tagged upon ipmport.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildPushRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildPushRequest.java\nindex bc37c6243..a9faa0273 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildPushRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildPushRequest.java\n\n@@ -34,7 +34,7 @@ import lombok.Data;\n public class GroupBuildPushRequest {\n \n     /**\n-     * Koji tag prefix, to which the builds should be tagged upon ipmport.\n+     * Koji tag prefix, to which the builds should be tagged upon import.\n      */\n     private final String tagPrefix;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczODk4Nw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440738987", "bodyText": "import", "author": "vibe13", "createdAt": "2020-06-16T10:10:13Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/BuildPushParameters.java", "diffHunk": "@@ -32,8 +33,14 @@\n @JsonDeserialize(builder = BuildPushParameters.Builder.class)\n public class BuildPushParameters {\n \n+    /**\n+     * Koji tag prefix, to which the build should be tagged upon ipmport.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildPushParameters.java b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildPushParameters.java\nindex c0faeafb8..75aa5a56e 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildPushParameters.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildPushParameters.java\n\n@@ -34,7 +34,7 @@ import lombok.Data;\n public class BuildPushParameters {\n \n     /**\n-     * Koji tag prefix, to which the build should be tagged upon ipmport.\n+     * Koji tag prefix, to which the build should be tagged upon import.\n      */\n     private final String tagPrefix;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczOTQ1OA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440739458", "bodyText": "repository", "author": "vibe13", "createdAt": "2020-06-16T10:11:06Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n+ * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n+ * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n @JsonDeserialize(builder = BuildConfigCreationResponse.Builder.class)\n public class BuildConfigCreationResponse {\n \n+    /**\n+     * Id of the task that will create and sync the repository and create build config. When the repository doesn't\n+     * require sync, this is null and {@link getBuildConfig} is returned instead.\n+     */\n     private Integer taskId;\n \n+    /**\n+     * The created build config. When the reposiotry require sync, this is null and {@link getTaskId} is returned", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\nindex 520503d7b..8c7d5fc79 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n\n@@ -42,7 +42,7 @@ public class BuildConfigCreationResponse {\n     private Integer taskId;\n \n     /**\n-     * The created build config. When the reposiotry require sync, this is null and {@link getTaskId} is returned\n+     * The created build config. When the repository require sync, this is null and {@link getTaskId} is returned\n      * instead.\n      */\n     private BuildConfiguration buildConfig;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczOTc1NQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440739755", "bodyText": "processing", "author": "vibe13", "createdAt": "2020-06-16T10:11:39Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java", "diffHunk": "@@ -25,7 +25,8 @@\n import lombok.Data;\n \n /**\n- *\n+ * Response indicating there was an error prociessing request.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\nindex b92094466..6b590b427 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\n\n@@ -25,8 +25,8 @@ import lombok.Builder;\n import lombok.Data;\n \n /**\n- * Response indicating there was an error prociessing request.\n- * \n+ * Response indicating there was an error processing request.\n+ *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDMyMw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440740323", "bodyText": "This can be null, eitherwise the ...", "author": "vibe13", "createdAt": "2020-06-16T10:12:39Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java", "diffHunk": "@@ -34,10 +35,19 @@\n @JsonDeserialize(builder = ErrorResponse.Builder.class)\n public class ErrorResponse {\n \n+    /**\n+     * Type of the error.\n+     */\n     private final String errorType;\n \n+    /**\n+     * User readable error message.\n+     */\n     private final String errorMessage;\n \n+    /**\n+     * Object with more detailed information. This can be null or the object type depends on the error type.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3NTM0Nw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440775347", "bodyText": "eitherwise?", "author": "janinko", "createdAt": "2020-06-16T11:20:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc4NjY2Nw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440786667", "bodyText": "This can be null, otherwise the object ...?\n@alexcreasy maybe your expert opinion?", "author": "janinko", "createdAt": "2020-06-16T11:43:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc5NjM2Mw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440796363", "bodyText": "\"otherwise\" is correct! Eitherwise was made up by a non working portion of my brain :-D", "author": "vibe13", "createdAt": "2020-06-16T12:02:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\nindex b92094466..6b590b427 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/ErrorResponse.java\n\n@@ -46,7 +46,7 @@ public class ErrorResponse {\n     private final String errorMessage;\n \n     /**\n-     * Object with more detailed information. This can be null or the object type depends on the error type.\n+     * Object with more detailed information. This can be null, otherwise the object type depends on the error type.\n      */\n     private final Object details;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDQ4Nw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440740487", "bodyText": "belongs", "author": "vibe13", "createdAt": "2020-06-16T10:12:55Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java", "diffHunk": "@@ -35,15 +35,45 @@\n @JsonDeserialize(builder = MilestoneInfo.Builder.class)\n public class MilestoneInfo {\n \n+    /**\n+     * ID of the product that the milestone belons to.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java b/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\nindex f803e1060..df0b60fca 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\n\n@@ -36,11 +36,11 @@ import lombok.Data;\n public class MilestoneInfo {\n \n     /**\n-     * ID of the product that the milestone belons to.\n+     * ID of the product that the milestone belongs to.\n      */\n     private final String productId;\n     /**\n-     * Name of the product that the milestone belons to.\n+     * Name of the product that the milestone belongs to.\n      */\n     private final String productName;\n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc0MDYyNw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440740627", "bodyText": "belongs", "author": "vibe13", "createdAt": "2020-06-16T10:13:09Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java", "diffHunk": "@@ -35,15 +35,45 @@\n @JsonDeserialize(builder = MilestoneInfo.Builder.class)\n public class MilestoneInfo {\n \n+    /**\n+     * ID of the product that the milestone belons to.\n+     */\n     private final String productId;\n+    /**\n+     * Name of the product that the milestone belons to.", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java b/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\nindex f803e1060..df0b60fca 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/MilestoneInfo.java\n\n@@ -36,11 +36,11 @@ import lombok.Data;\n public class MilestoneInfo {\n \n     /**\n-     * ID of the product that the milestone belons to.\n+     * ID of the product that the milestone belongs to.\n      */\n     private final String productId;\n     /**\n-     * Name of the product that the milestone belons to.\n+     * Name of the product that the milestone belongs to.\n      */\n     private final String productName;\n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc5MDEzMQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r440790131", "bodyText": "\"the it's null\"", "author": "matejonnet", "createdAt": "2020-06-16T11:50:30Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/ValidationResponse.java", "diffHunk": "@@ -35,11 +36,20 @@\n @JsonDeserialize(builder = ValidationResponse.Builder.class)\n public class ValidationResponse {\n \n+    /**\n+     * Is the data in the request valid?\n+     */\n     @NotNull\n     public final Boolean isValid;\n \n+    /**\n+     * If the data in the request are not valid, the validation error type. If they are valid the it's null.\n+     */\n     public final ValidationErrorType errorType;", "originalCommit": "e1a0dde29159ba20381f0366e63b3034527f29e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/ValidationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/ValidationResponse.java\nindex c8207f9da..d5e1c8158 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/ValidationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/ValidationResponse.java\n\n@@ -43,7 +43,9 @@ public class ValidationResponse {\n     public final Boolean isValid;\n \n     /**\n-     * If the data in the request are not valid, the validation error type. If they are valid the it's null.\n+     * If the data in the request are not valid, the validation error type. If they are valid this is null.\n+     * \n+     * @see ValidationErrorType\n      */\n     public final ValidationErrorType errorType;\n \n"}}, {"oid": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "url": "https://github.com/project-ncl/pnc/commit/f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "message": "Formating", "committedDate": "2020-06-17T11:18:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2OTI2Mg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444069262", "bodyText": "Is this both external and internal? I would mention that here.", "author": "pkocandr", "createdAt": "2020-06-23T08:55:43Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java", "diffHunk": "@@ -37,12 +38,21 @@\n @JsonDeserialize(builder = BuildConfigWithSCMRequest.Builder.class)\n public class BuildConfigWithSCMRequest {\n \n+    /**\n+     * The SCM repository url.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\nindex 834a54fd8..ed8f61282 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n\n@@ -39,14 +40,15 @@ import lombok.Data;\n public class BuildConfigWithSCMRequest {\n \n     /**\n-     * The SCM repository url.\n+     * The SCM repository URL. The URL can be internal or external.\n      */\n     @NotBlank\n     @SCMUrl\n     private final String scmUrl;\n \n     /**\n-     * If the prebuild sync should be enabled if the SCM repository points to external url. Defaults to true.\n+     * Pre-builds sync enablement flag. Is taken into account only when scmUrl contains an external URL. Defaults to\n+     * true.\n      */\n     private final Boolean preBuildSyncEnabled;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3MjU5OA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444072598", "bodyText": "A javadoc shouldn't start with \"if\" IMO :-)\nI would make it something like Pre-builds sync enablement flag. Is taken into account only when scmUrl contains an external url. Defaults to true if null.", "author": "pkocandr", "createdAt": "2020-06-23T09:00:52Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java", "diffHunk": "@@ -37,12 +38,21 @@\n @JsonDeserialize(builder = BuildConfigWithSCMRequest.Builder.class)\n public class BuildConfigWithSCMRequest {\n \n+    /**\n+     * The SCM repository url.\n+     */\n     @NotBlank\n     @SCMUrl\n     private final String scmUrl;\n \n+    /**\n+     * If the prebuild sync should be enabled if the SCM repository points to external url. Defaults to true.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\nindex 834a54fd8..ed8f61282 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n\n@@ -39,14 +40,15 @@ import lombok.Data;\n public class BuildConfigWithSCMRequest {\n \n     /**\n-     * The SCM repository url.\n+     * The SCM repository URL. The URL can be internal or external.\n      */\n     @NotBlank\n     @SCMUrl\n     private final String scmUrl;\n \n     /**\n-     * If the prebuild sync should be enabled if the SCM repository points to external url. Defaults to true.\n+     * Pre-builds sync enablement flag. Is taken into account only when scmUrl contains an external URL. Defaults to\n+     * true.\n      */\n     private final Boolean preBuildSyncEnabled;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3MjgzMg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444072832", "bodyText": "The same as above.", "author": "pkocandr", "createdAt": "2020-06-23T09:01:14Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/CreateAndSyncSCMRequest.java", "diffHunk": "@@ -37,10 +38,16 @@\n @JsonDeserialize(builder = CreateAndSyncSCMRequest.Builder.class)\n public class CreateAndSyncSCMRequest {\n \n+    /**\n+     * The SCM repository url.\n+     */\n     @NotBlank(groups = { WhenCreatingNew.class })\n     @SCMUrl(groups = { WhenCreatingNew.class })\n     private final String scmUrl;\n \n+    /**\n+     * If the prebuild sync should be enabled if the SCM repository points to external url. Defaults to true.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/CreateAndSyncSCMRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/CreateAndSyncSCMRequest.java\nindex 7f5e2a494..f08c8019d 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/CreateAndSyncSCMRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/CreateAndSyncSCMRequest.java\n\n@@ -39,14 +39,15 @@ import org.jboss.pnc.dto.validation.groups.WhenCreatingNew;\n public class CreateAndSyncSCMRequest {\n \n     /**\n-     * The SCM repository url.\n+     * The SCM repository URL. The URL can be internal or external.\n      */\n     @NotBlank(groups = { WhenCreatingNew.class })\n     @SCMUrl(groups = { WhenCreatingNew.class })\n     private final String scmUrl;\n \n     /**\n-     * If the prebuild sync should be enabled if the SCM repository points to external url. Defaults to true.\n+     * Pre-builds sync enablement flag. Is taken into account only when scmUrl contains an external URL. Defaults to\n+     * true.\n      */\n     private final Boolean preBuildSyncEnabled;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3NzQwMg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444077402", "bodyText": "Is this just plain text or can this be html?", "author": "pkocandr", "createdAt": "2020-06-23T09:08:53Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/Banner.java", "diffHunk": "@@ -21,10 +21,18 @@\n import lombok.Setter;\n import lombok.ToString;\n \n+/**\n+ * Announcement banner. This banner is used to notify users about important information.\n+ * \n+ * @author jbrazdil\n+ */\n @ToString\n @Getter\n @Setter\n public class Banner {\n \n+    /**\n+     * Banner text.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4OTU4Ng==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444089586", "bodyText": "No idea. @thescouser89 ?", "author": "janinko", "createdAt": "2020-06-23T09:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3NzQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0MDk2Mg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444840962", "bodyText": "plain text", "author": "thescouser89", "createdAt": "2020-06-24T11:56:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3NzQwMg=="}], "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/Banner.java b/dto/src/main/java/org/jboss/pnc/dto/response/Banner.java\nindex 1dc3bba40..6580844dc 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/Banner.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/Banner.java\n\n@@ -23,7 +23,7 @@ import lombok.ToString;\n \n /**\n  * Announcement banner. This banner is used to notify users about important information.\n- * \n+ *\n  * @author jbrazdil\n  */\n @ToString\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4OTg1Mg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444089852", "bodyText": "The link should be {@link #getTaskId()}, otherwise it doesn't work, at least in Eclipse.", "author": "pkocandr", "createdAt": "2020-06-23T09:29:25Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n+ * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n+ * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\nindex 8c7d5fc79..7daf7d42b 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n- * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n- * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, new build config will be also created immediately and returned by {@link #getBuildConfig()} property. If\n+ * the repository needs to be synchronized first, {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5MDUzNw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444090537", "bodyText": "The link format again.", "author": "pkocandr", "createdAt": "2020-06-23T09:30:36Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n+ * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n+ * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n @JsonDeserialize(builder = BuildConfigCreationResponse.Builder.class)\n public class BuildConfigCreationResponse {\n \n+    /**\n+     * Id of the task that will create and sync the repository and create build config. When the repository doesn't\n+     * require sync, this is null and {@link getBuildConfig} is returned instead.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\nindex 8c7d5fc79..7daf7d42b 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n- * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n- * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, new build config will be also created immediately and returned by {@link #getBuildConfig()} property. If\n+ * the repository needs to be synchronized first, {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5MTA4MQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444091081", "bodyText": "dtto", "author": "pkocandr", "createdAt": "2020-06-23T09:31:29Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n+ * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n+ * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n @JsonDeserialize(builder = BuildConfigCreationResponse.Builder.class)\n public class BuildConfigCreationResponse {\n \n+    /**\n+     * Id of the task that will create and sync the repository and create build config. When the repository doesn't\n+     * require sync, this is null and {@link getBuildConfig} is returned instead.\n+     */\n     private Integer taskId;\n \n+    /**\n+     * The created build config. When the repository require sync, this is null and {@link getTaskId} is returned", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\nindex 8c7d5fc79..7daf7d42b 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/BuildConfigCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating build config with scm url. If the SCM repository config can be created\n- * immediately, new build config will be also created immediately and returned by {@link getBuildConfig} property. If\n- * the repository needs to be synchronized first, {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, new build config will be also created immediately and returned by {@link #getBuildConfig()} property. If\n+ * the repository needs to be synchronized first, {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyOTIzNA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444129234", "bodyText": "The links format again.", "author": "pkocandr", "createdAt": "2020-06-23T10:39:38Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n+ * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n+ * {@link getTaskId} property provides id of the synchronization task.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\nindex 36a87196f..3827bddbd 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n- * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n- * {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, it is returned by {@link #getRepository()} property. If the repository needs to be synchronized first,\n+ * {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzMTM1NQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444131355", "bodyText": "link...", "author": "pkocandr", "createdAt": "2020-06-23T10:43:50Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n+ * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n+ * {@link getTaskId} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n @JsonDeserialize(builder = RepositoryCreationResponse.Builder.class)\n public class RepositoryCreationResponse {\n \n+    /**\n+     * Id of the task that will create and sync the repository. When the repository doesn't require sync, this is null\n+     * and {@link getRepository} is returned instead.", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\nindex 36a87196f..3827bddbd 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n- * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n- * {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, it is returned by {@link #getRepository()} property. If the repository needs to be synchronized first,\n+ * {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzMTQyMA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r444131420", "bodyText": "link...", "author": "pkocandr", "createdAt": "2020-06-23T10:43:58Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java", "diffHunk": "@@ -25,15 +25,26 @@\n import lombok.Data;\n \n /**\n+ * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n+ * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n+ * {@link getTaskId} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n @Data\n @JsonDeserialize(builder = RepositoryCreationResponse.Builder.class)\n public class RepositoryCreationResponse {\n \n+    /**\n+     * Id of the task that will create and sync the repository. When the repository doesn't require sync, this is null\n+     * and {@link getRepository} is returned instead.\n+     */\n     private Integer taskId;\n \n+    /**\n+     * The created SCM Repistory config. When the repository require sync, this is null and {@link getTaskId} is", "originalCommit": "f5c2812e2038545de38a0d05f2d3cd0fb9b7e0c3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\nindex 36a87196f..3827bddbd 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/RepositoryCreationResponse.java\n\n@@ -26,8 +26,8 @@ import lombok.Data;\n \n /**\n  * The result of Create&Sync call for creating SCM repository config. If the SCM repository config can be created\n- * immediately, it is returned by {@link getRepository} property. If the repository needs to be synchronized first,\n- * {@link getTaskId} property provides id of the synchronization task.\n+ * immediately, it is returned by {@link #getRepository()} property. If the repository needs to be synchronized first,\n+ * {@link #getTaskId()} property provides id of the synchronization task.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzMDU2MA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r446930560", "bodyText": "maybe a mention that the SCM is also created if it is not present internally", "author": "michalovjan", "createdAt": "2020-06-29T12:26:41Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java", "diffHunk": "@@ -29,6 +29,7 @@\n import lombok.Data;\n \n /**\n+ * Request to create new build config with SCM given by URL.", "originalCommit": "ea69813485fefc3d48b97f8cbafcdbf56ae23f61", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\nindex 49613b83a..ed8f61282 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/BuildConfigWithSCMRequest.java\n\n@@ -29,7 +29,8 @@ import lombok.Builder;\n import lombok.Data;\n \n /**\n- * Request to create new build config with SCM given by URL.\n+ * Request to create new build config and SCM repository config given by SCM URL. If the URL is for external SCM, new\n+ * internal repository will be created and synced.\n  *\n  * @author Honza Br\u00e1zdil &lt;jbrazdil@redhat.com&gt;\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzMzA5NQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r446933095", "bodyText": "Maybe change the wording a bit. It's not a list of group config revisions but build config revisions associated with the group.", "author": "michalovjan", "createdAt": "2020-06-29T12:30:39Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildRequest.java", "diffHunk": "@@ -35,6 +36,10 @@\n @JsonDeserialize(builder = GroupBuildRequest.Builder.class)\n public class GroupBuildRequest {\n \n+    /**\n+     * List of group config revisions to be used instead of the latest revisions of the build configs in the group", "originalCommit": "ea69813485fefc3d48b97f8cbafcdbf56ae23f61", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildRequest.java\nindex b3d2635ca..f493989bf 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/GroupBuildRequest.java\n\n@@ -37,8 +37,10 @@ import lombok.Data;\n public class GroupBuildRequest {\n \n     /**\n-     * List of group config revisions to be used instead of the latest revisions of the build configs in the group\n-     * config.\n+     * List of group config revisions overrides to be used for builds. Normally the build of group config will start\n+     * building all the build configs in the group in their latest revision. This list can be used to override this\n+     * behaviour and specify which revisions to build exactly. All the revisions should be of build configs in the\n+     * group, but not all build configs from the group must have specified revision (latest will be used).\n      */\n     private final List<BuildConfigurationRevisionRef> buildConfigurationRevisions;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0MzAwMw==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r446943003", "bodyText": "As I was the person that added this feature, I can specify it.\n\"Id of the product version. The product version is used to prevent duplicate milestones with the same milestone version.\"", "author": "michalovjan", "createdAt": "2020-06-29T12:46:36Z", "path": "dto/src/main/java/org/jboss/pnc/dto/requests/validation/VersionValidationRequest.java", "diffHunk": "@@ -33,9 +34,15 @@\n @JsonDeserialize(builder = VersionValidationRequest.Builder.class)\n public class VersionValidationRequest {\n \n+    /**\n+     * Id of the product version.", "originalCommit": "ea69813485fefc3d48b97f8cbafcdbf56ae23f61", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/requests/validation/VersionValidationRequest.java b/dto/src/main/java/org/jboss/pnc/dto/requests/validation/VersionValidationRequest.java\nindex 2631fac38..a9f02e955 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/requests/validation/VersionValidationRequest.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/requests/validation/VersionValidationRequest.java\n\n@@ -35,7 +35,8 @@ import javax.validation.constraints.NotBlank;\n public class VersionValidationRequest {\n \n     /**\n-     * Id of the product version.\n+     * Id of the product version. The product version is used to prevent duplicate milestones with the same milestone\n+     * version.\n      */\n     @NotBlank\n     public final String productVersionId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0OTA2NQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r446949065", "bodyText": "Shouldn't it be called \"waitingForDependencies\" instead of \"awaitingForDependencies\"? On the other hand,\nchanging name of an argument would break API on UI.", "author": "michalovjan", "createdAt": "2020-06-29T12:55:59Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/RunningBuildCount.java", "diffHunk": "@@ -20,12 +20,26 @@\n import lombok.AllArgsConstructor;\n import lombok.Data;\n \n+/**\n+ * Statistics of running builds.\n+ *\n+ * @author jbrazdil\n+ */\n @AllArgsConstructor\n @Data\n public class RunningBuildCount {\n \n+    /**\n+     * Number of running builds.\n+     */\n     private int running;\n+    /**\n+     * Number of enqueued builds.\n+     */\n     private int enqueued;\n+    /**\n+     * Number of builds waiting for dependencies.\n+     */\n     private int awaitingForDependencies;", "originalCommit": "ea69813485fefc3d48b97f8cbafcdbf56ae23f61", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzMTc1NQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447031755", "bodyText": "@thescouser89 question for you.", "author": "janinko", "createdAt": "2020-06-29T14:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0MTAyNg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447041026", "bodyText": "And the possible change should be handled in different issue.", "author": "janinko", "createdAt": "2020-06-29T15:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1MDM4NA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447050384", "bodyText": "agreed", "author": "michalovjan", "createdAt": "2020-06-29T15:17:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NzEwMQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447677101", "bodyText": "+1 to rename it. We should do it for 2.0. Have you created the issue?", "author": "jbartece", "createdAt": "2020-06-30T13:22:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk0OTA2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NDYwOQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447674609", "bodyText": "I don't understand this entity and the javadocs doesn't help. Improve the javadocs for the whole entity, please.", "author": "jbartece", "createdAt": "2020-06-30T13:18:52Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/Edge.java", "diffHunk": "@@ -32,10 +34,19 @@\n @JsonDeserialize(builder = Edge.Builder.class)\n public class Edge<T> {\n \n+    /**\n+     * Source vertex name.\n+     */\n     private final String source;\n \n+    /**\n+     * Target vertex name.\n+     */\n     private final String target;\n \n+    /**\n+     * Edge cost.\n+     */\n     private final int cost;", "originalCommit": "8bbd211a716862fde142366142e5f14d301fe1f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4ODAzMA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447688030", "bodyText": "@matejonnet Can you please provide the info I should write there?", "author": "janinko", "createdAt": "2020-06-30T13:36:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NDYwOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NTE5OA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447675198", "bodyText": "Extend these javadocs to be more descriptive, please.", "author": "jbartece", "createdAt": "2020-06-30T13:19:39Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/Graph.java", "diffHunk": "@@ -35,10 +37,19 @@\n @JsonDeserialize(builder = Graph.Builder.class)\n public class Graph<T> {\n \n+    /**\n+     * Map of vertices with the vertex name as a key.\n+     */\n     private final Map<String, Vertex<T>> vertices;\n \n+    /**\n+     * List of graph edges.\n+     */\n     private final List<Edge<T>> edges;\n \n+    /**\n+     * Map of graph metadata.\n+     */\n     private final Map<String, String> metadata;\n ", "originalCommit": "8bbd211a716862fde142366142e5f14d301fe1f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4ODA3OA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447688078", "bodyText": "@matejonnet Can you please provide the info I should write there?", "author": "janinko", "createdAt": "2020-06-30T13:36:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NTE5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY5NTA2Mg==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447695062", "bodyText": "\"Generic map of key-value properties describing the graph.\"", "author": "matejonnet", "createdAt": "2020-06-30T13:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3NTE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "chunk": "diff --git a/dto/src/main/java/org/jboss/pnc/dto/response/Graph.java b/dto/src/main/java/org/jboss/pnc/dto/response/Graph.java\nindex 6821c87f2..4edc669af 100644\n--- a/dto/src/main/java/org/jboss/pnc/dto/response/Graph.java\n+++ b/dto/src/main/java/org/jboss/pnc/dto/response/Graph.java\n\n@@ -48,7 +48,7 @@ public class Graph<T> {\n     private final List<Edge<T>> edges;\n \n     /**\n-     * Map of graph metadata.\n+     * Generic map of key-value properties describing the graph.\n      */\n     private final Map<String, String> metadata;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3OTUwMA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447679500", "bodyText": "Extend the javadocs, please.", "author": "jbartece", "createdAt": "2020-06-30T13:25:29Z", "path": "dto/src/main/java/org/jboss/pnc/dto/response/Vertex.java", "diffHunk": "@@ -32,10 +34,19 @@\n @JsonDeserialize(builder = Vertex.Builder.class)\n public class Vertex<T> {\n \n+    /**\n+     * Name of the object.\n+     */\n     private final String name;\n \n+    /**\n+     * The object type.\n+     */\n     private final String dataType;\n \n+    /**\n+     * The object stored in the vertex.\n+     */\n     private final T data;\n ", "originalCommit": "8bbd211a716862fde142366142e5f14d301fe1f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4ODEzMQ==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447688131", "bodyText": "@matejonnet Can you please provide the info I should write there?", "author": "janinko", "createdAt": "2020-06-30T13:36:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3OTUwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY5MTc1OA==", "url": "https://github.com/project-ncl/pnc/pull/3100#discussion_r447691758", "bodyText": "Current doc seems fine to me.", "author": "matejonnet", "createdAt": "2020-06-30T13:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY3OTUwMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "url": "https://github.com/project-ncl/pnc/commit/1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "message": "Add javadoc to request, response and notification DTOs", "committedDate": "2020-07-02T07:55:59Z", "type": "commit"}, {"oid": "1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "url": "https://github.com/project-ncl/pnc/commit/1ea92cc6e89cd4f0755e1d64f283fc2eeae08aa5", "message": "Add javadoc to request, response and notification DTOs", "committedDate": "2020-07-02T07:55:59Z", "type": "forcePushed"}]}