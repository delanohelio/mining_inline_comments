{"pr_number": 2015, "pr_title": "695b enum alternative ", "pr_createdAt": "2020-02-01T22:57:02Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2015", "timeline": [{"oid": "58a2aacecd0a6a750691f46e75ca18a899c91afe", "url": "https://github.com/mapstruct/mapstruct/commit/58a2aacecd0a6a750691f46e75ca18a899c91afe", "message": "#695 API design, user control over the mapping process", "committedDate": "2020-01-28T19:01:37Z", "type": "commit"}, {"oid": "94ceb425cbfe83c4c2072bd960415687cb760565", "url": "https://github.com/mapstruct/mapstruct/commit/94ceb425cbfe83c4c2072bd960415687cb760565", "message": "#695 basic implementation", "committedDate": "2020-01-29T20:30:18Z", "type": "commit"}, {"oid": "6ad866823efd2b8f591b0b92b547adea783c5fb6", "url": "https://github.com/mapstruct/mapstruct/commit/6ad866823efd2b8f591b0b92b547adea783c5fb6", "message": "#695 adding documentation (and new insights due to)", "committedDate": "2020-01-29T21:15:58Z", "type": "commit"}, {"oid": "5fedfae2eccf1a37fbfa02537bf7b3b63e9afce8", "url": "https://github.com/mapstruct/mapstruct/commit/5fedfae2eccf1a37fbfa02537bf7b3b63e9afce8", "message": "#695 Adding unit test and bug fixes", "committedDate": "2020-01-30T23:02:23Z", "type": "commit"}, {"oid": "63d2e2e416a567c5ad259f42cf7b9cc78208f4ae", "url": "https://github.com/mapstruct/mapstruct/commit/63d2e2e416a567c5ad259f42cf7b9cc78208f4ae", "message": "#695 Rework comments", "committedDate": "2020-02-01T09:52:37Z", "type": "commit"}, {"oid": "510e360392d074f80a651fb34725d93b2933d806", "url": "https://github.com/mapstruct/mapstruct/commit/510e360392d074f80a651fb34725d93b2933d806", "message": "#695 Rework issue", "committedDate": "2020-02-01T15:18:27Z", "type": "commit"}, {"oid": "8f150808242e49e3ca731e35035a8ecd7a615843", "url": "https://github.com/mapstruct/mapstruct/commit/8f150808242e49e3ca731e35035a8ecd7a615843", "message": "#695 enum alternative", "committedDate": "2020-02-01T22:56:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzc4MQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373807781", "bodyText": "Maybe add some javadoc here?", "author": "filiphr", "createdAt": "2020-02-01T23:14:14Z", "path": "core/src/main/java/org/mapstruct/control/MappingControl.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.control;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Repeatable;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.CLASS)\n+@Repeatable(MappingControls.class)\n+@Target( ElementType.ANNOTATION_TYPE )\n+@MappingControl( MappingControl.Use.DIRECT )\n+@MappingControl( MappingControl.Use.BUILT_IN_CONVERSION )\n+@MappingControl( MappingControl.Use.MAPPING_METHOD )\n+@MappingControl( MappingControl.Use.COMPLEX_MAPPING )\n+public @interface MappingControl {", "originalCommit": "8f150808242e49e3ca731e35035a8ecd7a615843", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgyOTQ3OQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2015#discussion_r373829479", "bodyText": "example and java doc added", "author": "sjaakd", "createdAt": "2020-02-02T08:45:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c5c5515b19600180b3ea89b3b656d9ad8151f36b", "chunk": "diff --git a/core/src/main/java/org/mapstruct/control/MappingControl.java b/core/src/main/java/org/mapstruct/control/MappingControl.java\nindex 4306cc0c..975ff52e 100644\n--- a/core/src/main/java/org/mapstruct/control/MappingControl.java\n+++ b/core/src/main/java/org/mapstruct/control/MappingControl.java\n\n@@ -11,6 +11,83 @@\n import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\n \n+\n+/**\n+ * Controls which means of mapping are considered between the source and the target in mappings.\n+ *\n+ * <p>\n+ * There are several applications of <code>MappingControl</code> conceivable. One application, \"deep cloning\" is\n+ * explained below in the example.\n+ * </p>\n+ *\n+ * <p>\n+ * Another application is controlling so called \"complex mappings\", which are not always desirable and sometimes lead to\n+ * unexpected behaviour and prolonged compilation time.\n+ * </p>\n+ *\n+ * <p><strong>Example:</strong>Cloning of an object</p>\n+ * <p>\n+ * When all methods are allowed, MapStruct would make a shallow copy. It would take the <code>ShelveDTO</code> in\n+ * the <code>FridgeDTO</code> and directly enter that as target on the target <code>FridgeDTO</code>. By disabling all\n+ * other kinds of mappings apart from {@link MappingControl.Use#MAPPING_METHOD}, see {@link DeepClone} MapStruct is\n+ * forced to generate mapping methods all through the object graph `FridgeDTO` and hence create a deep clone.\n+ * </p>\n+ * <pre><code class='java'>\n+ * public class FridgeDTO {\n+ *\n+ *     private ShelveDTO shelve;\n+ *\n+ *     public ShelveDTO getShelve() {\n+ *         return shelve;\n+ *     }\n+ *\n+ *     public void setShelve(ShelveDTO shelve) {\n+ *         this.shelve = shelve;\n+ *     }\n+ * }\n+ * </code></pre>\n+ * <pre><code class='java'>\n+ * public class ShelveDTO {\n+ *\n+ *     private CoolBeerDTO coolBeer;\n+ *\n+ *     public CoolBeerDTO getCoolBeer() {\n+ *         return coolBeer;\n+ *     }\n+ *\n+ *     public void setCoolBeer(CoolBeerDTO coolBeer) {\n+ *         this.coolBeer = coolBeer;\n+ *     }\n+ * }\n+ * </code></pre>\n+ * <pre><code class='java'>\n+ * public class CoolBeerDTO {\n+ *\n+ *     private String beerCount;\n+ *\n+ *     public String getBeerCount() {\n+ *         return beerCount;\n+ *     }\n+ *\n+ *     public void setBeerCount(String beerCount) {\n+ *         this.beerCount = beerCount;\n+ *     }\n+ * }\n+ * </code></pre>\n+ *\n+ * <pre><code class='java'>\n+ * &#64;Mapper(mappingControl = DeepClone.class)\n+ * public interface CloningMapper {\n+ *\n+ *     CloningMapper INSTANCE = Mappers.getMapper( CloningMapper.class );\n+ *\n+ *     FridgeDTO clone(FridgeDTO in);\n+ *\n+ * }\n+ * </code></pre>\n+ *\n+ * @author Sjaak Derksen\n+ */\n @Retention(RetentionPolicy.CLASS)\n @Repeatable(MappingControls.class)\n @Target( ElementType.ANNOTATION_TYPE )\n"}}, {"oid": "c5c5515b19600180b3ea89b3b656d9ad8151f36b", "url": "https://github.com/mapstruct/mapstruct/commit/c5c5515b19600180b3ea89b3b656d9ad8151f36b", "message": "#695 enum alternative, rework comments", "committedDate": "2020-02-02T08:45:25Z", "type": "commit"}]}