{"pr_number": 2103, "pr_title": "#2101 inherited properties need to be analysed against redefined properties when inheriting mappings", "pr_createdAt": "2020-05-21T13:02:32Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2103", "timeline": [{"oid": "1866d90948906df7422c99cd0aac23400e41e18c", "url": "https://github.com/mapstruct/mapstruct/commit/1866d90948906df7422c99cd0aac23400e41e18c", "message": "#2101 reproducer", "committedDate": "2020-05-21T15:09:46Z", "type": "commit"}, {"oid": "1866d90948906df7422c99cd0aac23400e41e18c", "url": "https://github.com/mapstruct/mapstruct/commit/1866d90948906df7422c99cd0aac23400e41e18c", "message": "#2101 reproducer", "committedDate": "2020-05-21T15:09:46Z", "type": "forcePushed"}, {"oid": "2a137bed0c3d5a15007935f321469b809c635de7", "url": "https://github.com/mapstruct/mapstruct/commit/2a137bed0c3d5a15007935f321469b809c635de7", "message": "#2101 removing nonused arg from method", "committedDate": "2020-07-04T12:26:21Z", "type": "commit"}, {"oid": "c2f42a477a7d4759417268594b7ad02748f5ab52", "url": "https://github.com/mapstruct/mapstruct/commit/c2f42a477a7d4759417268594b7ad02748f5ab52", "message": "#2101 filtering solution", "committedDate": "2020-07-04T14:00:49Z", "type": "commit"}, {"oid": "4470711036ba00a9b80ff7244608bf3fb9b601fd", "url": "https://github.com/mapstruct/mapstruct/commit/4470711036ba00a9b80ff7244608bf3fb9b601fd", "message": "#2101 new insights and additional test", "committedDate": "2020-07-04T14:42:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NjgxOA==", "url": "https://github.com/mapstruct/mapstruct/pull/2103#discussion_r449796818", "bodyText": "Streams are all OK, but we are going twice through the same mappings.\nWhy not defined the sets, then use a for-loop to iterate the mappings and add to the sets?", "author": "filiphr", "createdAt": "2020-07-04T18:53:16Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/MappingMethodOptions.java", "diffHunk": "@@ -177,13 +177,54 @@ public void applyInheritedOptions(SourceMethod templateMethod, boolean isInverse\n             }\n \n             // now add all (does not override duplicates and leaves original mappings)\n-            mappings.addAll( newMappings );\n+            addAllNonRedefined( newMappings );\n \n             // filter new mappings\n             filterNestedTargetIgnores( mappings );\n         }\n     }\n \n+    private void addAllNonRedefined(Set<MappingOptions> inheritedMappings) {\n+        Set<String> redefinedSources = mappings.stream()", "originalCommit": "4470711036ba00a9b80ff7244608bf3fb9b601fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NzM0Nw==", "url": "https://github.com/mapstruct/mapstruct/pull/2103#discussion_r449797347", "bodyText": "will correct.. I'm all into this streams nowadays.. \ud83d\ude04", "author": "sjaakd", "createdAt": "2020-07-04T19:01:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NjgxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5Nzk0Ng==", "url": "https://github.com/mapstruct/mapstruct/pull/2103#discussion_r449797946", "bodyText": "I love streams as well. However, good old imperative style is better sometimes. Lately I am all into performance \ud83d\ude00", "author": "filiphr", "createdAt": "2020-07-04T19:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NjgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "7e1aa27f4f246cfbd375d5150f39bf2328aab269", "chunk": "diff --git a/processor/src/main/java/org/mapstruct/ap/internal/model/source/MappingMethodOptions.java b/processor/src/main/java/org/mapstruct/ap/internal/model/source/MappingMethodOptions.java\nindex 447879a8..dbd47ab5 100644\n--- a/processor/src/main/java/org/mapstruct/ap/internal/model/source/MappingMethodOptions.java\n+++ b/processor/src/main/java/org/mapstruct/ap/internal/model/source/MappingMethodOptions.java\n\n@@ -185,14 +186,13 @@ public void applyInheritedOptions(SourceMethod templateMethod, boolean isInverse\n     }\n \n     private void addAllNonRedefined(Set<MappingOptions> inheritedMappings) {\n-        Set<String> redefinedSources = mappings.stream()\n-            .map( MappingOptions::getSourceName )\n-            .filter( Objects::nonNull )\n-            .collect( Collectors.toSet() );\n-        Set<String> redefinedTargets = mappings.stream()\n-            .map( MappingOptions::getTargetName )\n-            .filter( Objects::nonNull )\n-            .collect( Collectors.toSet() );\n+        Set<String> redefinedSources = new HashSet<>();\n+        Set<String> redefinedTargets = new HashSet<>();\n+        for ( MappingOptions redefinedMappings : mappings ) {\n+            Optional<MappingOptions> redefinedOptionalMappings = Optional.ofNullable( redefinedMappings );\n+            redefinedOptionalMappings.map( MappingOptions::getSourceName ).ifPresent( redefinedSources::add );\n+            redefinedOptionalMappings.map( MappingOptions::getTargetName ).ifPresent( redefinedTargets::add );\n+        }\n         for ( MappingOptions inheritedMapping : inheritedMappings ) {\n             if ( inheritedMapping.isIgnored()\n                 || ( !isRedefined( redefinedSources, inheritedMapping.getSourceName() )\n"}}, {"oid": "7e1aa27f4f246cfbd375d5150f39bf2328aab269", "url": "https://github.com/mapstruct/mapstruct/commit/7e1aa27f4f246cfbd375d5150f39bf2328aab269", "message": "#2101 rework", "committedDate": "2020-07-04T19:22:35Z", "type": "forcePushed"}, {"oid": "f2c1913f92b8f5582341a8ec8a7605ddd24cc3eb", "url": "https://github.com/mapstruct/mapstruct/commit/f2c1913f92b8f5582341a8ec8a7605ddd24cc3eb", "message": "#2101 rework", "committedDate": "2020-07-04T19:30:29Z", "type": "commit"}, {"oid": "f2c1913f92b8f5582341a8ec8a7605ddd24cc3eb", "url": "https://github.com/mapstruct/mapstruct/commit/f2c1913f92b8f5582341a8ec8a7605ddd24cc3eb", "message": "#2101 rework", "committedDate": "2020-07-04T19:30:29Z", "type": "forcePushed"}]}