{"pr_number": 2275, "pr_title": "#2274, #2023 Fix problems with property mapping using source parameters", "pr_createdAt": "2020-11-15T11:22:30Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2275", "timeline": [{"oid": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e", "url": "https://github.com/mapstruct/mapstruct/commit/9879b1fd9e9041cbb5183cc5e200ef6300c07f3e", "message": "#2274, #2023 Fix problems with property mapping using source parameters\n\nFixes problems when property mapping is using source parameter and has default value / expression or is doing an update", "committedDate": "2020-11-15T10:54:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzQ0NQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177445", "bodyText": "add in the comment this is auto-unboxing..", "author": "sjaakd", "createdAt": "2020-11-21T10:08:18Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check\n+                return true;\n+            }\n+\n+            if ( nvpms == SET_TO_DEFAULT || nvpms == IGNORE ) {\n+                // NullValuePropertyMapping is SET_TO_DEFAULT or IGNORE -> do a null check\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isConverted() ) {\n+                // If the type is converted then check is needed\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isDirect() && targetType.isPrimitive() ) {\n+                // If the type is direct and the target type is primtive then check is needed", "originalCommit": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "275083edc951eac0030293572c611494d76ce29b", "chunk": "diff --git a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\nindex 2aefb9ef..61e1fca8 100644\n--- a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n+++ b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n\n@@ -460,12 +460,12 @@ private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetTyp\n             }\n \n             if ( rhs.getType().isConverted() ) {\n-                // If the type is converted then check is needed\n+                // A type conversion is applied, so a null check is required\n                 return true;\n             }\n \n             if ( rhs.getType().isDirect() && targetType.isPrimitive() ) {\n-                // If the type is direct and the target type is primtive then check is needed\n+                // If the type is direct and the target type is primitive (i.e. we are unboxing) then check is needed\n                 return true;\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzY0Mg==", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177642", "bodyText": "This is a strange one.. NullValueCheckStrategy does concern parameters, not bean properties.. Do you remember why this one is here? Perhaps it requires some more comment \ud83d\ude04", "author": "sjaakd", "createdAt": "2020-11-21T10:10:25Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check", "originalCommit": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyNTM2Ng==", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528325366", "bodyText": "I think that you are talking about NullValueMappingStrategy. The NullValueCheckStrategy is for properties", "author": "filiphr", "createdAt": "2020-11-22T12:02:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "275083edc951eac0030293572c611494d76ce29b", "chunk": "diff --git a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\nindex 2aefb9ef..61e1fca8 100644\n--- a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n+++ b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n\n@@ -460,12 +460,12 @@ private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetTyp\n             }\n \n             if ( rhs.getType().isConverted() ) {\n-                // If the type is converted then check is needed\n+                // A type conversion is applied, so a null check is required\n                 return true;\n             }\n \n             if ( rhs.getType().isDirect() && targetType.isPrimitive() ) {\n-                // If the type is direct and the target type is primtive then check is needed\n+                // If the type is direct and the target type is primitive (i.e. we are unboxing) then check is needed\n                 return true;\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzcwOQ==", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177709", "bodyText": "comment: 'a type conversion is applied' so null check is required.", "author": "sjaakd", "createdAt": "2020-11-21T10:11:18Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check\n+                return true;\n+            }\n+\n+            if ( nvpms == SET_TO_DEFAULT || nvpms == IGNORE ) {\n+                // NullValuePropertyMapping is SET_TO_DEFAULT or IGNORE -> do a null check\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isConverted() ) {\n+                // If the type is converted then check is needed", "originalCommit": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "275083edc951eac0030293572c611494d76ce29b", "chunk": "diff --git a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\nindex 2aefb9ef..61e1fca8 100644\n--- a/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n+++ b/processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java\n\n@@ -460,12 +460,12 @@ private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetTyp\n             }\n \n             if ( rhs.getType().isConverted() ) {\n-                // If the type is converted then check is needed\n+                // A type conversion is applied, so a null check is required\n                 return true;\n             }\n \n             if ( rhs.getType().isDirect() && targetType.isPrimitive() ) {\n-                // If the type is direct and the target type is primtive then check is needed\n+                // If the type is direct and the target type is primitive (i.e. we are unboxing) then check is needed\n                 return true;\n             }\n \n"}}, {"oid": "275083edc951eac0030293572c611494d76ce29b", "url": "https://github.com/mapstruct/mapstruct/commit/275083edc951eac0030293572c611494d76ce29b", "message": "Clarify comments", "committedDate": "2020-11-22T12:03:41Z", "type": "commit"}]}