{"pr_number": 2227, "pr_title": "861 remove compiler specific workarounds", "pr_createdAt": "2020-10-11T07:30:57Z", "pr_url": "https://github.com/mapstruct/mapstruct/pull/2227", "timeline": [{"oid": "cde348a0e9eef54478bcffd5bd3c54636aca1355", "url": "https://github.com/mapstruct/mapstruct/commit/cde348a0e9eef54478bcffd5bd3c54636aca1355", "message": "861 remove compiler specific workarounds 2", "committedDate": "2020-10-11T09:14:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODAwOA==", "url": "https://github.com/mapstruct/mapstruct/pull/2227#discussion_r506938008", "bodyText": "This does not have the same logic as before. We not check if the types are regular types before delegating. Before we returned false if t1 was of TypeKind#VOID.\nThe current implementation is not forward compatible, as if there is a new TypeKind then we will always return false.\nThis comment holds for the other methods that are replaced from the SpecificCompilerWorkarounds", "author": "filiphr", "createdAt": "2020-10-17T12:24:03Z", "path": "processor/src/main/java/org/mapstruct/ap/internal/util/AbstractTypeUtilsDecorator.java", "diffHunk": "@@ -52,12 +46,18 @@ public boolean isSameType(TypeMirror t1, TypeMirror t2) {\n \n     @Override\n     public boolean isSubtype(TypeMirror t1, TypeMirror t2) {\n-        return SpecificCompilerWorkarounds.isSubtype( delegate, t1, t2 );\n+        if ( isRegularType( t1 ) && isRegularType( t2 ) ) {\n+            return delegate.isSubtype( erasure( t1 ), erasure(  t2 ) );\n+        }\n+        return false;", "originalCommit": "89a0437c656b1ddd94f202f2c7e48fc3230b4f6a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0NzAyNg==", "url": "https://github.com/mapstruct/mapstruct/pull/2227#discussion_r506947026", "bodyText": "I actually thought about this a bit more.\nthe  previous logic was incomplete.. I guess that perhaps module has been added (I did not check java 11 and later), hence I choose to do the logical thing here.  Checkout the java doc:\n   /**\n     * Tests whether one type is a subtype of another.\n     * Any type is considered to be a subtype of itself.\n     *\n     * @param t1  the first type\n     * @param t2  the second type\n     * @return {@code true} if and only if the first type is a subtype\n     *          of the second\n     * @throws IllegalArgumentException if given an executable or package type\n     * @jls 4.10 Subtyping\n     */\n    boolean isSubtype(TypeMirror t1, TypeMirror t2);\nI also think that you should check both arguments.\nSo  !isRegularType(  t1 ) || !isRegularType(  t2 ) -> false..\nTaking \"the Morgan\"  from boolean math over these:  !(isRegularType( t1) && isRegularType(t2) ) or the \"else branch\"  of the current isRegularType( t1) && isRegularType(t2)..\nThe reason why I altered the code is our previous discussion (I can't find it).. But you mentioned other problems with incremental compilation.", "author": "sjaakd", "createdAt": "2020-10-17T14:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk2MzUwMw==", "url": "https://github.com/mapstruct/mapstruct/pull/2227#discussion_r506963503", "bodyText": "Due to ECJ throwing an exception in these methods we should check if they are of Type Void and return false if one of them is void or true if both of them are void. Otherwise, we delegate to the method. The isRegularType method is currently implemented based on what the java API does, which can change in the future and we shouldn't rely on current implementation logic.\nThe problems with the incremental compilation were in the asMemberOf I think and both of those issues are fixed, so I think that we are fine there. That is the one with the special classloader logic invocation.", "author": "filiphr", "createdAt": "2020-10-17T17:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyMjE3Mw==", "url": "https://github.com/mapstruct/mapstruct/pull/2227#discussion_r507522173", "bodyText": "I guess Eclipse does not throw an exception anymore for voids. See my latest commits.. So gradually EJC and Javac show similar behaviour.", "author": "sjaakd", "createdAt": "2020-10-19T07:16:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODAwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1MzU3Mw==", "url": "https://github.com/mapstruct/mapstruct/pull/2227#discussion_r507653573", "bodyText": "I think that eclipse does throw an exception, maybe we aren't calling the methods for Void types anymore \ud83d\ude09", "author": "filiphr", "createdAt": "2020-10-19T10:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkzODAwOA=="}], "type": "inlineReview", "revised_code": {"commit": "4cdd90fc2524e8e432ca9e2157ae83ab449c7e9c", "chunk": "diff --git a/processor/src/main/java/org/mapstruct/ap/internal/util/AbstractTypeUtilsDecorator.java b/processor/src/main/java/org/mapstruct/ap/internal/util/AbstractTypeUtilsDecorator.java\nindex 8381c1ca..2f7c4d60 100644\n--- a/processor/src/main/java/org/mapstruct/ap/internal/util/AbstractTypeUtilsDecorator.java\n+++ b/processor/src/main/java/org/mapstruct/ap/internal/util/AbstractTypeUtilsDecorator.java\n\n@@ -46,18 +46,12 @@ public boolean isSameType(TypeMirror t1, TypeMirror t2) {\n \n     @Override\n     public boolean isSubtype(TypeMirror t1, TypeMirror t2) {\n-        if ( isRegularType( t1 ) && isRegularType( t2 ) ) {\n-            return delegate.isSubtype( erasure( t1 ), erasure(  t2 ) );\n-        }\n-        return false;\n+        return delegate.isSubtype( t1, t2 );\n     }\n \n     @Override\n     public boolean isAssignable(TypeMirror t1, TypeMirror t2) {\n-        if ( isRegularType( t1 ) && isRegularType( t2 ) ) {\n-            return delegate.isAssignable( t1, t2 );\n-        }\n-        return false;\n+        return delegate.isAssignable( t1, t2 );\n     }\n \n     @Override\n"}}, {"oid": "4cdd90fc2524e8e432ca9e2157ae83ab449c7e9c", "url": "https://github.com/mapstruct/mapstruct/commit/4cdd90fc2524e8e432ca9e2157ae83ab449c7e9c", "message": "861 making a clean solution for isSubtype, isSubtypeErased", "committedDate": "2020-10-17T18:17:16Z", "type": "forcePushed"}, {"oid": "dc6aba7d976fcb2bef70148cbaff0b8fbc7fa237", "url": "https://github.com/mapstruct/mapstruct/commit/dc6aba7d976fcb2bef70148cbaff0b8fbc7fa237", "message": "861 remove compiler specif workarounds 1", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "f7af4345ae169fed2518188d2a3b5156003bba07", "url": "https://github.com/mapstruct/mapstruct/commit/f7af4345ae169fed2518188d2a3b5156003bba07", "message": "861 remove compiler specific workarounds 2", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "a20054631c1467e03b5ed5c22704cf06c9c2323d", "url": "https://github.com/mapstruct/mapstruct/commit/a20054631c1467e03b5ed5c22704cf06c9c2323d", "message": "861 introduce compiler specific wrappers", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "2f65e47b41354917bed6ffe0615acafccdef6676", "url": "https://github.com/mapstruct/mapstruct/commit/2f65e47b41354917bed6ffe0615acafccdef6676", "message": "861 types and utils as extension", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "5127033f2e2c4d03c0ed842ad227a0089a5671c5", "url": "https://github.com/mapstruct/mapstruct/commit/5127033f2e2c4d03c0ed842ad227a0089a5671c5", "message": "861 adding methods from Executables and Fields to the new ElementUtils", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "63ab8813d066edf732f7d85531dbcf07b96692e9", "url": "https://github.com/mapstruct/mapstruct/commit/63ab8813d066edf732f7d85531dbcf07b96692e9", "message": "861 removing check in isAssignable (seems not needed anymore)", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "6d76c00c7a99c27443203847bd897379ccec16f4", "url": "https://github.com/mapstruct/mapstruct/commit/6d76c00c7a99c27443203847bd897379ccec16f4", "message": "861 removing check in erasure (seems not needed anymore)", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "a4720e64dd583cf5dd3b06b03c2078c6477518e7", "url": "https://github.com/mapstruct/mapstruct/commit/a4720e64dd583cf5dd3b06b03c2078c6477518e7", "message": "861 removing check in isSubType (seems not needed anymore)", "committedDate": "2020-10-21T17:39:49Z", "type": "commit"}, {"oid": "251499217b1392f7a1429bf7a5722e6f5bbcd3c7", "url": "https://github.com/mapstruct/mapstruct/commit/251499217b1392f7a1429bf7a5722e6f5bbcd3c7", "message": "861 making a clean solution for isSubtype, isSubtypeErased", "committedDate": "2020-10-21T17:41:37Z", "type": "commit"}, {"oid": "251499217b1392f7a1429bf7a5722e6f5bbcd3c7", "url": "https://github.com/mapstruct/mapstruct/commit/251499217b1392f7a1429bf7a5722e6f5bbcd3c7", "message": "861 making a clean solution for isSubtype, isSubtypeErased", "committedDate": "2020-10-21T17:41:37Z", "type": "forcePushed"}]}