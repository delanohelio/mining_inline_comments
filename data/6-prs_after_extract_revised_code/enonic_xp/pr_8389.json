{"pr_number": 8389, "pr_title": "Extend VHost API #8374", "pr_createdAt": "2020-09-21T10:52:26Z", "pr_url": "https://github.com/enonic/xp/pull/8389", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NTIzMQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r491965231", "bodyText": "isEnabled, getVirtualHost, getVirtualHosts should be in a different service (VirtualHostConfigService)\nresolve should stay here.", "author": "rymsha", "createdAt": "2020-09-21T11:21:17Z", "path": "modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostService.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.enonic.xp.web.vhost;\n+\n+import java.util.List;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+public interface VirtualHostService\n+{\n+\n+    boolean isEnabled();\n+\n+    VirtualHost getVirtualHost( final String name );\n+\n+    List<VirtualHost> getVirtualHosts();\n+\n+    VirtualHost resolve( final HttpServletRequest req );", "originalCommit": "338c3d489b2eba8dc8a79c6cef9e503c6ec13e57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNzU1NQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492017555", "bodyText": "done", "author": "anatol-sialitski", "createdAt": "2020-09-21T12:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NTIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "chunk": "diff --git a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostService.java b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostConfigService.java\nsimilarity index 56%\nrename from modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostService.java\nrename to modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostConfigService.java\nindex 15a38b6787..9fece588da 100644\n--- a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostService.java\n+++ b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostConfigService.java\n\n@@ -2,9 +2,7 @@ package com.enonic.xp.web.vhost;\n \n import java.util.List;\n \n-import javax.servlet.http.HttpServletRequest;\n-\n-public interface VirtualHostService\n+public interface VirtualHostConfigService\n {\n \n     boolean isEnabled();\n"}}, {"oid": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "url": "https://github.com/enonic/xp/commit/7509ff8dc02d387bf41db673348b7e81fa3a022d", "message": "Extend VHost API #8374", "committedDate": "2020-09-21T12:45:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyNTA0Mw==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492025043", "bodyText": "extract class. Use Comparator.comparing.thenComparing", "author": "rymsha", "createdAt": "2020-09-21T12:59:10Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java", "diffHunk": "@@ -34,14 +36,33 @@ public boolean isEnabled()\n         return getBoolean( \"enabled\", false );\n     }\n \n-    public VirtualHostMappings buildMappings()\n+    public List<VirtualHost> buildMappings()\n     {\n-        final VirtualHostMappings mappings = new VirtualHostMappings();\n+        final List<VirtualHost> mappings = new ArrayList<>();\n+\n         for ( final String name : findMappingNames() )\n         {\n             mappings.add( buildMapping( name ) );\n         }\n \n+        mappings.sort( ( virtualHostMapping, otherVirtualHostMapping ) -> {", "originalCommit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\nindex cf1f7ceb64..2fb8c2f69e 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n\n@@ -45,23 +46,9 @@ final class VirtualHostConfigMap\n             mappings.add( buildMapping( name ) );\n         }\n \n-        mappings.sort( ( virtualHostMapping, otherVirtualHostMapping ) -> {\n-            int compared = virtualHostMapping.getHost().compareTo( otherVirtualHostMapping.getHost() );\n-\n-            if ( compared == 0 )\n-            {\n-                compared = otherVirtualHostMapping.getSource().length() - virtualHostMapping.getSource().length();\n-\n-                if ( compared == 0 )\n-                {\n-                    return virtualHostMapping.getSource().compareTo( otherVirtualHostMapping.getSource() );\n-                }\n-\n-                return compared;\n-            }\n-\n-            return compared;\n-        } );\n+        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n+            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).\n+            thenComparing( VirtualHost::getSource, String::compareTo ) );\n \n         return mappings;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyNjg3OQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492026879", "bodyText": "I now hardly see a need for such an API method.\n\nIn java one can easily use streams\nin js one can use find", "author": "rymsha", "createdAt": "2020-09-21T13:02:16Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostServiceImpl.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package com.enonic.xp.web.vhost.impl;\n+\n+import java.util.List;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.enonic.xp.web.vhost.VirtualHost;\n+import com.enonic.xp.web.vhost.VirtualHostConfigService;\n+import com.enonic.xp.web.vhost.impl.config.VirtualHostConfig;\n+\n+@Component(immediate = true)\n+public class VirtualHostServiceImpl\n+    implements VirtualHostConfigService\n+{\n+\n+    private VirtualHostConfig virtualHostConfig;\n+\n+    @Activate\n+    public VirtualHostServiceImpl( @Reference final VirtualHostConfig virtualHostConfig )\n+    {\n+        this.virtualHostConfig = virtualHostConfig;\n+    }\n+\n+    @Override\n+    public boolean isEnabled()\n+    {\n+        return virtualHostConfig.isEnabled();\n+    }\n+\n+    @Override\n+    public VirtualHost getVirtualHost( final String name )", "originalCommit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostServiceImpl.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostServiceImpl.java\ndeleted file mode 100644\nindex 12ba5c0118..0000000000\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostServiceImpl.java\n+++ /dev/null\n\n@@ -1,52 +0,0 @@\n-package com.enonic.xp.web.vhost.impl;\n-\n-import java.util.List;\n-\n-import org.osgi.service.component.annotations.Activate;\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Reference;\n-\n-import com.enonic.xp.web.vhost.VirtualHost;\n-import com.enonic.xp.web.vhost.VirtualHostConfigService;\n-import com.enonic.xp.web.vhost.impl.config.VirtualHostConfig;\n-\n-@Component(immediate = true)\n-public class VirtualHostServiceImpl\n-    implements VirtualHostConfigService\n-{\n-\n-    private VirtualHostConfig virtualHostConfig;\n-\n-    @Activate\n-    public VirtualHostServiceImpl( @Reference final VirtualHostConfig virtualHostConfig )\n-    {\n-        this.virtualHostConfig = virtualHostConfig;\n-    }\n-\n-    @Override\n-    public boolean isEnabled()\n-    {\n-        return virtualHostConfig.isEnabled();\n-    }\n-\n-    @Override\n-    public VirtualHost getVirtualHost( final String name )\n-    {\n-        for ( final VirtualHost virtualHost : virtualHostConfig.getMappings() )\n-        {\n-            if ( virtualHost.getName().equals( name ) )\n-            {\n-                return virtualHost;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    @Override\n-    public List<VirtualHost> getVirtualHosts()\n-    {\n-        return virtualHostConfig.getMappings();\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNDA3Nw==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492224077", "bodyText": "Move to own service VirtualHostResolverService", "author": "rymsha", "createdAt": "2020-09-21T17:21:11Z", "path": "modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java", "diffHunk": "@@ -23,4 +29,57 @@ public static void setVirtualHost( final HttpServletRequest req, final VirtualHo\n     {\n         req.setAttribute( KEY, vhost );\n     }\n+\n+    public static VirtualHost resolve( final List<VirtualHost> virtualHosts, final HttpServletRequest req )", "originalCommit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "chunk": "diff --git a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\nindex bbaa7c1058..2d1affaca8 100644\n--- a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n+++ b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n\n@@ -30,48 +28,6 @@ public final class VirtualHostHelper\n         req.setAttribute( KEY, vhost );\n     }\n \n-    public static VirtualHost resolve( final List<VirtualHost> virtualHosts, final HttpServletRequest req )\n-    {\n-        for ( final VirtualHost virtualHost : virtualHosts )\n-        {\n-            if ( matches( virtualHost, req ) )\n-            {\n-                return virtualHost;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    public static boolean matches( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        return matchesHost( virtualHost, req ) && matchesSource( virtualHost, req );\n-    }\n-\n-    public static boolean matchesHost( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        final String serverName = req.getServerName();\n-        return virtualHost.getHost().equalsIgnoreCase( serverName );\n-    }\n-\n-    public static boolean matchesSource( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        final String actualPath = req.getRequestURI();\n-        return \"/\".equals( virtualHost.getSource() ) || actualPath.equals( virtualHost.getSource() ) ||\n-            actualPath.startsWith( virtualHost.getSource() + \"/\" );\n-    }\n-\n-    public static String getFullTargetPath( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        String path = req.getRequestURI();\n-        if ( !\"/\".equals( virtualHost.getSource() ) && path.startsWith( virtualHost.getSource() ) )\n-        {\n-            path = path.substring( virtualHost.getSource().length() );\n-        }\n-\n-        return normalizePath( virtualHost.getTarget() + path );\n-    }\n-\n     public static String normalizePath( final String value )\n     {\n         if ( isNullOrEmpty( value ) )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNDQ4MQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492224481", "bodyText": "move to another helper (internal package)", "author": "rymsha", "createdAt": "2020-09-21T17:21:52Z", "path": "modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java", "diffHunk": "@@ -23,4 +29,57 @@ public static void setVirtualHost( final HttpServletRequest req, final VirtualHo\n     {\n         req.setAttribute( KEY, vhost );\n     }\n+\n+    public static VirtualHost resolve( final List<VirtualHost> virtualHosts, final HttpServletRequest req )\n+    {\n+        for ( final VirtualHost virtualHost : virtualHosts )\n+        {\n+            if ( matches( virtualHost, req ) )\n+            {\n+                return virtualHost;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    public static boolean matches( final VirtualHost virtualHost, final HttpServletRequest req )", "originalCommit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "chunk": "diff --git a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\nindex bbaa7c1058..2d1affaca8 100644\n--- a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n+++ b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n\n@@ -30,48 +28,6 @@ public final class VirtualHostHelper\n         req.setAttribute( KEY, vhost );\n     }\n \n-    public static VirtualHost resolve( final List<VirtualHost> virtualHosts, final HttpServletRequest req )\n-    {\n-        for ( final VirtualHost virtualHost : virtualHosts )\n-        {\n-            if ( matches( virtualHost, req ) )\n-            {\n-                return virtualHost;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    public static boolean matches( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        return matchesHost( virtualHost, req ) && matchesSource( virtualHost, req );\n-    }\n-\n-    public static boolean matchesHost( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        final String serverName = req.getServerName();\n-        return virtualHost.getHost().equalsIgnoreCase( serverName );\n-    }\n-\n-    public static boolean matchesSource( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        final String actualPath = req.getRequestURI();\n-        return \"/\".equals( virtualHost.getSource() ) || actualPath.equals( virtualHost.getSource() ) ||\n-            actualPath.startsWith( virtualHost.getSource() + \"/\" );\n-    }\n-\n-    public static String getFullTargetPath( final VirtualHost virtualHost, final HttpServletRequest req )\n-    {\n-        String path = req.getRequestURI();\n-        if ( !\"/\".equals( virtualHost.getSource() ) && path.startsWith( virtualHost.getSource() ) )\n-        {\n-            path = path.substring( virtualHost.getSource().length() );\n-        }\n-\n-        return normalizePath( virtualHost.getTarget() + path );\n-    }\n-\n     public static String normalizePath( final String value )\n     {\n         if ( isNullOrEmpty( value ) )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNTQ5Nw==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492225497", "bodyText": "This service is not needed. Replace by VirtualHostService(Impl)", "author": "rymsha", "createdAt": "2020-09-21T17:23:37Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfig.java", "diffHunk": "@@ -1,10 +1,12 @@\n package com.enonic.xp.web.vhost.impl.config;\n \n-import com.enonic.xp.web.vhost.impl.mapping.VirtualHostMappings;\n+import java.util.List;\n+\n+import com.enonic.xp.web.vhost.VirtualHost;\n \n public interface VirtualHostConfig", "originalCommit": "7509ff8dc02d387bf41db673348b7e81fa3a022d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfig.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfig.java\ndeleted file mode 100644\nindex 5c776952be..0000000000\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfig.java\n+++ /dev/null\n\n@@ -1,12 +0,0 @@\n-package com.enonic.xp.web.vhost.impl.config;\n-\n-import java.util.List;\n-\n-import com.enonic.xp.web.vhost.VirtualHost;\n-\n-public interface VirtualHostConfig\n-{\n-    boolean isEnabled();\n-\n-    List<VirtualHost> getMappings();\n-}\n"}}, {"oid": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "url": "https://github.com/enonic/xp/commit/5213d56af45ace4e9683a9590d4f70c924e82ce2", "message": "Extend VHost API #8374", "committedDate": "2020-09-22T08:26:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4MDA4NQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492580085", "bodyText": "Hopefully we can get rid of this method.", "author": "rymsha", "createdAt": "2020-09-22T09:01:56Z", "path": "modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java", "diffHunk": "@@ -23,4 +27,16 @@ public static void setVirtualHost( final HttpServletRequest req, final VirtualHo\n     {\n         req.setAttribute( KEY, vhost );\n     }\n+\n+    public static String normalizePath( final String value )", "originalCommit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8f5faee478837e3d6229c0a4187038cf1b150eb", "chunk": "diff --git a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\nindex 2d1affaca8..f7a4bd513b 100644\n--- a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n+++ b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostHelper.java\n\n@@ -28,15 +24,6 @@ public final class VirtualHostHelper\n         req.setAttribute( KEY, vhost );\n     }\n \n-    public static String normalizePath( final String value )\n-    {\n-        if ( isNullOrEmpty( value ) )\n-        {\n-            return \"/\";\n-        }\n \n-        final Iterable<String> parts = Splitter.on( '/' ).trimResults().omitEmptyStrings().split( value );\n-        return \"/\" + String.join( \"/\", parts );\n-    }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4MTI2MA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492581260", "bodyText": "XP has WebRequest interface abstraction. maybe that should be used instead?", "author": "rymsha", "createdAt": "2020-09-22T09:03:53Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostResolverImpl.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.enonic.xp.web.vhost.impl;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+import com.enonic.xp.web.vhost.VirtualHost;\n+import com.enonic.xp.web.vhost.VirtualHostHelper;\n+import com.enonic.xp.web.vhost.VirtualHostResolver;\n+import com.enonic.xp.web.vhost.VirtualHostService;\n+\n+@Component(immediate = true)\n+public class VirtualHostResolverImpl\n+    implements VirtualHostResolver\n+{\n+\n+    private final VirtualHostService virtualHostService;\n+\n+    @Activate\n+    public VirtualHostResolverImpl( @Reference final VirtualHostService virtualHostService )\n+    {\n+        this.virtualHostService = virtualHostService;\n+    }\n+\n+    @Override\n+    public VirtualHost resolveVirtualHost( final HttpServletRequest req )", "originalCommit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8f5faee478837e3d6229c0a4187038cf1b150eb", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostResolverImpl.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostResolverImpl.java\nindex dbc0874eed..caa26db5fc 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostResolverImpl.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/VirtualHostResolverImpl.java\n\n@@ -7,7 +7,6 @@ import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Reference;\n \n import com.enonic.xp.web.vhost.VirtualHost;\n-import com.enonic.xp.web.vhost.VirtualHostHelper;\n import com.enonic.xp.web.vhost.VirtualHostResolver;\n import com.enonic.xp.web.vhost.VirtualHostService;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4MTYyOQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492581629", "bodyText": "themComparingInt", "author": "rymsha", "createdAt": "2020-09-22T09:04:30Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java", "diffHunk": "@@ -34,14 +37,19 @@ public boolean isEnabled()\n         return getBoolean( \"enabled\", false );\n     }\n \n-    public VirtualHostMappings buildMappings()\n+    public List<VirtualHost> buildMappings()\n     {\n-        final VirtualHostMappings mappings = new VirtualHostMappings();\n+        final List<VirtualHost> mappings = new ArrayList<>();\n+\n         for ( final String name : findMappingNames() )\n         {\n             mappings.add( buildMapping( name ) );\n         }\n \n+        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n+            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).", "originalCommit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0a4b25562cc931135dc4e4c6936ad0b649bdb75", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\nindex 2fb8c2f69e..748cf43bac 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n\n@@ -39,18 +38,13 @@ final class VirtualHostConfigMap\n \n     public List<VirtualHost> buildMappings()\n     {\n-        final List<VirtualHost> mappings = new ArrayList<>();\n-\n-        for ( final String name : findMappingNames() )\n-        {\n-            mappings.add( buildMapping( name ) );\n-        }\n-\n-        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n-            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).\n-            thenComparing( VirtualHost::getSource, String::compareTo ) );\n-\n-        return mappings;\n+        return findMappingNames().stream().\n+            map( this::buildMapping ).\n+            sorted( Comparator.comparing( VirtualHost::getHost ).\n+                thenComparing( VirtualHost::getSource,\n+                               ( virtualHost, otherVirtualHost ) -> Integer.compare( otherVirtualHost.length(), virtualHost.length() ) ).\n+                thenComparing( VirtualHost::getSource ) ).\n+            collect( Collectors.toList() );\n     }\n \n     private VirtualHostMapping buildMapping( final String name )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4MjczMA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492582730", "bodyText": "String::compareTo is it needed? I think method is overloaded.", "author": "rymsha", "createdAt": "2020-09-22T09:06:15Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java", "diffHunk": "@@ -34,14 +37,19 @@ public boolean isEnabled()\n         return getBoolean( \"enabled\", false );\n     }\n \n-    public VirtualHostMappings buildMappings()\n+    public List<VirtualHost> buildMappings()\n     {\n-        final VirtualHostMappings mappings = new VirtualHostMappings();\n+        final List<VirtualHost> mappings = new ArrayList<>();\n+\n         for ( final String name : findMappingNames() )\n         {\n             mappings.add( buildMapping( name ) );\n         }\n \n+        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n+            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).\n+            thenComparing( VirtualHost::getSource, String::compareTo ) );", "originalCommit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0a4b25562cc931135dc4e4c6936ad0b649bdb75", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\nindex 2fb8c2f69e..748cf43bac 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n\n@@ -39,18 +38,13 @@ final class VirtualHostConfigMap\n \n     public List<VirtualHost> buildMappings()\n     {\n-        final List<VirtualHost> mappings = new ArrayList<>();\n-\n-        for ( final String name : findMappingNames() )\n-        {\n-            mappings.add( buildMapping( name ) );\n-        }\n-\n-        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n-            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).\n-            thenComparing( VirtualHost::getSource, String::compareTo ) );\n-\n-        return mappings;\n+        return findMappingNames().stream().\n+            map( this::buildMapping ).\n+            sorted( Comparator.comparing( VirtualHost::getHost ).\n+                thenComparing( VirtualHost::getSource,\n+                               ( virtualHost, otherVirtualHost ) -> Integer.compare( otherVirtualHost.length(), virtualHost.length() ) ).\n+                thenComparing( VirtualHost::getSource ) ).\n+            collect( Collectors.toList() );\n     }\n \n     private VirtualHostMapping buildMapping( final String name )\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4NDA3MQ==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492584071", "bodyText": "findMappingNames().stream().map(...).sort().collect()", "author": "rymsha", "createdAt": "2020-09-22T09:08:25Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java", "diffHunk": "@@ -34,14 +37,19 @@ public boolean isEnabled()\n         return getBoolean( \"enabled\", false );\n     }\n \n-    public VirtualHostMappings buildMappings()\n+    public List<VirtualHost> buildMappings()\n     {\n-        final VirtualHostMappings mappings = new VirtualHostMappings();\n+        final List<VirtualHost> mappings = new ArrayList<>();\n+\n         for ( final String name : findMappingNames() )", "originalCommit": "5213d56af45ace4e9683a9590d4f70c924e82ce2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0a4b25562cc931135dc4e4c6936ad0b649bdb75", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\nindex 2fb8c2f69e..748cf43bac 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostConfigMap.java\n\n@@ -39,18 +38,13 @@ final class VirtualHostConfigMap\n \n     public List<VirtualHost> buildMappings()\n     {\n-        final List<VirtualHost> mappings = new ArrayList<>();\n-\n-        for ( final String name : findMappingNames() )\n-        {\n-            mappings.add( buildMapping( name ) );\n-        }\n-\n-        mappings.sort( Comparator.comparing( VirtualHost::getHost ).\n-            thenComparing( VirtualHost::getSource, ( virtualHost, otherVirtualHost ) -> otherVirtualHost.length() - virtualHost.length() ).\n-            thenComparing( VirtualHost::getSource, String::compareTo ) );\n-\n-        return mappings;\n+        return findMappingNames().stream().\n+            map( this::buildMapping ).\n+            sorted( Comparator.comparing( VirtualHost::getHost ).\n+                thenComparing( VirtualHost::getSource,\n+                               ( virtualHost, otherVirtualHost ) -> Integer.compare( otherVirtualHost.length(), virtualHost.length() ) ).\n+                thenComparing( VirtualHost::getSource ) ).\n+            collect( Collectors.toList() );\n     }\n \n     private VirtualHostMapping buildMapping( final String name )\n"}}, {"oid": "c0a4b25562cc931135dc4e4c6936ad0b649bdb75", "url": "https://github.com/enonic/xp/commit/c0a4b25562cc931135dc4e4c6936ad0b649bdb75", "message": "Extend VHost API #8374", "committedDate": "2020-09-22T10:29:16Z", "type": "forcePushed"}, {"oid": "e8f5faee478837e3d6229c0a4187038cf1b150eb", "url": "https://github.com/enonic/xp/commit/e8f5faee478837e3d6229c0a4187038cf1b150eb", "message": "Extend VHost API #8374", "committedDate": "2020-09-22T13:01:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyNTUzMA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492725530", "bodyText": "List.of()", "author": "rymsha", "createdAt": "2020-09-22T13:18:16Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java", "diffHunk": "@@ -1,28 +1,31 @@\n package com.enonic.xp.web.vhost.impl.config;\n \n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Map;\n \n import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.enonic.xp.web.vhost.impl.mapping.VirtualHostMappings;\n+import com.enonic.xp.web.vhost.VirtualHost;\n+import com.enonic.xp.web.vhost.VirtualHostService;\n \n @Component(immediate = true, configurationPid = \"com.enonic.xp.web.vhost\")\n-public final class VirtualHostConfigImpl\n-    implements VirtualHostConfig\n+public final class VirtualHostServiceImpl\n+    implements VirtualHostService\n {\n-    private static final Logger LOG = LoggerFactory.getLogger( VirtualHostConfigImpl.class );\n+    private static final Logger LOG = LoggerFactory.getLogger( VirtualHostServiceImpl.class );\n \n     private boolean enabled;\n \n-    private VirtualHostMappings mappings;\n+    private List<VirtualHost> virtualHosts;\n \n-    public VirtualHostConfigImpl()\n+    public VirtualHostServiceImpl()\n     {\n         this.enabled = false;\n-        this.mappings = new VirtualHostMappings();\n+        this.virtualHosts = new ArrayList<>();", "originalCommit": "e8f5faee478837e3d6229c0a4187038cf1b150eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MzY0Mw==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492763643", "bodyText": "done", "author": "anatol-sialitski", "createdAt": "2020-09-22T14:07:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyNTUzMA=="}], "type": "inlineReview", "revised_code": {"commit": "6204ac94e066c29d886cceedc2db422e47cde0a0", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\nindex b183a7f111..a564ffa457 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\n\n@@ -25,7 +25,7 @@ public final class VirtualHostServiceImpl\n     public VirtualHostServiceImpl()\n     {\n         this.enabled = false;\n-        this.virtualHosts = new ArrayList<>();\n+        this.virtualHosts = List.of();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyNzcwOA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492727708", "bodyText": "List.copyOf(configMap.buildMappings())", "author": "rymsha", "createdAt": "2020-09-22T13:21:26Z", "path": "modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java", "diffHunk": "@@ -32,17 +35,17 @@ public boolean isEnabled()\n     }\n \n     @Override\n-    public VirtualHostMappings getMappings()\n+    public List<VirtualHost> getVirtualHosts()\n     {\n-        return this.mappings;\n+        return this.virtualHosts;\n     }\n \n     @Activate\n     public void configure( final Map<String, String> config )\n     {\n         final VirtualHostConfigMap configMap = new VirtualHostConfigMap( config );\n         this.enabled = configMap.isEnabled();\n-        this.mappings = configMap.buildMappings();\n+        this.virtualHosts = configMap.buildMappings();", "originalCommit": "e8f5faee478837e3d6229c0a4187038cf1b150eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc2MzcxMA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r492763710", "bodyText": "done", "author": "anatol-sialitski", "createdAt": "2020-09-22T14:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyNzcwOA=="}], "type": "inlineReview", "revised_code": {"commit": "6204ac94e066c29d886cceedc2db422e47cde0a0", "chunk": "diff --git a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\nindex b183a7f111..a564ffa457 100644\n--- a/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\n+++ b/modules/web/web-vhost/src/main/java/com/enonic/xp/web/vhost/impl/config/VirtualHostServiceImpl.java\n\n@@ -45,7 +45,7 @@ public final class VirtualHostServiceImpl\n     {\n         final VirtualHostConfigMap configMap = new VirtualHostConfigMap( config );\n         this.enabled = configMap.isEnabled();\n-        this.virtualHosts = configMap.buildMappings();\n+        this.virtualHosts = List.copyOf( configMap.buildMappings() );\n \n         if ( this.enabled )\n         {\n"}}, {"oid": "6204ac94e066c29d886cceedc2db422e47cde0a0", "url": "https://github.com/enonic/xp/commit/6204ac94e066c29d886cceedc2db422e47cde0a0", "message": "Extend VHost API #8374", "committedDate": "2020-09-22T13:57:51Z", "type": "forcePushed"}, {"oid": "9222f40a5c720dca2487cb4db8247a8485124c55", "url": "https://github.com/enonic/xp/commit/9222f40a5c720dca2487cb4db8247a8485124c55", "message": "Extend VHost API #8374", "committedDate": "2020-09-22T14:10:18Z", "type": "forcePushed"}, {"oid": "f2a6cbc8942442fa4e4ef3199dd9efc405dedd1f", "url": "https://github.com/enonic/xp/commit/f2a6cbc8942442fa4e4ef3199dd9efc405dedd1f", "message": "Extend VHost API #8374", "committedDate": "2020-09-23T07:54:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMxMzIyMA==", "url": "https://github.com/enonic/xp/pull/8389#discussion_r493313220", "bodyText": "move to VirtualHostInternalHelper", "author": "rymsha", "createdAt": "2020-09-23T08:34:32Z", "path": "modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostResolver.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.enonic.xp.web.vhost;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public interface VirtualHostResolver\n+{\n+\n+    VirtualHost resolveVirtualHost( final HttpServletRequest req );\n+\n+    String getFullTargetPath( final VirtualHost virtualHost, final HttpServletRequest req );", "originalCommit": "f2a6cbc8942442fa4e4ef3199dd9efc405dedd1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64405ab713e3d7722d1af75676f1a0e7f312866e", "chunk": "diff --git a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostResolver.java b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostResolver.java\nindex 6b5934f8ba..249f4a0599 100644\n--- a/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostResolver.java\n+++ b/modules/web/web-api/src/main/java/com/enonic/xp/web/vhost/VirtualHostResolver.java\n\n@@ -10,6 +10,4 @@ public interface VirtualHostResolver\n \n     VirtualHost resolveVirtualHost( final HttpServletRequest req );\n \n-    String getFullTargetPath( final VirtualHost virtualHost, final HttpServletRequest req );\n-\n }\n"}}, {"oid": "64405ab713e3d7722d1af75676f1a0e7f312866e", "url": "https://github.com/enonic/xp/commit/64405ab713e3d7722d1af75676f1a0e7f312866e", "message": "Extend VHost API #8374", "committedDate": "2020-09-24T08:16:34Z", "type": "commit"}, {"oid": "64405ab713e3d7722d1af75676f1a0e7f312866e", "url": "https://github.com/enonic/xp/commit/64405ab713e3d7722d1af75676f1a0e7f312866e", "message": "Extend VHost API #8374", "committedDate": "2020-09-24T08:16:34Z", "type": "forcePushed"}]}