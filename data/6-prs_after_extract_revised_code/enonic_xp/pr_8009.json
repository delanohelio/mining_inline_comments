{"pr_number": 8009, "pr_title": "Allow project owner role to change site config #8005", "pr_createdAt": "2020-04-07T10:26:13Z", "pr_url": "https://github.com/enonic/xp/pull/8009", "timeline": [{"oid": "ea541fef343512c8fef17d964c5c9600ce66e1a4", "url": "https://github.com/enonic/xp/commit/ea541fef343512c8fef17d964c5c9600ce66e1a4", "message": "Allow project owner role to change site config #8005", "committedDate": "2020-04-07T14:04:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg2MzIyMQ==", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404863221", "bodyText": "@vbradnitski why this method always returns null?", "author": "anatol-sialitski", "createdAt": "2020-04-07T14:41:15Z", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java", "diffHunk": "@@ -51,38 +49,33 @@ public ProcessUpdateResult processUpdate( final ProcessUpdateParams params )\n         final SiteConfigs editedSiteConfigs = editedSite.getSiteConfigs();\n         final Site originalSite = (Site) params.getOriginalContent();\n         final SiteConfigs originalSiteConfigs = originalSite.getSiteConfigs();\n-        final User modifier = params.getModifier();\n \n-        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) && !this.hasContentAdminRole( modifier ) )\n+        final Context context = ContextAccessor.current();\n+        final AuthenticationInfo authenticationInfo = context.getAuthInfo();\n+        final ProjectName projectName = ProjectName.from( context.getRepositoryId() );\n+\n+        if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) )\n         {\n-            throw new RoleRequiredException( modifier.getKey(), RoleKeys.ADMIN, RoleKeys.CONTENT_MANAGER_ADMIN );\n+            if ( !this.projectPermissionsContextManager.hasAdminAccess( authenticationInfo ) )\n+            {\n+                if ( ProjectConstants.DEFAULT_PROJECT_NAME.equals( projectName ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey() );\n+                }\n+                else if ( !this.projectPermissionsContextManager.hasAnyProjectPermission( projectName, authenticationInfo,\n+                                                                                          Set.of( ProjectRole.OWNER ) ) )\n+                {\n+                    throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey(), ProjectRole.OWNER );\n+                }\n+            }\n         }\n \n         return null;", "originalCommit": "ea541fef343512c8fef17d964c5c9600ce66e1a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTExMTM5OA==", "url": "https://github.com/enonic/xp/pull/8009#discussion_r405111398", "bodyText": "It's a processor, which called during create/update methods in a queue of similar classes. So it should check authInfo and throw an exception if it doesn't contain project role. Result of this particular processor is never used.", "author": "vbradnitski", "createdAt": "2020-04-07T21:03:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg2MzIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "28e222ce6115ec7a197d75eec721d915593630b9", "chunk": "diff --git a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java\nindex 7f87777fe5..6ea8f93619 100644\n--- a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java\n+++ b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectAccessSiteProcessor.java\n\n@@ -56,14 +56,14 @@ public final class ProjectAccessSiteProcessor\n \n         if ( !Objects.equals( originalSiteConfigs, editedSiteConfigs ) )\n         {\n-            if ( !this.projectPermissionsContextManager.hasAdminAccess( authenticationInfo ) )\n+            if ( !ProjectAccessHelper.hasAdminAccess( authenticationInfo ) )\n             {\n                 if ( ProjectConstants.DEFAULT_PROJECT_NAME.equals( projectName ) )\n                 {\n                     throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey() );\n                 }\n-                else if ( !this.projectPermissionsContextManager.hasAnyProjectPermission( projectName, authenticationInfo,\n-                                                                                          Set.of( ProjectRole.OWNER ) ) )\n+                else if ( !this.projectPermissionsContextManager.hasAnyProjectRole( authenticationInfo, projectName,\n+                                                                                    Set.of( ProjectRole.OWNER ) ) )\n                 {\n                     throw new ProjectAccessRequiredException( authenticationInfo.getUser().getKey(), ProjectRole.OWNER );\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MDQ5MA==", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404950490", "bodyText": "hasAnyProjectRole and change arguments order\nMove way all other has methods", "author": "rymsha", "createdAt": "2020-04-07T16:34:33Z", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "diffHunk": "@@ -22,5 +25,7 @@\n \n     boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo );\n \n+    boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,", "originalCommit": "ea541fef343512c8fef17d964c5c9600ce66e1a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28e222ce6115ec7a197d75eec721d915593630b9", "chunk": "diff --git a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java\nindex 36e8374c5d..e9a3b97812 100644\n--- a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java\n+++ b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java\n\n@@ -19,13 +19,6 @@ public interface ProjectPermissionsContextManager\n \n     Context initUpdateContext( final ProjectName projectName );\n \n-    boolean hasAdminAccess( final AuthenticationInfo authenticationInfo );\n-\n-    boolean hasManagerAccess( final AuthenticationInfo authenticationInfo );\n-\n-    boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo );\n-\n-    boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,\n-                                     final Set<ProjectRole> projectRoles );\n-\n+    boolean hasAnyProjectRole( final AuthenticationInfo authenticationInfo, final ProjectName projectName,\n+                               final Set<ProjectRole> projectRoles );\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MjkzOA==", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404952938", "bodyText": "We decided to use hasRole method of AuthInfo but it means that internally service must know how to construct project role names correctly - which should be done in another class (to share logic)", "author": "rymsha", "createdAt": "2020-04-07T16:38:18Z", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java", "diffHunk": "@@ -124,27 +124,18 @@ public boolean hasAnyProjectPermission( final ProjectName projectName, final Aut\n                                        ProjectRole.VIEWER ) );\n     }\n \n-    private boolean hasAdminProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n-    {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.OWNER ) );\n-    }\n-\n-    private boolean hasEditorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n-    {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.EDITOR ) );\n-    }\n-\n-    private boolean hasAuthorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n+    @Override\n+    public boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,\n+                                            final Set<ProjectRole> projectRoles )\n     {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.AUTHOR ) );\n+        return hasPermissions( projectName, authenticationInfo, projectRoles );\n     }\n \n-    private boolean hasContributorProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n+    private boolean hasOwnerProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n     {\n-        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.CONTRIBUTOR ) );\n+        return hasPermissions( projectName, authenticationInfo, Set.of( ProjectRole.OWNER ) );", "originalCommit": "ea541fef343512c8fef17d964c5c9600ce66e1a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28e222ce6115ec7a197d75eec721d915593630b9", "chunk": "diff --git a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java\nindex 401a7cada4..a7c9d86ecd 100644\n--- a/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java\n+++ b/modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManagerImpl.java\n\n@@ -105,28 +97,8 @@ public final class ProjectPermissionsContextManagerImpl\n     }\n \n     @Override\n-    public boolean hasAdminAccess( final AuthenticationInfo authenticationInfo )\n-    {\n-        return ADMIN_ACCESS.stream().anyMatch( authenticationInfo::hasRole );\n-    }\n-\n-    @Override\n-    public boolean hasManagerAccess( final AuthenticationInfo authenticationInfo )\n-    {\n-        return MANAGER_ACCESS.stream().anyMatch( authenticationInfo::hasRole );\n-    }\n-\n-    @Override\n-    public boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo )\n-    {\n-        return hasPermissions( projectName, authenticationInfo,\n-                               Set.of( ProjectRole.OWNER, ProjectRole.EDITOR, ProjectRole.AUTHOR, ProjectRole.CONTRIBUTOR,\n-                                       ProjectRole.VIEWER ) );\n-    }\n-\n-    @Override\n-    public boolean hasAnyProjectPermission( final ProjectName projectName, final AuthenticationInfo authenticationInfo,\n-                                            final Set<ProjectRole> projectRoles )\n+    public boolean hasAnyProjectRole( final AuthenticationInfo authenticationInfo, final ProjectName projectName,\n+                                      final Set<ProjectRole> projectRoles )\n     {\n         return hasPermissions( projectName, authenticationInfo, projectRoles );\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDYxOA==", "url": "https://github.com/enonic/xp/pull/8009#discussion_r404954618", "bodyText": "Maybe better to call it ProjectSecurityService and move away \"context\" logic", "author": "rymsha", "createdAt": "2020-04-07T16:40:47Z", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/ProjectPermissionsContextManager.java", "diffHunk": "@@ -1,7 +1,10 @@\n package com.enonic.xp.core.impl.project;\n \n+import java.util.Set;\n+\n import com.enonic.xp.context.Context;\n import com.enonic.xp.project.ProjectName;\n+import com.enonic.xp.project.ProjectRole;\n import com.enonic.xp.security.auth.AuthenticationInfo;\n \n public interface ProjectPermissionsContextManager", "originalCommit": "ea541fef343512c8fef17d964c5c9600ce66e1a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "28e222ce6115ec7a197d75eec721d915593630b9", "url": "https://github.com/enonic/xp/commit/28e222ce6115ec7a197d75eec721d915593630b9", "message": "Allow project owner role to change site config #8005", "committedDate": "2020-04-07T20:56:28Z", "type": "commit"}, {"oid": "28e222ce6115ec7a197d75eec721d915593630b9", "url": "https://github.com/enonic/xp/commit/28e222ce6115ec7a197d75eec721d915593630b9", "message": "Allow project owner role to change site config #8005", "committedDate": "2020-04-07T20:56:28Z", "type": "forcePushed"}]}