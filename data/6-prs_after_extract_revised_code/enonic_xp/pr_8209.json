{"pr_number": 8209, "pr_title": "Sync content immediately when content from parent project ready #8181", "pr_createdAt": "2020-07-08T15:01:43Z", "pr_url": "https://github.com/enonic/xp/pull/8209", "timeline": [{"oid": "c9b89485f536900265c99cfcf07f774534b2319e", "url": "https://github.com/enonic/xp/commit/c9b89485f536900265c99cfcf07f774534b2319e", "message": "Sync content immediately when content from parent project ready #8181", "committedDate": "2020-07-09T12:49:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIwMjYxMg==", "url": "https://github.com/enonic/xp/pull/8209#discussion_r452202612", "bodyText": "Offload loops and heavy tasks into a separate thread (it still need to be in order, so for now single threaded thread pool would work)", "author": "rymsha", "createdAt": "2020-07-09T13:06:41Z", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectNodeEventListener.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package com.enonic.xp.core.impl.project;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.enonic.xp.content.ContentConstants;\n+import com.enonic.xp.content.ContentId;\n+import com.enonic.xp.content.ContentService;\n+import com.enonic.xp.context.Context;\n+import com.enonic.xp.context.ContextBuilder;\n+import com.enonic.xp.event.Event;\n+import com.enonic.xp.event.EventListener;\n+import com.enonic.xp.project.Project;\n+import com.enonic.xp.project.ProjectName;\n+import com.enonic.xp.project.ProjectService;\n+import com.enonic.xp.repository.RepositoryId;\n+import com.enonic.xp.security.PrincipalKey;\n+import com.enonic.xp.security.RoleKeys;\n+import com.enonic.xp.security.User;\n+import com.enonic.xp.security.auth.AuthenticationInfo;\n+\n+@Component(immediate = true)\n+public class ProjectNodeEventListener\n+    implements EventListener\n+{\n+    private final static Logger LOG = LoggerFactory.getLogger( ProjectNodeEventListener.class );\n+\n+    private ProjectService projectService;\n+\n+    private ContentService contentService;\n+\n+    @Override\n+    public void onEvent( final Event event )\n+    {\n+        if ( event != null )\n+        {\n+            createAdminContext().runWith( () -> doHandleEvent( event ) );\n+        }\n+    }\n+\n+    private void doHandleEvent( final Event event )\n+    {\n+        final String type = event.getType();\n+\n+        switch ( type )\n+        {\n+            case \"node.created\":\n+                handleEventType( event );\n+                break;\n+            case \"node.updated\":\n+                handleEventType( event );\n+                break;\n+        }\n+    }\n+\n+    private void handleEventType( final Event event )\n+    {\n+        try\n+        {\n+            final List<Map<String, String>> nodes = (List<Map<String, String>>) event.getData().get( \"nodes\" );\n+\n+            nodes.forEach( nodeMap -> {\n+                if ( nodeMap.get( \"path\" ).startsWith( \"/content/\" ) )\n+                {\n+                    final ProjectName currentProjectName = ProjectName.from( RepositoryId.from( nodeMap.get( \"repo\" ) ) );\n+\n+                    final Project sourceProject = this.projectService.list().\n+                        stream().\n+                        filter( project -> currentProjectName.equals( project.getName() ) ).\n+                        findAny().\n+                        orElse( null );\n+\n+                    this.projectService.list().\n+                        stream().\n+                        filter( project -> currentProjectName.equals( project.getParent() ) ).\n+                        forEach( targetProject -> {", "originalCommit": "c9b89485f536900265c99cfcf07f774534b2319e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9adacce73fe666c2f0156f751a9daa4a82954b10", "chunk": "diff --git a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectNodeEventListener.java b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectNodeEventListener.java\nindex 8e78f175ae..2a97d28b17 100644\n--- a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectNodeEventListener.java\n+++ b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectNodeEventListener.java\n\n@@ -2,7 +2,9 @@ package com.enonic.xp.core.impl.project;\n \n import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.Executors;\n \n+import org.osgi.service.component.annotations.Activate;\n import org.osgi.service.component.annotations.Component;\n import org.osgi.service.component.annotations.Reference;\n import org.slf4j.Logger;\n"}}, {"oid": "9adacce73fe666c2f0156f751a9daa4a82954b10", "url": "https://github.com/enonic/xp/commit/9adacce73fe666c2f0156f751a9daa4a82954b10", "message": "Sync content immediately when content from parent project ready #8181", "committedDate": "2020-07-09T13:52:56Z", "type": "forcePushed"}, {"oid": "bde4b9ae79afacbd0aea4898f9372733cc30a0cc", "url": "https://github.com/enonic/xp/commit/bde4b9ae79afacbd0aea4898f9372733cc30a0cc", "message": "Sync content immediately when content from parent project ready #8181", "committedDate": "2020-07-09T14:08:52Z", "type": "commit"}, {"oid": "bde4b9ae79afacbd0aea4898f9372733cc30a0cc", "url": "https://github.com/enonic/xp/commit/bde4b9ae79afacbd0aea4898f9372733cc30a0cc", "message": "Sync content immediately when content from parent project ready #8181", "committedDate": "2020-07-09T14:08:52Z", "type": "forcePushed"}]}