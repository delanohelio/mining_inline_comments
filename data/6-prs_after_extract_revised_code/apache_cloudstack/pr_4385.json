{"pr_number": 4385, "pr_title": "vmware: vm migration improvements", "pr_createdAt": "2020-10-06T09:26:20Z", "pr_url": "https://github.com/apache/cloudstack/pull/4385", "timeline": [{"oid": "ceb16c20dfa221533258c7542e2776dfc6845bba", "url": "https://github.com/apache/cloudstack/commit/ceb16c20dfa221533258c7542e2776dfc6845bba", "message": "vmware: migration improvements\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-01T21:16:44Z", "type": "commit"}, {"oid": "1fa0c79750038673a72b1c75e0d67b72f10b5847", "url": "https://github.com/apache/cloudstack/commit/1fa0c79750038673a72b1c75e0d67b72f10b5847", "message": "ui changes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-05T08:21:39Z", "type": "commit"}, {"oid": "c41d5fba6a0e6c0bfda77ebf0465445a4cb86986", "url": "https://github.com/apache/cloudstack/commit/c41d5fba6a0e6c0bfda77ebf0465445a4cb86986", "message": "null hypervisor check\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-05T10:08:26Z", "type": "commit"}, {"oid": "003af0e77d26be14e1571fd8dd3e145073ed3da4", "url": "https://github.com/apache/cloudstack/commit/003af0e77d26be14e1571fd8dd3e145073ed3da4", "message": "review changes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-06T07:15:28Z", "type": "commit"}, {"oid": "6aad7a7600c8264d61a623ef5f4f5d68818131ba", "url": "https://github.com/apache/cloudstack/commit/6aad7a7600c8264d61a623ef5f4f5d68818131ba", "message": "review changes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-06T09:14:53Z", "type": "commit"}, {"oid": "341a69fe389e5925fcd2d23dbf73c175d5502a1c", "url": "https://github.com/apache/cloudstack/commit/341a69fe389e5925fcd2d23dbf73c175d5502a1c", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-06T11:22:36Z", "type": "commit"}, {"oid": "503ae44e18fca578d4733bdbc50a9db789fa15e3", "url": "https://github.com/apache/cloudstack/commit/503ae44e18fca578d4733bdbc50a9db789fa15e3", "message": "fixes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-10-07T12:38:27Z", "type": "commit"}, {"oid": "d2a2ec53cddcd132e038d2a762d9441a7bd74efc", "url": "https://github.com/apache/cloudstack/commit/d2a2ec53cddcd132e038d2a762d9441a7bd74efc", "message": "Merge branch 'master' into vmware-migration-improvements\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-03T09:02:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2MTY5Nw==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r520461697", "bodyText": "check that split has two length", "author": "rhtyd", "createdAt": "2020-11-10T10:40:37Z", "path": "vmware-base/src/main/java/com/cloud/hypervisor/vmware/util/VmwareHelper.java", "diffHunk": "@@ -744,4 +744,18 @@ public static XMLGregorianCalendar getXMLGregorianCalendar(final Date date, fina\n         return DatatypeFactory.newInstance().newXMLGregorianCalendar(gregorianCalendar);\n     }\n \n+    public static HostMO getHostMOFromHostName(final VmwareContext context, final String hostName) {\n+        HostMO host = null;\n+        if (com.cloud.utils.StringUtils.isNotBlank(hostName) && hostName.contains(\"@\")) {\n+            String hostMorInfo = hostName.split(\"@\")[0];\n+            if (hostMorInfo.contains(\":\")) {\n+                ManagedObjectReference morHost = new ManagedObjectReference();\n+                morHost.setType(hostMorInfo.split(\":\")[0]);\n+                morHost.setValue(hostMorInfo.split(\":\")[1]);\n+                host = new HostMO(context, morHost);", "originalCommit": "d2a2ec53cddcd132e038d2a762d9441a7bd74efc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyODc1Ng==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r527628756", "bodyText": "@rhtyd did that at line 751", "author": "shwstppr", "createdAt": "2020-11-20T11:26:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ2MTY5Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "45ad746bdc749ea508a970893a5ee965ad659773", "url": "https://github.com/apache/cloudstack/commit/45ad746bdc749ea508a970893a5ee965ad659773", "message": "fix volume migration\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-13T09:34:38Z", "type": "commit"}, {"oid": "39683d8998c106a8b640d64021ec2a47cfdfe7d5", "url": "https://github.com/apache/cloudstack/commit/39683d8998c106a8b640d64021ec2a47cfdfe7d5", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-13T09:35:47Z", "type": "commit"}, {"oid": "74f85ba25e7daf1803fee090b3b73aa8ed203732", "url": "https://github.com/apache/cloudstack/commit/74f85ba25e7daf1803fee090b3b73aa8ed203732", "message": "fix datastore type getter\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-13T11:45:02Z", "type": "commit"}, {"oid": "9b1e0f67bd5e6de1ef424c924378c9a18cdff0e6", "url": "https://github.com/apache/cloudstack/commit/9b1e0f67bd5e6de1ef424c924378c9a18cdff0e6", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-17T06:27:05Z", "type": "commit"}, {"oid": "d409b3b97f5a97f185da2b10d3db792b4a0f7a40", "url": "https://github.com/apache/cloudstack/commit/d409b3b97f5a97f185da2b10d3db792b4a0f7a40", "message": "log\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-18T09:24:02Z", "type": "commit"}, {"oid": "2039b5589c25766f702212ed290bf12536a73a46", "url": "https://github.com/apache/cloudstack/commit/2039b5589c25766f702212ed290bf12536a73a46", "message": "get host hardware version\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-18T10:54:04Z", "type": "commit"}, {"oid": "aee302b79b9e2c96c0f4dfbdf309eb4b2d569e3f", "url": "https://github.com/apache/cloudstack/commit/aee302b79b9e2c96c0f4dfbdf309eb4b2d569e3f", "message": "add newer version\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-18T12:20:41Z", "type": "commit"}, {"oid": "98246835a7dd03ba11d03974548ed75b85ffef8a", "url": "https://github.com/apache/cloudstack/commit/98246835a7dd03ba11d03974548ed75b85ffef8a", "message": "retrieve hardwareVersion from sdk\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-18T14:50:09Z", "type": "commit"}, {"oid": "4419ce6758a2fcd35aa38e4c654520a9070f8dbd", "url": "https://github.com/apache/cloudstack/commit/4419ce6758a2fcd35aa38e4c654520a9070f8dbd", "message": "revert to hardwareversion mapping\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-19T04:51:58Z", "type": "commit"}, {"oid": "4085a14b8c2417e4ad2494e9ff92088ec9cb53af", "url": "https://github.com/apache/cloudstack/commit/4085a14b8c2417e4ad2494e9ff92088ec9cb53af", "message": "fix ui\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-19T07:30:32Z", "type": "commit"}, {"oid": "dd7825f2a7765ab308f7c900f134124259b7b7c5", "url": "https://github.com/apache/cloudstack/commit/dd7825f2a7765ab308f7c900f134124259b7b7c5", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-19T07:46:06Z", "type": "commit"}, {"oid": "9ca75f04c6164bbdde05a7712e6c4933a456e683", "url": "https://github.com/apache/cloudstack/commit/9ca75f04c6164bbdde05a7712e6c4933a456e683", "message": "changes for system vm\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-20T05:07:46Z", "type": "commit"}, {"oid": "919c5dd8f25db8ba510115386a790298301b95b0", "url": "https://github.com/apache/cloudstack/commit/919c5dd8f25db8ba510115386a790298301b95b0", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-20T05:22:09Z", "type": "commit"}, {"oid": "8f6b1d16b4b44336cfe70d0eb6979742fb314172", "url": "https://github.com/apache/cloudstack/commit/8f6b1d16b4b44336cfe70d0eb6979742fb314172", "message": "fix npe on defaultnic\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-20T10:42:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzMDYxNQ==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r527630615", "bodyText": "@nvazquez @rhtyd @sureshanaparti can you please comment if this is okay. As per our interactions, I tried to get host harwdwareVersion using SDK but it still returns null. By default, VMware is creating VM with highest available hardwareVersion which creates an issue while migrating detached disks across cluster", "author": "shwstppr", "createdAt": "2020-11-20T11:30:35Z", "path": "vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java", "diffHunk": "@@ -2207,4 +2208,44 @@ public static void createBaseFolderInDatastore(DatastoreMO dsMo, VmwareHyperviso\n             dsMo.makeDirectory(hiddenFolderPath, hyperHost.getHyperHostDatacenter());\n         }\n     }\n+\n+    public static Integer getHostHardwareVersion(VmwareHypervisorHost host) {\n+        Integer version = null;\n+        HostMO hostMo = new HostMO(host.getContext(), host.getMor());\n+        ComputeResourceConfigInfo info = null;\n+        try {\n+            info = hostMo.getHostConfigInfo();\n+        } catch (Exception ignored) {}\n+        if (info != null) {\n+            version = Integer.valueOf(info.getDefaultHardwareVersionKey());\n+        } else {\n+            String hostApiVersion = \"\";\n+            try {\n+                hostApiVersion = hostMo.getHostAboutInfo().getApiVersion();\n+            } catch (Exception ignored) {}\n+            if (hostApiVersion == null) {\n+                hostApiVersion = \"\";\n+            }\n+            if (hostApiVersion.equalsIgnoreCase(\"7.0\")) {\n+                version = 17;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"6.7\")) {\n+                version = 14;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"6.5\")) {\n+                version = 13;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"6.0\")) {\n+                version = 11;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"5.5\")) {\n+                version = 10;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"5.1\")) {\n+                version = 9;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"5.0\")) {\n+                version = 8;\n+            } else if (hostApiVersion.startsWith(\"4.\")) {\n+                version = 7;\n+            } else if (hostApiVersion.equalsIgnoreCase(\"3.5\")) {", "originalCommit": "8f6b1d16b4b44336cfe70d0eb6979742fb314172", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c765b87556bd8c8fd4f25ee5b66d6a325d74ca65", "chunk": "diff --git a/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java b/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\nindex 7d750fa07d..1c995d3bac 100644\n--- a/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\n+++ b/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\n\n@@ -2212,39 +2211,31 @@ public class HypervisorHostHelper {\n     public static Integer getHostHardwareVersion(VmwareHypervisorHost host) {\n         Integer version = null;\n         HostMO hostMo = new HostMO(host.getContext(), host.getMor());\n-        ComputeResourceConfigInfo info = null;\n+        String hostApiVersion = \"\";\n         try {\n-            info = hostMo.getHostConfigInfo();\n+            hostApiVersion = hostMo.getHostAboutInfo().getApiVersion();\n         } catch (Exception ignored) {}\n-        if (info != null) {\n-            version = Integer.valueOf(info.getDefaultHardwareVersionKey());\n-        } else {\n-            String hostApiVersion = \"\";\n-            try {\n-                hostApiVersion = hostMo.getHostAboutInfo().getApiVersion();\n-            } catch (Exception ignored) {}\n-            if (hostApiVersion == null) {\n-                hostApiVersion = \"\";\n-            }\n-            if (hostApiVersion.equalsIgnoreCase(\"7.0\")) {\n-                version = 17;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"6.7\")) {\n-                version = 14;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"6.5\")) {\n-                version = 13;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"6.0\")) {\n-                version = 11;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"5.5\")) {\n-                version = 10;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"5.1\")) {\n-                version = 9;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"5.0\")) {\n-                version = 8;\n-            } else if (hostApiVersion.startsWith(\"4.\")) {\n-                version = 7;\n-            } else if (hostApiVersion.equalsIgnoreCase(\"3.5\")) {\n-                version = 4;\n-            }\n+        if (hostApiVersion == null) {\n+            hostApiVersion = \"\";\n+        }\n+        if (hostApiVersion.equalsIgnoreCase(\"7.0\")) {\n+            version = 17;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.7\")) {\n+            version = 14;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.5\")) {\n+            version = 13;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.0\")) {\n+            version = 11;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.5\")) {\n+            version = 10;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.1\")) {\n+            version = 9;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.0\")) {\n+            version = 8;\n+        } else if (hostApiVersion.startsWith(\"4.\")) {\n+            version = 7;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"3.5\")) {\n+            version = 4;\n         }\n         return version;\n     }\n"}}, {"oid": "c765b87556bd8c8fd4f25ee5b66d6a325d74ca65", "url": "https://github.com/apache/cloudstack/commit/c765b87556bd8c8fd4f25ee5b66d6a325d74ca65", "message": "revert SDK configurationEx property changes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-20T12:55:42Z", "type": "commit"}, {"oid": "d50e3acd4b854d7f52244eeb64c43588ee5ef2be", "url": "https://github.com/apache/cloudstack/commit/d50e3acd4b854d7f52244eeb64c43588ee5ef2be", "message": "Merge branch 'master' into vmware-migration-improvements\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-11-20T13:22:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4NTc3NQ==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r528885775", "bodyText": "@shwstppr is it possible move this to a static map with hypervisor version & its hardware version, in this helper class ? so that it will be easy to maintain and access these versions across the VMware resource.", "author": "sureshanaparti", "createdAt": "2020-11-23T17:44:21Z", "path": "vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java", "diffHunk": "@@ -2207,4 +2207,36 @@ public static void createBaseFolderInDatastore(DatastoreMO dsMo, VmwareHyperviso\n             dsMo.makeDirectory(hiddenFolderPath, hyperHost.getHyperHostDatacenter());\n         }\n     }\n+\n+    public static Integer getHostHardwareVersion(VmwareHypervisorHost host) {\n+        Integer version = null;\n+        HostMO hostMo = new HostMO(host.getContext(), host.getMor());\n+        String hostApiVersion = \"\";\n+        try {\n+            hostApiVersion = hostMo.getHostAboutInfo().getApiVersion();\n+        } catch (Exception ignored) {}\n+        if (hostApiVersion == null) {\n+            hostApiVersion = \"\";\n+        }\n+        if (hostApiVersion.equalsIgnoreCase(\"7.0\")) {\n+            version = 17;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.7\")) {\n+            version = 14;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.5\")) {\n+            version = 13;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"6.0\")) {\n+            version = 11;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.5\")) {\n+            version = 10;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.1\")) {\n+            version = 9;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"5.0\")) {\n+            version = 8;\n+        } else if (hostApiVersion.startsWith(\"4.\")) {\n+            version = 7;\n+        } else if (hostApiVersion.equalsIgnoreCase(\"3.5\")) {\n+            version = 4;\n+        }\n+        return version;", "originalCommit": "d50e3acd4b854d7f52244eeb64c43588ee5ef2be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE4OTIwNA==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r530189204", "bodyText": "@sureshanaparti will look into that", "author": "shwstppr", "createdAt": "2020-11-25T08:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4NTc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ1NDE5NA==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r537454194", "bodyText": "@sureshanaparti added change here, fa661f3\nplease check", "author": "shwstppr", "createdAt": "2020-12-07T12:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4NTc3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fa661f3e5fcbc127a700b663a84b774d134f2af1", "chunk": "diff --git a/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java b/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\nindex 1c995d3bac..0535e1f3dd 100644\n--- a/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\n+++ b/vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java\n\n@@ -2218,25 +2260,7 @@ public class HypervisorHostHelper {\n         if (hostApiVersion == null) {\n             hostApiVersion = \"\";\n         }\n-        if (hostApiVersion.equalsIgnoreCase(\"7.0\")) {\n-            version = 17;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"6.7\")) {\n-            version = 14;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"6.5\")) {\n-            version = 13;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"6.0\")) {\n-            version = 11;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"5.5\")) {\n-            version = 10;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"5.1\")) {\n-            version = 9;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"5.0\")) {\n-            version = 8;\n-        } else if (hostApiVersion.startsWith(\"4.\")) {\n-            version = 7;\n-        } else if (hostApiVersion.equalsIgnoreCase(\"3.5\")) {\n-            version = 4;\n-        }\n+        version = apiVersionHardwareVersionMap.get(hostApiVersion);\n         return version;\n     }\n }\n"}}, {"oid": "fa661f3e5fcbc127a700b663a84b774d134f2af1", "url": "https://github.com/apache/cloudstack/commit/fa661f3e5fcbc127a700b663a84b774d134f2af1", "message": "use static mapping for api version to hardware version\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-12-07T11:54:13Z", "type": "commit"}, {"oid": "0e07ff2d4a80146a133f92794040068c71c7fc9e", "url": "https://github.com/apache/cloudstack/commit/0e07ff2d4a80146a133f92794040068c71c7fc9e", "message": "Merge branch 'master' into vmware-migration-improvements", "committedDate": "2020-12-07T12:02:38Z", "type": "commit"}, {"oid": "a67382f3ebe0a5be8b55bccdb3ed678563e68827", "url": "https://github.com/apache/cloudstack/commit/a67382f3ebe0a5be8b55bccdb3ed678563e68827", "message": "Merge branch 'master' into vmware-migration-improvements", "committedDate": "2020-12-29T06:49:44Z", "type": "commit"}, {"oid": "131b5e06a7886b045d3089b20189742aa5a710c1", "url": "https://github.com/apache/cloudstack/commit/131b5e06a7886b045d3089b20189742aa5a710c1", "message": "fix systemvm migration with volume on zone-wide store\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-12-29T07:00:01Z", "type": "commit"}, {"oid": "102ceea0f47be25e04ad3492fed3906c1d0b92a0", "url": "https://github.com/apache/cloudstack/commit/102ceea0f47be25e04ad3492fed3906c1d0b92a0", "message": "fix\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2020-12-29T07:53:44Z", "type": "commit"}, {"oid": "892cdeb7857670f8e0c5357572fbc59f4c37b998", "url": "https://github.com/apache/cloudstack/commit/892cdeb7857670f8e0c5357572fbc59f4c37b998", "message": "fixes\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-01-04T10:54:42Z", "type": "commit"}, {"oid": "391fcf27a240b97ab7d3ee2110a15e9f5e584cb1", "url": "https://github.com/apache/cloudstack/commit/391fcf27a240b97ab7d3ee2110a15e9f5e584cb1", "message": "Merge branch 'master' into vmware-migration-improvements", "committedDate": "2021-01-12T10:45:27Z", "type": "commit"}, {"oid": "da7de1fe93a695e5e1ffb08431e7a15d82a3ea90", "url": "https://github.com/apache/cloudstack/commit/da7de1fe93a695e5e1ffb08431e7a15d82a3ea90", "message": "fix post hypervisor storage migration cleanup\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-01-12T10:52:39Z", "type": "commit"}, {"oid": "6220a60cdc9a6aec2a7609e15eacbf173660faac", "url": "https://github.com/apache/cloudstack/commit/6220a60cdc9a6aec2a7609e15eacbf173660faac", "message": "Merge branch 'master' into vmware-migration-improvements", "committedDate": "2021-01-22T10:27:48Z", "type": "commit"}, {"oid": "099d170d6c4202211ab55dcf8b091e8bb50973c2", "url": "https://github.com/apache/cloudstack/commit/099d170d6c4202211ab55dcf8b091e8bb50973c2", "message": "ui: moved over new ui changes from old repo\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-01-22T10:42:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQ2NDc2Nw==", "url": "https://github.com/apache/cloudstack/pull/4385#discussion_r564464767", "bodyText": "@shwstppr possible to optimise multiple checks for getHostId() and getStorageId() not null here ?", "author": "sureshanaparti", "createdAt": "2021-01-26T12:13:07Z", "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/MigrateSystemVMCmd.java", "diffHunk": "@@ -109,15 +122,43 @@ public String getEventDescription() {\n \n     @Override\n     public void execute() {\n+        if (getHostId() == null && getStorageId() == null) {\n+            throw new InvalidParameterValueException(\"Either hostId or storageId must be specified\");\n+        }\n \n-        Host destinationHost = _resourceService.getHost(getHostId());\n-        if (destinationHost == null) {\n-            throw new InvalidParameterValueException(\"Unable to find the host to migrate the VM, host id=\" + getHostId());\n+        if (getHostId() != null && getStorageId() != null) {\n+            throw new InvalidParameterValueException(\"Only one of hostId and storageId can be specified\");\n+        }\n+\n+        Host destinationHost = null;\n+        if (getHostId() != null) {\n+            destinationHost = _resourceService.getHost(getHostId());\n+            if (destinationHost == null) {\n+                throw new InvalidParameterValueException(\"Unable to find the host to migrate the VM, host id=\" + getHostId());\n+            }\n+            if (destinationHost.getType() != Host.Type.Routing) {\n+                throw new InvalidParameterValueException(\"The specified host(\" + destinationHost.getName() + \") is not suitable to migrate the VM, please specify another one\");\n+            }\n+            CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to host Id: \" + getHostId());\n+        }\n+\n+        // OfflineMigration performed when this parameter is specified\n+        StoragePool destStoragePool = null;\n+        if (getStorageId() != null) {\n+            destStoragePool = _storageService.getStoragePool(getStorageId());\n+            if (destStoragePool == null) {\n+                throw new InvalidParameterValueException(\"Unable to find the storage pool to migrate the VM\");\n+            }\n+            CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to storage pool Id: \" + getStorageId());\n         }\n         try {\n-            CallContext.current().setEventDetails(\"VM Id: \" + this._uuidMgr.getUuid(VirtualMachine.class, getVirtualMachineId()) + \" to host Id: \" + this._uuidMgr.getUuid(Host.class, getHostId()));\n             //FIXME : Should not be calling UserVmService to migrate all types of VMs - need a generic VM layer\n-            VirtualMachine migratedVm = _userVmService.migrateVirtualMachine(getVirtualMachineId(), destinationHost);\n+            VirtualMachine migratedVm = null;\n+            if (getHostId() != null) {\n+                migratedVm = _userVmService.migrateVirtualMachineWithVolume(getVirtualMachineId(), destinationHost, new HashMap<String, String>());\n+            } else if (getStorageId() != null) {\n+                migratedVm = _userVmService.vmStorageMigration(getVirtualMachineId(), destStoragePool);", "originalCommit": "099d170d6c4202211ab55dcf8b091e8bb50973c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a204e31f8947ecfa45ca4435a697deccee31f350", "chunk": "diff --git a/api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/MigrateSystemVMCmd.java b/api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/MigrateSystemVMCmd.java\nindex 7fc804f278..50129a580b 100644\n--- a/api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/MigrateSystemVMCmd.java\n+++ b/api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/MigrateSystemVMCmd.java\n\n@@ -129,34 +129,26 @@ public class MigrateSystemVMCmd extends BaseAsyncCmd {\n         if (getHostId() != null && getStorageId() != null) {\n             throw new InvalidParameterValueException(\"Only one of hostId and storageId can be specified\");\n         }\n-\n-        Host destinationHost = null;\n-        if (getHostId() != null) {\n-            destinationHost = _resourceService.getHost(getHostId());\n-            if (destinationHost == null) {\n-                throw new InvalidParameterValueException(\"Unable to find the host to migrate the VM, host id=\" + getHostId());\n-            }\n-            if (destinationHost.getType() != Host.Type.Routing) {\n-                throw new InvalidParameterValueException(\"The specified host(\" + destinationHost.getName() + \") is not suitable to migrate the VM, please specify another one\");\n-            }\n-            CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to host Id: \" + getHostId());\n-        }\n-\n-        // OfflineMigration performed when this parameter is specified\n-        StoragePool destStoragePool = null;\n-        if (getStorageId() != null) {\n-            destStoragePool = _storageService.getStoragePool(getStorageId());\n-            if (destStoragePool == null) {\n-                throw new InvalidParameterValueException(\"Unable to find the storage pool to migrate the VM\");\n-            }\n-            CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to storage pool Id: \" + getStorageId());\n-        }\n         try {\n             //FIXME : Should not be calling UserVmService to migrate all types of VMs - need a generic VM layer\n             VirtualMachine migratedVm = null;\n             if (getHostId() != null) {\n+                Host destinationHost = _resourceService.getHost(getHostId());\n+                if (destinationHost == null) {\n+                    throw new InvalidParameterValueException(\"Unable to find the host to migrate the VM, host id=\" + getHostId());\n+                }\n+                if (destinationHost.getType() != Host.Type.Routing) {\n+                    throw new InvalidParameterValueException(\"The specified host(\" + destinationHost.getName() + \") is not suitable to migrate the VM, please specify another one\");\n+                }\n+                CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to host Id: \" + getHostId());\n                 migratedVm = _userVmService.migrateVirtualMachineWithVolume(getVirtualMachineId(), destinationHost, new HashMap<String, String>());\n             } else if (getStorageId() != null) {\n+                // OfflineMigration performed when this parameter is specified\n+                StoragePool destStoragePool = _storageService.getStoragePool(getStorageId());\n+                if (destStoragePool == null) {\n+                    throw new InvalidParameterValueException(\"Unable to find the storage pool to migrate the VM\");\n+                }\n+                CallContext.current().setEventDetails(\"VM Id: \" + getVirtualMachineId() + \" to storage pool Id: \" + getStorageId());\n                 migratedVm = _userVmService.vmStorageMigration(getVirtualMachineId(), destStoragePool);\n             }\n             if (migratedVm != null) {\n"}}, {"oid": "a204e31f8947ecfa45ca4435a697deccee31f350", "url": "https://github.com/apache/cloudstack/commit/a204e31f8947ecfa45ca4435a697deccee31f350", "message": " refactor\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-01-27T12:33:50Z", "type": "commit"}, {"oid": "6a03a7cac91779a325ad64b1f16a38dfbfdd74be", "url": "https://github.com/apache/cloudstack/commit/6a03a7cac91779a325ad64b1f16a38dfbfdd74be", "message": "add missing file\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-02-01T07:12:51Z", "type": "commit"}, {"oid": "9f4fc907675549f1bdb95f886cb155937e80131a", "url": "https://github.com/apache/cloudstack/commit/9f4fc907675549f1bdb95f886cb155937e80131a", "message": "Merge branch 'master' into vmware-migration-improvements", "committedDate": "2021-02-03T06:09:36Z", "type": "commit"}, {"oid": "e73fa081464beefa2cf967bc60ecb6c519774e5d", "url": "https://github.com/apache/cloudstack/commit/e73fa081464beefa2cf967bc60ecb6c519774e5d", "message": "remove tag matching for user provided mappings\n\nThis is inline with master branch behaviour where tag matching is not done for volumes's disk offering and storage pool tags.\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>", "committedDate": "2021-02-03T06:12:24Z", "type": "commit"}]}