{"pr_number": 4294, "pr_title": "Create template from detached data-disks on VMWare", "pr_createdAt": "2020-08-28T06:23:23Z", "pr_url": "https://github.com/apache/cloudstack/pull/4294", "timeline": [{"oid": "5f66194d284ce04a63729112bf96f7de215a51b8", "url": "https://github.com/apache/cloudstack/commit/5f66194d284ce04a63729112bf96f7de215a51b8", "message": "Create template from detached data-disks on VMWare", "committedDate": "2020-08-28T06:13:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTExMg==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r478859112", "bodyText": "@Pearl1594 where are we destroying the worker VM?", "author": "rhtyd", "createdAt": "2020-08-28T06:32:14Z", "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1186,31 +1186,42 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n         String volumePath = volume.getPath();\n \n         String details = null;\n-\n+        VirtualMachineMO vmMo = null;\n         VmwareContext context = hostService.getServiceContext(cmd);\n         try {\n             VmwareHypervisorHost hyperHost = hostService.getHyperHost(context, cmd);\n-\n-            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n-            if (vmMo == null) {\n-                if (s_logger.isDebugEnabled()) {\n-                    s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n-                            \", try within datacenter\");\n-                }\n-                vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n-\n+            if (volume.getVmName() == null) {\n+                ManagedObjectReference secMorDs = HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost, volume.getDataStore().getUuid());\n+                DatastoreMO dsMo = new DatastoreMO(hyperHost.getContext(), secMorDs);\n+                VirtualMachineMO workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n+                if (workerVmMo == null) {\n+                    throw new Exception(\"Unable to find created worker VM\");\n+                }\n+                vmMo = workerVmMo;", "originalCommit": "5f66194d284ce04a63729112bf96f7de215a51b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f02268844edea9cd8dc1de357730a977912d8fdb", "chunk": "diff --git a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\nindex 6bad4c9e25..c93445e9bd 100644\n--- a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n+++ b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n\n@@ -1187,13 +1187,14 @@ public class VmwareStorageProcessor implements StorageProcessor {\n \n         String details = null;\n         VirtualMachineMO vmMo = null;\n+        VirtualMachineMO workerVmMo = null;\n         VmwareContext context = hostService.getServiceContext(cmd);\n         try {\n             VmwareHypervisorHost hyperHost = hostService.getHyperHost(context, cmd);\n             if (volume.getVmName() == null) {\n                 ManagedObjectReference secMorDs = HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost, volume.getDataStore().getUuid());\n                 DatastoreMO dsMo = new DatastoreMO(hyperHost.getContext(), secMorDs);\n-                VirtualMachineMO workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n+                workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n                 if (workerVmMo == null) {\n                     throw new Exception(\"Unable to find created worker VM\");\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTM0OA==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r478859348", "bodyText": "Ah nevermind, worker VM will be destroyed here. Should we explictly set workerVmMo above and use that to destroy in finally? To avoid any regressions?", "author": "rhtyd", "createdAt": "2020-08-28T06:32:57Z", "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1234,6 +1245,15 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n \n             details = \"create template from volume exception: \" + VmwareHelper.getExceptionMessage(e);\n             return new CopyCmdAnswer(details);\n+        } finally {\n+            try {\n+                if (volume.getVmName() == null && vmMo != null) {\n+                    vmMo.detachAllDisks();\n+                    vmMo.destroy();", "originalCommit": "5f66194d284ce04a63729112bf96f7de215a51b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2NTUzMg==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r478865532", "bodyText": "there's a check that volume is in fact detached  with this : volume.getVmName() hence, vmMo under such a scenario will only point to the worker VM. To be safer, will destroy workerVMMo instead. Thanks!", "author": "Pearl1594", "createdAt": "2020-08-28T06:49:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTM0OA=="}], "type": "inlineReview", "revised_code": {"commit": "f02268844edea9cd8dc1de357730a977912d8fdb", "chunk": "diff --git a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\nindex 6bad4c9e25..c93445e9bd 100644\n--- a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n+++ b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n\n@@ -1247,9 +1248,9 @@ public class VmwareStorageProcessor implements StorageProcessor {\n             return new CopyCmdAnswer(details);\n         } finally {\n             try {\n-                if (volume.getVmName() == null && vmMo != null) {\n-                    vmMo.detachAllDisks();\n-                    vmMo.destroy();\n+                if (volume.getVmName() == null && workerVmMo != null) {\n+                    workerVmMo.detachAllDisks();\n+                    workerVmMo.destroy();\n                 }\n             } catch (Throwable e) {\n                 s_logger.warn(\"Failed to destroy worker VM created for detached volume\");\n"}}, {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb", "url": "https://github.com/apache/cloudstack/commit/f02268844edea9cd8dc1de357730a977912d8fdb", "message": "Refactor code - delete workerVM", "committedDate": "2020-08-28T07:45:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NTE2Mg==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r488495162", "bodyText": "@Pearl1594 will it be better to log the exception here as it could be during detach operation as well?", "author": "shwstppr", "createdAt": "2020-09-15T08:46:58Z", "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1234,6 +1246,15 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n \n             details = \"create template from volume exception: \" + VmwareHelper.getExceptionMessage(e);\n             return new CopyCmdAnswer(details);\n+        } finally {\n+            try {\n+                if (volume.getVmName() == null && workerVmMo != null) {\n+                    workerVmMo.detachAllDisks();\n+                    workerVmMo.destroy();\n+                }\n+            } catch (Throwable e) {\n+                s_logger.warn(\"Failed to destroy worker VM created for detached volume\");", "originalCommit": "f02268844edea9cd8dc1de357730a977912d8fdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUwNTYzOQ==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r488505639", "bodyText": "@shwstppr I could change it to an error log, however, I'm not sure if an exception is required as the preliminary job of creating the template is successful, and the cleanup has some issue.", "author": "Pearl1594", "createdAt": "2020-09-15T09:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NTE2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "85274614ec00ebe7e4e0267567f5f06167a5ce22", "chunk": "diff --git a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\nindex c93445e9bd..f8b8f4c1f3 100644\n--- a/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n+++ b/plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java\n\n@@ -1253,7 +1253,7 @@ public class VmwareStorageProcessor implements StorageProcessor {\n                     workerVmMo.destroy();\n                 }\n             } catch (Throwable e) {\n-                s_logger.warn(\"Failed to destroy worker VM created for detached volume\");\n+                s_logger.error(\"Failed to destroy worker VM created for detached volume\");\n             }\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTg1Mg==", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r488499852", "bodyText": "Don't think it matters where we find the VM on datacenter but it is fine unless we want to lot of refactoring", "author": "shwstppr", "createdAt": "2020-09-15T08:54:20Z", "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1186,31 +1186,43 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n         String volumePath = volume.getPath();\n \n         String details = null;\n-\n+        VirtualMachineMO vmMo = null;\n+        VirtualMachineMO workerVmMo = null;\n         VmwareContext context = hostService.getServiceContext(cmd);\n         try {\n             VmwareHypervisorHost hyperHost = hostService.getHyperHost(context, cmd);\n-\n-            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n-            if (vmMo == null) {\n-                if (s_logger.isDebugEnabled()) {\n-                    s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n-                            \", try within datacenter\");\n-                }\n-                vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n-\n+            if (volume.getVmName() == null) {\n+                ManagedObjectReference secMorDs = HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost, volume.getDataStore().getUuid());\n+                DatastoreMO dsMo = new DatastoreMO(hyperHost.getContext(), secMorDs);\n+                workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n+                if (workerVmMo == null) {\n+                    throw new Exception(\"Unable to find created worker VM\");\n+                }\n+                vmMo = workerVmMo;\n+                String vmdkDataStorePath = VmwareStorageLayoutHelper.getLegacyDatastorePathFromVmdkFileName(dsMo, volumePath + \".vmdk\");\n+                vmMo.attachDisk(new String[] {vmdkDataStorePath}, secMorDs);\n+            } else {\n+                vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n                 if (vmMo == null) {\n-                    // This means either the volume is on a zone wide storage pool or VM is deleted by external entity.\n-                    // Look for the VM in the datacenter.\n-                    ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n-                    DatacenterMO dcMo = new DatacenterMO(context, dcMor);\n-                    vmMo = dcMo.findVm(volume.getVmName());\n-                }\n+                    if (s_logger.isDebugEnabled()) {\n+                        s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n+                                \", try within datacenter\");\n+                    }\n+                    vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n \n-                if (vmMo == null) {\n-                    String msg = \"Unable to find the owner VM for volume operation. vm: \" + volume.getVmName();\n-                    s_logger.error(msg);\n-                    throw new Exception(msg);\n+                    if (vmMo == null) {\n+                        // This means either the volume is on a zone wide storage pool or VM is deleted by external entity.\n+                        // Look for the VM in the datacenter.\n+                        ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n+                        DatacenterMO dcMo = new DatacenterMO(context, dcMor);\n+                        vmMo = dcMo.findVm(volume.getVmName());\n+                    }\n+\n+                    if (vmMo == null) {\n+                        String msg = \"Unable to find the owner VM for volume operation. vm: \" + volume.getVmName();\n+                        s_logger.error(msg);\n+                        throw new Exception(msg);\n+                    }", "originalCommit": "f02268844edea9cd8dc1de357730a977912d8fdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "259d21f2055c51f886976b73ea38a1381c995c9e", "url": "https://github.com/apache/cloudstack/commit/259d21f2055c51f886976b73ea38a1381c995c9e", "message": "Merge branch 'master' of https://github.com/apache/cloudstack into template_detachedDisks_vmware", "committedDate": "2020-09-17T04:21:10Z", "type": "commit"}, {"oid": "85274614ec00ebe7e4e0267567f5f06167a5ce22", "url": "https://github.com/apache/cloudstack/commit/85274614ec00ebe7e4e0267567f5f06167a5ce22", "message": "Changed log level from warn to error", "committedDate": "2020-09-17T04:22:51Z", "type": "commit"}]}