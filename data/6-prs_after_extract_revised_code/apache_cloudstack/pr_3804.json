{"pr_number": 3804, "pr_title": "Display capability info in listNetwork response", "pr_createdAt": "2020-01-13T13:37:48Z", "pr_url": "https://github.com/apache/cloudstack/pull/3804", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MzYxNQ==", "url": "https://github.com/apache/cloudstack/pull/3804#discussion_r383883615", "bodyText": "@ravening the rest is ok for me, except this line.", "author": "weizhouapache", "createdAt": "2020-02-25T13:40:33Z", "path": "server/src/main/java/com/cloud/api/ApiResponseHelper.java", "diffHunk": "@@ -2187,13 +2188,75 @@ public NetworkResponse createNetworkResponse(ResponseView view, Network network)\n                         CapabilityResponse capabilityResponse = new CapabilityResponse();\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n-                        capabilityResponse.setValue(capabilityValue);\n+                        if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n+                            // capabilityResponse.setValue(networkOffering.getDedicatedLB() ? \"dedicated\" : \"shared\");", "originalCommit": "af4ef9f5d70d7d9c3725b7524960e092ee7136e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcyODI0MA==", "url": "https://github.com/apache/cloudstack/pull/3804#discussion_r385728240", "bodyText": "@weizhouapache fixed it.", "author": "ravening", "createdAt": "2020-02-28T14:35:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4MzYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f6956f7e04baae40603fbd4c10be28a9594eed95", "chunk": "diff --git a/server/src/main/java/com/cloud/api/ApiResponseHelper.java b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\nindex fa3361fb4c..bd46cc07be 100644\n--- a/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n+++ b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n\n@@ -2189,7 +2202,7 @@ public class ApiResponseHelper implements ResponseGenerator {\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n                         if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n-                            // capabilityResponse.setValue(networkOffering.getDedicatedLB() ? \"dedicated\" : \"shared\");\n+                             capabilityResponse.setValue(networkOffering.isDedicatedLB() ? \"dedicated\" : \"shared\");\n                         } else {\n                             capabilityResponse.setValue(capabilityValue);\n                         }\n"}}, {"oid": "f6956f7e04baae40603fbd4c10be28a9594eed95", "url": "https://github.com/apache/cloudstack/commit/f6956f7e04baae40603fbd4c10be28a9594eed95", "message": "Minor fix", "committedDate": "2020-02-28T14:32:21Z", "type": "forcePushed"}, {"oid": "c8b58eea2f12b75f96de731d173ef8e573c408ee", "url": "https://github.com/apache/cloudstack/commit/c8b58eea2f12b75f96de731d173ef8e573c408ee", "message": "Minor fix", "committedDate": "2020-04-28T15:15:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDAwNDIyMA==", "url": "https://github.com/apache/cloudstack/pull/3804#discussion_r640004220", "bodyText": "I think that it is possible to extract most of the \"duplicated\" lines by creating a method that returns a CapabilityResponse based on name, value, and canChoose.", "author": "GabrielBrascher", "createdAt": "2021-05-26T18:02:48Z", "path": "server/src/main/java/com/cloud/api/ApiResponseHelper.java", "diffHunk": "@@ -2213,13 +2214,75 @@ public NetworkResponse createNetworkResponse(ResponseView view, Network network)\n                         CapabilityResponse capabilityResponse = new CapabilityResponse();\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n-                        capabilityResponse.setValue(capabilityValue);\n+                        if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n+                             capabilityResponse.setValue(networkOffering.isDedicatedLB() ? \"dedicated\" : \"shared\");\n+                        } else {\n+                            capabilityResponse.setValue(capabilityValue);\n+                        }\n+                        if (capability.getName().equals(Capability.SupportedLBIsolation.getName()) || capability.getName().equals(Capability.SupportedSourceNatTypes.getName())\n+                                || capability.getName().equals(Capability.RedundantRouter.getName())) {\n+                            capabilityResponse.setCanChoose(true);\n+                        } else {\n+                            capabilityResponse.setCanChoose(false);\n+                        }\n                         capabilityResponse.setObjectName(\"capability\");\n                         capabilityResponses.add(capabilityResponse);\n                     }\n-                    serviceResponse.setCapabilities(capabilityResponses);\n                 }\n \n+                if (Service.SourceNat == service) {\n+                    // overwrite\n+                    capabilityResponses = new ArrayList<CapabilityResponse>();\n+                    CapabilityResponse sharedSourceNat = new CapabilityResponse();\n+                    sharedSourceNat.setName(Capability.SupportedSourceNatTypes.getName());\n+                    sharedSourceNat.setValue(networkOffering.isSharedSourceNat() ? \"perzone\" : \"peraccount\");\n+                    sharedSourceNat.setCanChoose(true);\n+                    capabilityResponses.add(sharedSourceNat);\n+\n+                    CapabilityResponse redundantRouter = new CapabilityResponse();\n+                    redundantRouter.setName(Capability.RedundantRouter.getName());\n+                    redundantRouter.setValue(networkOffering.isRedundantRouter() ? \"true\" : \"false\");\n+                    redundantRouter.setCanChoose(true);\n+                    capabilityResponses.add(redundantRouter);\n+\n+                } else if (service == Service.StaticNat) {\n+                    CapabilityResponse eIp = new CapabilityResponse();\n+                    eIp.setName(Capability.ElasticIp.getName());\n+                    eIp.setValue(networkOffering.isElasticIp() ? \"true\" : \"false\");\n+                    eIp.setCanChoose(false);\n+                    capabilityResponses.add(eIp);\n+\n+                    CapabilityResponse associatePublicIp = new CapabilityResponse();\n+                    associatePublicIp.setName(Capability.AssociatePublicIP.getName());\n+                    associatePublicIp.setValue(networkOffering.isAssociatePublicIP() ? \"true\" : \"false\");\n+                    associatePublicIp.setCanChoose(false);\n+                    capabilityResponses.add(associatePublicIp);\n+\n+                } else if (Service.Lb == service) {\n+                    CapabilityResponse eLb = new CapabilityResponse();\n+                    eLb.setName(Capability.ElasticLb.getName());\n+                    eLb.setValue(networkOffering.isElasticLb() ? \"true\" : \"false\");\n+                    eLb.setCanChoose(false);\n+                    capabilityResponses.add(eLb);\n+\n+                    CapabilityResponse inline = new CapabilityResponse();\n+                    inline.setName(Capability.InlineMode.getName());\n+                    inline.setValue(networkOffering.isInline() ? \"true\" : \"false\");\n+                    inline.setCanChoose(false);\n+                    capabilityResponses.add(inline);", "originalCommit": "c8b58eea2f12b75f96de731d173ef8e573c408ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTIzODQyMQ==", "url": "https://github.com/apache/cloudstack/pull/3804#discussion_r691238421", "bodyText": "@GabrielBrascher  please review it again. made some changes to the code", "author": "ravening", "createdAt": "2021-08-18T13:29:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDAwNDIyMA=="}], "type": "inlineReview", "revised_code": {"commit": "567be4bbd897983ca63061d5f99237fa53198618", "chunk": "diff --git a/server/src/main/java/com/cloud/api/ApiResponseHelper.java b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\nindex 1fb5bafb51..16cdac10dd 100644\n--- a/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n+++ b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n\n@@ -2215,7 +2271,7 @@ public class ApiResponseHelper implements ResponseGenerator {\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n                         if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n-                             capabilityResponse.setValue(networkOffering.isDedicatedLB() ? \"dedicated\" : \"shared\");\n+                            // capabilityResponse.setValue(networkOffering.getDedicatedLB() ? \"dedicated\" : \"shared\");\n                         } else {\n                             capabilityResponse.setValue(capabilityValue);\n                         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDAwOTc3Nw==", "url": "https://github.com/apache/cloudstack/pull/3804#discussion_r640009777", "bodyText": "Maybe an alternative would be creating a variable in this class defining a Set of Strings that fit in this conditional.\nThis would look something similar to:\nprivate final Set<String> <insertNameHere> = new HashSet<>(Arrays.asList(Capability.SupportedLBIsolation.getName(),\n                                                                          Capability.SupportedSourceNatTypes.getName(),\n                                                                          Capability.RedundantRouter.getName()));\n...\n...\n...\n     if (<insertNameHere>.contains(capability.getName())) {\n          capabilityResponse.setCanChoose(true);\n     }\n...\n...", "author": "GabrielBrascher", "createdAt": "2021-05-26T18:09:40Z", "path": "server/src/main/java/com/cloud/api/ApiResponseHelper.java", "diffHunk": "@@ -2213,13 +2214,75 @@ public NetworkResponse createNetworkResponse(ResponseView view, Network network)\n                         CapabilityResponse capabilityResponse = new CapabilityResponse();\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n-                        capabilityResponse.setValue(capabilityValue);\n+                        if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n+                             capabilityResponse.setValue(networkOffering.isDedicatedLB() ? \"dedicated\" : \"shared\");\n+                        } else {\n+                            capabilityResponse.setValue(capabilityValue);\n+                        }\n+                        if (capability.getName().equals(Capability.SupportedLBIsolation.getName()) || capability.getName().equals(Capability.SupportedSourceNatTypes.getName())", "originalCommit": "c8b58eea2f12b75f96de731d173ef8e573c408ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "567be4bbd897983ca63061d5f99237fa53198618", "chunk": "diff --git a/server/src/main/java/com/cloud/api/ApiResponseHelper.java b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\nindex 1fb5bafb51..16cdac10dd 100644\n--- a/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n+++ b/server/src/main/java/com/cloud/api/ApiResponseHelper.java\n\n@@ -2215,7 +2271,7 @@ public class ApiResponseHelper implements ResponseGenerator {\n                         String capabilityValue = ser_cap_entries.getValue();\n                         capabilityResponse.setName(capability.getName());\n                         if (Service.Lb == service && capability.getName().equals(Capability.SupportedLBIsolation.getName())) {\n-                             capabilityResponse.setValue(networkOffering.isDedicatedLB() ? \"dedicated\" : \"shared\");\n+                            // capabilityResponse.setValue(networkOffering.getDedicatedLB() ? \"dedicated\" : \"shared\");\n                         } else {\n                             capabilityResponse.setValue(capabilityValue);\n                         }\n"}}, {"oid": "567be4bbd897983ca63061d5f99237fa53198618", "url": "https://github.com/apache/cloudstack/commit/567be4bbd897983ca63061d5f99237fa53198618", "message": "Display capability info in listNetwork response", "committedDate": "2021-08-18T12:44:54Z", "type": "commit"}, {"oid": "45015e6bfaae60b92b401bc6db7aab071bc6aacb", "url": "https://github.com/apache/cloudstack/commit/45015e6bfaae60b92b401bc6db7aab071bc6aacb", "message": "Minor fix", "committedDate": "2021-08-18T12:44:54Z", "type": "commit"}, {"oid": "0873630ec295d02a23550f8e8a075e0a37a9995f", "url": "https://github.com/apache/cloudstack/commit/0873630ec295d02a23550f8e8a075e0a37a9995f", "message": "code refactor", "committedDate": "2021-08-18T13:28:15Z", "type": "commit"}, {"oid": "0873630ec295d02a23550f8e8a075e0a37a9995f", "url": "https://github.com/apache/cloudstack/commit/0873630ec295d02a23550f8e8a075e0a37a9995f", "message": "code refactor", "committedDate": "2021-08-18T13:28:15Z", "type": "forcePushed"}]}