{"pr_number": 3946, "pr_title": "server: add global configuration for default router service offering", "pr_createdAt": "2020-03-05T23:07:06Z", "pr_url": "https://github.com/apache/cloudstack/pull/3946", "timeline": [{"oid": "3f5a989cbd121e45fcd800a8ba133e9925400ca1", "url": "https://github.com/apache/cloudstack/commit/3f5a989cbd121e45fcd800a8ba133e9925400ca1", "message": "server: add global configuration for default router service offering", "committedDate": "2020-03-05T21:46:51Z", "type": "commit"}, {"oid": "a39c3e61666c8cdf0f1d4943a180b5e0cbf527ef", "url": "https://github.com/apache/cloudstack/commit/a39c3e61666c8cdf0f1d4943a180b5e0cbf527ef", "message": "server: use router offering on vpc vr", "committedDate": "2020-03-05T23:06:57Z", "type": "commit"}, {"oid": "454f5aa260945fd5c0df2d7668fb4f33fb13b523", "url": "https://github.com/apache/cloudstack/commit/454f5aa260945fd5c0df2d7668fb4f33fb13b523", "message": "server: verify global setting if account setting is invalid", "committedDate": "2020-03-12T22:15:33Z", "type": "commit"}, {"oid": "454f5aa260945fd5c0df2d7668fb4f33fb13b523", "url": "https://github.com/apache/cloudstack/commit/454f5aa260945fd5c0df2d7668fb4f33fb13b523", "message": "server: verify global setting if account setting is invalid", "committedDate": "2020-03-12T22:15:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAxNzM1NA==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392017354", "bodyText": "offeringUuid would be better than id in the log message. with that LGTM", "author": "harikrishna-patnala", "createdAt": "2020-03-13T03:46:36Z", "path": "server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java", "diffHunk": "@@ -389,8 +390,34 @@ protected void findDefaultServiceOfferingId() {\n         serviceOfferingId = serviceOffering.getId();\n     }\n \n+    protected void findAccountServiceOfferingId(long accountId) {\n+        String accountRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.valueIn(accountId);\n+        String globalRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.value();\n+        if (accountRouterOffering != null) {\n+            verifyServiceOfferingByUuid(accountRouterOffering);\n+        }\n+        if (serviceOfferingId == null && globalRouterOffering != accountRouterOffering) {\n+            verifyServiceOfferingByUuid(globalRouterOffering);\n+        }\n+    }\n+\n+    private void verifyServiceOfferingByUuid(String offeringUuid) {\n+        logger.debug(\"Verifying router service offering with uuid : \" + offeringUuid);\n+        ServiceOfferingVO serviceOffering = serviceOfferingDao.findByUuid(offeringUuid);\n+        if (serviceOffering != null && serviceOffering.isSystemUse()) {\n+            boolean isLocalStorage = ConfigurationManagerImpl.SystemVMUseLocalStorage.valueIn(dest.getDataCenter().getId());\n+            if (isLocalStorage == serviceOffering.isUseLocalStorage()) {\n+                logger.debug(\"service offering \" + serviceOffering.getId() + \" will be used on virtual router\");", "originalCommit": "454f5aa260945fd5c0df2d7668fb4f33fb13b523", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3783a092a9431e64f6cf11fc7a1056b338f4f7ab", "chunk": "diff --git a/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java b/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\nindex f7b3af1901..24bc501ca7 100644\n--- a/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\n+++ b/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\n\n@@ -407,7 +407,7 @@ public class RouterDeploymentDefinition {\n         if (serviceOffering != null && serviceOffering.isSystemUse()) {\n             boolean isLocalStorage = ConfigurationManagerImpl.SystemVMUseLocalStorage.valueIn(dest.getDataCenter().getId());\n             if (isLocalStorage == serviceOffering.isUseLocalStorage()) {\n-                logger.debug(\"service offering \" + serviceOffering.getId() + \" will be used on virtual router\");\n+                logger.debug(String.format(\"Service offering %s (uuid: %s) will be used on virtual router\", serviceOffering.getName(), serviceOffering.getUuid()));\n                 serviceOfferingId = serviceOffering.getId();\n             }\n         }\n"}}, {"oid": "3783a092a9431e64f6cf11fc7a1056b338f4f7ab", "url": "https://github.com/apache/cloudstack/commit/3783a092a9431e64f6cf11fc7a1056b338f4f7ab", "message": "server: change debug info", "committedDate": "2020-03-13T16:22:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392342652", "bodyText": "Wouldn't we want globalRouterOffering to take precedence over serviceOfferingId, @weizhouapache?", "author": "DaanHoogland", "createdAt": "2020-03-13T16:39:31Z", "path": "server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java", "diffHunk": "@@ -389,8 +390,34 @@ protected void findDefaultServiceOfferingId() {\n         serviceOfferingId = serviceOffering.getId();\n     }\n \n+    protected void findAccountServiceOfferingId(long accountId) {\n+        String accountRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.valueIn(accountId);\n+        String globalRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.value();\n+        if (accountRouterOffering != null) {\n+            verifyServiceOfferingByUuid(accountRouterOffering);\n+        }\n+        if (serviceOfferingId == null && globalRouterOffering != accountRouterOffering) {", "originalCommit": "3783a092a9431e64f6cf11fc7a1056b338f4f7ab", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0NzEwMw==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392347103", "bodyText": "@DaanHoogland serviceOfferingId is the final offering which will be used on virtual router.", "author": "weizhouapache", "createdAt": "2020-03-13T16:45:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM1MTUwNg==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392351506", "bodyText": "yes, but if we configured a global router offering wouldn't we prefer that even if serviceOfferingId is not null?", "author": "DaanHoogland", "createdAt": "2020-03-13T16:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3NjE5OA==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392476198", "bodyText": "@DaanHoogland correct. it checks following offerings\n\nRouter service Offering of network/vpc offering\nAccount route service offering\nGlobal route service offering\nDefault route offering\n\nIf 1 or 2 is set and validated, global setting will not be used.", "author": "weizhouapache", "createdAt": "2020-03-13T21:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwODMwMA==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392508300", "bodyText": "@weizhouapache if (serviceOffering != null), which should be always, globalRouterOffering will not be checked, whether or not globalRouterOffering == accountRouterOffering.\nso I don't think your 3 and 4 are correct but this condition will never be met and verifyServiceOfferingByUuid(globalRouterOffering) will never be executed.\nSo, why check for serviceOfferingId before globalRouterOffering when it is the last resort and is only relevant after globalRouterOffering?", "author": "DaanHoogland", "createdAt": "2020-03-13T22:09:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2Mzc0Nw==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392563747", "bodyText": "@weizhouapache if (serviceOffering != null), which should be always, globalRouterOffering will not be checked, whether or not globalRouterOffering == accountRouterOffering.\nso I don't think your 3 and 4 are correct but this condition will never be met and verifyServiceOfferingByUuid(globalRouterOffering) will never be executed.\nSo, why check for serviceOfferingId before globalRouterOffering when it is the last resort and is only relevant after globalRouterOffering?\n\n@DaanHoogland it is serviceOfferingId , not serviceOffering.\n\n  \n    \n      cloudstack/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\n    \n    \n         Line 109\n      in\n      3783a09\n    \n    \n    \n    \n\n        \n          \n           protected Long serviceOfferingId; \n        \n    \n  \n\n\nthe check procedure\n\n  \n    \n      cloudstack/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\n    \n    \n        Lines 416 to 424\n      in\n      3783a09\n    \n    \n    \n    \n\n        \n          \n           protected void findServiceOfferingId() { \n        \n\n        \n          \n               serviceOfferingId = networkOfferingDao.findById(guestNetwork.getNetworkOfferingId()).getServiceOfferingId(); \n        \n\n        \n          \n               if (serviceOfferingId == null) { \n        \n\n        \n          \n                   findAccountServiceOfferingId(guestNetwork.getAccountId()); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               if (serviceOfferingId == null) { \n        \n\n        \n          \n                   findDefaultServiceOfferingId(); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nin the account part, considering the uuid might be invalid, so check account setting at first, then global setting if account setting is invalid. (if account setting is not set, accountRouterOffering is actually the global setting, so skip the check if accountRouterOffering equals to globalRouterOffering )\n\n  \n    \n      cloudstack/server/src/main/java/org/cloud/network/router/deployment/RouterDeploymentDefinition.java\n    \n    \n        Lines 393 to 414\n      in\n      3783a09\n    \n    \n    \n    \n\n        \n          \n           protected void findAccountServiceOfferingId(long accountId) { \n        \n\n        \n          \n               String accountRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.valueIn(accountId); \n        \n\n        \n          \n               String globalRouterOffering = VirtualNetworkApplianceManager.VirtualRouterServiceOffering.value(); \n        \n\n        \n          \n               if (accountRouterOffering != null) { \n        \n\n        \n          \n                   verifyServiceOfferingByUuid(accountRouterOffering); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               if (serviceOfferingId == null && globalRouterOffering != accountRouterOffering) { \n        \n\n        \n          \n                   verifyServiceOfferingByUuid(globalRouterOffering); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           private void verifyServiceOfferingByUuid(String offeringUuid) { \n        \n\n        \n          \n               logger.debug(\"Verifying router service offering with uuid : \" + offeringUuid); \n        \n\n        \n          \n               ServiceOfferingVO serviceOffering = serviceOfferingDao.findByUuid(offeringUuid); \n        \n\n        \n          \n               if (serviceOffering != null && serviceOffering.isSystemUse()) { \n        \n\n        \n          \n                   boolean isLocalStorage = ConfigurationManagerImpl.SystemVMUseLocalStorage.valueIn(dest.getDataCenter().getId()); \n        \n\n        \n          \n                   if (isLocalStorage == serviceOffering.isUseLocalStorage()) { \n        \n\n        \n          \n                       logger.debug(String.format(\"Service offering %s (uuid: %s) will be used on virtual router\", serviceOffering.getName(), serviceOffering.getUuid())); \n        \n\n        \n          \n                       serviceOfferingId = serviceOffering.getId(); \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nhope it helps you understanding all changes in PR.", "author": "weizhouapache", "createdAt": "2020-03-14T07:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2ODYxNQ==", "url": "https://github.com/apache/cloudstack/pull/3946#discussion_r392568615", "bodyText": "ah, i missed the side effect of verifyServiceOfferingByUuid(), where the id is set, thanks.\nMaybe to make this more obvious for stupid people like me we can make verifyServiceOfferingByUuid() return a uuid or null and set it in the findAccountServiceOfferingId()?", "author": "DaanHoogland", "createdAt": "2020-03-14T08:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0MjY1Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "576bd89b1f5222cc03d65531f6ecb520c0caaf16", "url": "https://github.com/apache/cloudstack/commit/576bd89b1f5222cc03d65531f6ecb520c0caaf16", "message": "Merge remote-tracking branch 'apache/master' into 4.14-add-default-router-offering", "committedDate": "2020-05-11T19:09:46Z", "type": "commit"}]}