{"pr_number": 4478, "pr_title": "Adding memoryallocatedpercentage & memoryallocatedbytes to HostsResponse & HostsForMigrationResponse", "pr_createdAt": "2020-11-18T10:27:08Z", "pr_url": "https://github.com/apache/cloudstack/pull/4478", "timeline": [{"oid": "1c938d99c5a55076c4deb1329616baae6a8c9e3b", "url": "https://github.com/apache/cloudstack/commit/1c938d99c5a55076c4deb1329616baae6a8c9e3b", "message": "hostformigrationresponse: Setting memory allocated to long", "committedDate": "2020-11-18T10:30:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NDU3OQ==", "url": "https://github.com/apache/cloudstack/pull/4478#discussion_r526484579", "bodyText": "Will this cause regression?", "author": "rhtyd", "createdAt": "2020-11-18T23:11:51Z", "path": "server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java", "diffHunk": "@@ -321,7 +321,7 @@ public HostForMigrationResponse newHostForMigrationResponse(HostJoinVO host, Enu\n                 hostResponse.setMemoryTotal(host.getTotalMemory());\n                 Float memWithOverprovisioning = host.getTotalMemory() * ApiDBUtils.getMemOverprovisioningFactor(host.getClusterId());\n                 hostResponse.setMemWithOverprovisioning(decimalFormat.format(memWithOverprovisioning));\n-                hostResponse.setMemoryAllocated(decimalFormat.format((float) mem / memWithOverprovisioning * 100.0f) +\"%\");\n+                hostResponse.setMemoryAllocated(mem);\n ", "originalCommit": "1c938d99c5a55076c4deb1329616baae6a8c9e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYxNTYxNw==", "url": "https://github.com/apache/cloudstack/pull/4478#discussion_r526615617", "bodyText": "It will but we can introduce two new fields memoryallocaedpercentage & cpuallocaedpercentage to compensate.\nThis will ensure that the response for both HostResponse and HostForMigrationResponse will be the same. Sounds good @rhtyd ?", "author": "davidjumani", "createdAt": "2020-11-19T06:09:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NDU3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8226351eb0b580a16d8b803bf0973dcd3dea6be1", "chunk": "diff --git a/server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java b/server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java\nindex 286a2a0604..9f5bfee0dd 100644\n--- a/server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java\n+++ b/server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java\n\n@@ -321,7 +324,10 @@ public class HostJoinDaoImpl extends GenericDaoBase<HostJoinVO, Long> implements\n                 hostResponse.setMemoryTotal(host.getTotalMemory());\n                 Float memWithOverprovisioning = host.getTotalMemory() * ApiDBUtils.getMemOverprovisioningFactor(host.getClusterId());\n                 hostResponse.setMemWithOverprovisioning(decimalFormat.format(memWithOverprovisioning));\n-                hostResponse.setMemoryAllocated(mem);\n+                String memoryAllocatedPercentage = decimalFormat.format((float) mem / memWithOverprovisioning * 100.0f) +\"%\";\n+                hostResponse.setMemoryAllocated(memoryAllocatedPercentage);\n+                hostResponse.setMemoryAllocatedPercentage(memoryAllocatedPercentage);\n+                hostResponse.setMemoryAllocatedBytes(mem);\n \n                 String hostTags = host.getTag();\n                 hostResponse.setHostTags(host.getTag());\n"}}, {"oid": "8226351eb0b580a16d8b803bf0973dcd3dea6be1", "url": "https://github.com/apache/cloudstack/commit/8226351eb0b580a16d8b803bf0973dcd3dea6be1", "message": "Adding memoryallocatedpercentage & memoryallocatedbytes to HostsResponse & HostsForMigrationResponse", "committedDate": "2020-11-20T05:55:57Z", "type": "commit"}, {"oid": "8226351eb0b580a16d8b803bf0973dcd3dea6be1", "url": "https://github.com/apache/cloudstack/commit/8226351eb0b580a16d8b803bf0973dcd3dea6be1", "message": "Adding memoryallocatedpercentage & memoryallocatedbytes to HostsResponse & HostsForMigrationResponse", "committedDate": "2020-11-20T05:55:57Z", "type": "forcePushed"}]}