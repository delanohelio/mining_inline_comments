{"pr_number": 4363, "pr_title": "Ability to put a server in Down state to maintenance", "pr_createdAt": "2020-10-01T00:01:59Z", "pr_url": "https://github.com/apache/cloudstack/pull/4363", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MDM5MA==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503480390", "bodyText": "@ravening what do you think of extracting lines 1308 - 1318 to a method? With that, it would be possible to cover these cases with JUnit test methods?", "author": "GabrielBrascher", "createdAt": "2020-10-12T19:03:27Z", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "originalCommit": "580a3a717a7e87c018867607ff0e8dc5a538e1b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "chunk": "diff --git a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\nindex 0af91603dc..267ad2bad2 100755\n--- a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n+++ b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n\n@@ -1305,7 +1305,7 @@ public class ResourceManagerImpl extends ManagerBase implements ResourceManager,\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n-        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+        if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {\n             if (host.getResourceState() == ResourceState.Enabled) {\n                 _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n                 _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503659931", "bodyText": "@ravening consider the value in zone, as the config scope is specified as Zone.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n          \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {", "author": "sureshanaparti", "createdAt": "2020-10-13T04:27:45Z", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "originalCommit": "580a3a717a7e87c018867607ff0e8dc5a538e1b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODM5NQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503698395", "bodyText": "@ravening consider the value in zone, as the config scope is specified as Zone.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n          \n          \n            \n            \n          \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\n\n@sureshanaparti i don't think we need that because the host can exist only in one zone at any time but I can change the setting to zone scope instead of global scope", "author": "ravening", "createdAt": "2020-10-13T06:34:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxMDg2Nw==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503710867", "bodyText": "@ravening Currently, the config scope is Zone, do you want to mark that as Global scope?", "author": "sureshanaparti", "createdAt": "2020-10-13T07:01:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczNzMyMQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503737321", "bodyText": "@sureshanaparti I dont think I need to make changes here as config is at zone level..setting in one zone doesnt mess up setting in other zones", "author": "ravening", "createdAt": "2020-10-13T07:47:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwNDMzMQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503804331", "bodyText": "@ravening May be some confusion here. My point is, use the config value specified at the scope defined in the config parameter, else update the config scope accordingly.\nThe config \"SET_HOST_DOWN_TO_MAINTENANCE\" defined above uses Zone Scope. So, In order to pick the Zone specific value of that config, you have to use \"valueIn()\", not value() (this picks the global config value). If your use case is to set the config at Cloud level, then change Scope to Global.", "author": "sureshanaparti", "createdAt": "2020-10-13T09:28:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MjY5MQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r511082691", "bodyText": "This observation makes sense. Can you please take a look at org.apache.cloudstack.framework.config.ConfigKey.valueIn() @ravening?", "author": "GabrielBrascher", "createdAt": "2020-10-23T18:52:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "chunk": "diff --git a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\nindex 0af91603dc..267ad2bad2 100755\n--- a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n+++ b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n\n@@ -1305,7 +1305,7 @@ public class ResourceManagerImpl extends ManagerBase implements ResourceManager,\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n-        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+        if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {\n             if (host.getResourceState() == ResourceState.Enabled) {\n                 _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n                 _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503661983", "bodyText": "@ravening can also consider state \"ResourceState.ErrorInPrepareForMaintenance\" ?", "author": "sureshanaparti", "createdAt": "2020-10-13T04:36:08Z", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "originalCommit": "580a3a717a7e87c018867607ff0e8dc5a538e1b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5OTAyNg==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503699026", "bodyText": "@ravening can also consider state \"ResourceState.ErrorInPrepareForMaintenance\" ?\n\n@sureshanaparti no. This is applicable only for hosts in maintenance state", "author": "ravening", "createdAt": "2020-10-13T06:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwOTA4OQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503709089", "bodyText": "@ravening any specific reason to skip \"ResourceState.ErrorInPrepareForMaintenance\", and consider \"ResourceState.ErrorInMaintenance\", to put the host in maintenance? What if the host is back Up when the resource state is \"ErrorInPrepareForMaintenance\" ?", "author": "sureshanaparti", "createdAt": "2020-10-13T06:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxMjMwMQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503712301", "bodyText": "@ravening any specific reason to skip \"ResourceState.ErrorInPrepareForMaintenance\", and consider \"ResourceState.ErrorInMaintenance\", to put the host in maintenance? What if the host is back Up when the resource state is \"ErrorInPrepareForMaintenance\" ?\n\n@sureshanaparti  this code doesn't take care of that... This is only for hosts already in maintenance mode", "author": "ravening", "createdAt": "2020-10-13T07:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxNjU5MQ==", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503716591", "bodyText": "ok @ravening", "author": "sureshanaparti", "createdAt": "2020-10-13T07:13:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "chunk": "diff --git a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\nindex 0af91603dc..267ad2bad2 100755\n--- a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n+++ b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n\n@@ -1305,7 +1305,7 @@ public class ResourceManagerImpl extends ManagerBase implements ResourceManager,\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n-        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+        if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {\n             if (host.getResourceState() == ResourceState.Enabled) {\n                 _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n                 _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n"}}, {"oid": "b0c8b81a0bd27369eefb20c46c3d6e169cdd3c0a", "url": "https://github.com/apache/cloudstack/commit/b0c8b81a0bd27369eefb20c46c3d6e169cdd3c0a", "message": "Ability to put a server in Down state to maintenance\n\nAdds a new global setting set.host.down.to.maintenance which when set\nto true will allow setting a host in down state into maintenance mode\nso that when the host comes back up, it will be automatically set to\nmaintenance mode and the resource state will not be set to Enabled.", "committedDate": "2020-10-27T14:48:14Z", "type": "commit"}, {"oid": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "url": "https://github.com/apache/cloudstack/commit/49069758c8f0abe2ede94348105b4a01dfd38ec2", "message": "consider zone level value", "committedDate": "2020-10-27T14:52:41Z", "type": "commit"}, {"oid": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "url": "https://github.com/apache/cloudstack/commit/49069758c8f0abe2ede94348105b4a01dfd38ec2", "message": "consider zone level value", "committedDate": "2020-10-27T14:52:41Z", "type": "forcePushed"}]}