{"pr_number": 4228, "pr_title": "Dont add host back after agent service restart", "pr_createdAt": "2020-07-28T18:35:32Z", "pr_url": "https://github.com/apache/cloudstack/pull/4228", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462476971", "bodyText": "this is not really saying it. what did we fail at for what reason with (and this part is there) what message.", "author": "DaanHoogland", "createdAt": "2020-07-29T17:46:02Z", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());", "originalCommit": "87c2cb621e59794f1bdee19690aeca73629f6005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNDc4NA==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462514784", "bodyText": "I have no idea why it's there in first place. So I'm displaying message whatever we catch", "author": "ravening", "createdAt": "2020-07-29T18:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxOTkxNQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462519915", "bodyText": "ok, than let's at least make the text describing our course of action:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        s_logger.error(\"Exception: \"+ e.getMessage());\n          \n          \n            \n                        s_logger.error(\"DiscoveredWithErrorException caught and rethrowing, message; \" + e.getMessage());", "author": "DaanHoogland", "createdAt": "2020-07-29T19:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a714b996a396001126a71aefaee6b9460a249b98", "chunk": "diff --git a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\nindex dfaef7278d..6bb0af6e0e 100644\n--- a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n+++ b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n\n@@ -362,19 +350,12 @@ public abstract class LibvirtServerDiscoverer extends DiscovererBase implements\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n-            s_logger.error(\"Exception: \"+ e.getMessage());\n+            s_logger.error(\"DiscoveredWithErrorException caught and rethrowing, message: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n-            // set guid to null once host is added\n-            if (hostRemovedPreviously) {\n-                if (hostVO != null) {\n-                    hostVO.setGuid(initialGuid);\n-                    _hostDao.update(hostVO.getId(), hostVO);\n-                }\n-            }\n             if (sshConnection != null)\n                 sshConnection.close();\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462482006", "bodyText": "is this comment correct? initialGuid might have a value other than null.", "author": "DaanHoogland", "createdAt": "2020-07-29T17:54:21Z", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n+            // set guid to null once host is added", "originalCommit": "87c2cb621e59794f1bdee19690aeca73629f6005", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNTM4Ng==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462515386", "bodyText": "Initialguid will always beer null since I'm fetching the value for a removed host. For non removed hosts it will be non null", "author": "ravening", "createdAt": "2020-07-29T18:52:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNzk4OA==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462517988", "bodyText": "exactly. it is not necessarily null. I think you'd better remove this comment, it is confusing.", "author": "DaanHoogland", "createdAt": "2020-07-29T18:56:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5OTE5Ng==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r464399196", "bodyText": "@DaanHoogland this code is executed only for the newly added hosts. When the host is removed previously, the guid is set to null. So the initial value of guid will always be null in this case.\nBefore adding the host, I set the guid to a temporary value and at the end I set it back to null which is the original value.\nI hope to have cleared your confusion", "author": "ravening", "createdAt": "2020-08-03T13:04:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "a714b996a396001126a71aefaee6b9460a249b98", "chunk": "diff --git a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\nindex dfaef7278d..6bb0af6e0e 100644\n--- a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n+++ b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n\n@@ -362,19 +350,12 @@ public abstract class LibvirtServerDiscoverer extends DiscovererBase implements\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n-            s_logger.error(\"Exception: \"+ e.getMessage());\n+            s_logger.error(\"DiscoveredWithErrorException caught and rethrowing, message: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n-            // set guid to null once host is added\n-            if (hostRemovedPreviously) {\n-                if (hostVO != null) {\n-                    hostVO.setGuid(initialGuid);\n-                    _hostDao.update(hostVO.getId(), hostVO);\n-                }\n-            }\n             if (sshConnection != null)\n                 sshConnection.close();\n         }\n"}}, {"oid": "a714b996a396001126a71aefaee6b9460a249b98", "url": "https://github.com/apache/cloudstack/commit/a714b996a396001126a71aefaee6b9460a249b98", "message": "Dont add host back after cloudstack-agent service restart\n\nIf a host is removed from cloudstack, it will be\nadded back if we restart the agent service on\nthe host. It should not be added back if manualy\nremoved.\n\nAdd a global setting \"add.host.on.service.restart\" with\ndefault value of true. If set to false, the zoneid,\nclusterid and podid in agent.properties will be set to\nnull so that when service is restarted, the agent is not\nadded back\n\nIf true these values will not be set to null so that it\ncan be still added back on service restart", "committedDate": "2020-08-05T11:24:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2NzU1NA==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r465667554", "bodyText": "general jist looks good, i'd rather have the tristate operator in the parameter passing then the whole contructor invocation ? note the ?)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ShutdownCommand cmd = AddHostOnServiceRestart.value() ? new ShutdownCommand(ShutdownCommand.DeleteHost, null, false) :\n          \n          \n            \n                                new ShutdownCommand(ShutdownCommand.DeleteHost, \"Cleaning up zone/pod/cluster details for host\", true);\n          \n          \n            \n                        ShutdownCommand cmd = new ShutdownCommand(ShutdownCommand.DeleteHost, null, AddHostOnServiceRestart.value() ? false : true);", "author": "DaanHoogland", "createdAt": "2020-08-05T11:45:07Z", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -474,7 +477,8 @@ public DeleteHostAnswer deleteHost(HostVO host, boolean isForced, boolean isForc\n \n         _resourceMgr.deleteRoutingHost(host, isForced, isForceDeleteStorage);\n         try {\n-            ShutdownCommand cmd = new ShutdownCommand(ShutdownCommand.DeleteHost, null);\n+            ShutdownCommand cmd = AddHostOnServiceRestart.value() ? new ShutdownCommand(ShutdownCommand.DeleteHost, null, false) :\n+                    new ShutdownCommand(ShutdownCommand.DeleteHost, \"Cleaning up zone/pod/cluster details for host\", true);", "originalCommit": "a714b996a396001126a71aefaee6b9460a249b98", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bad37509e0c9cd7ec9ead0f644ded4db6a523665", "chunk": "diff --git a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\nindex 6bb0af6e0e..d031620cab 100644\n--- a/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n+++ b/server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java\n\n@@ -477,8 +477,7 @@ public abstract class LibvirtServerDiscoverer extends DiscovererBase implements\n \n         _resourceMgr.deleteRoutingHost(host, isForced, isForceDeleteStorage);\n         try {\n-            ShutdownCommand cmd = AddHostOnServiceRestart.value() ? new ShutdownCommand(ShutdownCommand.DeleteHost, null, false) :\n-                    new ShutdownCommand(ShutdownCommand.DeleteHost, \"Cleaning up zone/pod/cluster details for host\", true);\n+            ShutdownCommand cmd = new ShutdownCommand(ShutdownCommand.DeleteHost, null, !ADD_HOST_ON_SERVICE_RESTART.value());\n             agentMgr.send(host.getId(), cmd);\n         } catch (AgentUnavailableException e) {\n             s_logger.warn(\"Sending ShutdownCommand failed: \", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0ODI5OQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468348299", "bodyText": "Considering that this is defined as a static final, I would recommend keeping the code convention such as described on Oracle Java Naming Conventions.\nIn this case AddHostOnServiceRestart should be changed to something as ADD_HOST_ON_SERVICE_RESTART.", "author": "GabrielBrascher", "createdAt": "2020-08-11T06:12:19Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> AddHostOnServiceRestart = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "originalCommit": "f06a04f21564d00c8cd6953fec74ef1e2aa10e0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQxMTI2OQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468411269", "bodyText": "@GabrielBrascher I made the necessary changes. Please review again", "author": "ravening", "createdAt": "2020-08-11T08:25:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0ODI5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bad37509e0c9cd7ec9ead0f644ded4db6a523665", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex 4a6071a4c3..31bf32de26 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -410,7 +410,7 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n-    public static final ConfigKey<Boolean> AddHostOnServiceRestart = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",\n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",\n             \"Indicates whether the host will be added back to cloudstack after restarting agent service on host. If false it wont be added back even after service restart\",\n             true, ConfigKey.Scope.Global, null);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0OTQzOA==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468349438", "bodyText": "These commented lines could be a nice Javadoc for the method; what do you think of moving them to a Javadoc block?", "author": "GabrielBrascher", "createdAt": "2020-08-11T06:15:44Z", "path": "agent/src/main/java/com/cloud/agent/Agent.java", "diffHunk": "@@ -419,6 +419,15 @@ protected void cancelTasks() {\n         }\n     }\n \n+    protected void cleanupAgentZoneProperties() {\n+        // Unset zone, cluster and pod values so that host is not added back\n+        // when service is restarted. This will be set to proper values\n+        // when host is added back", "originalCommit": "f06a04f21564d00c8cd6953fec74ef1e2aa10e0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bad37509e0c9cd7ec9ead0f644ded4db6a523665", "chunk": "diff --git a/agent/src/main/java/com/cloud/agent/Agent.java b/agent/src/main/java/com/cloud/agent/Agent.java\nindex f09f915e71..8f4a3033a9 100644\n--- a/agent/src/main/java/com/cloud/agent/Agent.java\n+++ b/agent/src/main/java/com/cloud/agent/Agent.java\n\n@@ -419,10 +419,14 @@ public class Agent implements HandlerFactory, IAgentControl {\n         }\n     }\n \n+    /**\n+     * Cleanup agent zone properties.\n+     *\n+     * Unset zone, cluster and pod values so that host is not added back\n+     * when service is restarted. This will be set to proper values\n+     * when host is added back\n+     */\n     protected void cleanupAgentZoneProperties() {\n-        // Unset zone, cluster and pod values so that host is not added back\n-        // when service is restarted. This will be set to proper values\n-        // when host is added back\n         _shell.setPersistentProperty(null, \"zone\", \"\");\n         _shell.setPersistentProperty(null, \"cluster\", \"\");\n         _shell.setPersistentProperty(null, \"pod\", \"\");\n"}}, {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665", "url": "https://github.com/apache/cloudstack/commit/bad37509e0c9cd7ec9ead0f644ded4db6a523665", "message": "Javadoc, naming convention", "committedDate": "2020-08-11T08:24:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r480975079", "bodyText": "If this is KVM specific can we add kvm in the global setting name @ravening ?", "author": "rhtyd", "createdAt": "2020-09-01T08:46:53Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "originalCommit": "bad37509e0c9cd7ec9ead0f644ded4db6a523665", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4NzE3NQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r480987175", "bodyText": "@rhtyd i don't think this is KVM specific. The code path is same for all HV's I guess. Didn't test it on other Hv types.", "author": "ravening", "createdAt": "2020-09-01T09:07:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNzg0NA==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r481037844", "bodyText": "The agent only runs on KVM host, for the other two major hypervisors (VMware and XenServer) we don't run an agent on them.", "author": "rhtyd", "createdAt": "2020-09-01T10:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI3NzkyMQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r481277921", "bodyText": "Didnt know that :P will add KVM in the name", "author": "ravening", "createdAt": "2020-09-01T16:28:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzMzA3MQ==", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r482033071", "bodyText": "@rhtyd made the change", "author": "ravening", "createdAt": "2020-09-02T12:35:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f5f2b5276f0519b846a9070b23dbdfafa3f3f770", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex 31bf32de26..4a6071a4c3 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -410,7 +410,7 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n-    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",\n+    public static final ConfigKey<Boolean> AddHostOnServiceRestart = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",\n             \"Indicates whether the host will be added back to cloudstack after restarting agent service on host. If false it wont be added back even after service restart\",\n             true, ConfigKey.Scope.Global, null);\n \n"}}, {"oid": "f5f2b5276f0519b846a9070b23dbdfafa3f3f770", "url": "https://github.com/apache/cloudstack/commit/f5f2b5276f0519b846a9070b23dbdfafa3f3f770", "message": "Dont add host back after cloudstack-agent service restart\n\nIf a host is removed from cloudstack, it will be\nadded back if we restart the agent service on\nthe host. It should not be added back if manualy\nremoved.\n\nAdd a global setting \"add.host.on.service.restart\" with\ndefault value of true. If set to false, the zoneid,\nclusterid and podid in agent.properties will be set to\nnull so that when service is restarted, the agent is not\nadded back\n\nIf true these values will not be set to null so that it\ncan be still added back on service restart", "committedDate": "2020-09-02T12:31:21Z", "type": "commit"}, {"oid": "9d00a6a3d809d286f0fba180d13b0a6abee3b8a0", "url": "https://github.com/apache/cloudstack/commit/9d00a6a3d809d286f0fba180d13b0a6abee3b8a0", "message": "Simplify ternary operator", "committedDate": "2020-09-02T12:31:21Z", "type": "commit"}, {"oid": "e6eeb0b06b6bbe1bbc47983435057f53d5630a19", "url": "https://github.com/apache/cloudstack/commit/e6eeb0b06b6bbe1bbc47983435057f53d5630a19", "message": "Javadoc, naming convention", "committedDate": "2020-09-02T12:31:21Z", "type": "commit"}, {"oid": "33e636d65675a0f99684cbf5d6caa67503be68ec", "url": "https://github.com/apache/cloudstack/commit/33e636d65675a0f99684cbf5d6caa67503be68ec", "message": "Make the setting kvm specific", "committedDate": "2020-09-02T12:34:13Z", "type": "commit"}, {"oid": "33e636d65675a0f99684cbf5d6caa67503be68ec", "url": "https://github.com/apache/cloudstack/commit/33e636d65675a0f99684cbf5d6caa67503be68ec", "message": "Make the setting kvm specific", "committedDate": "2020-09-02T12:34:13Z", "type": "forcePushed"}]}