{"pr_number": 4207, "pr_title": "Human readable sizes in logs", "pr_createdAt": "2020-07-10T09:58:58Z", "pr_url": "https://github.com/apache/cloudstack/pull/4207", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxNDk2Nw==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r460814967", "bodyText": "extra space", "author": "DaanHoogland", "createdAt": "2020-07-27T11:08:35Z", "path": "core/src/main/java/com/cloud/agent/transport/Request.java", "diffHunk": "@@ -395,7 +396,7 @@ public String toString() {\n         return log(\"\", true, Level.DEBUG);\n     }\n \n-    protected String log(String msg, boolean logContent, Level level) {\n+    protected String  log(String msg, boolean logContent, Level level) {", "originalCommit": "d6b99a0bf4f278717175e3380e010047b3e2d05a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "chunk": "diff --git a/core/src/main/java/com/cloud/agent/transport/Request.java b/core/src/main/java/com/cloud/agent/transport/Request.java\nindex c05274fc30..09f6bd4ace 100644\n--- a/core/src/main/java/com/cloud/agent/transport/Request.java\n+++ b/core/src/main/java/com/cloud/agent/transport/Request.java\n\n@@ -396,7 +395,7 @@ public class Request {\n         return log(\"\", true, Level.DEBUG);\n     }\n \n-    protected String  log(String msg, boolean logContent, Level level) {\n+    protected String log(String msg, boolean logContent, Level level) {\n         StringBuilder content = new StringBuilder();\n         if (logContent) {\n             if (_cmds == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MDY3Mg==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462080672", "bodyText": "@Spaceman1984 can you add tests for non zero values, and see if the expected results match? (for kbs, mbs, gbs)", "author": "rhtyd", "createdAt": "2020-07-29T07:00:05Z", "path": "utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+package com.cloud.utils;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static com.cloud.utils.HumanReadableJson.getHumanReadableBytesJson;\n+\n+public class HumanReadableJsonTest {\n+\n+    @Test\n+    public void parseJsonObjectTest() {\n+        assertEquals(\"{}\", getHumanReadableBytesJson(\"{}\"));\n+    }\n+    @Test\n+    public void parseJsonArrayTest() {\n+        assertEquals(\"[]\", getHumanReadableBytesJson(\"[]\"));\n+        assertEquals(\"[{},{}]\", getHumanReadableBytesJson(\"[{},{}]\"));\n+    }\n+    @Test\n+    public void parseSimpleJsonTest() {\n+        assertEquals(\"[{\\\"object\\\":{}}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":{}}]\"));\n+    }\n+    @Test\n+    public void parseComplexJsonTest() {\n+        assertEquals(\"[{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]}]\"));\n+        assertEquals(\"[{\\\"object\\\":[{},{}]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{},{}]}]\"));\n+        assertEquals(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\"));\n+        assertEquals(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\"));\n+    }\n+    @Test\n+    public void parseMatchJsonTest() {", "originalCommit": "276c4344c1313ab64311f2660d4fbfea6520d40d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NTU0Mg==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462165542", "bodyText": "@rhtyd these tests already exist in NumbersUtilTest.java", "author": "Spaceman1984", "createdAt": "2020-07-29T09:29:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MDY3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "chunk": "diff --git a/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java b/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java\ndeleted file mode 100644\nindex 2c0c749b8c..0000000000\n--- a/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java\n+++ /dev/null\n\n@@ -1,53 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-package com.cloud.utils;\n-\n-import org.junit.Test;\n-\n-import static org.junit.Assert.assertEquals;\n-import static com.cloud.utils.HumanReadableJson.getHumanReadableBytesJson;\n-\n-public class HumanReadableJsonTest {\n-\n-    @Test\n-    public void parseJsonObjectTest() {\n-        assertEquals(\"{}\", getHumanReadableBytesJson(\"{}\"));\n-    }\n-    @Test\n-    public void parseJsonArrayTest() {\n-        assertEquals(\"[]\", getHumanReadableBytesJson(\"[]\"));\n-        assertEquals(\"[{},{}]\", getHumanReadableBytesJson(\"[{},{}]\"));\n-    }\n-    @Test\n-    public void parseSimpleJsonTest() {\n-        assertEquals(\"[{\\\"object\\\":{}}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":{}}]\"));\n-    }\n-    @Test\n-    public void parseComplexJsonTest() {\n-        assertEquals(\"[{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[{},{}]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{},{}]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\"));\n-    }\n-    @Test\n-    public void parseMatchJsonTest() {\n-        assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\"}]\"));\n-        assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\",\\\"bytesSent\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\", \\\"bytesSent\\\": \\\"0\\\"}]\"));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MTgwNw==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462081807", "bodyText": "@Spaceman1984 can you add unit test for this method, giving some values such as zero and non-zero (to test KB, MB, GB, TB). Have you verified that all consumes would pass long to it and not Long which may potentially cause a NPE?", "author": "rhtyd", "createdAt": "2020-07-29T07:02:27Z", "path": "utils/src/main/java/com/cloud/utils/NumbersUtil.java", "diffHunk": "@@ -93,6 +95,13 @@ public static String toReadableSize(long bytes) {\n         return builder.toString();\n     }\n \n+    public static String toHumanReadableSize(long size) {", "originalCommit": "276c4344c1313ab64311f2660d4fbfea6520d40d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NjcxMA==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462166710", "bodyText": "I have added a check and a test for null which prevents an NPE.", "author": "Spaceman1984", "createdAt": "2020-07-29T09:31:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4MTgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "chunk": "diff --git a/utils/src/main/java/com/cloud/utils/NumbersUtil.java b/utils/src/main/java/com/cloud/utils/NumbersUtil.java\nindex 1eb3c90e8c..ca2f93971e 100644\n--- a/utils/src/main/java/com/cloud/utils/NumbersUtil.java\n+++ b/utils/src/main/java/com/cloud/utils/NumbersUtil.java\n\n@@ -97,11 +97,15 @@ public class NumbersUtil {\n \n     public static String toHumanReadableSize(long size) {\n         if (enableHumanReadableSizes){\n-            return \"(\" + toReadableSize(size) + \") \" + ((Long)size).toString();\n+            return ((Long)size).toString() + \" (\" + toReadableSize(size) + \")\";\n         }\n         return ((Long)size).toString();\n     }\n \n+    public static String toHumanReadableSize(int size) {\n+        return toHumanReadableSize(new Long(size));\n+    }\n+\n     /**\n      * Converts a string of the format 'yy-MM-dd'T'HH:mm:ss.SSS\" into ms.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NDE4Mw==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462184183", "bodyText": "@Spaceman1984 what's the default locale for CloudStack, is there a global setting or does it pick it up from OS?", "author": "rhtyd", "createdAt": "2020-07-29T10:01:01Z", "path": "utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java", "diffHunk": "@@ -50,4 +51,14 @@ public void parseMatchJsonTest() {\n         assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\"}]\"));\n         assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\",\\\"bytesSent\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\", \\\"bytesSent\\\": \\\"0\\\"}]\"));\n     }\n+\n+    @Test\n+    public void localeTest() {\n+        Locale.setDefault(Locale.UK); // UK test", "originalCommit": "6725f53c287b95b3f38c0473bf1d2904e455a2af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NzY2NA==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r462187664", "bodyText": "@rhtyd From Java Docs:\n\"The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault method.\"", "author": "Spaceman1984", "createdAt": "2020-07-29T10:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjcwNA==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r463546704", "bodyText": "I think \"C\" is the default locale. maybe this or some other more worldly locale is a good idea?", "author": "DaanHoogland", "createdAt": "2020-07-31T11:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NDE4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkwOTE1OA==", "url": "https://github.com/apache/cloudstack/pull/4207#discussion_r464909158", "bodyText": "@DaanHoogland I searched the code base, Cloudstack doesn't set a default locale, it will be picked up from the environment, which I believe is the correct behaviour.", "author": "Spaceman1984", "createdAt": "2020-08-04T09:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE4NDE4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "chunk": "diff --git a/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java b/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java\ndeleted file mode 100644\nindex 3adb5475f4..0000000000\n--- a/utils/src/test/java/com/cloud/utils/HumanReadableJsonTest.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-//\n-// Licensed to the Apache Software Foundation (ASF) under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  The ASF licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//   http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing,\n-// software distributed under the License is distributed on an\n-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-// KIND, either express or implied.  See the License for the\n-// specific language governing permissions and limitations\n-// under the License.\n-//\n-package com.cloud.utils;\n-\n-import org.junit.Test;\n-\n-import java.util.Locale;\n-import static org.junit.Assert.assertEquals;\n-import static com.cloud.utils.HumanReadableJson.getHumanReadableBytesJson;\n-\n-public class HumanReadableJsonTest {\n-\n-    @Test\n-    public void parseJsonObjectTest() {\n-        assertEquals(\"{}\", getHumanReadableBytesJson(\"{}\"));\n-    }\n-    @Test\n-    public void parseJsonArrayTest() {\n-        assertEquals(\"[]\", getHumanReadableBytesJson(\"[]\"));\n-        assertEquals(\"[{},{}]\", getHumanReadableBytesJson(\"[{},{}]\"));\n-    }\n-    @Test\n-    public void parseSimpleJsonTest() {\n-        assertEquals(\"[{\\\"object\\\":{}}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":{}}]\"));\n-    }\n-    @Test\n-    public void parseComplexJsonTest() {\n-        assertEquals(\"[{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[{},{}]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{},{}]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[]},{\\\"object\\\":[]}]\"));\n-        assertEquals(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\", getHumanReadableBytesJson(\"[{\\\"object\\\":[{\\\"object\\\":[]}]},{\\\"object\\\":[]}]\"));\n-    }\n-    @Test\n-    public void parseMatchJsonTest() {\n-        assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\"}]\"));\n-        assertEquals(\"[{\\\"size\\\":\\\"(0 bytes) 0\\\",\\\"bytesSent\\\":\\\"(0 bytes) 0\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"0\\\", \\\"bytesSent\\\": \\\"0\\\"}]\"));\n-    }\n-\n-    @Test\n-    public void localeTest() {\n-        Locale.setDefault(Locale.UK); // UK test\n-        assertEquals(\"[{\\\"size\\\":\\\"(100.05 KB) 102456\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"102456\\\"}]\"));\n-        Locale.setDefault(Locale.US); // US test\n-        assertEquals(\"[{\\\"size\\\":\\\"(100.05 KB) 102456\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"102456\\\"}]\"));\n-        Locale.setDefault(Locale.forLanguageTag(\"en-ZA\")); // Other region test\n-        assertEquals(\"[{\\\"size\\\":\\\"(100,05 KB) 102456\\\"}]\", getHumanReadableBytesJson(\"[{\\\"size\\\": \\\"102456\\\"}]\"));\n-    }\n-}\n"}}, {"oid": "33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "url": "https://github.com/apache/cloudstack/commit/33ca5b1c7bcab73772a0d6fae8438fe396aaf8b3", "message": "Early commit for review - largely untested", "committedDate": "2020-08-04T08:28:39Z", "type": "commit"}, {"oid": "ba142541dc787a6c1867d83efae9a34166547dd8", "url": "https://github.com/apache/cloudstack/commit/ba142541dc787a6c1867d83efae9a34166547dd8", "message": "committing for more testing", "committedDate": "2020-08-04T08:28:39Z", "type": "commit"}, {"oid": "ee8bc8db6c326837000b49d48d2ee3533a43e3df", "url": "https://github.com/apache/cloudstack/commit/ee8bc8db6c326837000b49d48d2ee3533a43e3df", "message": "Removed unused import", "committedDate": "2020-08-04T08:28:39Z", "type": "commit"}, {"oid": "9e4cf0a668059b25fb0ad7af1bcc3e487b98ce1c", "url": "https://github.com/apache/cloudstack/commit/9e4cf0a668059b25fb0ad7af1bcc3e487b98ce1c", "message": "Added json converter, more conversions and removed 'untested' comments", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "608732a18c41593eb8d0ad2d460bbc5a71e1dccf", "url": "https://github.com/apache/cloudstack/commit/608732a18c41593eb8d0ad2d460bbc5a71e1dccf", "message": "removed empty files", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "98552f0a072eaae6b64e81b57c30d7d2f88ff724", "url": "https://github.com/apache/cloudstack/commit/98552f0a072eaae6b64e81b57c30d7d2f88ff724", "message": "added some more command conversions on vmware", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "9c7b36b3a0ae80a28b52714276184b30f82a65db", "url": "https://github.com/apache/cloudstack/commit/9c7b36b3a0ae80a28b52714276184b30f82a65db", "message": "Fixed imports on certAuthority test", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "51e31529c8ac6da5b7d206aab899cabb024e6e3c", "url": "https://github.com/apache/cloudstack/commit/51e31529c8ac6da5b7d206aab899cabb024e6e3c", "message": "Removed untested comments and improved performance on Json convertor, added some conversions in usages", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "a6e2af4fa53e2e713dbe73f615c680fdeb67d483", "url": "https://github.com/apache/cloudstack/commit/a6e2af4fa53e2e713dbe73f615c680fdeb67d483", "message": "Removed extra space", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "8208228f52b6f258e1ec644d1ee63e8f94724138", "url": "https://github.com/apache/cloudstack/commit/8208228f52b6f258e1ec644d1ee63e8f94724138", "message": "Added a few more conversions, fixed jsonParser output, and changed global setting description", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "494da7a7c15131949142108256acfe94408bc48f", "url": "https://github.com/apache/cloudstack/commit/494da7a7c15131949142108256acfe94408bc48f", "message": "Added missing license", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "dc66f04649dfa6a75e60b57219a757fa932e7aa1", "url": "https://github.com/apache/cloudstack/commit/dc66f04649dfa6a75e60b57219a757fa932e7aa1", "message": "Handling possible npe when using toReableSize, added locale tests", "committedDate": "2020-08-04T08:29:51Z", "type": "commit"}, {"oid": "e9de0680fa115375cf4405057db0c62c11b62ad6", "url": "https://github.com/apache/cloudstack/commit/e9de0680fa115375cf4405057db0c62c11b62ad6", "message": "Early commit for review - largely untested", "committedDate": "2020-08-04T08:40:28Z", "type": "commit"}, {"oid": "3f8c11876fd658cddf00db6f3210b73320d51577", "url": "https://github.com/apache/cloudstack/commit/3f8c11876fd658cddf00db6f3210b73320d51577", "message": "committing for more testing", "committedDate": "2020-08-04T08:49:04Z", "type": "commit"}, {"oid": "f0478e1be3ec42aaf3ffa45efc69c5a08489ad23", "url": "https://github.com/apache/cloudstack/commit/f0478e1be3ec42aaf3ffa45efc69c5a08489ad23", "message": "Added json converter, more conversions and removed 'untested' comments", "committedDate": "2020-08-04T08:50:41Z", "type": "commit"}, {"oid": "294734dd14eecedf89974582c04d553e1323064b", "url": "https://github.com/apache/cloudstack/commit/294734dd14eecedf89974582c04d553e1323064b", "message": "removed empty files", "committedDate": "2020-08-04T08:50:41Z", "type": "commit"}, {"oid": "769ad3742db35b0c30425ddbcbe79767ff95ad77", "url": "https://github.com/apache/cloudstack/commit/769ad3742db35b0c30425ddbcbe79767ff95ad77", "message": "Removed extra space", "committedDate": "2020-08-04T08:52:11Z", "type": "commit"}, {"oid": "40688aab90c9e9c963161dfa431e8b7191fe6dc2", "url": "https://github.com/apache/cloudstack/commit/40688aab90c9e9c963161dfa431e8b7191fe6dc2", "message": "Added marvin tests, fixed json output, added more json tests", "committedDate": "2020-08-04T08:52:54Z", "type": "commit"}, {"oid": "40688aab90c9e9c963161dfa431e8b7191fe6dc2", "url": "https://github.com/apache/cloudstack/commit/40688aab90c9e9c963161dfa431e8b7191fe6dc2", "message": "Added marvin tests, fixed json output, added more json tests", "committedDate": "2020-08-04T08:52:54Z", "type": "forcePushed"}, {"oid": "ed65896549f893756b35c24d4c04277734c8accc", "url": "https://github.com/apache/cloudstack/commit/ed65896549f893756b35c24d4c04277734c8accc", "message": "Added more conversions in usage records", "committedDate": "2020-08-04T11:03:54Z", "type": "commit"}, {"oid": "e24e1053c41148c5eb992346881871c2fac604c6", "url": "https://github.com/apache/cloudstack/commit/e24e1053c41148c5eb992346881871c2fac604c6", "message": "More usage conversions", "committedDate": "2020-08-04T11:49:29Z", "type": "commit"}, {"oid": "3e2d652559fe17abd9db1dfb63bfd252551c7dd7", "url": "https://github.com/apache/cloudstack/commit/3e2d652559fe17abd9db1dfb63bfd252551c7dd7", "message": "Fixed a few typos, and event descriptions", "committedDate": "2020-08-04T13:37:23Z", "type": "commit"}, {"oid": "b2e6fb8d28f3360512043e9516d3894577cef34c", "url": "https://github.com/apache/cloudstack/commit/b2e6fb8d28f3360512043e9516d3894577cef34c", "message": "Removed null from Network usage record when network name is not set", "committedDate": "2020-08-05T14:12:19Z", "type": "commit"}, {"oid": "4df8ff7d404a86196204ee616d26e46901694e1d", "url": "https://github.com/apache/cloudstack/commit/4df8ff7d404a86196204ee616d26e46901694e1d", "message": "Added some conversions in list usage records API response", "committedDate": "2020-08-06T12:25:40Z", "type": "commit"}, {"oid": "d643114de20d02966fbf988ebb30ad5527169571", "url": "https://github.com/apache/cloudstack/commit/d643114de20d02966fbf988ebb30ad5527169571", "message": "Added attributes to test", "committedDate": "2020-08-07T07:11:46Z", "type": "commit"}, {"oid": "f8ae28dd9e017eb458b5444eacb489283899afe9", "url": "https://github.com/apache/cloudstack/commit/f8ae28dd9e017eb458b5444eacb489283899afe9", "message": "Added some more conversions", "committedDate": "2020-08-07T07:49:40Z", "type": "commit"}, {"oid": "fa345603f2af440ba2b0a0b1f16d4875ca982956", "url": "https://github.com/apache/cloudstack/commit/fa345603f2af440ba2b0a0b1f16d4875ca982956", "message": "fixed some typos and added some more conversions", "committedDate": "2020-08-07T08:35:23Z", "type": "commit"}]}