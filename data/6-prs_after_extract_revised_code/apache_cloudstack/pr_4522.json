{"pr_number": 4522, "pr_title": "template: Ensuring template is cross zone if type changed to system", "pr_createdAt": "2020-12-08T10:47:24Z", "pr_url": "https://github.com/apache/cloudstack/pull/4522", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNTI3OQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538305279", "bodyText": "is a good check but i'd like to see it in a separate method.", "author": "DaanHoogland", "createdAt": "2020-12-08T12:21:15Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2198,6 +2202,21 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n+        if (templateType != null && templateType == TemplateType.SYSTEM) {\n+            s_logger.info(\"Copying template to all zones since it will be a system template\");\n+            List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+            if (zones != null) {\n+                List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n+                try {\n+                    copyTemplate(id, null, zoneIds);\n+                } catch (StorageUnavailableException e) {\n+                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n+                } catch (ResourceAllocationException e) {\n+                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n+                }\n+            }\n+        }", "originalCommit": "665e951af007023537436ca53354371de9489fb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex df3405118e..8d62834a0a 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2203,18 +2203,7 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n         }\n \n         if (templateType != null && templateType == TemplateType.SYSTEM) {\n-            s_logger.info(\"Copying template to all zones since it will be a system template\");\n-            List<DataCenterVO> zones = _dcDao.listEnabledZones();\n-            if (zones != null) {\n-                List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n-                try {\n-                    copyTemplate(id, null, zoneIds);\n-                } catch (StorageUnavailableException e) {\n-                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-                } catch (ResourceAllocationException e) {\n-                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-                }\n-            }\n+            copyTemplateToAllZones(id);\n         }\n \n         if (isRoutingTemplate != null) {\n"}}, {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "url": "https://github.com/apache/cloudstack/commit/c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "message": "template: Copying templates to all zones if type changed to system", "committedDate": "2020-12-08T13:21:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzU5OA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538457598", "bodyText": "Should we skip the zone on which the template is already in?", "author": "ravening", "createdAt": "2020-12-08T14:51:18Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");\n+        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+        if (zones != null) {\n+            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());", "originalCommit": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxNzUxNQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538517515", "bodyText": "this seems to be handled by \n  \n    \n      cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n    \n    \n        Lines 931 to 936\n      in\n      c59d0c8\n    \n    \n    \n    \n\n        \n          \n           DataStore dstSecStore = getImageStore(destZoneId, templateId); \n        \n\n        \n          \n           if (dstSecStore != null) { \n        \n\n        \n          \n               s_logger.debug(\"There is template \" + templateId + \" in secondary storage \" + dstSecStore.getName() + \n        \n\n        \n          \n                       \" in zone \" + destZoneId + \" , don't need to copy\"); \n        \n\n        \n          \n               continue; \n        \n\n        \n          \n           }", "author": "weizhouapache", "createdAt": "2020-12-08T15:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzU5OA=="}], "type": "inlineReview", "revised_code": {"commit": "23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 8d62834a0a..52bcace4b3 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2232,21 +2231,6 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n         return _tmpltDao.findById(id);\n     }\n \n-    private void copyTemplateToAllZones(Long id) {\n-        s_logger.info(\"Copying template to all zones since it will be a system template\");\n-        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n-        if (zones != null) {\n-            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n-            try {\n-                copyTemplate(id, null, zoneIds);\n-            } catch (StorageUnavailableException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            } catch (ResourceAllocationException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            }\n-        }\n-    }\n-\n     void verifyTemplateId(Long id) {\n         // Don't allow to modify system template\n         if (id.equals(Long.valueOf(1))) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzgzOQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538457839", "bodyText": "Better to display the template name?", "author": "ravening", "createdAt": "2020-12-08T14:51:32Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");", "originalCommit": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 8d62834a0a..52bcace4b3 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2232,21 +2231,6 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n         return _tmpltDao.findById(id);\n     }\n \n-    private void copyTemplateToAllZones(Long id) {\n-        s_logger.info(\"Copying template to all zones since it will be a system template\");\n-        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n-        if (zones != null) {\n-            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n-            try {\n-                copyTemplate(id, null, zoneIds);\n-            } catch (StorageUnavailableException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            } catch (ResourceAllocationException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            }\n-        }\n-    }\n-\n     void verifyTemplateId(Long id) {\n         // Don't allow to modify system template\n         if (id.equals(Long.valueOf(1))) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1ODk3MA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538458970", "bodyText": "Extract the message to string?", "author": "ravening", "createdAt": "2020-12-08T14:52:34Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");\n+        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+        if (zones != null) {\n+            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n+            try {\n+                copyTemplate(id, null, zoneIds);\n+            } catch (StorageUnavailableException e) {\n+                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);", "originalCommit": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 8d62834a0a..52bcace4b3 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2232,21 +2231,6 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n         return _tmpltDao.findById(id);\n     }\n \n-    private void copyTemplateToAllZones(Long id) {\n-        s_logger.info(\"Copying template to all zones since it will be a system template\");\n-        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n-        if (zones != null) {\n-            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n-            try {\n-                copyTemplate(id, null, zoneIds);\n-            } catch (StorageUnavailableException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            } catch (ResourceAllocationException e) {\n-                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n-            }\n-        }\n-    }\n-\n     void verifyTemplateId(Long id) {\n         // Don't allow to modify system template\n         if (id.equals(Long.valueOf(1))) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxOTkwNA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538519904", "bodyText": "@davidjumani should the template be changed to cross-zone when it is done ?", "author": "weizhouapache", "createdAt": "2020-12-08T15:47:10Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2198,6 +2202,10 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n+        if (templateType != null && templateType == TemplateType.SYSTEM) {\n+            copyTemplateToAllZones(id);\n+        }", "originalCommit": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAxMTQyMw==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r539011423", "bodyText": "Makes sense. Added the change", "author": "davidjumani", "createdAt": "2020-12-09T05:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxOTkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 8d62834a0a..52bcace4b3 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2202,8 +2201,8 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n-        if (templateType != null && templateType == TemplateType.SYSTEM) {\n-            copyTemplateToAllZones(id);\n+        if (templateType != null && (templateType == TemplateType.SYSTEM || templateType == TemplateType.BUILTIN) && !template.isCrossZones()) {\n+            throw new InvalidParameterValueException(\"System and Builtin templates must be cross zone\");\n         }\n \n         if (isRoutingTemplate != null) {\n"}}, {"oid": "23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "url": "https://github.com/apache/cloudstack/commit/23f16da6caf8b2d4183a6d3044928ee6061e8bf9", "message": "Adding crosszone check for system templates", "committedDate": "2020-12-09T06:00:04Z", "type": "forcePushed"}, {"oid": "022a47608c14c8bdb583e0a2754a2408e802f56b", "url": "https://github.com/apache/cloudstack/commit/022a47608c14c8bdb583e0a2754a2408e802f56b", "message": "template: Ensuring template is cross zone if type changed to system", "committedDate": "2020-12-09T06:04:32Z", "type": "forcePushed"}, {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec", "url": "https://github.com/apache/cloudstack/commit/ab2f68cfb909cf8f605b3fc494131bdcb85495ec", "message": "template: Ensuring template is cross zone if type changed to system", "committedDate": "2020-12-09T06:30:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541522973", "bodyText": "why is this changed?", "author": "rhtyd", "createdAt": "2020-12-12T07:24:49Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2130,7 +2129,7 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             return template;\n         }\n \n-        template = _tmpltDao.createForUpdate(id);\n+        template = _tmpltDao.findById(id);", "originalCommit": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NDYyNg==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541544626", "bodyText": "createForUpdate creates an empty object with just the id https://github.com/apache/cloudstack/blob/master/framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java#L295 , whereas a template object read from the db needed to check whether it's cross zone", "author": "davidjumani", "createdAt": "2020-12-12T09:55:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODE0OQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542138149", "bodyText": "Line 2075 already has that, we need to check why createForUpdate was used in the first place.", "author": "rhtyd", "createdAt": "2020-12-14T06:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 11e0a2dd29..550f53b37f 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2129,7 +2133,7 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n             return template;\n         }\n \n-        template = _tmpltDao.findById(id);\n+        template = _tmpltDao.createForUpdate(id);\n \n         if (name != null) {\n             template.setName(name);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541523006", "bodyText": "Here too?", "author": "rhtyd", "createdAt": "2020-12-12T07:25:09Z", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "originalCommit": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NDYzNQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541544635", "bodyText": "Required since it's changed from createForUpdate to findById", "author": "davidjumani", "createdAt": "2020-12-12T09:55:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODUxOA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542138518", "bodyText": "Persist is usually used for a new record, I'm concerned if this causes any regression or duplicates in DB.", "author": "rhtyd", "createdAt": "2020-12-14T06:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0MDcwOQ==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542140709", "bodyText": "There are several instances where findById has been used prior to persist. Tested and no duplicate DB entries were created. Also persist internally uses update : https://github.com/apache/cloudstack/blob/master/framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java#L1389", "author": "davidjumani", "createdAt": "2020-12-14T06:28:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0NTkyOA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542145928", "bodyText": "I was considering getting this towards 4.15RC2 but the additional changes don't give us confidence - only the conditional check was enough to handle the issue.", "author": "rhtyd", "createdAt": "2020-12-14T06:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MjIwNA==", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542152204", "bodyText": "Makes sense, moving the check up", "author": "davidjumani", "createdAt": "2020-12-14T06:58:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "chunk": "diff --git a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\nindex 11e0a2dd29..550f53b37f 100755\n--- a/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n+++ b/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n\n@@ -2222,7 +2222,7 @@ public class TemplateManagerImpl extends ManagerBase implements TemplateManager,\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.persist(template);\n+        _tmpltDao.update(id, template);\n \n         return _tmpltDao.findById(id);\n     }\n"}}, {"oid": "bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "url": "https://github.com/apache/cloudstack/commit/bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "message": "template: Ensuring template is cross zone if type changed to system", "committedDate": "2020-12-14T07:00:18Z", "type": "commit"}, {"oid": "bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "url": "https://github.com/apache/cloudstack/commit/bec4e0bf253ba6884a6efde0b4ca03cc25f6b286", "message": "template: Ensuring template is cross zone if type changed to system", "committedDate": "2020-12-14T07:00:18Z", "type": "forcePushed"}]}