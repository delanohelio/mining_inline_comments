{"pr_number": 3894, "pr_title": "api: Fix count and item issues returned by list APIs", "pr_createdAt": "2020-02-18T13:12:42Z", "pr_url": "https://github.com/apache/cloudstack/pull/3894", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwMjA3MQ==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r380702071", "bodyText": "@Pearl1594 calling listAll() i.e. getting all the rows will make the APIs slow in a large env; this is fine but can you explore a way to simply get the count (instead of the rows).", "author": "rhtyd", "createdAt": "2020-02-18T14:23:28Z", "path": "plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java", "diffHunk": "@@ -140,7 +145,9 @@ public InfrastructureResponse listInfrastructure() {\n         response.setStoragePools(storagePoolDao.listAll().size());\n         response.setImageStores(imageStoreDao.listImageStores().size());\n         response.setSystemvms(vmInstanceDao.listByTypes(VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm).size());\n-        response.setRouters(domainRouterDao.listAll().size());\n+        response.setRouters(domainRouterDao.listByRole(VirtualRouter.Role.VIRTUAL_ROUTER).size());", "originalCommit": "b33e8904c373e6ad7916c37997a5063789a5d689", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec9fbd92fc52cc5d1528e13370f9636303f32fed", "chunk": "diff --git a/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java b/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\nindex 569ad18108..1a9cd27dbc 100644\n--- a/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\n+++ b/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\n\n@@ -138,16 +138,16 @@ public class MetricsServiceImpl extends ComponentLifecycleBase implements Metric\n     @Override\n     public InfrastructureResponse listInfrastructure() {\n         final InfrastructureResponse response = new InfrastructureResponse();\n-        response.setZones(dataCenterDao.listAllZones().size());\n-        response.setPods(podDao.listAllPods(null).size());\n-        response.setClusters(clusterDao.listAllClusters(null).size());\n-        response.setHosts(hostDao.listByType(Host.Type.Routing).size());\n-        response.setStoragePools(storagePoolDao.listAll().size());\n-        response.setImageStores(imageStoreDao.listImageStores().size());\n+        response.setZones(dataCenterDao.countAll());\n+        response.setPods(podDao.countAll());\n+        response.setClusters(clusterDao.countAll());\n+        response.setHosts(hostDao.countAllByType(Host.Type.Routing));\n+        response.setStoragePools(storagePoolDao.countAll());\n+        response.setImageStores(imageStoreDao.countAllImageStores());\n         response.setSystemvms(vmInstanceDao.listByTypes(VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm).size());\n-        response.setRouters(domainRouterDao.listByRole(VirtualRouter.Role.VIRTUAL_ROUTER).size());\n-        response.setInternalLbs(domainRouterDao.listByRole(VirtualRouter.Role.INTERNAL_LB_VM).size());\n-        response.setAlerts(alertDao.listAll().size());\n+        response.setRouters(domainRouterDao.countAllByRole(VirtualRouter.Role.VIRTUAL_ROUTER));\n+        response.setInternalLbs(domainRouterDao.countAllByRole(VirtualRouter.Role.INTERNAL_LB_VM));\n+        response.setAlerts(alertDao.countAll());\n         int cpuSockets = 0;\n         for (final Host host : hostDao.listByType(Host.Type.Routing)) {\n             if (host.getCpuSockets() != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwMjMzMw==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r380702333", "bodyText": "Same as above ^^ if it may be done quickly.", "author": "rhtyd", "createdAt": "2020-02-18T14:23:51Z", "path": "plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java", "diffHunk": "@@ -140,7 +145,9 @@ public InfrastructureResponse listInfrastructure() {\n         response.setStoragePools(storagePoolDao.listAll().size());\n         response.setImageStores(imageStoreDao.listImageStores().size());\n         response.setSystemvms(vmInstanceDao.listByTypes(VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm).size());\n-        response.setRouters(domainRouterDao.listAll().size());\n+        response.setRouters(domainRouterDao.listByRole(VirtualRouter.Role.VIRTUAL_ROUTER).size());\n+        response.setInternalLbs(domainRouterDao.listByRole(VirtualRouter.Role.INTERNAL_LB_VM).size());\n+        response.setAlerts(alertDao.listAll().size());", "originalCommit": "b33e8904c373e6ad7916c37997a5063789a5d689", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec9fbd92fc52cc5d1528e13370f9636303f32fed", "chunk": "diff --git a/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java b/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\nindex 569ad18108..1a9cd27dbc 100644\n--- a/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\n+++ b/plugins/metrics/src/main/java/org/apache/cloudstack/metrics/MetricsServiceImpl.java\n\n@@ -138,16 +138,16 @@ public class MetricsServiceImpl extends ComponentLifecycleBase implements Metric\n     @Override\n     public InfrastructureResponse listInfrastructure() {\n         final InfrastructureResponse response = new InfrastructureResponse();\n-        response.setZones(dataCenterDao.listAllZones().size());\n-        response.setPods(podDao.listAllPods(null).size());\n-        response.setClusters(clusterDao.listAllClusters(null).size());\n-        response.setHosts(hostDao.listByType(Host.Type.Routing).size());\n-        response.setStoragePools(storagePoolDao.listAll().size());\n-        response.setImageStores(imageStoreDao.listImageStores().size());\n+        response.setZones(dataCenterDao.countAll());\n+        response.setPods(podDao.countAll());\n+        response.setClusters(clusterDao.countAll());\n+        response.setHosts(hostDao.countAllByType(Host.Type.Routing));\n+        response.setStoragePools(storagePoolDao.countAll());\n+        response.setImageStores(imageStoreDao.countAllImageStores());\n         response.setSystemvms(vmInstanceDao.listByTypes(VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm).size());\n-        response.setRouters(domainRouterDao.listByRole(VirtualRouter.Role.VIRTUAL_ROUTER).size());\n-        response.setInternalLbs(domainRouterDao.listByRole(VirtualRouter.Role.INTERNAL_LB_VM).size());\n-        response.setAlerts(alertDao.listAll().size());\n+        response.setRouters(domainRouterDao.countAllByRole(VirtualRouter.Role.VIRTUAL_ROUTER));\n+        response.setInternalLbs(domainRouterDao.countAllByRole(VirtualRouter.Role.INTERNAL_LB_VM));\n+        response.setAlerts(alertDao.countAll());\n         int cpuSockets = 0;\n         for (final Host host : hostDao.listByType(Host.Type.Routing)) {\n             if (host.getCpuSockets() != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxNzgxMg==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r380717812", "bodyText": "@Pearl1594 can you share why you add the method searchForServersExcluding ?\nsource host is removed in line\nallHosts.remove(srcHost);", "author": "weizhouapache", "createdAt": "2020-02-18T14:47:57Z", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1248,7 +1248,7 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n+            allHostsPair = searchForServersExcluding(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, srcHostId, keyword, null, null, srcHost.getHypervisorType(),\n                     srcHost.getHypervisorVersion());\n             allHosts = allHostsPair.first();\n             allHosts.remove(srcHost);", "originalCommit": "7b26d94a88bf736c93233562f7149ed15d3d8c2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNzAxOQ==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r380727019", "bodyText": "@weizhouapache True, however, it was noticed that, say if there were 15 hosts, with a default pagesize of 10, the 1st page (considering it contained the src host) will have 9 objects returned and the 2nd page will have the remaining 5, as opposed to the ideal behavior of the 1st page containing 10 items and the remaining 4 being listed on page 2.", "author": "Pearl1594", "createdAt": "2020-02-18T15:01:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcxNzgxMg=="}], "type": "inlineReview", "revised_code": {"commit": "4135bb7b376829220328d8d15043950caaa187ee", "chunk": "diff --git a/server/src/main/java/com/cloud/server/ManagementServerImpl.java b/server/src/main/java/com/cloud/server/ManagementServerImpl.java\nindex 47caea2b1a..5bed8d63c6 100644\n--- a/server/src/main/java/com/cloud/server/ManagementServerImpl.java\n+++ b/server/src/main/java/com/cloud/server/ManagementServerImpl.java\n\n@@ -1248,7 +1248,7 @@ public class ManagementServerImpl extends ManagerBase implements ManagementServe\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServersExcluding(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, srcHostId, keyword, null, null, srcHost.getHypervisorType(),\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n                     srcHost.getHypervisorVersion());\n             allHosts = allHostsPair.first();\n             allHosts.remove(srcHost);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc4MDc3NQ==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r380780775", "bodyText": "@Pearl1594 curb adding newlines", "author": "rhtyd", "createdAt": "2020-02-18T16:19:44Z", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1515,6 +1515,89 @@ private boolean hasSuitablePoolsForVolume(final VolumeVO volume, final Host host\n         return suitablePools;\n     }\n \n+", "originalCommit": "7b26d94a88bf736c93233562f7149ed15d3d8c2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4135bb7b376829220328d8d15043950caaa187ee", "chunk": "diff --git a/server/src/main/java/com/cloud/server/ManagementServerImpl.java b/server/src/main/java/com/cloud/server/ManagementServerImpl.java\nindex 47caea2b1a..5bed8d63c6 100644\n--- a/server/src/main/java/com/cloud/server/ManagementServerImpl.java\n+++ b/server/src/main/java/com/cloud/server/ManagementServerImpl.java\n\n@@ -1515,89 +1515,6 @@ public class ManagementServerImpl extends ManagerBase implements ManagementServe\n         return suitablePools;\n     }\n \n-\n-    private Pair<List<HostVO>, Integer> searchForServersExcluding(final Long startIndex, final Long pageSize, final Object name, final Object type, final Object state, final Object zone, final Object pod,\n-                                                         final Object cluster, final Long id, final Object keyword, final Object resourceState, final Object haHosts, final Object hypervisorType, final Object hypervisorVersion) {\n-        final Filter searchFilter = new Filter(HostVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n-\n-        final SearchBuilder<HostVO> sb = _hostDao.createSearchBuilder();\n-        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.NEQ);\n-        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.LIKE);\n-        sb.and(\"type\", sb.entity().getType(), SearchCriteria.Op.LIKE);\n-        sb.and(\"status\", sb.entity().getStatus(), SearchCriteria.Op.EQ);\n-        sb.and(\"dataCenterId\", sb.entity().getDataCenterId(), SearchCriteria.Op.EQ);\n-        sb.and(\"podId\", sb.entity().getPodId(), SearchCriteria.Op.EQ);\n-        sb.and(\"clusterId\", sb.entity().getClusterId(), SearchCriteria.Op.EQ);\n-        sb.and(\"resourceState\", sb.entity().getResourceState(), SearchCriteria.Op.EQ);\n-        sb.and(\"hypervisorType\", sb.entity().getHypervisorType(), SearchCriteria.Op.EQ);\n-        sb.and(\"hypervisorVersion\", sb.entity().getHypervisorVersion(), SearchCriteria.Op.GTEQ);\n-\n-        final String haTag = _haMgr.getHaTag();\n-        SearchBuilder<HostTagVO> hostTagSearch = null;\n-        if (haHosts != null && haTag != null && !haTag.isEmpty()) {\n-            hostTagSearch = _hostTagsDao.createSearchBuilder();\n-            if ((Boolean)haHosts) {\n-                hostTagSearch.and().op(\"tag\", hostTagSearch.entity().getTag(), SearchCriteria.Op.EQ);\n-            } else {\n-                hostTagSearch.and().op(\"tag\", hostTagSearch.entity().getTag(), SearchCriteria.Op.NEQ);\n-                hostTagSearch.or(\"tagNull\", hostTagSearch.entity().getTag(), SearchCriteria.Op.NULL);\n-            }\n-\n-            hostTagSearch.cp();\n-            sb.join(\"hostTagSearch\", hostTagSearch, sb.entity().getId(), hostTagSearch.entity().getHostId(), JoinBuilder.JoinType.LEFTOUTER);\n-        }\n-\n-        final SearchCriteria<HostVO> sc = sb.create();\n-\n-        if (keyword != null) {\n-            final SearchCriteria<HostVO> ssc = _hostDao.createSearchCriteria();\n-            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n-            ssc.addOr(\"status\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n-            ssc.addOr(\"type\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n-\n-            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n-        }\n-\n-        if (id != null) {\n-            sc.setParameters(\"id\", id);\n-        }\n-\n-        if (name != null) {\n-            sc.setParameters(\"name\", \"%\" + name + \"%\");\n-        }\n-        if (type != null) {\n-            sc.setParameters(\"type\", \"%\" + type);\n-        }\n-        if (state != null) {\n-            sc.setParameters(\"status\", state);\n-        }\n-        if (zone != null) {\n-            sc.setParameters(\"dataCenterId\", zone);\n-        }\n-        if (pod != null) {\n-            sc.setParameters(\"podId\", pod);\n-        }\n-        if (cluster != null) {\n-            sc.setParameters(\"clusterId\", cluster);\n-        }\n-        if (hypervisorType != null) {\n-            sc.setParameters(\"hypervisorType\", hypervisorType);\n-        }\n-        if (hypervisorVersion != null) {\n-            sc.setParameters(\"hypervisorVersion\", hypervisorVersion);\n-        }\n-\n-        if (resourceState != null) {\n-            sc.setParameters(\"resourceState\", resourceState);\n-        }\n-\n-        if (haHosts != null && haTag != null && !haTag.isEmpty()) {\n-            sc.setJoinParameters(\"hostTagSearch\", \"tag\", haTag);\n-        }\n-\n-        return _hostDao.searchAndCount(sc, searchFilter);\n-    }\n-\n     private Pair<List<HostVO>, Integer> searchForServers(final Long startIndex, final Long pageSize, final Object name, final Object type, final Object state, final Object zone, final Object pod,\n             final Object cluster, final Object id, final Object keyword, final Object resourceState, final Object haHosts, final Object hypervisorType, final Object hypervisorVersion) {\n         final Filter searchFilter = new Filter(HostVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5Njk5Nw==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r382396997", "bodyText": "@Pearl1594 can you add a check here that listall is true and the user is an admin (not a domain admin, not a user but an admin)", "author": "rhtyd", "createdAt": "2020-02-21T04:54:17Z", "path": "server/src/main/java/com/cloud/user/AccountManagerImpl.java", "diffHunk": "@@ -2680,6 +2680,9 @@ public void buildACLSearchParameters(Account caller, Long id, String accountName\n                         }\n                     } else {\n                         domainIdRecursiveListProject.third(Project.ListProjectResourcesCriteria.ListProjectResourcesOnly);\n+                        if (listAll) {", "originalCommit": "9d52234517894cc40f29d11abdca98bc0b27b853", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3f68965b94944fadfc9219181dc2ef7fc3903fd0", "chunk": "diff --git a/server/src/main/java/com/cloud/user/AccountManagerImpl.java b/server/src/main/java/com/cloud/user/AccountManagerImpl.java\nindex 5ec74a9d3b..20d769f09e 100644\n--- a/server/src/main/java/com/cloud/user/AccountManagerImpl.java\n+++ b/server/src/main/java/com/cloud/user/AccountManagerImpl.java\n\n@@ -2680,9 +2680,6 @@ public class AccountManagerImpl extends ManagerBase implements AccountManager, M\n                         }\n                     } else {\n                         domainIdRecursiveListProject.third(Project.ListProjectResourcesCriteria.ListProjectResourcesOnly);\n-                        if (listAll) {\n-                            domainIdRecursiveListProject.third(ListProjectResourcesCriteria.ListAllIncludingProjectResources);\n-                        }\n                     }\n                 } else {\n                     Project project = _projectMgr.getProject(projectId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyMDQ4Nw==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r382920487", "bodyText": "@Pearl1594 did you merge master? There are additional changes.", "author": "rhtyd", "createdAt": "2020-02-22T15:32:30Z", "path": "engine/components-api/src/main/java/com/cloud/agent/AgentManager.java", "diffHunk": "@@ -152,4 +152,6 @@\n     void notifyMonitorsOfHostAboutToBeRemoved(long hostId);\n \n     void notifyMonitorsOfRemovedHost(long hostId, long clusterId);\n+", "originalCommit": "0538d184e678fbdcb3f7ddfc49c9644e26b6cda1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyMDgwNQ==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r382920805", "bodyText": "@rhtyd I haven't merged master", "author": "Pearl1594", "createdAt": "2020-02-22T15:37:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyMDQ4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyMTQ2Ng==", "url": "https://github.com/apache/cloudstack/pull/3894#discussion_r382921466", "bodyText": "Can you check the diff, do we need changes around agent propagation?", "author": "rhtyd", "createdAt": "2020-02-22T15:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkyMDQ4Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "3f68965b94944fadfc9219181dc2ef7fc3903fd0", "url": "https://github.com/apache/cloudstack/commit/3f68965b94944fadfc9219181dc2ef7fc3903fd0", "message": "Fixed count value in the list apis", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "54d269a4ccf20b7967823b35896d660e07bb7125", "url": "https://github.com/apache/cloudstack/commit/54d269a4ccf20b7967823b35896d660e07bb7125", "message": "Update InfrastructureResponse.java", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "4135bb7b376829220328d8d15043950caaa187ee", "url": "https://github.com/apache/cloudstack/commit/4135bb7b376829220328d8d15043950caaa187ee", "message": "partial revert hosts for migration code to exclude srcHost\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "ec9fbd92fc52cc5d1528e13370f9636303f32fed", "url": "https://github.com/apache/cloudstack/commit/ec9fbd92fc52cc5d1528e13370f9636303f32fed", "message": "wip: make get count from db efficient, no need to get all rows; simply get the total count\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "0c983177d26eb449eaa242a61c53338d4d49c3fe", "url": "https://github.com/apache/cloudstack/commit/0c983177d26eb449eaa242a61c53338d4d49c3fe", "message": "fix build\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "a73ff27b777a3d9cf720424d777cb2558346aa97", "url": "https://github.com/apache/cloudstack/commit/a73ff27b777a3d9cf720424d777cb2558346aa97", "message": "patch to allow listing of all resources including project when projectid=-1 and listall=true for non-user accounts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "6c6be1513190e98a0a00e0adcc3373d5c1a46049", "url": "https://github.com/apache/cloudstack/commit/6c6be1513190e98a0a00e0adcc3373d5c1a46049", "message": "ui: don't pass both listall=true and projectid=-1\n\nPassing both would return all the resources including those from all projects\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:01:12Z", "type": "commit"}, {"oid": "fdc0be4d1b31d2cc8456c5b1e83d6ca070167e38", "url": "https://github.com/apache/cloudstack/commit/fdc0be4d1b31d2cc8456c5b1e83d6ca070167e38", "message": "return all items only for the root admin\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:16:33Z", "type": "commit"}, {"oid": "2e538b0d83ff83502c6a98a27ea7b0e83ef535af", "url": "https://github.com/apache/cloudstack/commit/2e538b0d83ff83502c6a98a27ea7b0e83ef535af", "message": "allow root admin to list all networks\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:19:32Z", "type": "forcePushed"}, {"oid": "fdc0be4d1b31d2cc8456c5b1e83d6ca070167e38", "url": "https://github.com/apache/cloudstack/commit/fdc0be4d1b31d2cc8456c5b1e83d6ca070167e38", "message": "return all items only for the root admin\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-23T08:16:33Z", "type": "forcePushed"}, {"oid": "e38b087ff0b1ca8d4a3b8a4e92b34cbd0d05d6ad", "url": "https://github.com/apache/cloudstack/commit/e38b087ff0b1ca8d4a3b8a4e92b34cbd0d05d6ad", "message": "server: list project resources listing for non-root-admin accounts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>", "committedDate": "2020-02-25T09:19:03Z", "type": "commit"}]}