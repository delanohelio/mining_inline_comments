{"pr_number": 3925, "pr_title": "Add cache mode param properly", "pr_createdAt": "2020-03-03T15:40:41Z", "pr_url": "https://github.com/apache/cloudstack/pull/3925", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5ODYzNw==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387498637", "bodyText": "\"since\" on the return @param as attribute but not on the request @parameter in the API. Probably C&P as i don't think you are planning this for the 4.4 branch! please adjust and expand (or remove)", "author": "DaanHoogland", "createdAt": "2020-03-04T07:57:02Z", "path": "api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java", "diffHunk": "@@ -192,6 +192,10 @@\n     @Param(description = \"is true if the offering is customized\", since = \"4.3.0\")\n     private Boolean isCustomized;\n \n+    @SerializedName(\"cacheMode\")\n+    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.4\")", "originalCommit": "4521c0023c856d43db238b1a49771e6a3d91d633", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "chunk": "diff --git a/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java b/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\nindex 93a6913489..1505641615 100644\n--- a/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\n+++ b/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\n\n@@ -193,7 +193,7 @@ public class ServiceOfferingResponse extends BaseResponse {\n     private Boolean isCustomized;\n \n     @SerializedName(\"cacheMode\")\n-    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.4\")\n+    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.13.0\")\n     private String cacheMode;\n \n     public ServiceOfferingResponse() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMDg5Ng==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387500896", "bodyText": "can you put this in its own method.", "author": "DaanHoogland", "createdAt": "2020-03-04T08:02:57Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -2936,6 +2948,11 @@ public DiskOffering createDiskOffering(final CreateDiskOfferingCmd cmd) {\n             throw new InvalidParameterValueException(\"Disksize is not allowed for a customized disk offering\");\n         }\n \n+        // check if valid cache_mode parameter\n+        if(cmd.getCacheMode() != null && !Enums.getIfPresent(DiskOffering.DiskCacheMode.class, cmd.getCacheMode().toUpperCase()).isPresent()){\n+            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n+        }\n+", "originalCommit": "4521c0023c856d43db238b1a49771e6a3d91d633", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex 4b8effb4ef..c9cc646be1 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -2949,7 +2949,7 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n         }\n \n         // check if valid cache_mode parameter\n-        if(cmd.getCacheMode() != null && !Enums.getIfPresent(DiskOffering.DiskCacheMode.class, cmd.getCacheMode().toUpperCase()).isPresent()){\n+        if(isCacheModeInvalid(cmd.getCacheMode())){\n             throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n         }\n \n"}}, {"oid": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "url": "https://github.com/apache/cloudstack/commit/ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "message": "Add cache mode param\nAdded integration tests for the cache mode changes", "committedDate": "2020-03-04T13:11:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwMzU1MA==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387803550", "bodyText": "@radu-todirica why no since attribute here? no biggy, just wondering if you forgot.", "author": "DaanHoogland", "createdAt": "2020-03-04T17:00:01Z", "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java", "diffHunk": "@@ -144,6 +144,9 @@\n             description = \"Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)\")\n     private Integer hypervisorSnapshotReserve;\n \n+    @Parameter(name = ApiConstants.CACHE_MODE, type = CommandType.STRING, required = false, description = \"the cache mode to use for this disk offering. none, writeback or writethrough\")", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java b/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java\nindex 9c4ec42c17..f0ca5fb851 100644\n--- a/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java\n+++ b/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java\n\n@@ -144,7 +144,11 @@ public class CreateDiskOfferingCmd extends BaseCmd {\n             description = \"Hypervisor snapshot reserve space as a percent of a volume (for managed storage using Xen or VMware)\")\n     private Integer hypervisorSnapshotReserve;\n \n-    @Parameter(name = ApiConstants.CACHE_MODE, type = CommandType.STRING, required = false, description = \"the cache mode to use for this disk offering. none, writeback or writethrough\")\n+    @Parameter(name = ApiConstants.CACHE_MODE,\n+            type = CommandType.STRING,\n+            required = false,\n+            description = \"the cache mode to use for this disk offering. none, writeback or writethrough\",\n+            since = \"4.14\")\n     private String cacheMode;\n \n /////////////////////////////////////////////////////\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDI1NQ==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387804255", "bodyText": "I think it is better to call the method validateCachMode(String cacheMode) and include this code as it is duplicated below in lines 2951 - 2955:\nvoid validateCachMode(String cacheMode){\n    if( cacheMode != null &&\n        !Enums.getIfPresent(DiskOffering.DiskCacheMode.class,\n                            cacheMode.toUpperCase()).isPresent() {\n        throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n    }\n}", "author": "DaanHoogland", "createdAt": "2020-03-04T17:01:11Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -2318,6 +2319,11 @@ public ServiceOffering createServiceOffering(final CreateServiceOfferingCmd cmd)\n             }\n         }\n \n+        // check if valid cache_mode parameter\n+        if(isCacheModeInvalid(cmd.getCacheMode())){\n+            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n+        }\n+", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex c9cc646be1..c5fa18b5e3 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -2319,10 +2319,8 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n             }\n         }\n \n-        // check if valid cache_mode parameter\n-        if(isCacheModeInvalid(cmd.getCacheMode())){\n-            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n-        }\n+        // check if cache_mode parameter is valid\n+        validateCacheMode(cmd.getCacheMode());\n \n         final Boolean offerHA = cmd.isOfferHa();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDUwNw==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387804507", "bodyText": "duplicate of 2322 - 2326", "author": "DaanHoogland", "createdAt": "2020-03-04T17:01:37Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -2936,6 +2948,11 @@ public DiskOffering createDiskOffering(final CreateDiskOfferingCmd cmd) {\n             throw new InvalidParameterValueException(\"Disksize is not allowed for a customized disk offering\");\n         }\n \n+        // check if valid cache_mode parameter\n+        if(isCacheModeInvalid(cmd.getCacheMode())){\n+            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n+        }\n+", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex c9cc646be1..c5fa18b5e3 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -2948,10 +2946,8 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n             throw new InvalidParameterValueException(\"Disksize is not allowed for a customized disk offering\");\n         }\n \n-        // check if valid cache_mode parameter\n-        if(isCacheModeInvalid(cmd.getCacheMode())){\n-            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n-        }\n+        // check if cache_mode parameter is valid\n+        validateCacheMode(cmd.getCacheMode());\n \n         boolean localStorageRequired = false;\n         final String storageType = cmd.getStorageType();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3ODAzMQ==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387778031", "bodyText": "since = \"4.14\" if merged in time for 4.14 releasing", "author": "GabrielBrascher", "createdAt": "2020-03-04T16:21:03Z", "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateServiceOfferingCmd.java", "diffHunk": "@@ -178,6 +178,13 @@\n             since = \"4.4\")\n     private Integer hypervisorSnapshotReserve;\n \n+    @Parameter(name = ApiConstants.CACHE_MODE,\n+            type = CommandType.STRING,\n+            required = false,\n+            description = \"the cache mode to use for this disk offering. none, writeback or writethrough\",\n+            since = \"4.13\")", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NDAyMw==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387864023", "bodyText": "@DaanHoogland this \"since\" should be 4.14, right? Is it going to be merged into branch 4.13 instead of master?", "author": "GabrielBrascher", "createdAt": "2020-03-04T18:50:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3ODAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateServiceOfferingCmd.java b/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateServiceOfferingCmd.java\nindex a31f1bbec9..5015f7c51b 100644\n--- a/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateServiceOfferingCmd.java\n+++ b/api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateServiceOfferingCmd.java\n\n@@ -182,7 +182,7 @@ public class CreateServiceOfferingCmd extends BaseCmd {\n             type = CommandType.STRING,\n             required = false,\n             description = \"the cache mode to use for this disk offering. none, writeback or writethrough\",\n-            since = \"4.13\")\n+            since = \"4.14\")\n     private String cacheMode;\n \n     // Introduce 4 new optional paramaters to work custom compute offerings\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3ODk5MQ==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387778991", "bodyText": "Change to 4.14?", "author": "GabrielBrascher", "createdAt": "2020-03-04T16:22:19Z", "path": "api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java", "diffHunk": "@@ -192,6 +192,10 @@\n     @Param(description = \"is true if the offering is customized\", since = \"4.3.0\")\n     private Boolean isCustomized;\n \n+    @SerializedName(\"cacheMode\")\n+    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.13.0\")", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java b/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\nindex 1505641615..9d5e9ee5d7 100644\n--- a/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\n+++ b/api/src/main/java/org/apache/cloudstack/api/response/ServiceOfferingResponse.java\n\n@@ -193,7 +193,7 @@ public class ServiceOfferingResponse extends BaseResponse {\n     private Boolean isCustomized;\n \n     @SerializedName(\"cacheMode\")\n-    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.13.0\")\n+    @Param(description = \"the cache mode to use for this disk offering. none, writeback or writethrough\", since = \"4.14\")\n     private String cacheMode;\n \n     public ServiceOfferingResponse() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NTc1Mw==", "url": "https://github.com/apache/cloudstack/pull/3925#discussion_r387845753", "bodyText": "Can you please add more information on the log? Example: String.format(\"Invalid cache mode (%s), specify a valid cache mode parameter\", cmd.getCacheMode())", "author": "GabrielBrascher", "createdAt": "2020-03-04T18:16:16Z", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -2936,6 +2948,11 @@ public DiskOffering createDiskOffering(final CreateDiskOfferingCmd cmd) {\n             throw new InvalidParameterValueException(\"Disksize is not allowed for a customized disk offering\");\n         }\n \n+        // check if valid cache_mode parameter\n+        if(isCacheModeInvalid(cmd.getCacheMode())){\n+            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");", "originalCommit": "ec4d15ef182c2f099f455c1a0dc3cbe2dc6d80e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "chunk": "diff --git a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\nindex c9cc646be1..c5fa18b5e3 100755\n--- a/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n+++ b/server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n\n@@ -2948,10 +2946,8 @@ public class ConfigurationManagerImpl extends ManagerBase implements Configurati\n             throw new InvalidParameterValueException(\"Disksize is not allowed for a customized disk offering\");\n         }\n \n-        // check if valid cache_mode parameter\n-        if(isCacheModeInvalid(cmd.getCacheMode())){\n-            throw new InvalidParameterValueException(\"Please specify a valid cache mode parameter\");\n-        }\n+        // check if cache_mode parameter is valid\n+        validateCacheMode(cmd.getCacheMode());\n \n         boolean localStorageRequired = false;\n         final String storageType = cmd.getStorageType();\n"}}, {"oid": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "url": "https://github.com/apache/cloudstack/commit/8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "message": "Add cache mode param\nAdded integration tests for the cache mode changes", "committedDate": "2020-03-05T12:23:02Z", "type": "commit"}, {"oid": "8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "url": "https://github.com/apache/cloudstack/commit/8afdde8c133bf817dc1b0ff40bf8dba042f86c72", "message": "Add cache mode param\nAdded integration tests for the cache mode changes", "committedDate": "2020-03-05T12:23:02Z", "type": "forcePushed"}]}