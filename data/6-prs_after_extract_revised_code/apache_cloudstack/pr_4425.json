{"pr_number": 4425, "pr_title": "Setting snapshot removed on timeout", "pr_createdAt": "2020-10-26T07:51:33Z", "pr_url": "https://github.com/apache/cloudstack/pull/4425", "timeline": [{"oid": "1a0734f07a6370dd6c5a8a72e736e3472184df56", "url": "https://github.com/apache/cloudstack/commit/1a0734f07a6370dd6c5a8a72e736e3472184df56", "message": "Setting snapshot state to error on timeout", "committedDate": "2020-10-26T07:44:01Z", "type": "commit"}, {"oid": "9650051a295e1e3b383eda56bca27851a4644bcf", "url": "https://github.com/apache/cloudstack/commit/9650051a295e1e3b383eda56bca27851a4644bcf", "message": "Setting removed field so snapshot record is ignored by garbage collection", "committedDate": "2020-11-06T10:36:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg1OTc4MQ==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r519859781", "bodyText": "should this be in a transaction to be sure?", "author": "DaanHoogland", "createdAt": "2020-11-09T14:36:31Z", "path": "server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java", "diffHunk": "@@ -553,6 +553,25 @@ private void postCreateRecurringSnapshotForPolicy(long userId, long volumeId, lo\n         }\n     }\n \n+    public void markFailedSnapshot(long snapshotId) {\n+        Account caller = CallContext.current().getCallingAccount();\n+\n+        // Verify parameters\n+        SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n+\n+        if (snapshotCheck == null) {\n+            throw new InvalidParameterValueException(\"unable to find a snapshot with id \" + snapshotId);\n+        }\n+\n+        _accountMgr.checkAccess(caller, null, true, snapshotCheck);\n+\n+        snapshotCheck.setState(Snapshot.State.Error);\n+        _snapshotDao.update(snapshotId, snapshotCheck);\n+        // Setting removed to prevent record from being deleted by garbage collection.\n+        _snapshotDao.remove(snapshotId);", "originalCommit": "9650051a295e1e3b383eda56bca27851a4644bcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1NjM1MA==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r520656350", "bodyText": "ping @Spaceman1984", "author": "DaanHoogland", "createdAt": "2020-11-10T15:34:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg1OTc4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2NjAxOA==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r520866018", "bodyText": "ping @davidjumani @GabrielBrascher @rhtyd the two statements above should be grouped in a transaction. agree?", "author": "DaanHoogland", "createdAt": "2020-11-10T20:51:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg1OTc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "chunk": "diff --git a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\nindex 616809b72d..ad39512809 100755\n--- a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n\n@@ -553,7 +553,7 @@ public class SnapshotManagerImpl extends MutualExclusiveIdsManagerBase implement\n         }\n     }\n \n-    public void markFailedSnapshot(long snapshotId) {\n+    public void markRemovedSnapshot(long snapshotId) {\n         Account caller = CallContext.current().getCallingAccount();\n \n         // Verify parameters\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzOTUxNw==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r521139517", "bodyText": "@Spaceman1984 the copy callback should mark the snapshot state accordingly, based on the operation result (success / fail). Not required to set the state explicitly.", "author": "sureshanaparti", "createdAt": "2020-11-11T06:30:06Z", "path": "engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java", "diffHunk": "@@ -587,6 +590,7 @@ protected Answer copySnapshot(DataObject srcData, DataObject destData) {\n             if (cacheData != null) {\n                 cacheMgr.deleteCacheObject(cacheData);\n             }\n+            _snapshotService.markFailedSnapshot(destData.getId());", "originalCommit": "9650051a295e1e3b383eda56bca27851a4644bcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MDIzNg==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525170236", "bodyText": "Addressed", "author": "Spaceman1984", "createdAt": "2020-11-17T13:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzOTUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "chunk": "diff --git a/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java b/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\nindex f911bb52f3..af719b89e9 100644\n--- a/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\n+++ b/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\n\n@@ -590,7 +590,7 @@ public class AncientDataMotionStrategy implements DataMotionStrategy {\n             if (cacheData != null) {\n                 cacheMgr.deleteCacheObject(cacheData);\n             }\n-            _snapshotService.markFailedSnapshot(destData.getId());\n+            _snapshotService.markRemovedSnapshot(destData.getId());\n             throw new CloudRuntimeException(e.toString());\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MDYyNQ==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r521140625", "bodyText": "@Spaceman1984 can you handle this in the copy callback, and pass the proper event to set the snapshot state?", "author": "sureshanaparti", "createdAt": "2020-11-11T06:33:30Z", "path": "server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java", "diffHunk": "@@ -553,6 +553,25 @@ private void postCreateRecurringSnapshotForPolicy(long userId, long volumeId, lo\n         }\n     }\n \n+    public void markFailedSnapshot(long snapshotId) {\n+        Account caller = CallContext.current().getCallingAccount();\n+\n+        // Verify parameters\n+        SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n+\n+        if (snapshotCheck == null) {\n+            throw new InvalidParameterValueException(\"unable to find a snapshot with id \" + snapshotId);\n+        }\n+\n+        _accountMgr.checkAccess(caller, null, true, snapshotCheck);\n+\n+        snapshotCheck.setState(Snapshot.State.Error);", "originalCommit": "9650051a295e1e3b383eda56bca27851a4644bcf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0Mjc3MQ==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r521142771", "bodyText": "Not sure what you mean @sureshanaparti", "author": "Spaceman1984", "createdAt": "2020-11-11T06:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE1ODIyMA==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r521158220", "bodyText": "Not sure what you mean @sureshanaparti\n\n@Spaceman1984 the caller of copyAsync method would set a callback method to process the result and set the object state accordingly. Can you use that callback method (of snapshot copy operation) to set the state, through the event (check the snapshot state machine) ?", "author": "sureshanaparti", "createdAt": "2020-11-11T07:08:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA0NjIzNQ==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525046235", "bodyText": "I'll take a look.", "author": "Spaceman1984", "createdAt": "2020-11-17T10:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MDYyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2OTc1Nw==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525169757", "bodyText": "I have removed setting the error state, this leaves the snapshot in a \"backing up\" state forever which is fine.", "author": "Spaceman1984", "createdAt": "2020-11-17T13:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0MDYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "chunk": "diff --git a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\nindex 616809b72d..ad39512809 100755\n--- a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n\n@@ -553,7 +553,7 @@ public class SnapshotManagerImpl extends MutualExclusiveIdsManagerBase implement\n         }\n     }\n \n-    public void markFailedSnapshot(long snapshotId) {\n+    public void markRemovedSnapshot(long snapshotId) {\n         Account caller = CallContext.current().getCallingAccount();\n \n         // Verify parameters\n"}}, {"oid": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "url": "https://github.com/apache/cloudstack/commit/cd8955e6c8faad04693e64996e36c751f3e0aee9", "message": "Removed explicitly setting error status, renamed method from markFailed to markRemoved", "committedDate": "2020-11-17T13:47:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMjQ0MA==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525902440", "bodyText": "markRemovedSnapshot indicates the snapshot is already removed. I think removeSnapshot (or markSnapshotAsRemoved) is ok.", "author": "sureshanaparti", "createdAt": "2020-11-18T08:37:01Z", "path": "server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java", "diffHunk": "@@ -553,6 +553,22 @@ private void postCreateRecurringSnapshotForPolicy(long userId, long volumeId, lo\n         }\n     }\n \n+    public void markRemovedSnapshot(long snapshotId) {", "originalCommit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a7574ba3323268eaede28df804bd24874cd79b6e", "chunk": "diff --git a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\nindex ad39512809..16a4c07db5 100755\n--- a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n\n@@ -553,9 +553,7 @@ public class SnapshotManagerImpl extends MutualExclusiveIdsManagerBase implement\n         }\n     }\n \n-    public void markRemovedSnapshot(long snapshotId) {\n-        Account caller = CallContext.current().getCallingAccount();\n-\n+    public void markSnapshotAsRemoved(long snapshotId) {\n         // Verify parameters\n         SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwMzQ3Nw==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525903477", "bodyText": "move caller here.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    _accountMgr.checkAccess(caller, null, true, snapshotCheck);\n          \n          \n            \n                    Account caller = CallContext.current().getCallingAccount();\n          \n          \n            \n                    _accountMgr.checkAccess(caller, null, true, snapshotCheck);", "author": "sureshanaparti", "createdAt": "2020-11-18T08:38:40Z", "path": "server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java", "diffHunk": "@@ -553,6 +553,22 @@ private void postCreateRecurringSnapshotForPolicy(long userId, long volumeId, lo\n         }\n     }\n \n+    public void markRemovedSnapshot(long snapshotId) {\n+        Account caller = CallContext.current().getCallingAccount();\n+\n+        // Verify parameters\n+        SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n+\n+        if (snapshotCheck == null) {\n+            throw new InvalidParameterValueException(\"unable to find a snapshot with id \" + snapshotId);\n+        }\n+\n+        _accountMgr.checkAccess(caller, null, true, snapshotCheck);", "originalCommit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a7574ba3323268eaede28df804bd24874cd79b6e", "chunk": "diff --git a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\nindex ad39512809..16a4c07db5 100755\n--- a/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/storage/snapshot/SnapshotManagerImpl.java\n\n@@ -553,9 +553,7 @@ public class SnapshotManagerImpl extends MutualExclusiveIdsManagerBase implement\n         }\n     }\n \n-    public void markRemovedSnapshot(long snapshotId) {\n-        Account caller = CallContext.current().getCallingAccount();\n-\n+    public void markSnapshotAsRemoved(long snapshotId) {\n         // Verify parameters\n         SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzM1Mg==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r525907352", "bodyText": "Can you check for OperationTimedoutException (if thrown for timeout?), set removed accordingly. Note that, the snapshot here is not in Error state as the copy callback is not yet to be called, which takes the action based on the operation failure.", "author": "sureshanaparti", "createdAt": "2020-11-18T08:45:06Z", "path": "engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java", "diffHunk": "@@ -587,6 +590,7 @@ protected Answer copySnapshot(DataObject srcData, DataObject destData) {\n             if (cacheData != null) {\n                 cacheMgr.deleteCacheObject(cacheData);\n             }\n+            _snapshotService.markRemovedSnapshot(destData.getId());", "originalCommit": "cd8955e6c8faad04693e64996e36c751f3e0aee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjExMTQ4NA==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r526111484", "bodyText": "I think having the snapshot marked as removed here in the case of any exception is better than just checking for a timeout. I think if the process fails for any reason we would want to keep the db records.", "author": "Spaceman1984", "createdAt": "2020-11-18T14:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzODU4MQ==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r526638581", "bodyText": "@Spaceman1984 possible to move this method call \"__snapshotService.markSnapshotAsRemoved(destData.getId())_\" to copy snapshot callback method on result failure?", "author": "sureshanaparti", "createdAt": "2020-11-19T07:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzM1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY5Nzc3Mg==", "url": "https://github.com/apache/cloudstack/pull/4425#discussion_r526697772", "bodyText": "Thanks @sureshanaparti for pointing me in that direction, I was able to get rid of that method.", "author": "Spaceman1984", "createdAt": "2020-11-19T09:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkwNzM1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "a7574ba3323268eaede28df804bd24874cd79b6e", "chunk": "diff --git a/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java b/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\nindex af719b89e9..a75f7e8b78 100644\n--- a/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\n+++ b/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java\n\n@@ -590,7 +590,7 @@ public class AncientDataMotionStrategy implements DataMotionStrategy {\n             if (cacheData != null) {\n                 cacheMgr.deleteCacheObject(cacheData);\n             }\n-            _snapshotService.markRemovedSnapshot(destData.getId());\n+            _snapshotService.markSnapshotAsRemoved(destData.getId());\n             throw new CloudRuntimeException(e.toString());\n         }\n \n"}}, {"oid": "a7574ba3323268eaede28df804bd24874cd79b6e", "url": "https://github.com/apache/cloudstack/commit/a7574ba3323268eaede28df804bd24874cd79b6e", "message": "Renamed method, moved code a few lines down", "committedDate": "2020-11-18T14:05:58Z", "type": "commit"}, {"oid": "49d6ff065bbc6cfe853d32332aafaf81d4455839", "url": "https://github.com/apache/cloudstack/commit/49d6ff065bbc6cfe853d32332aafaf81d4455839", "message": "Moved remove logic", "committedDate": "2020-11-19T09:01:31Z", "type": "commit"}, {"oid": "24033b0fa9460ac9c91f559a9c31a5e7316832b7", "url": "https://github.com/apache/cloudstack/commit/24033b0fa9460ac9c91f559a9c31a5e7316832b7", "message": "Removed unused service", "committedDate": "2020-11-19T09:12:40Z", "type": "commit"}, {"oid": "0b168eabe76db3aa13061d3c158a49ea0cbec5a8", "url": "https://github.com/apache/cloudstack/commit/0b168eabe76db3aa13061d3c158a49ea0cbec5a8", "message": "Moved removed logic - last time, promise", "committedDate": "2020-11-19T10:28:57Z", "type": "commit"}]}