{"pr_number": 4003, "pr_title": "Logging framework to use only log4j", "pr_createdAt": "2020-03-31T08:35:42Z", "pr_url": "https://github.com/apache/cloudstack/pull/4003", "timeline": [{"oid": "e3510e707eba20d408fff1a2d03beca576b1120c", "url": "https://github.com/apache/cloudstack/commit/e3510e707eba20d408fff1a2d03beca576b1120c", "message": "Currently CloudStack is using logging frameworks as log4j and Java util logging, logging wrappers as slf4j and Apache common logging.\n\nHere to made it uniform, using only log4j framework and slf4j wrapper", "committedDate": "2020-03-31T08:42:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDEzMA==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r401884130", "bodyText": "name convention for private statics is all capitals so LOG is a better name.", "author": "DaanHoogland", "createdAt": "2020-04-01T20:18:26Z", "path": "utils/src/main/java/com/cloud/utils/backoff/impl/ConstantTimeBackoff.java", "diffHunk": "@@ -44,7 +41,7 @@\n public class ConstantTimeBackoff extends AdapterBase implements BackoffAlgorithm, ConstantTimeBackoffMBean {\n     long _time;\n     private final Map<String, Thread> _asleep = new ConcurrentHashMap<String, Thread>();\n-    private final static Log LOG = LogFactory.getLog(ConstantTimeBackoff.class);\n+    private static final Logger s_logger = Logger.getLogger(ConstantTimeBackoff.class.getName());", "originalCommit": "e3510e707eba20d408fff1a2d03beca576b1120c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA0NDQwOA==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r402044408", "bodyText": "changed it to capitals but used S_LOGGER since this is the name we are using everywhere.", "author": "harikrishna-patnala", "createdAt": "2020-04-02T04:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkzOTcwMA==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r402939700", "bodyText": "no, please, the s_ is an old convention. LOGGER is ok, but LOG as well. I prefer the latter, but as long as we standardise on something I'm fine with it.", "author": "DaanHoogland", "createdAt": "2020-04-03T11:27:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "b3504dc552ca475d535c994d703b786927208d6c", "chunk": "diff --git a/utils/src/main/java/com/cloud/utils/backoff/impl/ConstantTimeBackoff.java b/utils/src/main/java/com/cloud/utils/backoff/impl/ConstantTimeBackoff.java\nindex 47fefe9c28..d13c83b770 100644\n--- a/utils/src/main/java/com/cloud/utils/backoff/impl/ConstantTimeBackoff.java\n+++ b/utils/src/main/java/com/cloud/utils/backoff/impl/ConstantTimeBackoff.java\n\n@@ -41,7 +41,7 @@ import org.apache.log4j.Logger;\n public class ConstantTimeBackoff extends AdapterBase implements BackoffAlgorithm, ConstantTimeBackoffMBean {\n     long _time;\n     private final Map<String, Thread> _asleep = new ConcurrentHashMap<String, Thread>();\n-    private static final Logger s_logger = Logger.getLogger(ConstantTimeBackoff.class.getName());\n+    private static final Logger S_LOGGER = Logger.getLogger(ConstantTimeBackoff.class.getName());\n \n     @Override\n     public void waitBeforeRetry() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDUzMg==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r401884532", "bodyText": "please rename to LOG", "author": "DaanHoogland", "createdAt": "2020-04-01T20:19:06Z", "path": "utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLProtocolSocketFactory.java", "diffHunk": "@@ -88,7 +87,7 @@\n public class EasySSLProtocolSocketFactory implements ProtocolSocketFactory {\n \n     /** Log object for this class. */\n-    private static final Log LOG = LogFactory.getLog(EasySSLProtocolSocketFactory.class);\n+    private static final Logger s_logger = Logger.getLogger(EasySSLProtocolSocketFactory.class.getName());", "originalCommit": "e3510e707eba20d408fff1a2d03beca576b1120c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3504dc552ca475d535c994d703b786927208d6c", "chunk": "diff --git a/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLProtocolSocketFactory.java b/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLProtocolSocketFactory.java\nindex f6d745271d..914af382c3 100644\n--- a/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLProtocolSocketFactory.java\n+++ b/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasySSLProtocolSocketFactory.java\n\n@@ -87,7 +87,7 @@ import java.net.UnknownHostException;\n public class EasySSLProtocolSocketFactory implements ProtocolSocketFactory {\n \n     /** Log object for this class. */\n-    private static final Logger s_logger = Logger.getLogger(EasySSLProtocolSocketFactory.class.getName());\n+    private static final Logger S_LOGGER = Logger.getLogger(EasySSLProtocolSocketFactory.class.getName());\n \n     private SSLContext sslcontext = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDY1Mg==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r401884652", "bodyText": "please rename", "author": "DaanHoogland", "createdAt": "2020-04-01T20:19:20Z", "path": "utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasyX509TrustManager.java", "diffHunk": "@@ -58,7 +57,7 @@\n     private X509TrustManager standardTrustManager = null;\n \n     /** Log object for this class. */\n-    private static final Log LOG = LogFactory.getLog(EasyX509TrustManager.class);\n+    private static final Logger s_logger = Logger.getLogger(EasyX509TrustManager.class.getName());", "originalCommit": "e3510e707eba20d408fff1a2d03beca576b1120c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3504dc552ca475d535c994d703b786927208d6c", "chunk": "diff --git a/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasyX509TrustManager.java b/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasyX509TrustManager.java\nindex 0fcd173710..0dbb9e62be 100644\n--- a/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasyX509TrustManager.java\n+++ b/utils/src/main/java/org/apache/commons/httpclient/contrib/ssl/EasyX509TrustManager.java\n\n@@ -57,7 +57,7 @@ public class EasyX509TrustManager implements X509TrustManager {\n     private X509TrustManager standardTrustManager = null;\n \n     /** Log object for this class. */\n-    private static final Logger s_logger = Logger.getLogger(EasyX509TrustManager.class.getName());\n+    private static final Logger S_LOGGER = Logger.getLogger(EasyX509TrustManager.class.getName());\n \n     /**\n      * Constructor for EasyX509TrustManager.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4NDkwOA==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r401884908", "bodyText": "LOG", "author": "DaanHoogland", "createdAt": "2020-04-01T20:19:50Z", "path": "utils/src/test/java/com/cloud/utils/backoff/impl/ConstantTimeBackoffTest.java", "diffHunk": "@@ -21,13 +21,12 @@\n \n import java.util.HashMap;\n \n-import org.apache.commons.logging.Log;\n-import org.apache.commons.logging.LogFactory;\n+import org.apache.log4j.Logger;\n import org.junit.Assert;\n import org.junit.Test;\n \n public class ConstantTimeBackoffTest {\n-    final static private Log LOG = LogFactory.getLog(ConstantTimeBackoffTest.class);\n+    private static final Logger s_logger = Logger.getLogger(ConstantTimeBackoffTest.class.getName());", "originalCommit": "e3510e707eba20d408fff1a2d03beca576b1120c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3504dc552ca475d535c994d703b786927208d6c", "chunk": "diff --git a/utils/src/test/java/com/cloud/utils/backoff/impl/ConstantTimeBackoffTest.java b/utils/src/test/java/com/cloud/utils/backoff/impl/ConstantTimeBackoffTest.java\nindex 0c8b66a953..b944336d56 100644\n--- a/utils/src/test/java/com/cloud/utils/backoff/impl/ConstantTimeBackoffTest.java\n+++ b/utils/src/test/java/com/cloud/utils/backoff/impl/ConstantTimeBackoffTest.java\n\n@@ -26,7 +26,7 @@ import org.junit.Assert;\n import org.junit.Test;\n \n public class ConstantTimeBackoffTest {\n-    private static final Logger s_logger = Logger.getLogger(ConstantTimeBackoffTest.class.getName());\n+    private static final Logger S_LOGGER = Logger.getLogger(ConstantTimeBackoffTest.class.getName());\n \n     @Test\n     public void waitBeforeRetryWithInterrupt() throws InterruptedException {\n"}}, {"oid": "b3504dc552ca475d535c994d703b786927208d6c", "url": "https://github.com/apache/cloudstack/commit/b3504dc552ca475d535c994d703b786927208d6c", "message": "Currently CloudStack is using logging frameworks as log4j and Java util logging, logging wrappers as slf4j and Apache common logging.\n\nHere to made it uniform, using only log4j framework and slf4j wrapper", "committedDate": "2020-04-02T04:22:06Z", "type": "forcePushed"}, {"oid": "693bdd8377ce55bbc191c0f1d79ce0674d5f8c40", "url": "https://github.com/apache/cloudstack/commit/693bdd8377ce55bbc191c0f1d79ce0674d5f8c40", "message": "Currently CloudStack is using logging frameworks as log4j and Java util logging, logging wrappers as slf4j and Apache common logging.\n\nHere to made it uniform, using only log4j framework and slf4j wrapper", "committedDate": "2020-04-07T03:11:58Z", "type": "commit"}, {"oid": "a6f1946eb1b2cae957b580affd13227cdbefd095", "url": "https://github.com/apache/cloudstack/commit/a6f1946eb1b2cae957b580affd13227cdbefd095", "message": "Remove commons-logging.properties from packaging", "committedDate": "2020-04-07T03:11:58Z", "type": "commit"}, {"oid": "a6f1946eb1b2cae957b580affd13227cdbefd095", "url": "https://github.com/apache/cloudstack/commit/a6f1946eb1b2cae957b580affd13227cdbefd095", "message": "Remove commons-logging.properties from packaging", "committedDate": "2020-04-07T03:11:58Z", "type": "forcePushed"}, {"oid": "9f694f658d7716f3dd761c4334a1abf48ce0f2f3", "url": "https://github.com/apache/cloudstack/commit/9f694f658d7716f3dd761c4334a1abf48ce0f2f3", "message": "Removed slf4j logging wrapper, using only log4j", "committedDate": "2020-04-07T05:58:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwOTIyNw==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r405309227", "bodyText": "maybe not for this iteration, but this var name should be all upper i.e. LOG", "author": "DaanHoogland", "createdAt": "2020-04-08T07:20:44Z", "path": "framework/managed-context/src/main/java/org/apache/cloudstack/managed/context/ManagedContextRunnable.java", "diffHunk": "@@ -18,16 +18,15 @@\n  */\n package org.apache.cloudstack.managed.context;\n \n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.log4j.Logger;\n \n import org.apache.cloudstack.managed.context.impl.DefaultManagedContext;\n \n public abstract class ManagedContextRunnable implements Runnable {\n \n     private static final int SLEEP_COUNT = 120;\n \n-    private static final Logger log = LoggerFactory.getLogger(ManagedContextRunnable.class);\n+    private static final Logger log = Logger.getLogger(ManagedContextRunnable.class);", "originalCommit": "9f694f658d7716f3dd761c4334a1abf48ce0f2f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwOTYxNQ==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r405309615", "bodyText": "again, next iteration: private static final Logger LOG", "author": "DaanHoogland", "createdAt": "2020-04-08T07:21:32Z", "path": "framework/managed-context/src/main/java/org/apache/cloudstack/managed/context/impl/DefaultManagedContext.java", "diffHunk": "@@ -33,7 +32,7 @@\n \n public class DefaultManagedContext implements ManagedContext {\n \n-    private static final Logger log = LoggerFactory.getLogger(DefaultManagedContext.class);\n+    private static final Logger log = Logger.getLogger(DefaultManagedContext.class);", "originalCommit": "9f694f658d7716f3dd761c4334a1abf48ce0f2f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwOTg3NQ==", "url": "https://github.com/apache/cloudstack/pull/4003#discussion_r405309875", "bodyText": "LOG", "author": "DaanHoogland", "createdAt": "2020-04-08T07:21:59Z", "path": "framework/spring/lifecycle/src/main/java/org/apache/cloudstack/spring/lifecycle/CloudStackExtendedLifeCycle.java", "diffHunk": "@@ -40,7 +39,7 @@\n \n public class CloudStackExtendedLifeCycle extends AbstractBeanCollector {\n \n-    private static final Logger log = LoggerFactory.getLogger(CloudStackExtendedLifeCycle.class);\n+    private static final Logger log = Logger.getLogger(CloudStackExtendedLifeCycle.class);", "originalCommit": "9f694f658d7716f3dd761c4334a1abf48ce0f2f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}