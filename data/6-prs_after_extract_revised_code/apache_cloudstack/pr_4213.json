{"pr_number": 4213, "pr_title": "Search vm snapshots using tags", "pr_createdAt": "2020-07-17T04:56:00Z", "pr_url": "https://github.com/apache/cloudstack/pull/4213", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MjM3Mg==", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457642372", "bodyText": "Can you please use MapUtils.isNotEmpty(tags);?\nMapUtils.isNotEmpty is a null-safe check that verifies if the specified map is not empty.", "author": "GabrielBrascher", "createdAt": "2020-07-20T19:30:16Z", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {", "originalCommit": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f79dc4e4139595edabb3090ed737ff2b3d911c38", "chunk": "diff --git a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\nindex dc8e089dea..a117af2bba 100644\n--- a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n\n@@ -237,14 +239,14 @@ public class VMSnapshotManagerImpl extends MutualExclusiveIdsManagerBase impleme\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n \n-        if (tags != null && !tags.isEmpty()) {\n+        if (MapUtils.isNotEmpty(tags)) {\n             SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n             for (int count = 0; count < tags.size(); count++) {\n-                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n-                tagSearch.and(\"value\" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n                 tagSearch.cp();\n             }\n-            tagSearch.and(\"resourceType\", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n             sb.groupBy(sb.entity().getId());\n             sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTgwMQ==", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457765801", "bodyText": "MapUtils.isNotEmpty would fit nicely here", "author": "GabrielBrascher", "createdAt": "2020-07-21T00:29:24Z", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(\"value\" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(\"resourceType\", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n+        }\n \n         SearchCriteria<VMSnapshotVO> sc = sb.create();\n         _accountMgr.buildACLSearchCriteria(sc, domainId, isRecursive, permittedAccounts, listProjectResourcesCriteria);\n \n+        if (tags != null && !tags.isEmpty()) {", "originalCommit": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f79dc4e4139595edabb3090ed737ff2b3d911c38", "chunk": "diff --git a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\nindex dc8e089dea..a117af2bba 100644\n--- a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n\n@@ -237,14 +239,14 @@ public class VMSnapshotManagerImpl extends MutualExclusiveIdsManagerBase impleme\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n \n-        if (tags != null && !tags.isEmpty()) {\n+        if (MapUtils.isNotEmpty(tags)) {\n             SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n             for (int count = 0; count < tags.size(); count++) {\n-                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n-                tagSearch.and(\"value\" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n                 tagSearch.cp();\n             }\n-            tagSearch.and(\"resourceType\", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n             sb.groupBy(sb.entity().getId());\n             sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NjE3Ng==", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457766176", "bodyText": "A few values can be extracted to constants, especially considering that they are being used more than once, for instance \"key\".", "author": "GabrielBrascher", "createdAt": "2020-07-21T00:30:51Z", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);", "originalCommit": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f79dc4e4139595edabb3090ed737ff2b3d911c38", "chunk": "diff --git a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\nindex dc8e089dea..a117af2bba 100644\n--- a/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n+++ b/server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java\n\n@@ -237,14 +239,14 @@ public class VMSnapshotManagerImpl extends MutualExclusiveIdsManagerBase impleme\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n \n-        if (tags != null && !tags.isEmpty()) {\n+        if (MapUtils.isNotEmpty(tags)) {\n             SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n             for (int count = 0; count < tags.size(); count++) {\n-                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n-                tagSearch.and(\"value\" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n                 tagSearch.cp();\n             }\n-            tagSearch.and(\"resourceType\", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n             sb.groupBy(sb.entity().getId());\n             sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n         }\n"}}, {"oid": "f79dc4e4139595edabb3090ed737ff2b3d911c38", "url": "https://github.com/apache/cloudstack/commit/f79dc4e4139595edabb3090ed737ff2b3d911c38", "message": "Review comments", "committedDate": "2020-07-27T13:12:53Z", "type": "forcePushed"}, {"oid": "9a2d235f7660f81214acdefb19d9369d26d4fba3", "url": "https://github.com/apache/cloudstack/commit/9a2d235f7660f81214acdefb19d9369d26d4fba3", "message": "search vm snapshots with tags", "committedDate": "2020-07-27T13:17:33Z", "type": "commit"}, {"oid": "2f01c8bb5681c2c9800227092e7bd04e51d01e39", "url": "https://github.com/apache/cloudstack/commit/2f01c8bb5681c2c9800227092e7bd04e51d01e39", "message": "Review comments", "committedDate": "2020-07-27T13:17:52Z", "type": "commit"}, {"oid": "2f01c8bb5681c2c9800227092e7bd04e51d01e39", "url": "https://github.com/apache/cloudstack/commit/2f01c8bb5681c2c9800227092e7bd04e51d01e39", "message": "Review comments", "committedDate": "2020-07-27T13:17:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzNzMzNw==", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r461837337", "bodyText": "Could you please extract this to a method, add documentation to what this method do and why.\nAlso can you please create unit tests to cover those method", "author": "RodrigoDLopez", "createdAt": "2020-07-28T19:52:26Z", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +238,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (MapUtils.isNotEmpty(tags)) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);", "originalCommit": "2f01c8bb5681c2c9800227092e7bd04e51d01e39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzNzk0OA==", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r461837948", "bodyText": "cloud you do the same here please,\nextract to a new method, add documentation and unit tests.", "author": "RodrigoDLopez", "createdAt": "2020-07-28T19:53:32Z", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +238,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (MapUtils.isNotEmpty(tags)) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n+        }\n \n         SearchCriteria<VMSnapshotVO> sc = sb.create();\n         _accountMgr.buildACLSearchCriteria(sc, domainId, isRecursive, permittedAccounts, listProjectResourcesCriteria);\n \n+        if (MapUtils.isNotEmpty(tags)) {\n+            int count = 0;\n+            sc.setJoinParameters(\"tagSearch\", ApiConstants.RESOURCE_TYPE, ResourceTag.ResourceObjectType.VMSnapshot.toString());\n+            for (String key : tags.keySet()) {\n+                sc.setJoinParameters(\"tagSearch\", ApiConstants.KEY + String.valueOf(count), key);\n+                sc.setJoinParameters(\"tagSearch\", ApiConstants.VALUE + String.valueOf(count), tags.get(key));\n+                count++;\n+            }", "originalCommit": "2f01c8bb5681c2c9800227092e7bd04e51d01e39", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}