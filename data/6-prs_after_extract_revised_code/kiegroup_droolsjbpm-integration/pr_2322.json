{"pr_number": 2322, "pr_title": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events", "pr_createdAt": "2020-11-24T17:55:10Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322", "timeline": [{"oid": "fcd6193c60b55fdbf5f762b7cddcc662720e48e0", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/fcd6193c60b55fdbf5f762b7cddcc662720e48e0", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-24T19:06:17Z", "type": "forcePushed"}, {"oid": "088f324ef5d82fbda56b5cd488bc9f933805ac6f", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/088f324ef5d82fbda56b5cd488bc9f933805ac6f", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-25T16:34:11Z", "type": "forcePushed"}, {"oid": "6a158d3e12234f5a773ad206c16436feddbf2796", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/6a158d3e12234f5a773ad206c16436feddbf2796", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-25T17:48:04Z", "type": "forcePushed"}, {"oid": "8474534fe94b7e06b96e880b69f02b4b10bbce3b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8474534fe94b7e06b96e880b69f02b4b10bbce3b", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-25T19:28:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2MjA5Ng==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r530862096", "bodyText": "Could you add a system property for \"max.block.ms\" (similar than in the Kafka Emitter) with 2000 ms as default value?", "author": "gmunozfe", "createdAt": "2020-11-26T08:48:45Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -180,13 +199,30 @@ public void destroy(KieServerImpl kieServer, KieServerRegistry registry) {\n         return new KafkaConsumer<>(props, new StringDeserializer(), new ByteArrayDeserializer());\n     }\n \n+    protected Producer<String, byte[]> getKafkaProducer() {\n+        Map<String, Object> configs = new HashMap<>();\n+        configs.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, System.getProperty(\n+                KAFKA_EXTENSION_PREFIX + \"boopstrap.servers\", \"localhost:9092\"));\n+        String acks = System.getProperty(KAFKA_EXTENSION_PREFIX + \"acks\");\n+        if (acks != null) {\n+            configs.put(ProducerConfig.ACKS_CONFIG, acks);\n+        }\n+        String clientId = System.getProperty(KAFKA_EXTENSION_PREFIX + \"client.id\");", "originalCommit": "8474534fe94b7e06b96e880b69f02b4b10bbce3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e2ad90dd897868311b8092c83bfa50981b09533", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 2ab1bb0b2..9c90bb9be 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -188,13 +192,14 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n     protected Consumer<String, byte[]> getKafkaConsumer() {\n         Map<String, Object> props = new HashMap<>();\n         props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, System.getProperty(\n-                KAFKA_EXTENSION_PREFIX + \"boopstrap.servers\", \"localhost:9092\"));\n+                KAFKA_EXTENSION_PREFIX + ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\"));\n         // read only committed events\n         props.put(ConsumerConfig.ISOLATION_LEVEL_CONFIG, IsolationLevel.READ_COMMITTED.toString().toLowerCase());\n         // do not automatically create topics by default\n         props.put(ConsumerConfig.ALLOW_AUTO_CREATE_TOPICS_CONFIG, Boolean.getBoolean(\n-                KAFKA_EXTENSION_PREFIX + \"auto.create.topics\"));\n-        props.put(ConsumerConfig.GROUP_ID_CONFIG, System.getProperty(KAFKA_EXTENSION_PREFIX + \"group.id\",\n+                KAFKA_EXTENSION_PREFIX + ConsumerConfig.ALLOW_AUTO_CREATE_TOPICS_CONFIG));\n+        props.put(ConsumerConfig.GROUP_ID_CONFIG, System.getProperty(KAFKA_EXTENSION_PREFIX +\n+                                                                     ConsumerConfig.GROUP_ID_CONFIG,\n                 \"jbpm-consumer\"));\n         return new KafkaConsumer<>(props, new StringDeserializer(), new ByteArrayDeserializer());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2NjUwNQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r530866505", "bodyText": "Shouldn't producer be closed here too if producerReady is true?", "author": "gmunozfe", "createdAt": "2020-11-26T08:55:50Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -180,13 +199,30 @@ public void destroy(KieServerImpl kieServer, KieServerRegistry registry) {\n         return new KafkaConsumer<>(props, new StringDeserializer(), new ByteArrayDeserializer());\n     }\n \n+    protected Producer<String, byte[]> getKafkaProducer() {\n+        Map<String, Object> configs = new HashMap<>();\n+        configs.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, System.getProperty(\n+                KAFKA_EXTENSION_PREFIX + \"boopstrap.servers\", \"localhost:9092\"));\n+        String acks = System.getProperty(KAFKA_EXTENSION_PREFIX + \"acks\");\n+        if (acks != null) {\n+            configs.put(ProducerConfig.ACKS_CONFIG, acks);\n+        }\n+        String clientId = System.getProperty(KAFKA_EXTENSION_PREFIX + \"client.id\");\n+        if (clientId != null) {\n+            configs.put(ProducerConfig.CLIENT_ID_CONFIG, clientId);\n+        }\n+        return new KafkaProducer<>(configs, new StringSerializer(), new ByteArraySerializer());\n+    }\n+\n     @Override\n     public void onDeploy(DeploymentEvent event) {\n+        processService.addProcessEventListener(event.getDeploymentId(), this);\n         updateRegistration(event, this::updateTopics);\n     }\n \n     @Override\n     public void onUnDeploy(DeploymentEvent event) {\n+        processService.removeProcessEventListener(event.getDeploymentId(), this);", "originalCommit": "8474534fe94b7e06b96e880b69f02b4b10bbce3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5MDk2Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r530890967", "bodyText": "It should be closed on destroy. There are other deployments that might use it.", "author": "fjtirado", "createdAt": "2020-11-26T09:34:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg2NjUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7e2ad90dd897868311b8092c83bfa50981b09533", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 2ab1bb0b2..9c90bb9be 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -188,13 +192,14 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n     protected Consumer<String, byte[]> getKafkaConsumer() {\n         Map<String, Object> props = new HashMap<>();\n         props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, System.getProperty(\n-                KAFKA_EXTENSION_PREFIX + \"boopstrap.servers\", \"localhost:9092\"));\n+                KAFKA_EXTENSION_PREFIX + ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\"));\n         // read only committed events\n         props.put(ConsumerConfig.ISOLATION_LEVEL_CONFIG, IsolationLevel.READ_COMMITTED.toString().toLowerCase());\n         // do not automatically create topics by default\n         props.put(ConsumerConfig.ALLOW_AUTO_CREATE_TOPICS_CONFIG, Boolean.getBoolean(\n-                KAFKA_EXTENSION_PREFIX + \"auto.create.topics\"));\n-        props.put(ConsumerConfig.GROUP_ID_CONFIG, System.getProperty(KAFKA_EXTENSION_PREFIX + \"group.id\",\n+                KAFKA_EXTENSION_PREFIX + ConsumerConfig.ALLOW_AUTO_CREATE_TOPICS_CONFIG));\n+        props.put(ConsumerConfig.GROUP_ID_CONFIG, System.getProperty(KAFKA_EXTENSION_PREFIX +\n+                                                                     ConsumerConfig.GROUP_ID_CONFIG,\n                 \"jbpm-consumer\"));\n         return new KafkaConsumer<>(props, new StringDeserializer(), new ByteArrayDeserializer());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3Mjg5NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r530872894", "bodyText": "In this method, T is not used, you can remove the generics\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static <T extends SignalDescBase> String topicFromSignal(String name) {\n          \n          \n            \n                private static String topicFromSignal(String name) {", "author": "gmunozfe", "createdAt": "2020-11-26T09:06:00Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -301,18 +339,13 @@ private void unsubscribe() {\n     }\n \n     private static <T extends SignalDescBase> String topicFromSignal(T signal) {\n-        return System.getProperty(TOPIC_PREFIX + signal.getName(), signal.getName());\n+        return topicFromSignal(signal.getName());\n     }\n-\n-    @Override\n-    public void serverStarted() {\n-        // will use lazy initialization for consumer\n+    \n+    private static <T extends SignalDescBase> String topicFromSignal(String name) {", "originalCommit": "8474534fe94b7e06b96e880b69f02b4b10bbce3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7e2ad90dd897868311b8092c83bfa50981b09533", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 2ab1bb0b2..9c90bb9be 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -342,7 +349,7 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n         return topicFromSignal(signal.getName());\n     }\n     \n-    private static <T extends SignalDescBase> String topicFromSignal(String name) {\n+    private static String topicFromSignal(String name) {\n         return System.getProperty(TOPIC_PREFIX + name, name);\n     }\n \n"}}, {"oid": "7e2ad90dd897868311b8092c83bfa50981b09533", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/7e2ad90dd897868311b8092c83bfa50981b09533", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-26T09:34:21Z", "type": "forcePushed"}, {"oid": "7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-26T10:02:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk5NjQ0OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r530996449", "bodyText": "I'm missing a similar approach to test write new method in CloudEvent class", "author": "afalhambra", "createdAt": "2020-11-26T12:29:47Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/CloudEventTest.java", "diffHunk": "@@ -34,7 +34,7 @@ public void testStringCloudEventDeserialization() throws IOException, ParseExcep\n         assertEquals(\"javi\",event.getId());\n         assertEquals(\"one\",event.getType());\n         assertEquals(\"pepe\",event.getSource());\n-        assertEquals(\"1.0\",event.getSpecVersion());", "originalCommit": "7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0ODcwOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531148709", "bodyText": "Im waiting for the result of a discussion with Enrique to add unit test, thats why this still a draft", "author": "fjtirado", "createdAt": "2020-11-26T16:57:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk5NjQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQyNzQzMA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531427430", "bodyText": "ok - let me know once it's done or request a new review from me.", "author": "afalhambra", "createdAt": "2020-11-27T07:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk5NjQ0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTczNTIyMg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531735222", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-11-27T19:04:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk5NjQ0OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzMjA4Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531032082", "bodyText": "Why are we only taking into account incomingNodes and not outgoing ones? if for instance an EndEventHandler node is processed, we are not considering this to be updated accordingly in the list of topics? - am I missing something here? can you please clarify?", "author": "afalhambra", "createdAt": "2020-11-26T13:33:17Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -214,8 +257,10 @@ private void removeTopics(String deploymentId, ProcessDefinition processDefiniti\n                                                          String deploymentId,\n                                                          Collection<T> signals) {\n         for (T signal : signals) {\n-            topic2SignalBase.computeIfAbsent(topicFromSignal(signal), k -> new HashMap<>()).computeIfAbsent(\n-                    signal, k -> new ArrayList<>()).add(deploymentId);\n+            if (!signal.getIncomingNodes().isEmpty()) {", "originalCommit": "7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0ODE5NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531148194", "bodyText": "this is for subscription, we are only interested on the signals which are input, not output", "author": "fjtirado", "createdAt": "2020-11-26T16:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzMjA4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzMTM1MQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531431351", "bodyText": "when you say subscription, you mean for the kafka consumer? or? - I mean this method is also used by Kafka producer, so we will still need to know what topic we will send the record to when publishing from the producer? sorry about that, I don't mean it's wrong, it's just that I'm trying to fully understand.", "author": "afalhambra", "createdAt": "2020-11-27T07:50:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzMjA4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTczNTEzNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531735136", "bodyText": "this method is only used for consuming, to calculate the topics the extension needs to be subbsribed, for this calculation only signal or mesagges associated with incoming nodes are really needed", "author": "fjtirado", "createdAt": "2020-11-27T19:04:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTAzMjA4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "252af5ad1cf2907b2820f9f80dbddf8e232f583e", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 9c90bb9be..03c9ee691 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -244,12 +249,16 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n     }\n \n     private void updateTopics(String deploymentId, ProcessDefinition processDefinition) {\n-        updateTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n+        if (Boolean.getBoolean(SIGNALS_ENABLED)) {\n+            updateTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n+        }\n         updateTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n     }\n \n     private void removeTopics(String deploymentId, ProcessDefinition processDefinition) {\n-        removeTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n+        if (Boolean.getBoolean(SIGNALS_ENABLED)) {\n+            removeTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n+        }\n         removeTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NTc3MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531085770", "bodyText": "Shouldn't we try to flush first? or right after sending a record? wdyt?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        producer.close();\n          \n          \n            \n                        producer.flush();\n          \n          \n            \n                        producer.close();", "author": "afalhambra", "createdAt": "2020-11-26T15:01:01Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -140,6 +159,10 @@ public void destroy(KieServerImpl kieServer, KieServerRegistry registry) {\n         if (deploymentService != null) {\n             deploymentService.removeListener(this);\n         }\n+        if (producerReady.compareAndSet(true, false)) {\n+            producer.close();", "originalCommit": "7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0OTg3OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531149879", "bodyText": "as far as I know, close internally invoke flush (in reality it waits for the acks till a timeout is reach) so it will be redudant to call flush here", "author": "fjtirado", "createdAt": "2020-11-26T17:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NTc3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzMTU1Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531431553", "bodyText": "I see, thanks for that", "author": "afalhambra", "createdAt": "2020-11-27T07:51:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NTc3MA=="}], "type": "inlineReview", "revised_code": {"commit": "92ece0f918e12be2b02e3d082dfb00c3eae65d99", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 9c90bb9be..947366be9 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -159,8 +159,9 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n         if (deploymentService != null) {\n             deploymentService.removeListener(this);\n         }\n+        Duration duration = Duration.ofSeconds(Long.getLong(KAFKA_EXTENSION_PREFIX + \"close.timeout\", 30L));\n         if (producerReady.compareAndSet(true, false)) {\n-            producer.close();\n+            producer.close(duration);\n         }\n \n         if (consumerReady.compareAndSet(true, false)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjU1OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531086559", "bodyText": "also, shouldn't it be beneficial to call close with a timeout? maybe configurable through a system property - wdyt?", "author": "afalhambra", "createdAt": "2020-11-26T15:02:24Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -140,6 +159,10 @@ public void destroy(KieServerImpl kieServer, KieServerRegistry registry) {\n         if (deploymentService != null) {\n             deploymentService.removeListener(this);\n         }\n+        if (producerReady.compareAndSet(true, false)) {\n+            producer.close();", "originalCommit": "7a94cdd54bee359c7ea97fbac56468e2f8b6aced", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1MDUyNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531150527", "bodyText": "I would normally agree, but this is destroy, which is invoked only when server is closed, default timeout wil be fine, we do not want to give the user to specify a long one and interfere on the server cleanup procedure", "author": "fjtirado", "createdAt": "2020-11-26T17:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzNDAyNQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531434025", "bodyText": "then, maybe we should actually invoke the close(Duration timeout) instead passing a low value cause the default timeout for the close() method is pretty high (it's Long.MAX_VALUE):\nhttps://github.com/apache/kafka/blob/2.6/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java#L1158", "author": "afalhambra", "createdAt": "2020-11-27T07:57:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjU1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTczNDg2NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r531734864", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-11-27T19:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA4NjU1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "92ece0f918e12be2b02e3d082dfb00c3eae65d99", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 9c90bb9be..947366be9 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -159,8 +159,9 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n         if (deploymentService != null) {\n             deploymentService.removeListener(this);\n         }\n+        Duration duration = Duration.ofSeconds(Long.getLong(KAFKA_EXTENSION_PREFIX + \"close.timeout\", 30L));\n         if (producerReady.compareAndSet(true, false)) {\n-            producer.close();\n+            producer.close(duration);\n         }\n \n         if (consumerReady.compareAndSet(true, false)) {\n"}}, {"oid": "92ece0f918e12be2b02e3d082dfb00c3eae65d99", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/92ece0f918e12be2b02e3d082dfb00c3eae65d99", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-27T15:24:44Z", "type": "forcePushed"}, {"oid": "197084eb8b8d0b84bc52e2bd2ba5d47e024cec5c", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/197084eb8b8d0b84bc52e2bd2ba5d47e024cec5c", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-30T13:04:29Z", "type": "forcePushed"}, {"oid": "08e1779336823501e3a4f59ea544599ebad94382", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/08e1779336823501e3a4f59ea544599ebad94382", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-11-30T18:20:43Z", "type": "forcePushed"}, {"oid": "d76974a769d20eab76a45a3825a9632dd6a2ac35", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d76974a769d20eab76a45a3825a9632dd6a2ac35", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T10:05:00Z", "type": "forcePushed"}, {"oid": "1e14f134ca01ae4c69f00a902c5538cef3bfa7ed", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1e14f134ca01ae4c69f00a902c5538cef3bfa7ed", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T11:40:27Z", "type": "forcePushed"}, {"oid": "4b6501860c0fd478b18abc3a20a1983b866fb3aa", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4b6501860c0fd478b18abc3a20a1983b866fb3aa", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T11:48:11Z", "type": "forcePushed"}, {"oid": "1dbe0dcc31bc420b87a5d09d1e86780c2cbb977e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1dbe0dcc31bc420b87a5d09d1e86780c2cbb977e", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T12:43:03Z", "type": "forcePushed"}, {"oid": "ccaedcbd36940803316a8e60d1608b5976da1978", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ccaedcbd36940803316a8e60d1608b5976da1978", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T14:55:26Z", "type": "forcePushed"}, {"oid": "252af5ad1cf2907b2820f9f80dbddf8e232f583e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/252af5ad1cf2907b2820f9f80dbddf8e232f583e", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T16:40:46Z", "type": "forcePushed"}, {"oid": "18c0d17284c78317d142a2359ca40eba6fb106be", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/18c0d17284c78317d142a2359ca40eba6fb106be", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-01T16:48:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2NDAwMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r533964003", "bodyText": "we need two properties here.\nKAFKA_EXTENSION_PREFIX.signals.mapping=(NONE) -> (by default or AUTO)\nKAFKA_EXTENSION_PREFIX.messages.mapping=AUTO -> (or NONE)\nthe idea would be that in the future we can say extends which signals we need to map", "author": "elguardian", "createdAt": "2020-12-02T08:01:38Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -67,16 +82,20 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class KafkaServerExtension implements KieServerExtension, DeploymentEventListener, Runnable {\n+public class KafkaServerExtension implements KieServerExtension, DeploymentEventListener, ProcessEventListener,\n+                                  Runnable {\n \n     public static final String EXTENSION_NAME = \"Kafka\";\n     static final String KAFKA_EXTENSION_PREFIX = \"org.kie.server.jbpm-kafka.ext.\";\n     static final String TOPIC_PREFIX = KAFKA_EXTENSION_PREFIX + \"topics.\";\n+    static final String SIGNALS_ENABLED = KAFKA_EXTENSION_PREFIX + \"enableSignals\";", "originalCommit": "18c0d17284c78317d142a2359ca40eba6fb106be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzNDg3Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r534134877", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-12-02T12:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2NDAwMw=="}], "type": "inlineReview", "revised_code": {"commit": "ae09049fa5b4acd591655f24055322bf5e65ddce", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 36577c411..0065d8ea6 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -85,11 +86,20 @@ import org.slf4j.LoggerFactory;\n public class KafkaServerExtension implements KieServerExtension, DeploymentEventListener, ProcessEventListener,\n                                   Runnable {\n \n+    private static final Logger logger = LoggerFactory.getLogger(KafkaServerExtension.class);\n+    \n     public static final String EXTENSION_NAME = \"Kafka\";\n     static final String KAFKA_EXTENSION_PREFIX = \"org.kie.server.jbpm-kafka.ext.\";\n     static final String TOPIC_PREFIX = KAFKA_EXTENSION_PREFIX + \"topics.\";\n-    static final String SIGNALS_ENABLED = KAFKA_EXTENSION_PREFIX + \"enableSignals\";\n-    private static final Logger logger = LoggerFactory.getLogger(KafkaServerExtension.class);\n+    static final String SIGNAL_MAPPING_PROPERTY = KAFKA_EXTENSION_PREFIX + \"signals.mapping\";\n+    static final String MESSAGE_MAPPING_PROPERTY = KAFKA_EXTENSION_PREFIX + \"message.mapping\";\n+    private static final Mapping SIGNAL_MAPPING_DEFAULT = Mapping.NONE;\n+    private static final Mapping MESSAGE_MAPPING_DEFAULT = Mapping.AUTO;\n+    \n+    enum Mapping {\n+        AUTO, NONE\n+    }\n+    \n \n     private AtomicBoolean initialized = new AtomicBoolean();\n     // Kafka consumer\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2NTYzOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r533965639", "bodyText": "right now we have the metadata in the signal node regarding this so the behaviour should be like this.\nif the signal map property is AUTO... we should MAP unless the implementation exists says otherthing than kafka\nif it is none we should not map unless the property says kafka.\nmetadata overrides the flags.", "author": "elguardian", "createdAt": "2020-12-02T08:05:01Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -201,21 +249,27 @@ public void onDeactivate(DeploymentEvent event) {\n     }\n \n     private void updateTopics(String deploymentId, ProcessDefinition processDefinition) {\n-        updateTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n+        if (Boolean.getBoolean(SIGNALS_ENABLED)) {", "originalCommit": "18c0d17284c78317d142a2359ca40eba6fb106be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDEzNTAyNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2322#discussion_r534135027", "bodyText": "not including metadata at the moment", "author": "fjtirado", "createdAt": "2020-12-02T12:38:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2NTYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae09049fa5b4acd591655f24055322bf5e65ddce", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex 36577c411..0065d8ea6 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -249,17 +261,21 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n     }\n \n     private void updateTopics(String deploymentId, ProcessDefinition processDefinition) {\n-        if (Boolean.getBoolean(SIGNALS_ENABLED)) {\n+        if (processSignals()) {\n             updateTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n         }\n-        updateTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n+        if (processMessages()) {\n+            updateTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n+        }\n     }\n \n     private void removeTopics(String deploymentId, ProcessDefinition processDefinition) {\n-        if (Boolean.getBoolean(SIGNALS_ENABLED)) {\n+        if (processSignals()) {\n             removeTopics(topic2Signal, deploymentId, processDefinition.getSignalsDesc());\n         }\n-        removeTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n+        if (processMessages()) {\n+            removeTopics(topic2Message, deploymentId, processDefinition.getMessagesDesc());\n+        }\n     }\n \n     private <T extends SignalDescBase> void updateTopics(Map<String, Map<T, Collection<String>>> topic2SignalBase,\n"}}, {"oid": "ae09049fa5b4acd591655f24055322bf5e65ddce", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ae09049fa5b4acd591655f24055322bf5e65ddce", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-02T12:36:38Z", "type": "forcePushed"}, {"oid": "ff883c5ff8d704228ed92fa3cbd03e22a134b86f", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ff883c5ff8d704228ed92fa3cbd03e22a134b86f", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-02T14:48:55Z", "type": "forcePushed"}, {"oid": "1b04dcbfc699cec28fa69e770ff401f615f2b196", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1b04dcbfc699cec28fa69e770ff401f615f2b196", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-02T16:40:51Z", "type": "forcePushed"}, {"oid": "d4098f41d35b46b914387d7b766cb52b8eed567c", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d4098f41d35b46b914387d7b766cb52b8eed567c", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-03T10:50:02Z", "type": "commit"}, {"oid": "d4098f41d35b46b914387d7b766cb52b8eed567c", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d4098f41d35b46b914387d7b766cb52b8eed567c", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nModifying kafka server extension to publish events", "committedDate": "2020-12-03T10:50:02Z", "type": "forcePushed"}]}