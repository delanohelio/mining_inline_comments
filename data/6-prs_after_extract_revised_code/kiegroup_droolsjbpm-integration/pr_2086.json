{"pr_number": 2086, "pr_title": "[JBPM-9147] getTaskById does not return formName", "pr_createdAt": "2020-05-11T17:02:05Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNDc3OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#discussion_r426404779", "bodyText": "Can't we use Collections.emptyMap()", "author": "jomarko", "createdAt": "2020-05-18T06:56:15Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java", "diffHunk": "@@ -389,4 +390,46 @@ public void testGetTaskFormWithWrongContainerId() throws Exception {\n             KieServerAssert.assertSuccess(client.disposeContainer(CONTAINER_ID_V2));\n         }\n     }\n+    \n+    @Test\n+    public void testFormName() throws Exception {\n+        Long pid = processClient.startProcess(CONTAINER_ID, HIRING_2_PROCESS_ID);\n+        assertNotNull(pid);\n+        assertTrue(pid.longValue() > 0);\n+        \n+        try {\n+            changeUser(USER_ADMINISTRATOR);\n+            \n+            List<TaskSummary> tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            Long taskId = tasks.get(0).getId();\n+            \n+            TaskInstance ti = taskClient.getTaskInstance(CONTAINER_ID, taskId);\n+            assertEquals(\"HRInterview2\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());", "originalCommit": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "696e6bf414585b66a962842588236e9771038326", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\nindex 1b4fd3878..bc2db4550 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\n\n@@ -421,10 +422,10 @@ public class FormServiceIntegrationTest extends JbpmKieServerBaseIntegrationTest\n             taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n             taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());\n             \n-            tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n-            assertNotNull(tasks);\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, pid);\n+            assertNotNull(workItems);\n             \n-            ti = taskClient.findTaskByWorkItemId(tasks.get(0).getId());\n+            ti = taskClient.findTaskByWorkItemId(workItems.get(0).getId());\n             assertEquals(\"Create Proposal\", ti.getName());\n             assertEquals(\"CreateProposal\", ti.getFormName());\n         } finally {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNDgzNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#discussion_r426404834", "bodyText": "Can't we use Collections.emptyMap()?", "author": "jomarko", "createdAt": "2020-05-18T06:56:22Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java", "diffHunk": "@@ -389,4 +390,46 @@ public void testGetTaskFormWithWrongContainerId() throws Exception {\n             KieServerAssert.assertSuccess(client.disposeContainer(CONTAINER_ID_V2));\n         }\n     }\n+    \n+    @Test\n+    public void testFormName() throws Exception {\n+        Long pid = processClient.startProcess(CONTAINER_ID, HIRING_2_PROCESS_ID);\n+        assertNotNull(pid);\n+        assertTrue(pid.longValue() > 0);\n+        \n+        try {\n+            changeUser(USER_ADMINISTRATOR);\n+            \n+            List<TaskSummary> tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            Long taskId = tasks.get(0).getId();\n+            \n+            TaskInstance ti = taskClient.getTaskInstance(CONTAINER_ID, taskId);\n+            assertEquals(\"HRInterview2\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());\n+            \n+            tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            taskId = tasks.get(0).getId();\n+            \n+            ti = taskClient.findTaskById(taskId);\n+            assertEquals(\"Tech Interview\", ti.getName());\n+            assertEquals(\"TechInterview\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());", "originalCommit": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMDUwMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#discussion_r426500503", "bodyText": "Done, thanks for review!", "author": "gmunozfe", "createdAt": "2020-05-18T09:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNDgzNA=="}], "type": "inlineReview", "revised_code": {"commit": "696e6bf414585b66a962842588236e9771038326", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\nindex 1b4fd3878..bc2db4550 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java\n\n@@ -421,10 +422,10 @@ public class FormServiceIntegrationTest extends JbpmKieServerBaseIntegrationTest\n             taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n             taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());\n             \n-            tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n-            assertNotNull(tasks);\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, pid);\n+            assertNotNull(workItems);\n             \n-            ti = taskClient.findTaskByWorkItemId(tasks.get(0).getId());\n+            ti = taskClient.findTaskByWorkItemId(workItems.get(0).getId());\n             assertEquals(\"Create Proposal\", ti.getName());\n             assertEquals(\"CreateProposal\", ti.getFormName());\n         } finally {\n"}}, {"oid": "696e6bf414585b66a962842588236e9771038326", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/696e6bf414585b66a962842588236e9771038326", "message": "[JBPM-9147] getTaskById does not return formName", "committedDate": "2020-05-18T09:13:53Z", "type": "forcePushed"}, {"oid": "ad1a80e666484ffdd779484e204c03c7f7084da3", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad1a80e666484ffdd779484e204c03c7f7084da3", "message": "[JBPM-9147] getTaskById does not return formName", "committedDate": "2020-05-18T09:18:30Z", "type": "commit"}, {"oid": "ad1a80e666484ffdd779484e204c03c7f7084da3", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad1a80e666484ffdd779484e204c03c7f7084da3", "message": "[JBPM-9147] getTaskById does not return formName", "committedDate": "2020-05-18T09:18:30Z", "type": "forcePushed"}]}