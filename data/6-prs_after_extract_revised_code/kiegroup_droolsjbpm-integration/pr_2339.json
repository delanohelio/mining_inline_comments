{"pr_number": 2339, "pr_title": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension", "pr_createdAt": "2020-12-10T09:54:15Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339", "timeline": [{"oid": "f6cc81aeb6358f8109386ab59cede93cf76ba9c4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f6cc81aeb6358f8109386ab59cede93cf76ba9c4", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-10T09:56:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAzMTUxMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540031513", "bodyText": "just set this as debug. We don't really care about this.", "author": "elguardian", "createdAt": "2020-12-10T09:59:08Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -248,8 +248,13 @@ public void onDeploy(DeploymentEvent event) {\n \n     @Override\n     public void onUnDeploy(DeploymentEvent event) {\n-        event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n-                .removeEventListener(this);\n+        try {\n+            event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n+                    .removeEventListener(this);\n+        } catch (Exception ex) {\n+            // it is very likely that Runtime Manager is already closed at this stage\n+            logger.info(\"ProcessEventListener cannot be removed. {}\", ex.getMessage());", "originalCommit": "f6cc81aeb6358f8109386ab59cede93cf76ba9c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c72f4f0b18e07f86a2751423d8be0e4b492859db", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\nindex dfa842e1a..47167466d 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java\n\n@@ -241,20 +242,13 @@ public class KafkaServerExtension implements KieServerExtension, DeploymentEvent\n \n     @Override\n     public void onDeploy(DeploymentEvent event) {\n-        event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n-                .addEventListener(this);\n+        ((InternalRegisterableItemsFactory) ((InternalRuntimeManager) event.getDeployedUnit().getRuntimeManager())\n+                .getEnvironment().getRegisterableItemsFactory()).addProcessListener(this);\n         updateRegistration(event, this::updateTopics);\n     }\n \n     @Override\n     public void onUnDeploy(DeploymentEvent event) {\n-        try {\n-            event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n-                    .removeEventListener(this);\n-        } catch (Exception ex) {\n-            // it is very likely that Runtime Manager is already closed at this stage\n-            logger.info(\"ProcessEventListener cannot be removed. {}\", ex.getMessage());\n-        }\n         updateRegistration(event, this::removeTopics);\n     }\n \n"}}, {"oid": "342d62d6ca439c1f0c0cf828d7ef5ed4cb0cc747", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/342d62d6ca439c1f0c0cf828d7ef5ed4cb0cc747", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-10T10:00:45Z", "type": "forcePushed"}, {"oid": "c72f4f0b18e07f86a2751423d8be0e4b492859db", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c72f4f0b18e07f86a2751423d8be0e4b492859db", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-10T11:59:16Z", "type": "forcePushed"}, {"oid": "a4387dddb0986c1078ec751898900f63fa092528", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/a4387dddb0986c1078ec751898900f63fa092528", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-10T12:07:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NjM2Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540846362", "bodyText": "Just curious - if we are now not removing the listeners, shouldn't we try to avoid adding listener twice in case of a new onDeploy event?", "author": "afalhambra", "createdAt": "2020-12-11T10:28:41Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/main/java/org/kie/server/services/jbpm/kafka/KafkaServerExtension.java", "diffHunk": "@@ -241,15 +242,13 @@ public void destroy(KieServerImpl kieServer, KieServerRegistry registry) {\n \n     @Override\n     public void onDeploy(DeploymentEvent event) {\n-        event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n-                .addEventListener(this);\n+        ((InternalRegisterableItemsFactory) ((InternalRuntimeManager) event.getDeployedUnit().getRuntimeManager())\n+                .getEnvironment().getRegisterableItemsFactory()).addProcessListener(this);\n         updateRegistration(event, this::updateTopics);\n     }\n \n     @Override\n     public void onUnDeploy(DeploymentEvent event) {\n-        event.getDeployedUnit().getRuntimeManager().getRuntimeEngine(ProcessInstanceIdContext.get()).getKieSession()\n-                .removeEventListener(this);", "originalCommit": "a4387dddb0986c1078ec751898900f63fa092528", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk3NTU1OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540975558", "bodyText": "When Kjar is undeployed, the list of listeners is clear up. So when ondeploy is invoked againd, the list will be empty\nActually if we try to remove the listener on undeploy, we will get an exception because the deployment is already closed", "author": "fjtirado", "createdAt": "2020-12-11T14:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NjM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk3ODg1OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540978858", "bodyText": "I see - thanks", "author": "afalhambra", "createdAt": "2020-12-11T14:18:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg0NjM2Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MjA3Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540852072", "bodyText": "you can just use only forEach, but no need to change anything here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    itemsFactory.getProcessEventListeners(runtimeEngine).stream().forEach(l -> l.onMessage(new MessageEventImpl(\n          \n          \n            \n                    itemsFactory.getProcessEventListeners(runtimeEngine).forEach(l -> l.onMessage(new MessageEventImpl(", "author": "afalhambra", "createdAt": "2020-12-11T10:37:58Z", "path": "kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/KafkaServerExtensionProducerTest.java", "diffHunk": "@@ -129,7 +131,9 @@ public void close() {\n     @Test \n     public void testMessageSent() throws IOException, ParseException {\n         extension.onDeploy(new DeploymentEvent(\"MyDeploy1\", deployedUnit));\n-        extension.onMessage(new MessageEventImpl(pInstance, runtime, nInstance, \"MyMessage\", \"Javierito\"));\n+        itemsFactory.getProcessEventListeners(runtimeEngine).stream().forEach(l -> l.onMessage(new MessageEventImpl(", "originalCommit": "a4387dddb0986c1078ec751898900f63fa092528", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk3NjAyOA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2339#discussion_r540976028", "bodyText": "I took note for the next one, but I prefer to avoid a push just for that", "author": "fjtirado", "createdAt": "2020-12-11T14:14:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1MjA3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "cc2cec1f7221f25efbc6ee0d0ddaef5a806be118", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/KafkaServerExtensionProducerTest.java b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/KafkaServerExtensionProducerTest.java\nindex a1fdacc47..9b92030e0 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/KafkaServerExtensionProducerTest.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-kafka/src/test/java/org/kie/server/services/jbpm/kafka/KafkaServerExtensionProducerTest.java\n\n@@ -131,7 +131,7 @@ public class KafkaServerExtensionProducerTest {\n     @Test \n     public void testMessageSent() throws IOException, ParseException {\n         extension.onDeploy(new DeploymentEvent(\"MyDeploy1\", deployedUnit));\n-        itemsFactory.getProcessEventListeners(runtimeEngine).stream().forEach(l -> l.onMessage(new MessageEventImpl(\n+        itemsFactory.getProcessEventListeners(runtimeEngine).forEach(l -> l.onMessage(new MessageEventImpl(\n                 pInstance, runtime, nInstance,\n                 \"MyMessage\", \"Javierito\")));\n         List<ProducerRecord<String, byte[]>> events = mockProducer.history();\n"}}, {"oid": "cc2cec1f7221f25efbc6ee0d0ddaef5a806be118", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cc2cec1f7221f25efbc6ee0d0ddaef5a806be118", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-11T14:19:43Z", "type": "commit"}, {"oid": "cc2cec1f7221f25efbc6ee0d0ddaef5a806be118", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cc2cec1f7221f25efbc6ee0d0ddaef5a806be118", "message": "[JBPM-9504] Exception on unDeploy at KafkaServerExtension\n\nExisting code did not contemplate the possibility that the removal\nof the process listener might fail when runtimeengine has been already\nclosed", "committedDate": "2020-12-11T14:19:43Z", "type": "forcePushed"}]}