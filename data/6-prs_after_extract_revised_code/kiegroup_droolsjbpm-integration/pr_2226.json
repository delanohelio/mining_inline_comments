{"pr_number": 2226, "pr_title": "[JBPM-9206] container id should be checked when retrieving process", "pr_createdAt": "2020-09-07T18:15:22Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226", "timeline": [{"oid": "e2375732b0245b3a4a600ffd19e6e358d5994a2a", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e2375732b0245b3a4a600ffd19e6e358d5994a2a", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T08:45:43Z", "type": "forcePushed"}, {"oid": "c1f2175015e92ebb26c63acc0efaa041a7da78be", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c1f2175015e92ebb26c63acc0efaa041a7da78be", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T08:46:40Z", "type": "forcePushed"}, {"oid": "179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T09:26:47Z", "type": "forcePushed"}, {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T10:20:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMzE5OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484833198", "bodyText": "https://www.youtube.com/watch?v=VFA2d4G9q30", "author": "afalhambra", "createdAt": "2020-09-08T11:04:04Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -41,29 +45,36 @@\n import org.kie.server.api.model.instance.RequestInfoInstance;\n import org.kie.server.api.model.instance.TaskInstance;\n import org.kie.server.api.model.instance.TaskSummary;\n+import org.kie.server.api.model.instance.VariableInstance;\n import org.kie.server.api.model.instance.WorkItemInstance;\n-import org.kie.server.api.KieServerConstants;\n-import org.kie.server.api.exception.KieServicesException;\n import org.kie.server.integrationtests.category.Smoke;\n import org.kie.server.integrationtests.category.UnstableOnJenkinsPrBuilder;\n import org.kie.server.integrationtests.config.TestConfig;\n-\n-import static org.junit.Assert.*;\n-import org.kie.server.api.model.instance.VariableInstance;\n import org.kie.server.integrationtests.shared.KieServerAssert;\n import org.kie.server.integrationtests.shared.KieServerDeployer;\n import org.kie.server.integrationtests.shared.KieServerReflections;\n import org.kie.server.integrationtests.shared.KieServerSynchronization;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n \n public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n \n     private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+    \n+    private static final String FUNNY_CONTAINER_ID = \"manic miner forever\";", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkwNzYwNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484907607", "bodyText": "It will take me \"forever\" to complete that tricky game", "author": "fjtirado", "createdAt": "2020-09-08T13:18:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMzE5OA=="}], "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -66,11 +66,12 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n \n     private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n     \n-    private static final String FUNNY_CONTAINER_ID = \"manic miner forever\";\n-\n     private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"definition-project\",\n             \"1.0.0.Final\");\n \n+    private static ReleaseId releaseId2 = new ReleaseId(\"org.kie.server.testing\", \"definition-project-v2\",\n+                                                        \"1.0.0.Final\");\n+\n     protected static final String SORT_BY_PROCESS_ID = \"ProcessId\";\n     \n     @Rule\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMzgwMA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484833800", "bodyText": "unnecessary unboxing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                        assertTrue(processInstanceId > 0);", "author": "afalhambra", "createdAt": "2020-09-08T11:05:17Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -192,12 +192,12 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     \n     @Test()\n     public void testAbortExistingProcessWrongContainer() {\n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Process instance is running and is active.\n             ProcessInstance processInstance = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNTk4Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484835982", "bodyText": "Explicit arguments are not really needed\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "author": "afalhambra", "createdAt": "2020-09-08T11:09:38Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -192,12 +192,12 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     \n     @Test()\n     public void testAbortExistingProcessWrongContainer() {\n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Process instance is running and is active.\n             ProcessInstance processInstance = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNjkxNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484836916", "bodyText": "Checked exceptions are never thrown in this test\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testSignalProcessInstanceWrongContainer() throws Exception {\n          \n          \n            \n                public void testSignalProcessInstanceWrongContainer() {", "author": "afalhambra", "createdAt": "2020-09-08T11:11:24Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() throws Exception {", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -272,11 +272,11 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     }\n     \n     @Test\n-    public void testSignalProcessInstanceWrongContainer() throws Exception {\n+    public void testSignalProcessInstanceWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n-        assertTrue(processInstanceId.longValue() > 0);\n+        assertTrue(processInstanceId > 0);\n \n         try {\n             checkAvailableSignals(CONTAINER_ID, processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzE0OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484837149", "bodyText": "Unnecessary unboxing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                    assertTrue(processInstanceId > 0);", "author": "afalhambra", "createdAt": "2020-09-08T11:11:52Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -272,11 +272,11 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     }\n     \n     @Test\n-    public void testSignalProcessInstanceWrongContainer() throws Exception {\n+    public void testSignalProcessInstanceWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n-        assertTrue(processInstanceId.longValue() > 0);\n+        assertTrue(processInstanceId > 0);\n \n         try {\n             checkAvailableSignals(CONTAINER_ID, processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODQ5NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484838494", "bodyText": "Checked exceptions are never thrown within this test\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testManipulateProcessVariableWrongContainer() throws Exception {\n          \n          \n            \n                public void testManipulateProcessVariableWrongContainer() {", "author": "afalhambra", "createdAt": "2020-09-08T11:14:48Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -404,7 +404,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n \n     }\n     \n-    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+    public void testManipulateProcessVariableWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODg2Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484838863", "bodyText": "Test annotation is missing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testManipulateProcessVariableWrongContainer() throws Exception {\n          \n          \n            \n                @Test\n          \n          \n            \n                public void testManipulateProcessVariableWrongContainer() {", "author": "afalhambra", "createdAt": "2020-09-08T11:15:26Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -404,7 +404,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n \n     }\n     \n-    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+    public void testManipulateProcessVariableWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTE0OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484839149", "bodyText": "same as previous", "author": "afalhambra", "createdAt": "2020-09-08T11:16:05Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -404,7 +404,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n \n     }\n     \n-    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+    public void testManipulateProcessVariableWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDE4OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840188", "bodyText": "I would add below to make sure personVar is not null\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        exceptionRule.expect(KieServicesException.class);\n          \n          \n            \n                        assertNotNull(personVar);\n          \n          \n            \n                        exceptionRule.expect(KieServicesException.class);", "author": "afalhambra", "createdAt": "2020-09-08T11:18:13Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);\n+\n+        try {\n+            Object personVar = null;\n+            try {\n+                personVar = processClient.getProcessInstanceVariable(CONTAINER_ID, processInstanceId, \"personData\");\n+                fail(\"Should fail as there is no process variable personData set yet\");\n+            } catch (KieServicesException e) {\n+                // expected\n+            }\n+            assertNull(personVar);\n+\n+            personVar = createPersonInstance(USER_JOHN);\n+            exceptionRule.expect(KieServicesException.class);", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -404,7 +404,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n \n     }\n     \n-    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+    public void testManipulateProcessVariableWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n \n         assertNotNull(processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDY4Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840687", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetProcessInstanceWrongContainer() {\n          \n          \n            \n                @Test\n          \n          \n            \n                public void testGetProcessInstanceWrongContainer() {", "author": "afalhambra", "createdAt": "2020-09-08T11:19:16Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -423,6 +499,27 @@ public void testGetProcessInstance() throws Exception {\n         }\n \n     }\n+    \n+        \n+    public void testGetProcessInstanceWrongContainer() {", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -501,9 +502,10 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     }\n     \n         \n+    @Test\n     public void testGetProcessInstanceWrongContainer() {\n         \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n         parameters.put(\"stringData\", \"waiting for signal\");\n         parameters.put(\"personData\", createPersonInstance(USER_JOHN));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDk5OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840998", "bodyText": "Explicit type parameters are not required\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "author": "afalhambra", "createdAt": "2020-09-08T11:19:49Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -423,6 +499,27 @@ public void testGetProcessInstance() throws Exception {\n         }\n \n     }\n+    \n+        \n+    public void testGetProcessInstanceWrongContainer() {\n+        \n+        Map<String, Object> parameters = new HashMap<String, Object>();", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..3f167ed18 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -501,9 +502,10 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     }\n     \n         \n+    @Test\n     public void testGetProcessInstanceWrongContainer() {\n         \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n         parameters.put(\"stringData\", \"waiting for signal\");\n         parameters.put(\"personData\", createPersonInstance(USER_JOHN));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MTcyMg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484841722", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "author": "afalhambra", "createdAt": "2020-09-08T11:21:22Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -693,17 +693,17 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     @Test\n     public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Completing human task so we can move in process flow to work item.\n             // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n             // i.e. leaving open tasks after finishing process instance.\n-            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n             List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n \n             assertEquals(1, taskList.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MTg1NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484841854", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                        assertTrue(processInstanceId > 0);", "author": "afalhambra", "createdAt": "2020-09-08T11:21:38Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -693,17 +693,17 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     @Test\n     public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Completing human task so we can move in process flow to work item.\n             // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n             // i.e. leaving open tasks after finishing process instance.\n-            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n             List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n \n             assertEquals(1, taskList.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MjE4Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484842187", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<String> status = Arrays.asList(Status.Ready.toString());\n          \n          \n            \n                        List<String> status = Collections.singletonList(Status.Ready.toString());", "author": "afalhambra", "createdAt": "2020-09-08T11:22:20Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Arrays.asList(Status.Ready.toString());", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -693,17 +693,17 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     @Test\n     public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Completing human task so we can move in process flow to work item.\n             // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n             // i.e. leaving open tasks after finishing process instance.\n-            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n             List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n \n             assertEquals(1, taskList.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzczMA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484843730", "bodyText": "I don't think this is needed - what do you think?", "author": "afalhambra", "createdAt": "2020-09-08T11:25:38Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n+\n+            assertEquals(1, taskList.size());\n+            TaskSummary taskSummary = taskList.get(0);\n+            taskClient.startTask(CONTAINER_ID, taskSummary.getId(), USER_YODA);\n+            taskClient.completeTask(CONTAINER_ID, taskSummary.getId(), USER_YODA, null);\n+\n+            TaskInstance userTask = taskClient.findTaskById(taskSummary.getId());\n+            assertNotNull(userTask);\n+            assertEquals(\"Evaluate items?\", userTask.getName());\n+            assertEquals(Status.Completed.toString(), userTask.getStatus());\n+\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(workItems);\n+            assertEquals(1, workItems.size());\n+\n+            WorkItemInstance workItemInstance = workItems.get(0);\n+            assertNotNull(workItemInstance);\n+\n+            exceptionRule.expect(KieServicesException.class);\n+            processClient.completeWorkItem(FUNNY_CONTAINER_ID, processInstanceId, workItemInstance.getId(), parameters);\n+        } finally {\n+            processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n+            changeUser(TestConfig.getUsername());", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkwOTEyMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484909123", "bodyText": "I think we need to abort process instance always (probably it should a clean task for every test, but that will be a bigger change and will imply reviweing all test cases)", "author": "fjtirado", "createdAt": "2020-09-08T13:20:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkxOTA5MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484919090", "bodyText": "mmm I was talking about the changeUser method call - I believe it's not needed here", "author": "afalhambra", "createdAt": "2020-09-08T13:28:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyNTMwNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484925304", "bodyText": "I think that is needed (it was already present in existing code) to leave the user as it was before the execution of the test", "author": "fjtirado", "createdAt": "2020-09-08T13:35:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzczMA=="}], "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -693,17 +693,17 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     @Test\n     public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n \n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n \n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n         try {\n             assertNotNull(processInstanceId);\n-            assertTrue(processInstanceId.longValue() > 0);\n+            assertTrue(processInstanceId > 0);\n \n             // Completing human task so we can move in process flow to work item.\n             // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n             // i.e. leaving open tasks after finishing process instance.\n-            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n             List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n \n             assertEquals(1, taskList.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzkwNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484843907", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "author": "afalhambra", "createdAt": "2020-09-08T11:26:03Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -943,6 +1085,22 @@ public void testFindVariableInstances() {\n         }\n \n     }\n+    \n+    @Test\n+    public void testFindVariableInstancesWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "originalCommit": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex f785819e1..bc557e101 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -1088,7 +1088,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n     \n     @Test\n     public void testFindVariableInstancesWrongContainer() {\n-        Map<String, Object> parameters = new HashMap<String, Object>();\n+        Map<String, Object> parameters = new HashMap<>();\n         parameters.put(\"stringData\", \"waiting for signal\");\n         parameters.put(\"personData\", createPersonInstance(USER_JOHN));\n \n"}}, {"oid": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T13:23:23Z", "type": "forcePushed"}, {"oid": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T13:31:30Z", "type": "forcePushed"}, {"oid": "b54f7a4feefb61224cd8252fffc7a18aa2dba519", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b54f7a4feefb61224cd8252fffc7a18aa2dba519", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T13:32:34Z", "type": "forcePushed"}, {"oid": "593aa11f991725a704d6bd104f6b19ed16b2f1db", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/593aa11f991725a704d6bd104f6b19ed16b2f1db", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-08T13:37:55Z", "type": "forcePushed"}, {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T09:13:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMDA3MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485500070", "bodyText": "Shouldn't it be also inside the if-clause?", "author": "gmunozfe", "createdAt": "2020-09-09T10:15:03Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java", "diffHunk": "@@ -81,15 +85,14 @@ public static ProcessInstanceList convertToProcessInstanceWithVarsList(Collectio\n             return new ProcessInstanceList(new org.kie.server.api.model.instance.ProcessInstance[0]);\n         }\n \n-        List<ProcessInstance> processInstances = new ArrayList<ProcessInstance>(instances.size());\n+        List<ProcessInstance> processInstances = new ArrayList<>(instances.size());\n         for (ProcessInstanceWithVarsDesc pi : instances) {\n             org.kie.server.api.model.instance.ProcessInstance instance = convertToProcessInstance(pi);\n-\n-            instance.setVariables(pi.getVariables());\n-\n+            if (instance != null) {\n+                instance.setVariables(pi.getVariables());\n+            }\n             processInstances.add(instance);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMzk4MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485533980", "bodyText": "I maitanined the behaviour of convertToProcessInstanceList, which includes the null item in the returned list, though Im not sure if this is the rigth approach, but it will be out of the scope of the jira anyway. I just made this change becuase there is an objetive and clear clystal risk of a null pointer exception being launch here, so I feel the need to fix it right away", "author": "fjtirado", "createdAt": "2020-09-09T11:20:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMDA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java b/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\nindex d0a47bbb6..27b998fa1 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\n\n@@ -97,10 +101,18 @@ public class ConvertUtils {\n     }\n \n     public static org.kie.server.api.model.instance.ProcessInstance convertToProcessInstance(ProcessInstanceDesc pi) {\n+        return convertToProcessInstance(pi, null);\n+    }\n+\n+    public static org.kie.server.api.model.instance.ProcessInstance convertToProcessInstance(ProcessInstanceDesc pi, String containerId) {\n         if (pi == null) {\n             return null;\n         }\n \n+        if (containerId != null && !pi.getDeploymentId().equals(containerId)) {\n+            throwException(pi.getId(), containerId);\n+        }\n+\n         org.kie.server.api.model.instance.ProcessInstance instance = org.kie.server.api.model.instance.ProcessInstance.builder()\n                 .id(pi.getId())\n                 .processId(pi.getProcessId())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMjAyNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485502024", "bodyText": "placeholder {} is not needed here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container {}\" + containerId);\n          \n          \n            \n                        throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container \" + containerId);", "author": "gmunozfe", "createdAt": "2020-09-09T10:18:49Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java", "diffHunk": "@@ -352,29 +322,34 @@ public static NodeInstanceList convertToNodeInstanceList(Collection<NodeInstance\n     }\n \n     public static VariableInstance convertToVariable(VariableDesc variableDesc) {\n-        VariableInstance instance = VariableInstance.builder()\n+        return convertToVariable(variableDesc, null);\n+    }\n+\n+    public static VariableInstance convertToVariable(VariableDesc variableDesc, String containerId) {\n+        if (containerId != null && !variableDesc.getDeploymentId().equals(containerId)) {\n+            throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container {}\" + containerId);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzNDA4NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485534084", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-09-09T11:21:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMjAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java b/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\nindex d0a47bbb6..1d81a168a 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java\n\n@@ -327,7 +327,7 @@ public class ConvertUtils {\n \n     public static VariableInstance convertToVariable(VariableDesc variableDesc, String containerId) {\n         if (containerId != null && !variableDesc.getDeploymentId().equals(containerId)) {\n-            throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container {}\" + containerId);\n+            throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container \" + containerId);\n         }\n         return VariableInstance.builder()\n                 .name(variableDesc.getVariableId())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNjY4Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485506687", "bodyText": "Why don't add also\nexceptionRule.expectMessage(FUNNY_CONTAINER_ID);", "author": "gmunozfe", "createdAt": "2020-09-09T10:27:42Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId > 0);\n+\n+            // Process instance is running and is active.\n+            ProcessInstance processInstance = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(processInstance);\n+            assertEquals(org.kie.api.runtime.process.ProcessInstance.STATE_ACTIVE, processInstance.getState().intValue());\n+            exceptionRule.expect(KieServicesException.class);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzNTQ4OA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485535488", "bodyText": "hmmm, not really, if the container exist, but it is different from the one that the process intance was created into, the exception being launched will not necessarily contain the contaner id. The engine will locate a session, but that session will not include the id.\nSince this is implementation detail, I thik I will remove expect message from the test in what it was used.\nI will alsotry to  test the scenario in which the container exist but does not hold that processInstance", "author": "fjtirado", "createdAt": "2020-09-09T11:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNjY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex d3bc66623..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -204,7 +208,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n             assertNotNull(processInstance);\n             assertEquals(org.kie.api.runtime.process.ProcessInstance.STATE_ACTIVE, processInstance.getState().intValue());\n             exceptionRule.expect(KieServicesException.class);\n-            processClient.abortProcessInstance(FUNNY_CONTAINER_ID , processInstanceId);\n+            processClient.abortProcessInstance(CONTAINER_ID_V2, processInstanceId);\n         }\n         finally {\n             processClient.abortProcessInstance(CONTAINER_ID , processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNjc4Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485506787", "bodyText": "Same here", "author": "gmunozfe", "createdAt": "2020-09-09T10:27:54Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId > 0);\n+\n+        try {\n+            checkAvailableSignals(CONTAINER_ID, processInstanceId);\n \n+            Object person = createPersonInstance(USER_JOHN);\n+            exceptionRule.expect(KieServicesException.class);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex d3bc66623..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -271,6 +275,23 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n         }\n     }\n     \n+    @Test\n+    public void testAvaliableSignalsWrongContainer() {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId > 0);\n+\n+        try {\n+            exceptionRule.expect(KieServicesException.class);\n+            processClient.getAvailableSignals(CONTAINER_ID_V2, processInstanceId);\n+\n+        } finally {\n+            processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n+        }\n+\n+    }\n+\n     @Test\n     public void testSignalProcessInstanceWrongContainer() {\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzA0OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507049", "bodyText": "Same here", "author": "gmunozfe", "createdAt": "2020-09-09T10:28:25Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,34 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    @Test\n+    public void testManipulateProcessVariableWrongContainer() {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId > 0);\n+\n+        try {\n+            Object personVar = null;\n+            try {\n+                personVar = processClient.getProcessInstanceVariable(CONTAINER_ID, processInstanceId, \"personData\");\n+                fail(\"Should fail as there is no process variable personData set yet\");\n+            } catch (KieServicesException e) {\n+                // expected\n+            }\n+            assertNull(personVar);\n+\n+            personVar = createPersonInstance(USER_JOHN);\n+            assertNotNull(personVar);\n+            exceptionRule.expect(KieServicesException.class);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex d3bc66623..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -424,7 +445,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n             personVar = createPersonInstance(USER_JOHN);\n             assertNotNull(personVar);\n             exceptionRule.expect(KieServicesException.class);\n-            processClient.setProcessVariable(FUNNY_CONTAINER_ID, processInstanceId, \"personData\", personVar);\n+            processClient.setProcessVariable(CONTAINER_ID_V2, processInstanceId, \"personData\", personVar);\n             \n         } finally {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzI5OQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507299", "bodyText": "Same here", "author": "gmunozfe", "createdAt": "2020-09-09T10:28:46Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +692,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n+            List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n+\n+            assertEquals(1, taskList.size());\n+            TaskSummary taskSummary = taskList.get(0);\n+            taskClient.startTask(CONTAINER_ID, taskSummary.getId(), USER_YODA);\n+            taskClient.completeTask(CONTAINER_ID, taskSummary.getId(), USER_YODA, null);\n+\n+            TaskInstance userTask = taskClient.findTaskById(taskSummary.getId());\n+            assertNotNull(userTask);\n+            assertEquals(\"Evaluate items?\", userTask.getName());\n+            assertEquals(Status.Completed.toString(), userTask.getStatus());\n+\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(workItems);\n+            assertEquals(1, workItems.size());\n+\n+            WorkItemInstance workItemInstance = workItems.get(0);\n+            assertNotNull(workItemInstance);\n+\n+            exceptionRule.expect(KieServicesException.class);\n+            processClient.completeWorkItem(FUNNY_CONTAINER_ID, processInstanceId, workItemInstance.getId(), parameters);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex d3bc66623..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -727,7 +783,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n             assertNotNull(workItemInstance);\n \n             exceptionRule.expect(KieServicesException.class);\n-            processClient.completeWorkItem(FUNNY_CONTAINER_ID, processInstanceId, workItemInstance.getId(), parameters);\n+            processClient.completeWorkItem(CONTAINER_ID_V2, processInstanceId, workItemInstance.getId(), parameters);\n         } finally {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             changeUser(TestConfig.getUsername());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzQ2Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507467", "bodyText": "Same here", "author": "gmunozfe", "createdAt": "2020-09-09T10:29:06Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -943,6 +1088,21 @@ public void testFindVariableInstances() {\n         }\n \n     }\n+    \n+    @Test\n+    public void testFindVariableInstancesWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<>();\n+        parameters.put(\"stringData\", \"waiting for signal\");\n+        parameters.put(\"personData\", createPersonInstance(USER_JOHN));\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK, parameters);\n+        try {\n+            exceptionRule.expect(KieServicesException.class);", "originalCommit": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc188e5230b1d10afd172a89001b1207ee438ecd", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\nindex d3bc66623..018a0b12f 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\n@@ -1098,7 +1154,7 @@ public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationT\n         Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK, parameters);\n         try {\n             exceptionRule.expect(KieServicesException.class);\n-            processClient.findVariablesCurrentState(FUNNY_CONTAINER_ID, processInstanceId);\n+            processClient.findVariablesCurrentState(CONTAINER_ID_V2, processInstanceId);\n         } finally {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n         }\n"}}, {"oid": "cc188e5230b1d10afd172a89001b1207ee438ecd", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cc188e5230b1d10afd172a89001b1207ee438ecd", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T11:40:16Z", "type": "forcePushed"}, {"oid": "192cc0495446a5950b7a9410255866cc60bbefe2", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/192cc0495446a5950b7a9410255866cc60bbefe2", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T11:53:25Z", "type": "forcePushed"}, {"oid": "50f46e0677b1d4acfe686e30baff4f9157d36c0a", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/50f46e0677b1d4acfe686e30baff4f9157d36c0a", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T12:06:35Z", "type": "forcePushed"}, {"oid": "aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T18:31:42Z", "type": "forcePushed"}, {"oid": "5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-09T19:43:00Z", "type": "forcePushed"}, {"oid": "7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-10T12:36:58Z", "type": "forcePushed"}, {"oid": "df081db20f8025dea080304b97ab4022509e5102", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/df081db20f8025dea080304b97ab4022509e5102", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-11T09:00:44Z", "type": "forcePushed"}, {"oid": "568a0686da6b651d5d54e32a0cfa97bee671a4ac", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/568a0686da6b651d5d54e32a0cfa97bee671a4ac", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-11T14:38:27Z", "type": "forcePushed"}, {"oid": "5e598607aafd69c17e98302715811b48b27f43f0", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5e598607aafd69c17e98302715811b48b27f43f0", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-14T16:42:30Z", "type": "forcePushed"}, {"oid": "8260017463c6b8f690824e541debb556589e2d0e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8260017463c6b8f690824e541debb556589e2d0e", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-18T09:07:51Z", "type": "commit"}, {"oid": "8260017463c6b8f690824e541debb556589e2d0e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8260017463c6b8f690824e541debb556589e2d0e", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request", "committedDate": "2020-09-18T09:07:51Z", "type": "forcePushed"}]}