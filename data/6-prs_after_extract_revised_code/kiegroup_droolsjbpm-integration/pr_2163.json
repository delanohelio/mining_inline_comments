{"pr_number": 2163, "pr_title": "[JBPM-9247] Fields attribute isn't processed in Accept header", "pr_createdAt": "2020-07-20T14:43:40Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwODc0Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r457508747", "bodyText": "Just for completeness, you can add\nAssertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "author": "fjtirado", "createdAt": "2020-07-20T15:44:56Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,21 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");", "originalCommit": "eacaa0937827cc74bdd62fb20a5a40ed89686f52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg3MzEyOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r457873129", "bodyText": "Good point, added.", "author": "sutaakar", "createdAt": "2020-07-21T06:47:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwODc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\nindex 7048676ab..7b2acc424 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\n\n@@ -242,6 +242,7 @@ public class JbpmRestIntegrationTest extends RestJbpmBaseIntegrationTest {\n         Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n         Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n         Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");\n     }\n \n     @Test\n"}}, {"oid": "67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1", "message": "[JBPM-9247] Fields attribute isn't processed in Accept header\n\nSigned-off-by: Karel Suta <ksuta@redhat.com>", "committedDate": "2020-07-21T06:46:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNDUxNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r458014517", "bodyText": "And just for complete completeness, you can add\nAssertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "author": "MarianMacik", "createdAt": "2020-07-21T11:04:39Z", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,22 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "originalCommit": "67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxOTM2MA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r458019360", "bodyText": "Added", "author": "sutaakar", "createdAt": "2020-07-21T11:14:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNDUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "70f39d0fe63c11ae5649af3e80501d4c37a88c2e", "chunk": "diff --git a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\nindex 7b2acc424..7462ad19a 100644\n--- a/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\n+++ b/kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java\n\n@@ -241,6 +241,7 @@ public class JbpmRestIntegrationTest extends RestJbpmBaseIntegrationTest {\n         WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n         Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n         Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");\n         Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n         Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");\n     }\n"}}, {"oid": "70f39d0fe63c11ae5649af3e80501d4c37a88c2e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/70f39d0fe63c11ae5649af3e80501d4c37a88c2e", "message": "[JBPM-9247] Fields attribute isn't processed in Accept header\n\nSigned-off-by: Karel Suta <ksuta@redhat.com>", "committedDate": "2020-07-21T11:14:01Z", "type": "commit"}, {"oid": "70f39d0fe63c11ae5649af3e80501d4c37a88c2e", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/70f39d0fe63c11ae5649af3e80501d4c37a88c2e", "message": "[JBPM-9247] Fields attribute isn't processed in Accept header\n\nSigned-off-by: Karel Suta <ksuta@redhat.com>", "committedDate": "2020-07-21T11:14:01Z", "type": "forcePushed"}]}