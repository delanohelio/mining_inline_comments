{"pr_number": 2234, "pr_title": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test", "pr_createdAt": "2020-09-14T16:34:26Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234", "timeline": [{"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-14T16:39:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NTI2NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488455265", "bodyText": "might be worth failing the test as well?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw ex;\n          \n          \n            \n                        fail(\"Something went wrong: \" + ex.getMessage());\n          \n          \n            \n                        throw ex;", "author": "afalhambra", "createdAt": "2020-09-15T07:43:19Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5aca8b6f2a651da1e00318477bc3120125536b54", "chunk": "diff --git a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\nindex f7f9b5ed6..f80f24115 100644\n--- a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n+++ b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n\n@@ -154,9 +155,10 @@ public class KieServerMigrationTest {\n             try {\n                 processClient.abortProcessInstance(containerId, processInstanceId);\n             } catch (Exception ex2) {}\n+            fail(\"Migration failed: \" + ex);\n             throw ex;\n         }\n-        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        //abort process instance (outside try/catch), to not hide exception that will certainly occur if  migration fails \n         processClient.abortProcessInstance(containerId2, processInstanceId);\n         processInstance = queryClient.findProcessInstanceById(processInstanceId);\n         assertNotNull(processInstance);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488456921", "bodyText": "Shouldn't we try to abort process instance even if above exception is raised? like using this in a finally block? Otherwise this process instance won't be aborted in case of an exception.", "author": "afalhambra", "createdAt": "2020-09-15T07:46:03Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        processClient.abortProcessInstance(containerId2, processInstanceId);", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUyNDYwOQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488524609", "bodyText": "If the migration has failed, that code is not reached and it should not be (abort over the former container is performed). This code only makes sense in a sunny day scensario (aborting the migrated instance). If that abort failed, there is nothing else to do, since the instance is not any longer in the former container (has been properly migrated)", "author": "fjtirado", "createdAt": "2020-09-15T09:33:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzMzE1NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488533155", "bodyText": "got it now - thanks!", "author": "afalhambra", "createdAt": "2020-09-15T09:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5aca8b6f2a651da1e00318477bc3120125536b54", "chunk": "diff --git a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\nindex f7f9b5ed6..f80f24115 100644\n--- a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n+++ b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n\n@@ -154,9 +155,10 @@ public class KieServerMigrationTest {\n             try {\n                 processClient.abortProcessInstance(containerId, processInstanceId);\n             } catch (Exception ex2) {}\n+            fail(\"Migration failed: \" + ex);\n             throw ex;\n         }\n-        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        //abort process instance (outside try/catch), to not hide exception that will certainly occur if  migration fails \n         processClient.abortProcessInstance(containerId2, processInstanceId);\n         processInstance = queryClient.findProcessInstanceById(processInstanceId);\n         assertNotNull(processInstance);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2NDc3NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488464775", "bodyText": "typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n          \n          \n            \n                    //abort process instance (outside try/catch), to not hide exception that will certainly occur if migration fails", "author": "afalhambra", "createdAt": "2020-09-15T07:59:17Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed ", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5aca8b6f2a651da1e00318477bc3120125536b54", "chunk": "diff --git a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\nindex f7f9b5ed6..f80f24115 100644\n--- a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n+++ b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n\n@@ -154,9 +155,10 @@ public class KieServerMigrationTest {\n             try {\n                 processClient.abortProcessInstance(containerId, processInstanceId);\n             } catch (Exception ex2) {}\n+            fail(\"Migration failed: \" + ex);\n             throw ex;\n         }\n-        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        //abort process instance (outside try/catch), to not hide exception that will certainly occur if  migration fails \n         processClient.abortProcessInstance(containerId2, processInstanceId);\n         processInstance = queryClient.findProcessInstanceById(processInstanceId);\n         assertNotNull(processInstance);\n"}}, {"oid": "5aca8b6f2a651da1e00318477bc3120125536b54", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5aca8b6f2a651da1e00318477bc3120125536b54", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T09:31:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3OTUyMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488079521", "bodyText": "Shouldn't it be useful to log something in case abort process operation fails?", "author": "gmunozfe", "createdAt": "2020-09-14T16:49:56Z", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}", "originalCommit": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5aca8b6f2a651da1e00318477bc3120125536b54", "chunk": "diff --git a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\nindex f7f9b5ed6..f80f24115 100644\n--- a/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n+++ b/kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java\n\n@@ -154,9 +155,10 @@ public class KieServerMigrationTest {\n             try {\n                 processClient.abortProcessInstance(containerId, processInstanceId);\n             } catch (Exception ex2) {}\n+            fail(\"Migration failed: \" + ex);\n             throw ex;\n         }\n-        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        //abort process instance (outside try/catch), to not hide exception that will certainly occur if  migration fails \n         processClient.abortProcessInstance(containerId2, processInstanceId);\n         processInstance = queryClient.findProcessInstanceById(processInstanceId);\n         assertNotNull(processInstance);\n"}}, {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T12:33:22Z", "type": "commit"}, {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one.", "committedDate": "2020-09-15T12:33:22Z", "type": "forcePushed"}]}