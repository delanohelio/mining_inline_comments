{"pr_number": 2009, "pr_title": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters", "pr_createdAt": "2020-02-14T11:05:51Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009", "timeline": [{"oid": "04fe0293516dc608e45849f6b9c9516f49aace0b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/04fe0293516dc608e45849f6b9c9516f49aace0b", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-17T14:46:32Z", "type": "forcePushed"}, {"oid": "07d4d21456e8982839d987e4d59b79ccc2cef91a", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/07d4d21456e8982839d987e4d59b79ccc2cef91a", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-17T15:03:09Z", "type": "forcePushed"}, {"oid": "5427f396723b2d6ef58cdfe6ca61d5e1273c914b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5427f396723b2d6ef58cdfe6ca61d5e1273c914b", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-18T10:11:53Z", "type": "forcePushed"}, {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-19T10:59:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MDM0NQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381970345", "bodyText": "Typo (if matches with the operation)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n          \n          \n            \n                public static QueryParam greaterOrEqualsTo(String column, Comparable<?> value) {", "author": "gmunozfe", "createdAt": "2020-02-20T12:32:24Z", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.kie.server.api.model.definition.QueryParam;\n+\n+public final class QueryParamFactory {\n+\n+    private QueryParamFactory() {}\n+\n+    public static QueryParam isNull(String column) {\n+        return new QueryParam(column, \"IS_NULL\", null);\n+    }\n+\n+    public static QueryParam isNotNull(String column) {\n+        return new QueryParam(column, \"NOT_NULL\", null);\n+    }\n+\n+    public static QueryParam equalsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam notEqualsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"NOT_EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam likeTo(String column, boolean caseSensitive, Comparable<?> value) {\n+        return new QueryParam(column, \"LIKE_TO\", Arrays.asList(value, caseSensitive));\n+    }\n+\n+    public static QueryParam greaterThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {", "originalCommit": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b73337147b5004cb923ed571720f042bf2ce48a4", "chunk": "diff --git a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\nindex acbca3e75..daf665a62 100644\n--- a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\n+++ b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\n\n@@ -51,7 +51,7 @@ public final class QueryParamFactory {\n         return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n     }\n \n-    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n+    public static QueryParam greaterOrEqualsTo(String column, Comparable<?> value) {\n         return new QueryParam(column, \"GREATER_OR_EQUALS_TO\", Arrays.asList(value));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MDUzNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381970537", "bodyText": "Typo (if matches with the operation)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static QueryParam lowerOrEqualTo(String column, Comparable<?> value) {\n          \n          \n            \n                public static QueryParam lowerOrEqualsTo(String column, Comparable<?> value) {", "author": "gmunozfe", "createdAt": "2020-02-20T12:32:50Z", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.kie.server.api.model.definition.QueryParam;\n+\n+public final class QueryParamFactory {\n+\n+    private QueryParamFactory() {}\n+\n+    public static QueryParam isNull(String column) {\n+        return new QueryParam(column, \"IS_NULL\", null);\n+    }\n+\n+    public static QueryParam isNotNull(String column) {\n+        return new QueryParam(column, \"NOT_NULL\", null);\n+    }\n+\n+    public static QueryParam equalsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam notEqualsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"NOT_EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam likeTo(String column, boolean caseSensitive, Comparable<?> value) {\n+        return new QueryParam(column, \"LIKE_TO\", Arrays.asList(value, caseSensitive));\n+    }\n+\n+    public static QueryParam greaterThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_OR_EQUALS_TO\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam lowerThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"LOWER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam lowerOrEqualTo(String column, Comparable<?> value) {", "originalCommit": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b73337147b5004cb923ed571720f042bf2ce48a4", "chunk": "diff --git a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\nindex acbca3e75..daf665a62 100644\n--- a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\n+++ b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java\n\n@@ -51,7 +51,7 @@ public final class QueryParamFactory {\n         return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n     }\n \n-    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n+    public static QueryParam greaterOrEqualsTo(String column, Comparable<?> value) {\n         return new QueryParam(column, \"GREATER_OR_EQUALS_TO\", Arrays.asList(value));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjAzMQ==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381972031", "bodyText": "Better return an empty list\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return null;\n          \n          \n            \n                        return Collections.emptyList();", "author": "gmunozfe", "createdAt": "2020-02-20T12:36:11Z", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/QueryDataServiceBase.java", "diffHunk": "@@ -190,6 +191,23 @@ public Object queryFiltered(String containerId, String queryName, String mapper,\n         return transform(result, resultMapper);\n     }\n \n+    private List<Object> toJbpmQueryParam(List<?> parameters) {\n+        if (parameters == null) {\n+            return null;", "originalCommit": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNTEzNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r382025137", "bodyText": "this cannot happens as it will change the current behaviour.", "author": "elguardian", "createdAt": "2020-02-20T14:16:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjAzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3ODI3Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381978277", "bodyText": "It should start with lowercase: builder()", "author": "gmunozfe", "createdAt": "2020-02-20T12:50:14Z", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java", "diffHunk": "@@ -43,6 +44,10 @@\n     @XmlElement(name = \"order-by-clause\")\n     private String orderByClause;\n \n+    public static QueryFilterSpecBuilder Builder() {", "originalCommit": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b73337147b5004cb923ed571720f042bf2ce48a4", "chunk": "diff --git a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java\nindex cb593b189..1a3e112af 100644\n--- a/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java\n+++ b/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java\n\n@@ -44,7 +44,7 @@ public class QueryFilterSpec {\n     @XmlElement(name = \"order-by-clause\")\n     private String orderByClause;\n \n-    public static QueryFilterSpecBuilder Builder() {\n+    public static QueryFilterSpecBuilder builder() {\n         return new QueryFilterSpecBuilder();\n     }\n \n"}}, {"oid": "b73337147b5004cb923ed571720f042bf2ce48a4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b73337147b5004cb923ed571720f042bf2ce48a4", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-20T14:34:16Z", "type": "commit"}, {"oid": "b73337147b5004cb923ed571720f042bf2ce48a4", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b73337147b5004cb923ed571720f042bf2ce48a4", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nmodify payload and added an adapter for recursive query param / ast expression", "committedDate": "2020-02-20T14:34:16Z", "type": "forcePushed"}]}