{"pr_number": 2087, "pr_title": "[Drools-5321] Randomly failing test org.kie.hacep.LocalStorageKieSessionTest.fireUntilHaltTest on timeout", "pr_createdAt": "2020-05-12T11:00:37Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087", "timeline": [{"oid": "fc1e439b24fe5ed9bd4bc1f289e63a9c94747d98", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/fc1e439b24fe5ed9bd4bc1f289e63a9c94747d98", "message": "increased timeout", "committedDate": "2020-05-12T10:59:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424234996", "bodyText": "I don't think  increasing timeout is good fix here", "author": "mareknovotny", "createdAt": "2020-05-13T07:42:01Z", "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "diffHunk": "@@ -127,7 +127,7 @@ public void deleteTest() throws ExecutionException, InterruptedException {\n         assertEquals((Long) 0L, session.getFactCount().get());\n     }\n \n-    @Test(timeout = 10000)\n+    @Test(timeout = 20000)", "originalCommit": "fc1e439b24fe5ed9bd4bc1f289e63a9c94747d98", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI0NjQzMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424246433", "bodyText": "Locally fireUntilHalt spent 5 sec and all test 13-14 sec, on failure fireUntilHalt spent 10.645 sec on pr build all six test in the class spent 24 sec and the fireuntil halt is under 10 sec and no failure, the execution time seems depend on the build execution.", "author": "desmax74", "createdAt": "2020-05-13T08:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI1NTQ3Ng==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424255476", "bodyText": "well there is some concurrent processing and this will be always very dependent on the environment, so I would like to see 1. Avoid concurrent access in Tests generally or 2. Do not include such concurrency tests in default unit/integration run at all.", "author": "mareknovotny", "createdAt": "2020-05-13T08:16:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MjY5Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424262692", "bodyText": "3 Remove the timeouts because now are useless", "author": "desmax74", "createdAt": "2020-05-13T08:28:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2ODMwNg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424268306", "bodyText": "if that resolves the problem from opposite direction, why not", "author": "mareknovotny", "createdAt": "2020-05-13T08:37:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2ODU5Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424268597", "bodyText": "Are you preparing follow up PR?", "author": "mareknovotny", "createdAt": "2020-05-13T08:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3NzkyMw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424277923", "bodyText": "Waiting the result of build 81 with this change, if green then a PR with LocalStorage without timeouts", "author": "desmax74", "createdAt": "2020-05-13T08:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2NDUwMA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2087#discussion_r424964500", "bodyText": "test timed out after 20000 milliseconds in #82", "author": "mareknovotny", "createdAt": "2020-05-14T08:35:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNDk5Ng=="}], "type": "inlineReview", "revised_code": null}]}