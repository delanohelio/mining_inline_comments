{"pr_number": 2113, "pr_title": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store", "pr_createdAt": "2020-05-31T14:54:07Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113", "timeline": [{"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4767509a8cbed0a248dca478bae88e8eb6de334b", "message": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store\n\n    - Fix SimpleUserSystemService windows directoy error\n    - Adds the IBM jdk generated KeyStore taskAssigningKeystoreIBM.jceks for the TaskAssigning tests", "committedDate": "2020-05-31T14:51:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyMDE3Mw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433120173", "bodyText": "Great idea with using a second keystore that is compatible with the IBM java, thanks!", "author": "rsynek", "createdAt": "2020-06-01T08:59:39Z", "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java", "diffHunk": "@@ -113,6 +119,8 @@\n     private static final String RUNTIME_TIMEOUT = \"1234\";\n \n     private static final String KEY_STORE_RESOURCE = \"taskAssigningKeystore.jceks\";\n+    private static final String KEY_STORE_RESOURCE_IBM = \"taskAssigningKeystoreIBM.jceks\";", "originalCommit": "4767509a8cbed0a248dca478bae88e8eb6de334b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0b09679faf5275d92df6e80a23174654f7a7705", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\nindex 7780169c2..68407bb2a 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\n\n@@ -119,6 +113,9 @@ public class TaskAssigningPlanningKieServerExtensionTest {\n     private static final String RUNTIME_TIMEOUT = \"1234\";\n \n     private static final String KEY_STORE_RESOURCE = \"taskAssigningKeystore.jceks\";\n+    /**\n+     * was generated with the KeyStoreUtil class.\n+     */\n     private static final String KEY_STORE_RESOURCE_IBM = \"taskAssigningKeystoreIBM.jceks\";\n \n     private static final String KEY_STORE_PASSWORD = \"jBPMKeyStorePassword\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyMjE1Nw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433122157", "bodyText": "IDE suggests this is a dead code. As such, it may easily disappear in any refactoring to come. Do we need to keep the code, in other words, do we expect the keystore to change in the future? If so, how about moving the keystore creation into a separate class with a main method (still under the test directory structure)?", "author": "rsynek", "createdAt": "2020-06-01T09:04:12Z", "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java", "diffHunk": "@@ -674,4 +683,46 @@ private void enableExtension() {\n     private void disableExtension() {\n         System.setProperty(KIE_TASK_ASSIGNING_PLANNING_EXT_DISABLED, \"true\");\n     }\n+\n+    private String getCurrentKeyStore() {\n+        String vendor = System.getProperty(\"java.vendor\");\n+        if (vendor.toUpperCase().contains(\"IBM\")) {\n+            return KEY_STORE_RESOURCE_IBM;\n+        } else {\n+            return KEY_STORE_RESOURCE;\n+        }\n+    }\n+\n+    /**\n+     * Helper method for facilitating the generation of the KeyStore compatible with IBM jdk.\n+     */\n+    private void generateTaskAssigningIBMKeyStore() throws Exception {", "originalCommit": "4767509a8cbed0a248dca478bae88e8eb6de334b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDQzNw==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433130437", "bodyText": "I think it makes sense to keep it, it took time to investigate and do reverse engineering to understand how the original jBPM key store was created. If there are any \"future\" format issues we'll need this class for regenerate the keystore and test, etc.", "author": "wmedvede", "createdAt": "2020-06-01T09:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyMjE1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a0b09679faf5275d92df6e80a23174654f7a7705", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\nindex 7780169c2..68407bb2a 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java\n\n@@ -692,37 +689,4 @@ public class TaskAssigningPlanningKieServerExtensionTest {\n             return KEY_STORE_RESOURCE;\n         }\n     }\n-\n-    /**\n-     * Helper method for facilitating the generation of the KeyStore compatible with IBM jdk.\n-     */\n-    private void generateTaskAssigningIBMKeyStore() throws Exception {\n-        makeNewKeystoreEntry(KEY_STORE_RESOURCE_IBM, RUNTIME_ALIAS, RUNTIME_ALIAS_PWD, RUNTIME_ALIAS_STORED_PWD, KEY_STORE_PASSWORD);\n-    }\n-\n-    /**\n-     * Helper method for facilitating the generation of the KeyStore with the values used by this tests.\n-     */\n-    private static void makeNewKeystoreEntry(String keyStoreLocation,\n-                                             String entryAlias,\n-                                             String entryAliasPassword,\n-                                             String valueToCipherAndStore,\n-                                             String keyStorePassword) throws Exception {\n-\n-        KeyStore ks = KeyStore.getInstance(\"JCEKS\");\n-        ks.load(null, keyStorePassword.toCharArray());\n-\n-        SecretKeyFactory factoryBPE = SecretKeyFactory.getInstance(\"PBEWithMD5AndDES\");\n-        SecretKey generatedSecret =\n-                factoryBPE.generateSecret(new PBEKeySpec(\n-                        valueToCipherAndStore.toCharArray()));\n-\n-        KeyStore.PasswordProtection entryPasswordProtection = new KeyStore.PasswordProtection(entryAliasPassword.toCharArray());\n-\n-        KeyStore.SecretKeyEntry secret = new KeyStore.SecretKeyEntry(generatedSecret);\n-        ks.setEntry(entryAlias, secret, entryPasswordProtection);\n-\n-        FileOutputStream fos = new java.io.FileOutputStream(keyStoreLocation);\n-        ks.store(fos, keyStorePassword.toCharArray());\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyNDcwNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433124704", "bodyText": "Suggestion: instead of synchronizing access to this variable, can we use the AtomicInteger?", "author": "rsynek", "createdAt": "2020-06-01T09:10:04Z", "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java", "diffHunk": "@@ -35,14 +35,22 @@\n public abstract class AbstractProblemFactChangeTest extends AbstractTaskAssigningCoreTest {\n \n     final Random random = new Random();\n+    private static int changeIds = 1;", "originalCommit": "4767509a8cbed0a248dca478bae88e8eb6de334b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0b09679faf5275d92df6e80a23174654f7a7705", "chunk": "diff --git a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java\nindex 38769a231..bf551c3db 100644\n--- a/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java\n+++ b/kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java\n\n@@ -35,10 +35,10 @@ import static org.junit.Assert.assertTrue;\n public abstract class AbstractProblemFactChangeTest extends AbstractTaskAssigningCoreTest {\n \n     final Random random = new Random();\n-    private static int changeIds = 1;\n+    private static final AtomicInteger changeIds = new AtomicInteger(1);\n \n-    protected synchronized int nextChangeId() {\n-        return changeIds++;\n+    protected static int nextChangeId() {\n+        return changeIds.getAndIncrement();\n     }\n \n     protected class ProgrammedProblemFactChange<C extends ProblemFactChange<TaskAssigningSolution>> {\n"}}, {"oid": "a0b09679faf5275d92df6e80a23174654f7a7705", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/a0b09679faf5275d92df6e80a23174654f7a7705", "message": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store\n    - Review suggestions", "committedDate": "2020-06-01T10:10:42Z", "type": "commit"}]}