{"pr_number": 2321, "pr_title": "[RHPAM-2060] - Infinite Configuration file does not exist messages in\u2026", "pr_createdAt": "2020-11-24T00:51:43Z", "pr_url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNTMxNA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r529115314", "bodyText": "move this log line to th e beginning of the else clause and update it to something like, \"configuration file does not exist {0}, creating...\"", "author": "spolti", "createdAt": "2020-11-24T01:47:01Z", "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java", "diffHunk": "@@ -55,10 +58,22 @@ public ConfigFileWatcher(String configFilePath, ConfigurationMarshaller marshall\n             if(toWatch.toFile().exists()) {\n                 lastUpdate = Files.getLastModifiedTime(toWatch).toMillis();\n             } else {\n+                String cfg = marshaller.marshall(configuration);\n+                File file = new File(this.toWatch.toString() + \"kie-server-router.json\");\n+                file.createNewFile();\n+                if(file.exists()){\n+                    try (FileOutputStream fos = new FileOutputStream(file); PrintWriter writer = new PrintWriter(fos)) {\n+                        writer.write(cfg);\n+                    }\n+                }\n+                FileTime lastModified = Files.getLastModifiedTime(toWatch);\n+                lastUpdate =  lastModified.toMillis();\n                 log.warnv(\"configuration file does not exist {0} \", this.toWatch);", "originalCommit": "06c6d1bfd96b42dbd36edf7a7c9ac9c89545f2c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "285f69aeba3d1d1714a52f66c4bf2e6b7b7957f2", "chunk": "diff --git a/kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java b/kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java\nindex 1cb850647..6395d6b2a 100644\n--- a/kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java\n+++ b/kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java\n\n@@ -58,17 +58,16 @@ public class ConfigFileWatcher implements Runnable {\n             if(toWatch.toFile().exists()) {\n                 lastUpdate = Files.getLastModifiedTime(toWatch).toMillis();\n             } else {\n+                log.warnv(\"configuration file does not exist {0} , creating...\", this.toWatch);\n                 String cfg = marshaller.marshall(configuration);\n                 File file = new File(this.toWatch.toString() + \"kie-server-router.json\");\n-                file.createNewFile();\n-                if(file.exists()){\n+                if(file.createNewFile()){\n                     try (FileOutputStream fos = new FileOutputStream(file); PrintWriter writer = new PrintWriter(fos)) {\n                         writer.write(cfg);\n                     }\n                 }\n                 FileTime lastModified = Files.getLastModifiedTime(toWatch);\n                 lastUpdate =  lastModified.toMillis();\n-                log.warnv(\"configuration file does not exist {0} \", this.toWatch);\n             }\n         } catch (IOException e) {\n             log.error(\"Unable to read last modified date of routers config file\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNjQ1NA==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r529116454", "bodyText": "not sure if this test really test if the file exists, it on tests the object, and at this point it will be never null even if the cfg file is not correctly wriitten.\nprobably reflection would be a way to test it, @elguardian wdyt?", "author": "spolti", "createdAt": "2020-11-24T01:48:13Z", "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java", "diffHunk": "@@ -213,4 +213,15 @@ public void onConfigurationReloaded() {\n         repoWithWatcher.close();\n         repoWithWatcher.clean();\n     }\n+\n+    @Test\n+    public void testFileCreation() throws Exception {\n+\n+        File repositoryDirectory = new File(\"target\" + File.separator + UUID.randomUUID().toString());\n+        Configuration configuration = new Configuration();\n+        ConfigurationMarshaller marshaller = new ConfigurationMarshaller();\n+\n+        ConfigFileWatcher configFileWatcher = new ConfigFileWatcher(repositoryDirectory.getParentFile().getAbsolutePath(), marshaller, configuration);\n+        assertNotNull(configFileWatcher);", "originalCommit": "06c6d1bfd96b42dbd36edf7a7c9ac9c89545f2c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE2NjM3Mg==", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r530166372", "bodyText": "assertNotNull(configFileWatcher); <- this is always true.\n\n\nHe will need to check first that the directory contains the file being created.\nassertFileExists(configurationFile)\n\n\nunmarshall the file and check the defaults are equals to configuration\nassertEquals(configuration, unmarshalledConfigurationFromFile)\n\n\nThose would be good condition guards.", "author": "elguardian", "createdAt": "2020-11-25T07:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNjQ1NA=="}], "type": "inlineReview", "revised_code": {"commit": "285f69aeba3d1d1714a52f66c4bf2e6b7b7957f2", "chunk": "diff --git a/kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java b/kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java\nindex b5d5e1ca9..b5165c643 100644\n--- a/kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java\n+++ b/kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java\n\n@@ -217,11 +219,66 @@ public class FileRepositoryTest {\n     @Test\n     public void testFileCreation() throws Exception {\n \n-        File repositoryDirectory = new File(\"target\" + File.separator + UUID.randomUUID().toString());\n-        Configuration configuration = new Configuration();\n         ConfigurationMarshaller marshaller = new ConfigurationMarshaller();\n+        Configuration configuration = new Configuration();\n+        // Start watcher service with not existing config file\n+        File repositoryDirectory = new File(\"target\" + File.separator + UUID.randomUUID().toString());\n+        repositoryDirectory.mkdirs();\n+\n+        System.setProperty(KieServerRouterConstants.CONFIG_FILE_WATCHER_ENABLED, \"true\");\n+        System.setProperty(KieServerRouterConstants.CONFIG_FILE_WATCHER_INTERVAL, \"1000\");\n+\n+        FileRepository repoWithWatcher = new FileRepository(repositoryDirectory);\n+        Configuration loaded = repoWithWatcher.load();\n+\n+        CountDownLatch latch = new CountDownLatch(1);\n+        loaded.addListener(new ConfigurationListener() {\n+\n+            @Override\n+            public void onConfigurationReloaded() {\n+                latch.countDown();\n+            }\n+        });\n+\n+        // delay it a bit for the watcher to be triggered\n+        Thread.sleep(3000);\n+\n+        // Create configuration file\n+        System.setProperty(KieServerRouterConstants.CONFIG_FILE_WATCHER_ENABLED, \"false\");\n+\n+        Configuration config = new Configuration();\n+\n+        config.addContainerHost(\"container1\", \"http://localhost:8080/server\");\n+        config.addContainerHost(\"container2\", \"http://localhost:8180/server\");\n+\n+        config.addServerHost(\"server1\", \"http://localhost:8080/server\");\n+        config.addServerHost(\"server2\", \"http://localhost:8180/server\");\n+\n+        ContainerInfo containerInfo = new ContainerInfo(\"test1.0\", \"test\", \"org.kie:test:1.0\");\n+        config.addContainerInfo(containerInfo);\n+\n+        FileRepository repo = new FileRepository(repositoryDirectory);\n+        repo.persist(config);\n+\n+        latch.await(20, TimeUnit.SECONDS);\n+\n+        File serverStateFile = new File(repositoryDirectory, \"kie-server-router\" + \".json\");\n+\n+        assertTrue(serverStateFile.exists());\n+\n+        if (serverStateFile.exists()) {\n+            try (FileReader reader = new FileReader(serverStateFile)){\n+                \n+                configuration = marshaller.unmarshall(reader);\n \n-        ConfigFileWatcher configFileWatcher = new ConfigFileWatcher(repositoryDirectory.getParentFile().getAbsolutePath(), marshaller, configuration);\n-        assertNotNull(configFileWatcher);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        assertEquals(loaded.toString().trim(), configuration.toString().trim());\n+\n+        repoWithWatcher.close();\n+        repoWithWatcher.clean();\n     }\n }\n\\ No newline at end of file\n"}}, {"oid": "285f69aeba3d1d1714a52f66c4bf2e6b7b7957f2", "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/285f69aeba3d1d1714a52f66c4bf2e6b7b7957f2", "message": "[RHPAM-2060] - Infinite Configuration file does not exist messages in Smart Router logs\n\nSee: https://issues.redhat.com/browse/RHPAM-2060\n\nSigned-off-by: Mauricio Magnani <msmagnanijr@gmail.com>", "committedDate": "2020-12-02T23:44:35Z", "type": "commit"}]}