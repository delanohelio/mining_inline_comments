{"pr_number": 2201, "pr_title": "Introduce new `DisplayNameGenerator` named `Simple`", "pr_createdAt": "2020-02-27T21:13:49Z", "pr_url": "https://github.com/junit-team/junit5/pull/2201", "timeline": [{"oid": "1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "url": "https://github.com/junit-team/junit5/commit/1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "message": "Introduce new `DisplayNameGenerator` named `Simple`\n\nThis new generator extends `Standard` and removes parenthesis\nat the end of method names if they have no parameters.\n\nResolves #1961.", "committedDate": "2020-02-27T21:21:11Z", "type": "commit"}, {"oid": "1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "url": "https://github.com/junit-team/junit5/commit/1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "message": "Introduce new `DisplayNameGenerator` named `Simple`\n\nThis new generator extends `Standard` and removes parenthesis\nat the end of method names if they have no parameters.\n\nResolves #1961.", "committedDate": "2020-02-27T21:21:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyMjQ2NA==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r385822464", "bodyText": "not sure if appropriate, but if the list of displaynameGenerators is extending further, it might be easier to be read as a switch clause - but that might also be just subjective feeling.", "author": "aepfli", "createdAt": "2020-02-28T17:20:24Z", "path": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/DisplayNameUtils.java", "diffHunk": "@@ -96,6 +102,9 @@ private static DisplayNameGenerator getDisplayNameGenerator(Class<?> testClass,\n \t\t\t\t\tif (displayNameGeneratorClass == Standard.class) {\n \t\t\t\t\t\treturn standardGenerator;\n \t\t\t\t\t}\n+\t\t\t\t\tif (displayNameGeneratorClass == Simple.class) {", "originalCommit": "1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyODg0NA==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r385828844", "bodyText": "I was gonna say good idea, but unfortunatly we can't use switch with Class objects... =/", "author": "juliette-derancourt", "createdAt": "2020-02-28T17:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyMjQ2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAwODE3Ng==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r386008176", "bodyText": "...before introducing the if statements, I converted the class to its string-representation and switched over those names. That looked awkward, too.", "author": "sormuras", "createdAt": "2020-02-29T07:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyMjQ2NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MDc3OQ==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r385880779", "bodyText": "\u2753 Why the extra space?", "author": "marcphilipp", "createdAt": "2020-02-28T19:29:04Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/DisplayNameGenerator.java", "diffHunk": "@@ -105,13 +105,38 @@ public String generateDisplayNameForMethod(Class<?> testClass, Method testMethod\n \t}\n \n \t/**\n-\t * {@code DisplayNameGenerator} that replaces underscores with spaces.\n+\t * Simple {@code DisplayNameGenerator} that removes trailing parentheses\n+\t * for methods with no parameters.\n \t *\n \t * <p>This generator extends the functionality of {@link Standard} by\n+\t * removing parentheses ({@code '()'}) found at the end of method names\n+\t * with no parameters.\n+\t */\n+\tclass Simple extends Standard {\n+\n+\t\t@Override\n+\t\tpublic String generateDisplayNameForMethod(Class<?> testClass, Method testMethod) {\n+\t\t\tString displayName = testMethod.getName();\n+\t\t\tif (hasParameters(testMethod)) {\n+\t\t\t\tdisplayName += ' ' + parameterTypesAsString(testMethod);", "originalCommit": "1f7bdc0c4300ac9a8248111cc3e4fc2a03278a48", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk2MTQ0Ng==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r385961446", "bodyText": "I was actually wondering whether to put it or not.\nI originally added it in ReplaceUnderscores to make some_test(Object o) become some test (Object) which looks better imo.\nBut here if Simple is used in Kotlin (I know it\u2019s not dedicated to Kotlin usage but it was the purpose of the original request and I guess most people will use it for that), it will display such method as some test(Object) if there is no extra space, which I find less pretty (I might be nitpicking here).\nWhat do you think?", "author": "juliette-derancourt", "createdAt": "2020-02-28T23:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MDc3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5MjY2OA==", "url": "https://github.com/junit-team/junit5/pull/2201#discussion_r386092668", "bodyText": "I think that's a fair point, I hadn't thought of that. \ud83d\udc4d", "author": "marcphilipp", "createdAt": "2020-03-01T09:40:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4MDc3OQ=="}], "type": "inlineReview", "revised_code": null}]}