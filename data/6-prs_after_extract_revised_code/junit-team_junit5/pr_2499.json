{"pr_number": 2499, "pr_title": "Add an `assertInstanceOf` to Jupiter's assertions", "pr_createdAt": "2020-12-18T20:10:52Z", "pr_url": "https://github.com/junit-team/junit5/pull/2499", "timeline": [{"oid": "2daa1aeae1ce9ad6e113b861147e39547dc74cea", "url": "https://github.com/junit-team/junit5/commit/2daa1aeae1ce9ad6e113b861147e39547dc74cea", "message": "adds assertInstanceOf proof of concept for feedback\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2020-12-18T20:09:45Z", "type": "commit"}, {"oid": "b1c5cd5fa17e5b95133fdf0a18b37fb44b4cc700", "url": "https://github.com/junit-team/junit5/commit/b1c5cd5fa17e5b95133fdf0a18b37fb44b4cc700", "message": "adds javadoc and better test coverage\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2020-12-26T19:37:47Z", "type": "commit"}, {"oid": "26985a8ccdb58fdc81778dbb124e517a3f16e683", "url": "https://github.com/junit-team/junit5/commit/26985a8ccdb58fdc81778dbb124e517a3f16e683", "message": "spotlessApply\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2020-12-26T19:40:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDE2Ng==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549150166", "bodyText": "Please mark all of the new methods \"experimental\".\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@API(status = STABLE, since = \"5.8\")\n          \n          \n            \n            \t@API(status = EXPERIMENTAL, since = \"5.8\")", "author": "marcphilipp", "createdAt": "2020-12-27T18:37:04Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -3448,4 +3448,48 @@ public static void assertTimeoutPreemptively(Duration timeout, Executable execut\n \t\treturn AssertTimeout.assertTimeoutPreemptively(timeout, supplier, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n+\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n+\t}\n+\n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * <p>Fails with the supplied failure {@code message}.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue, String message) {\n+\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue, message);\n+\t}\n+\n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * <p>If necessary, the failure message will be retrieved lazily from the\n+\t * supplied {@code messageSupplier}.\n+\t *\n+\t * @since 5.8\n+\t */\n+\t@API(status = STABLE, since = \"5.8\")", "originalCommit": "26985a8ccdb58fdc81778dbb124e517a3f16e683", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\nindex d9b24e9aae..5d130ddea6 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\n\n@@ -3457,8 +3458,9 @@ public class Assertions {\n \t *\n \t * @since 5.8\n \t */\n-\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n-\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n+\t@API(status = EXPERIMENTAL, since = \"5.8\")\n+\tpublic static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn AssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n \t}\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDU1Mw==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549150553", "bodyText": "I wonder if the signature of this and the other methods shouldn't look like this to avoid obviously wrong parameters at compile time:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n          \n          \n            \n            \tpublic static <T> void assertInstanceOf(Class<? extends T> expectedType, T actualValue) {", "author": "marcphilipp", "createdAt": "2020-12-27T18:41:34Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java", "diffHunk": "@@ -3448,4 +3448,48 @@ public static void assertTimeoutPreemptively(Duration timeout, Executable execut\n \t\treturn AssertTimeout.assertTimeoutPreemptively(timeout, supplier, messageSupplier);\n \t}\n \n+\t/**\n+\t * <em>Assert</em> that the supplied {@code actualValue} is an instance of the\n+\t * {@code expectedType}.\n+\t *\n+\t * <p>Like the {@code instanceof} operator a {@code null} value is not\n+\t * considered to be of the {@code expectedType} and does not pass the assertion.\n+\t *\n+\t * @since 5.8\n+\t */\n+\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {", "originalCommit": "26985a8ccdb58fdc81778dbb124e517a3f16e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MzMxOQ==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549153319", "bodyText": "I don't think this is what you want. I found that in the examples I use it you don't know what actual type you really get so if you add the restriction you would need to add a cast the actual value which then fails instead of the assert getting us back to poor error messages.", "author": "jbee", "createdAt": "2020-12-27T19:11:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDU1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1NTI3MQ==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549155271", "bodyText": "You're right, I had actually tried it and meant to remove this comment before posting the review. Sorry for the noise!", "author": "marcphilipp", "createdAt": "2020-12-27T19:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MDU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\nindex d9b24e9aae..5d130ddea6 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assertions.java\n\n@@ -3457,8 +3458,9 @@ public class Assertions {\n \t *\n \t * @since 5.8\n \t */\n-\tpublic static void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n-\t\tAssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n+\t@API(status = EXPERIMENTAL, since = \"5.8\")\n+\tpublic static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn AssertInstanceOf.assertInstanceOf(expectedType, actualValue);\n \t}\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MTI1NQ==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549151255", "bodyText": "I think these and the other methods should return the casted value.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n          \n          \n            \n            \tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {", "author": "marcphilipp", "createdAt": "2020-12-27T18:48:40Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api;\n+\n+import static org.junit.jupiter.api.AssertionUtils.*;\n+\n+import java.util.function.Supplier;\n+\n+import org.opentest4j.AssertionFailedError;\n+\n+/**\n+ * {@code AssertInstanceOf} is a collection of utility methods that support\n+ * asserting that a value is of a expected instance type -\n+ * in other words, if it can be assigned to the expected type.\n+ *\n+ * @since 5.8\n+ */\n+class AssertInstanceOf {\n+\n+\tprivate AssertInstanceOf() {\n+\t\t/* no-op */\n+\t}\n+\n+\tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue) {", "originalCommit": "26985a8ccdb58fdc81778dbb124e517a3f16e683", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MzQ1Nw==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r549153457", "bodyText": "Yeah, this feels more useful. Actual value is an Object and after we verified it is of type T we can use it as that.", "author": "jbee", "createdAt": "2020-12-27T19:12:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE1MTI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\nindex 86efb7b51c..4846b842e4 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n\n@@ -29,19 +29,19 @@ class AssertInstanceOf {\n \t\t/* no-op */\n \t}\n \n-\tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue) {\n-\t\tassertInstanceOf(expectedType, actualValue, (Object) null);\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) null);\n \t}\n \n-\tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue, String message) {\n-\t\tassertInstanceOf(expectedType, actualValue, (Object) message);\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, String message) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) message);\n \t}\n \n-\tstatic void assertInstanceOf(Class<?> expectedType, Object actualValue, Supplier<String> messageSupplier) {\n-\t\tassertInstanceOf(expectedType, actualValue, (Object) messageSupplier);\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Supplier<String> messageSupplier) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) messageSupplier);\n \t}\n \n-\tprivate static void assertInstanceOf(Class<?> expectedType, Object actualValue, Object messageOrSupplier) {\n+\tprivate static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Object messageOrSupplier) {\n \t\tif (!expectedType.isInstance(actualValue)) {\n \t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n \t\t\t\t\t: \"Unexpected instance type\";\n"}}, {"oid": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "url": "https://github.com/junit-team/junit5/commit/d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "message": "return actual value cast to expected type; @API as EXPERIMENTAL\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2020-12-31T15:31:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NzY2MQ==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r550767661", "bodyText": "Is it really worth differentiating between exception and \"normal\" instances here? Couldn't we always say \"Unexpected type\"?", "author": "marcphilipp", "createdAt": "2021-01-01T13:15:33Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junit.jupiter.api;\n+\n+import static org.junit.jupiter.api.AssertionUtils.*;\n+\n+import java.util.function.Supplier;\n+\n+import org.opentest4j.AssertionFailedError;\n+\n+/**\n+ * {@code AssertInstanceOf} is a collection of utility methods that support\n+ * asserting that a value is of a expected instance type -\n+ * in other words, if it can be assigned to the expected type.\n+ *\n+ * @since 5.8\n+ */\n+class AssertInstanceOf {\n+\n+\tprivate AssertInstanceOf() {\n+\t\t/* no-op */\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) null);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, String message) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) message);\n+\t}\n+\n+\tstatic <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Supplier<String> messageSupplier) {\n+\t\treturn assertInstanceOf(expectedType, actualValue, (Object) messageSupplier);\n+\t}\n+\n+\tprivate static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Object messageOrSupplier) {\n+\t\tif (!expectedType.isInstance(actualValue)) {\n+\t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n+\t\t\t\t\t: \"Unexpected instance type\";", "originalCommit": "d8a0fbdf817b2261b208e4f0f4df7e230ab54e43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk4ODM1MQ==", "url": "https://github.com/junit-team/junit5/pull/2499#discussion_r550988351", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n          \n          \n            \n            \t\t\t\t\t: \"Unexpected instance type\";\n          \n          \n            \n            \t\t\tString template = \"Unexpected type\";", "author": "marcphilipp", "createdAt": "2021-01-03T10:42:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NzY2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5afe1ed72a7b66c99995b049b9d665838a1cd690", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\nindex 4846b842e4..e411c9a199 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n\n@@ -43,8 +43,7 @@ class AssertInstanceOf {\n \n \tprivate static <T> T assertInstanceOf(Class<T> expectedType, Object actualValue, Object messageOrSupplier) {\n \t\tif (!expectedType.isInstance(actualValue)) {\n-\t\t\tString template = actualValue instanceof Throwable ? \"Unexpected exception type\"\n-\t\t\t\t\t: \"Unexpected instance type\";\n+\t\t\tString template = \"Unexpected type\";\n \t\t\tif (actualValue == null)\n \t\t\t\ttemplate = \"Unexpected null value\";\n \t\t\tString message = buildPrefix(nullSafeGet(messageOrSupplier))\n"}}, {"oid": "5afe1ed72a7b66c99995b049b9d665838a1cd690", "url": "https://github.com/junit-team/junit5/commit/5afe1ed72a7b66c99995b049b9d665838a1cd690", "message": "Update junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertInstanceOf.java\n\nCo-authored-by: Marc Philipp <marc@gradle.com>", "committedDate": "2021-01-03T10:48:48Z", "type": "commit"}, {"oid": "b6e08066d59645f5494b9bb7ada532cce04e6669", "url": "https://github.com/junit-team/junit5/commit/b6e08066d59645f5494b9bb7ada532cce04e6669", "message": "adjust tests to changed message\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2021-01-03T10:52:40Z", "type": "commit"}, {"oid": "21e8b53932e7964abbcaf45bc3e82bf26b94a8ac", "url": "https://github.com/junit-team/junit5/commit/21e8b53932e7964abbcaf45bc3e82bf26b94a8ac", "message": "adds entry to release notes\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2021-01-03T11:10:10Z", "type": "commit"}, {"oid": "3afc55383e2e666d735096ac44a4a866e13e4e72", "url": "https://github.com/junit-team/junit5/commit/3afc55383e2e666d735096ac44a4a866e13e4e72", "message": "moves release note item to JUnit Jupiter\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2021-01-03T12:05:58Z", "type": "commit"}, {"oid": "83be82b7bb24531488f0da82742b1c0bc6e81a22", "url": "https://github.com/junit-team/junit5/commit/83be82b7bb24531488f0da82742b1c0bc6e81a22", "message": "Merge branch 'main' into assert-instance-of", "committedDate": "2021-01-03T20:34:19Z", "type": "commit"}, {"oid": "7fcfe701c7d1d2a1da560b46353932bcf6295cc8", "url": "https://github.com/junit-team/junit5/commit/7fcfe701c7d1d2a1da560b46353932bcf6295cc8", "message": "replaces star-imports\n\nSigned-off-by: Jan Bernitt <jaanbernitt@gmail.com>", "committedDate": "2021-01-05T08:21:30Z", "type": "commit"}]}