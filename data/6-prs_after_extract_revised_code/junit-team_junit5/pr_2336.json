{"pr_number": 2336, "pr_title": "Introduce MethodName orderer to replace deprecated Alphanumeric", "pr_createdAt": "2020-06-22T17:14:34Z", "pr_url": "https://github.com/junit-team/junit5/pull/2336", "timeline": [{"oid": "c54502db7c7088e3f4dac3a76129fb849db92c36", "url": "https://github.com/junit-team/junit5/commit/c54502db7c7088e3f4dac3a76129fb849db92c36", "message": "Remove  @Deprecated anotation from Alphanumeric method orderer\n\nAdding @Deprecated causes the full build to fail as they configure to\nfail on compile warnings. The deprecation is still declared in the @API\nannotation and described in the javadoc.", "committedDate": "2020-06-27T17:08:19Z", "type": "forcePushed"}, {"oid": "0434b4105cf1982922621db0ab8b932f6dff5c4f", "url": "https://github.com/junit-team/junit5/commit/0434b4105cf1982922621db0ab8b932f6dff5c4f", "message": "Introduce MethodName orderer to replace deprecated Alphanumeric\n\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\n\nResolves: #2334", "committedDate": "2020-06-29T07:03:20Z", "type": "commit"}, {"oid": "0434b4105cf1982922621db0ab8b932f6dff5c4f", "url": "https://github.com/junit-team/junit5/commit/0434b4105cf1982922621db0ab8b932f6dff5c4f", "message": "Introduce MethodName orderer to replace deprecated Alphanumeric\n\nWith the introduction of DisplayName orderer in 6fee44d, the name of the\nAlphanumeric orderer becomes ambiguous ie \"Alphanumeric of what?\".\nMethodName is a better name. It is unambiguous, it clearly states what\nit is using for ordering the tests and it's naming is consistent with\nthe new orderer DisplayName.\n\nResolves: #2334", "committedDate": "2020-06-29T07:03:20Z", "type": "forcePushed"}, {"oid": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "url": "https://github.com/junit-team/junit5/commit/78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "message": "Add removal version for MethodOrderer.Alphanumeric", "committedDate": "2020-06-29T16:04:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTE1OQ==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447209159", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@API(status = DEPRECATED, since = \"5.4\")\n          \n          \n            \n            \t@API(status = DEPRECATED, since = \"5.7\")", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:41:41Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.4\")", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5MzUzMQ==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447493531", "bodyText": "I misunderstood the API.since value to describe since when the API existed as is the since in javadoc. While this describes status changes.\nThanks for pointing it out!", "author": "gaganis", "createdAt": "2020-06-30T08:09:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIwOTE1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "71d53fdcd272abc093982b58803cfb3246730d72", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\nindex 38c6f1ba25..6b97ce9796 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n\n@@ -112,13 +112,14 @@ public interface MethodOrderer {\n \t * <p>If two methods have the same name, {@code String} representations of\n \t * their formal parameter lists will be used as a fallback for comparing the\n \t * methods.</p>\n-\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n-\t * removed in 6.0</b></p>\n+\t * <p> <b>This class has been deprecated in favor of\n+\t * {@link MethodOrderer.MethodName} and will be removed in 6.0</b></p>\n \t *\n \t * @since 5.4\n-\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t * @deprecated Deprecated in favor of {@link MethodOrderer.MethodName}.\n+\t * Will be removed in 6.0\n \t */\n-\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@API(status = DEPRECATED, since = \"5.7\")\n \t@Deprecated\n \tclass Alphanumeric extends MethodName {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMDU0Ng==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447210546", "bodyText": "Please use {@link MethodOrderer.MethodName} to point towards the new class.", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:44:08Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71d53fdcd272abc093982b58803cfb3246730d72", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\nindex 38c6f1ba25..6b97ce9796 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n\n@@ -112,13 +112,14 @@ public interface MethodOrderer {\n \t * <p>If two methods have the same name, {@code String} representations of\n \t * their formal parameter lists will be used as a fallback for comparing the\n \t * methods.</p>\n-\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n-\t * removed in 6.0</b></p>\n+\t * <p> <b>This class has been deprecated in favor of\n+\t * {@link MethodOrderer.MethodName} and will be removed in 6.0</b></p>\n \t *\n \t * @since 5.4\n-\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t * @deprecated Deprecated in favor of {@link MethodOrderer.MethodName}.\n+\t * Will be removed in 6.0\n \t */\n-\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@API(status = DEPRECATED, since = \"5.7\")\n \t@Deprecated\n \tclass Alphanumeric extends MethodName {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMjI0OQ==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447212249", "bodyText": "JavaDoc should be wrapped at 80 characters.", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:47:19Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71d53fdcd272abc093982b58803cfb3246730d72", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\nindex 38c6f1ba25..6b97ce9796 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n\n@@ -112,13 +112,14 @@ public interface MethodOrderer {\n \t * <p>If two methods have the same name, {@code String} representations of\n \t * their formal parameter lists will be used as a fallback for comparing the\n \t * methods.</p>\n-\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n-\t * removed in 6.0</b></p>\n+\t * <p> <b>This class has been deprecated in favor of\n+\t * {@link MethodOrderer.MethodName} and will be removed in 6.0</b></p>\n \t *\n \t * @since 5.4\n-\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t * @deprecated Deprecated in favor of {@link MethodOrderer.MethodName}.\n+\t * Will be removed in 6.0\n \t */\n-\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@API(status = DEPRECATED, since = \"5.7\")\n \t@Deprecated\n \tclass Alphanumeric extends MethodName {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMzA1OA==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447213058", "bodyText": "Should we leave this one until we delete the orderer completely? Or remove it right away?", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:48:58Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/TestMethodOrder.java", "diffHunk": "@@ -72,7 +72,7 @@\n \t * The {@link MethodOrderer} to use.\n \t *\n \t * @see MethodOrderer\n-\t * @see MethodOrderer.Alphanumeric", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNjYxOA==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447526618", "bodyText": "I wanted where we mention it to have a comment about the deprecation. In this case with @see section a comment does not render nicely so I opted not to include it.", "author": "gaganis", "createdAt": "2020-06-30T08:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMzA1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDQwNg==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447214406", "bodyText": "CI likes it better indeed \ud83d\ude09", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:51:31Z", "path": "junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/extension/OrderedMethodTests.java", "diffHunk": "@@ -317,6 +340,59 @@ void c() {\n \n \t}\n \n+\t@TestMethodOrder(MethodName.class)\n+\tstatic class MethodNameTestCase extends BaseTestCase {\n+\n+\t\t@BeforeEach\n+\t\tvoid trackInvocations(TestInfo testInfo) {\n+\t\t\tvar method = testInfo.getTestMethod().get();\n+\t\t\tvar signature = String.format(\"%s(%s)\", method.getName(),\n+\t\t\t\tClassUtils.nullSafeToString(method.getParameterTypes()));\n+\n+\t\t\tcallSequence.add(signature);\n+\t\t\tthreadNames.add(Thread.currentThread().getName());\n+\t\t}\n+\n+\t\t@TestFactory\n+\t\tDynamicTest b() {\n+\t\t\treturn dynamicTest(\"dynamic\", () -> {\n+\t\t\t});\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid $() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid ___() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid AAA(TestReporter testReporter) {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid AAA(TestInfo testInfo) {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid ZZ_Top() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid a1() {\n+\t\t}\n+\n+\t\t@Test\n+\t\tvoid a2() {\n+\t\t}\n+\n+\t\t@RepeatedTest(1)\n+\t\tvoid zzz() {\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"deprecation\")", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjU4NA==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447216584", "bodyText": "I'm not sure about this one... Personally I'd prefer to leave it the way it is, to be 100% sure it will not break things for users. (It's probably unlikely but... we never know \ud83e\udd13)\nWhat do you think?", "author": "juliette-derancourt", "createdAt": "2020-06-29T19:55:18Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java", "diffHunk": "@@ -104,15 +105,35 @@\n \t\treturn Optional.of(ExecutionMode.SAME_THREAD);\n \t}\n \n+\t/**\n+\t * {@code MethodOrderer} that sorts methods alphanumerically based on their\n+\t * names using {@link String#compareTo(String)}.\n+\t *\n+\t * <p>If two methods have the same name, {@code String} representations of\n+\t * their formal parameter lists will be used as a fallback for comparing the\n+\t * methods.</p>\n+\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n+\t * removed in 6.0</b></p>\n+\t *\n+\t * @since 5.4\n+\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t */\n+\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@Deprecated\n+\tclass Alphanumeric extends MethodName {", "originalCommit": "78e025e88a6679ac37d8aa56f4bbc0d78b854bda", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUzMDg1NQ==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r447530855", "bodyText": "leave it the way it is,\n\nYou mean to have it with a full implementation ie copy pasted? It didn't feel good to me to leave duplicated code so I thought of an alternative. The easiest option was this.\n@juliette-derancourt Do you have any concrete ideas on how this might break for users?", "author": "gaganis", "createdAt": "2020-06-30T09:06:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjU4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMjc5Ng==", "url": "https://github.com/junit-team/junit5/pull/2336#discussion_r453722796", "bodyText": "I don't \ud83d\ude1c\nLet's go with this then.", "author": "juliette-derancourt", "createdAt": "2020-07-13T15:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjU4NA=="}], "type": "inlineReview", "revised_code": {"commit": "71d53fdcd272abc093982b58803cfb3246730d72", "chunk": "diff --git a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\nindex 38c6f1ba25..6b97ce9796 100644\n--- a/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n+++ b/junit-jupiter-api/src/main/java/org/junit/jupiter/api/MethodOrderer.java\n\n@@ -112,13 +112,14 @@ public interface MethodOrderer {\n \t * <p>If two methods have the same name, {@code String} representations of\n \t * their formal parameter lists will be used as a fallback for comparing the\n \t * methods.</p>\n-\t * <p> <b>This class has been deprecated in favor of {@code MethodOrderer.MethodName} and will be\n-\t * removed in 6.0</b></p>\n+\t * <p> <b>This class has been deprecated in favor of\n+\t * {@link MethodOrderer.MethodName} and will be removed in 6.0</b></p>\n \t *\n \t * @since 5.4\n-\t * @deprecated Deprecated in favor of MethodOrderer.MethodName. Will be removed in 6.0\n+\t * @deprecated Deprecated in favor of {@link MethodOrderer.MethodName}.\n+\t * Will be removed in 6.0\n \t */\n-\t@API(status = DEPRECATED, since = \"5.4\")\n+\t@API(status = DEPRECATED, since = \"5.7\")\n \t@Deprecated\n \tclass Alphanumeric extends MethodName {\n \n"}}, {"oid": "71d53fdcd272abc093982b58803cfb3246730d72", "url": "https://github.com/junit-team/junit5/commit/71d53fdcd272abc093982b58803cfb3246730d72", "message": "Polish", "committedDate": "2020-06-30T08:50:17Z", "type": "commit"}, {"oid": "26cb5f4e69d7ee3f5459396c7425710a737c9792", "url": "https://github.com/junit-team/junit5/commit/26cb5f4e69d7ee3f5459396c7425710a737c9792", "message": "Merge branch 'main' into 2334_rename_alpanumeric_orderer_to_methodname", "committedDate": "2020-07-13T15:07:05Z", "type": "commit"}]}