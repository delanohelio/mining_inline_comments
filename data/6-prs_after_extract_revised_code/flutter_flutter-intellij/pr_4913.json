{"pr_number": 4913, "pr_title": "send the flutter sdk version with the analytics for flutter errors", "pr_createdAt": "2020-09-29T23:05:54Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/4913", "timeline": [{"oid": "708c09d9e7963e8cbca43ed9193ccf69a1ca106d", "url": "https://github.com/flutter/flutter-intellij/commit/708c09d9e7963e8cbca43ed9193ccf69a1ca106d", "message": "send the flutter sdk version with the analytics for flutter errors", "committedDate": "2020-09-29T23:04:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3MDE5NQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4913#discussion_r497170195", "bodyText": "@jayoung-lee - just confirming that you'll be able to query the version in this format", "author": "devoncarew", "createdAt": "2020-09-30T00:15:18Z", "path": "src/io/flutter/analytics/Analytics.java", "diffHunk": "@@ -136,6 +142,14 @@ private void sendPayload(@NotNull String hitType, @NotNull Map<String, String> a\n     args.put(\"aiid\", platformName); // Record the platform name as the application installer ID\n     args.put(\"cd1\", platformVersion); // Record the Open API version as a custom dimension\n \n+    // If the Flutter SDK is provided, send the SDK version in a custom dimension.\n+    if (flutterSdk != null) {\n+      final FlutterSdkVersion flutterVersion = flutterSdk.getVersion();\n+      if (flutterVersion.getVersionText() != null) {\n+        args.put(\"cd2\", flutterVersion.getVersionText());", "originalCommit": "708c09d9e7963e8cbca43ed9193ccf69a1ca106d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIyNTk1OA==", "url": "https://github.com/flutter/flutter-intellij/pull/4913#discussion_r497225958", "bodyText": "Perfect! Thank you.", "author": "jayoung-lee", "createdAt": "2020-09-30T03:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3MDE5NQ=="}], "type": "inlineReview", "revised_code": null}]}