{"pr_number": 5085, "pr_title": "Run devtools panel actions on UI thread", "pr_createdAt": "2020-12-01T20:56:10Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/5085", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODYyNQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534408625", "bodyText": "make sure project is still valid as soon as you get here.", "author": "jacob314", "createdAt": "2020-12-02T18:59:11Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -187,58 +187,62 @@ private boolean isBazel(Project project) {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    final String screen = null;\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      final String screen = null;", "originalCommit": "4e45e08130ac66a9f4ee47c55eafe86efe4db6e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "chunk": "diff --git a/src/io/flutter/devtools/DevToolsManager.java b/src/io/flutter/devtools/DevToolsManager.java\nindex 3e0f9862..29952016 100644\n--- a/src/io/flutter/devtools/DevToolsManager.java\n+++ b/src/io/flutter/devtools/DevToolsManager.java\n\n@@ -187,62 +189,60 @@ public class DevToolsManager {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final String screen = null;\n+    final String screen = null;\n \n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+      return;\n+    }\n+\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n+      }\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+\n+      if (handler != null) {\n+        // start the server\n+        DevToolsInstance.startServer(handler, instance -> {\n+          devToolsInstance = instance;\n+\n           devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-\n-          if (handler != null) {\n-            // start the server\n-            DevToolsInstance.startServer(handler, instance -> {\n-              devToolsInstance = instance;\n-\n-              devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-            }, () -> {\n-              // Listen for closing; null out the devToolsInstance.\n-              devToolsInstance = null;\n-            }, project);\n-          }\n-        }\n+        }, () -> {\n+          // Listen for closing; null out the devToolsInstance.\n+          devToolsInstance = null;\n+        }, project);\n       }\n-    });\n+    }\n   }\n \n   private void openBrowserImpl(FlutterApp app, String uri, String screen) {\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openBrowserAndConnect(uri, screen);\n+      return;\n+    }\n+\n     // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n     // older version of DevTools, so we launch the server using `pub global run` instead.\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openBrowserAndConnect(uri, screen);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openBrowserAndConnect(uri, screen);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n-          devToolsInstance.openBrowserAndConnect(uri, screen);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-          startDevToolsServerAndConnect(handler, uri, screen);\n-        }\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n       }\n-    });\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+      startDevToolsServerAndConnect(handler, uri, screen);\n+    }\n   }\n \n   private CompletableFuture<DevToolsInstance> getDevToolsInstance(FlutterApp app) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODg5OA==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534408898", "bodyText": "make sure project is still valid after waiting.", "author": "jacob314", "createdAt": "2020-12-02T18:59:37Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -187,58 +187,62 @@ private boolean isBazel(Project project) {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    final String screen = null;\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      final String screen = null;\n \n-    if (isBazel(project)) {\n-      try {\n-        getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n-      }\n-      catch (Exception e) {\n-        LOG.info(\"Failed to get existing devToolsInstance\");\n-      }\n-    }\n-    else {\n-      if (devToolsInstance != null) {\n-        devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+      if (isBazel(project)) {\n+        try {\n+          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);", "originalCommit": "4e45e08130ac66a9f4ee47c55eafe86efe4db6e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "chunk": "diff --git a/src/io/flutter/devtools/DevToolsManager.java b/src/io/flutter/devtools/DevToolsManager.java\nindex 3e0f9862..29952016 100644\n--- a/src/io/flutter/devtools/DevToolsManager.java\n+++ b/src/io/flutter/devtools/DevToolsManager.java\n\n@@ -187,62 +189,60 @@ public class DevToolsManager {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final String screen = null;\n+    final String screen = null;\n \n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+      return;\n+    }\n+\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n+      }\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+\n+      if (handler != null) {\n+        // start the server\n+        DevToolsInstance.startServer(handler, instance -> {\n+          devToolsInstance = instance;\n+\n           devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-\n-          if (handler != null) {\n-            // start the server\n-            DevToolsInstance.startServer(handler, instance -> {\n-              devToolsInstance = instance;\n-\n-              devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-            }, () -> {\n-              // Listen for closing; null out the devToolsInstance.\n-              devToolsInstance = null;\n-            }, project);\n-          }\n-        }\n+        }, () -> {\n+          // Listen for closing; null out the devToolsInstance.\n+          devToolsInstance = null;\n+        }, project);\n       }\n-    });\n+    }\n   }\n \n   private void openBrowserImpl(FlutterApp app, String uri, String screen) {\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openBrowserAndConnect(uri, screen);\n+      return;\n+    }\n+\n     // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n     // older version of DevTools, so we launch the server using `pub global run` instead.\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openBrowserAndConnect(uri, screen);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openBrowserAndConnect(uri, screen);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n-          devToolsInstance.openBrowserAndConnect(uri, screen);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-          startDevToolsServerAndConnect(handler, uri, screen);\n-        }\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n       }\n-    });\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+      startDevToolsServerAndConnect(handler, uri, screen);\n+    }\n   }\n \n   private CompletableFuture<DevToolsInstance> getDevToolsInstance(FlutterApp app) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTM2Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534409362", "bodyText": "another time gap. Make sure the project is still valid before we open the panel.", "author": "jacob314", "createdAt": "2020-12-02T19:00:16Z", "path": "src/io/flutter/devtools/DevToolsManager.java", "diffHunk": "@@ -187,58 +187,62 @@ private boolean isBazel(Project project) {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    final String screen = null;\n+    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n+      final String screen = null;\n \n-    if (isBazel(project)) {\n-      try {\n-        getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n-      }\n-      catch (Exception e) {\n-        LOG.info(\"Failed to get existing devToolsInstance\");\n-      }\n-    }\n-    else {\n-      if (devToolsInstance != null) {\n-        devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+      if (isBazel(project)) {\n+        try {\n+          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n+        }\n+        catch (Exception e) {\n+          LOG.info(\"Failed to get existing devToolsInstance\");\n+        }\n       }\n       else {\n-        @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-\n-        if (handler != null) {\n-          // start the server\n-          DevToolsInstance.startServer(handler, instance -> {\n-            devToolsInstance = instance;\n-\n-            devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-          }, () -> {\n-            // Listen for closing; null out the devToolsInstance.\n-            devToolsInstance = null;\n-          }, project);\n+        if (devToolsInstance != null) {\n+          devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+        }\n+        else {\n+          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+\n+          if (handler != null) {\n+            // start the server\n+            DevToolsInstance.startServer(handler, instance -> {\n+              devToolsInstance = instance;\n+\n+              devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);", "originalCommit": "4e45e08130ac66a9f4ee47c55eafe86efe4db6e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "chunk": "diff --git a/src/io/flutter/devtools/DevToolsManager.java b/src/io/flutter/devtools/DevToolsManager.java\nindex 3e0f9862..29952016 100644\n--- a/src/io/flutter/devtools/DevToolsManager.java\n+++ b/src/io/flutter/devtools/DevToolsManager.java\n\n@@ -187,62 +189,60 @@ public class DevToolsManager {\n   }\n \n   public void openBrowserIntoPanel(FlutterApp app, String uri, ContentManager contentManager, String tabName, String pageName) {\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      final String screen = null;\n+    final String screen = null;\n \n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n+      return;\n+    }\n+\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n+      }\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+\n+      if (handler != null) {\n+        // start the server\n+        DevToolsInstance.startServer(handler, instance -> {\n+          devToolsInstance = instance;\n+\n           devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-\n-          if (handler != null) {\n-            // start the server\n-            DevToolsInstance.startServer(handler, instance -> {\n-              devToolsInstance = instance;\n-\n-              devToolsInstance.openPanel(project, uri, contentManager, tabName, pageName);\n-            }, () -> {\n-              // Listen for closing; null out the devToolsInstance.\n-              devToolsInstance = null;\n-            }, project);\n-          }\n-        }\n+        }, () -> {\n+          // Listen for closing; null out the devToolsInstance.\n+          devToolsInstance = null;\n+        }, project);\n       }\n-    });\n+    }\n   }\n \n   private void openBrowserImpl(FlutterApp app, String uri, String screen) {\n+    if (devToolsInstance != null) {\n+      devToolsInstance.openBrowserAndConnect(uri, screen);\n+      return;\n+    }\n+\n     // For internal users, we can connect to the DevTools server started by flutter daemon. For external users, the flutter daemon has an\n     // older version of DevTools, so we launch the server using `pub global run` instead.\n-    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n-      if (isBazel(project)) {\n-        try {\n-          getDevToolsInstance(app).get(15, TimeUnit.SECONDS).openBrowserAndConnect(uri, screen);\n-        }\n-        catch (Exception e) {\n-          LOG.info(\"Failed to get existing devToolsInstance\");\n-        }\n+    if (isBazel(project)) {\n+      try {\n+        devToolsInstance = getDevToolsInstance(app).get(15, TimeUnit.SECONDS);\n+        devToolsInstance.openBrowserAndConnect(uri, screen);\n       }\n-      else {\n-        if (devToolsInstance != null) {\n-          devToolsInstance.openBrowserAndConnect(uri, screen);\n-        }\n-        else {\n-          @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n-          startDevToolsServerAndConnect(handler, uri, screen);\n-        }\n+      catch (Exception e) {\n+        LOG.info(\"Failed to get existing devToolsInstance\");\n       }\n-    });\n+    }\n+    else {\n+      @Nullable final OSProcessHandler handler = getProcessHandlerForPub();\n+      startDevToolsServerAndConnect(handler, uri, screen);\n+    }\n   }\n \n   private CompletableFuture<DevToolsInstance> getDevToolsInstance(FlutterApp app) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMDM1Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534410352", "bodyText": "shouldn't this method instead be asserting that we are on the UI thread? seems on to have it start on some random thread.", "author": "jacob314", "createdAt": "2020-12-02T19:01:47Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -430,24 +430,29 @@ private void presentDevTools(FlutterApp app, InspectorService inspectorService,\n     final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n \n     if (devToolsManager.hasInstalledDevTools()) {\n-      addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n+      AsyncUtils.invokeLater(() -> addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded));", "originalCommit": "4e45e08130ac66a9f4ee47c55eafe86efe4db6e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0MzYzMQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534443631", "bodyText": "Do you mean addBrowserInspectorViewContent should assert that we're on the UI thread? I can add that as well, but I think I have to use invokeLater here since presentDevTools isn't running on the UI thread.", "author": "helin24", "createdAt": "2020-12-02T19:58:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMDM1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "chunk": "diff --git a/src/io/flutter/view/FlutterView.java b/src/io/flutter/view/FlutterView.java\nindex 339a7e65..dd46a95c 100644\n--- a/src/io/flutter/view/FlutterView.java\n+++ b/src/io/flutter/view/FlutterView.java\n\n@@ -434,23 +436,20 @@ public class FlutterView implements PersistentStateComponent<FlutterViewState>,\n     }\n     else {\n       presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n-      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n-      awaitDevToolsInstall(app, inspectorService, toolWindow, isEmbedded, result);\n-    }\n-  }\n \n-  protected void awaitDevToolsInstall(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded, CompletableFuture<Boolean> installResult) {\n-    AsyncUtils.whenCompleteUiThread(installResult, (succeeded, throwable) -> {\n-      if (succeeded) {\n-        addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n-      } else {\n-        // TODO(helin24): Handle with alternative instructions if devtools fails.\n-        presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n-        if (throwable != null) {\n-          LOG.error(throwable);\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      AsyncUtils.whenCompleteUiThread(result, (succeeded, throwable) -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+          if (throwable != null) {\n+            LOG.error(throwable);\n+          }\n         }\n-      }\n-    });\n+      });\n+    }\n   }\n \n   private LabelInput openDevToolsLabel(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxNTAxOQ==", "url": "https://github.com/flutter/flutter-intellij/pull/5085#discussion_r534415019", "bodyText": "watch out! succeeded is a Boolean so it can be null (when the throwable != null).\nThat is why I use the pattern of checking whether the throwable is null first in these callbacks to avoid bugs.\nYou could also use something like\nhttps://commons.apache.org/proper/commons-lang/javadocs/api-2.4/org/apache/commons/lang/BooleanUtils.html#isTrue(java.lang.Boolean)\nor\nif (succeeded != null && succeeded)", "author": "jacob314", "createdAt": "2020-12-02T19:09:32Z", "path": "src/io/flutter/view/FlutterView.java", "diffHunk": "@@ -430,24 +430,29 @@ private void presentDevTools(FlutterApp app, InspectorService inspectorService,\n     final DevToolsManager devToolsManager = DevToolsManager.getInstance(app.getProject());\n \n     if (devToolsManager.hasInstalledDevTools()) {\n-      addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n+      AsyncUtils.invokeLater(() -> addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded));\n     }\n     else {\n       presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n-\n       final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n-      result.thenAccept(succeeded -> {\n-        if (succeeded) {\n-          addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n-        }\n-        else {\n-          // TODO(helin24): Handle with alternative instructions if devtools fails.\n-          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n-        }\n-      });\n+      awaitDevToolsInstall(app, inspectorService, toolWindow, isEmbedded, result);\n     }\n   }\n \n+  protected void awaitDevToolsInstall(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded, CompletableFuture<Boolean> installResult) {\n+    AsyncUtils.whenCompleteUiThread(installResult, (succeeded, throwable) -> {\n+      if (succeeded) {", "originalCommit": "4e45e08130ac66a9f4ee47c55eafe86efe4db6e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "chunk": "diff --git a/src/io/flutter/view/FlutterView.java b/src/io/flutter/view/FlutterView.java\nindex 339a7e65..dd46a95c 100644\n--- a/src/io/flutter/view/FlutterView.java\n+++ b/src/io/flutter/view/FlutterView.java\n\n@@ -434,23 +436,20 @@ public class FlutterView implements PersistentStateComponent<FlutterViewState>,\n     }\n     else {\n       presentLabel(toolWindow, INSTALLING_DEVTOOLS_LABEL);\n-      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n-      awaitDevToolsInstall(app, inspectorService, toolWindow, isEmbedded, result);\n-    }\n-  }\n \n-  protected void awaitDevToolsInstall(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow, boolean isEmbedded, CompletableFuture<Boolean> installResult) {\n-    AsyncUtils.whenCompleteUiThread(installResult, (succeeded, throwable) -> {\n-      if (succeeded) {\n-        addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n-      } else {\n-        // TODO(helin24): Handle with alternative instructions if devtools fails.\n-        presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n-        if (throwable != null) {\n-          LOG.error(throwable);\n+      final CompletableFuture<Boolean> result = devToolsManager.installDevTools();\n+      AsyncUtils.whenCompleteUiThread(result, (succeeded, throwable) -> {\n+        if (succeeded) {\n+          addBrowserInspectorViewContent(app, inspectorService, toolWindow, isEmbedded);\n+        } else {\n+          // TODO(helin24): Handle with alternative instructions if devtools fails.\n+          presentLabel(toolWindow, DEVTOOLS_FAILED_LABEL);\n+          if (throwable != null) {\n+            LOG.error(throwable);\n+          }\n         }\n-      }\n-    });\n+      });\n+    }\n   }\n \n   private LabelInput openDevToolsLabel(FlutterApp app, InspectorService inspectorService, ToolWindow toolWindow) {\n"}}, {"oid": "956c9bbdd9f98de1daec73d7796b067bcd8820c3", "url": "https://github.com/flutter/flutter-intellij/commit/956c9bbdd9f98de1daec73d7796b067bcd8820c3", "message": "Run devtools panel actions on UI thread", "committedDate": "2020-12-08T04:30:26Z", "type": "commit"}, {"oid": "4c2cb0bf8c9c5aa90029d793d25abaf19ebf51e5", "url": "https://github.com/flutter/flutter-intellij/commit/4c2cb0bf8c9c5aa90029d793d25abaf19ebf51e5", "message": "Fix tests", "committedDate": "2020-12-08T04:33:48Z", "type": "commit"}, {"oid": "a67f46fd50e4b92f4e7b985158312d5d7b8e0830", "url": "https://github.com/flutter/flutter-intellij/commit/a67f46fd50e4b92f4e7b985158312d5d7b8e0830", "message": "Check project status and throwable", "committedDate": "2020-12-08T04:34:48Z", "type": "commit"}, {"oid": "a2c7c67f6f6bdc281ed01521cbbb1eaf49f14ca5", "url": "https://github.com/flutter/flutter-intellij/commit/a2c7c67f6f6bdc281ed01521cbbb1eaf49f14ca5", "message": "Assert running on UI thread and run install on background", "committedDate": "2020-12-08T04:34:49Z", "type": "commit"}, {"oid": "c5b3488f92bdc3c2cb7027208854e7085d8dccff", "url": "https://github.com/flutter/flutter-intellij/commit/c5b3488f92bdc3c2cb7027208854e7085d8dccff", "message": "Fix tests", "committedDate": "2020-12-08T04:34:49Z", "type": "commit"}, {"oid": "c5b3488f92bdc3c2cb7027208854e7085d8dccff", "url": "https://github.com/flutter/flutter-intellij/commit/c5b3488f92bdc3c2cb7027208854e7085d8dccff", "message": "Fix tests", "committedDate": "2020-12-08T04:34:49Z", "type": "forcePushed"}, {"oid": "373094575be814bc9a7d15f391de0a99cda224dc", "url": "https://github.com/flutter/flutter-intellij/commit/373094575be814bc9a7d15f391de0a99cda224dc", "message": "Fix merge conflict", "committedDate": "2020-12-08T04:40:29Z", "type": "commit"}]}