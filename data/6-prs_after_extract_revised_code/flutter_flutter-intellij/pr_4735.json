{"pr_number": 4735, "pr_title": "Check for BUILD file for bazel projects only", "pr_createdAt": "2020-08-04T00:09:55Z", "pr_url": "https://github.com/flutter/flutter-intellij/pull/4735", "timeline": [{"oid": "4f1f6ca6153e3d9f9de795613a83b8173b2416b9", "url": "https://github.com/flutter/flutter-intellij/commit/4f1f6ca6153e3d9f9de795613a83b8173b2416b9", "message": "Check for BUILD file for bazel projects only", "committedDate": "2020-08-04T00:06:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r464731248", "bodyText": "checking for a BUILD file could be fragile. Instead ,it would be better to check whether the directory is under the bazel root directory. I think that is the equivalent of what isAppDir is doing externally.", "author": "jacob314", "createdAt": "2020-08-04T00:29:04Z", "path": "src/io/flutter/run/MainFile.java", "diffHunk": "@@ -120,14 +121,17 @@ public boolean hasFlutterImports() {\n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n     for (VirtualFile candidate = file; inProject(candidate, project); candidate = candidate.getParent()) {\n-      if (isAppDir(candidate)) return candidate;\n+      if (isAppDir(candidate, project)) return candidate;\n     }\n     return null;\n   }\n \n-  private static boolean isAppDir(@NotNull VirtualFile dir) {\n+  private static boolean isAppDir(@NotNull VirtualFile dir, @NotNull Project project) {\n     return dir.isDirectory() && (\n-      dir.findChild(\"pubspec.yaml\") != null || dir.findChild(\".packages\") != null);\n+      dir.findChild(\"pubspec.yaml\") != null ||\n+      (WorkspaceCache.getInstance(project).isBazel() && dir.findChild(\"BUILD\") != null) ||", "originalCommit": "4f1f6ca6153e3d9f9de795613a83b8173b2416b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0Mzc1Mg==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r464743752", "bodyText": "That sounds reasonable, but how do we define the bazel root directory? Is it related to what we're doing in Workspace, e.g. findContainingWorkspaceFile or ProjectRootManager.getInstance(p).getContentRoots()?", "author": "helin24", "createdAt": "2020-08-04T01:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc0NjU2Ng==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r464746566", "bodyText": "findContainingWorkspaceFile will give you a breadcrumb to the answer. If you go back up the relative path from that directory to google3/ you will be in the right place.", "author": "jacob314", "createdAt": "2020-08-04T01:28:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc4NjQzMw==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r464786433", "bodyText": "Can this (i.e. asking for the \"type\" of workspace) be part of the flutter_tool interface? We are not able to customize the plugin easily in g3 but we are able to customize the tooling.", "author": "mehmetf", "createdAt": "2020-08-04T04:06:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc4OTk0MQ==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r464789941", "bodyText": "To be clear. We are actually extremely robust on determining whether a project is bazel by checking for the existence of dart/config/intellij-plugins/flutter.json. This bug is a case of code being written that forgets that not all Dart projects have pubspec.yaml or .packages file. A solution would be to audit the code base for all checks for pubspec.yaml and replace them with a helper call that is specialized for bazel workspaces.\nOne advantage of the current system is we don't have to make users configure the flutter sdk directory manually for bazel projects as we are able to determine it automatically. If we relied on specifying a flutter sdk directory we would have a chicken and egg problem as a user would have to have configured flutter before we could ask it whether a particular directory is a bazel or vanilla project.", "author": "jacob314", "createdAt": "2020-08-04T04:20:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzNzk5Mw==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r465137993", "bodyText": "Understood.\n\nAudit the code base for all checks for pubspec.yaml and replace them with a helper call that is specialized for bazel workspaces.\n\nSGTM. I implemented a similar strategy for dartdoc where all \"package\" related operations go through an overridable class called PackageInfo rather than random code doing package processing. This also has the added advantage that what the plugin needs from pubspec.yaml is well defined and testable rather than being scattered all over the code.", "author": "mehmetf", "createdAt": "2020-08-04T15:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4NDc3Ng==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r465284776", "bodyText": "Using a PackageInfo class sounds like a clean solution. Filed #4738 to track cleaning up this tech debt.", "author": "jacob314", "createdAt": "2020-08-04T19:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczMTI0OA=="}], "type": "inlineReview", "revised_code": {"commit": "2fdcf87c481d6a7147519f99984adc078ed08aab", "chunk": "diff --git a/src/io/flutter/run/MainFile.java b/src/io/flutter/run/MainFile.java\nindex 1990935a..7bc499ca 100644\n--- a/src/io/flutter/run/MainFile.java\n+++ b/src/io/flutter/run/MainFile.java\n\n@@ -120,16 +121,22 @@ public class MainFile {\n \n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n+    if (WorkspaceCache.getInstance(project).isBazel()) {\n+      Workspace workspace = WorkspaceCache.getInstance(project).get();\n+      if (workspace != null) {\n+        return workspace.getRoot();\n+      }\n+    }\n+\n     for (VirtualFile candidate = file; inProject(candidate, project); candidate = candidate.getParent()) {\n-      if (isAppDir(candidate, project)) return candidate;\n+      if (isAppDir(candidate)) return candidate;\n     }\n     return null;\n   }\n \n-  private static boolean isAppDir(@NotNull VirtualFile dir, @NotNull Project project) {\n+  private static boolean isAppDir(@NotNull VirtualFile dir) {\n     return dir.isDirectory() && (\n       dir.findChild(\"pubspec.yaml\") != null ||\n-      (WorkspaceCache.getInstance(project).isBazel() && dir.findChild(\"BUILD\") != null) ||\n       dir.findChild(\".packages\") != null\n     );\n   }\n"}}, {"oid": "2fdcf87c481d6a7147519f99984adc078ed08aab", "url": "https://github.com/flutter/flutter-intellij/commit/2fdcf87c481d6a7147519f99984adc078ed08aab", "message": "Use workspace to return root for bazel projects", "committedDate": "2020-08-04T19:16:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NDY4MA==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r465274680", "bodyText": "you should assert workspace != null instead of using an if.\nisBazel() is equivalent to workspace != null.", "author": "jacob314", "createdAt": "2020-08-04T19:21:04Z", "path": "src/io/flutter/run/MainFile.java", "diffHunk": "@@ -120,16 +121,22 @@ public boolean hasFlutterImports() {\n \n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n+    if (WorkspaceCache.getInstance(project).isBazel()) {\n+      Workspace workspace = WorkspaceCache.getInstance(project).get();\n+      if (workspace != null) {", "originalCommit": "2fdcf87c481d6a7147519f99984adc078ed08aab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "65eef55504988da50e0840bfe5197e39f74540b9", "chunk": "diff --git a/src/io/flutter/run/MainFile.java b/src/io/flutter/run/MainFile.java\nindex 7bc499ca..2c40b90b 100644\n--- a/src/io/flutter/run/MainFile.java\n+++ b/src/io/flutter/run/MainFile.java\n\n@@ -122,19 +122,19 @@ public class MainFile {\n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n     if (WorkspaceCache.getInstance(project).isBazel()) {\n-      Workspace workspace = WorkspaceCache.getInstance(project).get();\n-      if (workspace != null) {\n-        return workspace.getRoot();\n-      }\n+      final Workspace workspace = WorkspaceCache.getInstance(project).get();\n+      assert(workspace != null);\n+      return workspace.getRoot();\n     }\n \n     for (VirtualFile candidate = file; inProject(candidate, project); candidate = candidate.getParent()) {\n-      if (isAppDir(candidate)) return candidate;\n+      if (isAppDir(candidate, project)) return candidate;\n     }\n     return null;\n   }\n \n-  private static boolean isAppDir(@NotNull VirtualFile dir) {\n+  private static boolean isAppDir(@NotNull VirtualFile dir, @NotNull Project project) {\n+    assert(!WorkspaceCache.getInstance(project).isBazel());\n     return dir.isDirectory() && (\n       dir.findChild(\"pubspec.yaml\") != null ||\n       dir.findChild(\".packages\") != null\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTI1Nw==", "url": "https://github.com/flutter/flutter-intellij/pull/4735#discussion_r465275257", "bodyText": "comment that this method is only appropriate for non-bazel projects or continue to require passing in the project and asserting. I'd hate for someone else to start using this method in a place where it is triggered for a bazel project.", "author": "jacob314", "createdAt": "2020-08-04T19:22:09Z", "path": "src/io/flutter/run/MainFile.java", "diffHunk": "@@ -120,16 +121,22 @@ public boolean hasFlutterImports() {\n \n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n+    if (WorkspaceCache.getInstance(project).isBazel()) {\n+      Workspace workspace = WorkspaceCache.getInstance(project).get();\n+      if (workspace != null) {\n+        return workspace.getRoot();\n+      }\n+    }\n+\n     for (VirtualFile candidate = file; inProject(candidate, project); candidate = candidate.getParent()) {\n-      if (isAppDir(candidate, project)) return candidate;\n+      if (isAppDir(candidate)) return candidate;\n     }\n     return null;\n   }\n \n-  private static boolean isAppDir(@NotNull VirtualFile dir, @NotNull Project project) {\n+  private static boolean isAppDir(@NotNull VirtualFile dir) {", "originalCommit": "2fdcf87c481d6a7147519f99984adc078ed08aab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "65eef55504988da50e0840bfe5197e39f74540b9", "chunk": "diff --git a/src/io/flutter/run/MainFile.java b/src/io/flutter/run/MainFile.java\nindex 7bc499ca..2c40b90b 100644\n--- a/src/io/flutter/run/MainFile.java\n+++ b/src/io/flutter/run/MainFile.java\n\n@@ -122,19 +122,19 @@ public class MainFile {\n   @Nullable\n   private static VirtualFile findAppDir(@Nullable VirtualFile file, @NotNull Project project) {\n     if (WorkspaceCache.getInstance(project).isBazel()) {\n-      Workspace workspace = WorkspaceCache.getInstance(project).get();\n-      if (workspace != null) {\n-        return workspace.getRoot();\n-      }\n+      final Workspace workspace = WorkspaceCache.getInstance(project).get();\n+      assert(workspace != null);\n+      return workspace.getRoot();\n     }\n \n     for (VirtualFile candidate = file; inProject(candidate, project); candidate = candidate.getParent()) {\n-      if (isAppDir(candidate)) return candidate;\n+      if (isAppDir(candidate, project)) return candidate;\n     }\n     return null;\n   }\n \n-  private static boolean isAppDir(@NotNull VirtualFile dir) {\n+  private static boolean isAppDir(@NotNull VirtualFile dir, @NotNull Project project) {\n+    assert(!WorkspaceCache.getInstance(project).isBazel());\n     return dir.isDirectory() && (\n       dir.findChild(\"pubspec.yaml\") != null ||\n       dir.findChild(\".packages\") != null\n"}}, {"oid": "65eef55504988da50e0840bfe5197e39f74540b9", "url": "https://github.com/flutter/flutter-intellij/commit/65eef55504988da50e0840bfe5197e39f74540b9", "message": "Add assert statements", "committedDate": "2020-08-04T20:28:06Z", "type": "commit"}]}