{"pr_number": 11683, "pr_title": "Add thread-factory for fork-join-pool threads", "pr_createdAt": "2020-06-29T19:46:01Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11683", "timeline": [{"oid": "58a50b502470e15f08ea8463a5fb52ac702cdc3e", "url": "https://github.com/Alluxio/alluxio/commit/58a50b502470e15f08ea8463a5fb52ac702cdc3e", "message": "Add thread-factory for fork-join-pool threads", "committedDate": "2020-06-29T19:45:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjIyOA==", "url": "https://github.com/Alluxio/alluxio/pull/11683#discussion_r447926228", "bodyText": "minor question, do thread ids typically start from 0 or 1?", "author": "gpang", "createdAt": "2020-06-30T19:25:09Z", "path": "core/common/src/main/java/alluxio/concurrent/jsr/ForkJoinPool.java", "diffHunk": "@@ -2495,6 +2496,45 @@ public ForkJoinWorkerThread run() {\n     }\n   }\n \n+  /**\n+   * Default ForkJoinWorkerThreadFactory implementation; creates a new ForkJoinWorkerThread using\n+   * the system class loader as the thread context class loader.\n+   */\n+  public static final class AlluxioForkJoinWorkerThreadFactory\n+          implements ForkJoinWorkerThreadFactory {\n+    private static final AccessControlContext ACC = contextWithPermissions(\n+            // new RuntimePermission(\"setContextClassLoader\"), // java9-concurrent-backport changed\n+            new RuntimePermission(\"getClassLoader\"));\n+    // Thread id counter.\n+    private static final AtomicLong sThreadId = new AtomicLong(0);", "originalCommit": "58a50b502470e15f08ea8463a5fb52ac702cdc3e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MjgwNw==", "url": "https://github.com/Alluxio/alluxio/pull/11683#discussion_r447952807", "bodyText": "That's how guava thread-factory that we use assign indices to threads.", "author": "ggezer", "createdAt": "2020-06-30T20:16:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1MzQwOQ==", "url": "https://github.com/Alluxio/alluxio/pull/11683#discussion_r447953409", "bodyText": "changed the name to better reflect that it's an index.", "author": "ggezer", "createdAt": "2020-06-30T20:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjIyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1Njg5Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11683#discussion_r447956896", "bodyText": "ok, sounds good", "author": "gpang", "createdAt": "2020-06-30T20:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNjIyOA=="}], "type": "inlineReview", "revised_code": {"commit": "3ff0f39431e226b747240dd35b278be959814982", "chunk": "diff --git a/core/common/src/main/java/alluxio/concurrent/jsr/ForkJoinPool.java b/core/common/src/main/java/alluxio/concurrent/jsr/ForkJoinPool.java\nindex 2c783d852f..4e2fffe568 100644\n--- a/core/common/src/main/java/alluxio/concurrent/jsr/ForkJoinPool.java\n+++ b/core/common/src/main/java/alluxio/concurrent/jsr/ForkJoinPool.java\n\n@@ -2505,8 +2505,8 @@ public class ForkJoinPool extends AbstractExecutorService {\n     private static final AccessControlContext ACC = contextWithPermissions(\n             // new RuntimePermission(\"setContextClassLoader\"), // java9-concurrent-backport changed\n             new RuntimePermission(\"getClassLoader\"));\n-    // Thread id counter.\n-    private static final AtomicLong sThreadId = new AtomicLong(0);\n+    // ForkJoinWorkerThread index counter.\n+    private static final AtomicLong sThreadIndex = new AtomicLong(0);\n     // Thread properties.\n     private final String mNameFormat;\n     private final boolean mIsDaemon;\n"}}, {"oid": "3ff0f39431e226b747240dd35b278be959814982", "url": "https://github.com/Alluxio/alluxio/commit/3ff0f39431e226b747240dd35b278be959814982", "message": "name change", "committedDate": "2020-06-30T20:16:57Z", "type": "commit"}]}