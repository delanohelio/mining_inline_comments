{"pr_number": 10940, "pr_title": "Improve client cache metrics", "pr_createdAt": "2020-02-19T01:14:51Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10940", "timeline": [{"oid": "16578735bef2a3335e32cf357773e351a366ab73", "url": "https://github.com/Alluxio/alluxio/commit/16578735bef2a3335e32cf357773e351a366ab73", "message": "Add more metrics to client cache.", "committedDate": "2020-02-19T01:00:58Z", "type": "commit"}, {"oid": "a90b9c077b9e0f0ad4d188e3c9bf679bfb8fc94f", "url": "https://github.com/Alluxio/alluxio/commit/a90b9c077b9e0f0ad4d188e3c9bf679bfb8fc94f", "message": "Improve style.", "committedDate": "2020-02-19T01:13:39Z", "type": "commit"}, {"oid": "a87cf3eaac72bba4729843dab6e00e989f62ef21", "url": "https://github.com/Alluxio/alluxio/commit/a87cf3eaac72bba4729843dab6e00e989f62ef21", "message": "Resolve conflicts.", "committedDate": "2020-02-19T19:09:34Z", "type": "commit"}, {"oid": "700e72f9369ac030802754f94e974600bd9175c7", "url": "https://github.com/Alluxio/alluxio/commit/700e72f9369ac030802754f94e974600bd9175c7", "message": "Do not fail on inconsistent page store.", "committedDate": "2020-02-19T19:12:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0MDM5Ng==", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381540396", "bodyText": "Add @Nullable", "author": "apc999", "createdAt": "2020-02-19T20:58:42Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -268,4 +261,65 @@ public void delete(PageId pageId) throws IOException, PageNotFoundException {\n   public void close() throws Exception {\n     mPageStore.close();\n   }\n+\n+  /**\n+   * Attempts to add a page to the page store. The page lock must be acquired before calling this\n+   * method. The metastore must be updated before calling this method.\n+   *\n+   * @param pageId page id\n+   * @param page page data\n+   * @return true if successful, false otherwise\n+   */\n+  private boolean addPage(PageId pageId, byte[] page) {\n+    try {\n+      mPageStore.put(pageId, page);\n+    } catch (IOException e) {\n+      LOG.error(\"Failed to add page {}: {}\", pageId, e);\n+      return false;\n+    }\n+    mEvictor.updateOnPut(pageId);\n+    Metrics.BYTES_WRITTEN_CACHE.inc(page.length);\n+    return true;\n+  }\n+\n+  /**\n+   * Attempts to delete a page from the page store. The page lock must be acquired before calling\n+   * this method. The metastore must be updated before calling this method.\n+   *\n+   * @param pageId page id\n+   * @param pageInfo page info\n+   * @return true if successful, false otherwise\n+   */\n+  private boolean deletePage(PageId pageId, PageInfo pageInfo) {\n+    try {\n+      mPageStore.delete(pageId, pageInfo.getPageSize());\n+    } catch (IOException | PageNotFoundException e) {\n+      LOG.error(\"Failed to delete page {}: {}\", pageId, e);\n+      return false;\n+    }\n+    mEvictor.updateOnDelete(pageId);\n+    Metrics.BYTES_EVICTED_CACHE.inc(pageInfo.getPageSize());\n+    return true;\n+  }\n+\n+  private ReadableByteChannel getPage(PageId pageId, int offset) {", "originalCommit": "700e72f9369ac030802754f94e974600bd9175c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0OTQxNw==", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381549417", "bodyText": "Updated, thanks.", "author": "calvinjia", "createdAt": "2020-02-19T21:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0MDM5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bffa6d29ac4362686515a3484229b8b02019039a", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\nindex 98890aef72..5c869e495f 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\n\n@@ -243,18 +239,24 @@ public class LocalCacheManager implements CacheManager {\n   }\n \n   @Override\n-  public void delete(PageId pageId) throws IOException, PageNotFoundException {\n+  public boolean delete(PageId pageId) {\n     LOG.debug(\"delete({}) enters\", pageId);\n     ReadWriteLock pageLock = getPageLock(pageId);\n     PageInfo pageInfo;\n     try (LockResource r = new LockResource(pageLock.writeLock())) {\n       try (LockResource r1 = new LockResource(mMetaLock.writeLock())) {\n-        pageInfo = mMetaStore.getPageInfo(pageId);\n-        mMetaStore.removePage(pageId);\n+        try {\n+          pageInfo = mMetaStore.getPageInfo(pageId);\n+          mMetaStore.removePage(pageId);\n+        } catch (PageNotFoundException e) {\n+          LOG.error(\"Failed to delete page {}: {}\", pageId, e);\n+          return false;\n+        }\n       }\n-      deletePage(pageId, pageInfo);\n+      boolean ret = deletePage(pageId, pageInfo);\n+      LOG.debug(\"delete({}) exits, success: {}\", pageId, ret);\n+      return ret;\n     }\n-    LOG.debug(\"delete({}) exits\", pageId);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0MjU1Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381542553", "bodyText": "move this down to be protected by lock as discussed", "author": "apc999", "createdAt": "2020-02-19T21:02:51Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -164,13 +167,13 @@ public boolean put(PageId pageId, byte[] page) throws IOException {\n           victimPageInfo = mMetaStore.getPageInfo(victim);", "originalCommit": "700e72f9369ac030802754f94e974600bd9175c7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bffa6d29ac4362686515a3484229b8b02019039a", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\nindex 98890aef72..5c869e495f 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java\n\n@@ -164,11 +164,7 @@ public class LocalCacheManager implements CacheManager {\n           mMetaStore.addPage(pageId, new PageInfo(pageId, page.length));\n         } else {\n           victim = mEvictor.evict();\n-          victimPageInfo = mMetaStore.getPageInfo(victim);\n         }\n-      } catch (PageNotFoundException e) {\n-        LOG.error(\"Page store is missing page {}: {}\", victim, e);\n-        return false;\n       }\n       if (enoughSpace) {\n         boolean ret = addPage(pageId, page);\n"}}, {"oid": "bffa6d29ac4362686515a3484229b8b02019039a", "url": "https://github.com/Alluxio/alluxio/commit/bffa6d29ac4362686515a3484229b8b02019039a", "message": "Address comments.", "committedDate": "2020-02-19T21:15:36Z", "type": "commit"}, {"oid": "53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58", "url": "https://github.com/Alluxio/alluxio/commit/53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58", "message": "Address comments.", "committedDate": "2020-02-19T21:17:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1MDk5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381550999", "bodyText": "still leave IOE here o signature?", "author": "apc999", "createdAt": "2020-02-19T21:20:38Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java", "diffHunk": "@@ -33,45 +32,41 @@ static CacheManager create(AlluxioConfiguration conf) throws IOException {\n   }\n \n   /**\n-   * Writes a new page from a source channel with best effort. It is possible that this put\n-   * operation returns without page written due to transient behavior not due to failures writing\n-   * to disks.\n+   * Puts a page into the cache manager. This method is best effort. It is possible that this put\n+   * operation returns without page written.\n    *\n    * @param pageId page identifier\n    * @param page page data\n-   * @throws IOException if error happens when writing the page to disk\n-   * @return true on a successful put or false due to transient\n+   * @return true if the put was successful, false otherwise\n    */\n-  boolean put(PageId pageId, byte[] page) throws IOException;\n+  boolean put(PageId pageId, byte[] page);\n \n   /**\n-   * Wraps the page in a channel or null if the queried page is not found in the cache.\n+   * Wraps the page in a channel or null if the queried page is not found in the cache or otherwise\n+   * unable to be read from the cache.\n    *\n    * @param pageId page identifier\n    * @return a channel to read the page\n-   * @throws IOException if error happens when reading the page\n    */\n   @Nullable\n-  ReadableByteChannel get(PageId pageId) throws IOException;\n+  ReadableByteChannel get(PageId pageId);\n \n   /**\n-   * Wraps a part of the page in a channel or null if the queried page is not found\n-   * in the cache.\n+   * Wraps a part of the page in a channel or null if the queried page is not found in the cache or\n+   * otherwise unable to be read from the cache.\n    *\n    * @param pageId page identifier\n    * @param pageOffset offset into the page\n    * @return a channel to read the page\n-   * @throws IOException if error happens when reading the page\n    */\n   @Nullable\n-  ReadableByteChannel get(PageId pageId, int pageOffset)\n-      throws IOException;\n+  ReadableByteChannel get(PageId pageId, int pageOffset);\n \n   /**\n    * Deletes a page from the cache.\n    *\n    * @param pageId page identifier\n-   * @throws PageNotFoundException if page is not found in the store\n+   * @return true if the page is successfully deleted, false otherwise\n    */\n-  void delete(PageId pageId) throws IOException, PageNotFoundException;\n+  boolean delete(PageId pageId) throws IOException;", "originalCommit": "53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwNTAyMg==", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381605022", "bodyText": "Updated, thanks.", "author": "calvinjia", "createdAt": "2020-02-19T23:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1MDk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "41ef5109a805d39c91ea15c09d5a9880785f61e3", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java b/core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java\nindex e1a6340367..92b258ba04 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java\n\n@@ -68,5 +68,5 @@ public interface CacheManager extends AutoCloseable  {\n    * @param pageId page identifier\n    * @return true if the page is successfully deleted, false otherwise\n    */\n-  boolean delete(PageId pageId) throws IOException;\n+  boolean delete(PageId pageId);\n }\n"}}, {"oid": "b9dab782112c95cd40a155c1d68723e738dc25e0", "url": "https://github.com/Alluxio/alluxio/commit/b9dab782112c95cd40a155c1d68723e738dc25e0", "message": "Update unit test.", "committedDate": "2020-02-19T22:56:03Z", "type": "commit"}, {"oid": "41ef5109a805d39c91ea15c09d5a9880785f61e3", "url": "https://github.com/Alluxio/alluxio/commit/41ef5109a805d39c91ea15c09d5a9880785f61e3", "message": "Address comments.", "committedDate": "2020-02-19T23:17:32Z", "type": "commit"}]}