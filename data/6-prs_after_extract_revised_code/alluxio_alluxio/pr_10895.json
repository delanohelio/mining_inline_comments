{"pr_number": 10895, "pr_title": "Pass readonly option on root mount", "pr_createdAt": "2020-02-12T11:54:54Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10895", "timeline": [{"oid": "fafb0f7a73d7e8511e5e15930c1c62b8622629ae", "url": "https://github.com/Alluxio/alluxio/commit/fafb0f7a73d7e8511e5e15930c1c62b8622629ae", "message": "debug root mount issue", "committedDate": "2020-02-11T15:35:30Z", "type": "commit"}, {"oid": "f9ec19bb463d57813a3700d2580adb26f18b4b88", "url": "https://github.com/Alluxio/alluxio/commit/f9ec19bb463d57813a3700d2580adb26f18b4b88", "message": "propagate readonly and shared field", "committedDate": "2020-02-12T11:52:15Z", "type": "commit"}, {"oid": "45f5e1cb1262708ee25611b307c89de914f032e4", "url": "https://github.com/Alluxio/alluxio/commit/45f5e1cb1262708ee25611b307c89de914f032e4", "message": "revert debug logs", "committedDate": "2020-02-12T12:11:20Z", "type": "commit"}, {"oid": "e000d739f49b7473f31f5783cf63eb8224d389b5", "url": "https://github.com/Alluxio/alluxio/commit/e000d739f49b7473f31f5783cf63eb8224d389b5", "message": "checkstyle", "committedDate": "2020-02-12T12:57:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NTYzNg==", "url": "https://github.com/Alluxio/alluxio/pull/10895#discussion_r378285636", "bodyText": "@gpang Does the original implementation look like a bug to you?", "author": "jiacheliu3", "createdAt": "2020-02-12T14:30:29Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -456,13 +456,22 @@ public DefaultFileSystemMaster(BlockMaster blockMaster, CoreMasterContext master\n \n   private static MountInfo getRootMountInfo(MasterUfsManager ufsManager) {\n     try (CloseableResource<UnderFileSystem> resource = ufsManager.getRoot().acquireUfsResource()) {\n+      boolean shared;\n+      if (resource.get().isObjectStorage()) {\n+        shared = ServerConfiguration.getBoolean(\n+                PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n+      } else {\n+        shared = ServerConfiguration.getBoolean(\n+                PropertyKey.MASTER_MOUNT_TABLE_ROOT_SHARED);\n+      }\n+      boolean readonly = ServerConfiguration.getBoolean(\n+              PropertyKey.MASTER_MOUNT_TABLE_ROOT_READONLY);\n       String rootUfsUri = ServerConfiguration.get(PropertyKey.MASTER_MOUNT_TABLE_ROOT_UFS);\n-      boolean shared = resource.get().isObjectStorage()", "originalCommit": "e000d739f49b7473f31f5783cf63eb8224d389b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97d202e23df8624408ef7d5699d85889de4dbd20", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex 563c3da15d..c31a32e9ac 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\n@@ -456,14 +456,8 @@ public final class DefaultFileSystemMaster extends CoreMaster\n \n   private static MountInfo getRootMountInfo(MasterUfsManager ufsManager) {\n     try (CloseableResource<UnderFileSystem> resource = ufsManager.getRoot().acquireUfsResource()) {\n-      boolean shared;\n-      if (resource.get().isObjectStorage()) {\n-        shared = ServerConfiguration.getBoolean(\n-                PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n-      } else {\n-        shared = ServerConfiguration.getBoolean(\n-                PropertyKey.MASTER_MOUNT_TABLE_ROOT_SHARED);\n-      }\n+      boolean shared = resource.get().isObjectStorage()\n+              && ServerConfiguration.getBoolean(PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n       boolean readonly = ServerConfiguration.getBoolean(\n               PropertyKey.MASTER_MOUNT_TABLE_ROOT_READONLY);\n       String rootUfsUri = ServerConfiguration.get(PropertyKey.MASTER_MOUNT_TABLE_ROOT_UFS);\n"}}, {"oid": "97d202e23df8624408ef7d5699d85889de4dbd20", "url": "https://github.com/Alluxio/alluxio/commit/97d202e23df8624408ef7d5699d85889de4dbd20", "message": "revert change on property 'shared'", "committedDate": "2020-02-12T14:35:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwMTg1Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10895#discussion_r378301853", "bodyText": "I tried to update shared to this logic which seems more correct. And subsequently found issue #10896\nThe issue related to shared seems deeper than I thought. I will revert the change regarding shared field and focus on readonly in this PR. I will attempt on the shared field in a separate PR later.", "author": "jiacheliu3", "createdAt": "2020-02-12T14:55:29Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -456,13 +456,22 @@ public DefaultFileSystemMaster(BlockMaster blockMaster, CoreMasterContext master\n \n   private static MountInfo getRootMountInfo(MasterUfsManager ufsManager) {\n     try (CloseableResource<UnderFileSystem> resource = ufsManager.getRoot().acquireUfsResource()) {\n+      boolean shared;\n+      if (resource.get().isObjectStorage()) {\n+        shared = ServerConfiguration.getBoolean(\n+                PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n+      } else {\n+        shared = ServerConfiguration.getBoolean(\n+                PropertyKey.MASTER_MOUNT_TABLE_ROOT_SHARED);\n+      }", "originalCommit": "e000d739f49b7473f31f5783cf63eb8224d389b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ac2730a5ac1f93a82f511b138b7f637f81d141e", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex 563c3da15d..c31a32e9ac 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\n@@ -456,14 +456,8 @@ public final class DefaultFileSystemMaster extends CoreMaster\n \n   private static MountInfo getRootMountInfo(MasterUfsManager ufsManager) {\n     try (CloseableResource<UnderFileSystem> resource = ufsManager.getRoot().acquireUfsResource()) {\n-      boolean shared;\n-      if (resource.get().isObjectStorage()) {\n-        shared = ServerConfiguration.getBoolean(\n-                PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n-      } else {\n-        shared = ServerConfiguration.getBoolean(\n-                PropertyKey.MASTER_MOUNT_TABLE_ROOT_SHARED);\n-      }\n+      boolean shared = resource.get().isObjectStorage()\n+              && ServerConfiguration.getBoolean(PropertyKey.UNDERFS_OBJECT_STORE_MOUNT_SHARED_PUBLICLY);\n       boolean readonly = ServerConfiguration.getBoolean(\n               PropertyKey.MASTER_MOUNT_TABLE_ROOT_READONLY);\n       String rootUfsUri = ServerConfiguration.get(PropertyKey.MASTER_MOUNT_TABLE_ROOT_UFS);\n"}}, {"oid": "3ac2730a5ac1f93a82f511b138b7f637f81d141e", "url": "https://github.com/Alluxio/alluxio/commit/3ac2730a5ac1f93a82f511b138b7f637f81d141e", "message": "added integration test", "committedDate": "2020-02-13T15:07:02Z", "type": "commit"}, {"oid": "7167c829da64efe58f8e497b0f432905c56ef2eb", "url": "https://github.com/Alluxio/alluxio/commit/7167c829da64efe58f8e497b0f432905c56ef2eb", "message": "indentation", "committedDate": "2020-02-13T15:19:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2MDY3NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10895#discussion_r378960675", "bodyText": "Can we make this a ClassRule so we dont have to re-create the cluster for each test? Starting a cluster is costly. (I think this also means the variable will have to be static)", "author": "gpang", "createdAt": "2020-02-13T16:10:05Z", "path": "tests/src/test/java/alluxio/client/fs/FileSystemReadonlyTest.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.fs;\n+\n+import static junit.framework.TestCase.assertTrue;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystem;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.conf.PropertyKey;\n+import alluxio.conf.ServerConfiguration;\n+import alluxio.exception.AccessControlException;\n+import alluxio.master.file.FileSystemMaster;\n+import alluxio.testutils.LocalAlluxioClusterResource;\n+import alluxio.wire.MountPointInfo;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import java.util.Map;\n+\n+/**\n+ * Test behavior of {@link FileSystemMaster}, when the paths are readonly.\n+ */\n+public class FileSystemReadonlyTest {\n+  @Rule", "originalCommit": "7167c829da64efe58f8e497b0f432905c56ef2eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2NjkwNA==", "url": "https://github.com/Alluxio/alluxio/pull/10895#discussion_r378966904", "bodyText": "Done. BTW most integration tests are still using @Rule. We might want to batch-fix that in the future.", "author": "jiacheliu3", "createdAt": "2020-02-13T16:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2MDY3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3NjIwOA==", "url": "https://github.com/Alluxio/alluxio/pull/10895#discussion_r378976208", "bodyText": "Yes, I know. That is why I'm trying to make new usages use classrule. Thanks!", "author": "gpang", "createdAt": "2020-02-13T16:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2MDY3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c21423529060ae3fe5aa2d7a8d74ac186bf2f6f8", "chunk": "diff --git a/tests/src/test/java/alluxio/client/fs/FileSystemReadonlyTest.java b/tests/src/test/java/alluxio/client/fs/FileSystemReadonlyTest.java\nindex d18b96db91..9d695f50a1 100644\n--- a/tests/src/test/java/alluxio/client/fs/FileSystemReadonlyTest.java\n+++ b/tests/src/test/java/alluxio/client/fs/FileSystemReadonlyTest.java\n\n@@ -24,6 +24,7 @@ import alluxio.testutils.LocalAlluxioClusterResource;\n import alluxio.wire.MountPointInfo;\n \n import org.junit.Before;\n+import org.junit.ClassRule;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.ExpectedException;\n"}}, {"oid": "c21423529060ae3fe5aa2d7a8d74ac186bf2f6f8", "url": "https://github.com/Alluxio/alluxio/commit/c21423529060ae3fe5aa2d7a8d74ac186bf2f6f8", "message": "classrule for test", "committedDate": "2020-02-13T16:18:58Z", "type": "commit"}]}