{"pr_number": 12214, "pr_title": "Fix backup coordination and error handling", "pr_createdAt": "2020-10-09T22:22:50Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12214", "timeline": [{"oid": "634555cb6e28fbbf1c3880c08f2039473d4111a5", "url": "https://github.com/Alluxio/alluxio/commit/634555cb6e28fbbf1c3880c08f2039473d4111a5", "message": "Fix backup coordination and error handling", "committedDate": "2020-10-09T20:42:59Z", "type": "commit"}, {"oid": "ebcfdf696026bf42f876991c20e3a447a4096e2e", "url": "https://github.com/Alluxio/alluxio/commit/ebcfdf696026bf42f876991c20e3a447a4096e2e", "message": "Interrupt correctly on pause", "committedDate": "2020-10-09T22:00:35Z", "type": "commit"}, {"oid": "ebcfdf696026bf42f876991c20e3a447a4096e2e", "url": "https://github.com/Alluxio/alluxio/commit/ebcfdf696026bf42f876991c20e3a447a4096e2e", "message": "Interrupt correctly on pause", "committedDate": "2020-10-09T22:00:35Z", "type": "forcePushed"}, {"oid": "856382f1f8d90788f0a9f2ceaeacede80bd05f36", "url": "https://github.com/Alluxio/alluxio/commit/856382f1f8d90788f0a9f2ceaeacede80bd05f36", "message": "Fix checkstyles", "committedDate": "2020-10-09T22:25:55Z", "type": "commit"}, {"oid": "c2d0f27ea7a3cda4f58979a4fea0e1a4654aeecb", "url": "https://github.com/Alluxio/alluxio/commit/c2d0f27ea7a3cda4f58979a4fea0e1a4654aeecb", "message": "Remove unused import", "committedDate": "2020-10-09T22:27:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5OTI0Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502699247", "bodyText": "I am confused as to what this is supposed to be. It is called \"interrupt callback\", but it is set in suspend and used in pause. I don't understand the flow of interaction. Could you explain what this is?", "author": "gpang", "createdAt": "2020-10-09T22:41:03Z", "path": "core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java", "diffHunk": "@@ -98,6 +99,7 @@\n   private volatile long mNextSequenceNumberToRead = 0;\n   private volatile boolean mSnapshotting = false;\n   private volatile boolean mIsLeader = false;\n+  private volatile Runnable mInterruptCallback;", "originalCommit": "c2d0f27ea7a3cda4f58979a4fea0e1a4654aeecb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcwODI3Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502708273", "bodyText": "The callback is set in suspend() by backup worker before taking a backup, and invoked in pause() by the state machine before reloading the states from a snapshot.\nThe interrupt callback is used to inform the caller of the suspend() method that the suspension is interrupted and the metadata states are about to be changed. This is needed because the follower cannot wait for the long running backup process to complete and resume the state machine. It has to reload immediately to avoid further downtime.\nThe overall flow is:\n\nBackup worker suspends state machine before backup, passing in the callback.\nBackup worker writes journal entries to UFS\nRaft state machine downloads a new snapshot from leader.\nRaft state machine transitions to PAUSE state and invokes the callback.\nBackup worker handles the callback and interrupts the backup tasks.\nRaft state machine starts reloading the states.\nRaft state machine finished the reload and transitions back to RUNNING state.", "author": "bf8086", "createdAt": "2020-10-09T23:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxNTg2Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502715862", "bodyText": "I see. Can you add some of this in the comments?\nAlso, is there a scenario where the new snapshots always interrupt backups, thus never taking a backup?", "author": "gpang", "createdAt": "2020-10-09T23:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNjQ2Ng==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502726466", "bodyText": "I added a few comments to explain the workflow.\nThe interruption only happens after a follower installs a snapshot from master due to falling behind the earliest journal entry available. This only occur when a new master joins, or a master has not been in contact with the quorum due to downtime or outage. It will not occur under common situation.", "author": "bf8086", "createdAt": "2020-10-10T01:13:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5OTI0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNjcwMg==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502726702", "bodyText": "ok", "author": "gpang", "createdAt": "2020-10-10T01:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY5OTI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b52a8b7c9964a74cf3ad38ca479027dadadb6078", "chunk": "diff --git a/core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java b/core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java\nindex f890c810c7..437557a3c1 100644\n--- a/core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java\n+++ b/core/server/common/src/main/java/alluxio/master/journal/raft/JournalStateMachine.java\n\n@@ -99,6 +99,21 @@ public class JournalStateMachine extends BaseStateMachine {\n   private volatile long mNextSequenceNumberToRead = 0;\n   private volatile boolean mSnapshotting = false;\n   private volatile boolean mIsLeader = false;\n+\n+  /**\n+   * This callback is used for interrupting someone who suspends the journal applier to work on\n+   * the states. It helps prevent dirty read/write of the states when the journal is reloading.\n+   *\n+   * Here is an example of interrupting backup tasks when the state machine reloads:\n+   *\n+   * - Backup worker suspends state machine before backup, passing in the callback.\n+   * - Backup worker writes journal entries to UFS.\n+   * - Raft state machine downloads a new snapshot from leader.\n+   * - Raft state machine transitions to PAUSE state and invokes the callback.\n+   * - Backup worker handles the callback and interrupts the backup tasks.\n+   * - Raft state machine starts reloading the states.\n+   * - Raft state machine finished the reload and transitions back to RUNNING state.\n+   */\n   private volatile Runnable mInterruptCallback;\n \n   // The start time of the most recent snapshot\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcwMTk4Nw==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502701987", "bodyText": "Does anything look for this file?", "author": "gpang", "createdAt": "2020-10-09T22:46:15Z", "path": "core/server/master/src/main/java/alluxio/master/backup/AbstractBackupRole.java", "diffHunk": "@@ -186,6 +186,8 @@ protected AlluxioURI takeBackup(BackupPRequest request, AtomicLong entryCounter)\n           // Create the backup from master state.\n           mBackupManager.backup(ufsStream, entryCounter);\n         }\n+        // Add a marker file indicating the file is completed.\n+        ufs.create(backupFilePath + \".complete\").close();", "originalCommit": "c2d0f27ea7a3cda4f58979a4fea0e1a4654aeecb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcwNDAxNQ==", "url": "https://github.com/Alluxio/alluxio/pull/12214#discussion_r502704015", "bodyText": "No it is not checked programatically.\nIdeally we should check this when doing a restore, but that can break backward compatibility with backups taken by older versions.", "author": "bf8086", "createdAt": "2020-10-09T22:54:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcwMTk4Nw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "8a04e5b09e3d43f4f21fcb3eba539251bb054976", "url": "https://github.com/Alluxio/alluxio/commit/8a04e5b09e3d43f4f21fcb3eba539251bb054976", "message": "Add more synchronization", "committedDate": "2020-10-09T23:19:51Z", "type": "commit"}, {"oid": "056078a5bc7afbb8586e4727f68a42cb7923e678", "url": "https://github.com/Alluxio/alluxio/commit/056078a5bc7afbb8586e4727f68a42cb7923e678", "message": "Update tests", "committedDate": "2020-10-10T00:30:56Z", "type": "commit"}, {"oid": "b52a8b7c9964a74cf3ad38ca479027dadadb6078", "url": "https://github.com/Alluxio/alluxio/commit/b52a8b7c9964a74cf3ad38ca479027dadadb6078", "message": "Add detailed comments for the interrupt process.", "committedDate": "2020-10-10T00:54:41Z", "type": "commit"}]}