{"pr_number": 10737, "pr_title": "Implement positioned read", "pr_createdAt": "2020-01-14T00:31:05Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10737", "timeline": [{"oid": "9a22f5a8d562cffc584bef37bccc058439ce2c21", "url": "https://github.com/Alluxio/alluxio/commit/9a22f5a8d562cffc584bef37bccc058439ce2c21", "message": "Implement positioned read.", "committedDate": "2020-01-14T00:30:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA==", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366112904", "bodyText": "not clear to me what are we guarding. in addition, do we only provide thread-safety for positioned reads not normal reads?", "author": "apc999", "createdAt": "2020-01-14T01:23:47Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -216,12 +249,14 @@ private FileInStream getExternalFileInStream(long pos) throws IOException {\n    * Reads a page from external storage which contains the position specified. Note that this makes\n    * a copy of the page.\n    *\n+   * This method is synchronized to ensure thread safety for positioned reads.", "originalCommit": "9a22f5a8d562cffc584bef37bccc058439ce2c21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMDE5MA==", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366120190", "bodyText": "Yeah, only for positioned reads (PositionedReadable). The read API (InputStream) is not thread safe.", "author": "calvinjia", "createdAt": "2020-01-14T01:57:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMTI0Mg==", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366121242", "bodyText": "I explained a bit more in the comment.", "author": "calvinjia", "createdAt": "2020-01-14T02:02:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA=="}], "type": "inlineReview", "revised_code": {"commit": "2e289294ab95ec068260ecb6a3a6683f348eb798", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java\nindex 22a0ac2e8a..7eab509af6 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java\n\n@@ -249,7 +249,11 @@ public class LocalCacheFileInStream extends FileInStream {\n    * Reads a page from external storage which contains the position specified. Note that this makes\n    * a copy of the page.\n    *\n-   * This method is synchronized to ensure thread safety for positioned reads.\n+   * This method is synchronized to ensure thread safety for positioned reads. Only a single thread\n+   * should call this method at a time because the underlying state (mExternalFileInStream) is\n+   * shared. Another way would be to use positioned reads instead of seek and read, but that assumes\n+   * the underlying FileInStream implements thread safe positioned reads which are not much more\n+   * expensive than seek and read.\n    *\n    * TODO(calvin): Consider a more efficient API which does not require a data copy.\n    *\n"}}, {"oid": "2e289294ab95ec068260ecb6a3a6683f348eb798", "url": "https://github.com/Alluxio/alluxio/commit/2e289294ab95ec068260ecb6a3a6683f348eb798", "message": "Add comment.", "committedDate": "2020-01-14T02:02:14Z", "type": "commit"}]}