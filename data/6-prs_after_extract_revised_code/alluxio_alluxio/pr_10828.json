{"pr_number": 10828, "pr_title": "Fix gRPC exception handling and improve traces", "pr_createdAt": "2020-02-01T00:21:59Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10828", "timeline": [{"oid": "69ddab35fc89d0bc55082feaa3718d7abfe1dec1", "url": "https://github.com/Alluxio/alluxio/commit/69ddab35fc89d0bc55082feaa3718d7abfe1dec1", "message": "Fix traces", "committedDate": "2020-01-31T22:55:22Z", "type": "commit"}, {"oid": "a6e5df07a11fc8823a5aa5b737d92073f8059bf5", "url": "https://github.com/Alluxio/alluxio/commit/a6e5df07a11fc8823a5aa5b737d92073f8059bf5", "message": "Synchronize sasl handler resource usage", "committedDate": "2020-02-01T03:31:37Z", "type": "commit"}, {"oid": "c661f37e316fee96caef79e3b7212bc564c982bf", "url": "https://github.com/Alluxio/alluxio/commit/c661f37e316fee96caef79e3b7212bc564c982bf", "message": "Avoid throwing CANCELLED if stream is closed", "committedDate": "2020-02-01T03:32:08Z", "type": "commit"}, {"oid": "8f7ec6dd19eea1a7aeea77e40ea8dd4a92f3f68f", "url": "https://github.com/Alluxio/alluxio/commit/8f7ec6dd19eea1a7aeea77e40ea8dd4a92f3f68f", "message": "Catch all exceptions during authentication", "committedDate": "2020-02-01T03:32:26Z", "type": "commit"}, {"oid": "8f7ec6dd19eea1a7aeea77e40ea8dd4a92f3f68f", "url": "https://github.com/Alluxio/alluxio/commit/8f7ec6dd19eea1a7aeea77e40ea8dd4a92f3f68f", "message": "Catch all exceptions during authentication", "committedDate": "2020-02-01T03:32:26Z", "type": "forcePushed"}, {"oid": "a8ab46f08be1bb65dc6987309aa3290c46dc66c8", "url": "https://github.com/Alluxio/alluxio/commit/a8ab46f08be1bb65dc6987309aa3290c46dc66c8", "message": "Pre-generate initiate message", "committedDate": "2020-02-01T04:25:18Z", "type": "commit"}, {"oid": "c9b70c49909a056060d83d99583b0796af70a749", "url": "https://github.com/Alluxio/alluxio/commit/c9b70c49909a056060d83d99583b0796af70a749", "message": "Synchronously shut down gRPC channels", "committedDate": "2020-02-02T03:04:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTk0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374109945", "bodyText": "why is this (and others) \"\"?", "author": "gpang", "createdAt": "2020-02-03T13:47:26Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcChannel.java", "diffHunk": "@@ -127,7 +127,7 @@ public boolean isHealthy() {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n+    return MoreObjects.toStringHelper(\"\")", "originalCommit": "c9b70c49909a056060d83d99583b0796af70a749", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MTUzNQ==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374271535", "bodyText": "When given an instance, the string generated will start with that class's name. (Something like \"GrpcChannel { Host=....... }\". Giving empty header makes the traces much cleaner.", "author": "ggezer", "createdAt": "2020-02-03T18:40:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMzODQzMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374338431", "bodyText": "We want to remove the class name? I would have thought the class name is useful?", "author": "gpang", "createdAt": "2020-02-03T21:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTk0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM1NDM4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374354382", "bodyText": "Yeah, I think it's better for this particular one. For the rest, empty is better.", "author": "ggezer", "createdAt": "2020-02-03T21:35:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcChannel.java b/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\nindex d9a9c331da..047a49d7e1 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\n\n@@ -127,7 +131,7 @@ public final class GrpcChannel extends Channel {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(\"\")\n+    return MoreObjects.toStringHelper(this)\n         .add(\"ChannelKey\", mChannelKey)\n         .add(\"ChannelHealthy\", isHealthy())\n         .add(\"ChannelReleased\", mChannelReleased)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMDM0MA==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374110340", "bodyText": "could you add a comment in the code to explain why this has to be synchronized?", "author": "gpang", "createdAt": "2020-02-03T13:48:12Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcChannel.java", "diffHunk": "@@ -95,7 +95,7 @@ public void intercept(ClientInterceptor interceptor) {\n   /**\n    * Shuts down the channel.\n    */\n-  public void shutdown() {\n+  public synchronized void shutdown() {", "originalCommit": "c9b70c49909a056060d83d99583b0796af70a749", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "225931f233574191dfce39c1a15b05fe2f042b4a", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcChannel.java b/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\nindex d9a9c331da..e5cd9eb945 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcChannel.java\n\n@@ -94,6 +94,10 @@ public final class GrpcChannel extends Channel {\n \n   /**\n    * Shuts down the channel.\n+   *\n+   * Shutdown should be synchronized as it could be called concurrently due to:\n+   *  - Authentication long polling\n+   *  - gRPC messaging stream.\n    */\n   public synchronized void shutdown() {\n     if (mAuthDriver != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMDk3Ng==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374110976", "bodyText": "do we want to keep this non-null if there is an issue with dispose? Basically, should we set it to null in finally or here?", "author": "gpang", "createdAt": "2020-02-03T13:49:28Z", "path": "core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java", "diffHunk": "@@ -85,10 +88,11 @@ public SaslMessage handleMessage(SaslMessage message) throws SaslException {\n   }\n \n   @Override\n-  public void close() {\n+  public synchronized void close() {\n     if (mSaslClient != null) {\n       try {\n         mSaslClient.dispose();\n+        mSaslClient = null;", "originalCommit": "c9b70c49909a056060d83d99583b0796af70a749", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3Mjg3Ng==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374272876", "bodyText": "We don't want to keep it set if dispose fails. So in finally is better.", "author": "ggezer", "createdAt": "2020-02-03T18:43:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMDk3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "225931f233574191dfce39c1a15b05fe2f042b4a", "chunk": "diff --git a/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java b/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\nindex 84b1abbaa2..0d1b14f3fe 100644\n--- a/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\n+++ b/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\n\n@@ -87,14 +90,18 @@ public abstract class AbstractSaslClientHandler implements SaslClientHandler {\n     }\n   }\n \n+  /**\n+   * This is synchronized in order to protect {@link #mSaslClient}.\n+   */\n   @Override\n   public synchronized void close() {\n     if (mSaslClient != null) {\n       try {\n         mSaslClient.dispose();\n-        mSaslClient = null;\n       } catch (SaslException exc) {\n         LOG.debug(\"Failed to close SaslClient.\", exc);\n+      } finally {\n+        mSaslClient = null;\n       }\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMTE1Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374111153", "bodyText": "can you leave a comment as to why this and others have to be synchronized? (seems like it is for mSaslClient?)", "author": "gpang", "createdAt": "2020-02-03T13:49:51Z", "path": "core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java", "diffHunk": "@@ -47,7 +47,10 @@ public AbstractSaslClientHandler(ChannelAuthenticationScheme authScheme) {\n   }\n \n   @Override\n-  public SaslMessage handleMessage(SaslMessage message) throws SaslException {\n+  public synchronized SaslMessage handleMessage(SaslMessage message) throws SaslException {", "originalCommit": "c9b70c49909a056060d83d99583b0796af70a749", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "225931f233574191dfce39c1a15b05fe2f042b4a", "chunk": "diff --git a/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java b/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\nindex 84b1abbaa2..0d1b14f3fe 100644\n--- a/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\n+++ b/core/common/src/main/java/alluxio/security/authentication/AbstractSaslClientHandler.java\n\n@@ -46,6 +46,9 @@ public abstract class AbstractSaslClientHandler implements SaslClientHandler {\n     mAuthScheme = authScheme;\n   }\n \n+  /**\n+   * This is synchronized in order to protect {@link #mSaslClient}.\n+   */\n   @Override\n   public synchronized SaslMessage handleMessage(SaslMessage message) throws SaslException {\n     if (mSaslClient == null) {\n"}}, {"oid": "225931f233574191dfce39c1a15b05fe2f042b4a", "url": "https://github.com/Alluxio/alluxio/commit/225931f233574191dfce39c1a15b05fe2f042b4a", "message": "PR feedback", "committedDate": "2020-02-03T18:46:37Z", "type": "commit"}, {"oid": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "url": "https://github.com/Alluxio/alluxio/commit/d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "message": "Revert class name for GrpcChannel.toString()", "committedDate": "2020-02-03T21:35:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3NzI3MQ==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374377271", "bodyText": "I am confused when this is supposed to be \"\" or this?", "author": "gpang", "createdAt": "2020-02-03T22:27:18Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java", "diffHunk": "@@ -288,7 +288,7 @@ public boolean equals(Object other) {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n+    return MoreObjects.toStringHelper(\"\")", "originalCommit": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2555c4af0d457e139121d7aded6a46c1ebc57b0", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java b/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\nindex f65df5aa57..7c86795052 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\n\n@@ -288,7 +288,7 @@ public class GrpcChannelKey {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(\"\")\n+    return MoreObjects.toStringHelper(this)\n         .add(\"ClientType\", getStringFromOptional(mClientType))\n         .add(\"ServerAddress\", mServerAddress)\n         .add(\"ChannelId\", mChannelId)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3NzMwOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374377309", "bodyText": "I am confused when this is supposed to be \"\" or this?", "author": "gpang", "createdAt": "2020-02-03T22:27:22Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java", "diffHunk": "@@ -305,7 +305,7 @@ public String toString() {\n    * @return short representation of this channel key\n    */\n   public String toStringShort() {\n-    return MoreObjects.toStringHelper(\"Channel\")\n+    return MoreObjects.toStringHelper(\"\")", "originalCommit": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2555c4af0d457e139121d7aded6a46c1ebc57b0", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java b/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\nindex f65df5aa57..7c86795052 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcChannelKey.java\n\n@@ -305,7 +305,7 @@ public class GrpcChannelKey {\n    * @return short representation of this channel key\n    */\n   public String toStringShort() {\n-    return MoreObjects.toStringHelper(\"\")\n+    return MoreObjects.toStringHelper(this)\n         .add(\"ClientType\", getStringFromOptional(mClientType))\n         .add(\"ClientHostname\", mLocalHostName)\n         .add(\"ServerAddress\", mServerAddress)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3NzM5OA==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374377398", "bodyText": "I am confused when this is supposed to be \"\" or this?", "author": "gpang", "createdAt": "2020-02-03T22:27:35Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcServer.java", "diffHunk": "@@ -135,7 +135,7 @@ public boolean isServing() {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n+    return MoreObjects.toStringHelper(\"\")", "originalCommit": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2555c4af0d457e139121d7aded6a46c1ebc57b0", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcServer.java b/core/common/src/main/java/alluxio/grpc/GrpcServer.java\nindex 96d0b67835..5f8d78e72a 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcServer.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcServer.java\n\n@@ -135,8 +135,8 @@ public final class GrpcServer {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(\"\")\n-        .add(\"Server\", mServer)\n+    return MoreObjects.toStringHelper(this)\n+        .add(\"InternalServer\", mServer)\n         .add(\"AuthServerType\", mAuthServer.getClass().getSimpleName())\n         .toString();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM3NzQ0Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10828#discussion_r374377447", "bodyText": "I am confused when this is supposed to be \"\" or this?", "author": "gpang", "createdAt": "2020-02-03T22:27:42Z", "path": "core/common/src/main/java/alluxio/grpc/GrpcServerAddress.java", "diffHunk": "@@ -86,7 +86,7 @@ public boolean equals(Object other) {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n+    return MoreObjects.toStringHelper(\"\")", "originalCommit": "d4468bd7f6406c10a9b3c678a0b5e8d24f78f49b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c2555c4af0d457e139121d7aded6a46c1ebc57b0", "chunk": "diff --git a/core/common/src/main/java/alluxio/grpc/GrpcServerAddress.java b/core/common/src/main/java/alluxio/grpc/GrpcServerAddress.java\nindex 972712b107..4136a83ee2 100644\n--- a/core/common/src/main/java/alluxio/grpc/GrpcServerAddress.java\n+++ b/core/common/src/main/java/alluxio/grpc/GrpcServerAddress.java\n\n@@ -86,7 +86,7 @@ public class GrpcServerAddress {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(\"\")\n+    return MoreObjects.toStringHelper(this)\n         .add(\"HostName\", mHostName)\n         .add(\"SocketAddress\", mSocketAddress)\n         .toString();\n"}}, {"oid": "c2555c4af0d457e139121d7aded6a46c1ebc57b0", "url": "https://github.com/Alluxio/alluxio/commit/c2555c4af0d457e139121d7aded6a46c1ebc57b0", "message": "Include classname for toString() overrides", "committedDate": "2020-02-03T23:03:08Z", "type": "commit"}]}