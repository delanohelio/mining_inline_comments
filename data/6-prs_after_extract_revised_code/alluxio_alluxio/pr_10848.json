{"pr_number": 10848, "pr_title": "Refactor leftover metric keys", "pr_createdAt": "2020-02-05T21:15:24Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10848", "timeline": [{"oid": "7ea96e1b8f37b52ffa0823f3b921ad59527b1dac", "url": "https://github.com/Alluxio/alluxio/commit/7ea96e1b8f37b52ffa0823f3b921ad59527b1dac", "message": "Refactor leftover metric keys", "committedDate": "2020-02-05T21:14:46Z", "type": "commit"}, {"oid": "27ff209417d320cf31fbfaacd62b6cf693746aaa", "url": "https://github.com/Alluxio/alluxio/commit/27ff209417d320cf31fbfaacd62b6cf693746aaa", "message": "Add back MetricsSystem.getClusterMetricName", "committedDate": "2020-02-06T00:01:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDYwMA==", "url": "https://github.com/Alluxio/alluxio/pull/10848#discussion_r376020600", "bodyText": "Aggreagated is spelled like Aggregated. not related to this PR, but feel free to rename the method", "author": "madanadit", "createdAt": "2020-02-06T18:56:51Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -533,12 +533,85 @@ public MetricKey build() {\n           .build();\n \n   // Worker metrics\n+  public static final MetricKey WORKER_ASYNC_CACHE_DUPLICATE_REQUESTS =\n+      new Builder(Name.WORKER_ASYNC_CACHE_DUPLICATE_REQUESTS)\n+          .setDescription(\"Total number of duplicated async cache request received by this worker\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggreagated(false)", "originalCommit": "27ff209417d320cf31fbfaacd62b6cf693746aaa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMTg1Ng==", "url": "https://github.com/Alluxio/alluxio/pull/10848#discussion_r376021856", "bodyText": "how is IsClusterAggregated used? I'm not quiet sure how to set this to true/false", "author": "madanadit", "createdAt": "2020-02-06T18:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDYwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyODkyNg==", "url": "https://github.com/Alluxio/alluxio/pull/10848#discussion_r376028926", "bodyText": "Oh!!! Thanks for finding it!\nThis is used when worker/client report metrics. They only report the isClusterAggregated == true metrics. This is helpful to reduce the metrics client sent and leading master stored.\nNow I only define those metrics that are actually aggregated to cluster metrics in DefaultMetricsMaster with isClusterAggregated == true. In the future, maybe all the metrics that we think can be aggregated at cluster level can set it to true.", "author": "LuQQiu", "createdAt": "2020-02-06T19:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDYwMA=="}], "type": "inlineReview", "revised_code": {"commit": "ebfdc6f59760f90f19d78465d1a10e497e4350ba", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex 014b497006..d6082f2a75 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -537,176 +537,176 @@ public final class MetricKey implements Comparable<MetricKey> {\n       new Builder(Name.WORKER_ASYNC_CACHE_DUPLICATE_REQUESTS)\n           .setDescription(\"Total number of duplicated async cache request received by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_ASYNC_CACHE_FAILED_BLOCKS =\n       new Builder(Name.WORKER_ASYNC_CACHE_FAILED_BLOCKS)\n           .setDescription(\"Total number of async cache failed blocks in this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_ASYNC_CACHE_REMOTE_BLOCKS =\n       new Builder(Name.WORKER_ASYNC_CACHE_REMOTE_BLOCKS)\n           .setDescription(\"Total number of blocks that need to be async cached from remote source\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_ASYNC_CACHE_REQUESTS =\n       new Builder(Name.WORKER_ASYNC_CACHE_REQUESTS)\n           .setDescription(\"Total number of async cache request received by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_ASYNC_CACHE_SUCCEEDED_BLOCKS =\n       new Builder(Name.WORKER_ASYNC_CACHE_SUCCEEDED_BLOCKS)\n           .setDescription(\"Total number of async cache succeeded blocks in this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_ASYNC_CACHE_UFS_BLOCKS =\n       new Builder(Name.WORKER_ASYNC_CACHE_UFS_BLOCKS)\n           .setDescription(\"Total number of blocks that need to be async cached from local source\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_ACCESSED =\n       new Builder(Name.WORKER_BLOCKS_ACCESSED)\n           .setDescription(\"Total number of times any one of the blocks in this worker is accessed.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_CACHED =\n       new Builder(Name.WORKER_BLOCKS_CACHED)\n           .setDescription(\"Total number of blocks used for caching data in an Alluxio worker\")\n           .setMetricType(MetricType.GAUGE)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_CANCELLED =\n       new Builder(Name.WORKER_BLOCKS_CANCELLED)\n           .setDescription(\"Total number of aborted temporary blocks in this worker.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_DELETED =\n       new Builder(Name.WORKER_BLOCKS_DELETED)\n           .setDescription(\"Total number of deleted blocks in this worker by external requests.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_EVICTED =\n       new Builder(Name.WORKER_BLOCKS_EVICTED)\n           .setDescription(\"Total number of evicted blocks in this worker.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_LOST =\n       new Builder(Name.WORKER_BLOCKS_LOST)\n           .setDescription(\"Total number of lost blocks in this worker.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCKS_PROMOTED =\n       new Builder(Name.WORKER_BLOCKS_PROMOTED)\n           .setDescription(\"Total number of times any one of the blocks in this worker \"\n               + \"moved to a new tier.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_ALLUXIO =\n       new Builder(Name.WORKER_BYTES_READ_ALLUXIO)\n           .setDescription(\"Total number of bytes read from Alluxio storage managed by this worker. \"\n               + \"This does not include UFS reads.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_ALLUXIO_THROUGHPUT =\n       new Builder(Name.WORKER_BYTES_READ_ALLUXIO_THROUGHPUT)\n           .setDescription(\"Bytes read throughput from Alluxio storage by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_DOMAIN =\n       new Builder(Name.WORKER_BYTES_READ_DOMAIN)\n           .setDescription(\"Total number of bytes read from Alluxio storage \"\n               + \"via domain socket by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_DOMAIN_THROUGHPUT =\n       new Builder(Name.WORKER_BYTES_READ_DOMAIN_THROUGHPUT)\n           .setDescription(\"Bytes read throughput from Alluxio storage \"\n               + \"via domain socket by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_UFS =\n       new Builder(Name.WORKER_BYTES_READ_UFS)\n           .setDescription(\"Total number of bytes read from a specific Alluxio UFS by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_READ_UFS_THROUGHPUT =\n       new MetricKey.Builder(Name.WORKER_BYTES_READ_UFS_THROUGHPUT)\n           .setDescription(\"Bytes read throughput from all Alluxio UFSes by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_ALLUXIO =\n       new Builder(Name.WORKER_BYTES_WRITTEN_ALLUXIO)\n           .setDescription(\"Total number of bytes written to Alluxio storage by this worker. \"\n               + \"This does not include UFS writes\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_ALLUXIO_THROUGHPUT =\n       new Builder(Name.WORKER_BYTES_WRITTEN_ALLUXIO_THROUGHPUT)\n           .setDescription(\"Bytes write throughput to Alluxio storage by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_DOMAIN =\n       new Builder(Name.WORKER_BYTES_WRITTEN_DOMAIN)\n           .setDescription(\"Total number of bytes written to Alluxio storage \"\n               + \"via domain socket by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_DOMAIN_THROUGHPUT =\n       new Builder(Name.WORKER_BYTES_WRITTEN_DOMAIN_THROUGHPUT)\n           .setDescription(\"Throughput of bytes written to Alluxio storage \"\n               + \"via domain socket by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_UFS =\n       new Builder(Name.WORKER_BYTES_WRITTEN_UFS)\n           .setDescription(\"Total number of bytes written to a specific Alluxio UFS by this worker\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_BYTES_WRITTEN_UFS_THROUGHPUT =\n       new Builder(Name.WORKER_BYTES_WRITTEN_UFS_THROUGHPUT)\n           .setDescription(\"Bytes write throughput to all Alluxio UFSes by this worker\")\n           .setMetricType(MetricType.METER)\n-          .setIsClusterAggreagated(true)\n+          .setIsClusterAggregated(true)\n           .build();\n   public static final MetricKey WORKER_CAPACITY_TOTAL =\n       new Builder(Name.WORKER_CAPACITY_TOTAL)\n           .setDescription(\"Total capacity (in bytes) on all tiers of a specific Alluxio worker\")\n           .setMetricType(MetricType.GAUGE)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_CAPACITY_USED =\n       new Builder(Name.WORKER_CAPACITY_USED)\n           .setDescription(\"Total used bytes on all tiers of a specific Alluxio worker\")\n           .setMetricType(MetricType.GAUGE)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_CAPACITY_FREE =\n       new Builder(Name.WORKER_CAPACITY_FREE)\n           .setDescription(\"Total free bytes on all tiers of a specific Alluxio worker\")\n           .setMetricType(MetricType.GAUGE)\n-          .setIsClusterAggreagated(false)\n+          .setIsClusterAggregated(false)\n           .build();\n \n   // Client metrics\n"}}, {"oid": "ebfdc6f59760f90f19d78465d1a10e497e4350ba", "url": "https://github.com/Alluxio/alluxio/commit/ebfdc6f59760f90f19d78465d1a10e497e4350ba", "message": "Change from Aggreagated to aggregated", "committedDate": "2020-02-06T19:17:38Z", "type": "commit"}]}