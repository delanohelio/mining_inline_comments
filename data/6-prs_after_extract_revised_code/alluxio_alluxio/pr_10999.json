{"pr_number": 10999, "pr_title": "Add metrics doc generator and update metric docs", "pr_createdAt": "2020-02-24T19:21:54Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10999", "timeline": [{"oid": "2fc5cfdf4efadcc5387b6ea6cd6e15c9d5277166", "url": "https://github.com/Alluxio/alluxio/commit/2fc5cfdf4efadcc5387b6ea6cd6e15c9d5277166", "message": "Add metrics doc generator and update metric docs", "committedDate": "2020-02-24T19:19:22Z", "type": "commit"}, {"oid": "ffbfbd3ba963abbaaf853fd2427ab833deaae90a", "url": "https://github.com/Alluxio/alluxio/commit/ffbfbd3ba963abbaaf853fd2427ab833deaae90a", "message": "Fix checkstyle", "committedDate": "2020-02-24T19:31:00Z", "type": "commit"}, {"oid": "c605efc6a09e507bf03c0a20c2b152e356b878d8", "url": "https://github.com/Alluxio/alluxio/commit/c605efc6a09e507bf03c0a20c2b152e356b878d8", "message": "fix bug", "committedDate": "2020-02-24T22:39:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU4MzU5NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10999#discussion_r383583595", "bodyText": "Can we also use the escapeHtml function (see confDocGen for usage) so that it doesn't break any doc pages if someone adds some weird characters to a metric description", "author": "ZacBlanco", "createdAt": "2020-02-24T23:54:05Z", "path": "shell/src/main/java/alluxio/cli/MetricsDocGenerator.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli;\n+\n+import alluxio.annotation.PublicApi;\n+import alluxio.conf.InstancedConfiguration;\n+import alluxio.conf.PropertyKey;\n+import alluxio.metrics.MetricKey;\n+import alluxio.metrics.MetricsSystem;\n+import alluxio.util.ConfigurationUtils;\n+import alluxio.util.io.PathUtils;\n+\n+import com.google.common.base.Objects;\n+import com.google.common.io.Closer;\n+\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.annotation.concurrent.ThreadSafe;\n+\n+/**\n+ * Generates metric key information in docs.\n+ */\n+@ThreadSafe\n+@PublicApi\n+public final class MetricsDocGenerator {\n+  private static final String[] CATEGORIES = new String[]{\"cluster\", \"master\", \"worker\", \"client\"};\n+  private static final String CSV_FILE_DIR = \"docs/_data/table/\";\n+  private static final String YML_FILE_DIR = \"docs/_data/table/en/\";\n+  private static final String CSV_SUFFIX = \"csv\";\n+  private static final String YML_SUFFIX = \"yml\";\n+  private static final String CSV_FILE_HEADER = \"metricName,metricType\";\n+\n+  /**\n+   * Writes the supported files for metrics system doc.\n+   */\n+  private static void writeDocFiles() throws IOException {\n+    // Gets and sorts the metric keys\n+    List<MetricKey> defaultKeys = new ArrayList<>(MetricKey.allMetricKeys());\n+    Collections.sort(defaultKeys);\n+\n+    String homeDir = new InstancedConfiguration(ConfigurationUtils.defaults())\n+        .get(PropertyKey.HOME);\n+\n+    // Map from metric key prefix to metric category\n+    Map<String, String> metricTypeMap = new HashMap<>();\n+    for (MetricsSystem.InstanceType type : MetricsSystem.InstanceType.values()) {\n+      String typeStr = type.toString();\n+      String category = typeStr.toLowerCase();\n+      metricTypeMap.put(typeStr, category);\n+    }\n+\n+    try (Closer closer = Closer.create()) {\n+      Map<FileWriterKey, FileWriter> fileWriterMap = new HashMap<>();\n+      String csvFolder = PathUtils.concatPath(homeDir, CSV_FILE_DIR);\n+      String ymlFolder = PathUtils.concatPath(homeDir, YML_FILE_DIR);\n+      FileWriter csvFileWriter;\n+      FileWriter ymlFileWriter;\n+      for (String category : CATEGORIES) {\n+        csvFileWriter = new FileWriter(PathUtils\n+            .concatPath(csvFolder, category + \"-metrics.\" + CSV_SUFFIX));\n+        csvFileWriter.append(CSV_FILE_HEADER + \"\\n\");\n+        ymlFileWriter = new FileWriter(PathUtils\n+            .concatPath(ymlFolder, category + \"-metrics.\" + YML_SUFFIX));\n+        fileWriterMap.put(new FileWriterKey(category, CSV_SUFFIX), csvFileWriter);\n+        fileWriterMap.put(new FileWriterKey(category, YML_SUFFIX), ymlFileWriter);\n+        //register file writer\n+        closer.register(csvFileWriter);\n+        closer.register(ymlFileWriter);\n+      }\n+\n+      for (MetricKey metricKey : defaultKeys) {\n+        String key = metricKey.toString();\n+\n+        String[] components = key.split(\"\\\\.\");\n+        if (components.length < 2) {\n+          throw new IOException(String\n+              .format(\"The given metric key %s doesn't have two or more components\", key));\n+        }\n+        if (metricTypeMap.containsKey(components[0])) {\n+          csvFileWriter = fileWriterMap.get(\n+              new FileWriterKey(metricTypeMap.get(components[0]), CSV_SUFFIX));\n+          ymlFileWriter = fileWriterMap.get(\n+              new FileWriterKey(metricTypeMap.get(components[0]), YML_SUFFIX));\n+          csvFileWriter.append(String.format(\"%s,%s%n\", key, metricKey.getMetricType().toString()));\n+          ymlFileWriter.append(String.format(\"%s,%s%n\",\n+              key, metricKey.getDescription().replace(\"'\", \"''\")));", "originalCommit": "c605efc6a09e507bf03c0a20c2b152e356b878d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMDc3NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10999#discussion_r383610775", "bodyText": "Add the escapeHtml, thanks!", "author": "LuQQiu", "createdAt": "2020-02-25T01:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU4MzU5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d967c1a2ee5fae5b25be95fb95eec9fc1b526886", "chunk": "diff --git a/shell/src/main/java/alluxio/cli/MetricsDocGenerator.java b/shell/src/main/java/alluxio/cli/docgen/MetricsDocGenerator.java\nsimilarity index 92%\nrename from shell/src/main/java/alluxio/cli/MetricsDocGenerator.java\nrename to shell/src/main/java/alluxio/cli/docgen/MetricsDocGenerator.java\nindex 480b6e88c0..7f72af654f 100644\n--- a/shell/src/main/java/alluxio/cli/MetricsDocGenerator.java\n+++ b/shell/src/main/java/alluxio/cli/docgen/MetricsDocGenerator.java\n\n@@ -9,7 +9,7 @@\n  * See the NOTICE file distributed with this work for information regarding copyright ownership.\n  */\n \n-package alluxio.cli;\n+package alluxio.cli.docgen;\n \n import alluxio.annotation.PublicApi;\n import alluxio.conf.InstancedConfiguration;\n"}}, {"oid": "d967c1a2ee5fae5b25be95fb95eec9fc1b526886", "url": "https://github.com/Alluxio/alluxio/commit/d967c1a2ee5fae5b25be95fb95eec9fc1b526886", "message": "Add a consolidate doc generator for both metrics and conf", "committedDate": "2020-02-25T01:08:19Z", "type": "commit"}, {"oid": "2e6035d531f9bc689367f218241e5f720940d65c", "url": "https://github.com/Alluxio/alluxio/commit/2e6035d531f9bc689367f218241e5f720940d65c", "message": "small doc fix", "committedDate": "2020-02-25T01:11:47Z", "type": "commit"}, {"oid": "7236b37662bafc8bab16994c8d6a90a31275a5f1", "url": "https://github.com/Alluxio/alluxio/commit/7236b37662bafc8bab16994c8d6a90a31275a5f1", "message": "Fix shell command", "committedDate": "2020-02-25T01:36:49Z", "type": "commit"}, {"oid": "20cc4b2b49bfb25bfed7c6be1c334e34a350a087", "url": "https://github.com/Alluxio/alluxio/commit/20cc4b2b49bfb25bfed7c6be1c334e34a350a087", "message": "Consolidate console logs", "committedDate": "2020-02-25T01:42:49Z", "type": "commit"}, {"oid": "061ce639a7f41e8176f1241fd4c39ec81357d458", "url": "https://github.com/Alluxio/alluxio/commit/061ce639a7f41e8176f1241fd4c39ec81357d458", "message": "small doc fix", "committedDate": "2020-02-25T20:54:05Z", "type": "commit"}]}