{"pr_number": 11439, "pr_title": "Improve alluxio client local cache", "pr_createdAt": "2020-05-15T19:20:00Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11439", "timeline": [{"oid": "b286fb86971f487f98a3ae730fbec45cae5e18c4", "url": "https://github.com/Alluxio/alluxio/commit/b286fb86971f487f98a3ae730fbec45cae5e18c4", "message": "Improve alluxio client local cache", "committedDate": "2020-05-15T19:26:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMTg1OA==", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426011858", "bodyText": "Should this catch throwable, and should we log when we catch?", "author": "calvinjia", "createdAt": "2020-05-15T19:43:29Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file.cache;\n+\n+import alluxio.metrics.MetricKey;\n+import alluxio.metrics.MetricsSystem;\n+\n+import com.codahale.metrics.Counter;\n+\n+import java.nio.channels.ReadableByteChannel;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A wrapper class of CacheManager without throwing unchecked exceptions.\n+ */\n+public class NoExceptionCacheManager implements CacheManager {", "originalCommit": "b286fb86971f487f98a3ae730fbec45cae5e18c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NDIyMg==", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426054222", "bodyText": "add log. but IMO  Error should be escalated as these are not something we should recover.", "author": "apc999", "createdAt": "2020-05-15T21:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMTg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "c0b571c12d31b8882818d5a978f023665eadb7f3", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java b/core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java\nindex 396ded7f24..3b626fb208 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java\n\n@@ -15,6 +15,8 @@ import alluxio.metrics.MetricKey;\n import alluxio.metrics.MetricsSystem;\n \n import com.codahale.metrics.Counter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.nio.channels.ReadableByteChannel;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjAxMQ==", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426012011", "bodyText": "Should we catch throwable here?", "author": "calvinjia", "createdAt": "2020-05-15T19:43:48Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -76,8 +76,14 @@ public void put(PageId pageId, byte[] page) throws IOException {\n       Files.createDirectories(parent);\n       Files.createFile(p);\n     }\n-    try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n-      fos.write(page);\n+    try {\n+      // extra try to ensure output stream is closed\n+      try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n+        fos.write(page);\n+      }\n+    } catch (IOException e) {", "originalCommit": "b286fb86971f487f98a3ae730fbec45cae5e18c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1Mzk1OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426053959", "bodyText": "changed to Exception. If Error happens, that's something really bad and we should escalate.", "author": "apc999", "createdAt": "2020-05-15T21:24:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjAxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c0b571c12d31b8882818d5a978f023665eadb7f3", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java b/core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java\nindex ea8d03e484..74cd0ae8de 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java\n\n@@ -81,9 +81,9 @@ public class LocalPageStore implements PageStore {\n       try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n         fos.write(page);\n       }\n-    } catch (IOException e) {\n-      LOG.error(\"Failed to create file {} for page {}\", p, pageId);\n-      Files.delete(p);\n+    } catch (Exception e) {\n+      Files.deleteIfExists(p);\n+      throw new IOException(\"Failed to write file \" + p + \" for page \" + pageId);\n     }\n   }\n \n"}}, {"oid": "c0b571c12d31b8882818d5a978f023665eadb7f3", "url": "https://github.com/Alluxio/alluxio/commit/c0b571c12d31b8882818d5a978f023665eadb7f3", "message": "Improve alluxio client local cache", "committedDate": "2020-05-15T21:29:59Z", "type": "commit"}, {"oid": "c0b571c12d31b8882818d5a978f023665eadb7f3", "url": "https://github.com/Alluxio/alluxio/commit/c0b571c12d31b8882818d5a978f023665eadb7f3", "message": "Improve alluxio client local cache", "committedDate": "2020-05-15T21:29:59Z", "type": "forcePushed"}]}