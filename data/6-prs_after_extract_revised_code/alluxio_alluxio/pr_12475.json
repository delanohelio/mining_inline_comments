{"pr_number": 12475, "pr_title": "Add block lock related metrics and catch throwable", "pr_createdAt": "2020-11-09T15:14:44Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12475", "timeline": [{"oid": "4fc4c59fbd278ed70e5db7170adfd88f140ab454", "url": "https://github.com/Alluxio/alluxio/commit/4fc4c59fbd278ed70e5db7170adfd88f140ab454", "message": "Log some information when tryLock fail", "committedDate": "2020-11-09T14:57:50Z", "type": "commit"}, {"oid": "99a7bda902d7159766f57bc2b66f9b3ec93b7795", "url": "https://github.com/Alluxio/alluxio/commit/99a7bda902d7159766f57bc2b66f9b3ec93b7795", "message": "Fix style", "committedDate": "2020-11-09T15:45:01Z", "type": "commit"}, {"oid": "e0fa2cdeaa61a4138ab7bcc5cbaf75be399c0a19", "url": "https://github.com/Alluxio/alluxio/commit/e0fa2cdeaa61a4138ab7bcc5cbaf75be399c0a19", "message": "Add some metrics to measure the status of AsyncBlockRemover", "committedDate": "2020-11-10T01:54:35Z", "type": "commit"}, {"oid": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "url": "https://github.com/Alluxio/alluxio/commit/94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "message": "Fix style", "committedDate": "2020-11-10T02:20:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0NTUyOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522345529", "bodyText": "For all the locks, by convention, which do we log, lockid or block id?\nBetter to log in the same way", "author": "LuQQiu", "createdAt": "2020-11-12T19:03:44Z", "path": "core/server/worker/src/main/java/alluxio/worker/grpc/ShortCircuitBlockReadHandler.java", "diffHunk": "@@ -140,7 +140,11 @@ public void onCompleted() {\n       @Override\n       public OpenLocalBlockResponse call() throws Exception {\n         if (mLockId != BlockLockManager.INVALID_LOCK_ID) {\n-          mWorker.unlockBlock(mLockId);\n+          try {\n+            mWorker.unlockBlock(mLockId);\n+          } catch (BlockDoesNotExistException e) {\n+            LOG.warn(\"Failed to unlock lock {} with error {}.\", mLockId, e.getMessage());", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTIwMw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r523859203", "bodyText": "I think we can print both lockId and blockId, blockId let us know the affect blocked block and file, lockId make it possible to unlock the bad lock when we have a global maintenance able lock view.", "author": "maobaolong", "createdAt": "2020-11-16T02:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0NTUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c39634bd0af90747c51c0680be56ab19ef1152c", "chunk": "diff --git a/core/server/worker/src/main/java/alluxio/worker/grpc/ShortCircuitBlockReadHandler.java b/core/server/worker/src/main/java/alluxio/worker/grpc/ShortCircuitBlockReadHandler.java\nindex 4c619efb9b..e3f283b570 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/grpc/ShortCircuitBlockReadHandler.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/grpc/ShortCircuitBlockReadHandler.java\n\n@@ -143,7 +145,8 @@ class ShortCircuitBlockReadHandler implements StreamObserver<OpenLocalBlockReque\n           try {\n             mWorker.unlockBlock(mLockId);\n           } catch (BlockDoesNotExistException e) {\n-            LOG.warn(\"Failed to unlock lock {} with error {}.\", mLockId, e.getMessage());\n+            LOG.warn(\"Failed to unlock lock {} of block {} with error {}.\",\n+                mLockId, mRequest.getBlockId(), e.getMessage());\n           }\n           mLockId = BlockLockManager.INVALID_LOCK_ID;\n         } else if (mRequest != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0ODQwOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522348409", "bodyText": "Change to .setIsClusterAggregated(false)?\nOur current way of defining cluster aggregated metrics is:\n\nSet MetricKey with  .setIsClusterAggregated(true) so that this metrics is reported to the leading master\nCreate a MetricKey like CLUSTER_WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT to represent the aggregated cluster metric.\nIn MetricStore.initCounterKeys add the cluster metric and worker metrics pair into the map", "author": "LuQQiu", "createdAt": "2020-11-12T19:07:55Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,30 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)\n+          .setDescription(\"Total number of asyncBlockRemover take block count\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(true)", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjYwMDIxOQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522600219", "bodyText": "OK, Changed to .setIsClusterAggregated(false).", "author": "maobaolong", "createdAt": "2020-11-13T04:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0ODQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4c39634bd0af90747c51c0680be56ab19ef1152c", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex fe4425af28..1c08290951 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -740,27 +740,31 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover take block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover successfully removed block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover block to removed size\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n+          .setDescription(\"The size of blocks to remove from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover removing blocks size\")\n+          .setDescription(\"The size of blocks is removing from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0OTU4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522349585", "bodyText": "no need to log session since we didn't track session correctly after Alluxio 1.5", "author": "LuQQiu", "createdAt": "2020-11-12T19:09:42Z", "path": "core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java", "diffHunk": "@@ -111,7 +111,18 @@ public long lockBlock(long sessionId, long blockId, BlockLockType blockLockType)\n       }\n       lock = blockLock.writeLock();\n     }\n-    lock.lock();\n+    try {\n+      if (!lock.tryLock(1L, TimeUnit.MINUTES)) {\n+        LOG.warn(\"tryLock {} block {} for session {} failed after 1 min, \"", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5ODYyNg==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522598626", "bodyText": "I think we can distinguish where the lock requester come from, If it come from AsyncBlockRemover, the sessionId could be MASTER_COMMAND_SESSION_ID=-4", "author": "maobaolong", "createdAt": "2020-11-13T04:00:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0OTU4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMTQwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r524631405", "bodyText": "Make sense!", "author": "LuQQiu", "createdAt": "2020-11-16T21:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM0OTU4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "aad3ef4dc392032e44d5e617ae4656026cea8908", "chunk": "diff --git a/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java b/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\nindex 1b395dc44c..932bba3996 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\n\n@@ -111,18 +111,7 @@ public final class BlockLockManager {\n       }\n       lock = blockLock.writeLock();\n     }\n-    try {\n-      if (!lock.tryLock(1L, TimeUnit.MINUTES)) {\n-        LOG.warn(\"tryLock {} block {} for session {} failed after 1 min, \"\n-                + \"lock reference count = {}\",\n-            blockLockType, blockId, sessionId, blockLock.getReferenceCount());\n-        lock.lock();\n-      }\n-    } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      lock.lock();\n-    }\n-\n+    lock.lock();\n     try {\n       long lockId = LOCK_ID_GEN.getAndIncrement();\n       try (LockResource r = new LockResource(mSharedMapsLock.writeLock())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1MDcwMw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522350703", "bodyText": "If interrupted, do we still lock?\nIf tryLock failed, do we still lock?\n@apc999 What's your thoughts?", "author": "LuQQiu", "createdAt": "2020-11-12T19:11:08Z", "path": "core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java", "diffHunk": "@@ -111,7 +111,18 @@ public long lockBlock(long sessionId, long blockId, BlockLockType blockLockType)\n       }\n       lock = blockLock.writeLock();\n     }\n-    lock.lock();\n+    try {\n+      if (!lock.tryLock(1L, TimeUnit.MINUTES)) {\n+        LOG.warn(\"tryLock {} block {} for session {} failed after 1 min, \"\n+                + \"lock reference count = {}\",\n+            blockLockType, blockId, sessionId, blockLock.getReferenceCount());\n+        lock.lock();\n+      }\n+    } catch (InterruptedException e) {\n+      Thread.currentThread().interrupt();\n+      lock.lock();", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzNDczNA==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r524634734", "bodyText": "Can you help remove this tryLock changes in this PR for now? Other logics LGTM.\nI have a PR to move all lock.lock() to tryLock() #12507\nbut still need more discussion with @apc999 to see if we want to move to tryLock", "author": "LuQQiu", "createdAt": "2020-11-16T21:52:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1MDcwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyMjc4Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r525022783", "bodyText": "Okay, It's make sense to use tryLock instead wait for lock forever with silence.", "author": "maobaolong", "createdAt": "2020-11-17T09:52:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1MDcwMw=="}], "type": "inlineReview", "revised_code": {"commit": "aad3ef4dc392032e44d5e617ae4656026cea8908", "chunk": "diff --git a/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java b/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\nindex 1b395dc44c..932bba3996 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/block/BlockLockManager.java\n\n@@ -111,18 +111,7 @@ public final class BlockLockManager {\n       }\n       lock = blockLock.writeLock();\n     }\n-    try {\n-      if (!lock.tryLock(1L, TimeUnit.MINUTES)) {\n-        LOG.warn(\"tryLock {} block {} for session {} failed after 1 min, \"\n-                + \"lock reference count = {}\",\n-            blockLockType, blockId, sessionId, blockLock.getReferenceCount());\n-        lock.lock();\n-      }\n-    } catch (InterruptedException e) {\n-      Thread.currentThread().interrupt();\n-      lock.lock();\n-    }\n-\n+    lock.lock();\n     try {\n       long lockId = LOCK_ID_GEN.getAndIncrement();\n       try (LockResource r = new LockResource(mSharedMapsLock.writeLock())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTEwMw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522355103", "bodyText": "Similar to PropertyKey, the MetricKey targets to be viewed by users who may not view Alluxio source codes. Can you help change the MetricKey name and description to be easier to understand?\nSuggestion: WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT -> WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT\nWORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT -> WORKER_BLOCKS_REMOVER_REMOVED_COUNT\nwill be even better if we can track the try remove and removed in the whole worker not only in AsyncRemover if possible.", "author": "LuQQiu", "createdAt": "2020-11-12T19:18:00Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,30 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2OTA4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r523869085", "bodyText": "I've change the property key name and description.\n\nwill be even better if we can track the try remove and removed in the whole worker not only in AsyncRemover if possible.\n\nDo you mind using another metrics to monitor all try remove and removed blocks count in the whole worker?", "author": "maobaolong", "createdAt": "2020-11-16T02:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTEwMw=="}], "type": "inlineReview", "revised_code": {"commit": "4c39634bd0af90747c51c0680be56ab19ef1152c", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex fe4425af28..1c08290951 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -740,27 +740,31 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover take block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover successfully removed block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover block to removed size\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n+          .setDescription(\"The size of blocks to remove from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover removing blocks size\")\n+          .setDescription(\"The size of blocks is removing from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTQ4OA==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522355488", "bodyText": "The total number of blocks tried to be removed from this worker by asynchronous block remover.", "author": "LuQQiu", "createdAt": "2020-11-12T19:18:42Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,30 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)\n+          .setDescription(\"Total number of asyncBlockRemover take block count\")", "originalCommit": "94a812fa41c13c9a7632ee527aaf9ec1b6fdb27c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTY3Ng==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r522355676", "bodyText": "Similar for all other metric key names and descriptions", "author": "LuQQiu", "createdAt": "2020-11-12T19:19:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM1NTQ4OA=="}], "type": "inlineReview", "revised_code": {"commit": "4c39634bd0af90747c51c0680be56ab19ef1152c", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex fe4425af28..1c08290951 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -740,27 +740,31 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_TAKE_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover take block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SUCCESS_COUNT)\n-          .setDescription(\"Total number of asyncBlockRemover successfully removed block count\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n-          .setIsClusterAggregated(true)\n+          .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVED_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover block to removed size\")\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n+          .setDescription(\"The size of blocks to remove from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVING_BLOCKS_SIZE)\n-          .setDescription(\"Total number of asyncBlockRemover removing blocks size\")\n+          .setDescription(\"The size of blocks is removing from this worker \" +\n+              \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n"}}, {"oid": "4c39634bd0af90747c51c0680be56ab19ef1152c", "url": "https://github.com/Alluxio/alluxio/commit/4c39634bd0af90747c51c0680be56ab19ef1152c", "message": "Modify the description and name of metrickey, log lockId and blockId.", "committedDate": "2020-11-16T02:52:16Z", "type": "commit"}, {"oid": "4d6b6b29d9385397d78706e8e538f58416da9d9d", "url": "https://github.com/Alluxio/alluxio/commit/4d6b6b29d9385397d78706e8e538f58416da9d9d", "message": "Fix style", "committedDate": "2020-11-16T03:40:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyOTMwNw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r524629307", "bodyText": "Will it be better to change to WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE", "author": "LuQQiu", "createdAt": "2020-11-16T21:49:06Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,34 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \"\n+              + \"by asynchronous block remover.\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(false)\n+          .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \"\n+              + \"by asynchronous block remover.\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(false)\n+          .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =", "originalCommit": "4d6b6b29d9385397d78706e8e538f58416da9d9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyMzcwNA==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r525023704", "bodyText": "Sure", "author": "maobaolong", "createdAt": "2020-11-17T09:54:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYyOTMwNw=="}], "type": "inlineReview", "revised_code": {"commit": "aad3ef4dc392032e44d5e617ae4656026cea8908", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex bf278725d3..2110f0bf31 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -749,14 +749,14 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n-          .setDescription(\"The total number of blocks was removed from this worker \"\n+          .setDescription(\"The total number of blocks removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n-          .setDescription(\"The size of blocks to remove from this worker \"\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE)\n+          .setDescription(\"The size of blocks to be removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMDI4NA==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r524630284", "bodyText": "The total number of blocks removed", "author": "LuQQiu", "createdAt": "2020-11-16T21:49:41Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,34 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \"\n+              + \"by asynchronous block remover.\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(false)\n+          .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \"", "originalCommit": "4d6b6b29d9385397d78706e8e538f58416da9d9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNDkxMA==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r525024910", "bodyText": "Done", "author": "maobaolong", "createdAt": "2020-11-17T09:55:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMDI4NA=="}], "type": "inlineReview", "revised_code": {"commit": "aad3ef4dc392032e44d5e617ae4656026cea8908", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex bf278725d3..2110f0bf31 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -749,14 +749,14 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n-          .setDescription(\"The total number of blocks was removed from this worker \"\n+          .setDescription(\"The total number of blocks removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n-          .setDescription(\"The size of blocks to remove from this worker \"\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE)\n+          .setDescription(\"The size of blocks to be removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMDY1MQ==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r524630651", "bodyText": "to be removed", "author": "LuQQiu", "createdAt": "2020-11-16T21:49:53Z", "path": "core/common/src/main/java/alluxio/metrics/MetricKey.java", "diffHunk": "@@ -740,6 +740,34 @@ public MetricKey build() {\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n           .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_COUNT)\n+          .setDescription(\"The total number of blocks tried to be removed from this worker \"\n+              + \"by asynchronous block remover.\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(false)\n+          .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n+          .setDescription(\"The total number of blocks was removed from this worker \"\n+              + \"by asynchronous block remover.\")\n+          .setMetricType(MetricType.COUNTER)\n+          .setIsClusterAggregated(false)\n+          .build();\n+  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n+          .setDescription(\"The size of blocks to remove from this worker \"", "originalCommit": "4d6b6b29d9385397d78706e8e538f58416da9d9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAyNDI0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12475#discussion_r525024243", "bodyText": "Done", "author": "maobaolong", "createdAt": "2020-11-17T09:55:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzMDY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "aad3ef4dc392032e44d5e617ae4656026cea8908", "chunk": "diff --git a/core/common/src/main/java/alluxio/metrics/MetricKey.java b/core/common/src/main/java/alluxio/metrics/MetricKey.java\nindex bf278725d3..2110f0bf31 100644\n--- a/core/common/src/main/java/alluxio/metrics/MetricKey.java\n+++ b/core/common/src/main/java/alluxio/metrics/MetricKey.java\n\n@@ -749,14 +749,14 @@ public final class MetricKey implements Comparable<MetricKey> {\n           .build();\n   public static final MetricKey WORKER_BLOCK_REMOVER_REMOVED_COUNT =\n       new Builder(Name.WORKER_BLOCK_REMOVER_REMOVED_COUNT)\n-          .setDescription(\"The total number of blocks was removed from this worker \"\n+          .setDescription(\"The total number of blocks removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.COUNTER)\n           .setIsClusterAggregated(false)\n           .build();\n-  public static final MetricKey WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE =\n-      new Builder(Name.WORKER_BLOCK_REMOVER_BLOCKS_TO_REMOVE_SIZE)\n-          .setDescription(\"The size of blocks to remove from this worker \"\n+  public static final MetricKey WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE =\n+      new Builder(Name.WORKER_BLOCK_REMOVER_TRY_REMOVE_BLOCKS_SIZE)\n+          .setDescription(\"The size of blocks to be removed from this worker \"\n               + \"by asynchronous block remover.\")\n           .setMetricType(MetricType.GAUGE)\n           .setIsClusterAggregated(false)\n"}}, {"oid": "aad3ef4dc392032e44d5e617ae4656026cea8908", "url": "https://github.com/Alluxio/alluxio/commit/aad3ef4dc392032e44d5e617ae4656026cea8908", "message": "Fix metrics name and description to make it easy to understand", "committedDate": "2020-11-17T09:57:00Z", "type": "commit"}]}