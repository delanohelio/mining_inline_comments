{"pr_number": 12449, "pr_title": "Log slow remote reads and writes", "pr_createdAt": "2020-11-02T21:46:20Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12449", "timeline": [{"oid": "2537b59c2194a24f69e1be4eb27892ab1e4dafa2", "url": "https://github.com/Alluxio/alluxio/commit/2537b59c2194a24f69e1be4eb27892ab1e4dafa2", "message": "Log slow remote reads and writes", "committedDate": "2020-11-02T21:45:37Z", "type": "commit"}, {"oid": "368314d8494ee12e84a97b4874729e9df5296189", "url": "https://github.com/Alluxio/alluxio/commit/368314d8494ee12e84a97b4874729e9df5296189", "message": "Fix style", "committedDate": "2020-11-02T22:32:19Z", "type": "commit"}, {"oid": "f6cd18ec2663295a308db0126ee29fd7c876cb84", "url": "https://github.com/Alluxio/alluxio/commit/f6cd18ec2663295a308db0126ee29fd7c876cb84", "message": "Fix naming", "committedDate": "2020-11-02T23:25:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzkzMw==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516387933", "bodyText": "Is there any value in making this configurable?", "author": "calvinjia", "createdAt": "2020-11-03T01:48:08Z", "path": "core/server/worker/src/main/java/alluxio/worker/grpc/AbstractWriteHandler.java", "diffHunk": "@@ -59,6 +61,8 @@\n @NotThreadSafe\n abstract class AbstractWriteHandler<T extends WriteRequestContext<?>> {\n   private static final Logger LOG = LoggerFactory.getLogger(AbstractWriteHandler.class);\n+  private static final Logger SLOW_WRITE_LOG = new SamplingLogger(LOG, 5 * Constants.MINUTE_MS);\n+  private static final long SLOW_WRITE_MS = 10 * Constants.SECOND_MS;", "originalCommit": "f6cd18ec2663295a308db0126ee29fd7c876cb84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4NjMxNQ==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516886315", "bodyText": "Yeah, I was torn about this. My concern was that there could be too many logging thresholds to configure, which could be confusing.\nOn the other hand, the hardcoded threshold may not be correct or reasonable.\nI guess we could combine the read and write threshold into something like \"worker.remote.read.slow.io.threshold\"? That could handle both the read and write case?\nWhat do you think?", "author": "gpang", "createdAt": "2020-11-03T18:53:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk1OTQxMA==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516959410", "bodyText": "I added a config parameter.", "author": "gpang", "createdAt": "2020-11-03T21:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5NDYxOA==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516994618", "bodyText": "Yeah, I think one threshold param would be sufficient.", "author": "calvinjia", "createdAt": "2020-11-03T22:33:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4NzkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "f1ab7889ef807f269f7fa8f2c0729d933cb9da43", "chunk": "diff --git a/core/server/worker/src/main/java/alluxio/worker/grpc/AbstractWriteHandler.java b/core/server/worker/src/main/java/alluxio/worker/grpc/AbstractWriteHandler.java\nindex 243730cbc9..5328d27fe4 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/grpc/AbstractWriteHandler.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/grpc/AbstractWriteHandler.java\n\n@@ -62,7 +62,8 @@ import javax.annotation.concurrent.NotThreadSafe;\n abstract class AbstractWriteHandler<T extends WriteRequestContext<?>> {\n   private static final Logger LOG = LoggerFactory.getLogger(AbstractWriteHandler.class);\n   private static final Logger SLOW_WRITE_LOG = new SamplingLogger(LOG, 5 * Constants.MINUTE_MS);\n-  private static final long SLOW_WRITE_MS = 10 * Constants.SECOND_MS;\n+  private static final long SLOW_WRITE_MS =\n+      ServerConfiguration.getMs(PropertyKey.WORKER_REMOTE_IO_SLOW_THRESHOLD);\n \n   /** The observer for sending response messages. */\n   private final StreamObserver<WriteResponse> mResponseObserver;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4ODkwMg==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516388902", "bodyText": "For the sampling logger, is it possible to retain a count of how many were skipped due to sampling?", "author": "calvinjia", "createdAt": "2020-11-03T01:51:36Z", "path": "core/server/worker/src/main/java/alluxio/worker/grpc/BlockReadHandler.java", "diffHunk": "@@ -58,6 +60,8 @@\n   private static final Logger LOG = LoggerFactory.getLogger(BlockReadHandler.class);\n   private static final long UFS_BLOCK_OPEN_TIMEOUT_MS =\n       ServerConfiguration.getMs(PropertyKey.WORKER_UFS_BLOCK_OPEN_TIMEOUT_MS);\n+  private static final Logger SLOW_BUFFER_LOG = new SamplingLogger(LOG, 5 * Constants.MINUTE_MS);", "originalCommit": "f6cd18ec2663295a308db0126ee29fd7c876cb84", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MDM5MQ==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516880391", "bodyText": "It would be possible, but I think that functionality should go into a separate PR.", "author": "gpang", "createdAt": "2020-11-03T18:42:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4ODkwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5NDc1Mg==", "url": "https://github.com/Alluxio/alluxio/pull/12449#discussion_r516994752", "bodyText": "Makes sense", "author": "calvinjia", "createdAt": "2020-11-03T22:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4ODkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "f1ab7889ef807f269f7fa8f2c0729d933cb9da43", "chunk": "diff --git a/core/server/worker/src/main/java/alluxio/worker/grpc/BlockReadHandler.java b/core/server/worker/src/main/java/alluxio/worker/grpc/BlockReadHandler.java\nindex 66179698cf..88036e8f2d 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/grpc/BlockReadHandler.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/grpc/BlockReadHandler.java\n\n@@ -61,7 +61,8 @@ public final class BlockReadHandler extends AbstractReadHandler<BlockReadRequest\n   private static final long UFS_BLOCK_OPEN_TIMEOUT_MS =\n       ServerConfiguration.getMs(PropertyKey.WORKER_UFS_BLOCK_OPEN_TIMEOUT_MS);\n   private static final Logger SLOW_BUFFER_LOG = new SamplingLogger(LOG, 5 * Constants.MINUTE_MS);\n-  private static final long SLOW_BUFFER_MS = 10 * Constants.SECOND_MS;\n+  private static final long SLOW_BUFFER_MS =\n+      ServerConfiguration.getMs(PropertyKey.WORKER_REMOTE_IO_SLOW_THRESHOLD);\n \n   private final StorageTierAssoc mStorageTierAssoc = new WorkerStorageTierAssoc();\n   /** The Block Worker. */\n"}}, {"oid": "f1ab7889ef807f269f7fa8f2c0729d933cb9da43", "url": "https://github.com/Alluxio/alluxio/commit/f1ab7889ef807f269f7fa8f2c0729d933cb9da43", "message": "Create a configuration slow threshold", "committedDate": "2020-11-03T21:14:12Z", "type": "commit"}, {"oid": "77e69025fe01662d068d8901fce8ff4fbf24d4d5", "url": "https://github.com/Alluxio/alluxio/commit/77e69025fe01662d068d8901fce8ff4fbf24d4d5", "message": "Merge remote-tracking branch 'upstream/master' into dee-logging", "committedDate": "2020-11-03T22:00:48Z", "type": "commit"}, {"oid": "bd2d261afb883e8a1ef286518d6504bbeee09795", "url": "https://github.com/Alluxio/alluxio/commit/bd2d261afb883e8a1ef286518d6504bbeee09795", "message": "Fix compile", "committedDate": "2020-11-03T22:05:19Z", "type": "commit"}]}