{"pr_number": 11598, "pr_title": "Fix bug in meta cache in MetadataCachingBaseFileSystem", "pr_createdAt": "2020-06-19T02:56:49Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11598", "timeline": [{"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2", "url": "https://github.com/Alluxio/alluxio/commit/89943dfe465e250060d2288d9f34f7c724e4bac2", "message": "fix bug in meta cache in MetadataCachingBaseFileSystem", "committedDate": "2020-06-19T02:50:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTA0OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039049", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or simply CachedItem::new?", "author": "ZacBlanco", "createdAt": "2020-06-24T16:58:49Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -128,18 +124,14 @@ public final class MetadataCache {\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n     try {\n-      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n       item.setDirStatuses(statuses);\n       for (URIStatus status : statuses) {\n         put(status.getPath(), status);\n       }\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n+                e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTQ3OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039479", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or better yet simply CachedItem::new?", "author": "ZacBlanco", "createdAt": "2020-06-24T16:59:33Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -108,15 +109,10 @@ public final class MetadataCache {\n    */\n   public void put(String path, URIStatus status) {\n     try {\n-      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());\n       item.setStatus(status);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + path, e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTY3NA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039674", "bodyText": "can you undo the changes to this indentation?", "author": "ZacBlanco", "createdAt": "2020-06-24T16:59:51Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -77,9 +76,9 @@ public URIStatus getStatus() {\n    */\n   public MetadataCache(int maxSize, long expirationTimeMs) {\n     mCache = CacheBuilder.newBuilder()\n-        .maximumSize(maxSize)\n-        .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n-        .build();\n+            .maximumSize(maxSize)\n+            .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n+            .build();", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -76,9 +77,9 @@ public final class MetadataCache {\n    */\n   public MetadataCache(int maxSize, long expirationTimeMs) {\n     mCache = CacheBuilder.newBuilder()\n-            .maximumSize(maxSize)\n-            .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n-            .build();\n+        .maximumSize(maxSize)\n+        .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n+        .build();\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTQ3Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445041477", "bodyText": "We should be logging any exceptions here instead of calling printStackTrace\nExample:\nat the top of the class\nprivate static final Logger LOG = LoggerFactory.getLogger(MetadataCache.class);\nthen in here and the other try/catch\nLogUtils.warnWithException(LOG, \"Failed to cache metadata\", e)", "author": "ZacBlanco", "createdAt": "2020-06-24T17:02:43Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -128,18 +124,14 @@ public final class MetadataCache {\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n     try {\n-      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n       item.setDirStatuses(statuses);\n       for (URIStatus status : statuses) {\n         put(status.getPath(), status);\n       }\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n+                e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042290", "bodyText": "same comments about logging and catching exceptions here.", "author": "ZacBlanco", "createdAt": "2020-06-24T17:04:02Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMTUwMQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452601501", "bodyText": "Sure. It should be ExecutionException and log the error info.", "author": "QianxiZhang", "createdAt": "2020-07-10T03:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA=="}], "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -108,15 +109,10 @@ public final class MetadataCache {\n    */\n   public void put(String path, URIStatus status) {\n     try {\n-      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());\n       item.setStatus(status);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + path, e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0Mjg0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042843", "bodyText": "Generally, it's not a good practice to catch Exception - we should really only catch exceptions that we know can be thrown. Is there a list of exceptions you know could be thrown here?", "author": "ZacBlanco", "createdAt": "2020-06-24T17:05:05Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -128,18 +124,14 @@ public final class MetadataCache {\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n     try {\n-      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n       item.setDirStatuses(statuses);\n       for (URIStatus status : statuses) {\n         put(status.getPath(), status);\n       }\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n+                e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTc4OA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446455788", "bodyText": "good to be explicit on which Exception we are catching here?", "author": "apc999", "createdAt": "2020-06-26T23:58:06Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -108,15 +109,10 @@ public final class MetadataCache {\n    */\n   public void put(String path, URIStatus status) {\n     try {\n-      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n-        @Override\n-        public CachedItem call() throws Exception {\n-          return new CachedItem();\n-        }\n-      });\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());\n       item.setStatus(status);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + path, e);\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456405", "bodyText": "Puts the status into cache. or the style checker will fail and complain", "author": "apc999", "createdAt": "2020-06-27T00:01:57Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -50,7 +51,7 @@ public final class MetadataCache {\n     }\n \n     /**\n-     *  put the status into cache\n+     *  Puts the status into cache\n      *\n      *  @param status the metadata of the path\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQzMg==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456432", "bodyText": "ditto \ud83d\udc46", "author": "apc999", "createdAt": "2020-06-27T00:02:08Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache\n+     *\n+     *  @param status the metadata of the path\n+     */\n+    public void setStatus(URIStatus status) {\n+      mStatus = status;\n+    }\n+\n+    /**\n+     *  put the directory status into cache", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c4858d8adb417d29dc7bd996b05ee45847889050", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex d71b537908..e6815fcb47 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -50,7 +51,7 @@ public final class MetadataCache {\n     }\n \n     /**\n-     *  put the status into cache\n+     *  Puts the status into cache\n      *\n      *  @param status the metadata of the path\n      */\n"}}, {"oid": "c4858d8adb417d29dc7bd996b05ee45847889050", "url": "https://github.com/Alluxio/alluxio/commit/c4858d8adb417d29dc7bd996b05ee45847889050", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:13:15Z", "type": "forcePushed"}, {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "url": "https://github.com/Alluxio/alluxio/commit/a670c004f7a4cd96d9307feb08dd8c53496e6e55", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:14:51Z", "type": "commit"}, {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "url": "https://github.com/Alluxio/alluxio/commit/a670c004f7a4cd96d9307feb08dd8c53496e6e55", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:14:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MDg2MQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452940861", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());", "author": "ZacBlanco", "createdAt": "2020-07-10T16:15:13Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex 8e2d8252d8..24f05e0685 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -127,7 +127,7 @@ public final class MetadataCache {\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n     try {\n-      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n+      CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());\n       item.setDirStatuses(statuses);\n       for (URIStatus status : statuses) {\n         put(status.getPath(), status);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTk5NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452941995", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(path, ()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(path, () -> new CachedItem());", "author": "ZacBlanco", "createdAt": "2020-07-10T16:17:24Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +103,20 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a274dc39dabfe2f172d4855809257e8d82b8cd25", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex 8e2d8252d8..a2cd1eb79e 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -112,7 +112,7 @@ public final class MetadataCache {\n    */\n   public void put(String path, URIStatus status) {\n     try {\n-      CachedItem item = mCache.get(path, ()-> new CachedItem());\n+      CachedItem item = mCache.get(path, () -> new CachedItem());\n       item.setStatus(status);\n     } catch (ExecutionException e) {\n         LOG.error(\"Failed to put meta into client cache for \" + path, e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MjQ2Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452942463", "bodyText": "Can we slightly alter this exception message so we can differentiate it from the one above?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n          \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for dir \" + dir.getPath(),", "author": "ZacBlanco", "createdAt": "2020-07-10T16:18:17Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\nindex 8e2d8252d8..24f05e0685 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\n@@ -127,7 +127,7 @@ public final class MetadataCache {\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n     try {\n-      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n+      CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());\n       item.setDirStatuses(statuses);\n       for (URIStatus status : statuses) {\n         put(status.getPath(), status);\n"}}, {"oid": "a274dc39dabfe2f172d4855809257e8d82b8cd25", "url": "https://github.com/Alluxio/alluxio/commit/a274dc39dabfe2f172d4855809257e8d82b8cd25", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:34:48Z", "type": "commit"}, {"oid": "f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "url": "https://github.com/Alluxio/alluxio/commit/f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:34:58Z", "type": "commit"}, {"oid": "d59c5a67a1a8057a3e2c2818c1c13312961bbef6", "url": "https://github.com/Alluxio/alluxio/commit/d59c5a67a1a8057a3e2c2818c1c13312961bbef6", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:35:16Z", "type": "commit"}, {"oid": "3ae27519f923073d8ddb0f484313c4e863bd2b46", "url": "https://github.com/Alluxio/alluxio/commit/3ae27519f923073d8ddb0f484313c4e863bd2b46", "message": "Fix indentation", "committedDate": "2020-07-10T22:42:46Z", "type": "commit"}, {"oid": "f0c9d2ad55158c1589c3dde27b60a16bd31fdd29", "url": "https://github.com/Alluxio/alluxio/commit/f0c9d2ad55158c1589c3dde27b60a16bd31fdd29", "message": "Use warn instead of error as this is best effort", "committedDate": "2020-07-10T22:51:10Z", "type": "commit"}, {"oid": "b129a01bcc6b4738bf16644b633a78dd3af05f8f", "url": "https://github.com/Alluxio/alluxio/commit/b129a01bcc6b4738bf16644b633a78dd3af05f8f", "message": "Update MetadataCache.java", "committedDate": "2020-07-11T00:51:35Z", "type": "commit"}, {"oid": "45be5f24b53f9ab77c0cb6bf677bc239ca811e88", "url": "https://github.com/Alluxio/alluxio/commit/45be5f24b53f9ab77c0cb6bf677bc239ca811e88", "message": "Update MetadataCache.java", "committedDate": "2020-07-11T01:20:30Z", "type": "commit"}, {"oid": "6fe914e313fdf7dc21a05c62d901c704be5c5c49", "url": "https://github.com/Alluxio/alluxio/commit/6fe914e313fdf7dc21a05c62d901c704be5c5c49", "message": "add unit test for MetadataCache", "committedDate": "2020-07-16T03:51:21Z", "type": "commit"}]}