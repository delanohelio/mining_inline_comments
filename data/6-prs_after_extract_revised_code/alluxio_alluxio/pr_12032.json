{"pr_number": 12032, "pr_title": "Pass options to DelegatingFileSystem#{mount,setAcl}", "pr_createdAt": "2020-08-26T02:30:26Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12032", "timeline": [{"oid": "d1a0b61a79c1abcba7f07aeafe48f7b45a570e3b", "url": "https://github.com/Alluxio/alluxio/commit/d1a0b61a79c1abcba7f07aeafe48f7b45a570e3b", "message": "The parameter options is lost in the DelegatingFileSystem#{mount,setAcl}.", "committedDate": "2020-08-26T02:29:43Z", "type": "commit"}, {"oid": "cbc361446347e11501554d148f1792a962a088a1", "url": "https://github.com/Alluxio/alluxio/commit/cbc361446347e11501554d148f1792a962a088a1", "message": "review  commits", "committedDate": "2020-08-26T07:08:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5MzQ1NA==", "url": "https://github.com/Alluxio/alluxio/pull/12032#discussion_r477593454", "bodyText": "This file should be updated with the correct indenting. (2 spaces instead of 4 spaces)", "author": "gpang", "createdAt": "2020-08-26T21:14:49Z", "path": "core/client/fs/src/test/java/alluxio/client/file/DelegatingFileSystemTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file;\n+\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.atLeastOnce;\n+import static org.mockito.Mockito.mock;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.grpc.FileSystemMasterCommonPOptions;\n+import alluxio.grpc.MountPOptions;\n+import alluxio.grpc.SetAclAction;\n+import alluxio.grpc.SetAclPOptions;\n+import alluxio.security.authorization.AclEntry;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Tests {@link DelegatingFileSystem}.\n+ */\n+public class DelegatingFileSystemTest {\n+    private FileSystem mMockFileSystem;", "originalCommit": "cbc361446347e11501554d148f1792a962a088a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b59675d677c64bf7a80ad5ce1c3c1317b3b907a", "chunk": "diff --git a/core/client/fs/src/test/java/alluxio/client/file/DelegatingFileSystemTest.java b/core/client/fs/src/test/java/alluxio/client/file/DelegatingFileSystemTest.java\nindex ae4a8a3baa..1645096668 100644\n--- a/core/client/fs/src/test/java/alluxio/client/file/DelegatingFileSystemTest.java\n+++ b/core/client/fs/src/test/java/alluxio/client/file/DelegatingFileSystemTest.java\n\n@@ -33,40 +33,40 @@ import java.util.List;\n  * Tests {@link DelegatingFileSystem}.\n  */\n public class DelegatingFileSystemTest {\n-    private FileSystem mMockFileSystem;\n+  private FileSystem mMockFileSystem;\n \n-    @Before\n-    public void before() throws Exception {\n-        mMockFileSystem = mock(FileSystem.class);\n-    }\n+  @Before\n+  public void before() throws Exception {\n+    mMockFileSystem = mock(FileSystem.class);\n+  }\n \n-    @Test\n-    public void mount() throws Exception {\n-        FileSystem fileSystem = new DelegatingFileSystem(mMockFileSystem);\n-        AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n-        AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n-        MountPOptions mountOptions = MountPOptions\n-                .newBuilder()\n-                .setReadOnly(false)\n-                .setShared(false)\n-                .build();\n-        fileSystem.mount(alluxioPath, ufsPath, mountOptions);\n-        Mockito.verify(mMockFileSystem, atLeastOnce())\n-                .mount(eq(alluxioPath), eq(ufsPath), eq(mountOptions));\n-    }\n+  @Test\n+  public void mount() throws Exception {\n+    FileSystem fileSystem = new DelegatingFileSystem(mMockFileSystem);\n+    AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n+    AlluxioURI ufsPath = new AlluxioURI(\"/u\");\n+    MountPOptions mountOptions = MountPOptions\n+        .newBuilder()\n+        .setReadOnly(false)\n+        .setShared(false)\n+        .build();\n+    fileSystem.mount(alluxioPath, ufsPath, mountOptions);\n+    Mockito.verify(mMockFileSystem, atLeastOnce())\n+        .mount(eq(alluxioPath), eq(ufsPath), eq(mountOptions));\n+  }\n \n-    @Test\n-    public void setAcl() throws Exception {\n-        FileSystem fileSystem = new DelegatingFileSystem(mMockFileSystem);\n-        AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n-        List<AclEntry> entries = Arrays.asList(AclEntry.fromCliString(\"user:nameduser:rwx\"));\n-        SetAclPOptions setAclPOptions = SetAclPOptions.newBuilder()\n-                .setCommonOptions(FileSystemMasterCommonPOptions.newBuilder().setTtl(5L).build())\n-                .setRecursive(true)\n-                .build();\n+  @Test\n+  public void setAcl() throws Exception {\n+    FileSystem fileSystem = new DelegatingFileSystem(mMockFileSystem);\n+    AlluxioURI alluxioPath = new AlluxioURI(\"/t\");\n+    List<AclEntry> entries = Arrays.asList(AclEntry.fromCliString(\"user:nameduser:rwx\"));\n+    SetAclPOptions setAclPOptions = SetAclPOptions.newBuilder()\n+        .setCommonOptions(FileSystemMasterCommonPOptions.newBuilder().setTtl(5L).build())\n+        .setRecursive(true)\n+        .build();\n \n-        fileSystem.setAcl(alluxioPath, SetAclAction.MODIFY, entries, setAclPOptions);\n-        Mockito.verify(mMockFileSystem, atLeastOnce())\n-                .setAcl(eq(alluxioPath), eq(SetAclAction.MODIFY), eq(entries), eq(setAclPOptions));\n-    }\n+    fileSystem.setAcl(alluxioPath, SetAclAction.MODIFY, entries, setAclPOptions);\n+    Mockito.verify(mMockFileSystem, atLeastOnce())\n+        .setAcl(eq(alluxioPath), eq(SetAclAction.MODIFY), eq(entries), eq(setAclPOptions));\n+  }\n }\n"}}, {"oid": "6b59675d677c64bf7a80ad5ce1c3c1317b3b907a", "url": "https://github.com/Alluxio/alluxio/commit/6b59675d677c64bf7a80ad5ce1c3c1317b3b907a", "message": "fix code style", "committedDate": "2020-08-27T01:03:22Z", "type": "commit"}]}