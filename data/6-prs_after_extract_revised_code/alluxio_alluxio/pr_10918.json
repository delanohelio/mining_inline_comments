{"pr_number": 10918, "pr_title": "Improve collectInfo command", "pr_createdAt": "2020-02-14T17:35:08Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10918", "timeline": [{"oid": "7087081dc89ebbc7691de72ddba1a8ba480edf7c", "url": "https://github.com/Alluxio/alluxio/commit/7087081dc89ebbc7691de72ddba1a8ba480edf7c", "message": "misc improvements to collectInfo command", "committedDate": "2020-02-14T17:08:43Z", "type": "commit"}, {"oid": "4b8e42516aaadec26aac224a4b651a884500a6c2", "url": "https://github.com/Alluxio/alluxio/commit/4b8e42516aaadec26aac224a4b651a884500a6c2", "message": "metrics catch all exceptions", "committedDate": "2020-02-14T17:31:39Z", "type": "commit"}, {"oid": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155", "url": "https://github.com/Alluxio/alluxio/commit/c41c42834b916d6cf34d79bcbfdb31bcc39a8155", "message": "ps", "committedDate": "2020-02-14T17:36:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTQwMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709401", "bodyText": "Why is this two lines?", "author": "ns1123", "createdAt": "2020-02-15T01:56:59Z", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java", "diffHunk": "@@ -120,12 +128,15 @@ public String getDescription() {\n \n   /**\n    * Probes Alluxio metrics json sink.\n+   * If the HTTP request fails, return the error content\n+   * instead of throwing an exception.\n    *\n    * @param url URL that serves Alluxio metrics\n    * @return HTTP response in JSON string\n    */\n   public String getMetricsJson(String url) throws IOException {\n-    String responseJson = HttpUtils.get(url, COLLECT_METRICS_TIMEOUT);\n+    String responseJson;", "originalCommit": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687", "chunk": "diff --git a/shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java b/shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java\nindex 8d56770163..242129bc76 100644\n--- a/shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java\n+++ b/shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java\n\n@@ -135,8 +135,7 @@ public class CollectMetricsCommand extends AbstractCollectInfoCommand {\n    * @return HTTP response in JSON string\n    */\n   public String getMetricsJson(String url) throws IOException {\n-    String responseJson;\n-    responseJson = HttpUtils.get(url, COLLECT_METRICS_TIMEOUT);\n+    String responseJson = HttpUtils.get(url, COLLECT_METRICS_TIMEOUT);\n     return String.format(\"Url: %s%nResponse: %s\", url, responseJson);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTU3Mg==", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709572", "bodyText": "checkstyle?", "author": "ns1123", "createdAt": "2020-02-15T01:59:53Z", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);\n     registerCommand(\"Spark ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep spark'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep spark\"}), null);\n     registerCommand(\"Yarn ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep yarn'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep yarn\"}), null);\n     registerCommand(\"Hdfs ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep hdfs'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep hdfs\"}), null);\n     registerCommand(\"Presto ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep presto'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep presto\"}), null);\n     registerCommand(\"env\",\n             new ShellCommand(new String[]{\"env\"}), null);\n     registerCommand(\"top\", new ShellCommand(new String[]{\"atop\", \"-b\", \"-n\", \"1\"}),\n             new ShellCommand(new String[]{\"top\", \"-b\", \"-n\", \"1\"}));\n     registerCommand(\"mount\", new ShellCommand(new String[]{\"mount\"}), null);\n     registerCommand(\"df\", new ShellCommand(new String[]{\"df\", \"-H\"}), null);\n-    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit -Ha\"}), null);\n+    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit\", \"-Ha\"}), null);\n     registerCommand(\"uname\", new ShellCommand(new String[]{\"uname\", \"-a\"}), null);\n     registerCommand(\"hostname\", new ShellCommand(new String[]{\"hostname\"}), null);\n     registerCommand(\"host ip\", new ShellCommand(new String[]{\"hostname\", \"-i\"}), null);\n     registerCommand(\"host fqdn\", new ShellCommand(new String[]{\"hostname\", \"-f\"}), null);\n     registerCommand(\"list Alluxio home\",\n-            new ShellCommand(new String[]{String.format(\"ls -al -R %s\",\n+            new ShellCommand(new String[]{String.format(\"ls\", \"-al -R %s\",\n                     mFsContext.getClusterConf().get(PropertyKey.HOME))}), null);\n-    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig $(hostname -i)\"}), null);\n+    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig\", \"$(hostname -i)\"}), null);\n     registerCommand(\"nslookup\", new ShellCommand(new String[]{\"nslookup\", \"$(hostname -i)\"}), null);\n-    // TODO(jiacheng): does this stop?\n-    registerCommand(\"dstat\", new ShellCommand(new String[]{\"dstat\", \"-cdgilmnprsty\"}), null);\n+    registerCommand(\"dstat\", new ShellCommand(\n+            new String[]{\"dstat\", \"-cdgilmnprsty\", \"1\", \"5\"}), null);", "originalCommit": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTc3NA==", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709774", "bodyText": "I had to break into 2 lines due to checkstyle.\nFYI the extra 1 and 5 means each stat row is the stat in 1s, and in total 5 rows.", "author": "jiacheliu3", "createdAt": "2020-02-15T02:03:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTU3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687", "url": "https://github.com/Alluxio/alluxio/commit/b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687", "message": "resolve comment", "committedDate": "2020-02-15T02:04:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODI3MQ==", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r382288271", "bodyText": "what's the logic for this split?", "author": "ns1123", "createdAt": "2020-02-20T22:14:54Z", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);", "originalCommit": "b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NzUxMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r382477511", "bodyText": "Doing this just because bash -c seems to use the next string slice to look for. the executable. It doesn't seem to work with the whole command on my Mac somehow...", "author": "jiacheliu3", "createdAt": "2020-02-21T09:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODI3MQ=="}], "type": "inlineReview", "revised_code": null}]}