{"pr_number": 11513, "pr_title": "Add readonly check while delete recursively", "pr_createdAt": "2020-06-03T11:53:47Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11513", "timeline": [{"oid": "21c68d7504c671eebb639683a36f247bf856f029", "url": "https://github.com/Alluxio/alluxio/commit/21c68d7504c671eebb639683a36f247bf856f029", "message": "add readonly check while delete recursively", "committedDate": "2020-06-03T11:39:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r434945164", "bodyText": "How is this different from the check below? https://github.com/Alluxio/alluxio/pull/11513/files#diff-7f82122f923de058e3c4a20b43cd7e4eR1565", "author": "gpang", "createdAt": "2020-06-04T01:40:56Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,7 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                mMountTable.checkUnderWritableMountPoint(childPath.getUri());", "originalCommit": "21c68d7504c671eebb639683a36f247bf856f029", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAzMzYxNw==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r435033617", "bodyText": "The check below won't check descendants of the path, it just check the path itself", "author": "tinkerrrr", "createdAt": "2020-06-04T07:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0NTMyMg==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436045322", "bodyText": "I see. Would checking only the descendant mount points work? I am concerned that checking every path may be unnecessarily expensive, especially for a large sub-tree of the namespace.", "author": "gpang", "createdAt": "2020-06-05T16:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MzIzMA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436073230", "bodyText": "We already check the permissions of every file and directory when deleting recursively. I don't think this would make much of a difference", "author": "ZacBlanco", "createdAt": "2020-06-05T17:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0OTkxMA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436149910", "bodyText": "I thought it was unnecessary to check the same mount point multiple times. Also, checkUnderWritableMountPoint() calls getMountPoint(), and that needs to iterate over all the mount points to find the longest prefix.", "author": "gpang", "createdAt": "2020-06-05T20:30:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0MDc4OA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436240788", "bodyText": "We already check the permissions of every file and directory when deleting recursively. I don't think this would make much of a difference\n\nWell, I've updated the use-case in my first comment. As it described, the scenario is, a user with the right permission did this operation, the should-be-protected sub-directory was delete unexpectedly", "author": "tinkerrrr", "createdAt": "2020-06-06T05:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NDM1NA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436244354", "bodyText": "I thought it was unnecessary to check the same mount point multiple times. Also, checkUnderWritableMountPoint() calls getMountPoint(), and that needs to iterate over all the mount points to find the longest prefix.\n\nThanks for your advice! I think checking only the descendant mount points works", "author": "tinkerrrr", "createdAt": "2020-06-06T06:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}], "type": "inlineReview", "revised_code": {"commit": "f2c883be0e7053cdaab31338effc9db3845509bc", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex 023e30baad..aed5b5f84d 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\n@@ -1548,7 +1548,7 @@ public final class DefaultFileSystemMaster extends CoreMaster\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n-                mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n+                mMountTable.checkIsWritableMountPoint(childPath.getUri());\n               } catch (AccessControlException e) {\n                 failedChildren.add(e.getMessage());\n               }\n"}}, {"oid": "c6c444355fd445442f10d5dc5c4421fbfddb31df", "url": "https://github.com/Alluxio/alluxio/commit/c6c444355fd445442f10d5dc5c4421fbfddb31df", "message": "Add UT for delete with readonly check", "committedDate": "2020-06-04T10:21:08Z", "type": "commit"}, {"oid": "89a4bfe57f61d544d7bdd916e012b71d98d8707c", "url": "https://github.com/Alluxio/alluxio/commit/89a4bfe57f61d544d7bdd916e012b71d98d8707c", "message": "correct typo", "committedDate": "2020-06-04T10:24:02Z", "type": "commit"}, {"oid": "f2c883be0e7053cdaab31338effc9db3845509bc", "url": "https://github.com/Alluxio/alluxio/commit/f2c883be0e7053cdaab31338effc9db3845509bc", "message": "Add MountTable#checkIsWritableMountPoint method to check if a path is a readonly path, without iterate over all the mount points", "committedDate": "2020-06-06T06:36:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MDg5MQ==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r437570891", "bodyText": "Instead of introducing a new method, I was thinking more like:\nif (mMountTable.isMountPoint(childPath.getUri())) {\n  mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n}\n\nThis would allow not creating a new method, and also, this performs the (potentially expensive) check for only the mount point paths.\nWhat do you think?", "author": "gpang", "createdAt": "2020-06-09T16:41:21Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,7 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                mMountTable.checkIsWritableMountPoint(childPath.getUri());", "originalCommit": "f2c883be0e7053cdaab31338effc9db3845509bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyODczOA==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r437828738", "bodyText": "I see, this way is much more elegant, thanks!", "author": "tinkerrrr", "createdAt": "2020-06-10T02:43:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MDg5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex aed5b5f84d..a14261a061 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\n@@ -1548,7 +1548,9 @@ public final class DefaultFileSystemMaster extends CoreMaster\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n-                mMountTable.checkIsWritableMountPoint(childPath.getUri());\n+                if (mMountTable.isMountPoint(childPath.getUri())) {\n+                    mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n+                }\n               } catch (AccessControlException e) {\n                 failedChildren.add(e.getMessage());\n               }\n"}}, {"oid": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "url": "https://github.com/Alluxio/alluxio/commit/923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "message": "A more elegant way to do readOnly check", "committedDate": "2020-06-10T02:40:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NTEyNg==", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r438275126", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n          \n          \n            \n                              mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n          \n      \n    \n    \n  \n\ncheckstyle is complaining with:\nerror: 'if' child have incorrect indentation level 20, expected level should be 18.", "author": "gpang", "createdAt": "2020-06-10T16:59:25Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,9 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                if (mMountTable.isMountPoint(childPath.getUri())) {\n+                    mMountTable.checkUnderWritableMountPoint(childPath.getUri());", "originalCommit": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7d6b58150d4d38ae0f103d83ac04c3ae2dce8078", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\nindex a14261a061..ca8062228d 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\n@@ -1549,7 +1549,7 @@ public final class DefaultFileSystemMaster extends CoreMaster\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n                 if (mMountTable.isMountPoint(childPath.getUri())) {\n-                    mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n+                  mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n                 }\n               } catch (AccessControlException e) {\n                 failedChildren.add(e.getMessage());\n"}}, {"oid": "7d6b58150d4d38ae0f103d83ac04c3ae2dce8078", "url": "https://github.com/Alluxio/alluxio/commit/7d6b58150d4d38ae0f103d83ac04c3ae2dce8078", "message": "Update core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\nCo-authored-by: Gene Pang <gene.pang@gmail.com>", "committedDate": "2020-06-11T02:08:08Z", "type": "commit"}]}