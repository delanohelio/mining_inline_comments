{"pr_number": 10963, "pr_title": "Cache the getWorkerInfoList results and refresh periodically", "pr_createdAt": "2020-02-20T22:44:00Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10963", "timeline": [{"oid": "ffd70a4380636274aa9d345db9e64f06b2285bd7", "url": "https://github.com/Alluxio/alluxio/commit/ffd70a4380636274aa9d345db9e64f06b2285bd7", "message": "Cache the getWorkerInfoList results and refresh periodically", "committedDate": "2020-02-20T22:40:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwOTU3NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382309575", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          + \"after being cached for this time period. \")\n          \n          \n            \n                          + \"after being cached for this time period.\")\n          \n      \n    \n    \n  \n\nAlso, can you add what the implications may be if it is too short, and too long?", "author": "gpang", "createdAt": "2020-02-20T23:07:57Z", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2079,6 +2079,14 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n               .build();\n+  public static final PropertyKey MASTER_WORKER_INFO_CACHE_REFRESH_TIME =\n+      new Builder(Name.MASTER_WORKER_INFO_CACHE_REFRESH_TIME)\n+          .setDefaultValue(\"10sec\")\n+          .setDescription(\"The worker information list will be refreshed \"\n+              + \"after being cached for this time period. \")", "originalCommit": "ffd70a4380636274aa9d345db9e64f06b2285bd7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7125ccaabdf6bcd42e41d788eccb63019d7ea796", "chunk": "diff --git a/core/common/src/main/java/alluxio/conf/PropertyKey.java b/core/common/src/main/java/alluxio/conf/PropertyKey.java\nindex 52bf0a16d1..187c4c442e 100644\n--- a/core/common/src/main/java/alluxio/conf/PropertyKey.java\n+++ b/core/common/src/main/java/alluxio/conf/PropertyKey.java\n\n@@ -2083,7 +2083,7 @@ public final class PropertyKey implements Comparable<PropertyKey> {\n       new Builder(Name.MASTER_WORKER_INFO_CACHE_REFRESH_TIME)\n           .setDefaultValue(\"10sec\")\n           .setDescription(\"The worker information list will be refreshed \"\n-              + \"after being cached for this time period. \")\n+              + \"after being cached for this time period.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n           .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMDEzNg==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382310136", "bodyText": "Can we include the information from e in this exception message?", "author": "gpang", "createdAt": "2020-02-20T23:09:44Z", "path": "core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java", "diffHunk": "@@ -407,6 +431,14 @@ public long getUsedBytes() {\n     if (mSafeModeManager.isInSafeMode()) {\n       throw new UnavailableException(ExceptionMessage.MASTER_IN_SAFEMODE.getMessage());\n     }\n+    try {\n+      return mWorkerInfoCache.get(WORKER_INFO_CACHE_KEY);\n+    } catch (ExecutionException e) {\n+      throw new UnavailableException(\"Unable to get worker info list from cache\");", "originalCommit": "ffd70a4380636274aa9d345db9e64f06b2285bd7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM3Mzg2NA==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382373864", "bodyText": "Yeah, added the exception message", "author": "LuQQiu", "createdAt": "2020-02-21T02:59:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMDEzNg=="}], "type": "inlineReview", "revised_code": {"commit": "7125ccaabdf6bcd42e41d788eccb63019d7ea796", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java b/core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java\nindex e7875b209d..6f36518d6a 100644\n--- a/core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java\n+++ b/core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java\n\n@@ -434,7 +434,7 @@ public final class DefaultBlockMaster extends CoreMaster implements BlockMaster\n     try {\n       return mWorkerInfoCache.get(WORKER_INFO_CACHE_KEY);\n     } catch (ExecutionException e) {\n-      throw new UnavailableException(\"Unable to get worker info list from cache\");\n+      throw new UnavailableException(\"Unable to get worker info list from cache\", e);\n     }\n   }\n \n"}}, {"oid": "7125ccaabdf6bcd42e41d788eccb63019d7ea796", "url": "https://github.com/Alluxio/alluxio/commit/7125ccaabdf6bcd42e41d788eccb63019d7ea796", "message": "Fix tests", "committedDate": "2020-02-20T23:49:16Z", "type": "commit"}, {"oid": "e87cd8567042e98597a652a5369a865fb4caaf72", "url": "https://github.com/Alluxio/alluxio/commit/e87cd8567042e98597a652a5369a865fb4caaf72", "message": "Add property key description", "committedDate": "2020-02-21T03:07:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzcyOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382737729", "bodyText": "should all integration tests just use a shorter refresh time, like 20ms?", "author": "gpang", "createdAt": "2020-02-21T18:29:51Z", "path": "core/common/src/test/java/alluxio/ConfigurationTestUtils.java", "diffHunk": "@@ -140,6 +140,9 @@ public static InstancedConfiguration defaults() {\n     conf.put(PropertyKey.MASTER_PERSISTENCE_INITIAL_INTERVAL_MS, \"20ms\");\n     conf.put(PropertyKey.MASTER_PERSISTENCE_SCHEDULER_INTERVAL_MS, \"20ms\");\n \n+    // faster refresh\n+    conf.put(PropertyKey.MASTER_WORKER_INFO_CACHE_REFRESH_TIME, \"100ms\");", "originalCommit": "e87cd8567042e98597a652a5369a865fb4caaf72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MzU4MA==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382753580", "bodyText": "I am worried if the too frequent getWorkerInfoList calls will create locking contentions in integration tests.", "author": "LuQQiu", "createdAt": "2020-02-21T19:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzcyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "81933bd207e6a683b602389feb35daaeb4c216b5", "chunk": "diff --git a/core/common/src/test/java/alluxio/ConfigurationTestUtils.java b/core/common/src/test/java/alluxio/ConfigurationTestUtils.java\nindex afe1a3a8fb..a3fc04f8c4 100644\n--- a/core/common/src/test/java/alluxio/ConfigurationTestUtils.java\n+++ b/core/common/src/test/java/alluxio/ConfigurationTestUtils.java\n\n@@ -141,7 +141,7 @@ public final class ConfigurationTestUtils {\n     conf.put(PropertyKey.MASTER_PERSISTENCE_SCHEDULER_INTERVAL_MS, \"20ms\");\n \n     // faster refresh\n-    conf.put(PropertyKey.MASTER_WORKER_INFO_CACHE_REFRESH_TIME, \"100ms\");\n+    conf.put(PropertyKey.MASTER_WORKER_INFO_CACHE_REFRESH_TIME, \"20ms\");\n \n     return conf;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzg4OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10963#discussion_r382737889", "bodyText": "if the test config has a faster time, this doesn't have to be set, right?", "author": "gpang", "createdAt": "2020-02-21T18:30:10Z", "path": "tests/src/test/java/alluxio/client/fs/FileOutStreamAsyncWriteIntegrationTest.java", "diffHunk": "@@ -174,7 +175,8 @@ public void asyncWriteNoEvictBeforeBlockCommit() throws Exception {\n       PropertyKey.Name.USER_FILE_PERSISTENCE_INITIAL_WAIT_TIME, \"1min\",\n       PropertyKey.Name.WORKER_MEMORY_SIZE, TINY_WORKER_MEM,\n       PropertyKey.Name.USER_BLOCK_SIZE_BYTES_DEFAULT, TINY_BLOCK_SIZE,\n-      PropertyKey.Name.USER_FILE_BUFFER_BYTES, \"8k\"\n+      PropertyKey.Name.USER_FILE_BUFFER_BYTES, \"8k\",\n+      PropertyKey.Name.MASTER_WORKER_INFO_CACHE_REFRESH_TIME, \"20ms\"", "originalCommit": "e87cd8567042e98597a652a5369a865fb4caaf72", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81933bd207e6a683b602389feb35daaeb4c216b5", "chunk": "diff --git a/tests/src/test/java/alluxio/client/fs/FileOutStreamAsyncWriteIntegrationTest.java b/tests/src/test/java/alluxio/client/fs/FileOutStreamAsyncWriteIntegrationTest.java\nindex 9eca2c1cc1..63495069c1 100644\n--- a/tests/src/test/java/alluxio/client/fs/FileOutStreamAsyncWriteIntegrationTest.java\n+++ b/tests/src/test/java/alluxio/client/fs/FileOutStreamAsyncWriteIntegrationTest.java\n\n@@ -176,7 +175,6 @@ public final class FileOutStreamAsyncWriteIntegrationTest\n       PropertyKey.Name.WORKER_MEMORY_SIZE, TINY_WORKER_MEM,\n       PropertyKey.Name.USER_BLOCK_SIZE_BYTES_DEFAULT, TINY_BLOCK_SIZE,\n       PropertyKey.Name.USER_FILE_BUFFER_BYTES, \"8k\",\n-      PropertyKey.Name.MASTER_WORKER_INFO_CACHE_REFRESH_TIME, \"20ms\"\n       })\n   public void asyncWriteNoEvict() throws Exception {\n     testLostAsyncBlocks();\n"}}, {"oid": "81933bd207e6a683b602389feb35daaeb4c216b5", "url": "https://github.com/Alluxio/alluxio/commit/81933bd207e6a683b602389feb35daaeb4c216b5", "message": "Change all the cache refresh time to 20ms", "committedDate": "2020-02-21T19:05:59Z", "type": "commit"}, {"oid": "967c855351167a5aad3218e8e4f60060540d5a4d", "url": "https://github.com/Alluxio/alluxio/commit/967c855351167a5aad3218e8e4f60060540d5a4d", "message": "Remove change for AsyncWriteIntegrationTest", "committedDate": "2020-02-21T23:16:59Z", "type": "commit"}, {"oid": "967c855351167a5aad3218e8e4f60060540d5a4d", "url": "https://github.com/Alluxio/alluxio/commit/967c855351167a5aad3218e8e4f60060540d5a4d", "message": "Remove change for AsyncWriteIntegrationTest", "committedDate": "2020-02-21T23:16:59Z", "type": "forcePushed"}, {"oid": "2a68b2d4d538aca56bf195baccf2035c513bb43c", "url": "https://github.com/Alluxio/alluxio/commit/2a68b2d4d538aca56bf195baccf2035c513bb43c", "message": "Merge remote-tracking branch 'upstream/master' into cacheGetWorker", "committedDate": "2020-02-22T00:04:58Z", "type": "commit"}]}