{"pr_number": 10900, "pr_title": "Enable configuration of ignored tables", "pr_createdAt": "2020-02-12T22:54:58Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10900", "timeline": [{"oid": "a821a078f40050d4c23bbce409221541272d4f28", "url": "https://github.com/Alluxio/alluxio/commit/a821a078f40050d4c23bbce409221541272d4f28", "message": "Enable configuration of ignored tables", "committedDate": "2020-02-12T22:53:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDEwOA==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378564108", "bodyText": "This looks like the same implementation from InstancedConfiguration, but maybe we can extract this into a function in FormatUtils or CommonUtils so we don't have the code in both places?", "author": "ZacBlanco", "createdAt": "2020-02-12T23:04:03Z", "path": "table/server/master/src/main/java/alluxio/master/table/Database.java", "diffHunk": "@@ -58,20 +60,23 @@\n   private final String mName;\n   private final Map<String, Table> mTables;\n   private final UnderDatabase mUdb;\n-  private final Map<String, String> mConfig;\n+  private final CatalogConfiguration mConfig;\n+  private final Set<String> mIgnoreTables;\n   private final long mUdbSyncTimeoutMs =\n       ServerConfiguration.getMs(PropertyKey.TABLE_CATALOG_UDB_SYNC_TIMEOUT);\n \n   private DatabaseInfo mDatabaseInfo;\n \n   private Database(CatalogContext context, String type, String name, UnderDatabase udb,\n-      Map<String, String> configMap) {\n+      CatalogConfiguration config) {\n     mContext = context;\n     mType = type;\n     mName = name;\n     mTables = new ConcurrentHashMap<>();\n     mUdb = udb;\n-    mConfig = configMap;\n+    mConfig = config;\n+    mIgnoreTables = Sets.newHashSet(Splitter.on(\",\").trimResults().omitEmptyStrings()\n+        .split(mConfig.get(CatalogProperty.DB_IGNORE_TABLES)));", "originalCommit": "a821a078f40050d4c23bbce409221541272d4f28", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2OTMzNA==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378569334", "bodyText": "I extract that part.", "author": "gpang", "createdAt": "2020-02-12T23:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDEwOA=="}], "type": "inlineReview", "revised_code": {"commit": "609d86cf23325f4725e849cb5835d6a67334bb91", "chunk": "diff --git a/table/server/master/src/main/java/alluxio/master/table/Database.java b/table/server/master/src/main/java/alluxio/master/table/Database.java\nindex a8594b7543..11645df4aa 100644\n--- a/table/server/master/src/main/java/alluxio/master/table/Database.java\n+++ b/table/server/master/src/main/java/alluxio/master/table/Database.java\n\n@@ -75,8 +77,8 @@ public class Database implements Journaled {\n     mTables = new ConcurrentHashMap<>();\n     mUdb = udb;\n     mConfig = config;\n-    mIgnoreTables = Sets.newHashSet(Splitter.on(\",\").trimResults().omitEmptyStrings()\n-        .split(mConfig.get(CatalogProperty.DB_IGNORE_TABLES)));\n+    mIgnoreTables = Sets.newHashSet(\n+        ConfigurationUtils.parseAsList(mConfig.get(CatalogProperty.DB_IGNORE_TABLES), \",\"));\n   }\n \n   /**\n"}}, {"oid": "609d86cf23325f4725e849cb5835d6a67334bb91", "url": "https://github.com/Alluxio/alluxio/commit/609d86cf23325f4725e849cb5835d6a67334bb91", "message": "Refactor list parsing", "committedDate": "2020-02-12T23:18:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzQ4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378583485", "bodyText": "Can we add a case for a,,b to make sure empty strings are omitted?", "author": "ZacBlanco", "createdAt": "2020-02-13T00:06:14Z", "path": "core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java", "diffHunk": "@@ -142,6 +143,15 @@ public void testMasterNotConfiguredMessage() {\n         ConfigurationUtils.getJobMasterHostNotConfiguredMessage(\"test service 2\"));\n   }\n \n+  @Test\n+  public void parseAsList() {\n+    assertEquals(Lists.newArrayList(\"a\"), ConfigurationUtils.parseAsList(\"a\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"),\n+        ConfigurationUtils.parseAsList(\" a , b , c \", \",\"));\n+    assertEquals(Lists.newArrayList(\"a,b,c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \";\"));\n+  }", "originalCommit": "609d86cf23325f4725e849cb5835d6a67334bb91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMjk4Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378632983", "bodyText": "Good call. Added.", "author": "gpang", "createdAt": "2020-02-13T03:22:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "17a13d4b4b627ca9b73c203eca1f88480ba28b7b", "chunk": "diff --git a/core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java b/core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java\nindex 45ba89e97a..da7c99852f 100644\n--- a/core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java\n+++ b/core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java\n\n@@ -150,6 +150,7 @@ public final class ConfigurationUtilsTest {\n     assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"),\n         ConfigurationUtils.parseAsList(\" a , b , c \", \",\"));\n     assertEquals(Lists.newArrayList(\"a,b,c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \";\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"c\"), ConfigurationUtils.parseAsList(\",,a,,c,,\", \",\"));\n   }\n \n   private AlluxioConfiguration createConf(Map<PropertyKey, String> properties) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzYwOA==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378583608", "bodyText": "Not sure if you updated all this by hand or automatically formatted, but I think the old version of this is easier to read", "author": "ZacBlanco", "createdAt": "2020-02-13T00:06:43Z", "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -358,10 +357,8 @@ public static boolean isHaMode(AlluxioConfiguration conf) {\n \n     List<ConfigProperty> configs = new ArrayList<>();\n     List<PropertyKey> selectedKeys =\n-        conf.keySet().stream()\n-            .filter(key -> GrpcUtils.contains(key.getScope(), scope))\n-            .filter(key -> key.isValid(key.getName()))\n-            .collect(toList());\n+        conf.keySet().stream().filter(key -> GrpcUtils.contains(key.getScope(), scope))\n+            .filter(key -> key.isValid(key.getName())).collect(toList());", "originalCommit": "609d86cf23325f4725e849cb5835d6a67334bb91", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzNDQ0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378634445", "bodyText": "It was auto-formatted. I reverted back.", "author": "gpang", "createdAt": "2020-02-13T03:29:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzYwOA=="}], "type": "inlineReview", "revised_code": {"commit": "bf2c8d9d714623e4a3fbb8a30246601ac4910b6e", "chunk": "diff --git a/core/common/src/main/java/alluxio/util/ConfigurationUtils.java b/core/common/src/main/java/alluxio/util/ConfigurationUtils.java\nindex fb13df2e10..990c904c41 100644\n--- a/core/common/src/main/java/alluxio/util/ConfigurationUtils.java\n+++ b/core/common/src/main/java/alluxio/util/ConfigurationUtils.java\n\n@@ -357,8 +360,10 @@ public final class ConfigurationUtils {\n \n     List<ConfigProperty> configs = new ArrayList<>();\n     List<PropertyKey> selectedKeys =\n-        conf.keySet().stream().filter(key -> GrpcUtils.contains(key.getScope(), scope))\n-            .filter(key -> key.isValid(key.getName())).collect(toList());\n+        conf.keySet().stream()\n+            .filter(key -> GrpcUtils.contains(key.getScope(), scope))\n+            .filter(key -> key.isValid(key.getName()))\n+            .collect(toList());\n \n     for (PropertyKey key : selectedKeys) {\n       ConfigProperty.Builder configProp = ConfigProperty.newBuilder().setName(key.getName())\n"}}, {"oid": "bf2c8d9d714623e4a3fbb8a30246601ac4910b6e", "url": "https://github.com/Alluxio/alluxio/commit/bf2c8d9d714623e4a3fbb8a30246601ac4910b6e", "message": "Revert auto-formatting", "committedDate": "2020-02-13T03:28:48Z", "type": "commit"}, {"oid": "17a13d4b4b627ca9b73c203eca1f88480ba28b7b", "url": "https://github.com/Alluxio/alluxio/commit/17a13d4b4b627ca9b73c203eca1f88480ba28b7b", "message": "Add test case", "committedDate": "2020-02-13T03:29:04Z", "type": "commit"}, {"oid": "5bf592428eed1ed8ae64f7ea69ca87ca1d465bb3", "url": "https://github.com/Alluxio/alluxio/commit/5bf592428eed1ed8ae64f7ea69ca87ca1d465bb3", "message": "Fix checkstyle", "committedDate": "2020-02-13T03:45:07Z", "type": "commit"}, {"oid": "34d5defdae734f927e1d40359a68c7b36a2fa7a3", "url": "https://github.com/Alluxio/alluxio/commit/34d5defdae734f927e1d40359a68c7b36a2fa7a3", "message": "Merge remote-tracking branch 'upstream/master' into attach-ignore-tables", "committedDate": "2020-02-13T16:20:40Z", "type": "commit"}, {"oid": "7b2a84e7a7e073e8447087700f745b9119759e0a", "url": "https://github.com/Alluxio/alluxio/commit/7b2a84e7a7e073e8447087700f745b9119759e0a", "message": "Track ignored tables", "committedDate": "2020-02-13T18:55:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDE1MA==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379074150", "bodyText": "why delete this? do we not need it for GLUE?", "author": "yuzhu", "createdAt": "2020-02-13T19:32:43Z", "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =", "originalCommit": "7b2a84e7a7e073e8447087700f745b9119759e0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDAxOA==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379084018", "bodyText": "Yeah, this was unused. We passed in the type in a different way.", "author": "gpang", "createdAt": "2020-02-13T19:52:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDE1MA=="}], "type": "inlineReview", "revised_code": {"commit": "3c9e6ac56f7e39fe544b4fad93f4edca13c89686", "chunk": "diff --git a/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java b/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\nindex bd3a75f5f9..ab5b74b53e 100644\n--- a/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\n+++ b/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\n\n@@ -27,6 +27,6 @@ public class CatalogProperty extends BaseProperty {\n   }\n \n   public static final CatalogProperty DB_IGNORE_TABLES =\n-      new CatalogProperty(\"catalog.db.ignore.tables\",\n+      new CatalogProperty(\"catalog.db.ignore.udb.tables\",\n           \"The comma-separated list of table names to ignore from the UDB.\", \"\");\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODI0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379078243", "bodyText": "does this option affect deletion? should we have a comment about that?", "author": "yuzhu", "createdAt": "2020-02-13T19:41:00Z", "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =\n-      new CatalogProperty(\"db.type\", \"The type of database. Possible values are: hive\", \"\");\n+  public static final CatalogProperty DB_IGNORE_TABLES =\n+      new CatalogProperty(\"catalog.db.ignore.tables\",\n+          \"The comma-separated list of table names to ignore from the UDB.\", \"\");", "originalCommit": "7b2a84e7a7e073e8447087700f745b9119759e0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NjQ0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379096445", "bodyText": "For now, it is only related to getting tables from udb via udb sync.", "author": "gpang", "createdAt": "2020-02-13T20:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "3c9e6ac56f7e39fe544b4fad93f4edca13c89686", "chunk": "diff --git a/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java b/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\nindex bd3a75f5f9..ab5b74b53e 100644\n--- a/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\n+++ b/table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java\n\n@@ -27,6 +27,6 @@ public class CatalogProperty extends BaseProperty {\n   }\n \n   public static final CatalogProperty DB_IGNORE_TABLES =\n-      new CatalogProperty(\"catalog.db.ignore.tables\",\n+      new CatalogProperty(\"catalog.db.ignore.udb.tables\",\n           \"The comma-separated list of table names to ignore from the UDB.\", \"\");\n }\n"}}, {"oid": "3c9e6ac56f7e39fe544b4fad93f4edca13c89686", "url": "https://github.com/Alluxio/alluxio/commit/3c9e6ac56f7e39fe544b4fad93f4edca13c89686", "message": "Update property name", "committedDate": "2020-02-13T20:18:33Z", "type": "commit"}]}