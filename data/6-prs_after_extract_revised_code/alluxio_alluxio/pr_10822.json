{"pr_number": 10822, "pr_title": "Move Decimal.toBigDecimal from private -> public", "pr_createdAt": "2020-01-31T22:08:31Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10822", "timeline": [{"oid": "f6cd8e702a752b4141eff647175d0e6b24664bdd", "url": "https://github.com/Alluxio/alluxio/commit/f6cd8e702a752b4141eff647175d0e6b24664bdd", "message": "Move Decimal.toBigDecimal from private -> public", "committedDate": "2020-01-31T22:07:55Z", "type": "commit"}, {"oid": "f534f94667356142f692d2d4753e8f933492ce41", "url": "https://github.com/Alluxio/alluxio/commit/f534f94667356142f692d2d4753e8f933492ce41", "message": "Expose precision and scale as well", "committedDate": "2020-01-31T23:50:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374152185", "bodyText": "are there some unit tests for this? Will this handle extraneous whitespaces well?", "author": "gpang", "createdAt": "2020-02-03T15:03:05Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java", "diffHunk": "@@ -50,11 +51,23 @@ public int getScale() {\n     return mScale;\n   }\n \n+  /**\n+   * Returns the decimal's precision and scale from the type definition.\n+   *\n+   * @param type the type definition, like \"decimal(10, 2)\"\n+   * @return the decimal's precision and scale as a Pair\n+   */\n+  public static Pair<Integer, Integer> getPrecisionAndScale(String type) {", "originalCommit": "f534f94667356142f692d2d4753e8f933492ce41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjg0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374232845", "bodyText": "This is not actually new code but I'll add some test since this class doesn't seem to have a unit test at all.", "author": "bradyoo", "createdAt": "2020-02-03T17:21:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMzNTIxOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374335219", "bodyText": "Yes, I know it is old code, but thanks for the test cases!", "author": "gpang", "createdAt": "2020-02-03T20:54:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "992f90ddc2fd6ea97cf01aca9132d9f49bb30b2e", "chunk": "diff --git a/job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java b/job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java\nindex b9309a640f..465a332ba1 100644\n--- a/job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java\n+++ b/job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java\n\n@@ -58,6 +58,7 @@ public class Decimal {\n    * @return the decimal's precision and scale as a Pair\n    */\n   public static Pair<Integer, Integer> getPrecisionAndScale(String type) {\n+    type = type.trim();\n     String param = type.substring(8, type.length() - 1);\n     String[] params = param.split(\",\");\n     return new Pair<>(Integer.parseInt(params[0].trim()), Integer.parseInt(params[1].trim()));\n"}}, {"oid": "992f90ddc2fd6ea97cf01aca9132d9f49bb30b2e", "url": "https://github.com/Alluxio/alluxio/commit/992f90ddc2fd6ea97cf01aca9132d9f49bb30b2e", "message": "add test and trim type", "committedDate": "2020-02-03T17:35:10Z", "type": "commit"}, {"oid": "87c3c92c388ebba8465f30a66de9d54246c042fc", "url": "https://github.com/Alluxio/alluxio/commit/87c3c92c388ebba8465f30a66de9d54246c042fc", "message": "Checkstyle", "committedDate": "2020-02-03T18:05:25Z", "type": "commit"}]}