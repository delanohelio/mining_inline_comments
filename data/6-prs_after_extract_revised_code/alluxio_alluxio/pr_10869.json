{"pr_number": 10869, "pr_title": "Terminate initial scan on stop active sync", "pr_createdAt": "2020-02-08T00:33:05Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10869", "timeline": [{"oid": "38829ba3b592786fe67d96d832e2e5e4fa4366a5", "url": "https://github.com/Alluxio/alluxio/commit/38829ba3b592786fe67d96d832e2e5e4fa4366a5", "message": "Refactor stop sync", "committedDate": "2020-02-08T00:30:50Z", "type": "commit"}, {"oid": "6a6aa173c505af76a04b33d00976e1d42e305c83", "url": "https://github.com/Alluxio/alluxio/commit/6a6aa173c505af76a04b33d00976e1d42e305c83", "message": "Refactor startSync", "committedDate": "2020-02-08T00:58:04Z", "type": "commit"}, {"oid": "d50025cfaae09b5f0878bb73963702bb5057ee78", "url": "https://github.com/Alluxio/alluxio/commit/d50025cfaae09b5f0878bb73963702bb5057ee78", "message": "Fix build", "committedDate": "2020-02-08T01:00:49Z", "type": "commit"}, {"oid": "505fe53ae3a0f6efbd177848f81fed965da92293", "url": "https://github.com/Alluxio/alluxio/commit/505fe53ae3a0f6efbd177848f81fed965da92293", "message": "Rename lock", "committedDate": "2020-02-08T17:39:06Z", "type": "commit"}, {"oid": "819377471db140519374dd6e2d8db52f5b8d2752", "url": "https://github.com/Alluxio/alluxio/commit/819377471db140519374dd6e2d8db52f5b8d2752", "message": "Refactor", "committedDate": "2020-02-08T17:52:41Z", "type": "commit"}, {"oid": "2bc5e84e7c9db73ee42ccf2bcc9e4391e0bac927", "url": "https://github.com/Alluxio/alluxio/commit/2bc5e84e7c9db73ee42ccf2bcc9e4391e0bac927", "message": "Fix style", "committedDate": "2020-02-08T18:15:24Z", "type": "commit"}, {"oid": "b15d3460cf80690960d299436505f72d40ca66e0", "url": "https://github.com/Alluxio/alluxio/commit/b15d3460cf80690960d299436505f72d40ca66e0", "message": "Fix style", "committedDate": "2020-02-10T19:25:58Z", "type": "commit"}, {"oid": "295cad5c24dcaed10b668730904be343a39aa2d9", "url": "https://github.com/Alluxio/alluxio/commit/295cad5c24dcaed10b668730904be343a39aa2d9", "message": "Separate retry timeout property", "committedDate": "2020-02-10T23:19:43Z", "type": "commit"}, {"oid": "8b78fbbea47530e6e294cbf505156b1266fed577", "url": "https://github.com/Alluxio/alluxio/commit/8b78fbbea47530e6e294cbf505156b1266fed577", "message": "Abstract stopSync logic", "committedDate": "2020-02-11T01:53:47Z", "type": "commit"}, {"oid": "fec303a04e6586019c6797f95b12a7c914b70128", "url": "https://github.com/Alluxio/alluxio/commit/fec303a04e6586019c6797f95b12a7c914b70128", "message": "Handle thread interruption", "committedDate": "2020-02-11T23:21:49Z", "type": "commit"}, {"oid": "2f9d9ebd29c9bbd865e5a2bb85814441e3ff4d8d", "url": "https://github.com/Alluxio/alluxio/commit/2f9d9ebd29c9bbd865e5a2bb85814441e3ff4d8d", "message": "Fix findbug warning", "committedDate": "2020-02-11T23:44:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwMTEwMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378001101", "bodyText": "the same method also stops an incremental sync, so perhaps rename to make that clear?", "author": "yuzhu", "createdAt": "2020-02-12T01:50:29Z", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -489,6 +562,27 @@ public void stopSyncPostJournal(AlluxioURI syncPoint) throws InvalidPathExceptio\n     }\n   }\n \n+  /**\n+   * Stop the initial full sync thread.\n+   *\n+   * @param syncPoint the sync point\n+   * @param resolution the mount table resolution\n+   */\n+  private void stopInitSync(AlluxioURI syncPoint, MountTable.Resolution resolution) {", "originalCommit": "2f9d9ebd29c9bbd865e5a2bb85814441e3ff4d8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java b/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\nindex d480e844aa..26a6a35c46 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\n\n@@ -562,27 +572,6 @@ public class ActiveSyncManager implements Journaled {\n     }\n   }\n \n-  /**\n-   * Stop the initial full sync thread.\n-   *\n-   * @param syncPoint the sync point\n-   * @param resolution the mount table resolution\n-   */\n-  private void stopInitSync(AlluxioURI syncPoint, MountTable.Resolution resolution) {\n-    Future<?> syncFuture = mSyncPathStatus.remove(syncPoint);\n-    if (syncFuture != null) {\n-      syncFuture.cancel(true);\n-    }\n-\n-    long mountId = resolution.getMountId();\n-    if (mFilterMap.containsKey(mountId) && mFilterMap.get(mountId).isEmpty()) {\n-      Future<?> future = mPollerMap.remove(mountId);\n-      if (future != null) {\n-        future.cancel(true);\n-      }\n-    }\n-  }\n-\n   private Iterator<Journal.JournalEntry> getTxIdIterator() {\n     final Iterator<Map.Entry<Long, Long>> it = mStartingTxIdMap.entrySet().iterator();\n     return new Iterator<Journal.JournalEntry>() {\n"}}, {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "url": "https://github.com/Alluxio/alluxio/commit/a022ccaee8e5d22b09e8c1ea7455d75cba963280", "message": "Address comment", "committedDate": "2020-02-12T05:41:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378470903", "bodyText": "I think isInterrupted() clears the interrupt flag. If the previous syncInodeMetadata was interrupted, this would evaluate to false, and this whole method would return true. Is that desired?", "author": "gpang", "createdAt": "2020-02-12T19:39:53Z", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3395,6 +3392,10 @@ private boolean syncMetadataInternal(RpcContext rpcContext, LockedInodePath inod\n \n     // Update metadata for all the mount points\n     for (String mountPoint : pathsToLoad) {\n+      if (Thread.currentThread().isInterrupted()) {", "originalCommit": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyNzA2OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378527069", "bodyText": "nope. the javadoc says the interrupted status is unaffected by this method. the method accepts a flag to indicate whether to clear the state", "author": "madanadit", "createdAt": "2020-02-12T21:37:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NzUzNg==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378557536", "bodyText": "i think we're good here", "author": "madanadit", "createdAt": "2020-02-12T22:47:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MzIzMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378473231", "bodyText": "This is specific to active sync, right? Can we be explicit for that in the description, and describe any tradeoffs/implications if any.", "author": "gpang", "createdAt": "2020-02-12T19:44:12Z", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1914,6 +1914,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT =\n+      new Builder(Name.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)\n+          .setDefaultValue(\"10sec\")\n+          .setDescription(\"Max time to retry failed sync operation\")", "originalCommit": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzMTQ5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378531499", "bodyText": "yep", "author": "madanadit", "createdAt": "2020-02-12T21:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MzIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "bfbadbf3cbd43f4a0b330d24eba716c7aeae5b55", "chunk": "diff --git a/core/common/src/main/java/alluxio/conf/PropertyKey.java b/core/common/src/main/java/alluxio/conf/PropertyKey.java\nindex 1164d53d5c..7a230fdfee 100644\n--- a/core/common/src/main/java/alluxio/conf/PropertyKey.java\n+++ b/core/common/src/main/java/alluxio/conf/PropertyKey.java\n\n@@ -1917,7 +1917,9 @@ public final class PropertyKey implements Comparable<PropertyKey> {\n   public static final PropertyKey MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT =\n       new Builder(Name.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)\n           .setDefaultValue(\"10sec\")\n-          .setDescription(\"Max time to retry failed sync operation\")\n+          .setDescription(\"The max total duration to retry failed active sync operations.\"\n+              + \"A large duration is useful to handle transient failures such as an \"\n+              + \"unresponsive under storage but can lock the inode tree being synced longer.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n           .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxODYwNg==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378518606", "bodyText": "was this basically copied from the other file?", "author": "gpang", "createdAt": "2020-02-12T21:20:06Z", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -263,7 +270,50 @@ public void applyAndJournal(Supplier<JournalContext> context, RemoveSyncPointEnt\n   }\n \n   /**\n-   * stop active sync on a mount id.\n+   * Start active sync on a URI and journal the add entry.\n+   *\n+   * @param rpcContext the master rpc or no-op context\n+   * @param syncPoint sync point to be start\n+   */\n+  public void startSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)", "originalCommit": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzNjM3OA==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378536378", "bodyText": "yep, pretty much", "author": "madanadit", "createdAt": "2020-02-12T21:57:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxODYwNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMzQxMg==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378523412", "bodyText": "NIT: can we say something like \"Failed to stop sync point  because it is not mounted.\"", "author": "gpang", "createdAt": "2020-02-12T21:30:12Z", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -272,50 +322,41 @@ public void stopSyncForMount(long mountId) throws InvalidPathException {\n     if (mFilterMap.containsKey(mountId)) {\n       List<AlluxioURI> toBeDeleted = new ArrayList<>(mFilterMap.get(mountId));\n       for (AlluxioURI uri : toBeDeleted) {\n-        stopSyncInternal(uri, mountId);\n+        stopSyncAndJournal(RpcContext.NOOP, uri);\n       }\n     }\n   }\n \n   /**\n-   * Perform various checks of stopping a sync point.\n-   *\n-   * @param syncPoint sync point to stop\n-   * @return the path resolution result if successfully passed all checks\n-   */\n-\n-  @Nullable\n-  public MountTable.Resolution resolveSyncPoint(AlluxioURI syncPoint) throws InvalidPathException {\n-    if (!mSyncPathList.contains(syncPoint)) {\n-      LOG.debug(\"syncPoint not found {}\", syncPoint.getPath());\n-      return null;\n-    }\n-    MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n-    return resolution;\n-  }\n-  /**\n-   * stop active sync on a URI.\n+   * Stop active sync on a URI and journal the remove entry.\n    *\n+   * @param rpcContext the master rpc or no-op context\n    * @param syncPoint sync point to be stopped\n-   * @param mountId mountId\n    */\n-  public void stopSyncInternal(AlluxioURI syncPoint, long mountId) {\n-    try (LockResource r = new LockResource(mSyncManagerLock)) {\n+  public void stopSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)\n+      throws InvalidPathException {\n+    try (LockResource r = new LockResource(mLock)) {\n+      MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n+      if (resolution == null) {\n+        throw new InvalidPathException(syncPoint + \" is not a sync point.\");", "originalCommit": "a022ccaee8e5d22b09e8c1ea7455d75cba963280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzNzAxNg==", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378537016", "bodyText": "done", "author": "madanadit", "createdAt": "2020-02-12T21:58:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMzQxMg=="}], "type": "inlineReview", "revised_code": {"commit": "bfbadbf3cbd43f4a0b330d24eba716c7aeae5b55", "chunk": "diff --git a/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java b/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\nindex 26a6a35c46..4dba95f059 100644\n--- a/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\n+++ b/core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java\n\n@@ -338,7 +340,8 @@ public class ActiveSyncManager implements Journaled {\n     try (LockResource r = new LockResource(mLock)) {\n       MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n       if (resolution == null) {\n-        throw new InvalidPathException(syncPoint + \" is not a sync point.\");\n+        throw new InvalidPathException(\"Failed to stop sync point \" + syncPoint\n+            + \" because it is not mounted.\");\n       }\n       LOG.debug(\"stop syncPoint {}\", syncPoint.getPath());\n       final long mountId = resolution.getMountId();\n"}}, {"oid": "bfbadbf3cbd43f4a0b330d24eba716c7aeae5b55", "url": "https://github.com/Alluxio/alluxio/commit/bfbadbf3cbd43f4a0b330d24eba716c7aeae5b55", "message": "Address comment", "committedDate": "2020-02-12T22:46:44Z", "type": "commit"}]}