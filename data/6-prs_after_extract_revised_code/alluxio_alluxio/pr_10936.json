{"pr_number": 10936, "pr_title": "Make the addition of client metrics heartbeats asynchronous", "pr_createdAt": "2020-02-18T22:31:19Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10936", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAwOTExMA==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r381009110", "bodyText": "Does it make sense to report client metrics at all from the master?", "author": "calvinjia", "createdAt": "2020-02-19T00:09:15Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -231,14 +232,16 @@ private synchronized void initContext(ClientContext ctx,\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n     if (mMetricsEnabled) {\n-      try {\n-        InetSocketAddress masterAddr = masterInquireClient.getPrimaryRpcAddress();\n-        mMasterClientContext.loadConf(masterAddr, true, true);\n-      } catch (UnavailableException e) {\n-        LOG.error(\"Failed to get master address during initialization\", e);\n-      } catch (AlluxioStatusException ae) {\n-        LOG.error(\"Failed to load configuration from \"\n-            + \"meta master during initialization\", ae);\n+      if (CommonUtils.PROCESS_TYPE.get() != CommonUtils.ProcessType.MASTER) {", "originalCommit": "834c162f27a67587892ef287ecf5623aa5d8097b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxNDQ0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r381014445", "bodyText": "Yeah, it makes sense to not report client metrics at all from the master. If not reporting, we may lose some of the client metrics, but client metrics in the master process is wrong no matter what. This is because of the client metrics in master may record as Master.Client.metricName which will not be reported. Will add a TODO to solve master client metrics in the future.", "author": "LuQQiu", "createdAt": "2020-02-19T00:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAwOTExMA=="}], "type": "inlineReview", "revised_code": {"commit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\nindex 2b055caeea..2e78012892 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n\n@@ -232,17 +231,6 @@ public class FileSystemContext implements Closeable {\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n     if (mMetricsEnabled) {\n-      if (CommonUtils.PROCESS_TYPE.get() != CommonUtils.ProcessType.MASTER) {\n-        try {\n-          InetSocketAddress masterAddr = masterInquireClient.getPrimaryRpcAddress();\n-          mMasterClientContext.loadConf(masterAddr, true, true);\n-        } catch (UnavailableException e) {\n-          LOG.error(\"Failed to get master address during initialization\", e);\n-        } catch (AlluxioStatusException ae) {\n-          LOG.error(\"Failed to load configuration from \"\n-              + \"meta master during initialization\", ae);\n-        }\n-      }\n       MetricsSystem.startSinks(getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n       MetricsHeartbeatContext.addHeartbeat(getClientContext(), masterInquireClient);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxNTQyOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r381015429", "bodyText": "I don't understand why this would take longer if the process is the master. Is there some kind of race condition?", "author": "ZacBlanco", "createdAt": "2020-02-19T00:32:26Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -230,8 +231,11 @@ private synchronized void initContext(ClientContext ctx,\n     mMasterClientContext = MasterClientContext.newBuilder(ctx)\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n-    if (mMetricsEnabled) {\n+    if (mMetricsEnabled && CommonUtils.PROCESS_TYPE.get() != CommonUtils.ProcessType.MASTER) {\n+      // TODO(lu) report clients metrics in master process\n       try {\n+        // clients may be used in the master process before master starts.\n+        // Retry getting master addresses in this circumstance may block master starting up\n         InetSocketAddress masterAddr = masterInquireClient.getPrimaryRpcAddress();", "originalCommit": "2883f8d0f0677f5e453a76ba922823225f619516", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxODgzMA==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r381018830", "bodyText": "I think that we shouldn't make the master startup depend upon having Alluxio clients available. If anything, I think this should be a change that we make on the catalog and WebServer side to make sure that a client doesn't need to connect before the RPC server starts?", "author": "ZacBlanco", "createdAt": "2020-02-19T00:45:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAxNTQyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\nindex 4102285fd9..2e78012892 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n\n@@ -231,19 +230,7 @@ public class FileSystemContext implements Closeable {\n     mMasterClientContext = MasterClientContext.newBuilder(ctx)\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n-    if (mMetricsEnabled && CommonUtils.PROCESS_TYPE.get() != CommonUtils.ProcessType.MASTER) {\n-      // TODO(lu) report clients metrics in master process\n-      try {\n-        // clients may be used in the master process before master starts.\n-        // Retry getting master addresses in this circumstance may block master starting up\n-        InetSocketAddress masterAddr = masterInquireClient.getPrimaryRpcAddress();\n-        mMasterClientContext.loadConf(masterAddr, true, true);\n-      } catch (UnavailableException e) {\n-        LOG.error(\"Failed to get master address during initialization\", e);\n-      } catch (AlluxioStatusException ae) {\n-        LOG.error(\"Failed to load configuration from \"\n-            + \"meta master during initialization\", ae);\n-      }\n+    if (mMetricsEnabled) {\n       MetricsSystem.startSinks(getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n       MetricsHeartbeatContext.addHeartbeat(getClientContext(), masterInquireClient);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNjg0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r382326845", "bodyText": "It seems out of place to start the metric system in the heartbeat.", "author": "calvinjia", "createdAt": "2020-02-20T23:57:44Z", "path": "core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java", "diffHunk": "@@ -177,13 +206,43 @@ public static synchronized void addHeartbeat(ClientContext ctx,\n           sAppId, PropertyKey.Name.USER_APP_ID);\n     }\n \n+    if (MetricsSystem.getNumSinks() == 0) {\n+      MetricsSystem.startSinks(ctx.getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n+    }", "originalCommit": "f5fa84cc87ff666b7a2ce8320c0f6ca257293079", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java b/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\nindex ff81a70d72..756dd80f10 100644\n--- a/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\n+++ b/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\n\n@@ -206,43 +171,13 @@ public class MetricsHeartbeatContext {\n           sAppId, PropertyKey.Name.USER_APP_ID);\n     }\n \n-    if (MetricsSystem.getNumSinks() == 0) {\n-      MetricsSystem.startSinks(ctx.getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n-    }\n-\n     MetricsHeartbeatContext heartbeatCtx = MASTER_METRICS_HEARTBEAT.computeIfAbsent(\n         inquireClient.getConnectDetails(),\n-        (addr) -> {\n-          try {\n-            // clients may be used in the master process before master starts.\n-            // Retry getting master addresses in this circumstance may block master starting up\n-            InetSocketAddress masterAddr = inquireClient.getPrimaryRpcAddress();\n-            ctx.loadConf(masterAddr, true, true);\n-          } catch (UnavailableException e) {\n-            LOG.error(\"Failed to get master address during initialization\", e);\n-          } catch (AlluxioStatusException ae) {\n-            LOG.error(\"Failed to load configuration from \"\n-                + \"meta master during initialization\", ae);\n-          }\n-          return new MetricsHeartbeatContext(ctx, inquireClient);\n-        });\n+        (addr) -> new MetricsHeartbeatContext(ctx, inquireClient));\n     heartbeatCtx.addContext();\n     LOG.debug(\"Registered metrics heartbeat with appId: {}\", sAppId);\n   }\n \n-  /**\n-   * Remove client metrics heartbeat asynchronously.\n-   *\n-   * @param ctx client context\n-   */\n-  public static void asyncRemoveHeartbeat(ClientContext ctx) {\n-    synchronized (sTaskLock) {\n-      Preconditions.checkNotNull(sTaskExecutor,\n-          \"Executor to submit heartbeat change task should be initialized\");\n-      sTaskExecutor.submit(() -> removeHeartbeat(ctx));\n-    }\n-  }\n-\n   /**\n    * Removes an application from the metrics heartbeat.\n    *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzcwMA==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r382327700", "bodyText": "Is it necessary to start the metrics system asynchronously? Only the heartbeat needs the master address right? Instead of computing master address, could we compute it lazily during the heartbeat call (and thus use the heartbeat thread, making the submission of the heartbeat thread lightweight)?", "author": "calvinjia", "createdAt": "2020-02-21T00:00:30Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -231,17 +230,7 @@ private synchronized void initContext(ClientContext ctx,\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n     if (mMetricsEnabled) {\n-      try {\n-        InetSocketAddress masterAddr = masterInquireClient.getPrimaryRpcAddress();\n-        mMasterClientContext.loadConf(masterAddr, true, true);\n-      } catch (UnavailableException e) {\n-        LOG.error(\"Failed to get master address during initialization\", e);\n-      } catch (AlluxioStatusException ae) {\n-        LOG.error(\"Failed to load configuration from \"\n-            + \"meta master during initialization\", ae);\n-      }\n-      MetricsSystem.startSinks(getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n-      MetricsHeartbeatContext.addHeartbeat(getClientContext(), masterInquireClient);\n+      MetricsHeartbeatContext.asyncAddHeartbeat(getClientContext(), masterInquireClient);", "originalCommit": "f5fa84cc87ff666b7a2ce8320c0f6ca257293079", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\nindex 206a657522..2e78012892 100644\n--- a/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n+++ b/core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n\n@@ -230,7 +231,8 @@ public class FileSystemContext implements Closeable {\n         .setMasterInquireClient(masterInquireClient).build();\n     mMetricsEnabled = getClusterConf().getBoolean(PropertyKey.USER_METRICS_COLLECTION_ENABLED);\n     if (mMetricsEnabled) {\n-      MetricsHeartbeatContext.asyncAddHeartbeat(getClientContext(), masterInquireClient);\n+      MetricsSystem.startSinks(getClusterConf().get(PropertyKey.METRICS_CONF_FILE));\n+      MetricsHeartbeatContext.addHeartbeat(getClientContext(), masterInquireClient);\n     }\n     mFileSystemMasterClientPool = new FileSystemMasterClientPool(mMasterClientContext);\n     mBlockMasterClientPool = new BlockMasterClientPool(mMasterClientContext);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyODA1Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r382328057", "bodyText": "10 seconds seems like a long shutdown timeout to me. For metrics, I would prefer it to have as little impact as possible on the shutdown of the JVM. Maybe 2-3 seconds is better?", "author": "ZacBlanco", "createdAt": "2020-02-21T00:01:41Z", "path": "core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java", "diffHunk": "@@ -52,6 +59,7 @@\n @ThreadSafe\n public class MetricsHeartbeatContext {\n   private static final Logger LOG = LoggerFactory.getLogger(MetricsHeartbeatContext.class);\n+  private static final long SHUTDOWN_TIMEOUT_MS = 10 * Constants.SECOND_MS;", "originalCommit": "f5fa84cc87ff666b7a2ce8320c0f6ca257293079", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java b/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\nindex ff81a70d72..756dd80f10 100644\n--- a/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\n+++ b/core/client/fs/src/main/java/alluxio/client/metrics/MetricsHeartbeatContext.java\n\n@@ -59,7 +51,6 @@ import java.util.concurrent.TimeUnit;\n @ThreadSafe\n public class MetricsHeartbeatContext {\n   private static final Logger LOG = LoggerFactory.getLogger(MetricsHeartbeatContext.class);\n-  private static final long SHUTDOWN_TIMEOUT_MS = 10 * Constants.SECOND_MS;\n \n   /** A map from master connection details to heartbeat context instances. */\n   private static final Map<MasterInquireClient.ConnectDetails, MetricsHeartbeatContext>\n"}}, {"oid": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "url": "https://github.com/Alluxio/alluxio/commit/f5abb10f03caefad7e09de2249bf76c65dd436fb", "message": "Put the getPrimaryRpc and loadConf logics into the ClientMasterSync heartbeat thread", "committedDate": "2020-02-21T01:59:01Z", "type": "commit"}, {"oid": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "url": "https://github.com/Alluxio/alluxio/commit/f5abb10f03caefad7e09de2249bf76c65dd436fb", "message": "Put the getPrimaryRpc and loadConf logics into the ClientMasterSync heartbeat thread", "committedDate": "2020-02-21T01:59:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2MTc5MQ==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r382361791", "bodyText": "Should we still create mMasterClient when we fail above? Since heartbeat will be called periodically, it might be easier to just no-op this heartbeat and try again next time?", "author": "calvinjia", "createdAt": "2020-02-21T02:07:48Z", "path": "core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java", "diffHunk": "@@ -85,4 +94,32 @@ public synchronized void heartbeat() {\n       SAMPLING_LOG.warn(\"Failed to send metrics to master: {}\", e.toString());\n     }\n   }\n+\n+  /**\n+   * Close the metrics master client.\n+   */\n+  public synchronized void close() {\n+    if (mMasterClient != null) {\n+      mMasterClient.close();\n+    }\n+  }\n+\n+  /**\n+   * Loads configuration and initialize metrics master client.\n+   */\n+  private void loadConfAndInitClient() {\n+    try {\n+      InetSocketAddress masterAddr = mInquireClient.getPrimaryRpcAddress();\n+      mContext.loadConf(masterAddr, true, true);\n+    } catch (UnavailableException e) {\n+      SAMPLING_LOG.error(\"Failed to get master address during initialization: {}\", e.toString());\n+    } catch (AlluxioStatusException ae) {\n+      SAMPLING_LOG.error(\"Failed to load configuration from \"\n+          + \"meta master during initialization: {}\", ae.toString());\n+    }\n+    mMasterClient = new RetryHandlingMetricsMasterClient(MasterClientContext", "originalCommit": "f5abb10f03caefad7e09de2249bf76c65dd436fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3MjQ1MA==", "url": "https://github.com/Alluxio/alluxio/pull/10936#discussion_r382672450", "bodyText": "Make sense, now retry load conf if fail and make heartbeat no-op if load conf failed", "author": "LuQQiu", "createdAt": "2020-02-21T16:17:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2MTc5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6f155b4f9149e44d259de0ab47c29165d05b242a", "chunk": "diff --git a/core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java b/core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java\nindex 96fff6a446..d4377251ae 100644\n--- a/core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java\n+++ b/core/client/fs/src/main/java/alluxio/client/metrics/ClientMasterSync.java\n\n@@ -105,21 +112,22 @@ public final class ClientMasterSync {\n   }\n \n   /**\n-   * Loads configuration and initialize metrics master client.\n+   * Loads configuration.\n+   *\n+   * @return true if successfully loaded configuration\n    */\n-  private void loadConfAndInitClient() {\n+  private boolean loadConf() {\n     try {\n       InetSocketAddress masterAddr = mInquireClient.getPrimaryRpcAddress();\n-      mContext.loadConf(masterAddr, true, true);\n+      mContext.loadConf(masterAddr, true, false);\n     } catch (UnavailableException e) {\n       SAMPLING_LOG.error(\"Failed to get master address during initialization: {}\", e.toString());\n+      return false;\n     } catch (AlluxioStatusException ae) {\n       SAMPLING_LOG.error(\"Failed to load configuration from \"\n           + \"meta master during initialization: {}\", ae.toString());\n+      return false;\n     }\n-    mMasterClient = new RetryHandlingMetricsMasterClient(MasterClientContext\n-        .newBuilder(mContext)\n-        .setMasterInquireClient(mInquireClient)\n-        .build());\n+    return true;\n   }\n }\n"}}, {"oid": "6f155b4f9149e44d259de0ab47c29165d05b242a", "url": "https://github.com/Alluxio/alluxio/commit/6f155b4f9149e44d259de0ab47c29165d05b242a", "message": "If loadConf failed, no heartbeat will be triggered", "committedDate": "2020-02-21T02:39:15Z", "type": "commit"}]}