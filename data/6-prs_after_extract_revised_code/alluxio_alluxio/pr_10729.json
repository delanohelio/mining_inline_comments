{"pr_number": 10729, "pr_title": "Add more tests for LocalCacheFileInStream", "pr_createdAt": "2020-01-10T23:07:52Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10729", "timeline": [{"oid": "9d854010307d65a8cfc4e3151cf9bf0c892cdacf", "url": "https://github.com/Alluxio/alluxio/commit/9d854010307d65a8cfc4e3151cf9bf0c892cdacf", "message": "Add test for partial read.", "committedDate": "2020-01-10T23:06:55Z", "type": "commit"}, {"oid": "493121c3f1593738f6366ad43f568509a5435a82", "url": "https://github.com/Alluxio/alluxio/commit/493121c3f1593738f6366ad43f568509a5435a82", "message": "Add more tests for LocalCacheFileInStream.", "committedDate": "2020-01-10T23:32:42Z", "type": "commit"}, {"oid": "a264d43fb241a311802d2e661d242cd83f5ac3d8", "url": "https://github.com/Alluxio/alluxio/commit/a264d43fb241a311802d2e661d242cd83f5ac3d8", "message": "Resolve conflicts.", "committedDate": "2020-01-13T21:01:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0OTg0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10729#discussion_r366049843", "bodyText": "nit: how about using ByteUtils.getIncreasingByteArray?", "author": "apc999", "createdAt": "2020-01-13T21:56:21Z", "path": "core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java", "diffHunk": "@@ -71,50 +73,140 @@\n       (int) sConf.getBytes(PropertyKey.USER_CLIENT_CACHE_PAGE_SIZE);\n \n   @Test\n-  public void readPageCacheMiss() throws Exception {\n-    Map<AlluxioURI, byte[]> files = new HashMap<>();\n-    AlluxioURI testFilename = new AlluxioURI(\"/test\");\n+  public void readFullPage() throws Exception {\n     int fileSize = PAGE_SIZE;\n     byte[] testData = generateData(fileSize);", "originalCommit": "a264d43fb241a311802d2e661d242cd83f5ac3d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3MTY0OA==", "url": "https://github.com/Alluxio/alluxio/pull/10729#discussion_r366071648", "bodyText": "Oh yes, I was looking for that", "author": "calvinjia", "createdAt": "2020-01-13T22:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0OTg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "8138a732e29608c8dfd987717f16bacc87ce7de1", "chunk": "diff --git a/core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java b/core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java\nindex 0db13e29c9..9953a57f96 100644\n--- a/core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java\n+++ b/core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java\n\n@@ -69,13 +70,13 @@ import java.util.concurrent.ThreadLocalRandom;\n public class LocalCacheFileInStreamTest {\n   private static AlluxioConfiguration sConf = new InstancedConfiguration(\n       ConfigurationUtils.defaults());\n-  protected static final int PAGE_SIZE =\n+  private static final int PAGE_SIZE =\n       (int) sConf.getBytes(PropertyKey.USER_CLIENT_CACHE_PAGE_SIZE);\n \n   @Test\n   public void readFullPage() throws Exception {\n     int fileSize = PAGE_SIZE;\n-    byte[] testData = generateData(fileSize);\n+    byte[] testData = BufferUtils.getIncreasingByteArray(fileSize);\n     ByteArrayCacheManager manager = new ByteArrayCacheManager();\n     LocalCacheFileInStream stream = setupWithSingleFile(testData, manager);\n \n"}}, {"oid": "8138a732e29608c8dfd987717f16bacc87ce7de1", "url": "https://github.com/Alluxio/alluxio/commit/8138a732e29608c8dfd987717f16bacc87ce7de1", "message": "Use utility method.", "committedDate": "2020-01-13T22:54:09Z", "type": "commit"}]}