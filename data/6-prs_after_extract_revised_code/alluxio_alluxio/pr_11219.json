{"pr_number": 11219, "pr_title": "Add ORC file input support", "pr_createdAt": "2020-03-30T17:03:36Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11219", "timeline": [{"oid": "c51bf16e9ac5c775cdd3532c77be1808d7bd0c79", "url": "https://github.com/Alluxio/alluxio/commit/c51bf16e9ac5c775cdd3532c77be1808d7bd0c79", "message": "ORC File type support", "committedDate": "2020-03-25T17:17:09Z", "type": "commit"}, {"oid": "82a731a18bc3f719cd6e9f7e0b01418621f50043", "url": "https://github.com/Alluxio/alluxio/commit/82a731a18bc3f719cd6e9f7e0b01418621f50043", "message": "License Headers", "committedDate": "2020-03-25T18:30:59Z", "type": "commit"}, {"oid": "6fda34e2457adfd4bec1cecf2dd1294e1f104c57", "url": "https://github.com/Alluxio/alluxio/commit/6fda34e2457adfd4bec1cecf2dd1294e1f104c57", "message": "fix build", "committedDate": "2020-03-25T18:37:52Z", "type": "commit"}, {"oid": "d610243e539c610557f8adc44f4bee09ca70bac8", "url": "https://github.com/Alluxio/alluxio/commit/d610243e539c610557f8adc44f4bee09ca70bac8", "message": "trying this", "committedDate": "2020-03-26T18:24:00Z", "type": "commit"}, {"oid": "69bc28d0e8790f985da8e463ce13675fb88cf84c", "url": "https://github.com/Alluxio/alluxio/commit/69bc28d0e8790f985da8e463ce13675fb88cf84c", "message": "improve types", "committedDate": "2020-03-26T23:57:04Z", "type": "commit"}, {"oid": "4d194bd83c321c2e3ed285a95819fcaa806700a6", "url": "https://github.com/Alluxio/alluxio/commit/4d194bd83c321c2e3ed285a95819fcaa806700a6", "message": "Work", "committedDate": "2020-03-27T18:26:30Z", "type": "commit"}, {"oid": "a20ff70319d43e674e519f52466f5cd30a7c666b", "url": "https://github.com/Alluxio/alluxio/commit/a20ff70319d43e674e519f52466f5cd30a7c666b", "message": "fix checkstyle", "committedDate": "2020-03-30T17:01:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzQ2NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401847465", "bodyText": "were these methods mainly copied from the previous location?", "author": "gpang", "createdAt": "2020-04-01T19:11:39Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/SchemaConversionUtils.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format;\n+\n+import alluxio.job.plan.transform.FieldSchema;\n+import alluxio.job.plan.transform.HiveConstants;\n+import alluxio.job.plan.transform.format.csv.CsvUtils;\n+import alluxio.job.plan.transform.format.csv.Decimal;\n+\n+import org.apache.avro.LogicalTypes;\n+import org.apache.avro.Schema;\n+import org.apache.avro.SchemaBuilder;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Utility Class for converting schema to Parquet.\n+ */\n+public class SchemaConversionUtils {", "originalCommit": "a20ff70319d43e674e519f52466f5cd30a7c666b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2MzI4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401863282", "bodyText": "Yep. These were mainly copied", "author": "bradyoo", "createdAt": "2020-04-01T19:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzQ2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0ODI2MA==", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401848260", "bodyText": "can you add javadoc comments for these 2 members?", "author": "gpang", "createdAt": "2020-04-01T19:13:08Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format.orc;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.job.plan.transform.format.JobPath;\n+import alluxio.job.plan.transform.format.ReadWriterUtils;\n+import alluxio.job.plan.transform.format.TableReader;\n+import alluxio.job.plan.transform.format.TableRow;\n+import alluxio.job.plan.transform.format.TableSchema;\n+\n+import com.google.common.io.Closer;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch;\n+import org.apache.orc.OrcFile;\n+import org.apache.orc.Reader;\n+import org.apache.orc.RecordReader;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+/**\n+ * The Orc reader.\n+ */\n+public final class OrcReader implements TableReader {\n+\n+  private final Closer mCloser;\n+  private final OrcSchema mSchema;\n+  private final Reader mReader;\n+  private final RecordReader mRows;\n+  private final List<String> mFieldNames;\n+\n+  private VectorizedRowBatch mCurrentBatch;", "originalCommit": "a20ff70319d43e674e519f52466f5cd30a7c666b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c9458764520ffa2b6355f11e979e1c56a6115e3", "chunk": "diff --git a/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java b/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java\nindex e55c480575..8cb1c5f39c 100644\n--- a/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java\n+++ b/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java\n\n@@ -39,7 +39,13 @@ public final class OrcReader implements TableReader {\n   private final RecordReader mRows;\n   private final List<String> mFieldNames;\n \n+  /**\n+   * The current processing batch of the Orc reader for the read() operation.\n+   */\n   private VectorizedRowBatch mCurrentBatch;\n+  /**\n+   * The row position inside the vectorized row batch to return next for read().\n+   */\n   private int mCurrentBatchPosition;\n \n   private OrcReader(JobPath inputPath) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0OTE4Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401849186", "bodyText": "can this be initialized with the size?", "author": "gpang", "createdAt": "2020-04-01T19:14:41Z", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format.orc;\n+\n+import alluxio.job.plan.transform.FieldSchema;\n+import alluxio.job.plan.transform.format.SchemaConversionUtils;\n+import alluxio.job.plan.transform.format.TableSchema;\n+import alluxio.job.plan.transform.format.parquet.ParquetSchema;\n+\n+import org.apache.avro.Schema;\n+import org.apache.orc.Reader;\n+import org.apache.orc.TypeDescription;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * The Orc Schema.\n+ */\n+public class OrcSchema implements TableSchema {\n+  private final ArrayList<FieldSchema> mAlluxioSchema;\n+\n+  private final Schema mWriteSchema;\n+\n+  /**\n+   * Default constructor for OrcSchema.\n+   * @param reader the orc reader\n+   */\n+  public OrcSchema(Reader reader) throws IOException {\n+    mAlluxioSchema = new ArrayList<>();", "originalCommit": "a20ff70319d43e674e519f52466f5cd30a7c666b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3c9458764520ffa2b6355f11e979e1c56a6115e3", "chunk": "diff --git a/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java b/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java\nindex b12dc5bb93..f0aaf1b9ba 100644\n--- a/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java\n+++ b/job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java\n\n@@ -37,9 +37,8 @@ public class OrcSchema implements TableSchema {\n    * @param reader the orc reader\n    */\n   public OrcSchema(Reader reader) throws IOException {\n-    mAlluxioSchema = new ArrayList<>();\n-\n     final List<String> fieldNames = reader.getSchema().getFieldNames();\n+    mAlluxioSchema = new ArrayList<>(fieldNames.size());\n     for (int i = 0; i < fieldNames.size(); i++) {\n       final String fieldName = fieldNames.get(i);\n \n"}}, {"oid": "3c9458764520ffa2b6355f11e979e1c56a6115e3", "url": "https://github.com/Alluxio/alluxio/commit/3c9458764520ffa2b6355f11e979e1c56a6115e3", "message": "feedback", "committedDate": "2020-04-01T21:57:42Z", "type": "commit"}, {"oid": "af3ef236b15e48312fc7635ab0a7670f23671734", "url": "https://github.com/Alluxio/alluxio/commit/af3ef236b15e48312fc7635ab0a7670f23671734", "message": "Added OrcReader test", "committedDate": "2020-04-02T16:45:53Z", "type": "commit"}, {"oid": "97a22296d35e3678ac708053d4602545a94120b2", "url": "https://github.com/Alluxio/alluxio/commit/97a22296d35e3678ac708053d4602545a94120b2", "message": "checkstyle", "committedDate": "2020-04-02T17:15:51Z", "type": "commit"}]}