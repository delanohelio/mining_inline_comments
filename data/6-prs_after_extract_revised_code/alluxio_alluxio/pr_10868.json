{"pr_number": 10868, "pr_title": "Refactor the client cache to use string file id", "pr_createdAt": "2020-02-07T23:49:17Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10868", "timeline": [{"oid": "e5651eca5a46235c72fa3cc176a6f96639a8d14d", "url": "https://github.com/Alluxio/alluxio/commit/e5651eca5a46235c72fa3cc176a6f96639a8d14d", "message": "refactor the client cache to use string file id", "committedDate": "2020-02-11T21:32:51Z", "type": "commit"}, {"oid": "aa5f6ab0cde6949fbdb6bfb103c29160f212651f", "url": "https://github.com/Alluxio/alluxio/commit/aa5f6ab0cde6949fbdb6bfb103c29160f212651f", "message": "fix checkstyles", "committedDate": "2020-02-11T21:34:55Z", "type": "commit"}, {"oid": "7bfb4dd538837e3488a970fea99032c1686d99bc", "url": "https://github.com/Alluxio/alluxio/commit/7bfb4dd538837e3488a970fea99032c1686d99bc", "message": "fix FileIno equality", "committedDate": "2020-02-11T21:34:56Z", "type": "commit"}, {"oid": "d78b78dbd05de5d2a552e96a3ac53e07b219829d", "url": "https://github.com/Alluxio/alluxio/commit/d78b78dbd05de5d2a552e96a3ac53e07b219829d", "message": "fix unit test", "committedDate": "2020-02-11T21:38:51Z", "type": "commit"}, {"oid": "d78b78dbd05de5d2a552e96a3ac53e07b219829d", "url": "https://github.com/Alluxio/alluxio/commit/d78b78dbd05de5d2a552e96a3ac53e07b219829d", "message": "fix unit test", "committedDate": "2020-02-11T21:38:51Z", "type": "forcePushed"}, {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0", "url": "https://github.com/Alluxio/alluxio/commit/8356f8da93560af872e511a07d8bc6ae1ba16aa0", "message": "fix read small page and add test", "committedDate": "2020-02-12T00:15:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3ODc0NA==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377978744", "bodyText": "Good catch", "author": "calvinjia", "createdAt": "2020-02-12T00:25:54Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -112,12 +112,13 @@ public int read(byte[] b, int off, int len) throws IOException {\n       return -1;\n     }\n     int bytesRead = 0;\n+    long lengthToRead = Math.min(len, mStatus.getLength() - mPosition);\n     // for each page, check if it is available in the cache\n-    while (bytesRead < len && mPosition < mStatus.getLength()) {\n+    while (bytesRead < lengthToRead) {\n       long currentPage = mPosition / mPageSize;\n       int currentPageOffset = (int) (mPosition % mPageSize);\n-      int bytesLeftInPage = (int) Math.min(mPageSize - currentPageOffset, len - bytesRead);\n-      PageId pageId = new PageId(mStatus.getFileId(), currentPage);\n+      int bytesLeftInPage = (int) Math.min(mPageSize - currentPageOffset, lengthToRead - bytesRead);", "originalCommit": "8356f8da93560af872e511a07d8bc6ae1ba16aa0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTA3OQ==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377979079", "bodyText": "Is it intentional to reverse the key order?", "author": "calvinjia", "createdAt": "2020-02-12T00:27:02Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -151,9 +155,10 @@ public void close() {\n   }\n \n   private static byte[] getKeyFromPageId(PageId pageId) {\n-    ByteBuffer buf = ByteBuffer.allocate(KEY_LEN);\n-    buf.putLong(pageId.getFileId());\n+    byte[] fileId = pageId.getFileId().getBytes();\n+    ByteBuffer buf = ByteBuffer.allocate(Long.BYTES + fileId.length);\n     buf.putLong(pageId.getPageIndex());\n+    buf.put(fileId);", "originalCommit": "8356f8da93560af872e511a07d8bc6ae1ba16aa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MDM5NA==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377990394", "bodyText": "yeah, it is easier to read the rest of the buffer as string when we decode the page id from byte array.", "author": "bf8086", "createdAt": "2020-02-12T01:07:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTA3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377979347", "bodyText": "Do you know how much more expensive this is compared to getLong?", "author": "calvinjia", "createdAt": "2020-02-12T00:27:45Z", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -163,12 +168,12 @@ public void close() {\n    */\n   @Nullable\n   private static PageId getPageIdFromKey(byte[] key) {\n-    if (key.length != KEY_LEN) {\n+    if (key.length < Long.BYTES) {\n       return null;\n     }\n     ByteBuffer buf = ByteBuffer.wrap(key);\n-    long fileId = buf.getLong();\n     long pageIndex = buf.getLong();\n+    String fileId = Charset.defaultCharset().decode(buf).toString();", "originalCommit": "8356f8da93560af872e511a07d8bc6ae1ba16aa0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MTQzMw==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377991433", "bodyText": "Probably a lot more expensive. Not sure how much it impact the overall performance though.", "author": "bf8086", "createdAt": "2020-02-12T01:11:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MjI3NQ==", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377992275", "bodyText": "yeah something we can keep in mind if performance is an issue", "author": "calvinjia", "createdAt": "2020-02-12T01:15:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw=="}], "type": "inlineReview", "revised_code": null}]}