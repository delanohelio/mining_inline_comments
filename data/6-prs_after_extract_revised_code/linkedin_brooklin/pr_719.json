{"pr_number": 719, "pr_title": " Ignore lock node during orphan connector node cleanup", "pr_createdAt": "2020-06-02T17:48:04Z", "pr_url": "https://github.com/linkedin/brooklin/pull/719", "timeline": [{"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "message": "Merge pull request #1 from linkedin/master\n\nPull latest", "committedDate": "2019-11-18T20:06:44Z", "type": "commit"}, {"oid": "b164832772507699fefa026c1864fc39667673da", "url": "https://github.com/linkedin/brooklin/commit/b164832772507699fefa026c1864fc39667673da", "message": "Merge branch 'master' of github.com:vmaheshw/Brooklin", "committedDate": "2020-05-22T20:12:24Z", "type": "commit"}, {"oid": "2457aa467453eacf7114ff2eaa4d01459009d927", "url": "https://github.com/linkedin/brooklin/commit/2457aa467453eacf7114ff2eaa4d01459009d927", "message": "Ignore lock node during orphan connector node cleanup", "committedDate": "2020-06-02T17:45:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MDk3NQ==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434240975", "bodyText": "Did you mean to make it package private? That's less accessible than protected and would still allow you to access it in ZkAdapter.", "author": "ahmedahamid", "createdAt": "2020-06-03T00:11:28Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java", "diffHunk": "@@ -60,11 +60,15 @@ private KeyBuilder() {\n    */\n   private static final String DATASTREAM_TASK_CONFIG = CONNECTOR + \"/%s/config\";\n \n+  /**\n+   * lock node\n+   */\n+  protected static final String DATASTREAM_TASK_LOCK_ROOT_NAME = \"lock\";", "originalCommit": "2457aa467453eacf7114ff2eaa4d01459009d927", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5ODIwMA==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434898200", "bodyText": "done", "author": "vmaheshw", "createdAt": "2020-06-03T22:45:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0MDk3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "be975c2dc6f638365a38a46888a5dab6f3683a33", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java b/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\nindex 82244a08..9f5d870d 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\n\n@@ -61,9 +61,9 @@ public final class KeyBuilder {\n   private static final String DATASTREAM_TASK_CONFIG = CONNECTOR + \"/%s/config\";\n \n   /**\n-   * lock node\n+   * Lock node\n    */\n-  protected static final String DATASTREAM_TASK_LOCK_ROOT_NAME = \"lock\";\n+  static final String DATASTREAM_TASK_LOCK_ROOT_NAME = \"lock\";\n \n   /**\n    * Task lock root path under connectorType\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTAxMA==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434245010", "bodyText": "Should we also assert that one znode left is actually lock?", "author": "ahmedahamid", "createdAt": "2020-06-03T00:27:13Z", "path": "datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java", "diffHunk": "@@ -758,32 +765,37 @@ public void testDeleteTasksWithPrefix() {\n     Mockito.verify(zkClient, Mockito.never()).getChildren(any(), anyBoolean());\n \n     List<String> leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     updateInstanceAssignment(adapter, adapter.getInstanceName(), Collections.emptyList());\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 0);\n+    Assert.assertEquals(leftOverTasks.size(), 1);", "originalCommit": "2457aa467453eacf7114ff2eaa4d01459009d927", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5NzYyOQ==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434897629", "bodyText": "done.", "author": "vmaheshw", "createdAt": "2020-06-03T22:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTAxMA=="}], "type": "inlineReview", "revised_code": {"commit": "be975c2dc6f638365a38a46888a5dab6f3683a33", "chunk": "diff --git a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\nindex f6d093b8..42423616 100644\n--- a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n+++ b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n\n@@ -791,6 +791,7 @@ public class TestZkAdapter {\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n     Assert.assertEquals(leftOverTasks.size(), 1);\n+    Assert.assertEquals(leftOverTasks.get(0), KeyBuilder.DATASTREAM_TASK_LOCK_ROOT_NAME);\n \n     // lock root node does not get deleted, once created.\n     adapter.releaseTask(lockTask);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTk1NA==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434245954", "bodyText": "This part seems a little extraneous.\nShould this test really assert that lock remains after releaseTask()? All it cares about is that lock survives cleanUpOrphanConnectorTasks(). On the other hand, if we change ZkAdapter in the future to have it delete lock if it's no longer needed, why should this test start failing then?", "author": "ahmedahamid", "createdAt": "2020-06-03T00:30:44Z", "path": "datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java", "diffHunk": "@@ -758,32 +765,37 @@ public void testDeleteTasksWithPrefix() {\n     Mockito.verify(zkClient, Mockito.never()).getChildren(any(), anyBoolean());\n \n     List<String> leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     updateInstanceAssignment(adapter, adapter.getInstanceName(), Collections.emptyList());\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 0);\n+    Assert.assertEquals(leftOverTasks.size(), 1);\n+\n+    // lock root node does not get deleted, once created.\n+    adapter.releaseTask(lockTask);\n+    leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n+    Assert.assertEquals(leftOverTasks.size(), 1);", "originalCommit": "2457aa467453eacf7114ff2eaa4d01459009d927", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1MTYyMw==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434251623", "bodyText": "I feel this part is okay to have. If the behavior changes in the future, whoever is making the change will get alerted and get aware of this existing behavior ( which is not very obvious) and help in either fixing the test or their new behavior.", "author": "vmaheshw", "createdAt": "2020-06-03T00:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "be975c2dc6f638365a38a46888a5dab6f3683a33", "chunk": "diff --git a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\nindex f6d093b8..42423616 100644\n--- a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n+++ b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n\n@@ -791,6 +791,7 @@ public class TestZkAdapter {\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n     Assert.assertEquals(leftOverTasks.size(), 1);\n+    Assert.assertEquals(leftOverTasks.get(0), KeyBuilder.DATASTREAM_TASK_LOCK_ROOT_NAME);\n \n     // lock root node does not get deleted, once created.\n     adapter.releaseTask(lockTask);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyOTA0NQ==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434229045", "bodyText": "nit: Lock node", "author": "somandal", "createdAt": "2020-06-02T23:28:18Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java", "diffHunk": "@@ -60,11 +60,15 @@ private KeyBuilder() {\n    */\n   private static final String DATASTREAM_TASK_CONFIG = CONNECTOR + \"/%s/config\";\n \n+  /**\n+   * lock node", "originalCommit": "2457aa467453eacf7114ff2eaa4d01459009d927", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5Nzc1Mw==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434897753", "bodyText": "done", "author": "vmaheshw", "createdAt": "2020-06-03T22:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyOTA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "be975c2dc6f638365a38a46888a5dab6f3683a33", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java b/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\nindex 82244a08..9f5d870d 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/zk/KeyBuilder.java\n\n@@ -61,9 +61,9 @@ public final class KeyBuilder {\n   private static final String DATASTREAM_TASK_CONFIG = CONNECTOR + \"/%s/config\";\n \n   /**\n-   * lock node\n+   * Lock node\n    */\n-  protected static final String DATASTREAM_TASK_LOCK_ROOT_NAME = \"lock\";\n+  static final String DATASTREAM_TASK_LOCK_ROOT_NAME = \"lock\";\n \n   /**\n    * Task lock root path under connectorType\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyOTk5MA==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434229990", "bodyText": "I'm a bit confused, when we call releaseTask it should delete the lock node. Is that not happening? Or is this because the ZkAdapter used here is not real? Or is this validating the connector/lock is still existing, without looking at what's in it? If the last one, then we may want to verify that we have a node such as connector/lock/<task>?", "author": "somandal", "createdAt": "2020-06-02T23:31:38Z", "path": "datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java", "diffHunk": "@@ -758,32 +765,37 @@ public void testDeleteTasksWithPrefix() {\n     Mockito.verify(zkClient, Mockito.never()).getChildren(any(), anyBoolean());\n \n     List<String> leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     updateInstanceAssignment(adapter, adapter.getInstanceName(), Collections.emptyList());\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(false);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 2);\n+    Assert.assertEquals(leftOverTasks.size(), 3);\n \n     adapter.cleanUpOrphanConnectorTasks(true);\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n-    Assert.assertEquals(leftOverTasks.size(), 0);\n+    Assert.assertEquals(leftOverTasks.size(), 1);\n+\n+    // lock root node does not get deleted, once created.\n+    adapter.releaseTask(lockTask);", "originalCommit": "2457aa467453eacf7114ff2eaa4d01459009d927", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5ODE0Mg==", "url": "https://github.com/linkedin/brooklin/pull/719#discussion_r434898142", "bodyText": "the releaseTask deletes the connector/lock/. The node connector/lock will not get deleted.", "author": "vmaheshw", "createdAt": "2020-06-03T22:44:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyOTk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "be975c2dc6f638365a38a46888a5dab6f3683a33", "chunk": "diff --git a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\nindex f6d093b8..42423616 100644\n--- a/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n+++ b/datastream-server/src/test/java/com/linkedin/datastream/server/zk/TestZkAdapter.java\n\n@@ -791,6 +791,7 @@ public class TestZkAdapter {\n \n     leftOverTasks = zkClient.getChildren(KeyBuilder.connector(testCluster, connectorType));\n     Assert.assertEquals(leftOverTasks.size(), 1);\n+    Assert.assertEquals(leftOverTasks.get(0), KeyBuilder.DATASTREAM_TASK_LOCK_ROOT_NAME);\n \n     // lock root node does not get deleted, once created.\n     adapter.releaseTask(lockTask);\n"}}, {"oid": "be975c2dc6f638365a38a46888a5dab6f3683a33", "url": "https://github.com/linkedin/brooklin/commit/be975c2dc6f638365a38a46888a5dab6f3683a33", "message": "Address review comments", "committedDate": "2020-06-03T01:11:34Z", "type": "commit"}]}