{"pr_number": 697, "pr_title": "Improve partitionV2 logging in DatastreamTaskImpl.", "pr_createdAt": "2020-04-06T17:04:10Z", "pr_url": "https://github.com/linkedin/brooklin/pull/697", "timeline": [{"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "message": "Merge pull request #1 from linkedin/master\n\nPull latest", "committedDate": "2019-11-18T20:06:44Z", "type": "commit"}, {"oid": "0acfc3b283728d8fd72495cad2eec60f95140bc1", "url": "https://github.com/linkedin/brooklin/commit/0acfc3b283728d8fd72495cad2eec60f95140bc1", "message": "Merge branch 'master' of github.com:linkedin/brooklin into HEAD", "committedDate": "2020-04-06T02:01:20Z", "type": "commit"}, {"oid": "adecb62138b4751e0a735c8f83487729d6be346f", "url": "https://github.com/linkedin/brooklin/commit/adecb62138b4751e0a735c8f83487729d6be346f", "message": "Improve partitionV2 logging in DatastreamTaskImpl", "committedDate": "2020-04-06T16:59:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDQyOQ==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404274429", "bodyText": "I think more context is necessary here for when _partitions vs. _partitionsV2 is used. Partition managed uses _partitionsV2 and puts in the full name of the Topic-Partition, due to which the log cannot be reduced in this way.\nI'd also question whether we should avoid populating _partitionsV2 altogether for any tasks that are not Partition managed. This can be explored as part of another PR though (maybe open a ticket for this)", "author": "somandal", "createdAt": "2020-04-06T17:44:20Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.", "originalCommit": "adecb62138b4751e0a735c8f83487729d6be346f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzEzOQ==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327139", "bodyText": "Added comments. Also created ticket to investigate.", "author": "vmaheshw", "createdAt": "2020-04-06T19:13:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NDQyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "266df6749cb8df13ad455464534cd9a323aa02fe", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\nindex 12253d38..d2b0ace6 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n\n@@ -436,24 +438,20 @@ public class DatastreamTaskImpl implements DatastreamTask {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n-    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n     if (_partitions.size() > 0) {\n       try {\n         List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n-\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n+        partitionsV2FormatLog = LogUtils.logNumberArrayInRange(partitionList);\n       } catch (NumberFormatException e) {\n         LOG.error(e.getMessage());\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n       }\n     }\n     return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-        _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n+        _connectorType, partitionsV2FormatLog, LogUtils.logNumberArrayInRange(_partitions),\n         _dependencies);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTc4MA==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404275780", "bodyText": "The format string is used in 3 places now. Create a local variable/member constant FORMAT_STRING?", "author": "somandal", "createdAt": "2020-04-06T17:46:32Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "originalCommit": "adecb62138b4751e0a735c8f83487729d6be346f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzQ0MQ==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327441", "bodyText": "Redid the logic. Format string is in 1 place now.", "author": "vmaheshw", "createdAt": "2020-04-06T19:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI3NTc4MA=="}], "type": "inlineReview", "revised_code": {"commit": "266df6749cb8df13ad455464534cd9a323aa02fe", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\nindex 12253d38..d2b0ace6 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n\n@@ -436,24 +438,20 @@ public class DatastreamTaskImpl implements DatastreamTask {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n-    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n     if (_partitions.size() > 0) {\n       try {\n         List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n-\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n+        partitionsV2FormatLog = LogUtils.logNumberArrayInRange(partitionList);\n       } catch (NumberFormatException e) {\n         LOG.error(e.getMessage());\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n       }\n     }\n     return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-        _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n+        _connectorType, partitionsV2FormatLog, LogUtils.logNumberArrayInRange(_partitions),\n         _dependencies);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjM0OQ==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404282349", "bodyText": "Remove the return log from here. It's the same as the one outside the if() block. Let it drop into the return outside the if() block.", "author": "somandal", "createdAt": "2020-04-06T17:57:16Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +436,25 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n+    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    if (_partitions.size() > 0) {\n+      try {\n+        List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n+\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n+            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n+            _dependencies);\n+      } catch (NumberFormatException e) {\n+        LOG.error(e.getMessage());\n+        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),", "originalCommit": "adecb62138b4751e0a735c8f83487729d6be346f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMyNzI4NA==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404327284", "bodyText": "Redid the logic.", "author": "vmaheshw", "createdAt": "2020-04-06T19:14:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI4MjM0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "266df6749cb8df13ad455464534cd9a323aa02fe", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\nindex 12253d38..d2b0ace6 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java\n\n@@ -436,24 +438,20 @@ public class DatastreamTaskImpl implements DatastreamTask {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    // If _partitions is populated, it is replicated into _partitionsV2 for assignment. However,\n-    // if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n     if (_partitions.size() > 0) {\n       try {\n         List<Integer> partitionList = _partitionsV2.stream().map(Integer::parseInt).collect(Collectors.toList());\n-\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, LogUtils.logNumberArrayInRange(partitionList), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n+        partitionsV2FormatLog = LogUtils.logNumberArrayInRange(partitionList);\n       } catch (NumberFormatException e) {\n         LOG.error(e.getMessage());\n-        return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-            _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n-            _dependencies);\n       }\n     }\n     return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(),\n-        _connectorType, String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions),\n+        _connectorType, partitionsV2FormatLog, LogUtils.logNumberArrayInRange(_partitions),\n         _dependencies);\n   }\n \n"}}, {"oid": "266df6749cb8df13ad455464534cd9a323aa02fe", "url": "https://github.com/linkedin/brooklin/commit/266df6749cb8df13ad455464534cd9a323aa02fe", "message": "Address Review Comments", "committedDate": "2020-04-06T19:13:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4ODg2NQ==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404388865", "bodyText": "can this check be (if (!StringUtils.isBlank(_partitionsV2)) since only v2 is being referenced within the conditional statement?", "author": "DEEPTHIKORAT", "createdAt": "2020-04-06T21:07:45Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/DatastreamTaskImpl.java", "diffHunk": "@@ -436,8 +438,21 @@ public int hashCode() {\n   @Override\n   public String toString() {\n     // toString() is mainly for logging purpose, feel free to modify the content/format\n-    return String.format(\"%s(%s), partitionsV2=%s, partitions=%s, dependencies=%s\", getDatastreamTaskName(), _connectorType,\n-        String.join(\",\", _partitionsV2), LogUtils.logNumberArrayInRange(_partitions), _dependencies);\n+    // When DatastreamTaskImpl is created using constructor that passes _partitionsV2, _partitions is not populated.\n+    // When DatastreamTaskImpl is created using constructor that passes _partitions, _partitionsV2 is also populated.\n+    // So, if _partitions is not populated, we can assume that only _partitionsV2 is populated.\n+    String partitionsV2FormatLog = String.join(\",\", _partitionsV2);\n+    if (_partitions.size() > 0) {", "originalCommit": "266df6749cb8df13ad455464534cd9a323aa02fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM5MTcwMA==", "url": "https://github.com/linkedin/brooklin/pull/697#discussion_r404391700", "bodyText": "Thanks for the explanation. ParititonsV2 is topic-partitions or stringified partitions based on low-level or high-level tasks.", "author": "DEEPTHIKORAT", "createdAt": "2020-04-06T21:13:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4ODg2NQ=="}], "type": "inlineReview", "revised_code": null}]}