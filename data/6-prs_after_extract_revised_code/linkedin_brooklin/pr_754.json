{"pr_number": 754, "pr_title": "Add a PollDurationMs metric to AbstractKafkaBasedConnectorTask", "pr_createdAt": "2020-09-23T02:56:35Z", "pr_url": "https://github.com/linkedin/brooklin/pull/754", "timeline": [{"oid": "78393398ec240646dabcd3f3227c73daacdf5c57", "url": "https://github.com/linkedin/brooklin/commit/78393398ec240646dabcd3f3227c73daacdf5c57", "message": "Add a PollDurationMs metric to AbstractKafkaBasedConnectorTask", "committedDate": "2020-09-23T02:52:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAzNzEyOA==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494037128", "bodyText": "Do you think refactoring createKafkaBasedConnectorTaskMetrics with additional boolean which decides the creation of histogram for poll duration will make more sense? Then in the future, if we decide to enable it for other tasks, we can just set the boolean to true?", "author": "vmaheshw", "createdAt": "2020-09-24T04:51:06Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java", "diffHunk": "@@ -478,6 +489,10 @@ protected void trackEventsProcessedProgress(int recordCount) {\n       }\n       _consumerMetrics.updateNumPolls(1);\n       _consumerMetrics.updateEventCountsPerPoll(records.count());\n+      if (_enablePollDurationMsMetric) {\n+        _dynamicMetricsManager.createOrUpdateHistogram(_metricsPrefix, _datastreamName, POLL_DURATION_MS,", "originalCommit": "78393398ec240646dabcd3f3227c73daacdf5c57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NjgwOA==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494376808", "bodyText": "So the problem is that even if I use the boolean in createKafkaBasedConnectorTaskMetrics to create the metric, I'll have to update the metric here, and update it under the same boolean. So I thought why not just create the metric lazily. Plus, this metric lives in AbstractKafkaBasedConnectorTask, which means that any connectors that extend this class will get this metric already. Each connector can also decide they don't want this metric, and disable it via config.\nDo let me know if I misunderstood your suggestion, and if you're okay with me not adding code to register this metric in createKafkaBasedConnectorTaskMetrics.", "author": "somandal", "createdAt": "2020-09-24T14:42:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAzNzEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0NDQzMA==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494644430", "bodyText": "Resolving after offline discussion.", "author": "vmaheshw", "createdAt": "2020-09-24T22:26:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAzNzEyOA=="}], "type": "inlineReview", "revised_code": {"commit": "061024535c9fe00f0f4f97cc03c400df0e12f323", "chunk": "diff --git a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java\nindex cd5efbd3..793f0516 100644\n--- a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java\n+++ b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/AbstractKafkaBasedConnectorTask.java\n\n@@ -489,7 +489,7 @@ abstract public class AbstractKafkaBasedConnectorTask implements Runnable, Consu\n       }\n       _consumerMetrics.updateNumPolls(1);\n       _consumerMetrics.updateEventCountsPerPoll(records.count());\n-      if (_enablePollDurationMsMetric) {\n+      if (_enablePollDurationMillisMetric) {\n         _dynamicMetricsManager.createOrUpdateHistogram(_metricsPrefix, _datastreamName, POLL_DURATION_MS,\n             pollDurationMillis);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAzNzUwMA==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494037500", "bodyText": "nit: Looking at the naming convention used in this file, MS is named as MILLIS", "author": "vmaheshw", "createdAt": "2020-09-24T04:52:28Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorConfig.java", "diffHunk": "@@ -31,6 +31,7 @@\n   public static final String CONFIG_RETRY_SLEEP_DURATION_MILLIS = \"retrySleepDurationMs\";\n   public static final String CONFIG_PAUSE_PARTITION_ON_ERROR = \"pausePartitionOnError\";\n   public static final String CONFIG_PAUSE_ERROR_PARTITION_DURATION_MILLIS = \"pauseErrorPartitionDurationMs\";\n+  public static final String CONFIG_ENABLE_POLL_DURATION_MS_METRIC = \"enablePollDurationMsMetric\";", "originalCommit": "78393398ec240646dabcd3f3227c73daacdf5c57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4MTUzMw==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494381533", "bodyText": "done", "author": "somandal", "createdAt": "2020-09-24T14:48:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAzNzUwMA=="}], "type": "inlineReview", "revised_code": {"commit": "061024535c9fe00f0f4f97cc03c400df0e12f323", "chunk": "diff --git a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorConfig.java b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorConfig.java\nindex 3dba92ca..f79e1ebf 100644\n--- a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorConfig.java\n+++ b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorConfig.java\n\n@@ -31,7 +31,7 @@ public class KafkaBasedConnectorConfig {\n   public static final String CONFIG_RETRY_SLEEP_DURATION_MILLIS = \"retrySleepDurationMs\";\n   public static final String CONFIG_PAUSE_PARTITION_ON_ERROR = \"pausePartitionOnError\";\n   public static final String CONFIG_PAUSE_ERROR_PARTITION_DURATION_MILLIS = \"pauseErrorPartitionDurationMs\";\n-  public static final String CONFIG_ENABLE_POLL_DURATION_MS_METRIC = \"enablePollDurationMsMetric\";\n+  public static final String CONFIG_ENABLE_POLL_DURATION_MILLIS_METRIC = \"enablePollDurationMsMetric\";\n   public static final String DAEMON_THREAD_INTERVAL_SECONDS = \"daemonThreadIntervalInSeconds\";\n   public static final String NON_GOOD_STATE_THRESHOLD_MILLIS = \"nonGoodStateThresholdMs\";\n   public static final String PROCESSING_DELAY_LOG_THRESHOLD_MILLIS = \"processingDelayLogThreshold\";\n"}}, {"oid": "061024535c9fe00f0f4f97cc03c400df0e12f323", "url": "https://github.com/linkedin/brooklin/commit/061024535c9fe00f0f4f97cc03c400df0e12f323", "message": "Address review comments", "committedDate": "2020-09-24T14:48:13Z", "type": "commit"}, {"oid": "1be1e64ddd09541be18ba9266757ac244e9aa81d", "url": "https://github.com/linkedin/brooklin/commit/1be1e64ddd09541be18ba9266757ac244e9aa81d", "message": "Move poll duration metric to KafkaBasedConnectorTaskMetrics", "committedDate": "2020-09-24T21:21:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MDgzNw==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494640837", "bodyText": "nit:Can you use _pollDurationMs directly and make _enablePollDurationMillisMetric local?", "author": "vmaheshw", "createdAt": "2020-09-24T22:16:11Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java", "diffHunk": "@@ -99,6 +111,10 @@ public void deregisterMetrics() {\n     DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, NUM_AUTO_PAUSED_PARTITIONS_ON_INFLIGHT_MESSAGES);\n     DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, NUM_AUTO_PAUSED_PARTITIONS_WAITING_FOR_DEST_TOPIC);\n     DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, NUM_TOPICS);\n+\n+    if (_enablePollDurationMillisMetric) {", "originalCommit": "1be1e64ddd09541be18ba9266757ac244e9aa81d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MzkwMQ==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494643901", "bodyText": "done", "author": "somandal", "createdAt": "2020-09-24T22:24:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MDgzNw=="}], "type": "inlineReview", "revised_code": {"commit": "2e2554e660133f5ec9b5aad06244538d2cc14ccd", "chunk": "diff --git a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\nindex 6f6a2d72..4498ef71 100644\n--- a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\n+++ b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\n\n@@ -112,7 +110,7 @@ public class KafkaBasedConnectorTaskMetrics extends CommonConnectorMetrics {\n     DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, NUM_AUTO_PAUSED_PARTITIONS_WAITING_FOR_DEST_TOPIC);\n     DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, NUM_TOPICS);\n \n-    if (_enablePollDurationMillisMetric) {\n+    if (_pollDurationMsMetric != null) {\n       DYNAMIC_METRICS_MANAGER.unregisterMetric(_className, _key, POLL_DURATION_MS);\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTIxMA==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494641210", "bodyText": "nit: please change the name from _pollDurationMs to _pollDurationMsMetric. the name is confusing.", "author": "vmaheshw", "createdAt": "2020-09-24T22:17:11Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java", "diffHunk": "@@ -52,7 +56,11 @@\n   private final AtomicLong _numAutoPausedPartitionsAwaitingDestTopic = new AtomicLong(0);\n   private final AtomicLong _numTopics = new AtomicLong(0);\n \n-  KafkaBasedConnectorTaskMetrics(String className, String metricsKey, Logger errorLogger) {\n+  private final boolean _enablePollDurationMillisMetric;\n+  private final Histogram _pollDurationMs;", "originalCommit": "1be1e64ddd09541be18ba9266757ac244e9aa81d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0Mzg3Ng==", "url": "https://github.com/linkedin/brooklin/pull/754#discussion_r494643876", "bodyText": "done", "author": "somandal", "createdAt": "2020-09-24T22:24:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2e2554e660133f5ec9b5aad06244538d2cc14ccd", "chunk": "diff --git a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\nindex 6f6a2d72..4498ef71 100644\n--- a/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\n+++ b/datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaBasedConnectorTaskMetrics.java\n\n@@ -56,8 +56,7 @@ public class KafkaBasedConnectorTaskMetrics extends CommonConnectorMetrics {\n   private final AtomicLong _numAutoPausedPartitionsAwaitingDestTopic = new AtomicLong(0);\n   private final AtomicLong _numTopics = new AtomicLong(0);\n \n-  private final boolean _enablePollDurationMillisMetric;\n-  private final Histogram _pollDurationMs;\n+  private final Histogram _pollDurationMsMetric;\n \n   KafkaBasedConnectorTaskMetrics(String className, String metricsKey, Logger errorLogger,\n       boolean enablePollDurationMillisMetric) {\n"}}, {"oid": "2e2554e660133f5ec9b5aad06244538d2cc14ccd", "url": "https://github.com/linkedin/brooklin/commit/2e2554e660133f5ec9b5aad06244538d2cc14ccd", "message": "Address review comments", "committedDate": "2020-09-24T22:19:42Z", "type": "commit"}]}