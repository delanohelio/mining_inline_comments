{"pr_number": 782, "pr_title": "Fix StickyMulticastStrategy to not assign more tasks than expected.", "pr_createdAt": "2020-11-18T06:51:04Z", "pr_url": "https://github.com/linkedin/brooklin/pull/782", "timeline": [{"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "message": "Merge pull request #1 from linkedin/master\n\nPull latest", "committedDate": "2019-11-18T20:06:44Z", "type": "commit"}, {"oid": "79ffa91188aa16ebcb2e9c1e55d4b9a8911b9c36", "url": "https://github.com/linkedin/brooklin/commit/79ffa91188aa16ebcb2e9c1e55d4b9a8911b9c36", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-11-02T20:44:50Z", "type": "commit"}, {"oid": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255", "url": "https://github.com/linkedin/brooklin/commit/51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255", "message": "Fix StickyMulticastStrategy assign() which assigns more task than expected, resulting in validation failure", "committedDate": "2020-11-18T06:47:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MjI5Mw==", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526492293", "bodyText": "Nit: this check is not really necessary here. limit() will work on foundDatastreamTasks with size <= numTasks", "author": "jzakaryan", "createdAt": "2020-11-18T23:32:49Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java", "diffHunk": "@@ -128,6 +128,9 @@ public StickyMulticastStrategy(Optional<Integer> maxTasks, Optional<Integer> imb\n         allAliveTasks.addAll(foundDatastreamTasks);\n \n         if (!foundDatastreamTasks.isEmpty()) {\n+          if (foundDatastreamTasks.size() > numTasks) {", "originalCommit": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYyODA2Mg==", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526628062", "bodyText": "Keeping this check, so that we don't stream() and limit() every time and do it when necessary. Also, added a log on Sonam's recommendation, so that we can debug if something goes wrong in partition managed.", "author": "vmaheshw", "createdAt": "2020-11-19T06:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MjI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "bb638e237ba289ee15c6c21d2eda7712871cd000", "chunk": "diff --git a/datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java b/datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java\nindex 74bd2e86..fc6d1b97 100644\n--- a/datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java\n+++ b/datastream-server/src/main/java/com/linkedin/datastream/server/assignment/StickyMulticastStrategy.java\n\n@@ -129,6 +129,8 @@ public class StickyMulticastStrategy implements AssignmentStrategy {\n \n         if (!foundDatastreamTasks.isEmpty()) {\n           if (foundDatastreamTasks.size() > numTasks) {\n+            LOG.info(\"Skipping {} tasks from the previous assignment of instance {}.\",\n+                foundDatastreamTasks.size() - numTasks, instance);\n             foundDatastreamTasks = foundDatastreamTasks.stream().limit(numTasks).collect(Collectors.toList());\n           }\n           newAssignment.get(instance).addAll(foundDatastreamTasks);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw==", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526493607", "bodyText": "Nit: spacing missing from line.", "author": "jzakaryan", "createdAt": "2020-11-18T23:36:13Z", "path": "datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java", "diffHunk": "@@ -475,6 +475,31 @@ public void testTriggerRebalanceWhenDeletingDatastream() {\n         newAssignment.get(instancesBySize.get(instances.size() - 1)).size());\n   }\n \n+  @Test\n+  public void testExtraTasksAreNotAssignedDuringReassignment() {\n+    String[] instances = new String[]{\"instance1\"};", "originalCommit": "51f9a5be5c12ac0f3a443c9ea7d4680eb1b90255", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYyNzcyMg==", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r526627722", "bodyText": "sorry, not able to figure out where is space missing?", "author": "vmaheshw", "createdAt": "2020-11-19T06:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg5NjU0Mw==", "url": "https://github.com/linkedin/brooklin/pull/782#discussion_r527896543", "bodyText": "After the opening curly brace and before the closing curly brace.", "author": "jzakaryan", "createdAt": "2020-11-20T18:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MzYwNw=="}], "type": "inlineReview", "revised_code": {"commit": "89678b72d307e30caad83d789f16f377f85207a2", "chunk": "diff --git a/datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java b/datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java\nindex 741c85e7..10a0bece 100644\n--- a/datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java\n+++ b/datastream-server/src/test/java/com/linkedin/datastream/server/assignment/TestStickyMulticastStrategy.java\n\n@@ -475,31 +475,6 @@ public class TestStickyMulticastStrategy {\n         newAssignment.get(instancesBySize.get(instances.size() - 1)).size());\n   }\n \n-  @Test\n-  public void testExtraTasksAreNotAssignedDuringReassignment() {\n-    String[] instances = new String[]{\"instance1\"};\n-    List<DatastreamGroup> datastreams = generateDatastreams(\"ds\", 5);\n-    StickyMulticastStrategy strategy = new StickyMulticastStrategy(Optional.of(4), Optional.empty());\n-    Map<String, Set<DatastreamTask>> assignment1 =\n-        strategy.assign(datastreams, Arrays.asList(instances), new HashMap<>());\n-    Map<String, Set<DatastreamTask>> assignment2 =\n-        strategy.assign(datastreams, Arrays.asList(instances), new HashMap<>());\n-\n-    for (String instance : instances) {\n-      Set<DatastreamTask> assignmentTasks1 = assignment1.get(instance);\n-      Set<DatastreamTask> assignmentTasks2 = assignment2.get(instance);\n-      Assert.assertEquals(assignmentTasks1.size(), assignmentTasks2.size());\n-      Assert.assertEquals(assignmentTasks1.size(), 4 * 5);\n-      assignmentTasks1.addAll(assignmentTasks2);\n-    }\n-\n-    Map<String, Set<DatastreamTask>> newAssignment = strategy.assign(datastreams, Arrays.asList(instances), assignment1);\n-    for (String instance : instances) {\n-      Set<DatastreamTask> newassignmentTasks = newAssignment.get(instance);\n-      Assert.assertEquals(newassignmentTasks.size(), 4 * 5);\n-    }\n-  }\n-\n   private static String assignmentToString(Map<String, Set<DatastreamTask>> assignment) {\n     StringBuilder builder = new StringBuilder();\n     assignment.keySet().stream().sorted().forEach(instance -> {\n"}}, {"oid": "bb638e237ba289ee15c6c21d2eda7712871cd000", "url": "https://github.com/linkedin/brooklin/commit/bb638e237ba289ee15c6c21d2eda7712871cd000", "message": "Add log", "committedDate": "2020-11-19T06:45:01Z", "type": "commit"}, {"oid": "89678b72d307e30caad83d789f16f377f85207a2", "url": "https://github.com/linkedin/brooklin/commit/89678b72d307e30caad83d789f16f377f85207a2", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-11-19T19:47:14Z", "type": "commit"}, {"oid": "0cac6d2694dc1cc924caac5eb02aa26fea6ec2a6", "url": "https://github.com/linkedin/brooklin/commit/0cac6d2694dc1cc924caac5eb02aa26fea6ec2a6", "message": "Merge branch 'master' into fixStickyMulticastStrategy", "committedDate": "2020-11-19T19:50:18Z", "type": "commit"}]}