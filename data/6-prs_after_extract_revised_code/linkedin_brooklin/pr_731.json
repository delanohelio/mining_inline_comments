{"pr_number": 731, "pr_title": "Separated test for auto pause and fixed a potential race condition", "pr_createdAt": "2020-07-17T00:22:44Z", "pr_url": "https://github.com/linkedin/brooklin/pull/731", "timeline": [{"oid": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "url": "https://github.com/linkedin/brooklin/commit/e59013c4cf5be05eb50cecd842748dba9f6f8b63", "message": "Separated test for auto pause and fixed a potential race condition", "committedDate": "2020-07-17T00:13:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjE1Ng==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456152156", "bodyText": "nit: space between topic and :\nString topic : cookieTopics", "author": "somandal", "createdAt": "2020-07-17T00:31:01Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjM3NQ==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456152375", "bodyText": "nit: fix comment to discuss cookie instead of Pizza", "author": "somandal", "createdAt": "2020-07-17T00:31:50Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzEyMQ==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153121", "bodyText": "I'd still add the following assertion:\n// verify that none of the events were sent because of send error Assert.assertTrue(datastreamProducer.getEvents().isEmpty(), \"No events should have been successfully sent\");", "author": "somandal", "createdAt": "2020-07-17T00:34:54Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {\n+      KafkaMirrorMakerConnectorTestUtils.produceEvents(topic, 1, _kafkaCluster);\n+    }\n+\n+    Assert.assertTrue(PollUtils.poll(() -> connectorTask.getAutoPausedSourcePartitions().size() == cookieTopics.length, POLL_PERIOD_MS, POLL_TIMEOUT_MS),\n+        \"All topics should have had auto-paused partitions\");\n+", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzMyMg==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153322", "bodyText": "nit: space between topic and :\nString topic : cookieTopics", "author": "somandal", "createdAt": "2020-07-17T00:35:35Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzU1Ng==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153556", "bodyText": "can you print the list of topics in the auto pause list when printing the reason for failure? Will be easier to compare which topics were auto-paused and which weren't", "author": "somandal", "createdAt": "2020-07-17T00:36:25Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"\n+    };\n+\n+    for (String topic: cookieTopics) {\n+      createTopic(_zkUtils, topic);\n+    }\n+\n+    // create a datastream to consume from topics ending in \"Pizza\"\n+    Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n+\n+    DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n+    MockDatastreamEventProducer datastreamProducer = new MockDatastreamEventProducer((r) -> true);\n+    task.setEventProducer(datastreamProducer);\n+\n+    KafkaMirrorMakerConnectorTask connectorTask =\n+        KafkaMirrorMakerConnectorTestUtils.createFlushlessKafkaMirrorMakerConnectorTask(task, true, 50, 100,\n+            Duration.ofDays(1));\n+    KafkaMirrorMakerConnectorTestUtils.runKafkaMirrorMakerConnectorTask(connectorTask);\n+\n+    for (String topic: cookieTopics) {\n+      KafkaMirrorMakerConnectorTestUtils.produceEvents(topic, 1, _kafkaCluster);\n+    }\n+\n+    Assert.assertTrue(PollUtils.poll(() -> connectorTask.getAutoPausedSourcePartitions().size() == cookieTopics.length, POLL_PERIOD_MS, POLL_TIMEOUT_MS),\n+        \"All topics should have had auto-paused partitions\");", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NzE5NA==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456557194", "bodyText": "The code that does the auto pause already prints that. I don't think it will be useful.", "author": "jzakaryan", "createdAt": "2020-07-17T16:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1Mzg5MA==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456153890", "bodyText": "\ud83d\ude0b", "author": "somandal", "createdAt": "2020-07-17T00:37:45Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1142,7 +1142,44 @@ public void testFlowControlDisabled() throws Exception {\n         \"did not shut down on time\");\n   }\n \n-  @Test (enabled = false) // Test disabled since it has been flaky\n+  @Test\n+  public void testAutoPauseOnSendError() throws Exception {\n+    String[] cookieTopics = new String[] {\n+        \"MacadamiaWhiteChocolateCookie\",\n+        \"AlmondCookie\",\n+        \"ChocolateChipCookie\",\n+        \"SaltyCaramelCookie\"", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1151,11 +1151,11 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         \"SaltyCaramelCookie\"\n     };\n \n-    for (String topic: cookieTopics) {\n+    for (String topic : cookieTopics) {\n       createTopic(_zkUtils, topic);\n     }\n \n-    // create a datastream to consume from topics ending in \"Pizza\"\n+    // create a datastream to consume from topics ending in \"Cookie\"\n     Datastream datastream = KafkaMirrorMakerConnectorTestUtils.createDatastream(\"cookieStream\", _broker, \"\\\\w+Cookie\");\n \n     DatastreamTaskImpl task = new DatastreamTaskImpl(Collections.singletonList(datastream));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1ODc1Mg==", "url": "https://github.com/linkedin/brooklin/pull/731#discussion_r456158752", "bodyText": "While you're at it, can you also fix these logs? They all print \"yummyTopic\" even though we check for the other topics.", "author": "somandal", "createdAt": "2020-07-17T00:55:38Z", "path": "datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java", "diffHunk": "@@ -1184,8 +1221,6 @@ public void testInFlightMessageCount() throws Exception {\n \n     // verify the states response returned by diagnostics endpoint contains correct counts\n     KafkaDatastreamStatesResponse statesResponse = connectorTask.getKafkaDatastreamStatesResponse();\n-    Assert.assertEquals(statesResponse.getAutoPausedPartitions().size(), 3,\n-        \"All topics should have had auto-paused partitions\");\n     Assert.assertEquals(\n         statesResponse.getInFlightMessageCounts().get(new FlushlessEventProducerHandler.SourcePartition(yummyTopic, 0)),", "originalCommit": "e59013c4cf5be05eb50cecd842748dba9f6f8b63", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "chunk": "diff --git a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\nindex 5a5d67c0..ce688e7f 100644\n--- a/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n+++ b/datastream-kafka-connector/src/test/java/com/linkedin/datastream/connectors/kafka/mirrormaker/TestKafkaMirrorMakerConnectorTask.java\n\n@@ -1226,10 +1229,10 @@ public class TestKafkaMirrorMakerConnectorTask extends BaseKafkaZkTest {\n         Long.valueOf(1), \"In flight message count for yummyTopic was incorrect\");\n     Assert.assertEquals(\n         statesResponse.getInFlightMessageCounts().get(new FlushlessEventProducerHandler.SourcePartition(saltyTopic, 0)),\n-        Long.valueOf(1), \"In flight message count for yummyTopic was incorrect\");\n+        Long.valueOf(1), \"In flight message count for saltyTopic was incorrect\");\n     Assert.assertEquals(\n         statesResponse.getInFlightMessageCounts().get(new FlushlessEventProducerHandler.SourcePartition(spicyTopic, 0)),\n-        Long.valueOf(1), \"In flight message count for yummyTopic was incorrect\");\n+        Long.valueOf(1), \"In flight message count for spicyTopic was incorrect\");\n \n     // verify that none of the events were sent because of send error\n     Assert.assertTrue(datastreamProducer.getEvents().isEmpty(), \"No events should have been successfully sent\");\n"}}, {"oid": "51d185ba77d2b58fe539c35af2a75150dcee46b9", "url": "https://github.com/linkedin/brooklin/commit/51d185ba77d2b58fe539c35af2a75150dcee46b9", "message": "Minor fixes", "committedDate": "2020-07-17T16:47:00Z", "type": "commit"}]}