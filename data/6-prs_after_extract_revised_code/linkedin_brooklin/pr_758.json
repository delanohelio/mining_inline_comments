{"pr_number": 758, "pr_title": "Added committed offsets in KafkaTopicPartitionTracker and diag endpoint response", "pr_createdAt": "2020-10-01T22:11:27Z", "pr_url": "https://github.com/linkedin/brooklin/pull/758", "timeline": [{"oid": "4671de5e29a6b644c7c1fa9621a9c0c5b5cd8010", "url": "https://github.com/linkedin/brooklin/commit/4671de5e29a6b644c7c1fa9621a9c0c5b5cd8010", "message": "Passing Kafka headers to downstream systems in KafkaConnectorTask", "committedDate": "2020-08-17T18:51:53Z", "type": "commit"}, {"oid": "dea3a4c5ec340a7527b81ae0ece76fa8feb19b80", "url": "https://github.com/linkedin/brooklin/commit/dea3a4c5ec340a7527b81ae0ece76fa8feb19b80", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-09-23T20:17:06Z", "type": "commit"}, {"oid": "e9b2d68cdd0dc6b6e6810b9fe0468b5b024f6400", "url": "https://github.com/linkedin/brooklin/commit/e9b2d68cdd0dc6b6e6810b9fe0468b5b024f6400", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-10-01T22:06:54Z", "type": "commit"}, {"oid": "cbc0df9f198f4c83954877bddf094a81771d0824", "url": "https://github.com/linkedin/brooklin/commit/cbc0df9f198f4c83954877bddf094a81771d0824", "message": "Added committed offsets in KafkaTopicPartitionTracker and diag endpoint response", "committedDate": "2020-10-01T22:07:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUzOTI0NA==", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r498539244", "bodyText": "I was considering adding a separate ConsumerOffsets class to hold both consumed offset and committed offset and use that in the nested dictionary. But synchronizing the writes to the nested dictionaries was a not easy. onPartitionsPolled and onOffsetsCommitted calls would hold locks on the dictionaries and it would make this code bug prone and non-efficient. So I thought it would be better for the client-side to merge these dictionaries (if necessary for presentation purposes).", "author": "jzakaryan", "createdAt": "2020-10-01T22:16:03Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaTopicPartitionTracker.java", "diffHunk": "@@ -32,8 +33,8 @@\n   private final String _consumerGroupId;\n \n   private final Map<String, Set<Integer>> _topicPartitions = new ConcurrentHashMap<>();\n-\n-  private final Map<String, Map<Integer, Long>> _consumerOffsets = new ConcurrentHashMap<>();\n+  private final Map<String, Map<Integer, Long>> _consumedOffsets = new ConcurrentHashMap<>();", "originalCommit": "cbc0df9f198f4c83954877bddf094a81771d0824", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMTU4MA==", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r499011580", "bodyText": "Nitpick. May be you need to call this just offsets since its being used by both _consumedOffsets and _committedOffsets", "author": "vishwajith-s", "createdAt": "2020-10-02T19:29:42Z", "path": "datastream-kafka-connector/src/main/java/com/linkedin/datastream/connectors/kafka/KafkaTopicPartitionTracker.java", "diffHunk": "@@ -75,22 +76,30 @@ public void onPartitionsRevoked(@NotNull Collection<TopicPartition> topicPartiti\n       }\n     });\n \n-    // Remove consumer offsets for partitions that have been revoked. The reason to remove the consumer offsets\n+    // Remove consumed offsets for partitions that have been revoked. The reason to remove the consumed offsets\n     // here is that another host may handle these partitions due to rebalance, and we don't want to have duplicate\n     // consumer offsets for affected partitions (even though the ones with larger offsets wins).\n+    removeOffsetsForTopicPartition(topicPartitions, _consumedOffsets);\n+\n+    // Remove committed offsets for partitions that have been revoked.\n+    removeOffsetsForTopicPartition(topicPartitions, _committedOffsets);\n+  }\n+\n+  private void removeOffsetsForTopicPartition(@NotNull Collection<TopicPartition> topicPartitions,\n+      Map<String, Map<Integer, Long>> committedOffsets) {", "originalCommit": "cbc0df9f198f4c83954877bddf094a81771d0824", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2Nzk4Mw==", "url": "https://github.com/linkedin/brooklin/pull/758#discussion_r502567983", "bodyText": "+1 make this generic. We also intend to add end offsets to this list.", "author": "somandal", "createdAt": "2020-10-09T17:15:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAxMTU4MA=="}], "type": "inlineReview", "revised_code": null}]}