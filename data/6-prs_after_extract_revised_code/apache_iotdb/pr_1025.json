{"pr_number": 1025, "pr_title": "Add judgment and Modify level3 cannot be a keyword", "pr_createdAt": "2020-04-10T08:44:13Z", "pr_url": "https://github.com/apache/iotdb/pull/1025", "timeline": [{"oid": "ebd665ecf127f18baca12e7dd256feead4118129", "url": "https://github.com/apache/iotdb/commit/ebd665ecf127f18baca12e7dd256feead4118129", "message": "add trycatch", "committedDate": "2020-04-10T08:30:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NDQzMA==", "url": "https://github.com/apache/iotdb/pull/1025#discussion_r406694430", "bodyText": "Hi, I think one try-catch is enough. Catch the set storage group and create timeseries.", "author": "qiaojialin", "createdAt": "2020-04-10T10:07:50Z", "path": "example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java", "diffHunk": "@@ -32,9 +34,23 @@ public static void main(String[] args) throws ClassNotFoundException, SQLExcepti\n     try (Connection connection = DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n          Statement statement = connection.createStatement()) {\n       statement.execute(\"SET STORAGE GROUP TO root.sg1\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE\");\n+      try {\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      } catch (IoTDBSQLException e) {\n+        System.out.println(e.getMessage());\n+      }\n+\n+      try {\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      } catch (IoTDBSQLException e) {\n+        System.out.println(e.getMessage());\n+      }\n+\n+      try {\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      } catch (IoTDBSQLException e) {\n+        System.out.println(e.getMessage());\n+      }", "originalCommit": "ebd665ecf127f18baca12e7dd256feead4118129", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAwNTIzMw==", "url": "https://github.com/apache/iotdb/pull/1025#discussion_r407005233", "bodyText": "Hi\uff0cThe original one is better\uff0cI'm sorry I did some useless jobs", "author": "iwasjoker", "createdAt": "2020-04-11T02:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NDQzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAxMTkxNw==", "url": "https://github.com/apache/iotdb/pull/1025#discussion_r407011917", "bodyText": "Hi~ Actually, I mean add a try-catch for set storage group and create timeseries", "author": "qiaojialin", "createdAt": "2020-04-11T03:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY5NDQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "10594d659c85d5e021a2f96f9d293995831f915b", "chunk": "diff --git a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\nindex 7ba680bdd0..597f168d60 100644\n--- a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n+++ b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n\n@@ -32,25 +32,11 @@ public class JDBCExample {\n   public static void main(String[] args) throws ClassNotFoundException, SQLException {\n     Class.forName(\"org.apache.iotdb.jdbc.IoTDBDriver\");\n     try (Connection connection = DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n-         Statement statement = connection.createStatement()) {\n+      Statement statement = connection.createStatement()) {\n       statement.execute(\"SET STORAGE GROUP TO root.sg1\");\n-      try {\n-        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n-      } catch (IoTDBSQLException e) {\n-        System.out.println(e.getMessage());\n-      }\n-\n-      try {\n-        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n-      } catch (IoTDBSQLException e) {\n-        System.out.println(e.getMessage());\n-      }\n-\n-      try {\n-        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n-      } catch (IoTDBSQLException e) {\n-        System.out.println(e.getMessage());\n-      }\n+      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n \n       for (int i = 0; i <= 100; i++) {\n         statement.addBatch(\"insert into root.sg1.d1(timestamp, s1, s2, s3) values(\"+ i + \",\" + 1 + \",\" + 1 + \",\" + 1 + \")\");\n"}}, {"oid": "10594d659c85d5e021a2f96f9d293995831f915b", "url": "https://github.com/apache/iotdb/commit/10594d659c85d5e021a2f96f9d293995831f915b", "message": "Removed repeated try/catch", "committedDate": "2020-04-11T02:10:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE1NzE3MQ==", "url": "https://github.com/apache/iotdb/pull/1025#discussion_r407157171", "bodyText": "Hi, leave a blank space between \"}\" and \"catch\"", "author": "jixuan1989", "createdAt": "2020-04-12T07:06:32Z", "path": "example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java", "diffHunk": "@@ -48,6 +50,8 @@ public static void main(String[] args) throws ClassNotFoundException, SQLExcepti\n       outputResult(resultSet);\n       resultSet = statement.executeQuery(\"select count(*) from root where time >= 1 and time <= 100 group by ([0, 100), 20ms, 20ms)\");\n       outputResult(resultSet);\n+    }catch (IoTDBSQLException e){", "originalCommit": "10594d659c85d5e021a2f96f9d293995831f915b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49d1db965952f28b10ff674ad1304552b6e448e3", "chunk": "diff --git a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\nindex 597f168d60..5cf1d9d3c2 100644\n--- a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n+++ b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n\n@@ -50,7 +53,7 @@ public class JDBCExample {\n       outputResult(resultSet);\n       resultSet = statement.executeQuery(\"select count(*) from root where time >= 1 and time <= 100 group by ([0, 100), 20ms, 20ms)\");\n       outputResult(resultSet);\n-    }catch (IoTDBSQLException e){\n+    } catch (IoTDBSQLException e){\n         System.out.println(e.getMessage());\n     }\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE1NzI3Mg==", "url": "https://github.com/apache/iotdb/pull/1025#discussion_r407157272", "bodyText": "why exchange \"s3\" and \"s2\"?", "author": "jixuan1989", "createdAt": "2020-04-12T07:07:20Z", "path": "example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java", "diffHunk": "@@ -30,11 +32,11 @@\n   public static void main(String[] args) throws ClassNotFoundException, SQLException {\n     Class.forName(\"org.apache.iotdb.jdbc.IoTDBDriver\");\n     try (Connection connection = DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n-         Statement statement = connection.createStatement()) {\n+      Statement statement = connection.createStatement()) {\n       statement.execute(\"SET STORAGE GROUP TO root.sg1\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE\");\n+      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");", "originalCommit": "10594d659c85d5e021a2f96f9d293995831f915b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06a10c75693ac2e2d4983cc0b06529713db579ba", "chunk": "diff --git a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\nindex 597f168d60..6dec3fc3a6 100644\n--- a/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n+++ b/example/jdbc/src/main/java/org/apache/iotdb/JDBCExample.java\n\n@@ -33,10 +33,14 @@ public class JDBCExample {\n     Class.forName(\"org.apache.iotdb.jdbc.IoTDBDriver\");\n     try (Connection connection = DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n       Statement statement = connection.createStatement()) {\n-      statement.execute(\"SET STORAGE GROUP TO root.sg1\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n-      statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      try {\n+        statement.execute(\"SET STORAGE GROUP TO root.sg1\");\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s1 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s2 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+        statement.execute(\"CREATE TIMESERIES root.sg1.d1.s3 WITH DATATYPE=INT64, ENCODING=RLE, CompressionType=SNAPPY\");\n+      } catch (SQLException e) {\n+        System.out.println(e.getMessage());\n+      }\n \n       for (int i = 0; i <= 100; i++) {\n         statement.addBatch(\"insert into root.sg1.d1(timestamp, s1, s2, s3) values(\"+ i + \",\" + 1 + \",\" + 1 + \",\" + 1 + \")\");\n"}}, {"oid": "06a10c75693ac2e2d4983cc0b06529713db579ba", "url": "https://github.com/apache/iotdb/commit/06a10c75693ac2e2d4983cc0b06529713db579ba", "message": "Added try/catch on storage group and timeseries", "committedDate": "2020-04-13T16:34:19Z", "type": "commit"}, {"oid": "49d1db965952f28b10ff674ad1304552b6e448e3", "url": "https://github.com/apache/iotdb/commit/49d1db965952f28b10ff674ad1304552b6e448e3", "message": "Removed repeated try/catch", "committedDate": "2020-04-14T01:04:05Z", "type": "commit"}, {"oid": "3b7f0829af97bdac4c0efbfeba6231e723c40d9b", "url": "https://github.com/apache/iotdb/commit/3b7f0829af97bdac4c0efbfeba6231e723c40d9b", "message": "Add try/catch on creating storage group and timeseries", "committedDate": "2020-04-14T01:08:36Z", "type": "commit"}, {"oid": "64b3fcd92eff1c35b29cd11ccaad80db53a9f3a8", "url": "https://github.com/apache/iotdb/commit/64b3fcd92eff1c35b29cd11ccaad80db53a9f3a8", "message": "Modify level3 cannot be \"device\" keyword", "committedDate": "2020-04-14T07:10:05Z", "type": "commit"}, {"oid": "dd697b7aecfcb36dd3eb04ddc1b4a1884a0abf24", "url": "https://github.com/apache/iotdb/commit/dd697b7aecfcb36dd3eb04ddc1b4a1884a0abf24", "message": "Modify the wrong code", "committedDate": "2020-04-14T08:00:55Z", "type": "commit"}]}