{"pr_number": 1851, "pr_title": "[IOTDB-951] Fix auto-creating schema in parallel may write unrecognizable timeseries in mlog.txt", "pr_createdAt": "2020-10-23T07:35:30Z", "pr_url": "https://github.com/apache/iotdb/pull/1851", "timeline": [{"oid": "5c181b24f6f7ae18849daf96db32c5c78b053f87", "url": "https://github.com/apache/iotdb/commit/5c181b24f6f7ae18849daf96db32c5c78b053f87", "message": "Fix createTimeseries() in mLogWriter to make writing mlog thread safe", "committedDate": "2020-10-23T05:50:41Z", "type": "commit"}, {"oid": "f0bf2ac2a75ccb9e02d41900b495e53a048264c1", "url": "https://github.com/apache/iotdb/commit/f0bf2ac2a75ccb9e02d41900b495e53a048264c1", "message": "Fix createTimeseries concurrent bug", "committedDate": "2020-10-23T07:27:40Z", "type": "commit"}, {"oid": "121ee7d5dcc08f8d7b70baa7ef218ae44016289b", "url": "https://github.com/apache/iotdb/commit/121ee7d5dcc08f8d7b70baa7ef218ae44016289b", "message": "Fix unclosed file issue", "committedDate": "2020-10-23T09:11:23Z", "type": "commit"}, {"oid": "7dd11338d19845a1faeff3cf850adc7c37450d9e", "url": "https://github.com/apache/iotdb/commit/7dd11338d19845a1faeff3cf850adc7c37450d9e", "message": "minor code changes", "committedDate": "2020-10-23T09:35:13Z", "type": "commit"}, {"oid": "454637b6971a9c12912aa55826b1b73258ee446d", "url": "https://github.com/apache/iotdb/commit/454637b6971a9c12912aa55826b1b73258ee446d", "message": "review fix", "committedDate": "2020-10-23T12:31:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2ODA1NA==", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r510868054", "bodyText": "You can use fileChannel to totally replace it.", "author": "JackieTien97", "createdAt": "2020-10-23T13:02:43Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "originalCommit": "454637b6971a9c12912aa55826b1b73258ee446d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1OTExMw==", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511759113", "bodyText": "Fixed", "author": "wshao08", "createdAt": "2020-10-26T07:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2ODA1NA=="}], "type": "inlineReview", "revised_code": {"commit": "e0b012ed2475c737e9edfd61512d1a31b05a04ba", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\nindex 1a702132f2..b44a636770 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n\n@@ -40,7 +40,6 @@ public class MLogWriter {\n   private static final Logger logger = LoggerFactory.getLogger(MLogWriter.class);\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n-  private BufferedWriter writer;\n   private FileOutputStream fileOutputStream;\n   private FileChannel channel;\n   private int lineNumber;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MDczMA==", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511570730", "bodyText": "I think you could use channel.write() to implement all the functions in this class, including deleteTimeseries, setStorageGroup, deleteStorageGroup, setTTL, changeOffset and so on", "author": "samperson1997", "createdAt": "2020-10-25T09:25:34Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -53,40 +58,50 @@ public MLogWriter(String schemaDir, String logFileName) throws IOException {\n     logFile = SystemFileFactory.INSTANCE.getFile(schemaDir + File.separator + logFileName);\n     FileWriter fileWriter = new FileWriter(logFile, true);\n     writer = new BufferedWriter(fileWriter);\n+    fileOutputStream = new FileOutputStream(logFile, true);\n+    channel = fileOutputStream.getChannel();\n   }\n \n   public void close() throws IOException {\n     writer.close();\n+    channel.close();\n+    fileOutputStream.close();\n   }\n \n   public void createTimeseries(CreateTimeSeriesPlan plan, long offset) throws IOException {\n-    writer.write(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n-        plan.getPath().getFullPath(), plan.getDataType().serialize(),\n-        plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n+    StringBuilder buf = new StringBuilder();\n+    buf.append(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n+            plan.getPath().getFullPath(), plan.getDataType().serialize(),\n+            plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getProps() != null) {\n       boolean first = true;\n       for (Map.Entry<String, String> entry : plan.getProps().entrySet()) {\n         if (first) {\n-          writer.write(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n           first = false;\n         } else {\n-          writer.write(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n         }\n       }\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getAlias() != null) {\n-      writer.write(plan.getAlias());\n+      buf.append(plan.getAlias());\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (offset >= 0) {\n-      writer.write(String.valueOf(offset));\n+      buf.append(offset);\n     }\n-    newLine();\n+    final String newLine = System.getProperty(\"line.separator\");\n+    buf.append(newLine);\n+\n+    channel.write(ByteBuffer.wrap(buf.toString().getBytes()));\n+    channel.force(true);\n+    ++lineNumber;\n   }\n \n   public void deleteTimeseries(String path) throws IOException {", "originalCommit": "454637b6971a9c12912aa55826b1b73258ee446d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e0b012ed2475c737e9edfd61512d1a31b05a04ba", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\nindex 1a702132f2..b44a636770 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n\n@@ -56,14 +55,11 @@ public class MLogWriter {\n     }\n \n     logFile = SystemFileFactory.INSTANCE.getFile(schemaDir + File.separator + logFileName);\n-    FileWriter fileWriter = new FileWriter(logFile, true);\n-    writer = new BufferedWriter(fileWriter);\n     fileOutputStream = new FileOutputStream(logFile, true);\n     channel = fileOutputStream.getChannel();\n   }\n \n   public void close() throws IOException {\n-    writer.close();\n     channel.close();\n     fileOutputStream.close();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTUyOQ==", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511675529", "bodyText": "We can use file channel to replace it. Check other place where it is used ~", "author": "SilverNarcissus", "createdAt": "2020-10-26T01:00:02Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "originalCommit": "454637b6971a9c12912aa55826b1b73258ee446d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1OTA3NA==", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511759074", "bodyText": "Fixed", "author": "wshao08", "createdAt": "2020-10-26T07:27:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e0b012ed2475c737e9edfd61512d1a31b05a04ba", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\nindex 1a702132f2..b44a636770 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java\n\n@@ -40,7 +40,6 @@ public class MLogWriter {\n   private static final Logger logger = LoggerFactory.getLogger(MLogWriter.class);\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n-  private BufferedWriter writer;\n   private FileOutputStream fileOutputStream;\n   private FileChannel channel;\n   private int lineNumber;\n"}}, {"oid": "e0b012ed2475c737e9edfd61512d1a31b05a04ba", "url": "https://github.com/apache/iotdb/commit/e0b012ed2475c737e9edfd61512d1a31b05a04ba", "message": "Use FileChannel to replace BufferedWriter", "committedDate": "2020-10-26T02:47:29Z", "type": "commit"}, {"oid": "0a90a721544269b959db561e7edb0dee3c9950c6", "url": "https://github.com/apache/iotdb/commit/0a90a721544269b959db561e7edb0dee3c9950c6", "message": "Re-trigger ci", "committedDate": "2020-10-26T04:11:54Z", "type": "commit"}, {"oid": "f497151265fde2092e4871f2ec6567ca247e2b31", "url": "https://github.com/apache/iotdb/commit/f497151265fde2092e4871f2ec6567ca247e2b31", "message": "Remove redundant code", "committedDate": "2020-10-26T05:25:30Z", "type": "commit"}]}