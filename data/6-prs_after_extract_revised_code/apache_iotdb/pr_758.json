{"pr_number": 758, "pr_title": "[IOTDB-438] Modify SeriesReader to uniform usage", "pr_createdAt": "2020-01-31T09:51:02Z", "pr_url": "https://github.com/apache/iotdb/pull/758", "timeline": [{"oid": "d1275014c293814a300695fe98c2025d141f26d4", "url": "https://github.com/apache/iotdb/commit/d1275014c293814a300695fe98c2025d141f26d4", "message": "new SeriesDataRandomReader", "committedDate": "2020-01-31T09:49:24Z", "type": "commit"}, {"oid": "5ebd87d9fc52c1eaac4b18cf85b9627b99ac000b", "url": "https://github.com/apache/iotdb/commit/5ebd87d9fc52c1eaac4b18cf85b9627b99ac000b", "message": "fix bug", "committedDate": "2020-01-31T10:07:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMjc3NQ==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373402775", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class SeriesDataRandomReader implements IDataRandomReader {\n          \n          \n            \n            public class EngineSeriesReader implements IEngineSeriesReader {", "author": "qiaojialin", "createdAt": "2020-01-31T10:08:18Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -46,15 +47,18 @@\n import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n import org.apache.iotdb.tsfile.read.reader.IPageReader;\n import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n \n-public abstract class AbstractSeriesReader {\n+public class SeriesDataRandomReader implements IDataRandomReader {", "originalCommit": "d1275014c293814a300695fe98c2025d141f26d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nindex 9cb060c1e..2fec10cf7 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n\n@@ -48,11 +50,12 @@ import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IBatchReader;\n import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n import org.apache.iotdb.tsfile.read.reader.IPageReader;\n import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n \n-public class SeriesDataRandomReader implements IDataRandomReader {\n+public class SeriesDataRandomReader implements IDataRandomReader, ManagedSeriesReader {\n \n   private final Path seriesPath;\n   private final TSDataType dataType;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNTg5OQ==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373405899", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return !isChunkOverlapped() && satisfyFilter(chunkStatistics);\n          \n          \n            \n                return !isChunkOverlapped() && satisfyTimeFilter(chunkStatistics);", "author": "qiaojialin", "createdAt": "2020-01-31T10:15:38Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -80,20 +84,44 @@\n   private long currentPageEndTime = Long.MAX_VALUE;\n \n \n-  public AbstractSeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n-      List<TsFileResource> seqFiles, List<TsFileResource> unseqFiles) {\n+  public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n     this.seriesPath = seriesPath;\n     this.dataType = dataType;\n     this.context = context;\n-    this.seqFileResource = seqFiles;\n-    this.unseqFileResource = sortUnSeqFileResources(unseqFiles);\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n   }\n \n-  protected abstract Filter getFilter();\n+  public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n \n   protected boolean satisfyFilter(Statistics statistics) {\n-    return getFilter() == null\n-        || getFilter().containStartEndTime(statistics.getStartTime(), statistics.getEndTime());\n+    return timeFilter == null\n+        || timeFilter.containStartEndTime(statistics.getStartTime(), statistics.getEndTime());\n+  }\n+\n+  @Override\n+  public boolean canUseCurrentChunkStatistics() {\n+    Statistics chunkStatistics = currentChunkStatistics();\n+    return !isChunkOverlapped() && satisfyFilter(chunkStatistics);", "originalCommit": "d1275014c293814a300695fe98c2025d141f26d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nindex 9cb060c1e..2fec10cf7 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n\n@@ -84,6 +87,9 @@ public class SeriesDataRandomReader implements IDataRandomReader {\n   private long currentPageEndTime = Long.MAX_VALUE;\n \n \n+  private boolean hasRemaining;\n+  private boolean managedByQueryManager;\n+\n   public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n       QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n     this.seriesPath = seriesPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNjEyMg==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373406122", "bodyText": "add javadoc, only be used for aggregate without value filter", "author": "qiaojialin", "createdAt": "2020-01-31T10:16:08Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -80,20 +84,44 @@\n   private long currentPageEndTime = Long.MAX_VALUE;\n \n \n-  public AbstractSeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n-      List<TsFileResource> seqFiles, List<TsFileResource> unseqFiles) {\n+  public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n     this.seriesPath = seriesPath;\n     this.dataType = dataType;\n     this.context = context;\n-    this.seqFileResource = seqFiles;\n-    this.unseqFileResource = sortUnSeqFileResources(unseqFiles);\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n   }\n \n-  protected abstract Filter getFilter();\n+  public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n \n   protected boolean satisfyFilter(Statistics statistics) {\n-    return getFilter() == null\n-        || getFilter().containStartEndTime(statistics.getStartTime(), statistics.getEndTime());\n+    return timeFilter == null\n+        || timeFilter.containStartEndTime(statistics.getStartTime(), statistics.getEndTime());\n+  }\n+\n+  @Override\n+  public boolean canUseCurrentChunkStatistics() {", "originalCommit": "d1275014c293814a300695fe98c2025d141f26d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ3MjI4MQ==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373472281", "bodyText": "done", "author": "liutaohua", "createdAt": "2020-01-31T13:12:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNjEyMg=="}], "type": "inlineReview", "revised_code": {"commit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nindex 9cb060c1e..2fec10cf7 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n\n@@ -84,6 +87,9 @@ public class SeriesDataRandomReader implements IDataRandomReader {\n   private long currentPageEndTime = Long.MAX_VALUE;\n \n \n+  private boolean hasRemaining;\n+  private boolean managedByQueryManager;\n+\n   public SeriesDataRandomReader(Path seriesPath, TSDataType dataType, QueryContext context,\n       QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n     this.seriesPath = seriesPath;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNzU3NA==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373407574", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataBatchReader;\n          \n          \n            \n            import org.apache.iotdb.db.query.reader.seriesRelated.SeriesRawDataReader;", "author": "qiaojialin", "createdAt": "2020-01-31T10:19:33Z", "path": "server/src/test/java/org/apache/iotdb/db/engine/merge/MergeTaskTest.java", "diffHunk": "@@ -36,7 +36,7 @@\n import org.apache.iotdb.db.exception.metadata.MetadataException;\n import org.apache.iotdb.db.exception.path.PathException;\n import org.apache.iotdb.db.query.context.QueryContext;\n-import org.apache.iotdb.db.query.reader.seriesRelated.RawDataReaderWithoutValueFilter;\n+import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataBatchReader;", "originalCommit": "d1275014c293814a300695fe98c2025d141f26d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b91d282c3ae3a8cca19b3cd67d8c09d486ff7b3e", "chunk": "diff --git a/server/src/test/java/org/apache/iotdb/db/engine/merge/MergeTaskTest.java b/server/src/test/java/org/apache/iotdb/db/engine/merge/MergeTaskTest.java\nindex 68a5e3129..addcc6e08 100644\n--- a/server/src/test/java/org/apache/iotdb/db/engine/merge/MergeTaskTest.java\n+++ b/server/src/test/java/org/apache/iotdb/db/engine/merge/MergeTaskTest.java\n\n@@ -37,6 +37,7 @@ import org.apache.iotdb.db.exception.metadata.MetadataException;\n import org.apache.iotdb.db.exception.path.PathException;\n import org.apache.iotdb.db.query.context.QueryContext;\n import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataBatchReader;\n+import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataRandomReader;\n import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n import org.apache.iotdb.tsfile.read.common.BatchData;\n import org.apache.iotdb.tsfile.read.common.Path;\n"}}, {"oid": "b91d282c3ae3a8cca19b3cd67d8c09d486ff7b3e", "url": "https://github.com/apache/iotdb/commit/b91d282c3ae3a8cca19b3cd67d8c09d486ff7b3e", "message": "revert testPartialMerge3", "committedDate": "2020-01-31T11:37:22Z", "type": "commit"}, {"oid": "d03aac88fba3d111024afbe522571485fea088ee", "url": "https://github.com/apache/iotdb/commit/d03aac88fba3d111024afbe522571485fea088ee", "message": "fix bug", "committedDate": "2020-01-31T11:41:47Z", "type": "commit"}, {"oid": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "url": "https://github.com/apache/iotdb/commit/ba9330b12cca1b736bb1c592fbfe6230605638a3", "message": "add getIterator", "committedDate": "2020-01-31T12:52:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTcxMA==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373469710", "bodyText": "SeriesPointReader", "author": "qiaojialin", "createdAt": "2020-01-31T13:06:06Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -419,4 +490,148 @@ public void close() throws IOException {\n       openedChunkLoader.close();\n     }\n   }\n+\n+  public IPointReader getIPointReader() {\n+    return new Ite();\n+  }\n+\n+  public IBatchReader getIBatchReader() {\n+    return new BatchIte();\n+  }\n+\n+  private class BatchIte implements IBatchReader {\n+\n+    private BatchData batchData;\n+    private boolean hasCachedBatchData = false;\n+\n+    /**\n+     * This method overrides the AbstractDataReader.hasNextOverlappedPage for pause reads, to\n+     * achieve a continuous read\n+     */\n+    @Override\n+    public boolean hasNextBatch() throws IOException {\n+\n+      if (hasCachedBatchData) {\n+        return true;\n+      }\n+\n+      while (hasNextChunk()) {\n+        while (hasNextPage()) {\n+          if (!isPageOverlapped()) {\n+            batchData = nextPage();\n+            hasCachedBatchData = true;\n+            return true;\n+          }\n+          while (hasNextOverlappedPage()) {\n+            batchData = nextOverlappedPage();\n+            hasCachedBatchData = true;\n+            return true;\n+          }\n+        }\n+      }\n+      return false;\n+    }\n+\n+    @Override\n+    public BatchData nextBatch() throws IOException {\n+      if (hasCachedBatchData || hasNextBatch()) {\n+        hasCachedBatchData = false;\n+        return batchData;\n+      }\n+      throw new IOException(\"no next batch\");\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+    }\n+  }\n+\n+  private class Ite implements IPointReader {", "originalCommit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "742cbe8ffc7668148127a832f43293739b3362a6", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nsimilarity index 97%\nrename from server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nrename to server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nindex 2fec10cf7..df19d78df 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\n\n@@ -482,7 +482,7 @@ public class SeriesDataRandomReader implements IDataRandomReader, ManagedSeriesR\n     }\n   }\n \n-  public void close() throws IOException {\n+  public void closeReader() throws IOException {\n     if (firstChunkMetaData != null) {\n       firstChunkMetaData.getChunkLoader().close();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTgxNw==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373469817", "bodyText": "SeriesBatchReader", "author": "qiaojialin", "createdAt": "2020-01-31T13:06:25Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -419,4 +490,148 @@ public void close() throws IOException {\n       openedChunkLoader.close();\n     }\n   }\n+\n+  public IPointReader getIPointReader() {\n+    return new Ite();\n+  }\n+\n+  public IBatchReader getIBatchReader() {\n+    return new BatchIte();\n+  }\n+\n+  private class BatchIte implements IBatchReader {", "originalCommit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "742cbe8ffc7668148127a832f43293739b3362a6", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nsimilarity index 97%\nrename from server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nrename to server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nindex 2fec10cf7..df19d78df 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\n\n@@ -482,7 +482,7 @@ public class SeriesDataRandomReader implements IDataRandomReader, ManagedSeriesR\n     }\n   }\n \n-  public void close() throws IOException {\n+  public void closeReader() throws IOException {\n     if (firstChunkMetaData != null) {\n       firstChunkMetaData.getChunkLoader().close();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTkxNw==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373469917", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public IPointReader getIPointReader() {\n          \n          \n            \n              public IPointReader getPointReader() {", "author": "qiaojialin", "createdAt": "2020-01-31T13:06:38Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -419,4 +490,148 @@ public void close() throws IOException {\n       openedChunkLoader.close();\n     }\n   }\n+\n+  public IPointReader getIPointReader() {", "originalCommit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "742cbe8ffc7668148127a832f43293739b3362a6", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nsimilarity index 97%\nrename from server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nrename to server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nindex 2fec10cf7..df19d78df 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\n\n@@ -482,7 +482,7 @@ public class SeriesDataRandomReader implements IDataRandomReader, ManagedSeriesR\n     }\n   }\n \n-  public void close() throws IOException {\n+  public void closeReader() throws IOException {\n     if (firstChunkMetaData != null) {\n       firstChunkMetaData.getChunkLoader().close();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ2OTk4Ng==", "url": "https://github.com/apache/iotdb/pull/758#discussion_r373469986", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public IBatchReader getIBatchReader() {\n          \n          \n            \n              public IBatchReader getBatchReader() {", "author": "qiaojialin", "createdAt": "2020-01-31T13:06:49Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java", "diffHunk": "@@ -419,4 +490,148 @@ public void close() throws IOException {\n       openedChunkLoader.close();\n     }\n   }\n+\n+  public IPointReader getIPointReader() {\n+    return new Ite();\n+  }\n+\n+  public IBatchReader getIBatchReader() {", "originalCommit": "ba9330b12cca1b736bb1c592fbfe6230605638a3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "742cbe8ffc7668148127a832f43293739b3362a6", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nsimilarity index 97%\nrename from server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\nrename to server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\nindex 2fec10cf7..df19d78df 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesDataRandomReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/SeriesReader.java\n\n@@ -482,7 +482,7 @@ public class SeriesDataRandomReader implements IDataRandomReader, ManagedSeriesR\n     }\n   }\n \n-  public void close() throws IOException {\n+  public void closeReader() throws IOException {\n     if (firstChunkMetaData != null) {\n       firstChunkMetaData.getChunkLoader().close();\n     }\n"}}, {"oid": "742cbe8ffc7668148127a832f43293739b3362a6", "url": "https://github.com/apache/iotdb/commit/742cbe8ffc7668148127a832f43293739b3362a6", "message": "remove unused class", "committedDate": "2020-01-31T13:23:47Z", "type": "commit"}]}