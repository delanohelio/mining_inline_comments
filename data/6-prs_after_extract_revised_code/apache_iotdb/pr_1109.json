{"pr_number": 1109, "pr_title": "[IOTDB-624]Fix a Last cache bug when WAL is disabled", "pr_createdAt": "2020-04-27T11:20:10Z", "pr_url": "https://github.com/apache/iotdb/pull/1109", "timeline": [{"oid": "76c74ef69809cf3fde93ad32cce537a92738809f", "url": "https://github.com/apache/iotdb/commit/76c74ef69809cf3fde93ad32cce537a92738809f", "message": "Fix a Last cache bug when WAL is disabled", "committedDate": "2020-04-27T11:09:06Z", "type": "commit"}, {"oid": "2860a923232aec62582f05764064ead9d9722f3c", "url": "https://github.com/apache/iotdb/commit/2860a923232aec62582f05764064ead9d9722f3c", "message": "Add more comments", "committedDate": "2020-04-27T11:14:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczODgyNw==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415738827", "bodyText": "Reset to true in the end", "author": "qiaojialin", "createdAt": "2020-04-27T11:38:57Z", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -351,6 +352,47 @@ public void test() throws ClassNotFoundException, SQLException,\n     session.close();\n   }\n \n+  @Test\n+  public void TestSessionInterfacesWithDisabledWAL()\n+      throws StatementExecutionException, IoTDBConnectionException,\n+          BatchExecutionException {\n+    session = new Session(\"127.0.0.1\", 6667, \"root\", \"root\");\n+    try {\n+      session.open();\n+    } catch (IoTDBConnectionException e) {\n+      e.printStackTrace();\n+    }\n+\n+    session.setStorageGroup(\"root.sg1\");\n+    String deviceId = \"root.sg1.d1\";\n+\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(false);", "originalCommit": "2860a923232aec62582f05764064ead9d9722f3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NTUyOQ==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415875529", "bodyText": "Added", "author": "wshao08", "createdAt": "2020-04-27T14:45:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczODgyNw=="}], "type": "inlineReview", "revised_code": {"commit": "298b15b597bb2656fc59a5a1da72496b9105bc68", "chunk": "diff --git a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\nindex 6edfb15a6..a45b8c412 100644\n--- a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n+++ b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n\n@@ -389,8 +389,19 @@ public class IoTDBSessionIT {\n     schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n+    long[] timestamps = tablet.timestamps;\n+    Object[] values = tablet.values;\n+    for (int time = 1; time <= 100; time++) {\n+      timestamps[time - 1] = time;\n+      for (int i = 0; i < 3; i++) {\n+        long[] sensor = (long[]) values[i];\n+        sensor[time - 1] = i;\n+      }\n+      tablet.rowSize++;\n+    }\n \n-    session.testInsertTablet(tablet);\n+    session.insertTablet(tablet);\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(true);\n     session.close();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDE3MQ==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415750171", "bodyText": "Do not use testInsertRecord, use insertRecord", "author": "qiaojialin", "createdAt": "2020-04-27T11:57:26Z", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -351,6 +352,47 @@ public void test() throws ClassNotFoundException, SQLException,\n     session.close();\n   }\n \n+  @Test\n+  public void TestSessionInterfacesWithDisabledWAL()\n+      throws StatementExecutionException, IoTDBConnectionException,\n+          BatchExecutionException {\n+    session = new Session(\"127.0.0.1\", 6667, \"root\", \"root\");\n+    try {\n+      session.open();\n+    } catch (IoTDBConnectionException e) {\n+      e.printStackTrace();\n+    }\n+\n+    session.setStorageGroup(\"root.sg1\");\n+    String deviceId = \"root.sg1.d1\";\n+\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(false);\n+    createTimeseries();\n+\n+    // test insert record\n+    List<String> measurements = new ArrayList<>();\n+    measurements.add(\"s1\");\n+    measurements.add(\"s2\");\n+    measurements.add(\"s3\");\n+    for (long time = 0; time < 100; time++) {\n+      List<String> values = new ArrayList<>();\n+      values.add(\"1\");\n+      values.add(\"2\");\n+      values.add(\"3\");\n+      session.testInsertRecord(deviceId, time, measurements, values);", "originalCommit": "2860a923232aec62582f05764064ead9d9722f3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NTQwMg==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415875402", "bodyText": "Fixed", "author": "wshao08", "createdAt": "2020-04-27T14:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDE3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "298b15b597bb2656fc59a5a1da72496b9105bc68", "chunk": "diff --git a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\nindex 6edfb15a6..a45b8c412 100644\n--- a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n+++ b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n\n@@ -389,8 +389,19 @@ public class IoTDBSessionIT {\n     schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n+    long[] timestamps = tablet.timestamps;\n+    Object[] values = tablet.values;\n+    for (int time = 1; time <= 100; time++) {\n+      timestamps[time - 1] = time;\n+      for (int i = 0; i < 3; i++) {\n+        long[] sensor = (long[]) values[i];\n+        sensor[time - 1] = i;\n+      }\n+      tablet.rowSize++;\n+    }\n \n-    session.testInsertTablet(tablet);\n+    session.insertTablet(tablet);\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(true);\n     session.close();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDQxOQ==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415750419", "bodyText": "do not use testInsertTablet, use insertTablet", "author": "qiaojialin", "createdAt": "2020-04-27T11:57:49Z", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -351,6 +352,47 @@ public void test() throws ClassNotFoundException, SQLException,\n     session.close();\n   }\n \n+  @Test\n+  public void TestSessionInterfacesWithDisabledWAL()\n+      throws StatementExecutionException, IoTDBConnectionException,\n+          BatchExecutionException {\n+    session = new Session(\"127.0.0.1\", 6667, \"root\", \"root\");\n+    try {\n+      session.open();\n+    } catch (IoTDBConnectionException e) {\n+      e.printStackTrace();\n+    }\n+\n+    session.setStorageGroup(\"root.sg1\");\n+    String deviceId = \"root.sg1.d1\";\n+\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(false);\n+    createTimeseries();\n+\n+    // test insert record\n+    List<String> measurements = new ArrayList<>();\n+    measurements.add(\"s1\");\n+    measurements.add(\"s2\");\n+    measurements.add(\"s3\");\n+    for (long time = 0; time < 100; time++) {\n+      List<String> values = new ArrayList<>();\n+      values.add(\"1\");\n+      values.add(\"2\");\n+      values.add(\"3\");\n+      session.testInsertRecord(deviceId, time, measurements, values);\n+    }\n+\n+    // test insert tablet\n+    List<MeasurementSchema> schemaList = new ArrayList<>();\n+    schemaList.add(new MeasurementSchema(\"s1\", TSDataType.INT64, TSEncoding.RLE));\n+    schemaList.add(new MeasurementSchema(\"s2\", TSDataType.INT64, TSEncoding.RLE));\n+    schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n+\n+    Tablet tablet = new Tablet(deviceId, schemaList, 100);\n+\n+    session.testInsertTablet(tablet);", "originalCommit": "2860a923232aec62582f05764064ead9d9722f3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NDMyMQ==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415874321", "bodyText": "Fixed", "author": "wshao08", "createdAt": "2020-04-27T14:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "298b15b597bb2656fc59a5a1da72496b9105bc68", "chunk": "diff --git a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\nindex 6edfb15a6..a45b8c412 100644\n--- a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n+++ b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n\n@@ -389,8 +389,19 @@ public class IoTDBSessionIT {\n     schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n+    long[] timestamps = tablet.timestamps;\n+    Object[] values = tablet.values;\n+    for (int time = 1; time <= 100; time++) {\n+      timestamps[time - 1] = time;\n+      for (int i = 0; i < 3; i++) {\n+        long[] sensor = (long[]) values[i];\n+        sensor[time - 1] = i;\n+      }\n+      tablet.rowSize++;\n+    }\n \n-    session.testInsertTablet(tablet);\n+    session.insertTablet(tablet);\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(true);\n     session.close();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDcxMA==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415750710", "bodyText": "this table does not have any data, it will not be sent to the server.\nLook the SessionExample to see the use of Tablet", "author": "qiaojialin", "createdAt": "2020-04-27T11:58:19Z", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -351,6 +352,47 @@ public void test() throws ClassNotFoundException, SQLException,\n     session.close();\n   }\n \n+  @Test\n+  public void TestSessionInterfacesWithDisabledWAL()\n+      throws StatementExecutionException, IoTDBConnectionException,\n+          BatchExecutionException {\n+    session = new Session(\"127.0.0.1\", 6667, \"root\", \"root\");\n+    try {\n+      session.open();\n+    } catch (IoTDBConnectionException e) {\n+      e.printStackTrace();\n+    }\n+\n+    session.setStorageGroup(\"root.sg1\");\n+    String deviceId = \"root.sg1.d1\";\n+\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(false);\n+    createTimeseries();\n+\n+    // test insert record\n+    List<String> measurements = new ArrayList<>();\n+    measurements.add(\"s1\");\n+    measurements.add(\"s2\");\n+    measurements.add(\"s3\");\n+    for (long time = 0; time < 100; time++) {\n+      List<String> values = new ArrayList<>();\n+      values.add(\"1\");\n+      values.add(\"2\");\n+      values.add(\"3\");\n+      session.testInsertRecord(deviceId, time, measurements, values);\n+    }\n+\n+    // test insert tablet\n+    List<MeasurementSchema> schemaList = new ArrayList<>();\n+    schemaList.add(new MeasurementSchema(\"s1\", TSDataType.INT64, TSEncoding.RLE));\n+    schemaList.add(new MeasurementSchema(\"s2\", TSDataType.INT64, TSEncoding.RLE));\n+    schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n+\n+    Tablet tablet = new Tablet(deviceId, schemaList, 100);", "originalCommit": "2860a923232aec62582f05764064ead9d9722f3c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg3NTY4OQ==", "url": "https://github.com/apache/iotdb/pull/1109#discussion_r415875689", "bodyText": "Fixed", "author": "wshao08", "createdAt": "2020-04-27T14:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc1MDcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "298b15b597bb2656fc59a5a1da72496b9105bc68", "chunk": "diff --git a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\nindex 6edfb15a6..a45b8c412 100644\n--- a/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n+++ b/session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java\n\n@@ -389,8 +389,19 @@ public class IoTDBSessionIT {\n     schemaList.add(new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n \n     Tablet tablet = new Tablet(deviceId, schemaList, 100);\n+    long[] timestamps = tablet.timestamps;\n+    Object[] values = tablet.values;\n+    for (int time = 1; time <= 100; time++) {\n+      timestamps[time - 1] = time;\n+      for (int i = 0; i < 3; i++) {\n+        long[] sensor = (long[]) values[i];\n+        sensor[time - 1] = i;\n+      }\n+      tablet.rowSize++;\n+    }\n \n-    session.testInsertTablet(tablet);\n+    session.insertTablet(tablet);\n+    IoTDBDescriptor.getInstance().getConfig().setEnableWal(true);\n     session.close();\n   }\n \n"}}, {"oid": "298b15b597bb2656fc59a5a1da72496b9105bc68", "url": "https://github.com/apache/iotdb/commit/298b15b597bb2656fc59a5a1da72496b9105bc68", "message": "Fix test case", "committedDate": "2020-04-27T14:43:26Z", "type": "commit"}, {"oid": "0909f8b17f3e545e2aacf035f89d97d26bc7a114", "url": "https://github.com/apache/iotdb/commit/0909f8b17f3e545e2aacf035f89d97d26bc7a114", "message": "use insertRecord and insertTablet in test cases", "committedDate": "2020-04-27T14:45:18Z", "type": "commit"}, {"oid": "81b5d62e41afab16ca573d1069b82f48a0f1079e", "url": "https://github.com/apache/iotdb/commit/81b5d62e41afab16ca573d1069b82f48a0f1079e", "message": "Fix config change in test", "committedDate": "2020-04-28T01:14:22Z", "type": "commit"}]}