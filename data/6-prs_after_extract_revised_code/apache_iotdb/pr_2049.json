{"pr_number": 2049, "pr_title": "[IOTDB-1007]Fix session pool concurrency and leakage issue when pool.close is called", "pr_createdAt": "2020-11-14T10:05:56Z", "pr_url": "https://github.com/apache/iotdb/pull/2049", "timeline": [{"oid": "011c4346cbfc8770330f532b3f8e396738dca74a", "url": "https://github.com/apache/iotdb/commit/011c4346cbfc8770330f532b3f8e396738dca74a", "message": "fix session pool bug when someone call pool.close", "committedDate": "2020-11-14T09:38:10Z", "type": "commit"}, {"oid": "8ce9467638f345c682d43f7aea2011c88324616c", "url": "https://github.com/apache/iotdb/commit/8ce9467638f345c682d43f7aea2011c88324616c", "message": "add tset case", "committedDate": "2020-11-14T10:03:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTQ4NA==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859484", "bodyText": "I think it should be volatile, cause it is used outside a synchronized block somewhere below", "author": "JackieTien97", "createdAt": "2020-11-16T02:08:42Z", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -76,6 +76,8 @@\n   private boolean enableCompression = false;\n   private ZoneId zoneId;\n \n+  private boolean closed;//whether the queue is closed.", "originalCommit": "8ce9467638f345c682d43f7aea2011c88324616c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTM4NA==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865384", "bodyText": "but it does not take native effective if a thread sees the value of closed with a latency.", "author": "jixuan1989", "createdAt": "2020-11-16T02:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTQ4NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTY2Mg==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859662", "bodyText": "I think notify() is better, cause only one thread can get session.", "author": "JackieTien97", "createdAt": "2020-11-16T02:09:35Z", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -110,20 +112,64 @@ public SessionPool(String ip, int port, String user, String password, int maxSiz\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   private Session getSession() throws IoTDBConnectionException {\n     Session session = queue.poll();\n+    if (closed) {\n+      throw new IoTDBConnectionException(\"Session pool is closed\");\n+    }\n     if (session != null) {\n       return session;\n     } else {\n+      long start = System.currentTimeMillis();\n+      boolean canCreate = false;\n       synchronized (this) {\n-        long start = System.currentTimeMillis();\n+        if (size < maxSize) {\n+          //we can create more session\n+          size++;\n+          canCreate = true;\n+          //but we do it after skip synchronized block because connection a session is time consuming.\n+        }\n+      }\n+      if (canCreate) {\n+        //create a new one.\n+        if (logger.isDebugEnabled()) {\n+          logger.debug(\"Create a new Session {}, {}, {}, {}\", ip, port, user, password);\n+        }\n+        session = new Session(ip, port, user, password, fetchSize, zoneId);\n+        try {\n+          session.open(enableCompression);\n+          //avoid someone has called close() the session pool\n+          synchronized (this) {\n+            if (closed) {\n+              //have to release the connection...\n+              session.close();\n+              throw new IoTDBConnectionException(\"Session pool is closed\");\n+            } else {\n+              return session;\n+            }\n+          }\n+        } catch (IoTDBConnectionException e) {\n+          //if exception, we will throw the exception.\n+          //Meanwhile, we have to set size--\n+          synchronized (this) {\n+            size--;\n+            this.notifyAll();", "originalCommit": "8ce9467638f345c682d43f7aea2011c88324616c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "chunk": "diff --git a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\nindex 48f278fcb..ce04de95a 100644\n--- a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n+++ b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n\n@@ -151,7 +151,7 @@ public class SessionPool {\n           //Meanwhile, we have to set size--\n           synchronized (this) {\n             size--;\n-            this.notifyAll();\n+            this.notify();\n             if (logger.isDebugEnabled()) {\n               logger.debug(\"open session failed, reduce the count and notify others...\");\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTc3Mw==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859773", "bodyText": "notify() is better.", "author": "JackieTien97", "createdAt": "2020-11-16T02:09:56Z", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -178,6 +207,10 @@ private void putBack(Session session) {\n     queue.push(session);\n     synchronized (this) {\n       this.notifyAll();", "originalCommit": "8ce9467638f345c682d43f7aea2011c88324616c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTk3Nw==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865977", "bodyText": "fixed.", "author": "jixuan1989", "createdAt": "2020-11-16T02:37:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "chunk": "diff --git a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\nindex 48f278fcb..ce04de95a 100644\n--- a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n+++ b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n\n@@ -206,7 +206,7 @@ public class SessionPool {\n   private void putBack(Session session) {\n     queue.push(session);\n     synchronized (this) {\n-      this.notifyAll();\n+      this.notify();\n       //comment the following codes as putBack is too frequently called.\n //      if (logger.isTraceEnabled()) {\n //        logger.trace(\"put a session back and notify others..., queue.size = {}\", queue.size());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTg0OQ==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859849", "bodyText": "notify() is better.", "author": "JackieTien97", "createdAt": "2020-11-16T02:10:21Z", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -223,10 +260,12 @@ public void closeResultSet(SessionDataSetWrapper wrapper) {\n   }\n \n   private synchronized void removeSession() {\n+    logger.warn(\"Remove a broken Session {}, {}, {}\", ip, port, user);\n+    size--;\n+    this.notifyAll();", "originalCommit": "8ce9467638f345c682d43f7aea2011c88324616c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTk2Ng==", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865966", "bodyText": "fixed.", "author": "jixuan1989", "createdAt": "2020-11-16T02:37:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTg0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "chunk": "diff --git a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\nindex 48f278fcb..ce04de95a 100644\n--- a/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n+++ b/session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java\n\n@@ -262,7 +262,7 @@ public class SessionPool {\n   private synchronized void removeSession() {\n     logger.warn(\"Remove a broken Session {}, {}, {}\", ip, port, user);\n     size--;\n-    this.notifyAll();\n+    this.notify();\n     if (logger.isDebugEnabled()) {\n         logger.debug(\"remove a broken session and notify others..., queue.size = {}\", queue.size());\n     }\n"}}, {"oid": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "url": "https://github.com/apache/iotdb/commit/26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "message": "change notifyAll to notify to save CPU", "committedDate": "2020-11-16T02:35:54Z", "type": "commit"}, {"oid": "73eaf17cf7ac038336fa85120074a604d65718f2", "url": "https://github.com/apache/iotdb/commit/73eaf17cf7ac038336fa85120074a604d65718f2", "message": "fix some code smell", "committedDate": "2020-11-16T03:06:09Z", "type": "commit"}]}