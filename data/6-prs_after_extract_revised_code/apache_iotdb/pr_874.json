{"pr_number": 874, "pr_title": "[IOTDB-536] Process about nonExistMeasurement and ConstantMeasurement in AlignByDevice is complex and not intuitive", "pr_createdAt": "2020-03-03T09:02:47Z", "pr_url": "https://github.com/apache/iotdb/pull/874", "timeline": [{"oid": "c9cce2c9352f90dca9346f63fe1730ce35bae26f", "url": "https://github.com/apache/iotdb/commit/c9cce2c9352f90dca9346f63fe1730ce35bae26f", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-02-17T06:59:14Z", "type": "commit"}, {"oid": "27d100885dbcad4c0e11f4eca354c31e8bf5f1d5", "url": "https://github.com/apache/iotdb/commit/27d100885dbcad4c0e11f4eca354c31e8bf5f1d5", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-03T04:15:08Z", "type": "commit"}, {"oid": "70346a45226454cdc9bfa0272ef8ad12c7cf99e1", "url": "https://github.com/apache/iotdb/commit/70346a45226454cdc9bfa0272ef8ad12c7cf99e1", "message": "Version: 1.0 With bug", "committedDate": "2020-03-03T07:00:20Z", "type": "commit"}, {"oid": "f4fb5adf57bf61f922c37d48dd724bfcad30ec8a", "url": "https://github.com/apache/iotdb/commit/f4fb5adf57bf61f922c37d48dd724bfcad30ec8a", "message": "Version 2.0: Fix bugs", "committedDate": "2020-03-03T07:53:59Z", "type": "commit"}, {"oid": "c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "url": "https://github.com/apache/iotdb/commit/c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "message": "Version 2.1: Fix typo and comments", "committedDate": "2020-03-03T08:58:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MjIzMA==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r386992230", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * The data type is considered as String and the value is considered is the same with measurement name.\n          \n          \n            \n               * The data type is considered as String and the value is the measurement name.", "author": "qiaojialin", "createdAt": "2020-03-03T12:39:25Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java", "diffHunk": "@@ -113,64 +114,14 @@ public void setAggregationPlan(AggregationPlan aggregationPlan) {\n     this.setOperatorType(Operator.OperatorType.AGGREGATION);\n   }\n \n-  //we use the following algorithm to reproduce the order of measurements that user writes.\n-  //suppose user writes SELECT 'c1',a1,b1,b2,'c2',a2,a3,'c3',b3,a4,a5 FROM ... where for each a_i\n-  // column there is at least one device having it, and for each b_i column there is no device\n-  // having it, and 'c_i' is a const column.\n-  // Then, measurements is {a1, a2, a3, a4, a5};\n-  // notExistMeasurements = {b1, b2, b3}, and positionOfNotExistMeasurements is {2, 3, 8};\n-  // constMeasurements is {'c1', 'c2', 'c3'}, and positionOfConstMeasurements is {0, 4, 7}.\n-  // When to reproduce the order of measurements. The pseudocode is:\n-  //<pre>\n-  // current = 0;\n-  // if (min(notExist, const) <= current) {\n-  //  pull min_element(notExist, const);\n-  // } else {\n-  //  pull from measurements;\n-  // }\n-  // current ++;\n-  //</pre>\n-\n-  public void addNotExistMeasurement(int position, String measurement) {\n-    notExistMeasurements.add(measurement);\n-    positionOfNotExistMeasurements.add(position);\n-  }\n-\n-  public void addConstMeasurement(int position, String measurement) {\n-    constMeasurements.add(measurement);\n-    positionOfConstMeasurements.add(position);\n-  }\n-\n-  public List<String> getNotExistMeasurements() {\n-    return notExistMeasurements;\n-  }\n-\n-  public void setNotExistMeasurements(List<String> notExistMeasurements) {\n-    this.notExistMeasurements = notExistMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfNotExistMeasurements() {\n-    return positionOfNotExistMeasurements;\n-  }\n-\n-  public void setPositionOfNotExistMeasurements(\n-      List<Integer> positionOfNotExistMeasurements) {\n-    this.positionOfNotExistMeasurements = positionOfNotExistMeasurements;\n-  }\n-\n-  public List<String> getConstMeasurements() {\n-    return constMeasurements;\n-  }\n-\n-  public void setConstMeasurements(List<String> constMeasurements) {\n-    this.constMeasurements = constMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfConstMeasurements() {\n-    return positionOfConstMeasurements;\n-  }\n-\n-  public void setPositionOfConstMeasurements(List<Integer> positionOfConstMeasurements) {\n-    this.positionOfConstMeasurements = positionOfConstMeasurements;\n+  /**\n+   * Normal: the measurements which don't belong to NonExist and Constant.\n+   * NonExist: the measurements that do not exist in any device, data type is considered as String.\n+   * The value is considered as null.\n+   * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n+   * The data type is considered as String and the value is considered is the same with measurement name.", "originalCommit": "c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5ODI0NA==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r387498244", "bodyText": "Fixed.", "author": "Alima777", "createdAt": "2020-03-04T07:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MjIzMA=="}], "type": "inlineReview", "revised_code": {"commit": "0f68d2faea2ad04d08aefa5d1b136bce1b0b60a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\nindex 99a11ff72c..2630a76fc3 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n\n@@ -119,7 +119,7 @@ public class AlignByDevicePlan extends QueryPlan {\n    * NonExist: the measurements that do not exist in any device, data type is considered as String.\n    * The value is considered as null.\n    * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n-   * The data type is considered as String and the value is considered is the same with measurement name.\n+   * The data type is considered as String and the value is the measurement name.\n    */\n   public enum measurementType {\n     Normal, NonExist, Const;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MzUyMA==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r386993520", "bodyText": "rename the  pathForDataType to pathWithAggregation", "author": "qiaojialin", "createdAt": "2020-03-03T12:42:01Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java", "diffHunk": "@@ -320,9 +323,10 @@ private PhysicalPlan transformQuery(QueryOperator queryOperator)\n                 dataTypeConsistencyChecker.put(measurementChecked, dataType);\n               }\n \n-              // update measurementSetOfGivenSuffix and measurement location\n-              if (measurementSetOfGivenSuffix.add(measurementChecked)) {\n-                loc++;\n+              // update measurementSetOfGivenSuffix and Normal measurement", "originalCommit": "c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5NzU4Nw==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r387497587", "bodyText": "Sorry? Apparently it may without aggregation.", "author": "Alima777", "createdAt": "2020-03-04T07:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MzUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "2c2ba3ba49b137f1ff6f3ee5e829a8844ba15296", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java b/server/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java\nindex a3393d3cfa..84b6019613 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/strategy/PhysicalGenerator.java\n\n@@ -312,15 +312,15 @@ public class PhysicalGenerator {\n                 measurementChecked = path.getMeasurement();\n               }\n               TSDataType dataType = TSServiceImpl.getSeriesType(pathForDataType);\n-              if (dataTypeConsistencyChecker.containsKey(measurementChecked)) {\n-                if (!dataType.equals(dataTypeConsistencyChecker.get(measurementChecked))) {\n+              if (measurementDataTypeMap.containsKey(measurementChecked)) {\n+                if (!dataType.equals(measurementDataTypeMap.get(measurementChecked))) {\n                   throw new QueryProcessException(\n                       \"The data types of the same measurement column should be the same across \"\n                           + \"devices in ALIGN_BY_DEVICE sql. For more details please refer to the \"\n                           + \"SQL document.\");\n                 }\n               } else {\n-                dataTypeConsistencyChecker.put(measurementChecked, dataType);\n+                measurementDataTypeMap.put(measurementChecked, dataType);\n               }\n \n               // update measurementSetOfGivenSuffix and Normal measurement\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NjU1MQ==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r386996551", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Normal, NonExist, Const;\n          \n          \n            \n                Exist, NonExist, Constant", "author": "qiaojialin", "createdAt": "2020-03-03T12:48:04Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java", "diffHunk": "@@ -113,64 +114,14 @@ public void setAggregationPlan(AggregationPlan aggregationPlan) {\n     this.setOperatorType(Operator.OperatorType.AGGREGATION);\n   }\n \n-  //we use the following algorithm to reproduce the order of measurements that user writes.\n-  //suppose user writes SELECT 'c1',a1,b1,b2,'c2',a2,a3,'c3',b3,a4,a5 FROM ... where for each a_i\n-  // column there is at least one device having it, and for each b_i column there is no device\n-  // having it, and 'c_i' is a const column.\n-  // Then, measurements is {a1, a2, a3, a4, a5};\n-  // notExistMeasurements = {b1, b2, b3}, and positionOfNotExistMeasurements is {2, 3, 8};\n-  // constMeasurements is {'c1', 'c2', 'c3'}, and positionOfConstMeasurements is {0, 4, 7}.\n-  // When to reproduce the order of measurements. The pseudocode is:\n-  //<pre>\n-  // current = 0;\n-  // if (min(notExist, const) <= current) {\n-  //  pull min_element(notExist, const);\n-  // } else {\n-  //  pull from measurements;\n-  // }\n-  // current ++;\n-  //</pre>\n-\n-  public void addNotExistMeasurement(int position, String measurement) {\n-    notExistMeasurements.add(measurement);\n-    positionOfNotExistMeasurements.add(position);\n-  }\n-\n-  public void addConstMeasurement(int position, String measurement) {\n-    constMeasurements.add(measurement);\n-    positionOfConstMeasurements.add(position);\n-  }\n-\n-  public List<String> getNotExistMeasurements() {\n-    return notExistMeasurements;\n-  }\n-\n-  public void setNotExistMeasurements(List<String> notExistMeasurements) {\n-    this.notExistMeasurements = notExistMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfNotExistMeasurements() {\n-    return positionOfNotExistMeasurements;\n-  }\n-\n-  public void setPositionOfNotExistMeasurements(\n-      List<Integer> positionOfNotExistMeasurements) {\n-    this.positionOfNotExistMeasurements = positionOfNotExistMeasurements;\n-  }\n-\n-  public List<String> getConstMeasurements() {\n-    return constMeasurements;\n-  }\n-\n-  public void setConstMeasurements(List<String> constMeasurements) {\n-    this.constMeasurements = constMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfConstMeasurements() {\n-    return positionOfConstMeasurements;\n-  }\n-\n-  public void setPositionOfConstMeasurements(List<Integer> positionOfConstMeasurements) {\n-    this.positionOfConstMeasurements = positionOfConstMeasurements;\n+  /**\n+   * Normal: the measurements which don't belong to NonExist and Constant.\n+   * NonExist: the measurements that do not exist in any device, data type is considered as String.\n+   * The value is considered as null.\n+   * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n+   * The data type is considered as String and the value is considered is the same with measurement name.\n+   */\n+  public enum measurementType {\n+    Normal, NonExist, Const;", "originalCommit": "c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMDEyNw==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r387500127", "bodyText": "Fixed.", "author": "Alima777", "createdAt": "2020-03-04T08:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NjU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0f68d2faea2ad04d08aefa5d1b136bce1b0b60a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\nindex 99a11ff72c..2630a76fc3 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n\n@@ -119,7 +119,7 @@ public class AlignByDevicePlan extends QueryPlan {\n    * NonExist: the measurements that do not exist in any device, data type is considered as String.\n    * The value is considered as null.\n    * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n-   * The data type is considered as String and the value is considered is the same with measurement name.\n+   * The data type is considered as String and the value is the measurement name.\n    */\n   public enum measurementType {\n     Normal, NonExist, Const;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NzA5MQ==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r386997091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public enum measurementType {\n          \n          \n            \n              public enum MeasurementType {", "author": "qiaojialin", "createdAt": "2020-03-03T12:49:04Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java", "diffHunk": "@@ -113,64 +114,14 @@ public void setAggregationPlan(AggregationPlan aggregationPlan) {\n     this.setOperatorType(Operator.OperatorType.AGGREGATION);\n   }\n \n-  //we use the following algorithm to reproduce the order of measurements that user writes.\n-  //suppose user writes SELECT 'c1',a1,b1,b2,'c2',a2,a3,'c3',b3,a4,a5 FROM ... where for each a_i\n-  // column there is at least one device having it, and for each b_i column there is no device\n-  // having it, and 'c_i' is a const column.\n-  // Then, measurements is {a1, a2, a3, a4, a5};\n-  // notExistMeasurements = {b1, b2, b3}, and positionOfNotExistMeasurements is {2, 3, 8};\n-  // constMeasurements is {'c1', 'c2', 'c3'}, and positionOfConstMeasurements is {0, 4, 7}.\n-  // When to reproduce the order of measurements. The pseudocode is:\n-  //<pre>\n-  // current = 0;\n-  // if (min(notExist, const) <= current) {\n-  //  pull min_element(notExist, const);\n-  // } else {\n-  //  pull from measurements;\n-  // }\n-  // current ++;\n-  //</pre>\n-\n-  public void addNotExistMeasurement(int position, String measurement) {\n-    notExistMeasurements.add(measurement);\n-    positionOfNotExistMeasurements.add(position);\n-  }\n-\n-  public void addConstMeasurement(int position, String measurement) {\n-    constMeasurements.add(measurement);\n-    positionOfConstMeasurements.add(position);\n-  }\n-\n-  public List<String> getNotExistMeasurements() {\n-    return notExistMeasurements;\n-  }\n-\n-  public void setNotExistMeasurements(List<String> notExistMeasurements) {\n-    this.notExistMeasurements = notExistMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfNotExistMeasurements() {\n-    return positionOfNotExistMeasurements;\n-  }\n-\n-  public void setPositionOfNotExistMeasurements(\n-      List<Integer> positionOfNotExistMeasurements) {\n-    this.positionOfNotExistMeasurements = positionOfNotExistMeasurements;\n-  }\n-\n-  public List<String> getConstMeasurements() {\n-    return constMeasurements;\n-  }\n-\n-  public void setConstMeasurements(List<String> constMeasurements) {\n-    this.constMeasurements = constMeasurements;\n-  }\n-\n-  public List<Integer> getPositionOfConstMeasurements() {\n-    return positionOfConstMeasurements;\n-  }\n-\n-  public void setPositionOfConstMeasurements(List<Integer> positionOfConstMeasurements) {\n-    this.positionOfConstMeasurements = positionOfConstMeasurements;\n+  /**\n+   * Normal: the measurements which don't belong to NonExist and Constant.\n+   * NonExist: the measurements that do not exist in any device, data type is considered as String.\n+   * The value is considered as null.\n+   * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n+   * The data type is considered as String and the value is considered is the same with measurement name.\n+   */\n+  public enum measurementType {", "originalCommit": "c21e7c984d0ca671f9b22c5912f2e0defa5ed240", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ5NTI5Ng==", "url": "https://github.com/apache/iotdb/pull/874#discussion_r387495296", "bodyText": "Fixed.", "author": "Alima777", "createdAt": "2020-03-04T07:48:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NzA5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "0f68d2faea2ad04d08aefa5d1b136bce1b0b60a3", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\nindex 99a11ff72c..2630a76fc3 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n\n@@ -119,7 +119,7 @@ public class AlignByDevicePlan extends QueryPlan {\n    * NonExist: the measurements that do not exist in any device, data type is considered as String.\n    * The value is considered as null.\n    * Const: the measurements that have quotation mark. e.g. \"abc\",'11'.\n-   * The data type is considered as String and the value is considered is the same with measurement name.\n+   * The data type is considered as String and the value is the measurement name.\n    */\n   public enum measurementType {\n     Normal, NonExist, Const;\n"}}, {"oid": "2c2ba3ba49b137f1ff6f3ee5e829a8844ba15296", "url": "https://github.com/apache/iotdb/commit/2c2ba3ba49b137f1ff6f3ee5e829a8844ba15296", "message": "Fix typo", "committedDate": "2020-03-04T03:35:15Z", "type": "commit"}, {"oid": "84c153e5e6112779d7099c7b90ee28fa25e33ab4", "url": "https://github.com/apache/iotdb/commit/84c153e5e6112779d7099c7b90ee28fa25e33ab4", "message": "Add document", "committedDate": "2020-03-04T07:45:40Z", "type": "commit"}, {"oid": "0f68d2faea2ad04d08aefa5d1b136bce1b0b60a3", "url": "https://github.com/apache/iotdb/commit/0f68d2faea2ad04d08aefa5d1b136bce1b0b60a3", "message": "Update server/src/main/java/org/apache/iotdb/db/qp/physical/crud/AlignByDevicePlan.java\n\nCo-Authored-By: Jialin Qiao <qjl16@mails.tsinghua.edu.cn>", "committedDate": "2020-03-04T07:46:55Z", "type": "commit"}, {"oid": "a3ea8579bc739222e5de62b05832f5b2fb43021b", "url": "https://github.com/apache/iotdb/commit/a3ea8579bc739222e5de62b05832f5b2fb43021b", "message": "Fix typo", "committedDate": "2020-03-04T07:56:22Z", "type": "commit"}, {"oid": "05e11b2bea9587f8995367cc7c34d9a24aa448f5", "url": "https://github.com/apache/iotdb/commit/05e11b2bea9587f8995367cc7c34d9a24aa448f5", "message": "Merge branch 'AlignByDeviceLogic' of github.com:Alima777/incubator-iotdb into AlignByDeviceLogic", "committedDate": "2020-03-04T07:58:35Z", "type": "commit"}, {"oid": "48d8c75df982bf475cb5e880846f24b9de2f62dc", "url": "https://github.com/apache/iotdb/commit/48d8c75df982bf475cb5e880846f24b9de2f62dc", "message": "Fix typo", "committedDate": "2020-03-04T08:04:33Z", "type": "commit"}, {"oid": "87dcd5ccfbdfb632295a8602df2a5d6d059f4f87", "url": "https://github.com/apache/iotdb/commit/87dcd5ccfbdfb632295a8602df2a5d6d059f4f87", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-05T03:28:01Z", "type": "commit"}, {"oid": "4e042c1a6aea35eccb257ea408a2c028fec1ccac", "url": "https://github.com/apache/iotdb/commit/4e042c1a6aea35eccb257ea408a2c028fec1ccac", "message": "Fix conflict", "committedDate": "2020-03-05T03:31:10Z", "type": "commit"}, {"oid": "0f0c9cffef6f725d1a642c0aadc0c2812626267a", "url": "https://github.com/apache/iotdb/commit/0f0c9cffef6f725d1a642c0aadc0c2812626267a", "message": "Fix Requests", "committedDate": "2020-03-05T03:44:22Z", "type": "commit"}, {"oid": "30c663a9c803c0961bbc6bff8b05fee3650a9162", "url": "https://github.com/apache/iotdb/commit/30c663a9c803c0961bbc6bff8b05fee3650a9162", "message": "Fix typo", "committedDate": "2020-03-05T08:44:44Z", "type": "commit"}, {"oid": "c75572625cfb6d41e411b1701c672b2148e526d1", "url": "https://github.com/apache/iotdb/commit/c75572625cfb6d41e411b1701c672b2148e526d1", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb", "committedDate": "2020-03-05T08:50:10Z", "type": "commit"}, {"oid": "cc16e48d8f9187103a2deab1c39a093a1b81f781", "url": "https://github.com/apache/iotdb/commit/cc16e48d8f9187103a2deab1c39a093a1b81f781", "message": "Fix conflict", "committedDate": "2020-03-05T09:02:08Z", "type": "commit"}]}