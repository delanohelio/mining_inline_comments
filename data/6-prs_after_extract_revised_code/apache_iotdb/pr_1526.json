{"pr_number": 1526, "pr_title": "[IOTDB-809] Separate read and write configurations", "pr_createdAt": "2020-07-20T09:03:02Z", "pr_url": "https://github.com/apache/iotdb/pull/1526", "timeline": [{"oid": "4637756254e3c546566b4415fb069cafe3553e18", "url": "https://github.com/apache/iotdb/commit/4637756254e3c546566b4415fb069cafe3553e18", "message": "separate read and write config", "committedDate": "2020-07-20T08:45:05Z", "type": "commit"}, {"oid": "62d4b79c498dd571e1c0f64a12ab563c46968caa", "url": "https://github.com/apache/iotdb/commit/62d4b79c498dd571e1c0f64a12ab563c46968caa", "message": "use read and write config", "committedDate": "2020-07-20T08:58:14Z", "type": "commit"}, {"oid": "f1bccea60151fee513fca15dda0ed1215c391f86", "url": "https://github.com/apache/iotdb/commit/f1bccea60151fee513fca15dda0ed1215c391f86", "message": "format", "committedDate": "2020-07-20T09:00:08Z", "type": "commit"}, {"oid": "b73dba1fbd5c8ea7da1549eb81afce86fb68e0a4", "url": "https://github.com/apache/iotdb/commit/b73dba1fbd5c8ea7da1549eb81afce86fb68e0a4", "message": "add read and write config", "committedDate": "2020-07-20T16:24:52Z", "type": "commit"}, {"oid": "d0ba3e3e7cc713875227441625539386edbda238", "url": "https://github.com/apache/iotdb/commit/d0ba3e3e7cc713875227441625539386edbda238", "message": "unify timeout config in cluster plan executor", "committedDate": "2020-07-21T06:22:16Z", "type": "commit"}, {"oid": "7ee062a54319f798ab91e2f2e1fe4417ca805ad2", "url": "https://github.com/apache/iotdb/commit/7ee062a54319f798ab91e2f2e1fe4417ca805ad2", "message": "timeout on client", "committedDate": "2020-07-21T15:09:42Z", "type": "commit"}, {"oid": "84774d1482d249a3997b209f62d2408285a0b18e", "url": "https://github.com/apache/iotdb/commit/84774d1482d249a3997b209f62d2408285a0b18e", "message": "add license", "committedDate": "2020-07-21T15:10:38Z", "type": "commit"}, {"oid": "d9337c3d393b7ca07b4a5aac5293b4e1539406fa", "url": "https://github.com/apache/iotdb/commit/d9337c3d393b7ca07b4a5aac5293b4e1539406fa", "message": "cast", "committedDate": "2020-07-21T15:33:14Z", "type": "commit"}, {"oid": "f58b217f7a9942a7c5366a917fb7cc878625c434", "url": "https://github.com/apache/iotdb/commit/f58b217f7a9942a7c5366a917fb7cc878625c434", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new", "committedDate": "2020-07-21T15:34:39Z", "type": "commit"}, {"oid": "f5164423ace28576378f59c2090d3301233f74c9", "url": "https://github.com/apache/iotdb/commit/f5164423ace28576378f59c2090d3301233f74c9", "message": "fix conflict", "committedDate": "2020-07-21T15:36:32Z", "type": "commit"}, {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c", "url": "https://github.com/apache/iotdb/commit/a15c183f82f28157bcbbb7a60b27ab2f3939a25c", "message": "format", "committedDate": "2020-07-21T16:25:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzcxNg==", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459193716", "bodyText": "It would be better if you enforce the parameter in the constructor to be TSocket, so there will be less chance to trigger a ClassCastException when the code is modified by another person.", "author": "jt2594838", "createdAt": "2020-07-23T03:14:47Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.cluster.client.rpcutils;\n+\n+import org.apache.thrift.transport.TFastFramedTransport;\n+import org.apache.thrift.transport.TSocket;\n+import org.apache.thrift.transport.TTransport;\n+\n+public class TimeoutChangeableTFastFramedTransport extends TFastFramedTransport {\n+\n+  TTransport underlying;\n+\n+  public TimeoutChangeableTFastFramedTransport(TTransport underlying) {\n+    super(underlying);\n+    this.underlying = underlying;\n+  }\n+\n+  public void setTimeout(int timeout){\n+    ((TSocket)underlying).setTimeout(timeout);\n+  }", "originalCommit": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMjQyNA==", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459202424", "bodyText": "Sure. That's more clear.", "author": "Ring-k", "createdAt": "2020-07-23T03:58:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzcxNg=="}], "type": "inlineReview", "revised_code": {"commit": "2143f3d89d1d3da37e83cc9ec4285482d793ccb0", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java b/cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java\nindex 80faac8b5a..8550a258f2 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java\n\n@@ -21,18 +21,17 @@ package org.apache.iotdb.cluster.client.rpcutils;\n \n import org.apache.thrift.transport.TFastFramedTransport;\n import org.apache.thrift.transport.TSocket;\n-import org.apache.thrift.transport.TTransport;\n \n public class TimeoutChangeableTFastFramedTransport extends TFastFramedTransport {\n \n-  TTransport underlying;\n+  TSocket underlying;\n \n-  public TimeoutChangeableTFastFramedTransport(TTransport underlying) {\n+  public TimeoutChangeableTFastFramedTransport(TSocket underlying) {\n     super(underlying);\n     this.underlying = underlying;\n   }\n \n   public void setTimeout(int timeout){\n-    ((TSocket)underlying).setTimeout(timeout);\n+    underlying.setTimeout(timeout);\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDM4MA==", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459194380", "bodyText": "The same transport is used in both input and output, so it is unnecessary to set twice.", "author": "jt2594838", "createdAt": "2020-07-23T03:17:56Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java", "diffHunk": "@@ -39,13 +39,20 @@\n   public SyncDataClient(TProtocolFactory protocolFactory, Node node, SyncClientPool pool)\n       throws TTransportException {\n     // the difference of the two clients lies in the port\n-    super(protocolFactory.getProtocol(new TFastFramedTransport(new TSocket(node.getIp(),\n-        node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n+    super(protocolFactory.getProtocol(new TimeoutChangeableTFastFramedTransport(\n+        new TSocket(node.getIp(), node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n     this.node = node;\n     this.pool = pool;\n     getInputProtocol().getTransport().open();\n   }\n \n+  public void setTimeout(int timeout) {\n+    ((TimeoutChangeableTFastFramedTransport) (getInputProtocol().getTransport()))\n+        .setTimeout(timeout);\n+    ((TimeoutChangeableTFastFramedTransport) (getOutputProtocol().getTransport()))\n+        .setTimeout(timeout);", "originalCommit": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMjUxNw==", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459202517", "bodyText": "Indeed. I will remove one.", "author": "Ring-k", "createdAt": "2020-07-23T03:58:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDM4MA=="}], "type": "inlineReview", "revised_code": {"commit": "2143f3d89d1d3da37e83cc9ec4285482d793ccb0", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java b/cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java\nindex 50357cbad5..d1dfb1fb8c 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java\n\n@@ -47,10 +47,9 @@ public class SyncDataClient extends Client {\n   }\n \n   public void setTimeout(int timeout) {\n+    // the same transport is used in both input and output\n     ((TimeoutChangeableTFastFramedTransport) (getInputProtocol().getTransport()))\n         .setTimeout(timeout);\n-    ((TimeoutChangeableTFastFramedTransport) (getOutputProtocol().getTransport()))\n-        .setTimeout(timeout);\n   }\n \n   public void putBack() {\n"}}, {"oid": "2143f3d89d1d3da37e83cc9ec4285482d793ccb0", "url": "https://github.com/apache/iotdb/commit/2143f3d89d1d3da37e83cc9ec4285482d793ccb0", "message": "improve", "committedDate": "2020-07-23T03:52:31Z", "type": "commit"}, {"oid": "9947c257b5cee9741bde71ea7b10e8d20a85e849", "url": "https://github.com/apache/iotdb/commit/9947c257b5cee9741bde71ea7b10e8d20a85e849", "message": "typo", "committedDate": "2020-07-23T03:55:30Z", "type": "commit"}]}