{"pr_number": 1665, "pr_title": "IOTDB-851: enhance failure tolerance when recover WAL", "pr_createdAt": "2020-09-01T04:02:01Z", "pr_url": "https://github.com/apache/iotdb/pull/1665", "timeline": [{"oid": "af5511710e1e880eb4acb8dc2b7645e75c6119ac", "url": "https://github.com/apache/iotdb/commit/af5511710e1e880eb4acb8dc2b7645e75c6119ac", "message": "WAL will skip error series instead of all series in the device", "committedDate": "2020-09-01T03:51:43Z", "type": "commit"}, {"oid": "2a4542234b8da3577ad613733b12e6eb611cbee7", "url": "https://github.com/apache/iotdb/commit/2a4542234b8da3577ad613733b12e6eb611cbee7", "message": "edit unit test", "committedDate": "2020-09-01T04:01:03Z", "type": "commit"}, {"oid": "c818bd5bb9620d6d9797bbcc14640d6c3fcc7cfc", "url": "https://github.com/apache/iotdb/commit/c818bd5bb9620d6d9797bbcc14640d6c3fcc7cfc", "message": "recover wal for insert plan", "committedDate": "2020-09-02T07:09:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyMTIzMg==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r481821232", "bodyText": "add comment to explain the reason", "author": "mychaow", "createdAt": "2020-09-02T07:17:13Z", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -164,11 +164,14 @@ private void replayInsert(InsertPlan plan) throws WriteProcessException, QueryPr\n     }\n     if (plan instanceof InsertRowPlan) {\n       InsertRowPlan tPlan = (InsertRowPlan) plan;\n+      ((InsertRowPlan) plan).setNeedInferType(false);", "originalCommit": "c818bd5bb9620d6d9797bbcc14640d6c3fcc7cfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc1NzA2MQ==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r482757061", "bodyText": "I think it will make others confused in the deserialization of InsertRowPlan. Cause that we should gurantee that the result of serialization and deserialization is the same, this set operation should be better in the here.", "author": "mychaow", "createdAt": "2020-09-03T07:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyMTIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzNzY0OQ==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r482837649", "bodyText": "+1", "author": "qiaojialin", "createdAt": "2020-09-03T09:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyMTIzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkxOTAzNQ==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r482919035", "bodyText": "Please put the ((InsertRowPlan) plan).setNeedInferType(false); into the deserialization of InsertRowPlan\n\nI think we should make the two function serialize(ByteBuffer) and Serialize(DataOutputStream)  have same action, so it's not a good way to setNeedInferType in deserialization.", "author": "mychaow", "createdAt": "2020-09-03T11:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyMTIzMg=="}], "type": "inlineReview", "revised_code": {"commit": "54ac7599ac481510cd1222a2ae2574ccb0bd9e01", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\nindex 6e20ebb3f0..19702b1176 100644\n--- a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n+++ b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n\n@@ -164,8 +164,11 @@ public class LogReplayer {\n     }\n     if (plan instanceof InsertRowPlan) {\n       InsertRowPlan tPlan = (InsertRowPlan) plan;\n+      //only inferTyp when users pass a String value\n+      //WAL already serializes the real data type, so no need to infer typ\n       ((InsertRowPlan) plan).setNeedInferType(false);\n       tPlan.setSchemasAndTransferType(schemas);\n+      //mark failed plan manually \n       checkDataTypeAndMarkFailed(schemas, tPlan);\n       recoverMemTable.insert(tPlan);\n     } else {\n"}}, {"oid": "54ac7599ac481510cd1222a2ae2574ccb0bd9e01", "url": "https://github.com/apache/iotdb/commit/54ac7599ac481510cd1222a2ae2574ccb0bd9e01", "message": "add comments", "committedDate": "2020-09-02T07:45:29Z", "type": "commit"}, {"oid": "2d8e5b8cb3ba4bd0b39dabc684fdcb8628b09803", "url": "https://github.com/apache/iotdb/commit/2d8e5b8cb3ba4bd0b39dabc684fdcb8628b09803", "message": "edit comments", "committedDate": "2020-09-02T07:48:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyNDk4NQ==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r483924985", "bodyText": "seems setSchemasAndTransferType  has marked the related data point failed already.", "author": "jixuan1989", "createdAt": "2020-09-05T08:01:22Z", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -164,11 +164,17 @@ private void replayInsert(InsertPlan plan) throws WriteProcessException, QueryPr\n     }\n     if (plan instanceof InsertRowPlan) {\n       InsertRowPlan tPlan = (InsertRowPlan) plan;\n+      //only infer type when users pass a String value\n+      //WAL already serializes the real data type, so no need to infer type\n+      ((InsertRowPlan) plan).setNeedInferType(false);\n       tPlan.setSchemasAndTransferType(schemas);\n+      //mark failed plan manually \n+      checkDataTypeAndMarkFailed(schemas, tPlan);", "originalCommit": "2d8e5b8cb3ba4bd0b39dabc684fdcb8628b09803", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkzNTI1OA==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r483935258", "bodyText": "Hi thank you for your review!\nHere i set plan.setNeedInferType(false)\nin setSchemasAndTransferType(schemas), it will only execute this.schemas = schemas\nit will not mark the data points as failed", "author": "haimeiguo", "createdAt": "2020-09-05T10:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyNDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0MTM0MA==", "url": "https://github.com/apache/iotdb/pull/1665#discussion_r483941340", "bodyText": "I see.", "author": "jixuan1989", "createdAt": "2020-09-05T11:22:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkyNDk4NQ=="}], "type": "inlineReview", "revised_code": null}]}