{"pr_number": 1345, "pr_title": "[IOTDB-759] Refactor MNode by removing InternalMNode", "pr_createdAt": "2020-06-11T01:58:09Z", "pr_url": "https://github.com/apache/iotdb/pull/1345", "timeline": [{"oid": "bdc587bb23b030ee79b674918c48cb687397f6ca", "url": "https://github.com/apache/iotdb/commit/bdc587bb23b030ee79b674918c48cb687397f6ca", "message": "[IOTDB-759] Refactor MNode by removing InternalMNode", "committedDate": "2020-06-11T01:55:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MjMwNA==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r438662304", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * write if the object not equals null. Eg, object eauals null, then write false.\n          \n          \n            \n               */\n          \n          \n            \n              /**\n          \n          \n            \n               * write if the object equals null. Eg, object equals null, then write true.\n          \n          \n            \n               */", "author": "HTHou", "createdAt": "2020-06-11T09:34:28Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "diffHunk": "@@ -105,15 +105,15 @@ public static byte readByte(ByteBuffer buffer) {\n   /**\n    * write if the object not equals null. Eg, object eauals null, then write false.\n    */", "originalCommit": "bdc587bb23b030ee79b674918c48cb687397f6ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwODE4Nw==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r438808187", "bodyText": "Thanks for the good catch !!!", "author": "samperson1997", "createdAt": "2020-06-11T13:58:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MjMwNA=="}], "type": "inlineReview", "revised_code": {"commit": "765c420589803883050f8e4068f8f8ceac8ca522", "chunk": "diff --git a/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java b/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\nindex 25c0557fcf..c88481c61b 100644\n--- a/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\n+++ b/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\n\n@@ -103,14 +103,14 @@ public class ReadWriteIOUtils {\n   }\n \n   /**\n-   * write if the object not equals null. Eg, object eauals null, then write false.\n+   * write if the object equals null. Eg, object equals null, then write true.\n    */\n   public static int writeIsNull(Object object, OutputStream outputStream) throws IOException {\n     return write(object == null, outputStream);\n   }\n \n   /**\n-   * write if the object not equals null. Eg, object eauals null, then write false.\n+   * write if the object equals null. Eg, object equals null, then write true.\n    */\n   public static int writeIsNull(Object object, ByteBuffer buffer) {\n     return write(object == null, buffer);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MzIzNQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r438663235", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * write if the object not equals null. Eg, object eauals null, then write false.\n          \n          \n            \n               */\n          \n          \n            \n              /**\n          \n          \n            \n               * write if the object equals null. Eg, object equals null, then write true.\n          \n          \n            \n               */", "author": "HTHou", "createdAt": "2020-06-11T09:36:06Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "diffHunk": "@@ -105,15 +105,15 @@ public static byte readByte(ByteBuffer buffer) {\n   /**\n    * write if the object not equals null. Eg, object eauals null, then write false.\n    */\n-  public static int writeIsNotNull(Object object, OutputStream outputStream) throws IOException {\n-    return write(object != null, outputStream);\n+  public static int writeIsNull(Object object, OutputStream outputStream) throws IOException {\n+    return write(object == null, outputStream);\n   }\n \n   /**\n    * write if the object not equals null. Eg, object eauals null, then write false.\n    */", "originalCommit": "bdc587bb23b030ee79b674918c48cb687397f6ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwODI1Mg==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r438808252", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-06-11T13:58:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY2MzIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "765c420589803883050f8e4068f8f8ceac8ca522", "chunk": "diff --git a/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java b/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\nindex 25c0557fcf..c88481c61b 100644\n--- a/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\n+++ b/tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java\n\n@@ -103,14 +103,14 @@ public class ReadWriteIOUtils {\n   }\n \n   /**\n-   * write if the object not equals null. Eg, object eauals null, then write false.\n+   * write if the object equals null. Eg, object equals null, then write true.\n    */\n   public static int writeIsNull(Object object, OutputStream outputStream) throws IOException {\n     return write(object == null, outputStream);\n   }\n \n   /**\n-   * write if the object not equals null. Eg, object eauals null, then write false.\n+   * write if the object equals null. Eg, object equals null, then write true.\n    */\n   public static int writeIsNull(Object object, ByteBuffer buffer) {\n     return write(object == null, buffer);\n"}}, {"oid": "765c420589803883050f8e4068f8f8ceac8ca522", "url": "https://github.com/apache/iotdb/commit/765c420589803883050f8e4068f8f8ceac8ca522", "message": "[IOTDB-726] CheckPoint of MTree", "committedDate": "2020-06-11T13:58:28Z", "type": "commit"}, {"oid": "20cea745937299db6b1545fe43e85379c8c6cf9b", "url": "https://github.com/apache/iotdb/commit/20cea745937299db6b1545fe43e85379c8c6cf9b", "message": "Merge remote-tracking branch 'origin/master' into mtree_checkpoint\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "committedDate": "2020-06-11T14:07:34Z", "type": "commit"}, {"oid": "5bab6c699c7b4aa8e53549514bfe293833cc4faf", "url": "https://github.com/apache/iotdb/commit/5bab6c699c7b4aa8e53549514bfe293833cc4faf", "message": "Merge master", "committedDate": "2020-06-11T14:10:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1ODQ4Nw==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r438858487", "bodyText": "I'm not sure about this. Whether should we change the lock logic of this method? As the measurementNode maybe internalNode now.", "author": "Alima777", "createdAt": "2020-06-11T15:11:32Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -44,49 +57,100 @@\n    */\n   protected String fullPath;\n \n+  Map<String, MNode> children;\n+  Map<String, MNode> aliasChildren;\n+\n+  protected ReadWriteLock lock = new ReentrantReadWriteLock();\n \n   /**\n    * Constructor of MNode.\n    */\n   public MNode(MNode parent, String name) {\n     this.parent = parent;\n     this.name = name;\n+    this.children = new LinkedHashMap<>();\n   }\n \n   /**\n    * check whether the MNode has a child with the name\n    */\n-  public abstract boolean hasChild(String name);\n+  public boolean hasChild(String name) {\n+    return this.children.containsKey(name) ||\n+        (aliasChildren != null && aliasChildren.containsKey(name));\n+  }\n \n   /**\n    * node key, name or alias\n    */\n-  public abstract void addChild(String name, MNode child);\n+  public void addChild(String name, MNode child) {\n+    children.put(name, child);\n+  }\n \n   /**\n-   * delete a child\n+   * If delete a leafMNode, lock its parent, if delete an InternalNode, lock itself\n    */\n-  public abstract void deleteChild(String name) throws DeleteFailedException;\n+  public void deleteChild(String name) throws DeleteFailedException {\n+    if (children.containsKey(name)) {\n+      Lock writeLock;\n+      // if its child node is leaf node, we need to acquire the write lock of the current device node\n+      if (children.get(name) instanceof MeasurementMNode) {\n+        writeLock = lock.writeLock();\n+      } else {\n+        // otherwise, we only need to acquire the write lock of its child node.\n+        writeLock = (children.get(name)).lock.writeLock();\n+      }", "originalCommit": "5bab6c699c7b4aa8e53549514bfe293833cc4faf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA3OTU0OA==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440079548", "bodyText": "Good point, thanks! I've fixed it.", "author": "samperson1997", "createdAt": "2020-06-15T10:26:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1ODQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "db6baca282953ef8080c6869c7495682882c9a97", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\nindex 7b61e55167..b9ea94d914 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n\n@@ -91,14 +87,8 @@ public class MNode implements Serializable {\n    */\n   public void deleteChild(String name) throws DeleteFailedException {\n     if (children.containsKey(name)) {\n-      Lock writeLock;\n-      // if its child node is leaf node, we need to acquire the write lock of the current device node\n-      if (children.get(name) instanceof MeasurementMNode) {\n-        writeLock = lock.writeLock();\n-      } else {\n-        // otherwise, we only need to acquire the write lock of its child node.\n-        writeLock = (children.get(name)).lock.writeLock();\n-      }\n+      // acquire the write lock of its child node.\n+      Lock writeLock = (children.get(name)).lock.writeLock();\n       if (writeLock.tryLock()) {\n         children.remove(name);\n         writeLock.unlock();\n"}}, {"oid": "81f7e59abc7a18adfb920c44e8d01c59e6c35838", "url": "https://github.com/apache/iotdb/commit/81f7e59abc7a18adfb920c44e8d01c59e6c35838", "message": "Merge remote-tracking branch 'origin/master' into mtree_checkpoint", "committedDate": "2020-06-13T03:37:01Z", "type": "commit"}, {"oid": "049bbfd1881bce5cdcf091b5e3ddd0d88c768b43", "url": "https://github.com/apache/iotdb/commit/049bbfd1881bce5cdcf091b5e3ddd0d88c768b43", "message": "Merge remote-tracking branch 'origin/master' into mtree_checkpoint\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeTask.java", "committedDate": "2020-06-15T10:22:04Z", "type": "commit"}, {"oid": "db6baca282953ef8080c6869c7495682882c9a97", "url": "https://github.com/apache/iotdb/commit/db6baca282953ef8080c6869c7495682882c9a97", "message": "Fix review comment and code smell", "committedDate": "2020-06-15T11:22:24Z", "type": "commit"}, {"oid": "db6baca282953ef8080c6869c7495682882c9a97", "url": "https://github.com/apache/iotdb/commit/db6baca282953ef8080c6869c7495682882c9a97", "message": "Fix review comment and code smell", "committedDate": "2020-06-15T11:22:24Z", "type": "forcePushed"}, {"oid": "1d416e2b5ca6321b2bdffe7d044d39331f91eab6", "url": "https://github.com/apache/iotdb/commit/1d416e2b5ca6321b2bdffe7d044d39331f91eab6", "message": "Fix code smell", "committedDate": "2020-06-15T12:28:03Z", "type": "commit"}, {"oid": "6324b42267cc200c6eca1c1276713fe18df59aa0", "url": "https://github.com/apache/iotdb/commit/6324b42267cc200c6eca1c1276713fe18df59aa0", "message": "Add props of MeasurementMNode", "committedDate": "2020-06-15T12:42:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3MDg5MA==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440670890", "bodyText": "init when used", "author": "qiaojialin", "createdAt": "2020-06-16T08:19:00Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -44,49 +53,96 @@\n    */\n   protected String fullPath;\n \n+  transient Map<String, MNode> children;\n+  transient Map<String, MNode> aliasChildren;\n+\n+  protected transient ReadWriteLock lock = new ReentrantReadWriteLock();\n \n   /**\n    * Constructor of MNode.\n    */\n   public MNode(MNode parent, String name) {\n     this.parent = parent;\n     this.name = name;\n+    this.children = new LinkedHashMap<>();", "originalCommit": "cad616f88c4be86170a88d646b2282893a2aaf2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4MjQ5Mg==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440682492", "bodyText": "Fixed", "author": "samperson1997", "createdAt": "2020-06-16T08:37:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3MDg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "fd8f0af7b8600abba6d62019adaae82d95f2bf23", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\nindex 34f7503a69..132492f541 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n\n@@ -64,14 +64,13 @@ public class MNode implements Serializable {\n   public MNode(MNode parent, String name) {\n     this.parent = parent;\n     this.name = name;\n-    this.children = new LinkedHashMap<>();\n   }\n \n   /**\n    * check whether the MNode has a child with the name\n    */\n   public boolean hasChild(String name) {\n-    return this.children.containsKey(name) ||\n+    return (children != null && children.containsKey(name)) ||\n         (aliasChildren != null && aliasChildren.containsKey(name));\n   }\n \n"}}, {"oid": "fd8f0af7b8600abba6d62019adaae82d95f2bf23", "url": "https://github.com/apache/iotdb/commit/fd8f0af7b8600abba6d62019adaae82d95f2bf23", "message": "init children of MNode when used", "committedDate": "2020-06-16T08:38:54Z", "type": "commit"}, {"oid": "fd8f0af7b8600abba6d62019adaae82d95f2bf23", "url": "https://github.com/apache/iotdb/commit/fd8f0af7b8600abba6d62019adaae82d95f2bf23", "message": "init children of MNode when used", "committedDate": "2020-06-16T08:38:54Z", "type": "forcePushed"}, {"oid": "de58e209d3e0eccd5534cc44fd36681e6928f8ad", "url": "https://github.com/apache/iotdb/commit/de58e209d3e0eccd5534cc44fd36681e6928f8ad", "message": "fix getChildren()", "committedDate": "2020-06-16T08:48:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4OTk5MA==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440689990", "bodyText": "MNode child = null;\nif (children != null) {\nchild = children.get(name);\n}\nif (child != null) {\nreturn child;\n}", "author": "qiaojialin", "createdAt": "2020-06-16T08:49:14Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -56,37 +69,85 @@ public MNode(MNode parent, String name) {\n   /**\n    * check whether the MNode has a child with the name\n    */\n-  public abstract boolean hasChild(String name);\n+  public boolean hasChild(String name) {\n+    return (children != null && children.containsKey(name)) ||\n+        (aliasChildren != null && aliasChildren.containsKey(name));\n+  }\n \n   /**\n    * node key, name or alias\n    */\n-  public abstract void addChild(String name, MNode child);\n+  public void addChild(String name, MNode child) {\n+    if (children == null) {\n+      children = new LinkedHashMap<>();\n+    }\n+    children.put(name, child);\n+  }\n \n   /**\n-   * delete a child\n+   * If delete a leafMNode, lock its parent, if delete an InternalNode, lock itself\n    */\n-  public abstract void deleteChild(String name) throws DeleteFailedException;\n+  public void deleteChild(String name) throws DeleteFailedException {\n+    if (children != null && children.containsKey(name)) {\n+      // acquire the write lock of its child node.\n+      Lock writeLock = (children.get(name)).lock.writeLock();\n+      if (writeLock.tryLock()) {\n+        children.remove(name);\n+        writeLock.unlock();\n+      } else {\n+        throw new DeleteFailedException(getFullPath() + PATH_SEPARATOR + name);\n+      }\n+    }\n+  }\n \n   /**\n    * delete the alias of a child\n    */\n-  public abstract void deleteAliasChild(String alias) throws DeleteFailedException;\n+  public void deleteAliasChild(String alias) throws DeleteFailedException {\n+    if (aliasChildren == null) {\n+      return;\n+    }\n+    if (lock.writeLock().tryLock()) {\n+      aliasChildren.remove(alias);\n+      lock.writeLock().unlock();\n+    } else {\n+      throw new DeleteFailedException(getFullPath() + PATH_SEPARATOR + alias);\n+    }\n+  }\n \n   /**\n    * get the child with the name\n    */\n-  public abstract MNode getChild(String name);\n+  public MNode getChild(String name) {\n+    if (children != null && children.containsKey(name)) {\n+      return children.get(name);\n+    }", "originalCommit": "fd8f0af7b8600abba6d62019adaae82d95f2bf23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5Njg5NQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440696895", "bodyText": "Thanks!", "author": "samperson1997", "createdAt": "2020-06-16T08:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY4OTk5MA=="}], "type": "inlineReview", "revised_code": {"commit": "878b317cd1fd76b0a712173f9291c46564df560f", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\nindex 132492f541..fa3cde6a63 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n\n@@ -119,8 +119,12 @@ public class MNode implements Serializable {\n    * get the child with the name\n    */\n   public MNode getChild(String name) {\n-    if (children != null && children.containsKey(name)) {\n-      return children.get(name);\n+    MNode child = null;\n+    if (children != null) {\n+      child = children.get(name);\n+    }\n+    if (child != null) {\n+      return child;\n     }\n     return aliasChildren == null ? null : aliasChildren.get(name);\n   }\n"}}, {"oid": "878b317cd1fd76b0a712173f9291c46564df560f", "url": "https://github.com/apache/iotdb/commit/878b317cd1fd76b0a712173f9291c46564df560f", "message": "optimize getChild()", "committedDate": "2020-06-16T08:59:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440711589", "bodyText": "ah..... String.format or StringBuilder?", "author": "jixuan1989", "createdAt": "2020-06-16T09:23:56Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -127,4 +201,43 @@ public String getName() {\n   public void setName(String name) {\n     this.name = name;\n   }\n+\n+  public void setChildren(Map<String, MNode> children) {\n+    this.children = children;\n+  }\n+\n+  public void serializeTo(BufferedWriter bw) throws IOException {\n+    serializeChildren(bw);\n+\n+    String s = String.valueOf(MetadataConstant.MNODE_TYPE);\n+    s += \",\" + name + \",\";", "originalCommit": "878b317cd1fd76b0a712173f9291c46564df560f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxNzA5Nw==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440717097", "bodyText": "Actually it's the IDE that recommends me to use String instead of StringBuilder...", "author": "samperson1997", "createdAt": "2020-06-16T09:32:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxOTIzNQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440719235", "bodyText": "I'll try String.format", "author": "samperson1997", "createdAt": "2020-06-16T09:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyMDc2Nw==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440720767", "bodyText": "And another serialization method has the same issue.\nMy another question is,... seems these serialize() methods are not used...", "author": "jixuan1989", "createdAt": "2020-06-16T09:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyNTE0MQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440725141", "bodyText": "Fixed. These methods will be used in my next PR for issue IOTDB-726", "author": "samperson1997", "createdAt": "2020-06-16T09:46:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDczMTcyOQ==", "url": "https://github.com/apache/iotdb/pull/1345#discussion_r440731729", "bodyText": "Emm...  As is mentioned in this page which compares the performance between String.format and StringBuilder thanks to @Alima777 , I'll use StringBuilder anyway.", "author": "samperson1997", "createdAt": "2020-06-16T09:57:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMTU4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "bf062fb1b4cb286870edee8c05397efa6d8bf065", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\nindex fa3cde6a63..a34df03ea4 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java\n\n@@ -209,10 +209,10 @@ public class MNode implements Serializable {\n   public void serializeTo(BufferedWriter bw) throws IOException {\n     serializeChildren(bw);\n \n-    String s = String.valueOf(MetadataConstant.MNODE_TYPE);\n-    s += \",\" + name + \",\";\n-    s += children == null ? \"0\" : children.size();\n-    bw.write(s);\n+    StringBuilder s = new StringBuilder(String.valueOf(MetadataConstant.MNODE_TYPE));\n+    s.append(\",\").append(name).append(\",\");\n+    s.append(children == null ? \"0\" : children.size());\n+    bw.write(s.toString());\n     bw.newLine();\n   }\n \n"}}, {"oid": "bf062fb1b4cb286870edee8c05397efa6d8bf065", "url": "https://github.com/apache/iotdb/commit/bf062fb1b4cb286870edee8c05397efa6d8bf065", "message": "use StringBuilder", "committedDate": "2020-06-16T09:55:07Z", "type": "commit"}, {"oid": "bf062fb1b4cb286870edee8c05397efa6d8bf065", "url": "https://github.com/apache/iotdb/commit/bf062fb1b4cb286870edee8c05397efa6d8bf065", "message": "use StringBuilder", "committedDate": "2020-06-16T09:55:07Z", "type": "forcePushed"}, {"oid": "b78bd3ee0c1aef0b2769008b005c19ee3273c91c", "url": "https://github.com/apache/iotdb/commit/b78bd3ee0c1aef0b2769008b005c19ee3273c91c", "message": "fix typo", "committedDate": "2020-06-16T10:02:06Z", "type": "commit"}, {"oid": "51754db28d66628540add93f8dd1f6fc29e805f6", "url": "https://github.com/apache/iotdb/commit/51754db28d66628540add93f8dd1f6fc29e805f6", "message": "Merge remote-tracking branch 'origin/master' into mtree_checkpoint\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "committedDate": "2020-06-16T13:52:50Z", "type": "commit"}, {"oid": "517b583641696c8d564037e419bd6409a5e21093", "url": "https://github.com/apache/iotdb/commit/517b583641696c8d564037e419bd6409a5e21093", "message": "Merge master", "committedDate": "2020-06-16T13:54:30Z", "type": "commit"}, {"oid": "448362a600b4adefc9f35b30088008d234656b3f", "url": "https://github.com/apache/iotdb/commit/448362a600b4adefc9f35b30088008d234656b3f", "message": "Merge remote-tracking branch 'origin/master' into mtree_checkpoint\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "committedDate": "2020-06-17T03:12:34Z", "type": "commit"}]}