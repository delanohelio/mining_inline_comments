{"pr_number": 1373, "pr_title": "[IOTDB-771] Add audit log", "pr_createdAt": "2020-06-16T08:20:18Z", "pr_url": "https://github.com/apache/iotdb/pull/1373", "timeline": [{"oid": "795a75fcf2aa8f534ab13069ec3334f02edaddf4", "url": "https://github.com/apache/iotdb/commit/795a75fcf2aa8f534ab13069ec3334f02edaddf4", "message": "add audit log", "committedDate": "2020-06-16T08:02:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NzU3NA==", "url": "https://github.com/apache/iotdb/pull/1373#discussion_r440967574", "bodyText": "wrapping with ifDebugEnabled() is better", "author": "jixuan1989", "createdAt": "2020-06-16T16:02:50Z", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -1061,6 +1061,10 @@ public ServerProperties getProperties() {\n   @Override\n   public TSExecuteBatchStatementResp insertRecords(TSInsertRecordsReq req) {\n     TSExecuteBatchStatementResp resp = new TSExecuteBatchStatementResp();\n+    auditLogger", "originalCommit": "795a75fcf2aa8f534ab13069ec3334f02edaddf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1ODkzOA==", "url": "https://github.com/apache/iotdb/pull/1373#discussion_r441258938", "bodyText": "fixed", "author": "qiaojialin", "createdAt": "2020-06-17T03:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NzU3NA=="}], "type": "inlineReview", "revised_code": {"commit": "028277b3011b0f2ba7b89a0c0acc94ad21e43427", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\nindex 114a521cf6..ae468cd7ec 100644\n--- a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n+++ b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n\n@@ -1059,18 +1059,18 @@ public class TSServiceImpl implements TSIService.Iface, ServerContext {\n   }\n \n   @Override\n-  public TSExecuteBatchStatementResp insertRecords(TSInsertRecordsReq req) {\n-    TSExecuteBatchStatementResp resp = new TSExecuteBatchStatementResp();\n-    auditLogger\n-        .debug(\"Session {} insertRecords, first device {}, first time {}\", currSessionId.get(),\n-            req.deviceIds.get(0), req.getTimestamps().get(0));\n-\n+  public TSStatus insertRecords(TSInsertRecordsReq req) {\n+    if (auditLogger.isDebugEnabled()) {\n+      auditLogger\n+          .debug(\"Session {} insertRecords, first device {}, first time {}\", currSessionId.get(),\n+              req.deviceIds.get(0), req.getTimestamps().get(0));\n+    }\n     if (!checkLogin(req.getSessionId())) {\n       logger.info(INFO_NOT_LOGIN, IoTDBConstant.GLOBAL_DB_NAME);\n-      resp.addToStatusList(RpcUtils.getStatus(TSStatusCode.NOT_LOGIN_ERROR));\n-      return resp;\n+      return RpcUtils.getStatus(TSStatusCode.NOT_LOGIN_ERROR);\n     }\n \n+    List<TSStatus> statusList = new ArrayList<>();\n     InsertPlan plan = new InsertPlan();\n     for (int i = 0; i < req.deviceIds.size(); i++) {\n       try {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2ODA5MQ==", "url": "https://github.com/apache/iotdb/pull/1373#discussion_r440968091", "bodyText": "better to print how many time series", "author": "jixuan1989", "createdAt": "2020-06-16T16:03:40Z", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -1337,6 +1345,8 @@ public TSExecuteBatchStatementResp createMultiTimeseries(TSCreateMultiTimeseries\n       logger.info(INFO_NOT_LOGIN, IoTDBConstant.GLOBAL_DB_NAME);\n       return RpcUtils.getTSBatchExecuteStatementResp(TSStatusCode.NOT_LOGIN_ERROR);\n     }\n+    auditLogger.info(\"Session-{} create multi timeseries, first is {}\", currSessionId.get(),", "originalCommit": "795a75fcf2aa8f534ab13069ec3334f02edaddf4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1ODk2OQ==", "url": "https://github.com/apache/iotdb/pull/1373#discussion_r441258969", "bodyText": "added", "author": "qiaojialin", "createdAt": "2020-06-17T03:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2ODA5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "028277b3011b0f2ba7b89a0c0acc94ad21e43427", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\nindex 114a521cf6..ae468cd7ec 100644\n--- a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n+++ b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n\n@@ -1340,13 +1308,13 @@ public class TSServiceImpl implements TSIService.Iface, ServerContext {\n   }\n \n   @Override\n-  public TSExecuteBatchStatementResp createMultiTimeseries(TSCreateMultiTimeseriesReq req) {\n+  public TSStatus createMultiTimeseries(TSCreateMultiTimeseriesReq req) {\n     if (!checkLogin(req.getSessionId())) {\n       logger.info(INFO_NOT_LOGIN, IoTDBConstant.GLOBAL_DB_NAME);\n-      return RpcUtils.getTSBatchExecuteStatementResp(TSStatusCode.NOT_LOGIN_ERROR);\n+      return RpcUtils.getStatus(TSStatusCode.NOT_LOGIN_ERROR);\n     }\n-    auditLogger.info(\"Session-{} create multi timeseries, first is {}\", currSessionId.get(),\n-        req.getPaths().get(0));\n+    auditLogger.info(\"Session-{} create {} timeseries, the first is {}\", currSessionId.get(),\n+        req.getPaths().size(), req.getPaths().get(0));\n     List<TSStatus> statusList = new ArrayList<>(req.paths.size());\n     for (int i = 0; i < req.paths.size(); i++) {\n       CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(new Path(req.getPaths().get(i)),\n"}}, {"oid": "028277b3011b0f2ba7b89a0c0acc94ad21e43427", "url": "https://github.com/apache/iotdb/commit/028277b3011b0f2ba7b89a0c0acc94ad21e43427", "message": "resolve conflict", "committedDate": "2020-06-17T03:25:56Z", "type": "commit"}]}