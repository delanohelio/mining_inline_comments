{"pr_number": 2389, "pr_title": "show devices limit", "pr_createdAt": "2020-12-30T12:10:38Z", "pr_url": "https://github.com/apache/iotdb/pull/2389", "timeline": [{"oid": "02579ce2bd99b0981ba0f2cd6b3dbc6b435fd606", "url": "https://github.com/apache/iotdb/commit/02579ce2bd99b0981ba0f2cd6b3dbc6b435fd606", "message": "show devices limit", "committedDate": "2020-12-30T12:12:41Z", "type": "forcePushed"}, {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a", "url": "https://github.com/apache/iotdb/commit/4a1795e084ebd525371408b2f0086d0327323a7a", "message": "show devices limit", "committedDate": "2020-12-30T12:17:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM3OTQzNQ==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550379435", "bodyText": "Rename this to getDevices or change the other to showDevices to implement overloading.", "author": "Alima777", "createdAt": "2020-12-31T02:29:15Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -688,6 +689,10 @@ public TSDataType getSeriesType(PartialPath path) throws MetadataException {\n     return mtree.getDevices(prefixPath);\n   }\n \n+  public Set<PartialPath> showDevices(ShowDevicesPlan plan) throws MetadataException {", "originalCommit": "4a1795e084ebd525371408b2f0086d0327323a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "daf609ca59da7081852333c0a02d899296806902", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MManager.java b/server/src/main/java/org/apache/iotdb/db/metadata/MManager.java\nindex 54a7e0e0dc..e1a120337b 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MManager.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MManager.java\n\n@@ -689,7 +689,7 @@ public class MManager {\n     return mtree.getDevices(prefixPath);\n   }\n \n-  public Set<PartialPath> showDevices(ShowDevicesPlan plan) throws MetadataException {\n+  public Set<PartialPath> getDevices(ShowDevicesPlan plan) throws MetadataException {\n     return mtree.getDevices(plan);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM3OTk0Mw==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550379943", "bodyText": "Do this in PhysicalGenerator or the constructor of ShowDevicePlan, not here.", "author": "Alima777", "createdAt": "2020-12-31T02:34:25Z", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -672,6 +673,17 @@ private TSExecuteStatementResp internalExecuteQueryStatement(String statement,\n           ((ShowTimeSeriesPlan) plan).setHasLimit(true);\n         }\n       }\n+\n+      if (plan instanceof ShowDevicesPlan) {\n+        //If the user does not pass the limit, then set limit = fetchSize and haslimit=false,else set haslimit = true\n+        if (((ShowDevicesPlan) plan).getLimit() == 0) {\n+          ((ShowDevicesPlan) plan).setLimit(fetchSize);\n+          ((ShowDevicesPlan) plan).setHasLimit(false);\n+        } else {\n+          ((ShowDevicesPlan) plan).setHasLimit(true);\n+        }\n+      }\n+", "originalCommit": "4a1795e084ebd525371408b2f0086d0327323a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d7d0ebc024edda2929dfd4d0c4035144aca68d99", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\nindex 781b09fe03..2eb818eab5 100644\n--- a/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n+++ b/server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java\n\n@@ -664,26 +542,6 @@ public class TSServiceImpl implements TSIService.Iface, ServerContext {\n         fetchSize = DEFAULT_FETCH_SIZE;\n       }\n \n-      if (plan instanceof ShowTimeSeriesPlan) {\n-        //If the user does not pass the limit, then set limit = fetchSize and haslimit=false,else set haslimit = true\n-        if (((ShowTimeSeriesPlan) plan).getLimit() == 0) {\n-          ((ShowTimeSeriesPlan) plan).setLimit(fetchSize);\n-          ((ShowTimeSeriesPlan) plan).setHasLimit(false);\n-        } else {\n-          ((ShowTimeSeriesPlan) plan).setHasLimit(true);\n-        }\n-      }\n-\n-      if (plan instanceof ShowDevicesPlan) {\n-        //If the user does not pass the limit, then set limit = fetchSize and haslimit=false,else set haslimit = true\n-        if (((ShowDevicesPlan) plan).getLimit() == 0) {\n-          ((ShowDevicesPlan) plan).setLimit(fetchSize);\n-          ((ShowDevicesPlan) plan).setHasLimit(false);\n-        } else {\n-          ((ShowDevicesPlan) plan).setHasLimit(true);\n-        }\n-      }\n-\n       if (plan instanceof QueryPlan && !((QueryPlan) plan).isAlignByTime()) {\n         if (plan.getOperatorType() == OperatorType.AGGREGATION) {\n           throw new QueryProcessException(\"Aggregation doesn't support disable align clause.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4MTMzMg==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550381332", "bodyText": "Line 1134: Set devices = new TreeSet<>();", "author": "Alima777", "createdAt": "2020-12-31T02:45:16Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1121,7 +1122,32 @@ private void findChildNodePathInNextLevel(\n       throw new IllegalPathException(prefixPath.getFullPath());\n     }\n     Set<PartialPath> devices = new TreeSet<>();\n-    findDevices(root, nodes, 1, devices);\n+    findDevices(root, nodes, 1, devices, false);\n+    return devices;\n+  }\n+\n+  Set<PartialPath> getDevices(ShowDevicesPlan plan) throws MetadataException {\n+    String[] nodes = plan.getPath().getNodes();\n+    if (nodes.length == 0 || !nodes[0].equals(root.getName())) {\n+      throw new IllegalPathException(plan.getPath().getFullPath());\n+    }\n+    Set<PartialPath> devices;\n+    limit.set(plan.getLimit());\n+    offset.set(plan.getOffset());\n+    curOffset.set(-1);\n+    count.set(0);\n+    if (offset.get() != 0 || limit.get() != 0) {\n+      devices = new TreeSet<>();\n+      findDevices(root, nodes, 1, devices, true);\n+    } else {\n+      devices = new TreeSet<>();", "originalCommit": "4a1795e084ebd525371408b2f0086d0327323a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "daf609ca59da7081852333c0a02d899296806902", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\nindex 0416f6101a..a552c4e9ab 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n\n@@ -1131,16 +1129,14 @@ public class MTree implements Serializable {\n     if (nodes.length == 0 || !nodes[0].equals(root.getName())) {\n       throw new IllegalPathException(plan.getPath().getFullPath());\n     }\n-    Set<PartialPath> devices;\n+    Set<PartialPath> devices = new TreeSet<>();\n     limit.set(plan.getLimit());\n     offset.set(plan.getOffset());\n     curOffset.set(-1);\n     count.set(0);\n     if (offset.get() != 0 || limit.get() != 0) {\n-      devices = new TreeSet<>();\n       findDevices(root, nodes, 1, devices, true);\n     } else {\n-      devices = new TreeSet<>();\n       findDevices(root, nodes, 1, devices, false);\n     }\n     // avoid memory leaks\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4NDY1NQ==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550384655", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        curOffset.set(curOffset.get() + 1);\n          \n          \n            \n                        if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n          \n          \n            \n                          return;\n          \n          \n            \n                        }\n          \n          \n            \n                      }\n          \n          \n            \n                      res.add(node.getPartialPath());\n          \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        count.set(count.get() + 1);\n          \n          \n            \n                      }\n          \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        curOffset.set(curOffset.get() + 1);\n          \n          \n            \n                        if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n          \n          \n            \n                          return;\n          \n          \n            \n                        }\n          \n          \n            \n                        count.set(count.get() + 1);\n          \n          \n            \n                      }\n          \n          \n            \n                      res.add(node.getPartialPath());", "author": "Alima777", "createdAt": "2020-12-31T03:11:40Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1134,16 +1160,25 @@ private void findChildNodePathInNextLevel(\n    * @param res   store all matched device names\n    */\n   @SuppressWarnings(\"squid:S3776\")\n-  private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> res) {\n+  private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> res, boolean hasLimit) {\n     String nodeReg = MetaUtils.getNodeRegByIdx(idx, nodes);\n     // the node path doesn't contains '*'\n     if (!nodeReg.contains(PATH_WILDCARD)) {\n       MNode next = node.getChild(nodeReg);\n       if (next != null) {\n         if (next instanceof MeasurementMNode && idx >= nodes.length) {\n+          if (hasLimit) {\n+            curOffset.set(curOffset.get() + 1);\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+              return;\n+            }\n+          }\n           res.add(node.getPartialPath());\n+          if (hasLimit) {\n+            count.set(count.get() + 1);\n+          }", "originalCommit": "4a1795e084ebd525371408b2f0086d0327323a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "daf609ca59da7081852333c0a02d899296806902", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\nindex 0416f6101a..a552c4e9ab 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n\n@@ -1169,14 +1165,13 @@ public class MTree implements Serializable {\n         if (next instanceof MeasurementMNode && idx >= nodes.length) {\n           if (hasLimit) {\n             curOffset.set(curOffset.get() + 1);\n-            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get()\n+                .intValue()) {\n               return;\n             }\n-          }\n-          res.add(node.getPartialPath());\n-          if (hasLimit) {\n             count.set(count.get() + 1);\n           }\n+          res.add(node.getPartialPath());\n         } else {\n           findDevices(next, nodes, idx + 1, res, hasLimit);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4NDY2OQ==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550384669", "bodyText": "The same.", "author": "Alima777", "createdAt": "2020-12-31T03:11:57Z", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1155,10 +1190,19 @@ private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> r\n           continue;\n         }\n         if (child instanceof MeasurementMNode && !deviceAdded && idx >= nodes.length) {\n+          if (hasLimit) {\n+            curOffset.set(curOffset.get() + 1);\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+              return;\n+            }\n+          }\n           res.add(node.getPartialPath());\n+          if (hasLimit) {\n+            count.set(count.get() + 1);\n+          }", "originalCommit": "4a1795e084ebd525371408b2f0086d0327323a7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "daf609ca59da7081852333c0a02d899296806902", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\nindex 0416f6101a..a552c4e9ab 100644\n--- a/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n+++ b/server/src/main/java/org/apache/iotdb/db/metadata/MTree.java\n\n@@ -1192,14 +1187,13 @@ public class MTree implements Serializable {\n         if (child instanceof MeasurementMNode && !deviceAdded && idx >= nodes.length) {\n           if (hasLimit) {\n             curOffset.set(curOffset.get() + 1);\n-            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get()\n+                .intValue()) {\n               return;\n             }\n-          }\n-          res.add(node.getPartialPath());\n-          if (hasLimit) {\n             count.set(count.get() + 1);\n           }\n+          res.add(node.getPartialPath());\n           deviceAdded = true;\n         }\n         findDevices(child, nodes, idx + 1, res, hasLimit);\n"}}, {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a", "url": "https://github.com/apache/iotdb/commit/4a1795e084ebd525371408b2f0086d0327323a7a", "message": "show devices limit", "committedDate": "2020-12-30T12:17:22Z", "type": "forcePushed"}, {"oid": "daf609ca59da7081852333c0a02d899296806902", "url": "https://github.com/apache/iotdb/commit/daf609ca59da7081852333c0a02d899296806902", "message": "show devices limit", "committedDate": "2020-12-31T09:34:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MDk5NQ==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r551090995", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n          \n          \n            \n                this(showContentType, path);\n          \n          \n            \n                this.limit = limit;\n          \n          \n            \n                this.offset = offset;\n          \n          \n            \n              }\n          \n          \n            \n              public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n          \n          \n            \n                this(showContentType, path);\n          \n          \n            \n                this.offset = offset;\n          \n          \n            \n                 if (limit == 0) {\n          \n          \n            \n                      this.limit = fetchSize;\n          \n          \n            \n                      this.hasLimit = false;\n          \n          \n            \n                    } else {\n          \n          \n            \n                      this.hasLimit = true;\n          \n          \n            \n                    }\n          \n          \n            \n              }", "author": "Alima777", "createdAt": "2021-01-04T02:23:58Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java", "diffHunk": "@@ -21,15 +21,49 @@\n import org.apache.iotdb.db.metadata.PartialPath;\n \n public class ShowDevicesPlan extends ShowPlan{\n+\n   private PartialPath path;\n+  private int limit = 0;\n+  private int offset = 0;\n+  private boolean hasLimit;\n \n   public ShowDevicesPlan(ShowContentType showContentType, PartialPath path) {\n     super(showContentType);\n     this.path = path;\n   }\n \n+  public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n+    this(showContentType, path);\n+    this.limit = limit;\n+    this.offset = offset;\n+  }\n+", "originalCommit": "daf609ca59da7081852333c0a02d899296806902", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MTIyMw==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r551091223", "bodyText": "Why not put the initialization here? :D", "author": "Alima777", "createdAt": "2021-01-04T02:25:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MDk5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d7d0ebc024edda2929dfd4d0c4035144aca68d99", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java b/server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java\nindex c2d93ca11d..3b5d7f2578 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java\n\n@@ -20,50 +20,15 @@ package org.apache.iotdb.db.qp.physical.sys;\n \n import org.apache.iotdb.db.metadata.PartialPath;\n \n-public class ShowDevicesPlan extends ShowPlan{\n+public class ShowDevicesPlan extends ShowPlan {\n \n-  private PartialPath path;\n-  private int limit = 0;\n-  private int offset = 0;\n-  private boolean hasLimit;\n-\n-  public ShowDevicesPlan(ShowContentType showContentType, PartialPath path) {\n-    super(showContentType);\n-    this.path = path;\n-  }\n-\n-  public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n-    this(showContentType, path);\n-    this.limit = limit;\n-    this.offset = offset;\n-  }\n-\n-  public PartialPath getPath() {\n-    return this.path;\n-  }\n-\n-  public boolean hasLimit() {\n-    return hasLimit;\n-  }\n-\n-  public void setHasLimit(boolean hasLimit) {\n-    this.hasLimit = hasLimit;\n-  }\n-\n-  public int getLimit() {\n-    return limit;\n-  }\n-\n-  public void setLimit(int limit) {\n-    this.limit = limit;\n-  }\n-\n-  public int getOffset() {\n-    return offset;\n+  public ShowDevicesPlan(PartialPath path) {\n+    super(ShowContentType.DEVICES, path);\n   }\n \n-  public void setOffset(int offset) {\n-    this.offset = offset;\n+  public ShowDevicesPlan(PartialPath path, int limit, int offset,\n+      int fetchSize) {\n+    super(ShowContentType.DEVICES, path, limit, offset, fetchSize);\n   }\n }\n \n"}}, {"oid": "3ca804a55ccb5176fdac08c2a54259e85b4af3be", "url": "https://github.com/apache/iotdb/commit/3ca804a55ccb5176fdac08c2a54259e85b4af3be", "message": "show devices limit", "committedDate": "2021-01-11T10:07:03Z", "type": "commit"}, {"oid": "d7d0ebc024edda2929dfd4d0c4035144aca68d99", "url": "https://github.com/apache/iotdb/commit/d7d0ebc024edda2929dfd4d0c4035144aca68d99", "message": "edit ShowPlan, ShowDataSet", "committedDate": "2021-01-11T10:07:04Z", "type": "commit"}, {"oid": "76ca3ea9a7389c67ebc90de62c0a04e4ca6efa51", "url": "https://github.com/apache/iotdb/commit/76ca3ea9a7389c67ebc90de62c0a04e4ca6efa51", "message": "fix code smell", "committedDate": "2021-01-11T11:15:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA5OTc2Mw==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r555099763", "bodyText": "The sonar test shows these lines are duplicated with some lines in ShowTimeseriesPlan. How do you think remove the lines in ShowTimeseriesPlan?", "author": "HTHou", "createdAt": "2021-01-11T14:50:36Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowPlan.java", "diffHunk": "@@ -44,6 +65,34 @@ public ShowContentType getShowContentType() {\n     return showContentType;\n   }\n \n+  public PartialPath getPath() {\n+    return this.path;\n+  }\n+\n+  public int getLimit() {\n+    return limit;\n+  }\n+\n+  public void setLimit(int limit) {\n+    this.limit = limit;\n+  }\n+\n+  public int getOffset() {\n+    return offset;\n+  }\n+\n+  public void setOffset(int offset) {\n+    this.offset = offset;\n+  }\n+\n+  public boolean hasLimit() {\n+    return hasLimit;\n+  }", "originalCommit": "76ca3ea9a7389c67ebc90de62c0a04e4ca6efa51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQ3MjgzMg==", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r555472832", "bodyText": "code smell solved. thank you :)", "author": "haimeiguo", "createdAt": "2021-01-12T02:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA5OTc2Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c49bd49e236e24e21edb3d435991d0a946616dfc", "url": "https://github.com/apache/iotdb/commit/c49bd49e236e24e21edb3d435991d0a946616dfc", "message": "fix code smell", "committedDate": "2021-01-12T01:43:10Z", "type": "forcePushed"}, {"oid": "5d2b75fb187f4801308126f97234d92fb5eb9f7e", "url": "https://github.com/apache/iotdb/commit/5d2b75fb187f4801308126f97234d92fb5eb9f7e", "message": "fix code smell", "committedDate": "2021-01-12T02:19:24Z", "type": "commit"}, {"oid": "5d2b75fb187f4801308126f97234d92fb5eb9f7e", "url": "https://github.com/apache/iotdb/commit/5d2b75fb187f4801308126f97234d92fb5eb9f7e", "message": "fix code smell", "committedDate": "2021-01-12T02:19:24Z", "type": "forcePushed"}]}