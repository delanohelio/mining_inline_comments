{"pr_number": 1635, "pr_title": "[IOTDB-860] Emend the async log applier", "pr_createdAt": "2020-08-19T11:46:52Z", "pr_url": "https://github.com/apache/iotdb/pull/1635", "timeline": [{"oid": "e644498cf876097131f03bc43ed5a85a0a6ae714", "url": "https://github.com/apache/iotdb/commit/e644498cf876097131f03bc43ed5a85a0a6ae714", "message": "add UT", "committedDate": "2020-08-21T09:22:25Z", "type": "forcePushed"}, {"oid": "8cf4003dd7bab3328bb9a8be3ff30ca29000280e", "url": "https://github.com/apache/iotdb/commit/8cf4003dd7bab3328bb9a8be3ff30ca29000280e", "message": "add UT\n\nfix the UT\n\nasync applier refine\n\nfix the async log applier bug\n\nfix conflict\n\nremove useless code\n\nresolve bug\n\nadd UT\n\nfix conflicts", "committedDate": "2020-08-21T12:28:34Z", "type": "forcePushed"}, {"oid": "487a4674942738be35d68f5d0dcce0b1ee317086", "url": "https://github.com/apache/iotdb/commit/487a4674942738be35d68f5d0dcce0b1ee317086", "message": "async applier refine", "committedDate": "2020-08-27T05:39:03Z", "type": "commit"}, {"oid": "52ff188444129083577d97315e1684a893e697a2", "url": "https://github.com/apache/iotdb/commit/52ff188444129083577d97315e1684a893e697a2", "message": "fix the async log applier bug\n\nfix conflict", "committedDate": "2020-08-27T05:39:04Z", "type": "commit"}, {"oid": "6602e8e793e9679b1612d661148891003a13437d", "url": "https://github.com/apache/iotdb/commit/6602e8e793e9679b1612d661148891003a13437d", "message": "add UT\n\nfix the UT\n\nasync applier refine\n\nfix the async log applier bug\n\nfix conflict\n\nremove useless code\n\nresolve bug\n\nadd UT\n\nfix conflicts", "committedDate": "2020-08-27T05:39:04Z", "type": "commit"}, {"oid": "f79474501a3a93d267292f10c942b68008e1458a", "url": "https://github.com/apache/iotdb/commit/f79474501a3a93d267292f10c942b68008e1458a", "message": "remove useless thread pool", "committedDate": "2020-08-27T05:39:04Z", "type": "commit"}, {"oid": "0d2fbbef93eada0e4d219d5d841528c8c84279dd", "url": "https://github.com/apache/iotdb/commit/0d2fbbef93eada0e4d219d5d841528c8c84279dd", "message": "support flush plan when do snapshot", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "ae1540fcdc2626361d9202603c5b68d4038b2d42", "url": "https://github.com/apache/iotdb/commit/ae1540fcdc2626361d9202603c5b68d4038b2d42", "message": "refine syncCloseOneProcessor method in StorageGroupProcessor", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "ecb1a525d31a45230df5891b1d9f7378f7ee56f7", "url": "https://github.com/apache/iotdb/commit/ecb1a525d31a45230df5891b1d9f7378f7ee56f7", "message": "change the log msg", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "1101cfb651648d486867f65c073125f90d19e997", "url": "https://github.com/apache/iotdb/commit/1101cfb651648d486867f65c073125f90d19e997", "message": "fix the license", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "3833718e2d0397688abe3d6f36e4214766df348f", "url": "https://github.com/apache/iotdb/commit/3833718e2d0397688abe3d6f36e4214766df348f", "message": "fix the check applir log index", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "7d1fa0d0d1f305fc9fc3e23e89073be7c12be452", "url": "https://github.com/apache/iotdb/commit/7d1fa0d0d1f305fc9fc3e23e89073be7c12be452", "message": "fix checkAppliedLogIndex", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "f1071bdeaa8c3246e3ff9f8e4d10ea2b24e79bdc", "url": "https://github.com/apache/iotdb/commit/f1071bdeaa8c3246e3ff9f8e4d10ea2b24e79bdc", "message": "fix flushPlan bug", "committedDate": "2020-08-27T05:39:53Z", "type": "commit"}, {"oid": "261dbfe8dc938e82e9138f6724abf450e114e421", "url": "https://github.com/apache/iotdb/commit/261dbfe8dc938e82e9138f6724abf450e114e421", "message": "fix flushPlan bug", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "4e8e25d6a8ed359c054bb547ae1be7e2678511bf", "url": "https://github.com/apache/iotdb/commit/4e8e25d6a8ed359c054bb547ae1be7e2678511bf", "message": "add more log message", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "162edfb0eec66d065ba1d7412ff485dce3cbaf51", "url": "https://github.com/apache/iotdb/commit/162edfb0eec66d065ba1d7412ff485dce3cbaf51", "message": "make", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "9624981aebad91afbe332fafc96a76a092f4272c", "url": "https://github.com/apache/iotdb/commit/9624981aebad91afbe332fafc96a76a092f4272c", "message": "Delete the extra blank lines", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "7ae9f80421cf59203752778fc8dbec51be83848b", "url": "https://github.com/apache/iotdb/commit/7ae9f80421cf59203752778fc8dbec51be83848b", "message": "fix flushplan serialize bug", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "5187c10ca22eff46834d23371e037c36f34fbf60", "url": "https://github.com/apache/iotdb/commit/5187c10ca22eff46834d23371e037c36f34fbf60", "message": "fix flushplan serialize bug", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "e299193d58130cb009446a07cbadcc609b4d9eff", "url": "https://github.com/apache/iotdb/commit/e299193d58130cb009446a07cbadcc609b4d9eff", "message": "add flushPlan test", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "4027bba30ac09c53acdb558fea2be28b4e4f0f4a", "url": "https://github.com/apache/iotdb/commit/4027bba30ac09c53acdb558fea2be28b4e4f0f4a", "message": "Delete the extra blank lines", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "94b5a10d61a90ab5c2441dfb54cafc7e5a5841ee", "url": "https://github.com/apache/iotdb/commit/94b5a10d61a90ab5c2441dfb54cafc7e5a5841ee", "message": "move syncFlushAllProcessor out of synchronized (logmanager) in", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "5c3f239c3cdd59860141d85c9e3110ccc92bd110", "url": "https://github.com/apache/iotdb/commit/5c3f239c3cdd59860141d85c9e3110ccc92bd110", "message": "make the applyEntries in one seperate thread", "committedDate": "2020-08-27T05:39:54Z", "type": "commit"}, {"oid": "5c3f239c3cdd59860141d85c9e3110ccc92bd110", "url": "https://github.com/apache/iotdb/commit/5c3f239c3cdd59860141d85c9e3110ccc92bd110", "message": "make the applyEntries in one seperate thread", "committedDate": "2020-08-27T05:39:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc4MDg3NA==", "url": "https://github.com/apache/iotdb/pull/1635#discussion_r478780874", "bodyText": "I am afraid that we cannot flush the whole storage group when time partitioning is enabled. Because in that case, a storage group will be managed by several data groups, if you flush one storage group without notifying other data groups, the file integrity of other data groups will be broken.\nSo you should either flush other related groups (which is rather hard to find), or only flush partitions that belong to the data group.", "author": "jt2594838", "createdAt": "2020-08-28T01:27:07Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/FilePartitionedSnapshotLogManager.java", "diffHunk": "@@ -47,22 +52,47 @@\n       .getLogger(FilePartitionedSnapshotLogManager.class);\n \n   public FilePartitionedSnapshotLogManager(LogApplier logApplier, PartitionTable partitionTable,\n-      Node header, Node thisNode) {\n-    super(logApplier, partitionTable, header, thisNode, FileSnapshot::new);\n+      Node header, Node thisNode, DataGroupMember dataGroupMember) {\n+    super(logApplier, partitionTable, header, thisNode, FileSnapshot::new, dataGroupMember);\n+  }\n+\n+  /**\n+   * send FlushPlan to all nodes in one dataGroup\n+   */\n+  public void syncFlushAllProcessor() {\n+    logger.info(\"{}: Start flush all storage group processor in one data group\", getName());\n+    ConcurrentHashMap<String, StorageGroupProcessor> processorMap = StorageEngine.getInstance()\n+        .getProcessorMap();\n+    if (processorMap.size() == 0) {\n+      logger.info(\"{}: no need to flush processor\", getName());\n+      return;\n+    }\n+    List<Path> storageGroups = new ArrayList<>();\n+    for (Map.Entry<String, StorageGroupProcessor> entry : processorMap.entrySet()) {\n+      Path path = new Path(entry.getKey());\n+      storageGroups.add(path);\n+    }\n+    FlushPlan plan = new FlushPlan(null, true, storageGroups);\n+    dataGroupMember.flushFileWhenDoSnapshot(plan);", "originalCommit": "5c3f239c3cdd59860141d85c9e3110ccc92bd110", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxOTE3OQ==", "url": "https://github.com/apache/iotdb/pull/1635#discussion_r478819179", "bodyText": "Sure, thanks  for your advice, I'd like to only flush the partitions that belong to the data group", "author": "neuyilan", "createdAt": "2020-08-28T04:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc4MDg3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5ac7bf3fa9e2affaeedfa4eef804bde515361890", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/log/manage/FilePartitionedSnapshotLogManager.java b/cluster/src/main/java/org/apache/iotdb/cluster/log/manage/FilePartitionedSnapshotLogManager.java\nindex c685ff2ab2..f85a7a3f06 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/log/manage/FilePartitionedSnapshotLogManager.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/log/manage/FilePartitionedSnapshotLogManager.java\n\n@@ -61,19 +58,13 @@ public class FilePartitionedSnapshotLogManager extends PartitionedSnapshotLogMan\n    */\n   public void syncFlushAllProcessor() {\n     logger.info(\"{}: Start flush all storage group processor in one data group\", getName());\n-    ConcurrentHashMap<String, StorageGroupProcessor> processorMap = StorageEngine.getInstance()\n-        .getProcessorMap();\n-    if (processorMap.size() == 0) {\n+    Map<String, List<Pair<Long, Boolean>>> storageGroupPartitions = StorageEngine.getInstance()\n+        .getStorageGroupPartitions();\n+    if (storageGroupPartitions.size() == 0) {\n       logger.info(\"{}: no need to flush processor\", getName());\n       return;\n     }\n-    List<Path> storageGroups = new ArrayList<>();\n-    for (Map.Entry<String, StorageGroupProcessor> entry : processorMap.entrySet()) {\n-      Path path = new Path(entry.getKey());\n-      storageGroups.add(path);\n-    }\n-    FlushPlan plan = new FlushPlan(null, true, storageGroups);\n-    dataGroupMember.flushFileWhenDoSnapshot(plan);\n+    dataGroupMember.flushFileWhenDoSnapshot(storageGroupPartitions);\n   }\n \n   @Override\n"}}, {"oid": "5ac7bf3fa9e2affaeedfa4eef804bde515361890", "url": "https://github.com/apache/iotdb/commit/5ac7bf3fa9e2affaeedfa4eef804bde515361890", "message": "flush the partitions belong to the datagroup and fix some UT", "committedDate": "2020-08-29T03:12:06Z", "type": "commit"}]}