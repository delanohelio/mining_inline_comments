{"pr_number": 1269, "pr_title": "[IOTDB-707] Optimize TsFileResource memory usage", "pr_createdAt": "2020-05-26T10:09:22Z", "pr_url": "https://github.com/apache/iotdb/pull/1269", "timeline": [{"oid": "84b57b081267dc21d213db2cc0d9f3053dba9887", "url": "https://github.com/apache/iotdb/commit/84b57b081267dc21d213db2cc0d9f3053dba9887", "message": "Optimize TsFileResource memory usage", "committedDate": "2020-05-26T10:07:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNTU2OA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430305568", "bodyText": "I'm not sure if this init array size is good or not. Please take a look.", "author": "HTHou", "createdAt": "2020-05-26T10:15:26Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -63,16 +63,22 @@\n   public static final String RESOURCE_SUFFIX = \".resource\";\n   static final String TEMP_SUFFIX = \".temp\";\n   private static final String CLOSING_SUFFIX = \".closing\";\n+  private static final int INIT_ARRAY_SIZE = 64;", "originalCommit": "84b57b081267dc21d213db2cc0d9f3053dba9887", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNzY5MA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430817690", "bodyText": "In the worst case, it may waste nearly half memory of startTimes and endTimes. From this point of view, I think it may be not a better choice than Map<String, long[]> deviceToStartEndTime.", "author": "fanhualta", "createdAt": "2020-05-27T02:07:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNTU2OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0NDQxOQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430844419", "bodyText": "Here is an advice from @qiaojialin. When closing a resource, remove the redundant length of startTimes and endTimes. And when enlarging the arrays, use  * 1.5 instead.\nBy the way, the maximum number of devices in this TsFileResource shouldn't exceed the number of devices in the storage group. I'm looking for a way to find out this number.", "author": "HTHou", "createdAt": "2020-05-27T04:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNTU2OA=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 29e8a1b6c..d9ceb7c74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -71,7 +72,8 @@ public class TsFileResource {\n   private long[] startTimes;\n \n   /**\n-   * end times array. The values in this array are -1 if it's an unsealed sequence tsfile\n+   * end times array. \n+   * The values in this array are Long.MIN_VALUE if it's an unsealed sequence tsfile\n    */\n   private long[] endTimes;\n \n"}}, {"oid": "d9812d47a55e3b03e48be6853f1909790f19322d", "url": "https://github.com/apache/iotdb/commit/d9812d47a55e3b03e48be6853f1909790f19322d", "message": "fix code smells", "committedDate": "2020-05-26T13:52:25Z", "type": "commit"}, {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "url": "https://github.com/apache/iotdb/commit/063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "message": "fix a bug", "committedDate": "2020-05-27T01:52:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTQ1Ng==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430815456", "bodyText": "You will read the time twice if it's valid. It's better to recording the result of getStartTime(deviceId) with temporary variables.", "author": "fanhualta", "createdAt": "2020-05-27T01:57:41Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +363,91 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n-  public Map<String, Long> getEndTimeMap() {\n-    return endTimeMap;\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return endTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getOrDefaultStartTime(String deviceId, long defaultTime) {\n+    return getStartTime(deviceId) >= 0 ? startTimes[deviceToIndex.get(deviceId)] : defaultTime;", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTcyNg==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430841726", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-27T03:48:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7908de7ba..7e4ee9cf6 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -370,6 +369,10 @@ public class TsFileResource {\n     return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n+  public long getStartTime(int index) {\n+    return startTimes[index];\n+  }\n+\n   public long getEndTime(String deviceId) {\n     if (!deviceToIndex.containsKey(deviceId)) {\n       return -1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTUwMQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430815501", "bodyText": "You will read the time twice if it's valid. It's better to recording the result of getStartTime(deviceId) with temporary variables.", "author": "fanhualta", "createdAt": "2020-05-27T01:57:50Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +363,91 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n-  public Map<String, Long> getEndTimeMap() {\n-    return endTimeMap;\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return endTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getOrDefaultStartTime(String deviceId, long defaultTime) {\n+    return getStartTime(deviceId) >= 0 ? startTimes[deviceToIndex.get(deviceId)] : defaultTime;\n+  }\n+\n+  public long getOrDefaultEndTime(String deviceId, long defaultTime) {\n+    return getEndTime(deviceId) >= 0 ? endTimes[deviceToIndex.get(deviceId)] : defaultTime;", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTc2MQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430841761", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-27T03:49:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7908de7ba..7e4ee9cf6 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -370,6 +369,10 @@ public class TsFileResource {\n     return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n+  public long getStartTime(int index) {\n+    return startTimes[index];\n+  }\n+\n   public long getEndTime(String deviceId) {\n     if (!deviceToIndex.containsKey(deviceId)) {\n       return -1;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODM3Mg==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430818372", "bodyText": "Same issue as above.", "author": "fanhualta", "createdAt": "2020-05-27T02:10:06Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -318,12 +318,18 @@ private void recover() throws StorageGroupProcessorException {\n \n     for (TsFileResource resource : sequenceFileTreeSet) {\n       long timePartitionId = resource.getTimePartition();\n+      Map<String, Long> endTimeMap = new HashMap<>();\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n+        String deviceId = entry.getKey();\n+        long endTime = resource.getEndTime(deviceId);", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTg3Nw==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430841877", "bodyText": "Fixed", "author": "HTHou", "createdAt": "2020-05-27T03:49:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\nindex 5382296d8..06a0609e4 100755\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n\n@@ -321,7 +321,8 @@ public class StorageGroupProcessor {\n       Map<String, Long> endTimeMap = new HashMap<>();\n       for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = resource.getEndTime(deviceId);\n+        int index = entry.getValue();\n+        long endTime = resource.getEndTime(index);\n         endTimeMap.put(deviceId, endTime);\n       }\n       latestTimeForEachDevice.computeIfAbsent(timePartitionId, l -> new HashMap<>())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTI5OQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819299", "bodyText": "If we already have the index info, that is entry.getValue(). It will be more efficient to get from endTimes by index directly. Otherwise, it will hash twice and find in bucket in ConcurrentHashMap. Other iterations have similar problems, please have a look too.", "author": "fanhualta", "createdAt": "2020-05-27T02:14:01Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java", "diffHunk": "@@ -213,18 +213,18 @@ private boolean checkClosed(TsFileResource unseqFile) {\n   private void selectOverlappedSeqFiles(TsFileResource unseqFile) {\n \n     int tmpSelectedNum = 0;\n-    for (Entry<String, Long> deviceStartTimeEntry : unseqFile.getStartTimeMap().entrySet()) {\n+    for (Entry<String, Integer> deviceStartTimeEntry : unseqFile.getDeviceToIndexMap().entrySet()) {\n       String deviceId = deviceStartTimeEntry.getKey();\n-      Long unseqStartTime = deviceStartTimeEntry.getValue();\n-      Long unseqEndTime = unseqFile.getEndTimeMap().get(deviceId);\n+      long unseqStartTime = unseqFile.getStartTime(deviceId);\n+      long unseqEndTime = unseqFile.getEndTime(deviceId);", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTk0Mw==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430841943", "bodyText": "Fixed", "author": "HTHou", "createdAt": "2020-05-27T03:49:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTI5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java b/server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java\nindex e077993ec..f1db27310 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java\n\n@@ -215,8 +215,9 @@ public class MaxFileMergeFileSelector implements IMergeFileSelector {\n     int tmpSelectedNum = 0;\n     for (Entry<String, Integer> deviceStartTimeEntry : unseqFile.getDeviceToIndexMap().entrySet()) {\n       String deviceId = deviceStartTimeEntry.getKey();\n-      long unseqStartTime = unseqFile.getStartTime(deviceId);\n-      long unseqEndTime = unseqFile.getEndTime(deviceId);\n+      int deviceIndex = deviceStartTimeEntry.getValue();\n+      long unseqStartTime = unseqFile.getStartTime(deviceIndex);\n+      long unseqEndTime = unseqFile.getEndTime(deviceIndex);\n \n       boolean noMoreOverlap = false;\n       for (int i = 0; i < resource.getSeqFiles().size() && !noMoreOverlap; i++) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ0OQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819449", "bodyText": "Same issue as above.", "author": "fanhualta", "createdAt": "2020-05-27T02:14:39Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -344,16 +350,16 @@ private void updateLastestFlushedTime() throws IOException {\n     VersionController versionController = new SimpleFileVersionController(storageGroupSysDir.getPath());\n     long currentVersion = versionController.currVersion();\n     for (TsFileResource resource : upgradeSeqFileList) {\n-      for (Entry<String, Long> entry : resource.getEndTimeMap().entrySet()) {\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = entry.getValue();\n+        long endTime = resource.getEndTime(deviceId);", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTk5OQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430841999", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-27T03:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\nindex 5382296d8..06a0609e4 100755\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n\n@@ -352,14 +353,15 @@ public class StorageGroupProcessor {\n     for (TsFileResource resource : upgradeSeqFileList) {\n       for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = resource.getEndTime(deviceId);\n+        int index = entry.getValue();\n+        long endTime = resource.getEndTime(index);\n         long endTimePartitionId = StorageEngine.getTimePartition(endTime);\n         latestTimeForEachDevice.computeIfAbsent(endTimePartitionId, l -> new HashMap<>())\n                 .put(deviceId, endTime);\n         globalLatestFlushedTimeForEachDevice.put(deviceId, endTime);\n \n         // set all the covered partition's LatestFlushedTime to Long.MAX_VALUE\n-        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(deviceId));\n+        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(index));\n         while (partitionId <= endTimePartitionId) {\n           partitionLatestFlushedTimeForEachDevice.computeIfAbsent(partitionId, l -> new HashMap<>())\n                   .put(deviceId, Long.MAX_VALUE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ4NA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819484", "bodyText": "Same issue as above.", "author": "fanhualta", "createdAt": "2020-05-27T02:14:46Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -344,16 +350,16 @@ private void updateLastestFlushedTime() throws IOException {\n     VersionController versionController = new SimpleFileVersionController(storageGroupSysDir.getPath());\n     long currentVersion = versionController.currVersion();\n     for (TsFileResource resource : upgradeSeqFileList) {\n-      for (Entry<String, Long> entry : resource.getEndTimeMap().entrySet()) {\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = entry.getValue();\n+        long endTime = resource.getEndTime(deviceId);\n         long endTimePartitionId = StorageEngine.getTimePartition(endTime);\n         latestTimeForEachDevice.computeIfAbsent(endTimePartitionId, l -> new HashMap<>())\n                 .put(deviceId, endTime);\n-        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());\n+        globalLatestFlushedTimeForEachDevice.put(deviceId, endTime);\n \n         // set all the covered partition's LatestFlushedTime to Long.MAX_VALUE\n-        long partitionId = StorageEngine.getTimePartition(resource.startTimeMap.get(deviceId));\n+        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(deviceId));", "originalCommit": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MjA0OQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430842049", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-27T03:50:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\nindex 5382296d8..06a0609e4 100755\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java\n\n@@ -352,14 +353,15 @@ public class StorageGroupProcessor {\n     for (TsFileResource resource : upgradeSeqFileList) {\n       for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = resource.getEndTime(deviceId);\n+        int index = entry.getValue();\n+        long endTime = resource.getEndTime(index);\n         long endTimePartitionId = StorageEngine.getTimePartition(endTime);\n         latestTimeForEachDevice.computeIfAbsent(endTimePartitionId, l -> new HashMap<>())\n                 .put(deviceId, endTime);\n         globalLatestFlushedTimeForEachDevice.put(deviceId, endTime);\n \n         // set all the covered partition's LatestFlushedTime to Long.MAX_VALUE\n-        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(deviceId));\n+        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(index));\n         while (partitionId <= endTimePartitionId) {\n           partitionLatestFlushedTimeForEachDevice.computeIfAbsent(partitionId, l -> new HashMap<>())\n                   .put(deviceId, Long.MAX_VALUE);\n"}}, {"oid": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "url": "https://github.com/apache/iotdb/commit/0e87a4412c8f2c19055a0821e6d7343474c7fc41", "message": "fix review", "committedDate": "2020-05-27T03:48:00Z", "type": "commit"}, {"oid": "7f9df8c0a7a58d7183164bf6f53d103f90f339b6", "url": "https://github.com/apache/iotdb/commit/7f9df8c0a7a58d7183164bf6f53d103f90f339b6", "message": "fix review", "committedDate": "2020-05-27T06:59:09Z", "type": "commit"}, {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a", "url": "https://github.com/apache/iotdb/commit/85277e9a2121370bdfc38f1ecd605f359707808a", "message": "fix test", "committedDate": "2020-05-27T07:55:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyODc2Mw==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431128763", "bodyText": "You can fill startTime by MAX_VALUE and fill endTimes by MIN_VALUE", "author": "qiaojialin", "createdAt": "2020-05-27T13:26:07Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -221,18 +237,22 @@ private void generateTimeSeriesMetadata() throws IOException {\n     }\n   }\n \n+  private void initTimes(long[] times) {\n+    Arrays.fill(times, -1);", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzNzU2Mg==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431537562", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyODc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7e4ee9cf6..d9ceb7c74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -237,8 +238,8 @@ public class TsFileResource {\n     }\n   }\n \n-  private void initTimes(long[] times) {\n-    Arrays.fill(times, -1);\n+  private void initTimes(long[] times, long defaultTime) {\n+    Arrays.fill(times, defaultTime);\n   }\n \n   public void serialize() throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyOTUwOQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431129509", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * end times array. The values in this array are -1 if it's an unsealed sequence tsfile\n          \n          \n            \n               * end times array. The values in this array are Long.MIN_VALUE if it's an unsealed sequence tsfile", "author": "qiaojialin", "createdAt": "2020-05-27T13:27:09Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -63,16 +64,22 @@\n   public static final String RESOURCE_SUFFIX = \".resource\";\n   static final String TEMP_SUFFIX = \".temp\";\n   private static final String CLOSING_SUFFIX = \".closing\";\n+  private static final int INIT_ARRAY_SIZE = 64;\n \n   /**\n-   * device -> start time\n+   * start times array. \n    */\n-  protected Map<String, Long> startTimeMap;\n+  private long[] startTimes;\n \n   /**\n-   * device -> end time. It is null if it's an unsealed sequence tsfile\n+   * end times array. The values in this array are -1 if it's an unsealed sequence tsfile", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzNzYwMA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431537600", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:49:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyOTUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7e4ee9cf6..d9ceb7c74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -72,7 +72,8 @@ public class TsFileResource {\n   private long[] startTimes;\n \n   /**\n-   * end times array. The values in this array are -1 if it's an unsealed sequence tsfile\n+   * end times array. \n+   * The values in this array are Long.MIN_VALUE if it's an unsealed sequence tsfile\n    */\n   private long[] endTimes;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNDY0NQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431134645", "bodyText": "You can fill startTime by MAX_VALUE and fill endTimes by MIN_VALUE", "author": "qiaojialin", "createdAt": "2020-05-27T13:34:29Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -283,16 +306,16 @@ public void deserialize() throws IOException {\n   }\n \n   public void updateStartTime(String device, long time) {\n-    long startTime = startTimeMap.getOrDefault(device, Long.MAX_VALUE);\n+    long startTime = getOrDefaultStartTime(device, Long.MAX_VALUE);", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODk2NQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538965", "bodyText": "Fixed", "author": "HTHou", "createdAt": "2020-05-28T01:54:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNDY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "97784d487067845ee3d2c8fe01a8bff9b1146728", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7e4ee9cf6..e3f72061f 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -306,14 +307,14 @@ public class TsFileResource {\n   }\n \n   public void updateStartTime(String device, long time) {\n-    long startTime = getOrDefaultStartTime(device, Long.MAX_VALUE);\n+    long startTime = getStartTime(device);\n     if (time < startTime) {\n       putStartTime(device, time);\n     }\n   }\n \n   public void updateEndTime(String device, long time) {\n-    long endTime = getOrDefaultEndTime(device, Long.MIN_VALUE);\n+    long endTime = getEndTime(device);\n     if (time > endTime) {\n       putEndTime(device, time);\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTUwMQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431135501", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return -1;\n          \n          \n            \n                  return Long.MAX_VALUE;\n          \n      \n    \n    \n  \n\nis this ok?", "author": "qiaojialin", "createdAt": "2020-05-27T13:35:38Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +362,106 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODEwOA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538108", "bodyText": "Yes, of course.  Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:50:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTUwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7e4ee9cf6..d9ceb7c74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -364,7 +365,7 @@ public class TsFileResource {\n \n   public long getStartTime(String deviceId) {\n     if (!deviceToIndex.containsKey(deviceId)) {\n-      return -1;\n+      return Long.MAX_VALUE;\n     }\n     return startTimes[deviceToIndex.get(deviceId)];\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTgyOA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431135828", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return -1;\n          \n          \n            \n                  return Long.MIN_TIME;", "author": "qiaojialin", "createdAt": "2020-05-27T13:36:04Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +362,106 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getStartTime(int index) {\n+    return startTimes[index];\n+  }\n+\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODE4Ng==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538186", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:51:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTgyOA=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\nindex 7e4ee9cf6..d9ceb7c74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java\n\n@@ -364,7 +365,7 @@ public class TsFileResource {\n \n   public long getStartTime(String deviceId) {\n     if (!deviceToIndex.containsKey(deviceId)) {\n-      return -1;\n+      return Long.MAX_VALUE;\n     }\n     return startTimes[deviceToIndex.get(deviceId)];\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzOTk0MA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431139940", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Long minTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long minTimeOfO2 = o2.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long maxTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long maxTimeOfO2 = o2.getEndTime(seriesPath.getDevice());", "author": "qiaojialin", "createdAt": "2020-05-27T13:41:48Z", "path": "server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java", "diffHunk": "@@ -183,11 +182,8 @@ private boolean shouldUpdate(long time, long version, long newTime, long newVers\n     PriorityQueue<TsFileResource> unseqTsFilesSet =\n         new PriorityQueue<>(\n             (o1, o2) -> {\n-              Map<String, Long> startTimeMap = o1.getEndTimeMap();\n-              Long minTimeOfO1 = startTimeMap.get(seriesPath.getDevice());\n-              Map<String, Long> startTimeMap2 = o2.getEndTimeMap();\n-              Long minTimeOfO2 = startTimeMap2.get(seriesPath.getDevice());\n-\n+              Long minTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n+              Long minTimeOfO2 = o2.getEndTime(seriesPath.getDevice());", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODIxMQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538211", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzOTk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java b/server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java\nindex 4d4825766..57c244b74 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java\n\n@@ -182,9 +182,9 @@ public class LastPointReader {\n     PriorityQueue<TsFileResource> unseqTsFilesSet =\n         new PriorityQueue<>(\n             (o1, o2) -> {\n-              Long minTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n-              Long minTimeOfO2 = o2.getEndTime(seriesPath.getDevice());\n-              return Long.compare(minTimeOfO2, minTimeOfO1);\n+              Long maxTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n+              Long maxTimeOfO2 = o2.getEndTime(seriesPath.getDevice());\n+              return Long.compare(maxTimeOfO2, maxTimeOfO1);\n             });\n     unseqTsFilesSet.addAll(tsFileResources);\n     return unseqTsFilesSet;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDc3Mw==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431140773", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (lastEndTime >= 0 && lastEndTime >= insertTabletPlan.getMinTime() &&\n          \n          \n            \n                  if (lastEndTime != Long.MIN_VALUE && lastEndTime >= insertTabletPlan.getMinTime() &&", "author": "qiaojialin", "createdAt": "2020-05-27T13:42:56Z", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -127,8 +127,8 @@ private void replayBatchInsert(InsertTabletPlan insertTabletPlan)\n       throws WriteProcessException, QueryProcessException {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n-      Long lastEndTime = currentTsFileResource.getEndTimeMap().get(insertTabletPlan.getDeviceId());\n-      if (lastEndTime != null && lastEndTime >= insertTabletPlan.getMinTime() &&\n+      long lastEndTime = currentTsFileResource.getEndTime(insertTabletPlan.getDeviceId());\n+      if (lastEndTime >= 0 && lastEndTime >= insertTabletPlan.getMinTime() &&", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODI0Mg==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538242", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDc3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\nindex 1f479b7b9..39f678052 100644\n--- a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n+++ b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n\n@@ -128,7 +128,7 @@ public class LogReplayer {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n       long lastEndTime = currentTsFileResource.getEndTime(insertTabletPlan.getDeviceId());\n-      if (lastEndTime >= 0 && lastEndTime >= insertTabletPlan.getMinTime() &&\n+      if (lastEndTime != Long.MIN_VALUE && lastEndTime >= insertTabletPlan.getMinTime() &&\n           !acceptDuplication) {\n         return;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDkwOA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431140908", "bodyText": "the same", "author": "qiaojialin", "createdAt": "2020-05-27T13:43:05Z", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -155,8 +155,8 @@ private void replayBatchInsert(InsertTabletPlan insertTabletPlan)\n   private void replayInsert(InsertPlan insertPlan) {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n-      Long lastEndTime = currentTsFileResource.getEndTimeMap().get(insertPlan.getDeviceId());\n-      if (lastEndTime != null && lastEndTime >= insertPlan.getTime() &&\n+      long lastEndTime = currentTsFileResource.getEndTime(insertPlan.getDeviceId());\n+      if (lastEndTime >= 0 && lastEndTime >= insertPlan.getTime() &&", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODI4NQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538285", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\nindex 1f479b7b9..39f678052 100644\n--- a/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n+++ b/server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java\n\n@@ -156,7 +156,7 @@ public class LogReplayer {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n       long lastEndTime = currentTsFileResource.getEndTime(insertPlan.getDeviceId());\n-      if (lastEndTime >= 0 && lastEndTime >= insertPlan.getTime() &&\n+      if (lastEndTime != Long.MIN_VALUE && lastEndTime >= insertPlan.getTime() &&\n           !acceptDuplication) {\n         return;\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NDA4OA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431144088", "bodyText": "I don't understand why here set start time to end time before.....", "author": "qiaojialin", "createdAt": "2020-05-27T13:47:25Z", "path": "server/src/test/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessorTest.java", "diffHunk": "@@ -282,9 +282,8 @@ public void testWriteAndClose() throws IOException, WriteProcessException{\n   private void closeTsFileProcessor(TsFileProcessor unsealedTsFileProcessor) throws TsFileProcessorException {\n     TsFileResource resource = unsealedTsFileProcessor.getTsFileResource();\n     synchronized (resource) {\n-      for (Entry<String, Long> startTime : resource.getStartTimeMap().entrySet()) {\n-        String deviceId = startTime.getKey();\n-        resource.getEndTimeMap().put(deviceId, resource.getStartTimeMap().get(deviceId));\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n+        resource.putEndTime(entry.getKey(), resource.getStartTime(entry.getValue()));", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0NTE5MA==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431545190", "bodyText": "I am confusing too...", "author": "HTHou", "createdAt": "2020-05-28T02:19:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NDA4OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NTMwMQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431145301", "bodyText": "== MAX_VALUE", "author": "qiaojialin", "createdAt": "2020-05-27T13:48:38Z", "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java", "diffHunk": "@@ -152,9 +152,9 @@ private void pathsMergeOneFile(int seqFileIdx, IPointReader[] unseqReaders)\n       throws IOException {\n     TsFileResource currTsFile = resource.getSeqFiles().get(seqFileIdx);\n     String deviceId = currMergingPaths.get(0).getDevice();\n-    Long currDeviceMinTime = currTsFile.getStartTimeMap().get(deviceId);\n+    long currDeviceMinTime = currTsFile.getStartTime(deviceId);\n     //COMMENTS: is this correct? how about if there are other devices (in the currMergingPaths) that have unseq data?\n-    if (currDeviceMinTime == null) {\n+    if (currDeviceMinTime < 0) {", "originalCommit": "85277e9a2121370bdfc38f1ecd605f359707808a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzODMyNQ==", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431538325", "bodyText": "Fixed~", "author": "HTHou", "createdAt": "2020-05-28T01:51:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NTMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java b/server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java\nindex e3de98fcd..2ca0f5f1e 100644\n--- a/server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java\n+++ b/server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java\n\n@@ -154,7 +154,7 @@ class MergeMultiChunkTask {\n     String deviceId = currMergingPaths.get(0).getDevice();\n     long currDeviceMinTime = currTsFile.getStartTime(deviceId);\n     //COMMENTS: is this correct? how about if there are other devices (in the currMergingPaths) that have unseq data?\n-    if (currDeviceMinTime < 0) {\n+    if (currDeviceMinTime == Long.MAX_VALUE) {\n       return;\n     }\n \n"}}, {"oid": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "url": "https://github.com/apache/iotdb/commit/fc6f066af181db3084c56995f81abb3e5eb1b1f8", "message": "fix review", "committedDate": "2020-05-28T01:48:02Z", "type": "commit"}, {"oid": "97784d487067845ee3d2c8fe01a8bff9b1146728", "url": "https://github.com/apache/iotdb/commit/97784d487067845ee3d2c8fe01a8bff9b1146728", "message": "fix review", "committedDate": "2020-05-28T01:53:40Z", "type": "commit"}, {"oid": "9f6cea7c94231ca51952e5ef2fb6668aa1264f8c", "url": "https://github.com/apache/iotdb/commit/9f6cea7c94231ca51952e5ef2fb6668aa1264f8c", "message": "Merge branch 'master' into jira-707", "committedDate": "2020-05-28T08:10:37Z", "type": "commit"}, {"oid": "fb976c8a398c8709727e37347f55dd585e4d9f63", "url": "https://github.com/apache/iotdb/commit/fb976c8a398c8709727e37347f55dd585e4d9f63", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into jira-707", "committedDate": "2020-05-28T08:48:44Z", "type": "commit"}]}