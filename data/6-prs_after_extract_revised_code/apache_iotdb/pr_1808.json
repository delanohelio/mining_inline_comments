{"pr_number": 1808, "pr_title": "[IOTDB-936] Refactor getAllDevices in TsFileSequenceReader", "pr_createdAt": "2020-10-08T02:47:34Z", "pr_url": "https://github.com/apache/iotdb/pull/1808", "timeline": [{"oid": "3c55742dfb8cba2622bc1f67bb4e15241a26a68d", "url": "https://github.com/apache/iotdb/commit/3c55742dfb8cba2622bc1f67bb4e15241a26a68d", "message": "Refactor getAllDevices in TsFileSequenceReader", "committedDate": "2020-10-08T02:45:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxNTA0Mg==", "url": "https://github.com/apache/iotdb/pull/1808#discussion_r501515042", "bodyText": "These two readers should be closed...", "author": "HTHou", "createdAt": "2020-10-08T07:49:12Z", "path": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/GetAllDevicesTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.read;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.iotdb.tsfile.common.conf.TSFileConfig;\n+import org.apache.iotdb.tsfile.common.conf.TSFileDescriptor;\n+import org.apache.iotdb.tsfile.utils.FileGenerator;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class GetAllDevicesTest {\n+\n+  private final TSFileConfig conf = TSFileDescriptor.getInstance().getConfig();\n+  private int maxDegreeOfIndexNode;\n+  private static final String FILE_PATH = FileGenerator.outputDataFile;\n+\n+  @Before\n+  public void before() {\n+    maxDegreeOfIndexNode = conf.getMaxDegreeOfIndexNode();\n+    conf.setMaxDegreeOfIndexNode(3);\n+  }\n+\n+  @After\n+  public void after() throws IOException {\n+    FileGenerator.after();\n+    conf.setMaxDegreeOfIndexNode(maxDegreeOfIndexNode);\n+  }\n+\n+  @Test\n+  public void testGetAllDevices1() throws IOException {\n+    testGetAllDevices(2, 2);\n+  }\n+\n+  @Test\n+  public void testGetAllDevices2() throws IOException {\n+    testGetAllDevices(2, 50);\n+  }\n+\n+  @Test\n+  public void testGetAllDevices3() throws IOException {\n+    testGetAllDevices(50, 2);\n+  }\n+\n+  @Test\n+  public void testGetAllDevices4() throws IOException {\n+    testGetAllDevices(50, 50);\n+  }\n+\n+  public void testGetAllDevices(int deviceNum, int measurementNum) throws IOException {\n+    FileGenerator.generateFile(10000, deviceNum, measurementNum);\n+    TsFileSequenceReader fileReader = new TsFileSequenceReader(FILE_PATH);\n+    ReadOnlyTsFile tsFile = new ReadOnlyTsFile(fileReader);\n+\n+    // test\n+    TsFileSequenceReader reader = new TsFileSequenceReader(FILE_PATH);", "originalCommit": "3c55742dfb8cba2622bc1f67bb4e15241a26a68d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3OTI3Nw==", "url": "https://github.com/apache/iotdb/pull/1808#discussion_r501679277", "bodyText": "Thanks!!!!!", "author": "samperson1997", "createdAt": "2020-10-08T12:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxNTA0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c09fdd663995be6db78172824ac5d89008f7f225", "chunk": "diff --git a/tsfile/src/test/java/org/apache/iotdb/tsfile/read/GetAllDevicesTest.java b/tsfile/src/test/java/org/apache/iotdb/tsfile/read/GetAllDevicesTest.java\nindex 1ece3afb9e..05add5c510 100644\n--- a/tsfile/src/test/java/org/apache/iotdb/tsfile/read/GetAllDevicesTest.java\n+++ b/tsfile/src/test/java/org/apache/iotdb/tsfile/read/GetAllDevicesTest.java\n\n@@ -69,20 +69,22 @@ public class GetAllDevicesTest {\n \n   public void testGetAllDevices(int deviceNum, int measurementNum) throws IOException {\n     FileGenerator.generateFile(10000, deviceNum, measurementNum);\n-    TsFileSequenceReader fileReader = new TsFileSequenceReader(FILE_PATH);\n-    ReadOnlyTsFile tsFile = new ReadOnlyTsFile(fileReader);\n-\n-    // test\n-    TsFileSequenceReader reader = new TsFileSequenceReader(FILE_PATH);\n-    List<String> devices = reader.getAllDevices();\n-    Assert.assertEquals(deviceNum, devices.size());\n-    for (int i = 0; i < deviceNum; i++) {\n-      Assert.assertTrue(devices.contains(\"d\" + i));\n+    try (TsFileSequenceReader fileReader = new TsFileSequenceReader(FILE_PATH)) {\n+      ReadOnlyTsFile tsFile = new ReadOnlyTsFile(fileReader);\n+  \n+      // test\n+      try (TsFileSequenceReader reader = new TsFileSequenceReader(FILE_PATH)) {\n+        List<String> devices = reader.getAllDevices();\n+        Assert.assertEquals(deviceNum, devices.size());\n+        for (int i = 0; i < deviceNum; i++) {\n+          Assert.assertTrue(devices.contains(\"d\" + i));\n+        }\n+      }\n+  \n+      // after\n+      tsFile.close();\n+      FileGenerator.after();\n     }\n-\n-    // after\n-    tsFile.close();\n-    FileGenerator.after();\n   }\n \n }\n"}}, {"oid": "c09fdd663995be6db78172824ac5d89008f7f225", "url": "https://github.com/apache/iotdb/commit/c09fdd663995be6db78172824ac5d89008f7f225", "message": "close reader", "committedDate": "2020-10-08T09:35:23Z", "type": "commit"}]}