{"pr_number": 2334, "pr_title": "Move coordinator from meta group member", "pr_createdAt": "2020-12-25T06:22:40Z", "pr_url": "https://github.com/apache/iotdb/pull/2334", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5ODkwOA==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549198908", "bodyText": "Why not delete this method as you have implemented it in Coordinator.", "author": "LebronAl", "createdAt": "2020-12-28T03:02:51Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1326,50 +1326,21 @@ public void receiveSnapshot(SendSnapshotRequest request) throws SnapshotInstalla\n    */\n   @Override\n   public TSStatus executeNonQueryPlan(PhysicalPlan plan) {", "originalCommit": "4cde145740b7d6425fe226ddd2fca90e4cd48974", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwODQ4Mw==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549208483", "bodyText": "DataGroupMember use the method, so I have to support the method in metaGroupMember.", "author": "mychaow", "createdAt": "2020-12-28T04:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5ODkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNzEyOA==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549317128", "bodyText": "Where does DataGroupMember use this? It does not seem quite reasonable.", "author": "jt2594838", "createdAt": "2020-12-28T11:39:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5ODkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMyMDg3OA==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549320878", "bodyText": "It seems that we can move  executeNonQueryPlan from RaftService to TSDataService in cluster.thrift", "author": "LebronAl", "createdAt": "2020-12-28T11:53:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5ODkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMyNTc1Mw==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549325753", "bodyText": "ok\uff0cI will remove the method.", "author": "mychaow", "createdAt": "2020-12-28T12:11:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5ODkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "1d0dd596db4e63ded16529c656f861f55d4802d9", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java b/cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java\nindex 6806b473a9..7d2b7760c7 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java\n\n@@ -1326,21 +1326,50 @@ public class MetaGroupMember extends RaftMember {\n    */\n   @Override\n   public TSStatus executeNonQueryPlan(PhysicalPlan plan) {\n-    TSStatus result = new TSStatus();\n+    TSStatus result;\n     long startTime = Timer.Statistic.META_GROUP_MEMBER_EXECUTE_NON_QUERY.getOperationStartTime();\n     if (PartitionUtils.isLocalNonQueryPlan(plan)) { // run locally\n-      // do nothing\n+      result = executeNonQueryLocally(plan);\n     } else if (PartitionUtils.isGlobalMetaPlan(plan)) { //forward the plan to all meta group nodes\n       result = processNonPartitionedMetaPlan(plan);\n     } else if (PartitionUtils.isGlobalDataPlan(plan)) { //forward the plan to all data group nodes\n-      // do nothing\n+      result = processNonPartitionedDataPlan(plan);\n     } else { //split the plan and forward them to some PartitionGroups\n-      // do nothing\n+      try {\n+        result = processPartitionedPlan(plan);\n+      } catch (UnsupportedPlanException e) {\n+        return StatusUtils.getStatus(StatusUtils.UNSUPPORTED_OPERATION, e.getMessage());\n+      }\n     }\n     Timer.Statistic.META_GROUP_MEMBER_EXECUTE_NON_QUERY.calOperationCostTimeFromStart(startTime);\n     return result;\n   }\n \n+  /**\n+   * execute a non-query plan that is not necessary to be executed on other nodes.\n+   */\n+  private TSStatus executeNonQueryLocally(PhysicalPlan plan) {\n+    boolean execRet;\n+    try {\n+      execRet = getLocalExecutor().processNonQuery(plan);\n+    } catch (QueryProcessException e) {\n+      if (e.getErrorCode() != TSStatusCode.INTERNAL_SERVER_ERROR.getStatusCode()) {\n+        logger.debug(\"meet error while processing non-query. \", e);\n+      } else {\n+        logger.warn(\"meet error while processing non-query. \", e);\n+      }\n+      return RpcUtils.getStatus(e.getErrorCode(), e.getMessage());\n+    } catch (Exception e) {\n+      logger.error(\"{}: server Internal Error: \", IoTDBConstant.GLOBAL_DB_NAME, e);\n+      return RpcUtils.getStatus(TSStatusCode.INTERNAL_SERVER_ERROR, e.getMessage());\n+    }\n+\n+    return execRet\n+        ? RpcUtils.getStatus(TSStatusCode.SUCCESS_STATUS, \"Execute successfully\")\n+        : RpcUtils.getStatus(TSStatusCode.EXECUTE_STATEMENT_ERROR);\n+  }\n+\n+\n   /**\n    * A non-partitioned plan (like storage group creation) should be executed on all metagroup nodes,\n    * so the MetaLeader should take the responsible to make sure that every node receives the plan.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwMDI0Ng==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549200246", "bodyText": "As you have abstract coordinator to cooperate with metaGroupMember and dataGroupMember, I think maybe it's better to remove metaGroupMember in ClientServer to decouple clientServer(service logic) and metaGroupMember(internal logic).", "author": "LebronAl", "createdAt": "2020-12-28T03:12:35Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java", "diffHunk": "@@ -90,6 +91,12 @@\n    */\n   private MetaGroupMember metaGroupMember;", "originalCommit": "4cde145740b7d6425fe226ddd2fca90e4cd48974", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIxOTk0Mw==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549219943", "bodyText": "ok", "author": "mychaow", "createdAt": "2020-12-28T05:27:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwMDI0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1d0dd596db4e63ded16529c656f861f55d4802d9", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java b/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\nindex db58d83ed8..f0c554eab5 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\n\n@@ -91,12 +90,6 @@ public class ClientServer extends TSServiceImpl {\n    */\n   private MetaGroupMember metaGroupMember;\n \n-  private Coordinator coordinator;\n-\n-  public void setCoordinator(Coordinator coordinator) {\n-    this.coordinator = coordinator;\n-  }\n-\n   /**\n    * The single thread pool that runs poolServer to unblock the main thread.\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwMDg0NQ==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549200845", "bodyText": "update javadoc", "author": "LebronAl", "createdAt": "2020-12-28T03:16:46Z", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java", "diffHunk": "@@ -203,7 +210,7 @@ protected TSStatus executeNonQueryPlan(PhysicalPlan plan) {\n       logger.warn(\"Illegal plan detected\uff1a {}\", plan);\n       return RpcUtils.getStatus(TSStatusCode.EXECUTE_STATEMENT_ERROR, e.getMessage());\n     }\n-    return metaGroupMember.executeNonQueryPlan(plan);\n+    return coordinator.executeNonQueryPlan(plan);", "originalCommit": "4cde145740b7d6425fe226ddd2fca90e4cd48974", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwODA4Mg==", "url": "https://github.com/apache/iotdb/pull/2334#discussion_r549208082", "bodyText": "ok", "author": "mychaow", "createdAt": "2020-12-28T04:12:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIwMDg0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1d0dd596db4e63ded16529c656f861f55d4802d9", "chunk": "diff --git a/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java b/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\nindex db58d83ed8..f0c554eab5 100644\n--- a/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\n+++ b/cluster/src/main/java/org/apache/iotdb/cluster/server/ClientServer.java\n\n@@ -210,7 +203,7 @@ public class ClientServer extends TSServiceImpl {\n       logger.warn(\"Illegal plan detected\uff1a {}\", plan);\n       return RpcUtils.getStatus(TSStatusCode.EXECUTE_STATEMENT_ERROR, e.getMessage());\n     }\n-    return coordinator.executeNonQueryPlan(plan);\n+    return metaGroupMember.executeNonQueryPlan(plan);\n   }\n \n \n"}}, {"oid": "1d0dd596db4e63ded16529c656f861f55d4802d9", "url": "https://github.com/apache/iotdb/commit/1d0dd596db4e63ded16529c656f861f55d4802d9", "message": "modify format of some comments", "committedDate": "2020-12-28T05:29:13Z", "type": "commit"}, {"oid": "7e595ac74be69a4f2bec1c5b61c7e7c2a2f4c818", "url": "https://github.com/apache/iotdb/commit/7e595ac74be69a4f2bec1c5b61c7e7c2a2f4c818", "message": "refactor metagroupmemeber", "committedDate": "2020-12-28T05:29:13Z", "type": "commit"}, {"oid": "926effe3d1986e2123a6633b0d27a6b061a4e009", "url": "https://github.com/apache/iotdb/commit/926effe3d1986e2123a6633b0d27a6b061a4e009", "message": "fix test", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "47bde78648ce497c471fe3944c86383eff698ebe", "url": "https://github.com/apache/iotdb/commit/47bde78648ce497c471fe3944c86383eff698ebe", "message": "add some comment", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "5ad5dddc26e2611f1bcfbd829449efdda093c416", "url": "https://github.com/apache/iotdb/commit/5ad5dddc26e2611f1bcfbd829449efdda093c416", "message": "fix code smell", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "1981863d27750f4555e670ba2c95aa4d0721824b", "url": "https://github.com/apache/iotdb/commit/1981863d27750f4555e670ba2c95aa4d0721824b", "message": "remove duplicated code", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "d0c82f8e07a38e8ca6ccb065009e3cf22cb75f43", "url": "https://github.com/apache/iotdb/commit/d0c82f8e07a38e8ca6ccb065009e3cf22cb75f43", "message": "remove unused import", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "0272705741c6f22cea98dfe7e3e0bd17fbbf2cf4", "url": "https://github.com/apache/iotdb/commit/0272705741c6f22cea98dfe7e3e0bd17fbbf2cf4", "message": "remove the metaGroupMember from clientServer", "committedDate": "2020-12-28T05:29:14Z", "type": "commit"}, {"oid": "0272705741c6f22cea98dfe7e3e0bd17fbbf2cf4", "url": "https://github.com/apache/iotdb/commit/0272705741c6f22cea98dfe7e3e0bd17fbbf2cf4", "message": "remove the metaGroupMember from clientServer", "committedDate": "2020-12-28T05:29:14Z", "type": "forcePushed"}, {"oid": "b70db80bc6978ac0b6652f1e906fbb0139348636", "url": "https://github.com/apache/iotdb/commit/b70db80bc6978ac0b6652f1e906fbb0139348636", "message": "remote executeNonQuery from metaGroupMember", "committedDate": "2020-12-29T01:25:18Z", "type": "commit"}, {"oid": "57876507173c4759f19e9be7ee6d0b086cc55b77", "url": "https://github.com/apache/iotdb/commit/57876507173c4759f19e9be7ee6d0b086cc55b77", "message": "remove unused import", "committedDate": "2020-12-29T01:37:47Z", "type": "commit"}]}