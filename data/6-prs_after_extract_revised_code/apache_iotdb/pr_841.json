{"pr_number": 841, "pr_title": "[IOTDB-476] Improve the ExpressionOptimizer", "pr_createdAt": "2020-02-26T07:22:52Z", "pr_url": "https://github.com/apache/iotdb/pull/841", "timeline": [{"oid": "10147cf183f46f107cd17e0bf5b63d03d34fff58", "url": "https://github.com/apache/iotdb/commit/10147cf183f46f107cd17e0bf5b63d03d34fff58", "message": "optimize expression", "committedDate": "2020-02-26T07:07:57Z", "type": "commit"}, {"oid": "620d530784642d6043e7b3ab122929958fb7daed", "url": "https://github.com/apache/iotdb/commit/620d530784642d6043e7b3ab122929958fb7daed", "message": "google code style", "committedDate": "2020-02-26T07:38:35Z", "type": "commit"}, {"oid": "05c77c84be05df421b2875b0f3d297aa9565da80", "url": "https://github.com/apache/iotdb/commit/05c77c84be05df421b2875b0f3d297aa9565da80", "message": "remove temp test", "committedDate": "2020-02-26T07:40:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMTQyMA==", "url": "https://github.com/apache/iotdb/pull/841#discussion_r384321420", "bodyText": "Two of if are same, please check the logic", "author": "SilverNarcissus", "createdAt": "2020-02-26T07:54:15Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java", "diffHunk": "@@ -108,13 +108,66 @@ private IExpression handleOneGlobalTimeFilter(GlobalTimeExpression globalTimeExp\n       addTimeFilterToQueryFilter((globalTimeExpression).getFilter(), regularRightIExpression);\n       return regularRightIExpression;\n     } else if (relation == ExpressionType.OR) {\n-      return BinaryExpression\n-          .or(pushGlobalTimeFilterToAllSeries(globalTimeExpression, selectedSeries),\n-              regularRightIExpression);\n+      IExpression afterTransform = pushGlobalTimeFilterToAllSeries(globalTimeExpression,\n+          selectedSeries);\n+      return mergeSecondTreeToFirstTree(afterTransform, regularRightIExpression);\n     }\n     throw new QueryFilterOptimizationException(\"unknown relation in IExpression:\" + relation);\n   }\n \n+  /**\n+   * This method merge the second input, which is of tree structure, to the first parameter. It\n+   * visits all leaf nodes, which are SingleSeriesExpressions, or AndExpression in right Expression,\n+   * merge them to the right position in leftExpression.\n+   *\n+   * @param leftExpression  The IExpression transformed from GlobalTimeExpression, which might have\n+   *                        already be updated and merged.\n+   * @param rightExpression The IExpression to be merged into the first IExpression\n+   * @return a merged IExpression, which is initially based on the input leftExpression\n+   */\n+  private IExpression mergeSecondTreeToFirstTree(IExpression leftExpression,\n+      IExpression rightExpression) {\n+    if (rightExpression.getType() == ExpressionType.SERIES) {\n+      SingleSeriesExpression leaf = (SingleSeriesExpression) rightExpression;\n+      updateFilterWithOr(leftExpression, leaf.getFilter(), leaf.getSeriesPath());\n+      return leftExpression;\n+    } else if (rightExpression.getType() == ExpressionType.SERIES) {", "originalCommit": "05c77c84be05df421b2875b0f3d297aa9565da80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMDg3NQ==", "url": "https://github.com/apache/iotdb/pull/841#discussion_r384330875", "bodyText": "It's a mistake. Thanks for your reminding.", "author": "Ring-k", "createdAt": "2020-02-26T08:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMTQyMA=="}], "type": "inlineReview", "revised_code": {"commit": "328face4f49d44ab579cb50c90a4b46033a467ea", "chunk": "diff --git a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\nindex 70a15365f0..e8b0eb8003 100644\n--- a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\n+++ b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\n\n@@ -131,7 +131,7 @@ public class ExpressionOptimizer {\n       SingleSeriesExpression leaf = (SingleSeriesExpression) rightExpression;\n       updateFilterWithOr(leftExpression, leaf.getFilter(), leaf.getSeriesPath());\n       return leftExpression;\n-    } else if (rightExpression.getType() == ExpressionType.SERIES) {\n+    } else if (rightExpression.getType() == ExpressionType.OR) {\n       IExpression leftChild = ((BinaryExpression) rightExpression).getLeft();\n       IExpression rightChild = ((BinaryExpression) rightExpression).getRight();\n       leftExpression = mergeSecondTreeToFirstTree(leftExpression, leftChild);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjMwMA==", "url": "https://github.com/apache/iotdb/pull/841#discussion_r384322300", "bodyText": "The return value is boolean but not an expression", "author": "SilverNarcissus", "createdAt": "2020-02-26T07:56:39Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java", "diffHunk": "@@ -108,13 +108,66 @@ private IExpression handleOneGlobalTimeFilter(GlobalTimeExpression globalTimeExp\n       addTimeFilterToQueryFilter((globalTimeExpression).getFilter(), regularRightIExpression);\n       return regularRightIExpression;\n     } else if (relation == ExpressionType.OR) {\n-      return BinaryExpression\n-          .or(pushGlobalTimeFilterToAllSeries(globalTimeExpression, selectedSeries),\n-              regularRightIExpression);\n+      IExpression afterTransform = pushGlobalTimeFilterToAllSeries(globalTimeExpression,\n+          selectedSeries);\n+      return mergeSecondTreeToFirstTree(afterTransform, regularRightIExpression);\n     }\n     throw new QueryFilterOptimizationException(\"unknown relation in IExpression:\" + relation);\n   }\n \n+  /**\n+   * This method merge the second input, which is of tree structure, to the first parameter. It\n+   * visits all leaf nodes, which are SingleSeriesExpressions, or AndExpression in right Expression,\n+   * merge them to the right position in leftExpression.\n+   *\n+   * @param leftExpression  The IExpression transformed from GlobalTimeExpression, which might have\n+   *                        already be updated and merged.\n+   * @param rightExpression The IExpression to be merged into the first IExpression\n+   * @return a merged IExpression, which is initially based on the input leftExpression\n+   */\n+  private IExpression mergeSecondTreeToFirstTree(IExpression leftExpression,\n+      IExpression rightExpression) {\n+    if (rightExpression.getType() == ExpressionType.SERIES) {\n+      SingleSeriesExpression leaf = (SingleSeriesExpression) rightExpression;\n+      updateFilterWithOr(leftExpression, leaf.getFilter(), leaf.getSeriesPath());\n+      return leftExpression;\n+    } else if (rightExpression.getType() == ExpressionType.SERIES) {\n+      IExpression leftChild = ((BinaryExpression) rightExpression).getLeft();\n+      IExpression rightChild = ((BinaryExpression) rightExpression).getRight();\n+      leftExpression = mergeSecondTreeToFirstTree(leftExpression, leftChild);\n+      leftExpression = mergeSecondTreeToFirstTree(leftExpression, rightChild);\n+      return leftExpression;\n+    } else {\n+      return BinaryExpression.or(leftExpression, rightExpression);\n+    }\n+  }\n+\n+  /**\n+   * This method search  the node in the input expression, whose path is identical to the input\n+   * path, then merges its filter and the input filter with relation OR.\n+   *\n+   * @return an expression, some of whose node contains the input filter.", "originalCommit": "05c77c84be05df421b2875b0f3d297aa9565da80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMTI5OQ==", "url": "https://github.com/apache/iotdb/pull/841#discussion_r384331299", "bodyText": "The return value should be of boolean type. I will modify the it. Thanks for your suggestion.", "author": "Ring-k", "createdAt": "2020-02-26T08:18:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjMwMA=="}], "type": "inlineReview", "revised_code": {"commit": "328face4f49d44ab579cb50c90a4b46033a467ea", "chunk": "diff --git a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\nindex 70a15365f0..e8b0eb8003 100644\n--- a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\n+++ b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/util/ExpressionOptimizer.java\n\n@@ -131,7 +131,7 @@ public class ExpressionOptimizer {\n       SingleSeriesExpression leaf = (SingleSeriesExpression) rightExpression;\n       updateFilterWithOr(leftExpression, leaf.getFilter(), leaf.getSeriesPath());\n       return leftExpression;\n-    } else if (rightExpression.getType() == ExpressionType.SERIES) {\n+    } else if (rightExpression.getType() == ExpressionType.OR) {\n       IExpression leftChild = ((BinaryExpression) rightExpression).getLeft();\n       IExpression rightChild = ((BinaryExpression) rightExpression).getRight();\n       leftExpression = mergeSecondTreeToFirstTree(leftExpression, leftChild);\n"}}, {"oid": "328face4f49d44ab579cb50c90a4b46033a467ea", "url": "https://github.com/apache/iotdb/commit/328face4f49d44ab579cb50c90a4b46033a467ea", "message": "change if else statement", "committedDate": "2020-02-26T08:39:14Z", "type": "commit"}, {"oid": "e2580566a41f16bfe9fa57cffadf65facb5f11bc", "url": "https://github.com/apache/iotdb/commit/e2580566a41f16bfe9fa57cffadf65facb5f11bc", "message": "update test", "committedDate": "2020-02-26T08:41:04Z", "type": "commit"}]}