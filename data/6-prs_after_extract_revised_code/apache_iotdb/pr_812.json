{"pr_number": 812, "pr_title": "[IOTDB-464] Vectorize the IReaderByTimestamp", "pr_createdAt": "2020-02-15T08:30:40Z", "pr_url": "https://github.com/apache/iotdb/pull/812", "timeline": [{"oid": "1a3cadb6e182eed5ea8a8dbf2807fe81621a4cef", "url": "https://github.com/apache/iotdb/commit/1a3cadb6e182eed5ea8a8dbf2807fe81621a4cef", "message": "[IOTDB-464] Vectorize the IReaderByTimestamp", "committedDate": "2020-02-15T08:28:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTgwNzU3OQ==", "url": "https://github.com/apache/iotdb/pull/812#discussion_r379807579", "bodyText": "try Time In Filter", "author": "qiaojialin", "createdAt": "2020-02-15T08:41:41Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java", "diffHunk": "@@ -41,14 +42,23 @@ public SeriesReaderByTimestamp(Path seriesPath, TSDataType dataType, QueryContex\n   }\n \n   @Override\n-  public Object getValueInTimestamp(long timestamp) throws IOException {\n-    seriesReader.setTimeFilter(timestamp);\n-    if ((batchData == null || batchData.getTimeByIndex(batchData.length() - 1) < timestamp)\n-        && !hasNext(timestamp)) {\n-      return null;\n-    }\n+  public Object[] getValuesInTimestamps(long[] timestamps) throws IOException {\n+    Object[] result = new Object[timestamps.length];\n \n-    return batchData.getValueInTimestamp(timestamp);\n+    for (int i = 0; i < timestamps.length; i++) {\n+      if (timestamps[i] < currentTime) {\n+        throw new IOException(\"time must be increasing when use ReaderByTimestamp\");\n+      }\n+      currentTime = timestamps[i];\n+      seriesReader.setTimeFilter(currentTime);", "originalCommit": "1a3cadb6e182eed5ea8a8dbf2807fe81621a4cef", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}