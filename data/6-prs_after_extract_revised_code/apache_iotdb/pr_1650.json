{"pr_number": 1650, "pr_title": "[IOTDB-848] support order by time asc/desc", "pr_createdAt": "2020-08-24T11:10:58Z", "pr_url": "https://github.com/apache/iotdb/pull/1650", "timeline": [{"oid": "81fb9b681ce54a8f7df92aafb8817063846bfa39", "url": "https://github.com/apache/iotdb/commit/81fb9b681ce54a8f7df92aafb8817063846bfa39", "message": "add timeorder utils", "committedDate": "2020-08-06T09:36:58Z", "type": "commit"}, {"oid": "825620ddc65d12ebf78590190cddc432dffed931", "url": "https://github.com/apache/iotdb/commit/825620ddc65d12ebf78590190cddc432dffed931", "message": "fix asc all test error", "committedDate": "2020-08-07T09:48:16Z", "type": "commit"}, {"oid": "9706465331dd099420b75bff9beeca3d86bf84bb", "url": "https://github.com/apache/iotdb/commit/9706465331dd099420b75bff9beeca3d86bf84bb", "message": "add descBatchData and descPriorityMergeReader", "committedDate": "2020-08-13T09:33:34Z", "type": "commit"}, {"oid": "213747ba42cd225e4556bc7a242c3d781b972900", "url": "https://github.com/apache/iotdb/commit/213747ba42cd225e4556bc7a242c3d781b972900", "message": "add g4 orderByTimeClause", "committedDate": "2020-08-21T07:34:48Z", "type": "commit"}, {"oid": "d3d84ac5e3d15d7064f096d665c484b4a302ac5f", "url": "https://github.com/apache/iotdb/commit/d3d84ac5e3d15d7064f096d665c484b4a302ac5f", "message": "add g4 orderByTimeClause for querys", "committedDate": "2020-08-21T07:48:00Z", "type": "commit"}, {"oid": "b479e5cefd565e70191c93051690d600a8c21cfb", "url": "https://github.com/apache/iotdb/commit/b479e5cefd565e70191c93051690d600a8c21cfb", "message": "add 'groupByTime' order by time logic", "committedDate": "2020-08-21T17:30:00Z", "type": "commit"}, {"oid": "1b0564479efe4002f9e178dc6baf1aaca2105a9b", "url": "https://github.com/apache/iotdb/commit/1b0564479efe4002f9e178dc6baf1aaca2105a9b", "message": "fix nullpointer bug", "committedDate": "2020-08-24T02:16:26Z", "type": "commit"}, {"oid": "1991bb1def1a9aaeef583dc8d1b6fc68418d50d1", "url": "https://github.com/apache/iotdb/commit/1991bb1def1a9aaeef583dc8d1b6fc68418d50d1", "message": "fix mem page bug", "committedDate": "2020-08-24T05:49:59Z", "type": "commit"}, {"oid": "b72cfefb81700cb049c9aba91ef2f538835a72ff", "url": "https://github.com/apache/iotdb/commit/b72cfefb81700cb049c9aba91ef2f538835a72ff", "message": "fix lost cached bug", "committedDate": "2020-08-24T05:56:57Z", "type": "commit"}, {"oid": "f72ac936e308cd0e935f6f54acf7f1403d340797", "url": "https://github.com/apache/iotdb/commit/f72ac936e308cd0e935f6f54acf7f1403d340797", "message": "fix value filter bug", "committedDate": "2020-08-24T08:53:27Z", "type": "commit"}, {"oid": "9080acdba9e0d7b739d54bafc70354309a20079a", "url": "https://github.com/apache/iotdb/commit/9080acdba9e0d7b739d54bafc70354309a20079a", "message": "add group by fill without value filter order by time desc", "committedDate": "2020-08-24T10:32:32Z", "type": "commit"}, {"oid": "b66dac5fe020ad4e6e963dd1457acbf69cda024e", "url": "https://github.com/apache/iotdb/commit/b66dac5fe020ad4e6e963dd1457acbf69cda024e", "message": "add header", "committedDate": "2020-08-24T11:20:13Z", "type": "commit"}, {"oid": "665dd18fa5f2038cf579e1425ca090cdae04f001", "url": "https://github.com/apache/iotdb/commit/665dd18fa5f2038cf579e1425ca090cdae04f001", "message": "fix reader bug", "committedDate": "2020-08-26T02:31:02Z", "type": "commit"}, {"oid": "498af5a0eabd276d4d4d6b5a4e3468120ba41faf", "url": "https://github.com/apache/iotdb/commit/498af5a0eabd276d4d4d6b5a4e3468120ba41faf", "message": "add new test", "committedDate": "2020-08-26T06:05:05Z", "type": "commit"}, {"oid": "582989565a69fdfd46e3b35d9b26a8d920053285", "url": "https://github.com/apache/iotdb/commit/582989565a69fdfd46e3b35d9b26a8d920053285", "message": "add group by fill impl", "committedDate": "2020-08-27T02:10:31Z", "type": "commit"}, {"oid": "dd597212c1683cdc702f45f03bacf0df437309d7", "url": "https://github.com/apache/iotdb/commit/dd597212c1683cdc702f45f03bacf0df437309d7", "message": "fix just last value calc", "committedDate": "2020-08-27T03:13:42Z", "type": "commit"}, {"oid": "dc2158e6dffd4189bddee026795e5a26b0123389", "url": "https://github.com/apache/iotdb/commit/dc2158e6dffd4189bddee026795e5a26b0123389", "message": "fix bug", "committedDate": "2020-08-27T03:18:16Z", "type": "commit"}, {"oid": "6e24b1fe1d9c72d6fa3f630b5752453e22bae6db", "url": "https://github.com/apache/iotdb/commit/6e24b1fe1d9c72d6fa3f630b5752453e22bae6db", "message": "add asf header", "committedDate": "2020-08-27T04:54:27Z", "type": "commit"}, {"oid": "dfd1ecaada9d7512b148e84b7377b5e102225ebc", "url": "https://github.com/apache/iotdb/commit/dfd1ecaada9d7512b148e84b7377b5e102225ebc", "message": "add last* order", "committedDate": "2020-08-27T05:58:53Z", "type": "commit"}, {"oid": "cf334f2f36f93582e01d297fa5b60ca02c222b93", "url": "https://github.com/apache/iotdb/commit/cf334f2f36f93582e01d297fa5b60ca02c222b93", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into reverse_reader", "committedDate": "2020-08-27T07:33:13Z", "type": "commit"}, {"oid": "08d86a07900751cd5f7d3888c557868e4f66c749", "url": "https://github.com/apache/iotdb/commit/08d86a07900751cd5f7d3888c557868e4f66c749", "message": "fix raw desc align bug", "committedDate": "2020-08-27T09:22:44Z", "type": "commit"}, {"oid": "a1422b67f78efe0d338e3a32ec741ecf4c3420d5", "url": "https://github.com/apache/iotdb/commit/a1422b67f78efe0d338e3a32ec741ecf4c3420d5", "message": "fix bug", "committedDate": "2020-08-27T10:36:24Z", "type": "commit"}, {"oid": "70055fd7fb053017e28be459d1a114b4ae8f6fcd", "url": "https://github.com/apache/iotdb/commit/70055fd7fb053017e28be459d1a114b4ae8f6fcd", "message": "fix groupByWithValueFilterFillTest bug", "committedDate": "2020-08-27T10:42:46Z", "type": "commit"}, {"oid": "457db09c5606b581eff270c5c9ce673a65377d4b", "url": "https://github.com/apache/iotdb/commit/457db09c5606b581eff270c5c9ce673a65377d4b", "message": "fix last query bug", "committedDate": "2020-08-28T02:22:44Z", "type": "commit"}, {"oid": "88291b21ea22c4b263f78e22c4951261b2bad75d", "url": "https://github.com/apache/iotdb/commit/88291b21ea22c4b263f78e22c4951261b2bad75d", "message": "revert SessionExample", "committedDate": "2020-08-28T02:34:15Z", "type": "commit"}, {"oid": "3580a38fe158947ba097b3fb33c0504294e8a852", "url": "https://github.com/apache/iotdb/commit/3580a38fe158947ba097b3fb33c0504294e8a852", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into reverse_reader\n\n\u0001 Conflicts:\n\u0001\tantlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithoutValueFilter.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByFillDataSet.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/executor/AggregationExecutor.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/executor/LastQueryExecutor.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/executor/RawDataQueryExecutor.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReader.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java\n\u0001\tserver/src/main/java/org/apache/iotdb/db/query/timegenerator/ServerTimeGenerator.java\n\u0001\tserver/src/test/java/org/apache/iotdb/db/integration/IoTDBSimpleQueryIT.java\n\u0001\tserver/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestampTest.java\n\u0001\tserver/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesReaderTest.java", "committedDate": "2020-09-01T02:53:14Z", "type": "commit"}, {"oid": "7a067cbe43bde05c62126103e4254be3a813f565", "url": "https://github.com/apache/iotdb/commit/7a067cbe43bde05c62126103e4254be3a813f565", "message": "merge master", "committedDate": "2020-09-01T03:02:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTY2MA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480889660", "bodyText": "It could be omitted, keeping default value.", "author": "Alima777", "createdAt": "2020-09-01T06:52:31Z", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1045,6 +1046,18 @@ public void enterOffsetClause(OffsetClauseContext ctx) {\n     }\n   }\n \n+  @Override\n+  public void enterOrderByTimeClause(OrderByTimeClauseContext ctx) {\n+    super.enterOrderByTimeClause(ctx);\n+    queryOp.setColumn(ctx.TIME().getText());\n+    if (ctx.ASC() == null) {\n+      queryOp.setAscending(false);\n+    }\n+    if (ctx.DESC() == null) {", "originalCommit": "7a067cbe43bde05c62126103e4254be3a813f565", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxMDQ5OQ==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484010499", "bodyText": "fixed", "author": "qiaojialin", "createdAt": "2020-09-06T02:13:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTY2MA=="}], "type": "inlineReview", "revised_code": {"commit": "a607f646f2653328a73d41c6ce89c8d81399c499", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java b/server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java\nindex b5333cddb..cd40eeb7e 100644\n--- a/server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java\n+++ b/server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java\n\n@@ -1050,12 +1058,9 @@ public class LogicalGenerator extends SqlBaseBaseListener {\n   public void enterOrderByTimeClause(OrderByTimeClauseContext ctx) {\n     super.enterOrderByTimeClause(ctx);\n     queryOp.setColumn(ctx.TIME().getText());\n-    if (ctx.ASC() == null) {\n+    if (ctx.DESC() != null) {\n       queryOp.setAscending(false);\n     }\n-    if (ctx.DESC() == null) {\n-      queryOp.setAscending(true);\n-    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwMTU1MQ==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480901551", "bodyText": "Add some comments?", "author": "Alima777", "createdAt": "2020-09-01T07:08:08Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java", "diffHunk": "@@ -43,10 +43,11 @@\n    * @param dataTypes     time series data type\n    * @param timeGenerator EngineTimeGenerator object\n    * @param readers       readers in List(IReaderByTimeStamp) structure\n+   * @param ascending", "originalCommit": "7a067cbe43bde05c62126103e4254be3a813f565", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1OTE5NA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484159194", "bodyText": "thx,  already added", "author": "liutaohua", "createdAt": "2020-09-07T02:56:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwMTU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "be6cb4a4b13e4f2854694f86d9c91307b0a58936", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java\nindex ae68edd6c..8d0dd6fc1 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java\n\n@@ -43,10 +43,12 @@ public class RawQueryDataSetWithValueFilter extends QueryDataSet {\n    * @param dataTypes     time series data type\n    * @param timeGenerator EngineTimeGenerator object\n    * @param readers       readers in List(IReaderByTimeStamp) structure\n-   * @param ascending\n+   * @param ascending     specifies how the data should be sorted,'True' means read in ascending\n+   *                      time order, and 'false' means read in descending time order\n    */\n   public RawQueryDataSetWithValueFilter(List<PartialPath> paths, List<TSDataType> dataTypes,\n-      TimeGenerator timeGenerator, List<IReaderByTimestamp> readers, List<Boolean> cached,boolean ascending) {\n+      TimeGenerator timeGenerator, List<IReaderByTimestamp> readers, List<Boolean> cached,\n+      boolean ascending) {\n     super(new ArrayList<>(paths), dataTypes, ascending);\n     this.timeGenerator = timeGenerator;\n     this.seriesReaderByTimestampList = readers;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MjMwMg==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r482062302", "bodyText": "What about an abstract method here?", "author": "Alima777", "createdAt": "2020-09-02T13:20:03Z", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java", "diffHunk": "@@ -107,4 +107,8 @@ protected abstract IBatchReader generateNewBatchReader(SingleSeriesExpression ex\n   public boolean hasOrNode() {\n     return hasOrNode;\n   }\n+\n+  protected boolean isAscending() {\n+    return true;", "originalCommit": "7a067cbe43bde05c62126103e4254be3a813f565", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0ODU1Mg==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r483948552", "bodyText": "Both are fine~", "author": "qiaojialin", "createdAt": "2020-09-05T12:54:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MjMwMg=="}], "type": "inlineReview", "revised_code": {"commit": "ef6a22f867753d021405a6a08a220a409face0a0", "chunk": "diff --git a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java\nindex 0fcc565dd..49681eba9 100644\n--- a/tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java\n+++ b/tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java\n\n@@ -108,7 +108,5 @@ public abstract class TimeGenerator {\n     return hasOrNode;\n   }\n \n-  protected boolean isAscending() {\n-    return true;\n-  }\n+  protected abstract boolean isAscending();\n }\n"}}, {"oid": "ef6a22f867753d021405a6a08a220a409face0a0", "url": "https://github.com/apache/iotdb/commit/ef6a22f867753d021405a6a08a220a409face0a0", "message": "add doc and extract some class", "committedDate": "2020-09-05T13:37:53Z", "type": "commit"}, {"oid": "226a006b157033a3fbe075ba7a145405c90d42e9", "url": "https://github.com/apache/iotdb/commit/226a006b157033a3fbe075ba7a145405c90d42e9", "message": "clear the GroupByEngineDataSet", "committedDate": "2020-09-05T14:04:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3MjU2OQ==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r483472569", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param minBound       calculate points whose time > bound\n          \n          \n            \n               * @param minBound       calculate points whose time >= bound", "author": "qiaojialin", "createdAt": "2020-09-04T08:35:04Z", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -78,10 +78,11 @@ public abstract void updateResultFromStatistics(Statistics statistics)\n    * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n    *\n    * @param dataInThisPage the data in Page\n-   * @param bound          calculate points whose time < bound\n+   * @param minBound       calculate points whose time > bound", "originalCommit": "7a067cbe43bde05c62126103e4254be3a813f565", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a607f646f2653328a73d41c6ce89c8d81399c499", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java b/server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java\nindex ed798e56e..856c4aba8 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java\n\n@@ -78,7 +78,7 @@ public abstract class AggregateResult {\n    * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n    *\n    * @param dataInThisPage the data in Page\n-   * @param minBound       calculate points whose time > bound\n+   * @param minBound       calculate points whose time >= bound\n    * @param maxBound       calculate points whose time < bound\n    */\n   public abstract void updateResultFromPageData(BatchData dataInThisPage, long minBound,\n"}}, {"oid": "2dd255e8b123691192ee8097aaf470148c187a59", "url": "https://github.com/apache/iotdb/commit/2dd255e8b123691192ee8097aaf470148c187a59", "message": "resolve conflict", "committedDate": "2020-09-06T02:11:42Z", "type": "commit"}, {"oid": "a607f646f2653328a73d41c6ce89c8d81399c499", "url": "https://github.com/apache/iotdb/commit/a607f646f2653328a73d41c6ce89c8d81399c499", "message": "clear group by time query", "committedDate": "2020-09-06T04:53:05Z", "type": "commit"}, {"oid": "db78a4bbe2ce2600f7bc74d4f7ae8ab35ac7dce4", "url": "https://github.com/apache/iotdb/commit/db78a4bbe2ce2600f7bc74d4f7ae8ab35ac7dce4", "message": "fix sonar", "committedDate": "2020-09-06T05:04:02Z", "type": "commit"}, {"oid": "8978d7019cfab9731a3aaf9ba986c8800247a12a", "url": "https://github.com/apache/iotdb/commit/8978d7019cfab9731a3aaf9ba986c8800247a12a", "message": "fix sonar again", "committedDate": "2020-09-06T11:03:14Z", "type": "commit"}, {"oid": "12f28231a8a745ef78e6d9425b3e7bdd2842e5ce", "url": "https://github.com/apache/iotdb/commit/12f28231a8a745ef78e6d9425b3e7bdd2842e5ce", "message": "add bracket for && || &&", "committedDate": "2020-09-06T11:32:17Z", "type": "commit"}, {"oid": "be6cb4a4b13e4f2854694f86d9c91307b0a58936", "url": "https://github.com/apache/iotdb/commit/be6cb4a4b13e4f2854694f86d9c91307b0a58936", "message": "fix g4", "committedDate": "2020-09-07T02:53:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1NzY3Ng==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484157676", "bodyText": "Why here use GroupByTimePlan to replace the former ones? GroupByTimePlan contains some useless info that will waste some memory space.", "author": "JackieTien97", "createdAt": "2020-09-07T02:48:38Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java", "diffHunk": "@@ -31,18 +32,13 @@\n public abstract class GroupByEngineDataSet extends QueryDataSet {\n \n   protected long queryId;\n-  protected long interval;\n-  protected long slidingStep;\n-  // total query [startTime, endTime)\n-  protected long startTime;\n-  protected long endTime;\n+  protected GroupByTimePlan plan;", "originalCommit": "12f28231a8a745ef78e6d9425b3e7bdd2842e5ce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMDQ0NA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486030444", "bodyText": "u're right. It's been rolled back", "author": "liutaohua", "createdAt": "2020-09-10T02:47:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1NzY3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9d379f4ec3429550cd2e355c2f24b5595a46d5c4", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java\nindex d9bfc7bb8..b4f1e9cc9 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java\n\n@@ -32,13 +32,20 @@ import java.io.IOException;\n public abstract class GroupByEngineDataSet extends QueryDataSet {\n \n   protected long queryId;\n-  protected GroupByTimePlan plan;\n+  protected long interval;\n+  protected long slidingStep;\n+  // total query [startTime, endTime)\n+  protected long startTime;\n+  protected long endTime;\n \n   // current interval [curStartTime, curEndTime)\n   protected long curStartTime;\n   protected long curEndTime;\n   protected boolean hasCachedTimeInterval;\n \n+  protected boolean leftCRightO;\n+\n+  protected boolean ascending;\n \n   public GroupByEngineDataSet() {\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTc1MQ==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484165751", "bodyText": "timestamp is the a cached timestamp for all sensors in this query, it may not be the current one which is needed to fill value.", "author": "JackieTien97", "createdAt": "2020-09-07T03:30:28Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -160,6 +171,24 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return constructRowRecord(aggregateResultList);\n   }\n \n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    long[] timestampArray = new long[1];\n+    AggregateResult aggrResultByName = AggregateResultFactory.getAggrResultByName(\n+        groupByTimePlan.getDeduplicatedAggregations().get(i),\n+        groupByTimePlan.getDeduplicatedDataTypes().get(i));\n+\n+    int timeArrayLength = 0;\n+    if (hasCachedTimestamp) {\n+      timestampArray[timeArrayLength++] = timestamp;\n+\n+      aggrResultByName\n+          .updateResultUsingTimestamps(timestampArray, timeArrayLength, allDataReaderList.get(i));\n+      return new Pair<>(timestamp, aggrResultByName.getResult());\n+    }\n+    return null;", "originalCommit": "be6cb4a4b13e4f2854694f86d9c91307b0a58936", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMDgxMA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486030810", "bodyText": "thx,fixed", "author": "liutaohua", "createdAt": "2020-09-10T02:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9d379f4ec3429550cd2e355c2f24b5595a46d5c4", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\nindex 69a439558..d34dd7ea6 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n\n@@ -173,18 +174,42 @@ public class GroupByWithValueFilterDataSet extends GroupByEngineDataSet {\n \n   @Override\n   public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    if (!timestampGenerator.hasNext() && cachedTimestamps.isEmpty()) {\n+      return null;\n+    }\n+\n     long[] timestampArray = new long[1];\n     AggregateResult aggrResultByName = AggregateResultFactory.getAggrResultByName(\n         groupByTimePlan.getDeduplicatedAggregations().get(i),\n         groupByTimePlan.getDeduplicatedDataTypes().get(i));\n \n-    int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n-      timestampArray[timeArrayLength++] = timestamp;\n-\n+    long tmpStartTime = curStartTime - slidingStep;\n+    while (tmpStartTime >= startTime\n+        && (timestampGenerator.hasNext() || !cachedTimestamps.isEmpty())) {\n+      long timestamp = Long.MIN_VALUE;\n+      if (timestampGenerator.hasNext()) {\n+        cachedTimestamps.add(timestampGenerator.next());\n+      }\n+      if (!cachedTimestamps.isEmpty()) {\n+        timestamp = cachedTimestamps.remove();\n+      }\n+      if (timestamp >= tmpStartTime) {\n+        timestampArray[0] = timestamp;\n+      } else {\n+        do {\n+          tmpStartTime -= slidingStep;\n+          if (timestamp >= tmpStartTime) {\n+            timestampArray[0] = timestamp;\n+            break;\n+          }\n+        } while (tmpStartTime >= startTime);\n+      }\n       aggrResultByName\n-          .updateResultUsingTimestamps(timestampArray, timeArrayLength, allDataReaderList.get(i));\n-      return new Pair<>(timestamp, aggrResultByName.getResult());\n+          .updateResultUsingTimestamps(timestampArray, 1, allDataReaderList.get(i));\n+\n+      if (aggrResultByName.getResult() != null) {\n+        return new Pair<>(tmpStartTime, aggrResultByName.getResult());\n+      }\n     }\n     return null;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NjEzOA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484166138", "bodyText": "You don't need to consider the ascending case, the peekNextNotNullValue method will only be used in desc case.", "author": "JackieTien97", "createdAt": "2020-09-07T03:32:40Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java", "diffHunk": "@@ -140,9 +142,37 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return record;\n   }\n \n-  protected GroupByExecutor getGroupByExecutor(PartialPath path, Set<String> allSensors, TSDataType dataType,\n-                                               QueryContext context, Filter timeFilter, TsFileFilter fileFilter)\n-          throws StorageEngineException, QueryProcessException {\n-    return new LocalGroupByExecutor(path, allSensors, dataType, context, timeFilter, fileFilter);\n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    Pair<Long, Object> result = null;\n+    long nextStartTime = curStartTime;\n+    long nextEndTime;\n+    do {\n+      if (ascending) {\n+        nextStartTime += plan.getSlidingStep();\n+        if (nextStartTime < plan.getEndTime()) {\n+          nextEndTime = Math.min(nextStartTime + plan.getInterval(), plan.getEndTime());\n+        } else {\n+          return null;\n+        }\n+      } else {", "originalCommit": "be6cb4a4b13e4f2854694f86d9c91307b0a58936", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMTA2NQ==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486031065", "bodyText": "the  code has been removed", "author": "liutaohua", "createdAt": "2020-09-10T02:49:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NjEzOA=="}], "type": "inlineReview", "revised_code": {"commit": "9d379f4ec3429550cd2e355c2f24b5595a46d5c4", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java\nindex e58fc53d2..caf230d81 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java\n\n@@ -148,20 +148,11 @@ public class GroupByWithoutValueFilterDataSet extends GroupByEngineDataSet {\n     long nextStartTime = curStartTime;\n     long nextEndTime;\n     do {\n-      if (ascending) {\n-        nextStartTime += plan.getSlidingStep();\n-        if (nextStartTime < plan.getEndTime()) {\n-          nextEndTime = Math.min(nextStartTime + plan.getInterval(), plan.getEndTime());\n-        } else {\n-          return null;\n-        }\n+      nextStartTime -= slidingStep;\n+      if (nextStartTime >= startTime) {\n+        nextEndTime = Math.min(nextStartTime + interval, endTime);\n       } else {\n-        nextStartTime -= plan.getSlidingStep();\n-        if (nextStartTime >= plan.getStartTime()) {\n-          nextEndTime = Math.min(nextStartTime + plan.getInterval(), plan.getEndTime());\n-        } else {\n-          return null;\n-        }\n+        return null;\n       }\n       result = pathExecutors.get(path).peekNextNotNullValue(i, nextStartTime, nextEndTime);\n     } while (result == null);\n"}}, {"oid": "404fb78f35ecd70b0415f3afd4374a1821e683eb", "url": "https://github.com/apache/iotdb/commit/404fb78f35ecd70b0415f3afd4374a1821e683eb", "message": "add docs and fix g4 bug", "committedDate": "2020-09-07T09:30:32Z", "type": "commit"}, {"oid": "9d379f4ec3429550cd2e355c2f24b5595a46d5c4", "url": "https://github.com/apache/iotdb/commit/9d379f4ec3429550cd2e355c2f24b5595a46d5c4", "message": "fix mergeReader bug and rollback groupbyPlan", "committedDate": "2020-09-09T11:30:45Z", "type": "commit"}, {"oid": "b9243a218af17f8a6e798bb972aafe8d0bdbb640", "url": "https://github.com/apache/iotdb/commit/b9243a218af17f8a6e798bb972aafe8d0bdbb640", "message": "add bifunction 4 getValueInTimestamp and fix peekNextNotNullValue bug", "committedDate": "2020-09-10T02:46:06Z", "type": "commit"}, {"oid": "0e007a7a007653ac64926adc6ec342ee8cf26e7d", "url": "https://github.com/apache/iotdb/commit/0e007a7a007653ac64926adc6ec342ee8cf26e7d", "message": "fix typo and add en dml doc", "committedDate": "2020-09-10T03:10:35Z", "type": "commit"}, {"oid": "ce8370740965e969d233fa7ba032743e6df8bdd1", "url": "https://github.com/apache/iotdb/commit/ce8370740965e969d233fa7ba032743e6df8bdd1", "message": "fix code smell", "committedDate": "2020-09-10T05:57:37Z", "type": "commit"}, {"oid": "a98a9e6034b65a35bd62fa7f0b50b818eab293fb", "url": "https://github.com/apache/iotdb/commit/a98a9e6034b65a35bd62fa7f0b50b818eab293fb", "message": "fix code smell", "committedDate": "2020-09-10T06:20:12Z", "type": "commit"}, {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9", "url": "https://github.com/apache/iotdb/commit/7c565ea8a53c4950cca0bcd6022bfd18a708fdd9", "message": "extract fillNextCache method for asc/desc", "committedDate": "2020-09-10T06:56:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0OTM3Nw==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486749377", "bodyText": "It seems that this timestamp is useless, we don't need to put it back to cachedTimestamps.", "author": "JackieTien97", "createdAt": "2020-09-11T03:17:35Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;\n         }\n       } else {\n+        cachedTimestamps.addFirst(timestamp);", "originalCommit": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4OTg0Ng==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486789846", "bodyText": "i think we need put it back , for example , the interval is [0,10) , [10,20), [20,30), if the first cache is 30 ,and the end time is 10, so that need put back", "author": "liutaohua", "createdAt": "2020-09-11T05:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0OTM3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5f168cba851b6583be009cc2fe9cc524f750930b", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\nindex e8bb5ae01..a59db7e9c 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n\n@@ -127,7 +127,8 @@ public class GroupByWithValueFilterDataSet extends GroupByEngineDataSet {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    while (!cachedTimestamps.isEmpty()) {\n+\n+    if (!cachedTimestamps.isEmpty()) {\n       long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n         if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1MTc3NA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486751774", "bodyText": "It seems there will be IndexOutOfArrayException here.\nWhat if cachedTimestamps's size is larger than timeStampFetchSize. And also, you call the constructTimeArrayForOneCal method in the following and fetch another timeStampFetchSize timestamp, i think it should be changed in case of desc.", "author": "JackieTien97", "createdAt": "2020-09-11T03:27:28Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;", "originalCommit": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyOTI5Ng==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486829296", "bodyText": "fixed", "author": "liutaohua", "createdAt": "2020-09-11T07:34:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1MTc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5f168cba851b6583be009cc2fe9cc524f750930b", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\nindex e8bb5ae01..a59db7e9c 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java\n\n@@ -127,7 +127,8 @@ public class GroupByWithValueFilterDataSet extends GroupByEngineDataSet {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    while (!cachedTimestamps.isEmpty()) {\n+\n+    if (!cachedTimestamps.isEmpty()) {\n       long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n         if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n"}}, {"oid": "773302b37b40933e2c3c08890f8346c8c08e5352", "url": "https://github.com/apache/iotdb/commit/773302b37b40933e2c3c08890f8346c8c08e5352", "message": "Update docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md\n\nCo-authored-by: Jialin Qiao <qjl16@mails.tsinghua.edu.cn>", "committedDate": "2020-09-11T03:42:07Z", "type": "commit"}, {"oid": "ffccf744542cdfe5ddb3132393d60e5191027f5f", "url": "https://github.com/apache/iotdb/commit/ffccf744542cdfe5ddb3132393d60e5191027f5f", "message": "Update docs/UserGuide/Operation Manual/DML Data Manipulation Language.md\n\nCo-authored-by: Jialin Qiao <qjl16@mails.tsinghua.edu.cn>", "committedDate": "2020-09-11T03:42:22Z", "type": "commit"}, {"oid": "5f168cba851b6583be009cc2fe9cc524f750930b", "url": "https://github.com/apache/iotdb/commit/5f168cba851b6583be009cc2fe9cc524f750930b", "message": "fix IndexOutOfArrayException", "committedDate": "2020-09-11T06:46:55Z", "type": "commit"}, {"oid": "05148dc1fa817f2874e50c8f4e703f4fcdc84ae2", "url": "https://github.com/apache/iotdb/commit/05148dc1fa817f2874e50c8f4e703f4fcdc84ae2", "message": "Merge branch 'reverse_reader' of https://github.com/apache/incubator-iotdb into reverse_reader", "committedDate": "2020-09-11T06:48:47Z", "type": "commit"}, {"oid": "5de311bfa165ce1c2d239c40ccdd5d9dc819ec16", "url": "https://github.com/apache/iotdb/commit/5de311bfa165ce1c2d239c40ccdd5d9dc819ec16", "message": "fix doc", "committedDate": "2020-09-11T06:59:56Z", "type": "commit"}, {"oid": "034ab6f0b1476c7f0848c57957262d61ffc6a1ab", "url": "https://github.com/apache/iotdb/commit/034ab6f0b1476c7f0848c57957262d61ffc6a1ab", "message": "ignore sonar code smell", "committedDate": "2020-09-11T07:41:03Z", "type": "commit"}, {"oid": "9f7f7a03a30446dd884a5d705ce972241dc417ec", "url": "https://github.com/apache/iotdb/commit/9f7f7a03a30446dd884a5d705ce972241dc417ec", "message": "Merge branches 'master' and 'reverse_reader' of https://github.com/apache/incubator-iotdb into reverse_reader", "committedDate": "2020-09-11T08:24:23Z", "type": "commit"}, {"oid": "633824f9343b87e8ab5691e010dbd54e055dc1bf", "url": "https://github.com/apache/iotdb/commit/633824f9343b87e8ab5691e010dbd54e055dc1bf", "message": "fix bugs", "committedDate": "2020-09-11T14:42:02Z", "type": "commit"}, {"oid": "e6a8831c517e43d88066eb1f05640408689e796d", "url": "https://github.com/apache/iotdb/commit/e6a8831c517e43d88066eb1f05640408689e796d", "message": "Merge remote-tracking branch 'origin/master' into reverse_reader", "committedDate": "2020-09-11T15:14:59Z", "type": "commit"}, {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5", "url": "https://github.com/apache/iotdb/commit/7ad076a8f4201a7508b817702a2273b4a3d9d8e5", "message": "optimize MemReader and fix multi Chunk bug", "committedDate": "2020-09-15T05:32:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxMzU0Mw==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488613543", "bodyText": "remove this weige", "author": "qiaojialin", "createdAt": "2020-09-15T12:07:29Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -118,7 +104,8 @@ public void close() {\n   @Override\n   public List<IPageReader> loadPageReaderList() throws IOException {\n     // we treat one ReadOnlyMemChunk as one Page\n-    return Collections.singletonList(\n-        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));\n+//    return Collections.singletonList(\n+//        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "originalCommit": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODAwMw==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128003", "bodyText": "fixed", "author": "liutaohua", "createdAt": "2020-09-16T02:44:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxMzU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c6a56fcd307a3b98d299fe9bda57e9bae38344bb", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java b/server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java\nindex 390f411e9..12369d20c 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java\n\n@@ -103,9 +104,6 @@ public class MemChunkReader implements IChunkReader, IPointReader {\n \n   @Override\n   public List<IPageReader> loadPageReaderList() throws IOException {\n-    // we treat one ReadOnlyMemChunk as one Page\n-//    return Collections.singletonList(\n-//        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));\n     return this.pageReaderList;\n   }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxNjA0Nw==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488616047", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return seriesReader.isEmpty()&& isEmpty(batchData);\n          \n          \n            \n                return seriesReader.isEmpty() && isEmpty(batchData);", "author": "qiaojialin", "createdAt": "2020-09-15T12:11:49Z", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java", "diffHunk": "@@ -31,31 +31,37 @@\n \n public class SeriesReaderByTimestamp implements IReaderByTimestamp {\n \n-  private SeriesReader seriesReader;\n-  private BatchData batchData;\n+  protected SeriesReader seriesReader;\n+  protected BatchData batchData;\n \n-  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,  TSDataType dataType, QueryContext context,\n-                                 QueryDataSource dataSource, TsFileFilter fileFilter) {\n-    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n-        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter);\n+  public SeriesReaderByTimestamp() {\n   }\n \n-  public SeriesReaderByTimestamp(SeriesReader seriesReader) {\n-    this.seriesReader = seriesReader;\n+  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,\n+      TSDataType dataType, QueryContext context, QueryDataSource dataSource,\n+      TsFileFilter fileFilter) {\n+    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n+        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter, true);\n   }\n \n+\n   @Override\n   public Object getValueInTimestamp(long timestamp) throws IOException {\n     seriesReader.setTimeFilter(timestamp);\n-    if ((batchData == null || batchData.getTimeByIndex(batchData.length() - 1) < timestamp)\n+    if ((batchData == null || (batchData.getTimeByIndex(batchData.length() - 1) < timestamp))\n         && !hasNext(timestamp)) {\n       return null;\n     }\n \n     return batchData.getValueInTimestamp(timestamp);\n   }\n \n-  private boolean hasNext(long timestamp) throws IOException {\n+  @Override\n+  public boolean readerIsEmpty() throws IOException {\n+    return seriesReader.isEmpty()&& isEmpty(batchData);", "originalCommit": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODA2Ng==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128066", "bodyText": "fixed", "author": "liutaohua", "createdAt": "2020-09-16T02:44:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxNjA0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c6a56fcd307a3b98d299fe9bda57e9bae38344bb", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java b/server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java\nindex ec456f61f..1b637cd92 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java\n\n@@ -58,7 +58,7 @@ public class SeriesReaderByTimestamp implements IReaderByTimestamp {\n \n   @Override\n   public boolean readerIsEmpty() throws IOException {\n-    return seriesReader.isEmpty()&& isEmpty(batchData);\n+    return seriesReader.isEmpty() && isEmpty(batchData);\n   }\n \n   protected boolean hasNext(long timestamp) throws IOException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0MTc4MA==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488641780", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {\n          \n          \n            \n                      batchData.currentTime() >= curEndTime : batchData.currentTime() < curStartTime))) {", "author": "qiaojialin", "createdAt": "2020-09-15T12:53:33Z", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java", "diffHunk": "@@ -231,18 +302,19 @@ private boolean readAndCalcFromPage(long curStartTime, long curEndTime)\n         continue;\n       }\n       // stop calc and cached current batchData\n-      if (batchData.currentTime() >= curEndTime) {\n+      if (ascending && batchData.currentTime() >= curEndTime) {\n         preCachedData = batchData;\n         return true;\n       }\n \n-      // reset the last position to zero\n-      lastReadCurArrayIndex = 0;\n-      lastReadCurListIndex = 0;\n+      // reset the last position to current Index\n+      lastReadCurArrayIndex = batchData.getReadCurArrayIndex();\n+      lastReadCurListIndex = batchData.getReadCurListIndex();\n       calcFromBatch(batchData, curStartTime, curEndTime);\n \n       // judge whether the calculation finished\n-      if (isEndCalc() || (batchData.hasCurrent() && batchData.currentTime() >= curEndTime)) {\n+      if (isEndCalc() || (batchData.hasCurrent() && (ascending ?\n+          batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {", "originalCommit": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODExNg==", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128116", "bodyText": "fixed", "author": "liutaohua", "createdAt": "2020-09-16T02:44:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0MTc4MA=="}], "type": "inlineReview", "revised_code": {"commit": "c6a56fcd307a3b98d299fe9bda57e9bae38344bb", "chunk": "diff --git a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java\nindex 7d49ee580..f26763f37 100644\n--- a/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java\n+++ b/server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java\n\n@@ -314,7 +314,7 @@ public class LocalGroupByExecutor implements GroupByExecutor {\n \n       // judge whether the calculation finished\n       if (isEndCalc() || (batchData.hasCurrent() && (ascending ?\n-          batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {\n+          batchData.currentTime() >= curEndTime : batchData.currentTime() < curStartTime))) {\n         return true;\n       }\n     }\n"}}, {"oid": "ca02435c5ea41ead36757108c4a28a4f0ba4f24e", "url": "https://github.com/apache/iotdb/commit/ca02435c5ea41ead36757108c4a28a4f0ba4f24e", "message": "Merge branches 'master' and 'reverse_reader' of https://github.com/apache/incubator-iotdb into reverse_reader", "committedDate": "2020-09-16T01:51:21Z", "type": "commit"}, {"oid": "c6a56fcd307a3b98d299fe9bda57e9bae38344bb", "url": "https://github.com/apache/iotdb/commit/c6a56fcd307a3b98d299fe9bda57e9bae38344bb", "message": "fix bug", "committedDate": "2020-09-16T02:37:20Z", "type": "commit"}, {"oid": "f57fac519fa0bd4fc084757a35dc14a7d00d658f", "url": "https://github.com/apache/iotdb/commit/f57fac519fa0bd4fc084757a35dc14a7d00d658f", "message": "Merge remote-tracking branch 'origin/reverse_reader' into reverse_reader", "committedDate": "2020-09-16T03:30:11Z", "type": "commit"}, {"oid": "c39e1a4121c02846e4d02615b04ca4e0ec1b0440", "url": "https://github.com/apache/iotdb/commit/c39e1a4121c02846e4d02615b04ca4e0ec1b0440", "message": "Merge remote-tracking branch 'origin/master' into reverse_reader", "committedDate": "2020-09-16T03:30:18Z", "type": "commit"}, {"oid": "d1aa72addf0bc3a1cb8e590249c3fafd0af80cf3", "url": "https://github.com/apache/iotdb/commit/d1aa72addf0bc3a1cb8e590249c3fafd0af80cf3", "message": "merge master", "committedDate": "2020-09-16T03:31:12Z", "type": "commit"}, {"oid": "ee6883e1cb058b611e3e8840a58ad65f06e32314", "url": "https://github.com/apache/iotdb/commit/ee6883e1cb058b611e3e8840a58ad65f06e32314", "message": "remove unused import", "committedDate": "2020-09-16T03:55:24Z", "type": "commit"}]}