{"pr_number": 3798, "pr_title": "Custom message if can't recognize key in .dockstore.yml", "pr_createdAt": "2020-09-08T23:59:57Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3798", "timeline": [{"oid": "f55c2eda2acbeff46a60bf4b07c8702e4e948b76", "url": "https://github.com/dockstore/dockstore/commit/f55c2eda2acbeff46a60bf4b07c8702e4e948b76", "message": "if a key is unrecognized, create custom msg", "committedDate": "2020-09-08T23:59:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1ODc3Nw==", "url": "https://github.com/dockstore/dockstore/pull/3798#discussion_r485858777", "bodyText": "Could use a test, these string parse indexes feel breakable if the underlying library changes", "author": "denis-yuen", "createdAt": "2020-09-09T19:25:56Z", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java", "diffHunk": "@@ -177,7 +177,15 @@ private static DockstoreYaml12 readDockstoreYaml12(final String content) throws\n             final Yaml yaml = new Yaml(constructor);\n             return yaml.load(content);\n         } catch (Exception e) {\n-            final String msg = ERROR_READING_DOCKSTORE_YML + e.getMessage();\n+            String msg = ERROR_READING_DOCKSTORE_YML;\n+            String errorMsg = e.getMessage();\n+            if (errorMsg.startsWith(\"Cannot create property=\")) {\n+                int startIndex = errorMsg.indexOf(\"=\") + 1;", "originalCommit": "f55c2eda2acbeff46a60bf4b07c8702e4e948b76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg4ODQ5Mw==", "url": "https://github.com/dockstore/dockstore/pull/3798#discussion_r485888493", "bodyText": "Agreed. This class has a fair amount of unit tests, which are easier and less cumbersome to deal with than integration tests (not dissing integration tests by any means). But with unit tests, you can easily and quickly feed in a variety of test cases. I suggest adding tests in there.", "author": "coverbeck", "createdAt": "2020-09-09T20:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1ODc3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ae2ad267a81c88fb6aa5492063ab1dd8e8b1fc6b", "chunk": "diff --git a/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java b/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\nindex 56b079d9f..2db981c65 100644\n--- a/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\n+++ b/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\n\n@@ -179,10 +179,16 @@ public final class DockstoreYamlHelper {\n         } catch (Exception e) {\n             String msg = ERROR_READING_DOCKSTORE_YML;\n             String errorMsg = e.getMessage();\n-            if (errorMsg.startsWith(\"Cannot create property=\")) {\n-                int startIndex = errorMsg.indexOf(\"=\") + 1;\n-                int endIndex = errorMsg.indexOf(\" for JavaBean\");\n-                msg += \" Unrecognized property \\\"\" + errorMsg.substring(startIndex, endIndex) + \"\\\".\";\n+            final String cannotCreateProperty = \"Unable to find property \";\n+            if (errorMsg.contains(cannotCreateProperty)) {\n+                String truncatedError = errorMsg.substring(errorMsg.indexOf(cannotCreateProperty) + cannotCreateProperty.length());\n+                Pattern pattern = Pattern.compile(\"'(.+)'\");\n+                Matcher matcher = pattern.matcher(truncatedError);\n+                if (matcher.find()) {\n+                    msg += \" Unrecognized property \\\"\" + matcher.group(1) + \"\\\"\";\n+                } else {\n+                    msg += e.getMessage();\n+                }\n             } else {\n                 msg += e.getMessage();\n             }\n"}}, {"oid": "ae2ad267a81c88fb6aa5492063ab1dd8e8b1fc6b", "url": "https://github.com/dockstore/dockstore/commit/ae2ad267a81c88fb6aa5492063ab1dd8e8b1fc6b", "message": "add unit tests", "committedDate": "2020-09-09T23:54:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3NjQ1OQ==", "url": "https://github.com/dockstore/dockstore/pull/3798#discussion_r486476459", "bodyText": "Pattern.compile is relatively expensive. If the pattern isn't changing, which it's not, you should just compile it once. Best link I could find off-hand. Realistically, it's more of an issue in a loop; one call here isn't going to make a noticeable difference to the end user. Still, little things add up and it's easy enough to fix.\nSince you're using a regex here, suggest you just use one regex for everything, rather than a combo of contains and regex, e.g., something like (not tested, probably has syntax errors, and may not match your target string): Pattern.compile(\"Unable to find property '(.+)'\");\n\nI also encourage the use of final when applicable. And I thought Codacy at one point flagged those, but I guess it's not any more.", "author": "coverbeck", "createdAt": "2020-09-10T16:27:21Z", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java", "diffHunk": "@@ -177,7 +177,21 @@ private static DockstoreYaml12 readDockstoreYaml12(final String content) throws\n             final Yaml yaml = new Yaml(constructor);\n             return yaml.load(content);\n         } catch (Exception e) {\n-            final String msg = ERROR_READING_DOCKSTORE_YML + e.getMessage();\n+            String msg = ERROR_READING_DOCKSTORE_YML;\n+            String errorMsg = e.getMessage();\n+            final String cannotCreateProperty = \"Unable to find property \";\n+            if (errorMsg.contains(cannotCreateProperty)) {\n+                String truncatedError = errorMsg.substring(errorMsg.indexOf(cannotCreateProperty) + cannotCreateProperty.length());\n+                Pattern pattern = Pattern.compile(\"'(.+)'\");", "originalCommit": "ae2ad267a81c88fb6aa5492063ab1dd8e8b1fc6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8e2b2d411d7ec69dd9b31fb3a43cd7c7ac234da1", "chunk": "diff --git a/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java b/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\nindex 2db981c65..bd0a719d4 100644\n--- a/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\n+++ b/dockstore-common/src/main/java/io/dockstore/common/yaml/DockstoreYamlHelper.java\n\n@@ -177,23 +178,17 @@ public final class DockstoreYamlHelper {\n             final Yaml yaml = new Yaml(constructor);\n             return yaml.load(content);\n         } catch (Exception e) {\n-            String msg = ERROR_READING_DOCKSTORE_YML;\n-            String errorMsg = e.getMessage();\n-            final String cannotCreateProperty = \"Unable to find property \";\n-            if (errorMsg.contains(cannotCreateProperty)) {\n-                String truncatedError = errorMsg.substring(errorMsg.indexOf(cannotCreateProperty) + cannotCreateProperty.length());\n-                Pattern pattern = Pattern.compile(\"'(.+)'\");\n-                Matcher matcher = pattern.matcher(truncatedError);\n-                if (matcher.find()) {\n-                    msg += \" Unrecognized property \\\"\" + matcher.group(1) + \"\\\"\";\n-                } else {\n-                    msg += e.getMessage();\n-                }\n+            final String exceptionMsg = e.getMessage();\n+            String errorMsg = ERROR_READING_DOCKSTORE_YML;\n+            final Matcher matcher = pattern.matcher(exceptionMsg);\n+\n+            if (matcher.find()) {\n+                errorMsg += \" Unrecognized property \\\"\" + matcher.group(1) + \"\\\"\";\n             } else {\n-                msg += e.getMessage();\n+                errorMsg += exceptionMsg;\n             }\n-            LOG.error(msg, e);\n-            throw new DockstoreYamlException(msg);\n+            LOG.error(errorMsg, e);\n+            throw new DockstoreYamlException(errorMsg);\n         }\n     }\n \n"}}, {"oid": "8e2b2d411d7ec69dd9b31fb3a43cd7c7ac234da1", "url": "https://github.com/dockstore/dockstore/commit/8e2b2d411d7ec69dd9b31fb3a43cd7c7ac234da1", "message": "refactor", "committedDate": "2020-09-10T17:25:35Z", "type": "commit"}, {"oid": "83df8dbbaf683a488fa5565073b0fd1d56695f87", "url": "https://github.com/dockstore/dockstore/commit/83df8dbbaf683a488fa5565073b0fd1d56695f87", "message": "check style", "committedDate": "2020-09-10T17:47:06Z", "type": "commit"}]}