{"pr_number": 3273, "pr_title": "Possibly final quay.io swagger cleanup for now", "pr_createdAt": "2020-02-26T23:48:33Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3273", "timeline": [{"oid": "2810d69b8646c7ae599ac660675a4ca57070fd99", "url": "https://github.com/dockstore/dockstore/commit/2810d69b8646c7ae599ac660675a4ca57070fd99", "message": "WIP", "committedDate": "2020-02-26T23:47:57Z", "type": "commit"}, {"oid": "1708b8c79d149dcc654e80bd8ca477650ddcf1f7", "url": "https://github.com/dockstore/dockstore/commit/1708b8c79d149dcc654e80bd8ca477650ddcf1f7", "message": "Fix return for listrepos", "committedDate": "2020-02-27T16:16:26Z", "type": "commit"}, {"oid": "2eab695c8baf54cf189977b5d57a137d2ee794cb", "url": "https://github.com/dockstore/dockstore/commit/2eab695c8baf54cf189977b5d57a137d2ee794cb", "message": "Noticed optimization mismatch with old code", "committedDate": "2020-02-27T18:37:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0OTAzOQ==", "url": "https://github.com/dockstore/dockstore/pull/3273#discussion_r385349039", "bodyText": "Lots of BuildApi api = new BuildApi(apiClient); , put in constructor instead?", "author": "garyluu", "createdAt": "2020-02-27T20:18:16Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -212,129 +202,99 @@ private void insertQuayLastModifiedIntoLastBuilt(QuayTag quayTag, Tag tag) {\n     @Override\n     public void updateAPIToolsWithBuildInformation(List<Tool> apiTools) {\n         // Initialize useful classes\n-        final Gson gson = new Gson();\n         final SimpleDateFormat formatter = new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss Z\");\n \n-        for (Tool tool : apiTools) {\n-            // Set path information (not sure why we have to do this here)\n-            final String repo = tool.getNamespace() + '/' + tool.getName();\n-\n-            LOG.info(\"Grabbing tool information for \" + tool.getPath());\n-\n-            // Initialize giturl\n-            String gitUrl = null;\n-\n-            // Make call for build information from quay (only need most recent)\n-            // TODO: clean-up this with swagger api calls and/or swagger.yaml cleanup\n-            String urlBuilds = QUAY_URL + \"repository/\" + repo + \"/build/?limit=1\";\n-            Optional<String> asStringBuilds = ResourceUtilities.asString(urlBuilds, quayToken.getContent(), client);\n-\n-            // Check result of API call\n-            if (asStringBuilds.isPresent()) {\n-                String json = asStringBuilds.get();\n-\n-                // Store the json file into a map for parsing\n-                Map<String, List> buildMap = new HashMap<>();\n-                buildMap = (Map<String, List>)gson.fromJson(json, buildMap.getClass());\n-\n-                // Grab build information\n-                List builds = buildMap.get(\"builds\");\n-\n-                if (builds.size() > 0) {\n+        // Grab build information for given repository\n+        BuildApi api = new BuildApi(apiClient);", "originalCommit": "2eab695c8baf54cf189977b5d57a137d2ee794cb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71cbf48002d98ace4a2437e43dd9fdbeed64aa1f", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\nindex b2bb3a902..7c3da4c2d 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\n\n@@ -205,7 +208,6 @@ public class QuayImageRegistry extends AbstractImageRegistry {\n         final SimpleDateFormat formatter = new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss Z\");\n \n         // Grab build information for given repository\n-        BuildApi api = new BuildApi(apiClient);\n         try {\n             for (Tool tool : apiTools) {\n                 // Set path information (not sure why we have to do this here)\n"}}, {"oid": "71cbf48002d98ace4a2437e43dd9fdbeed64aa1f", "url": "https://github.com/dockstore/dockstore/commit/71cbf48002d98ace4a2437e43dd9fdbeed64aa1f", "message": "PR feedback", "committedDate": "2020-02-28T15:56:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgzNDAyNw==", "url": "https://github.com/dockstore/dockstore/pull/3273#discussion_r385834027", "bodyText": "Are these errors not unexpected? If not, suggest LOG.error instead of warn", "author": "coverbeck", "createdAt": "2020-02-28T17:46:56Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -181,28 +177,25 @@ private void insertQuayLastModifiedIntoLastBuilt(QuayTag quayTag, Tag tag) {\n         List<Tool> toolList = new ArrayList<>(0);\n \n         for (String namespace : namespaces) {\n-            String url = QUAY_URL + \"repository?namespace=\" + namespace;\n-            Optional<String> asString = ResourceUtilities.asString(url, quayToken.getContent(), client);\n-            //            LOG.info(quayToken.getUsername() + \" : RESOURCE CALL: {}\", url);\n-\n-            if (asString.isPresent()) {\n-                RepoList repos;\n-                try {\n+            try {\n+                final List<QuayRepo> quayRepos = repositoryApi.listRepos(null, null, null, null, null, null, namespace).getRepositories();\n+                List<Tool> tools = Lists.newArrayList();\n+                for (QuayRepo repo : quayRepos) {\n+                    Tool tool = new Tool();\n                     // interesting, this relies upon our container object having the same fields\n                     // as quay.io's repositories\n \n                     // PLEASE NOTE : is_public is from quay.  It has NO connection to our is_published!\n-                    repos = objectMapper.readValue(asString.get(), RepoList.class);\n-\n-                    List<Tool> tools = repos.getRepositories();\n-                    // tag all of these with where they came from\n-                    tools.forEach(container -> container.setRegistry(Registry.QUAY_IO.toString()));\n-                    // not quite correct, they could be mixed but how can we tell from quay?\n-                    tools.forEach(container -> container.setMode(ToolMode.AUTO_DETECT_QUAY_TAGS_AUTOMATED_BUILDS));\n-                    toolList.addAll(tools);\n-                } catch (IOException ex) {\n-                    LOG.warn(quayToken.getUsername() + \" Exception: {}\", ex);\n+                    BeanUtils.copyProperties(tool, repo);\n+                    tools.add(tool);\n                 }\n+                // tag all of these with where they came from\n+                tools.forEach(container -> container.setRegistry(Registry.QUAY_IO.toString()));\n+                // not quite correct, they could be mixed but how can we tell from quay?\n+                tools.forEach(container -> container.setMode(ToolMode.AUTO_DETECT_QUAY_TAGS_AUTOMATED_BUILDS));\n+                toolList.addAll(tools);\n+            } catch (ApiException | IllegalAccessException | InvocationTargetException ex) {\n+                LOG.warn(quayToken.getUsername() + \" Exception: {}\", ex);", "originalCommit": "71cbf48002d98ace4a2437e43dd9fdbeed64aa1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "c0befa18116ddabd423d1fc5fc9317b2571c5b51", "url": "https://github.com/dockstore/dockstore/commit/c0befa18116ddabd423d1fc5fc9317b2571c5b51", "message": "Update QuayImageRegistry.java", "committedDate": "2020-02-28T19:25:59Z", "type": "commit"}, {"oid": "f17da10404fb1ea263ef22846dcb8ca69b32e7e3", "url": "https://github.com/dockstore/dockstore/commit/f17da10404fb1ea263ef22846dcb8ca69b32e7e3", "message": "Merge branch 'develop' into feature/even_more_quay_cleanup", "committedDate": "2020-02-28T19:36:59Z", "type": "commit"}]}