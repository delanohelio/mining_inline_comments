{"pr_number": 3145, "pr_title": "Enable aliases to show up for organizations and workflow versions in swagger output", "pr_createdAt": "2020-01-14T23:09:40Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3145", "timeline": [{"oid": "1507627c02ae271e53157e1ba9f0dea890f5fb8d", "url": "https://github.com/dockstore/dockstore/commit/1507627c02ae271e53157e1ba9f0dea890f5fb8d", "message": "enable aliases to show up for organizations and workflow versions", "committedDate": "2020-01-14T22:55:46Z", "type": "commit"}, {"oid": "cdf864ba14ac781f71fcc859fecb544c63c9c1c7", "url": "https://github.com/dockstore/dockstore/commit/cdf864ba14ac781f71fcc859fecb544c63c9c1c7", "message": "add tests for organization and collection aliases to be returned", "committedDate": "2020-01-15T21:23:29Z", "type": "commit"}, {"oid": "4362173dce34558bfe9aa567526c9202bae32f7a", "url": "https://github.com/dockstore/dockstore/commit/4362173dce34558bfe9aa567526c9202bae32f7a", "message": "add tests for workflow version alias in return from API call", "committedDate": "2020-01-16T00:06:48Z", "type": "commit"}, {"oid": "f42c99ff8bd1838b70af0778c47dae49a87fd0a4", "url": "https://github.com/dockstore/dockstore/commit/f42c99ff8bd1838b70af0778c47dae49a87fd0a4", "message": "fix test for returned aliases", "committedDate": "2020-01-16T18:42:27Z", "type": "commit"}, {"oid": "484676682aa202a3bd364d9c48fcf28c7e098638", "url": "https://github.com/dockstore/dockstore/commit/484676682aa202a3bd364d9c48fcf28c7e098638", "message": "only fetch workflow version aliases if specified in include parameter", "committedDate": "2020-01-16T22:05:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcxNDczNw==", "url": "https://github.com/dockstore/dockstore/pull/3145#discussion_r367714737", "bodyText": "Do we want the include parameter here? Not many orgs, so maybe performance isn't an issue here.", "author": "coverbeck", "createdAt": "2020-01-17T00:17:31Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -93,7 +93,9 @@ public OrganizationResource(SessionFactory sessionFactory) {\n     @ApiOperation(value = \"List all available organizations.\", notes = \"NO Authentication\", responseContainer = \"List\", response = Organization.class)\n     @Operation(operationId = \"getApprovedOrganizations\", summary = \"List all available organizations.\", description = \"List all organizations that have been approved by a curator or admin, sorted by number of stars.\")\n     public List<Organization> getApprovedOrganizations() {\n-        return organizationDAO.findApprovedSortedByStar();\n+        List<Organization> organizations = organizationDAO.findApprovedSortedByStar();", "originalCommit": "484676682aa202a3bd364d9c48fcf28c7e098638", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwMTk3NQ==", "url": "https://github.com/dockstore/dockstore/pull/3145#discussion_r368001975", "bodyText": "I will leave it as is and create a new ticket if that feature is needed...", "author": "wshands", "createdAt": "2020-01-17T15:45:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcxNDczNw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "63a44b482acbdeeaa45113d60e1881c3be056810", "url": "https://github.com/dockstore/dockstore/commit/63a44b482acbdeeaa45113d60e1881c3be056810", "message": "add aliases parameter to comment about include", "committedDate": "2020-01-17T15:41:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyMTIyNg==", "url": "https://github.com/dockstore/dockstore/pull/3145#discussion_r368021226", "bodyText": "Use a constant string for \"aliases\" and use it both here and in the (now badly named) initializeValidations method.\nThat way, someone won't accidentally rename one but not the other.\nShould also do the same for validations while in the neighbourhood.", "author": "denis-yuen", "createdAt": "2020-01-17T16:23:00Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1036,7 +1036,7 @@ public Entry getPublishedEntryByPath(@ApiParam(value = \"repository path\", requir\n     @UnitOfWork(readOnly = true)\n     @Path(\"/path/workflow/{repository}/published\")\n     @ApiOperation(nickname = \"getPublishedWorkflowByPath\", value = \"Get a published workflow by path\", notes = \"Does not require workflow name.\", response = Workflow.class)\n-    public Workflow getPublishedWorkflowByPath(@ApiParam(value = \"repository path\", required = true) @PathParam(\"repository\") String path, @ApiParam(value = \"Comma-delimited list of fields to include: validations\") @QueryParam(\"include\") String include,\n+    public Workflow getPublishedWorkflowByPath(@ApiParam(value = \"repository path\", required = true) @PathParam(\"repository\") String path, @ApiParam(value = \"Comma-delimited list of fields to include: validations, aliases\") @QueryParam(\"include\") String include,", "originalCommit": "63a44b482acbdeeaa45113d60e1881c3be056810", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzNTA1Mg==", "url": "https://github.com/dockstore/dockstore/pull/3145#discussion_r368035052", "bodyText": "Done", "author": "wshands", "createdAt": "2020-01-17T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAyMTIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "c0b9e6675e664364cdb5bd5e6afaa4fbcba3040f", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java\nindex 437abe1f4..120e78b61 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java\n\n@@ -1036,7 +1038,7 @@ public class WorkflowResource extends AbstractWorkflowResource<Workflow>\n     @UnitOfWork(readOnly = true)\n     @Path(\"/path/workflow/{repository}/published\")\n     @ApiOperation(nickname = \"getPublishedWorkflowByPath\", value = \"Get a published workflow by path\", notes = \"Does not require workflow name.\", response = Workflow.class)\n-    public Workflow getPublishedWorkflowByPath(@ApiParam(value = \"repository path\", required = true) @PathParam(\"repository\") String path, @ApiParam(value = \"Comma-delimited list of fields to include: validations, aliases\") @QueryParam(\"include\") String include,\n+    public Workflow getPublishedWorkflowByPath(@ApiParam(value = \"repository path\", required = true) @PathParam(\"repository\") String path, @ApiParam(value = \"Comma-delimited list of fields to include: \" + VALIDATIONS + \", \" + ALIASES) @QueryParam(\"include\") String include,\n         @ApiParam(value = \"services\", defaultValue = \"false\") @DefaultValue(\"false\") @QueryParam(\"services\") boolean services, @Context ContainerRequestContext containerContext) {\n         final Class<? extends Workflow> targetClass = services ? Service.class : BioWorkflow.class;\n         Workflow workflow = workflowDAO.findByPath(path, true, targetClass).orElse(null);\n"}}, {"oid": "c0b9e6675e664364cdb5bd5e6afaa4fbcba3040f", "url": "https://github.com/dockstore/dockstore/commit/c0b9e6675e664364cdb5bd5e6afaa4fbcba3040f", "message": "make string constants for include strings", "committedDate": "2020-01-17T16:49:45Z", "type": "commit"}]}