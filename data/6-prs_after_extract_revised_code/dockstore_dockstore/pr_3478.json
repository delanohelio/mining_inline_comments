{"pr_number": 3478, "pr_title": "Lazy load event entities", "pr_createdAt": "2020-05-19T15:21:52Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3478", "timeline": [{"oid": "cdc785c7c0fa3906b24c62b9359f12611f64d7f5", "url": "https://github.com/dockstore/dockstore/commit/cdc785c7c0fa3906b24c62b9359f12611f64d7f5", "message": "Lazy load event entities", "committedDate": "2020-05-19T15:12:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5MTExMQ==", "url": "https://github.com/dockstore/dockstore/pull/3478#discussion_r427491111", "bodyText": "Do each of these create a separate db connection?", "author": "Ldcabansay", "createdAt": "2020-05-19T17:53:31Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EventResource.java", "diffHunk": "@@ -84,18 +85,36 @@ public EventResource(EventDAO eventDAO, UserDAO userDAO) {\n         switch (eventSearchType) {\n         case STARRED_ENTRIES:\n             Set<Long> entryIDs = userWithSession.getStarredEntries().stream().map(Entry::getId).collect(Collectors.toSet());\n-            return this.eventDAO.findEventsByEntryIDs(entryIDs, offset, limit);\n+            List<Event> eventsByEntryIDs = this.eventDAO.findEventsByEntryIDs(entryIDs, offset, limit);\n+            eagerLoadEventEntries(eventsByEntryIDs);\n+            return eventsByEntryIDs;\n         case STARRED_ORGANIZATION:\n             Set<Long> organizationIDs = userWithSession.getStarredOrganizations().stream().map(Organization::getId).collect(Collectors.toSet());\n-            return this.eventDAO.findAllByOrganizationIds(organizationIDs, offset, limit);\n+            List<Event> allByOrganizationIds = this.eventDAO.findAllByOrganizationIds(organizationIDs, offset, limit);\n+            eagerLoadEventEntries(allByOrganizationIds);\n+            return allByOrganizationIds;\n         case ALL_STARRED:\n             Set<Long> organizationIDs2 = userWithSession.getStarredOrganizations().stream().map(Organization::getId).collect(Collectors.toSet());\n             Set<Long> entryIDs2 = userWithSession.getStarredEntries().stream().map(Entry::getId).collect(Collectors.toSet());\n-            return this.eventDAO.findAllByOrganizationIdsOrEntryIds(organizationIDs2, entryIDs2, offset, limit);\n+            List<Event> allByOrganizationIdsOrEntryIds = this.eventDAO\n+                    .findAllByOrganizationIdsOrEntryIds(organizationIDs2, entryIDs2, offset, limit);\n+            eagerLoadEventEntries(allByOrganizationIdsOrEntryIds);\n+            return allByOrganizationIdsOrEntryIds;\n         default:\n             return Collections.emptyList();\n         }\n     }\n+\n+    private void eagerLoadEventEntries(List<Event> events) {\n+        events.forEach(event -> {", "originalCommit": "cdc785c7c0fa3906b24c62b9359f12611f64d7f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5NDE5OQ==", "url": "https://github.com/dockstore/dockstore/pull/3478#discussion_r427494199", "bodyText": "No, same amount of connections acquired and released without it", "author": "garyluu", "createdAt": "2020-05-19T17:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5MTExMQ=="}], "type": "inlineReview", "revised_code": null}]}