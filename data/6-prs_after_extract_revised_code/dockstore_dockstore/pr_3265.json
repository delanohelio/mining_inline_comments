{"pr_number": 3265, "pr_title": "More quay cleanup, this time tools and tags", "pr_createdAt": "2020-02-25T20:52:34Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3265", "timeline": [{"oid": "c6916a9d8ef4c67e2c953e7d7d7d8a8f55d22e09", "url": "https://github.com/dockstore/dockstore/commit/c6916a9d8ef4c67e2c953e7d7d7d8a8f55d22e09", "message": "More quay cleanup, this time tools and tags", "committedDate": "2020-02-25T20:42:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0ODI3OQ==", "url": "https://github.com/dockstore/dockstore/pull/3265#discussion_r384648279", "bodyText": "Either way, but as a recent convert to the style, I would return an Optional.", "author": "coverbeck", "createdAt": "2020-02-26T17:28:59Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -355,27 +349,14 @@ private void updateTagsWithBuildInformation(String repository, List<Tag> tags, T\n     }\n \n     /**\n-     * Get the map of the given Quay tool\n-     * Todo: this should be implemented with the Quay API, but they currently don't have a return model for this call\n+     * Get the given Quay tool\n      *\n      * @param tool\n      * @return\n      */\n-    public Map<String, Object> getQuayInfo(final Tool tool) {\n-        final String repo = tool.getNamespace() + '/' + tool.getName();\n-        final String repoUrl = QUAY_URL + \"repository/\" + repo;\n-        final Optional<String> asStringBuilds = ResourceUtilities.asString(repoUrl, quayToken.getContent(), client);\n-\n-        if (asStringBuilds.isPresent()) {\n-            final String json = asStringBuilds.get();\n-\n-            Gson gson = new Gson();\n-            Map<String, Object> map = new HashMap<>();\n-            map = (Map<String, Object>)gson.fromJson(json, map.getClass());\n-            return map;\n-\n-        }\n-        return null;\n+    public QuayRepo getQuayInfo(final Tool tool) {", "originalCommit": "c6916a9d8ef4c67e2c953e7d7d7d8a8f55d22e09", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczNTQ1MA==", "url": "https://github.com/dockstore/dockstore/pull/3265#discussion_r384735450", "bodyText": "Yeah, was being lazy but you're probably right", "author": "denis-yuen", "createdAt": "2020-02-26T20:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0ODI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8b6672f143defa3cec769f6e79969336a94b575", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\nindex 4e5c022b8..d8809767c 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java\n\n@@ -348,17 +348,6 @@ public class QuayImageRegistry extends AbstractImageRegistry {\n \n     }\n \n-    /**\n-     * Get the given Quay tool\n-     *\n-     * @param tool\n-     * @return\n-     */\n-    public QuayRepo getQuayInfo(final Tool tool) {\n-        final Optional<QuayRepo> toolFromQuay = this.getToolFromQuay(tool);\n-        return toolFromQuay.orElse(null);\n-    }\n-\n     /**\n      * @param reference a raw reference from git like \"refs/heads/master\"\n      * @return the last segment like master\n"}}, {"oid": "c8b6672f143defa3cec769f6e79969336a94b575", "url": "https://github.com/dockstore/dockstore/commit/c8b6672f143defa3cec769f6e79969336a94b575", "message": "PR feedback", "committedDate": "2020-02-26T20:13:57Z", "type": "commit"}, {"oid": "15cf5b0ae41356c9edf96f90551d66eca5038f48", "url": "https://github.com/dockstore/dockstore/commit/15cf5b0ae41356c9edf96f90551d66eca5038f48", "message": "Codacy suggestions", "committedDate": "2020-02-26T20:38:05Z", "type": "commit"}]}