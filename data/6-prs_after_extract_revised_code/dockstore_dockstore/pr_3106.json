{"pr_number": 3106, "pr_title": "Feature/organisation open api", "pr_createdAt": "2020-01-06T15:50:17Z", "pr_url": "https://github.com/dockstore/dockstore/pull/3106", "timeline": [{"oid": "cd2354a58bbb6f7dbefc6bdce02ca1c1bd6cd932", "url": "https://github.com/dockstore/dockstore/commit/cd2354a58bbb6f7dbefc6bdce02ca1c1bd6cd932", "message": "added openapi3 annotations for organization endpoints", "committedDate": "2020-01-03T19:18:20Z", "type": "commit"}, {"oid": "73fdf3c1519525eed99e80ce24ed2af12fa48230", "url": "https://github.com/dockstore/dockstore/commit/73fdf3c1519525eed99e80ce24ed2af12fa48230", "message": "update collection resource to openapi3", "committedDate": "2020-01-03T19:56:44Z", "type": "commit"}, {"oid": "74c55885bf2490726c5383c175ebc4e379651f29", "url": "https://github.com/dockstore/dockstore/commit/74c55885bf2490726c5383c175ebc4e379651f29", "message": "update swagger and openapi", "committedDate": "2020-01-03T20:01:10Z", "type": "commit"}, {"oid": "d437c055bb007a2ad9c862484dd20b3e7ad024d8", "url": "https://github.com/dockstore/dockstore/commit/d437c055bb007a2ad9c862484dd20b3e7ad024d8", "message": "fix failing test", "committedDate": "2020-01-06T14:38:53Z", "type": "commit"}, {"oid": "8a39802e7549b513dc17c0db4129aaf606aaf05f", "url": "https://github.com/dockstore/dockstore/commit/8a39802e7549b513dc17c0db4129aaf606aaf05f", "message": "Merge branch 'develop' into feature/organisation-open-api", "committedDate": "2020-01-06T14:45:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxMzc3NA==", "url": "https://github.com/dockstore/dockstore/pull/3106#discussion_r363413774", "bodyText": "Our tokens are not JWT. Is there another option for bearer format?", "author": "coverbeck", "createdAt": "2020-01-06T18:12:57Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java", "diffHunk": "@@ -55,6 +63,8 @@\n @Path(\"/organizations\")\n @Api(\"/organizations\")\n @Produces(MediaType.APPLICATION_JSON)\n+@Tag(name = \"organizations\", description = \"Operations on Dockstore organizations.\")\n+@SecuritySchemes({ @SecurityScheme(type = SecuritySchemeType.HTTP, name = \"bearer\", scheme = \"bearer\", bearerFormat = \"JWT\") })", "originalCommit": "8a39802e7549b513dc17c0db4129aaf606aaf05f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMTEyNQ==", "url": "https://github.com/dockstore/dockstore/pull/3106#discussion_r363431125", "bodyText": "I based the JWT thing off of the existing operation in the Swagger annotations. Looks like it is arbitrary. I'll just change it to BEARER as seen in the Constants.java file.", "author": "agduncan94", "createdAt": "2020-01-06T18:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxMzc3NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMTI5OA==", "url": "https://github.com/dockstore/dockstore/pull/3106#discussion_r363431298", "bodyText": "Actually it is optional, I'll remove it.", "author": "agduncan94", "createdAt": "2020-01-06T18:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxMzc3NA=="}], "type": "inlineReview", "revised_code": {"commit": "99525d3bf3bda6d1dfd410db75bbc1315414d557", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\nindex c9c133363..4317d168e 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\n\n@@ -64,7 +64,7 @@ import static io.dockstore.webservice.Constants.JWT_SECURITY_DEFINITION_NAME;\n @Api(\"/organizations\")\n @Produces(MediaType.APPLICATION_JSON)\n @Tag(name = \"organizations\", description = \"Operations on Dockstore organizations.\")\n-@SecuritySchemes({ @SecurityScheme(type = SecuritySchemeType.HTTP, name = \"bearer\", scheme = \"bearer\", bearerFormat = \"JWT\") })\n+@SecuritySchemes({ @SecurityScheme(type = SecuritySchemeType.HTTP, name = \"bearer\", scheme = \"bearer\") })\n public class CollectionResource implements AuthenticatedResourceInterface, AliasableResourceInterface<Collection> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(OrganizationResource.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQxNDMwMw==", "url": "https://github.com/dockstore/dockstore/pull/3106#discussion_r363414303", "bodyText": "Would not capitalize \"C\" in \"Collection\" -- you don't elsewhere.", "author": "coverbeck", "createdAt": "2020-01-06T18:14:17Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java", "diffHunk": "@@ -85,9 +95,10 @@ public CollectionResource(SessionFactory sessionFactory) {\n     @Path(\"/collections/{collectionId}/aliases\")\n     @ApiOperation(nickname = \"addCollectionAliases\", value = \"Add aliases linked to a Collection in Dockstore.\", authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"Aliases are alphanumerical (case-insensitive and may contain internal hyphens), given in a comma-delimited list.\", response = Collection.class)\n-    public Collection addAliases(@ApiParam(hidden = true) @Auth User user,\n-        @ApiParam(value = \"Collection to modify.\", required = true) @PathParam(\"collectionId\") Long id,\n-        @ApiParam(value = \"Comma-delimited list of aliases.\", required = true) @QueryParam(\"aliases\") String aliases) {\n+    @Operation(operationId = \"addCollectionAliases\", summary = \"Add aliases linked to a Collection in Dockstore.\", description = \"Aliases are alphanumerical (case-insensitive and may contain internal hyphens), given in a comma-delimited list.\", security = @SecurityRequirement(name = \"bearer\"))", "originalCommit": "8a39802e7549b513dc17c0db4129aaf606aaf05f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99525d3bf3bda6d1dfd410db75bbc1315414d557", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\nindex c9c133363..4317d168e 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java\n\n@@ -93,9 +93,9 @@ public class CollectionResource implements AuthenticatedResourceInterface, Alias\n     @UnitOfWork\n     @Override\n     @Path(\"/collections/{collectionId}/aliases\")\n-    @ApiOperation(nickname = \"addCollectionAliases\", value = \"Add aliases linked to a Collection in Dockstore.\", authorizations = {\n+    @ApiOperation(nickname = \"addCollectionAliases\", value = \"Add aliases linked to a collection in Dockstore.\", authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"Aliases are alphanumerical (case-insensitive and may contain internal hyphens), given in a comma-delimited list.\", response = Collection.class)\n-    @Operation(operationId = \"addCollectionAliases\", summary = \"Add aliases linked to a Collection in Dockstore.\", description = \"Aliases are alphanumerical (case-insensitive and may contain internal hyphens), given in a comma-delimited list.\", security = @SecurityRequirement(name = \"bearer\"))\n+    @Operation(operationId = \"addCollectionAliases\", summary = \"Add aliases linked to a collection in Dockstore.\", description = \"Aliases are alphanumerical (case-insensitive and may contain internal hyphens), given in a comma-delimited list.\", security = @SecurityRequirement(name = \"bearer\"))\n     public Collection addAliases(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth User user,\n         @ApiParam(value = \"Collection to modify.\", required = true) @Parameter(description = \"Collection to modify.\", name = \"collectionId\", in = ParameterIn.PATH, required = true) @PathParam(\"collectionId\") Long id,\n         @ApiParam(value = \"Comma-delimited list of aliases.\", required = true) @Parameter(description = \"Comma-delimited list of aliases.\", name = \"aliases\", in = ParameterIn.QUERY, required = true) @QueryParam(\"aliases\") String aliases) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQyNDc5OA==", "url": "https://github.com/dockstore/dockstore/pull/3106#discussion_r363424798", "bodyText": "Was like this already, but other methods descriptions don't have an \"s\" after the verb -- should be \"Approve an organization\". There are actually several like this already, so maybe don't bother, or change them all...But at a quick glance it doesn't seem like we use the s form of the verb overall.", "author": "coverbeck", "createdAt": "2020-01-06T18:39:54Z", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -91,8 +103,9 @@ public OrganizationResource(SessionFactory sessionFactory) {\n     @Path(\"{organizationId}/approve/\")\n     @ApiOperation(value = \"Approves an organization.\", authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"Admin/curator only\", response = Organization.class)\n-    public Organization approveOrganization(@ApiParam(hidden = true) @Auth User user,\n-        @ApiParam(value = \"Organization ID.\", required = true) @PathParam(\"organizationId\") Long id) {\n+    @Operation(operationId = \"approveOrganization\", summary = \"Approves an organization.\", description = \"Approves the organization with the given id. Admin/curator only.\", security = @SecurityRequirement(name = \"bearer\"))", "originalCommit": "8a39802e7549b513dc17c0db4129aaf606aaf05f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "99525d3bf3bda6d1dfd410db75bbc1315414d557", "chunk": "diff --git a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java\nindex ca5547ae0..934db8cbd 100644\n--- a/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java\n+++ b/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java\n\n@@ -101,9 +101,9 @@ public class OrganizationResource implements AuthenticatedResourceInterface, Ali\n     @UnitOfWork\n     @RolesAllowed({ \"curator\", \"admin\" })\n     @Path(\"{organizationId}/approve/\")\n-    @ApiOperation(value = \"Approves an organization.\", authorizations = {\n+    @ApiOperation(value = \"Approve an organization.\", authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"Admin/curator only\", response = Organization.class)\n-    @Operation(operationId = \"approveOrganization\", summary = \"Approves an organization.\", description = \"Approves the organization with the given id. Admin/curator only.\", security = @SecurityRequirement(name = \"bearer\"))\n+    @Operation(operationId = \"approveOrganization\", summary = \"Approve an organization.\", description = \"Approve the organization with the given id. Admin/curator only.\", security = @SecurityRequirement(name = \"bearer\"))\n     public Organization approveOrganization(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User user,\n         @ApiParam(value = \"Organization ID.\", required = true) @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long id) {\n         Organization organization = organizationDAO.findById(id);\n"}}, {"oid": "99525d3bf3bda6d1dfd410db75bbc1315414d557", "url": "https://github.com/dockstore/dockstore/commit/99525d3bf3bda6d1dfd410db75bbc1315414d557", "message": "changes from PR comments", "committedDate": "2020-01-06T19:23:09Z", "type": "commit"}, {"oid": "012b687e5660c8bac9c73d1bdf9d4c3cfa7fe73d", "url": "https://github.com/dockstore/dockstore/commit/012b687e5660c8bac9c73d1bdf9d4c3cfa7fe73d", "message": "Merge branch 'develop' into feature/organisation-open-api", "committedDate": "2020-01-06T20:18:03Z", "type": "commit"}]}