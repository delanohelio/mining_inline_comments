{"pr_number": 66, "pr_title": "Enabling TLS connections from TPCC.", "pr_createdAt": "2020-12-14T22:43:47Z", "pr_url": "https://github.com/yugabyte/tpcc/pull/66", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyOTAwMg==", "url": "https://github.com/yugabyte/tpcc/pull/66#discussion_r542929002", "bodyText": "Should there be checking that workConf.getSslKey() > 0 at the same time ?", "author": "tedyu", "createdAt": "2020-12-14T23:45:49Z", "path": "src/com/oltpbenchmark/api/BenchmarkModule.java", "diffHunk": "@@ -130,6 +130,11 @@ public void createDataSource() throws SQLException {\n             props.setProperty(\"maximumPoolSize\", Integer.toString(numConnections));\n             props.setProperty(\"connectionTimeout\", Integer.toString(workConf.getHikariConnectionTimeout()));\n             props.setProperty(\"dataSource.reWriteBatchedInserts\", \"true\");\n+            if (workConf.getSslCert().length() > 0) {", "originalCommit": "02190070fe88f087610baa6ca01d23e82fcba95f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzODgyNQ==", "url": "https://github.com/yugabyte/tpcc/pull/66#discussion_r542938825", "bodyText": "Ideally they both should be set..\nWill add an assert for the same..", "author": "psudheer21", "createdAt": "2020-12-15T00:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkyOTAwMg=="}], "type": "inlineReview", "revised_code": {"commit": "d8cbb3539d5df722d3f63f60e795361fa36f80cf", "chunk": "diff --git a/src/com/oltpbenchmark/api/BenchmarkModule.java b/src/com/oltpbenchmark/api/BenchmarkModule.java\nindex 780020c..9ca1409 100644\n--- a/src/com/oltpbenchmark/api/BenchmarkModule.java\n+++ b/src/com/oltpbenchmark/api/BenchmarkModule.java\n\n@@ -131,6 +131,7 @@ public abstract class BenchmarkModule {\n             props.setProperty(\"connectionTimeout\", Integer.toString(workConf.getHikariConnectionTimeout()));\n             props.setProperty(\"dataSource.reWriteBatchedInserts\", \"true\");\n             if (workConf.getSslCert().length() > 0) {\n+              assert(workConf.getSslKey().length() > 0) : \"The SSL key is empty.\";\n               props.put(\"dataSource.sslmode\", \"require\");\n               props.put(\"dataSource.sslcert\", workConf.getSslCert());\n               props.put(\"dataSource.sslkey\", workConf.getSslKey());\n"}}, {"oid": "d8cbb3539d5df722d3f63f60e795361fa36f80cf", "url": "https://github.com/yugabyte/tpcc/commit/d8cbb3539d5df722d3f63f60e795361fa36f80cf", "message": "Enabling TLS connections from TPCC.\n\nSummary:\nEnabling TLS connections need the server key and server cert files to be\nspecified in the config file.\nThe key needs to be in the binary DER format instead of the pem\nformat which can be done as follows:\n\nopenssl pkcs8 -topk8 -inform PEM -in sever.key -outform DER -out server.key.der  -v1 PBE-MD5-DES -nocrypt\n\nReviewers:\nMihnea", "committedDate": "2020-12-15T00:05:39Z", "type": "commit"}, {"oid": "d8cbb3539d5df722d3f63f60e795361fa36f80cf", "url": "https://github.com/yugabyte/tpcc/commit/d8cbb3539d5df722d3f63f60e795361fa36f80cf", "message": "Enabling TLS connections from TPCC.\n\nSummary:\nEnabling TLS connections need the server key and server cert files to be\nspecified in the config file.\nThe key needs to be in the binary DER format instead of the pem\nformat which can be done as follows:\n\nopenssl pkcs8 -topk8 -inform PEM -in sever.key -outform DER -out server.key.der  -v1 PBE-MD5-DES -nocrypt\n\nReviewers:\nMihnea", "committedDate": "2020-12-15T00:05:39Z", "type": "forcePushed"}]}