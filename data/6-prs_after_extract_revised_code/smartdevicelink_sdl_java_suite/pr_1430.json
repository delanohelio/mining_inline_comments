{"pr_number": 1430, "pr_title": "Refactor session and protocol interfaces", "pr_createdAt": "2020-08-04T21:02:00Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430", "timeline": [{"oid": "26cfe9d0b35c63cdb4198a18358618ca4f6c4826", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/26cfe9d0b35c63cdb4198a18358618ca4f6c4826", "message": "Refactor interfaces for protocol and session", "committedDate": "2020-07-29T18:38:32Z", "type": "commit"}, {"oid": "db8cf696800437c4e3be4fa6db1e3cd262eb7427", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/db8cf696800437c4e3be4fa6db1e3cd262eb7427", "message": "Update android used classes for refactored intrfcs", "committedDate": "2020-07-29T18:39:03Z", "type": "commit"}, {"oid": "f0da95db7ea8729979e2368ac77b50ee6728e280", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f0da95db7ea8729979e2368ac77b50ee6728e280", "message": "Merge branch 'feature/sdlsession_refactor' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces", "committedDate": "2020-07-30T14:04:00Z", "type": "commit"}, {"oid": "4bb3cea2a410cfa1baa313a8c94e0aa57a181135", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4bb3cea2a410cfa1baa313a8c94e0aa57a181135", "message": "Merge branch 'feature/sdlsession_refactor' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces", "committedDate": "2020-07-30T14:34:25Z", "type": "commit"}, {"oid": "26fed3b495a889209dc476b16c3a35b7f9c9224d", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/26fed3b495a889209dc476b16c3a35b7f9c9224d", "message": "Rename actual interface file", "committedDate": "2020-07-30T19:23:16Z", "type": "commit"}, {"oid": "bdd40eee004ff6d8a116c6b4afd8fb57367a0149", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bdd40eee004ff6d8a116c6b4afd8fb57367a0149", "message": "update symlink to new file name", "committedDate": "2020-07-30T19:23:30Z", "type": "commit"}, {"oid": "af40dd62cd1bc74678fc36b223ce3d98913fd37b", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/af40dd62cd1bc74678fc36b223ce3d98913fd37b", "message": "Remove redundant caching of transport config", "committedDate": "2020-07-30T19:24:09Z", "type": "commit"}, {"oid": "283b0d3f3cc771b46c8dfb5eab488d5c874dd890", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/283b0d3f3cc771b46c8dfb5eab488d5c874dd890", "message": "Implement interface refactor into JavaSE", "committedDate": "2020-07-30T19:24:22Z", "type": "commit"}, {"oid": "a2686511abee24e174cfc8664e726b75b4df0d13", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a2686511abee24e174cfc8664e726b75b4df0d13", "message": "Fix unit tests", "committedDate": "2020-08-04T18:52:40Z", "type": "commit"}, {"oid": "1344199bb7aba3d3eb0ed6d3d79d0158bac80c86", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1344199bb7aba3d3eb0ed6d3d79d0158bac80c86", "message": "Merge branch 'develop' of https://github.com/smartdevicelink/sdl_android into feature/refactor_interfaces\n\n# Conflicts:\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/streaming/StreamPacketizer.java\n#\tjavaSE/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "committedDate": "2020-08-04T20:57:52Z", "type": "commit"}, {"oid": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "message": "Run code formatter on session classes", "committedDate": "2020-08-04T20:58:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNDIxMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465934210", "bodyText": "Let's keep this as 2017-2020", "author": "JulianKast", "createdAt": "2020-08-05T18:52:04Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2017-2020 Livio, Inc.\n+ * Copyright (c) 2018 Livio, Inc.", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java b/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\nindex 7d378a47d..f4bdb7136 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018 Livio, Inc.\n+ * Copyright (c) 2017-2020 Livio, Inc.\n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNjEzNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465936136", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @SuppressWarnings({\"WeakerAccess\", \"deprecation\"})\n          \n      \n    \n    \n  \n\nI don't see the need to suppress theses warnings anymore", "author": "JulianKast", "createdAt": "2020-08-05T18:55:33Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java", "diffHunk": "@@ -59,19 +59,18 @@\n \n import java.io.IOException;\n import java.lang.ref.WeakReference;\n-import java.util.List;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n+@SuppressWarnings({\"WeakerAccess\", \"deprecation\"})", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java b/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\nindex 7d378a47d..f4bdb7136 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/SdlConnection/SdlSession.java\n\n@@ -61,7 +61,6 @@ import java.io.IOException;\n import java.lang.ref.WeakReference;\n import java.util.concurrent.CopyOnWriteArrayList;\n \n-@SuppressWarnings({\"WeakerAccess\", \"deprecation\"})\n public class SdlSession extends BaseSdlSession {\n     private static final String TAG = \"SdlSession\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk1NjcyMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r465956720", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else{\n          \n          \n            \n                    } else {", "author": "JulianKast", "createdAt": "2020-08-05T19:34:51Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java", "diffHunk": "@@ -93,10 +93,10 @@ void initialize() {\n         }\n \n         if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.MULTIPLEX)) {\n-            this.session = new SdlSession(sdlConnectionListener, (MultiplexTransportConfig) _transportConfig);\n+            this.session = new SdlSession(sdlSessionListener, (MultiplexTransportConfig) _transportConfig);\n         } else if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.TCP)) {\n-            this.session = new SdlSession(sdlConnectionListener, (TCPTransportConfig) _transportConfig);\n-        } else {\n+            this.session = new SdlSession(sdlSessionListener, (TCPTransportConfig) _transportConfig);\n+        }else{", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java b/android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\nindex 2075f1581..5b244d344 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n\n@@ -96,7 +96,7 @@ public class LifecycleManager extends BaseLifecycleManager {\n             this.session = new SdlSession(sdlSessionListener, (MultiplexTransportConfig) _transportConfig);\n         } else if (_transportConfig != null && _transportConfig.getTransportType().equals(TransportType.TCP)) {\n             this.session = new SdlSession(sdlSessionListener, (TCPTransportConfig) _transportConfig);\n-        }else{\n+        } else {\n             DebugTool.logError(TAG,\"Unable to create session for transport type\");\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MTM0NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466541344", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }else if(SessionType.RPC.equals(msg.getSessionType())\n          \n          \n            \n                    } else if (SessionType.RPC.equals(msg.getSessionType())", "author": "JulianKast", "createdAt": "2020-08-06T16:38:11Z", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\nindex 03dafa250..c3e6158dd 100644\n--- a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n+++ b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n\n@@ -268,8 +268,8 @@ public abstract class BaseSdlSession implements ISdlProtocol, ISecurityInitializ\n     public void onProtocolMessageReceived(ProtocolMessage msg) {\n         if (msg.getSessionType().equals(SessionType.CONTROL)) {\n             processControlService(msg);\n-        }else if(SessionType.RPC.equals(msg.getSessionType())\n-                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+        } else if (SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())) {\n             RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n             this.sessionListener.onRPCMessageReceived(rpc);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjM2NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542364", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void shutdown(String info){\n          \n          \n            \n                public void shutdown(String info) {", "author": "JulianKast", "createdAt": "2020-08-06T16:39:56Z", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\nindex 03dafa250..c3e6158dd 100644\n--- a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n+++ b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n\n@@ -268,8 +268,8 @@ public abstract class BaseSdlSession implements ISdlProtocol, ISecurityInitializ\n     public void onProtocolMessageReceived(ProtocolMessage msg) {\n         if (msg.getSessionType().equals(SessionType.CONTROL)) {\n             processControlService(msg);\n-        }else if(SessionType.RPC.equals(msg.getSessionType())\n-                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+        } else if (SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())) {\n             RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n             this.sessionListener.onRPCMessageReceived(rpc);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjUxNw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542517", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams(){\n          \n          \n            \n                public VideoStreamingParameters getDesiredVideoParams() {", "author": "JulianKast", "createdAt": "2020-08-06T16:40:10Z", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\nindex 03dafa250..c3e6158dd 100644\n--- a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n+++ b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n\n@@ -268,8 +268,8 @@ public abstract class BaseSdlSession implements ISdlProtocol, ISecurityInitializ\n     public void onProtocolMessageReceived(ProtocolMessage msg) {\n         if (msg.getSessionType().equals(SessionType.CONTROL)) {\n             processControlService(msg);\n-        }else if(SessionType.RPC.equals(msg.getSessionType())\n-                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+        } else if (SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())) {\n             RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n             this.sessionListener.onRPCMessageReceived(rpc);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0MjYzMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542630", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if(desiredVideoParams == null){\n          \n          \n            \n                    if (desiredVideoParams == null ){", "author": "JulianKast", "createdAt": "2020-08-06T16:40:20Z", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\nindex 03dafa250..c3e6158dd 100644\n--- a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n+++ b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n\n@@ -268,8 +268,8 @@ public abstract class BaseSdlSession implements ISdlProtocol, ISecurityInitializ\n     public void onProtocolMessageReceived(ProtocolMessage msg) {\n         if (msg.getSessionType().equals(SessionType.CONTROL)) {\n             processControlService(msg);\n-        }else if(SessionType.RPC.equals(msg.getSessionType())\n-                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+        } else if (SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())) {\n             RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n             this.sessionListener.onRPCMessageReceived(rpc);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0Mjk1OA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466542958", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params){\n          \n          \n            \n                public void setAcceptedVideoParams(VideoStreamingParameters params) {", "author": "JulianKast", "createdAt": "2020-08-06T16:40:52Z", "path": "base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java", "diffHunk": "@@ -347,30 +261,79 @@ private VideoStreamingProtocol getAcceptedProtocol() {\n \n \n     /* ***********************************************************************************************************************************************************************\n-     * *****************************************************************  IProtocol Listener  ********************************************************************************\n+     * *****************************************************************  ISdlProtocol Listener  ********************************************************************************\n      *************************************************************************************************************************************************************************/\n \n-    public void onProtocolMessageBytesToSend(SdlPacket packet) {\n-        //DebugTool.logInfo(TAG, \"onProtocolMessageBytesToSend - \" + packet.getTransportType());\n-        sdlProtocol.sendPacket(packet);\n+    @Override\n+    public void onProtocolMessageReceived(ProtocolMessage msg) {\n+        if (msg.getSessionType().equals(SessionType.CONTROL)) {\n+            processControlService(msg);\n+        }else if(SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+            RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n+            this.sessionListener.onRPCMessageReceived(rpc);\n+        }\n+\n     }\n+    //To be implemented by child class\n+    @Override\n+    public abstract void onServiceStarted(SdlPacket packet, SessionType sessionType, int sessionID, Version version, boolean isEncrypted);\n+    @Override\n+    public abstract void onServiceEnded(SdlPacket packet, SessionType sessionType, int sessionID);\n+    @Override\n+    public abstract void onServiceError(SdlPacket packet, SessionType sessionType, int sessionID, String error);\n \n \n-    public void onProtocolSessionStartedNACKed(SessionType sessionType, byte sessionID, byte version, String correlationID, List<String> rejectedParams){\n-        onProtocolSessionNACKed(sessionType,sessionID,version,correlationID,rejectedParams);\n+    @Override\n+    public void onProtocolError(String info, Exception e) {\n+        //TODO is there anything to pass forward here?\n+        DebugTool.logError(TAG,\"on protocol error\", e);\n+    }\n+\n+    @Override\n+    public int getSessionId() {\n+        return this.sessionId;\n+    }\n+\n+    @Override\n+    public void shutdown(String info){\n+        DebugTool.logInfo(TAG, \"Shutdown - \" + info);\n+        this.sessionListener.onTransportDisconnected(info, false, this.transportConfig);\n+    }\n+\n+    @Override\n+    public void onTransportDisconnected(String info, boolean altTransportAvailable, BaseTransportConfig transportConfig) {\n+        this.sessionListener.onTransportDisconnected(info, altTransportAvailable, this.transportConfig);\n+    }\n+\n+    @Override\n+    public SdlSecurityBase getSdlSecurity() {\n+        return sdlSecurity;\n+    }\n+\n+    /**\n+     * Returns the currently set desired video streaming parameters. If there haven't been any set,\n+     * the default options will be returned and set for this instance.\n+     * @return the desired video streaming parameters\n+     */\n+    @Override\n+    public VideoStreamingParameters getDesiredVideoParams(){\n+        if(desiredVideoParams == null){\n+            desiredVideoParams = new VideoStreamingParameters();\n+        }\n+        return desiredVideoParams;\n+    }\n+\n+    @Override\n+    public void setAcceptedVideoParams(VideoStreamingParameters params){", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\nindex 03dafa250..c3e6158dd 100644\n--- a/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n+++ b/base/src/main/java/com/smartdevicelink/SdlConnection/BaseSdlSession.java\n\n@@ -268,8 +268,8 @@ public abstract class BaseSdlSession implements ISdlProtocol, ISecurityInitializ\n     public void onProtocolMessageReceived(ProtocolMessage msg) {\n         if (msg.getSessionType().equals(SessionType.CONTROL)) {\n             processControlService(msg);\n-        }else if(SessionType.RPC.equals(msg.getSessionType())\n-                || SessionType.BULK_DATA.equals(msg.getSessionType())){\n+        } else if (SessionType.RPC.equals(msg.getSessionType())\n+                || SessionType.BULK_DATA.equals(msg.getSessionType())) {\n             RPCMessage rpc = RpcConverter.extractRpc(msg, this.sdlProtocol.getProtocolVersion());\n             this.sessionListener.onRPCMessageReceived(rpc);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NDMwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466544301", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        session.startService(SessionType.RPC,true);\n          \n          \n            \n                        session.startService(SessionType.RPC, true);", "author": "JulianKast", "createdAt": "2020-08-06T16:43:04Z", "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -158,7 +158,7 @@ public void start() {\n      */\n     public void startRPCEncryption() {\n         if (session != null) {\n-            session.startService(SessionType.RPC, session.getSessionId(), true);\n+            session.startService(SessionType.RPC,true);", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java b/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\nindex f95671098..199cd7a11 100644\n--- a/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\n+++ b/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\n\n@@ -158,7 +158,7 @@ abstract class BaseLifecycleManager {\n      */\n     public void startRPCEncryption() {\n         if (session != null) {\n-            session.startService(SessionType.RPC,true);\n+            session.startService(SessionType.RPC, true);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU0NTMzMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466545330", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *************************************** ISdlConnectionListener START ************************************\n          \n          \n            \n                 *************************************** ISdlSessionListener START ************************************\n          \n      \n    \n    \n  \n\nShould this be changed to ISdlSessionListener?", "author": "JulianKast", "createdAt": "2020-08-06T16:44:46Z", "path": "base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java", "diffHunk": "@@ -858,103 +858,95 @@ private void sendRPCMessagePrivate(RPCMessage message, boolean isInternalMessage\n      *************************************** ISdlConnectionListener START ************************************", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java b/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\nindex f95671098..199cd7a11 100644\n--- a/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\n+++ b/base/src/main/java/com/smartdevicelink/managers/lifecycle/BaseLifecycleManager.java\n\n@@ -855,7 +855,7 @@ abstract class BaseLifecycleManager {\n     }\n \n     /* *******************************************************************************************************\n-     *************************************** ISdlConnectionListener START ************************************\n+     **************************************** ISdlSessionListener START **************************************\n      *********************************************************************************************************/\n \n     final ISdlSessionListener sdlSessionListener = new ISdlSessionListener() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU1MjAwMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466552000", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;\n          \n      \n    \n    \n  \n\nThis appears to be unused", "author": "JulianKast", "createdAt": "2020-08-06T16:56:13Z", "path": "base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java", "diffHunk": "@@ -33,26 +33,112 @@\n package com.smartdevicelink.protocol;\n \n \n+import android.support.annotation.RestrictTo;\n+\n import com.smartdevicelink.protocol.enums.SessionType;\n import com.smartdevicelink.security.SdlSecurityBase;\n import com.smartdevicelink.streaming.video.VideoStreamingParameters;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n+\n+import java.util.List;", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java b/base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java\nindex d75702563..decc8205d 100644\n--- a/base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java\n+++ b/base/src/main/java/com/smartdevicelink/protocol/ISdlProtocol.java\n\n@@ -41,8 +41,6 @@ import com.smartdevicelink.streaming.video.VideoStreamingParameters;\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.util.Version;\n \n-import java.util.List;\n-\n @RestrictTo(RestrictTo.Scope.LIBRARY)\n public interface ISdlProtocol {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4MTYzOA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466581638", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service ended NAK received for service type \" + serviceType.getName();", "author": "JulianKast", "createdAt": "2020-08-06T17:44:37Z", "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -854,6 +848,7 @@ protected void handlePacketToSend(SdlPacket packet) {\n      * sent to the protocol listener.\n      **/\n     protected void handleServiceEndedNAK(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service ended NAK received for service type \" + serviceType.getName();;", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java b/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\nindex 276801adc..1e259c47b 100644\n--- a/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\n+++ b/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\n\n@@ -848,7 +848,7 @@ public class SdlProtocolBase {\n      * sent to the protocol listener.\n      **/\n     protected void handleServiceEndedNAK(SdlPacket packet, SessionType serviceType) {\n-        String error = \"Service ended NAK received for service type \" + serviceType.getName();;\n+        String error = \"Service ended NAK received for service type \" + serviceType.getName();\n         if(packet.version >= 5){\n             if(DebugTool.isDebugEnabled()) {\n                 //Currently this is only during a debugging session. Might pass back in the future\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4Mjk2Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466582967", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();;\n          \n          \n            \n                    String error = \"Service start NAK received for service type \" + serviceType.getName();", "author": "JulianKast", "createdAt": "2020-08-06T17:47:06Z", "path": "base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java", "diffHunk": "@@ -1070,10 +1067,11 @@ protected void handleProtocolSessionStarted(SdlPacket packet, SessionType servic\n                 iSdlProtocol.setAcceptedVideoParams(iSdlProtocol.getDesiredVideoParams());\n             }\n         }\n-        iSdlProtocol.onProtocolSessionStarted(serviceType, (byte) packet.getSessionId(), (byte)protocolVersion.getMajor(), \"\", hashID, packet.isEncrypted());\n+        iSdlProtocol.onServiceStarted(packet, serviceType, (byte) packet.getSessionId(), protocolVersion, packet.isEncrypted());\n     }\n \n     protected void handleProtocolSessionNAKed(SdlPacket packet, SessionType serviceType) {\n+        String error = \"Service start NAK received for service type \" + serviceType.getName();;", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java b/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\nindex 276801adc..1e259c47b 100644\n--- a/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\n+++ b/base/src/main/java/com/smartdevicelink/protocol/SdlProtocolBase.java\n\n@@ -1071,7 +1071,7 @@ public class SdlProtocolBase {\n     }\n \n     protected void handleProtocolSessionNAKed(SdlPacket packet, SessionType serviceType) {\n-        String error = \"Service start NAK received for service type \" + serviceType.getName();;\n+        String error = \"Service start NAK received for service type \" + serviceType.getName();\n         List<String> rejectedParams = null;\n         if(packet.version >= 5){\n             if(DebugTool.isDebugEnabled()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxOTA0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466619046", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.List;", "author": "JulianKast", "createdAt": "2020-08-06T18:53:16Z", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java", "diffHunk": "@@ -1,70 +1,41 @@\n package com.smartdevicelink.test.streaming;\n \n-import com.smartdevicelink.SdlConnection.ISdlConnectionListener;\n-import com.smartdevicelink.protocol.ProtocolMessage;\n-import com.smartdevicelink.protocol.enums.SessionType;\n+import com.smartdevicelink.SdlConnection.ISdlSessionListener;\n+import com.smartdevicelink.proxy.RPCMessage;\n import com.smartdevicelink.transport.BaseTransportConfig;\n+import com.smartdevicelink.util.Version;\n \n import java.util.List;", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java b/android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java\nindex 8617ab247..1c7005012 100644\n--- a/android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java\n+++ b/android/sdl_android/src/androidTest/java/com/smartdevicelink/test/streaming/MockInterfaceBroker.java\n\n@@ -5,8 +5,6 @@ import com.smartdevicelink.proxy.RPCMessage;\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.util.Version;\n \n-import java.util.List;\n-\n /**\n  * This is a mock class for testing the following :\n  * {@link com.smartdevicelink.streaming.AbstractPacketizer}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466621038", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.smartdevicelink.transport.RouterServiceValidator;", "author": "JulianKast", "createdAt": "2020-08-06T18:56:48Z", "path": "android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n import com.smartdevicelink.transport.RouterServiceValidator;", "originalCommit": "ac33cbd2cf89cca07d00d385d0146b0ea9669a21", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMjA5MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1430#discussion_r466622090", "bodyText": "Also, remove below\nimport java.util.List;\n\nimport static junit.framework.TestCase.assertTrue;", "author": "JulianKast", "createdAt": "2020-08-06T18:58:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTAzOA=="}], "type": "inlineReview", "revised_code": {"commit": "637a97a3114afaa829798e66096202517b2a63d9", "chunk": "diff --git a/android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java b/android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java\nindex 28d046948..0407d0f50 100644\n--- a/android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java\n+++ b/android/sdl_android/src/androidTest/java/com/smartdevicelink/protocol/SdlProtocolTests.java\n\n@@ -10,7 +10,6 @@ import com.smartdevicelink.test.SampleRpc;\n import com.smartdevicelink.test.SdlUnitTestContants;\n import com.smartdevicelink.transport.BaseTransportConfig;\n import com.smartdevicelink.transport.MultiplexTransportConfig;\n-import com.smartdevicelink.transport.RouterServiceValidator;\n import com.smartdevicelink.util.Version;\n \n import junit.framework.Assert;\n"}}, {"oid": "637a97a3114afaa829798e66096202517b2a63d9", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/637a97a3114afaa829798e66096202517b2a63d9", "message": "Fix issues found during review", "committedDate": "2020-08-10T19:32:34Z", "type": "commit"}]}