{"pr_number": 1396, "pr_title": "New vehicle data WindowStatus", "pr_createdAt": "2020-06-23T09:55:39Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396", "timeline": [{"oid": "d62df0165c344c5ee68bbd636b07c411efcdb693", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d62df0165c344c5ee68bbd636b07c411efcdb693", "message": "[0261]\n    - Implement WindowState/WindowStatus structs\n    - Implement changes in proper requests responses related to new structs", "committedDate": "2020-06-16T15:02:56Z", "type": "commit"}, {"oid": "5332218cec65d28d371af07b85e93b98693d4c84", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5332218cec65d28d371af07b85e93b98693d4c84", "message": "[0261]\n    - Fix tests\n    - Add new tests for WindowStatus/WindowState\n    - Fix updated Structs according to specification", "committedDate": "2020-06-20T22:14:47Z", "type": "commit"}, {"oid": "6462c0994d06b913e8001ca16d6d002fcfebdfac", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/6462c0994d06b913e8001ca16d6d002fcfebdfac", "message": "[0256]\n    - Update tests data after code review\n    - Add WindowStatus in Test.java\n    - Remove @NonNull from OnVehicleData\n    - Rename setVehicleDataResult --> setWindowStatus", "committedDate": "2020-07-01T14:54:35Z", "type": "commit"}, {"oid": "4c08256a62f55ce7511edaf0b038c86b1df885e4", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4c08256a62f55ce7511edaf0b038c86b1df885e4", "message": "[0261]\n    - Extend testJsonConstructor with new tests", "committedDate": "2020-07-01T15:02:31Z", "type": "commit"}, {"oid": "6285ee9de0f9f5010a78374d217794e32f4396b4", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/6285ee9de0f9f5010a78374d217794e32f4396b4", "message": "[0261]\n    - Update tests after code review", "committedDate": "2020-07-02T13:12:53Z", "type": "commit"}, {"oid": "e461a4212fe773118f5b111aecde5d501ebaf4be", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e461a4212fe773118f5b111aecde5d501ebaf4be", "message": "[0261]\n    - ValidateWindowStatuses --> ValidateWindowStatus", "committedDate": "2020-07-06T15:11:21Z", "type": "commit"}, {"oid": "9e36119a8a243e251fd33ff211ad9b7d62529802", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/9e36119a8a243e251fd33ff211ad9b7d62529802", "message": "Merge branch 'develop' into fork/0261_new_vehicle_data_window_status\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/VehicleDataHelper.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/notifications/OnVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/GetVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/SubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/SubscribeVehicleDataResponseTest.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java", "committedDate": "2020-07-06T15:23:01Z", "type": "commit"}, {"oid": "61eaab4878d0845fcb47117b07c70c806d8aec6f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/61eaab4878d0845fcb47117b07c70c806d8aec6f", "message": "[0261]\n    - Test --> TestValues", "committedDate": "2020-07-06T15:37:20Z", "type": "commit"}, {"oid": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "message": "[0261]\n    - 6.0.0 --> 7.0.0", "committedDate": "2020-07-21T08:45:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzQyMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458353422", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:00:23Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -540,21 +541,38 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n     public Boolean getCloudAppVehicleID(){\r\n         return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a boolean value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a boolean value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for OEM Custom VehicleData.\r\n+     * @return a Boolean value.\r\n+     */\r\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getBoolean(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a status value for WindowStatus.\r\n+     * @param status a Boolean value\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex b9e5b7e41..022ead6d6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n\n@@ -560,19 +560,22 @@ public class GetVehicleData extends RPCRequest {\n     }\n \n     /**\n-     * Sets a status value for WindowStatus.\n-     * @param status a Boolean value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(Boolean status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a Boolean value for WindowStatus.\n-     * @return a Boolean object value or null.\n-     * If true, means the WindowStatus data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public Boolean getWindowStatus(){\n+    public Boolean getWindowStatus() {\n         return getBoolean(KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1Mzk4Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458353986", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:01:25Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -540,21 +541,38 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n     public Boolean getCloudAppVehicleID(){\r\n         return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a boolean value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a boolean value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for OEM Custom VehicleData.\r\n+     * @return a Boolean value.\r\n+     */\r\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getBoolean(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a status value for WindowStatus.\r\n+     * @param status a Boolean value\r\n+     */\r\n+    public void setWindowStatus(Boolean status){\r\n+        setParameters(KEY_WINDOW_STATUS, status);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a Boolean value for WindowStatus.\r\n+     * @return a Boolean object value or null.\r\n+     * If true, means the WindowStatus data has been subscribed.\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex b9e5b7e41..022ead6d6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n\n@@ -560,19 +560,22 @@ public class GetVehicleData extends RPCRequest {\n     }\n \n     /**\n-     * Sets a status value for WindowStatus.\n-     * @param status a Boolean value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(Boolean status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a Boolean value for WindowStatus.\n-     * @return a Boolean object value or null.\n-     * If true, means the WindowStatus data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public Boolean getWindowStatus(){\n+    public Boolean getWindowStatus() {\n         return getBoolean(KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NDk1Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458354952", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return List<WindowStatus> See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:03:21Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -372,22 +373,40 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets an array of statuses for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r\n+    public void setWindowStatus(@NonNull List<WindowStatus> status){\r\n+        setParameters(KEY_WINDOW_STATUS, status);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a List<WindowStatus> value for WindowStatus.\r\n+     * @return a list of WindowStatus object or null.\r\n+     * If true, means the WindowStatus data has been subscribed.\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex a90feeb97..ff3a19524 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n\n@@ -1,412 +1,415 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-\n-\t/** \n-\t * Constructs a new GetVehicleDataResponse object\n-\t */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     * @param success whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-  \n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-        \n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }    \n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\t\n-\t\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\t\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange the range in KM left as well as fuel type\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets an array of statuses for WindowStatus.\n-     * @param status a WindowStatus value\n-     */\n-    public void setWindowStatus(@NonNull List<WindowStatus> status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a List<WindowStatus> value for WindowStatus.\n-     * @return a list of WindowStatus object or null.\n-     * If true, means the WindowStatus data has been subscribed.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus(){\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleDataResponse object\n+\t */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     * @param success whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange the range in KM left as well as fuel type\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NTMyNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458355326", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:04:08Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -372,22 +373,40 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets an array of statuses for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex a90feeb97..ff3a19524 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n\n@@ -1,412 +1,415 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-\n-\t/** \n-\t * Constructs a new GetVehicleDataResponse object\n-\t */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     * @param success whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-  \n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-        \n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }    \n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\t\n-\t\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\t\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange the range in KM left as well as fuel type\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets an array of statuses for WindowStatus.\n-     * @param status a WindowStatus value\n-     */\n-    public void setWindowStatus(@NonNull List<WindowStatus> status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a List<WindowStatus> value for WindowStatus.\n-     * @return a list of WindowStatus object or null.\n-     * If true, means the WindowStatus data has been subscribed.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus(){\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleDataResponse object\n+\t */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     * @param success whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange the range in KM left as well as fuel type\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NTkxMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458355913", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:05:18Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -582,21 +585,39 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets an array of statuses for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 5c0bf53b2..40ee1ddd3 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n\n@@ -1,623 +1,626 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets an array of statuses for WindowStatus.\n-     * @param status a WindowStatus value\n-     */\n-    public void setWindowStatus(List<WindowStatus> status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a List<WindowStatus> value for WindowStatus.\n-     * @return a list of WindowStatus object or null.\n-     * If true, means the WindowStatus data has been subscribed.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus(){\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *\n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ *\n+ * <p> <b>Note:</b></p>\n+ *\n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ *\n+ *\n+ *\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NjI1Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458356252", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return List<WindowStatus> See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:06:00Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -582,21 +585,39 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets an array of statuses for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r\n+    public void setWindowStatus(List<WindowStatus> status){\r\n+        setParameters(KEY_WINDOW_STATUS, status);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a List<WindowStatus> value for WindowStatus.\r\n+     * @return a list of WindowStatus object or null.\r\n+     * If true, means the WindowStatus data has been subscribed.\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 5c0bf53b2..40ee1ddd3 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n\n@@ -1,623 +1,626 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets an array of statuses for WindowStatus.\n-     * @param status a WindowStatus value\n-     */\n-    public void setWindowStatus(List<WindowStatus> status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a List<WindowStatus> value for WindowStatus.\n-     * @return a list of WindowStatus object or null.\n-     * If true, means the WindowStatus data has been subscribed.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus(){\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *\n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ *\n+ * <p> <b>Note:</b></p>\n+ *\n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ *\n+ *\n+ *\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1Njk4Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458356982", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:07:32Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -864,21 +865,38 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n \tpublic Boolean getCloudAppVehicleID(){\r\n \t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n \t}\r\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-}\n+\r\n+\t/**\r\n+\t * Sets a boolean value for OEM Custom VehicleData.\r\n+\t * @param vehicleDataName a String value\r\n+\t * @param vehicleDataState a boolean value\r\n+\t */\r\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for OEM Custom VehicleData.\r\n+\t * @return a Boolean value.\r\n+\t */\r\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+\t\treturn getBoolean(vehicleDataName);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sets a status value for WindowStatus.\r\n+\t * @param status a Boolean value\r\n+\t */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 989412004..c2404266c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n\n@@ -883,20 +883,23 @@ public class SubscribeVehicleData extends RPCRequest {\n \t\treturn getBoolean(vehicleDataName);\n \t}\n \n-\t/**\n-\t * Sets a status value for WindowStatus.\n-\t * @param status a Boolean value\n-\t */\n-\tpublic void setWindowStatus(Boolean status){\n-\t\tsetParameters(KEY_WINDOW_STATUS, status);\n-\t}\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n \n-\t/**\n-\t * Gets a boolean value for WindowStatus.\n-\t * @return a Boolean object value or null.\n-\t * If true, means the WindowStatus data has been subscribed.\n-\t */\n-\tpublic Boolean getWindowStatus(){\n-\t\treturn getBoolean(KEY_WINDOW_STATUS);\n-\t}\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getWindowStatus() {\n+        return getBoolean(KEY_WINDOW_STATUS);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NzQ1NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458357454", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:08:28Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -864,21 +865,38 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n \tpublic Boolean getCloudAppVehicleID(){\r\n \t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n \t}\r\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-}\n+\r\n+\t/**\r\n+\t * Sets a boolean value for OEM Custom VehicleData.\r\n+\t * @param vehicleDataName a String value\r\n+\t * @param vehicleDataState a boolean value\r\n+\t */\r\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for OEM Custom VehicleData.\r\n+\t * @return a Boolean value.\r\n+\t */\r\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+\t\treturn getBoolean(vehicleDataName);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sets a status value for WindowStatus.\r\n+\t * @param status a Boolean value\r\n+\t */\r\n+\tpublic void setWindowStatus(Boolean status){\r\n+\t\tsetParameters(KEY_WINDOW_STATUS, status);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for WindowStatus.\r\n+\t * @return a Boolean object value or null.\r\n+\t * If true, means the WindowStatus data has been subscribed.\r\n+\t */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 989412004..c2404266c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n\n@@ -883,20 +883,23 @@ public class SubscribeVehicleData extends RPCRequest {\n \t\treturn getBoolean(vehicleDataName);\n \t}\n \n-\t/**\n-\t * Sets a status value for WindowStatus.\n-\t * @param status a Boolean value\n-\t */\n-\tpublic void setWindowStatus(Boolean status){\n-\t\tsetParameters(KEY_WINDOW_STATUS, status);\n-\t}\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n \n-\t/**\n-\t * Gets a boolean value for WindowStatus.\n-\t * @return a Boolean object value or null.\n-\t * If true, means the WindowStatus data has been subscribed.\n-\t */\n-\tpublic Boolean getWindowStatus(){\n-\t\treturn getBoolean(KEY_WINDOW_STATUS);\n-\t}\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getWindowStatus() {\n+        return getBoolean(KEY_WINDOW_STATUS);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTAzNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458359036", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:11:31Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -531,4 +532,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a vehicleDataResult value for WindowStatus.\r\n+     * @param windowStatus a VehicleDataResult value\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex e73ca67db..7924379ce 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n\n@@ -534,19 +534,22 @@ public class SubscribeVehicleDataResponse extends RPCResponse {\n     }\n \n     /**\n-     * Sets a vehicleDataResult value for WindowStatus.\n-     * @param windowStatus a VehicleDataResult value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(VehicleDataResult windowStatus){\n+    public void setWindowStatus(VehicleDataResult windowStatus) {\n         setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a VehicleDataResult value for WindowStatus.\n-     * @return a VehicleDataResult object value or null.\n-     * If true, means the VehicleDataResult data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return VehicleDataResult See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public VehicleDataResult getWindowStatus(){\n+    public VehicleDataResult getWindowStatus() {\n         return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTIxNw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458359217", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:11:49Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -531,4 +532,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a vehicleDataResult value for WindowStatus.\r\n+     * @param windowStatus a VehicleDataResult value\r\n+     */\r\n+    public void setWindowStatus(VehicleDataResult windowStatus){\r\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleDataResult value for WindowStatus.\r\n+     * @return a VehicleDataResult object value or null.\r\n+     * If true, means the VehicleDataResult data has been subscribed.\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex e73ca67db..7924379ce 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n\n@@ -534,19 +534,22 @@ public class SubscribeVehicleDataResponse extends RPCResponse {\n     }\n \n     /**\n-     * Sets a vehicleDataResult value for WindowStatus.\n-     * @param windowStatus a VehicleDataResult value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(VehicleDataResult windowStatus){\n+    public void setWindowStatus(VehicleDataResult windowStatus) {\n         setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a VehicleDataResult value for WindowStatus.\n-     * @return a VehicleDataResult object value or null.\n-     * If true, means the VehicleDataResult data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return VehicleDataResult See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public VehicleDataResult getWindowStatus(){\n+    public VehicleDataResult getWindowStatus() {\n         return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTUxNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458359514", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:12:25Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -867,4 +868,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataS\n \tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n \t\treturn getBoolean(vehicleDataName);\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Sets a status value for WindowStatus.\r\n+\t * @param status a Boolean value\r\n+\t */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex b6e7eba08..4ec1aa4cd 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n\n@@ -869,20 +869,23 @@ public class UnsubscribeVehicleData extends RPCRequest {\n \t\treturn getBoolean(vehicleDataName);\n \t}\n \n-\t/**\n-\t * Sets a status value for WindowStatus.\n-\t * @param status a Boolean value\n-\t */\n-\tpublic void setWindowStatus(Boolean status){\n-\t\tsetParameters(KEY_WINDOW_STATUS, status);\n-\t}\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n \n-\t/**\n-\t * Gets a boolean value for WindowStatus.\n-\t * @return a WindowStatus object value or null.\n-\t * If true, means the WindowStatus data has been subscribed.\n-\t */\n-\tpublic Boolean getWindowStatus(){\n-\t\treturn getBoolean(KEY_WINDOW_STATUS);\n-\t}\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getWindowStatus() {\n+        return getBoolean(KEY_WINDOW_STATUS);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTY5OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458359699", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:12:49Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -867,4 +868,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataS\n \tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n \t\treturn getBoolean(vehicleDataName);\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Sets a status value for WindowStatus.\r\n+\t * @param status a Boolean value\r\n+\t */\r\n+\tpublic void setWindowStatus(Boolean status){\r\n+\t\tsetParameters(KEY_WINDOW_STATUS, status);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for WindowStatus.\r\n+\t * @return a WindowStatus object value or null.\r\n+\t * If true, means the WindowStatus data has been subscribed.\r\n+\t */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex b6e7eba08..4ec1aa4cd 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n\n@@ -869,20 +869,23 @@ public class UnsubscribeVehicleData extends RPCRequest {\n \t\treturn getBoolean(vehicleDataName);\n \t}\n \n-\t/**\n-\t * Sets a status value for WindowStatus.\n-\t * @param status a Boolean value\n-\t */\n-\tpublic void setWindowStatus(Boolean status){\n-\t\tsetParameters(KEY_WINDOW_STATUS, status);\n-\t}\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setWindowStatus(Boolean windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+    }\n \n-\t/**\n-\t * Gets a boolean value for WindowStatus.\n-\t * @return a WindowStatus object value or null.\n-\t * If true, means the WindowStatus data has been subscribed.\n-\t */\n-\tpublic Boolean getWindowStatus(){\n-\t\treturn getBoolean(KEY_WINDOW_STATUS);\n-\t}\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return Boolean See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getWindowStatus() {\n+        return getBoolean(KEY_WINDOW_STATUS);\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MDA0OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458360049", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n            /**\n          \n          \n            \n                 * Sets the windowStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param windowStatus See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator can also be used to update the XML comments at the top of this file", "author": "RHenigan", "createdAt": "2020-07-21T20:13:30Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -533,4 +534,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a status value for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex 452df215f..ac6a31baa 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n\n@@ -536,19 +536,22 @@ public class UnsubscribeVehicleDataResponse extends RPCResponse {\n     }\n \n     /**\n-     * Sets a status value for WindowStatus.\n-     * @param status a WindowStatus value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(VehicleDataResult status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n+    public void setWindowStatus(VehicleDataResult windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a VehicleDataResult value for WindowStatus.\n-     * @return a WindowStatus object value or null.\n-     * If true, means the WindowStatus data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return VehicleDataResult See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public VehicleDataResult getWindowStatus(){\n+    public VehicleDataResult getWindowStatus() {\n         return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MDE2Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458360167", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the windowStatus. If true, means the WindowStatus data has been subscribed.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See WindowStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly.", "author": "RHenigan", "createdAt": "2020-07-21T20:13:44Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -533,4 +534,21 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a status value for WindowStatus.\r\n+     * @param status a WindowStatus value\r\n+     */\r\n+    public void setWindowStatus(VehicleDataResult status){\r\n+        setParameters(KEY_WINDOW_STATUS, status);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleDataResult value for WindowStatus.\r\n+     * @return a WindowStatus object value or null.\r\n+     * If true, means the WindowStatus data has been subscribed.\r\n+     */\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex 452df215f..ac6a31baa 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n\n@@ -536,19 +536,22 @@ public class UnsubscribeVehicleDataResponse extends RPCResponse {\n     }\n \n     /**\n-     * Sets a status value for WindowStatus.\n-     * @param status a WindowStatus value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setWindowStatus(VehicleDataResult status){\n-        setParameters(KEY_WINDOW_STATUS, status);\n+    public void setWindowStatus(VehicleDataResult windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a VehicleDataResult value for WindowStatus.\n-     * @return a WindowStatus object value or null.\n-     * If true, means the WindowStatus data has been subscribed.\n+     * Gets the windowStatus.\n+     *\n+     * @return VehicleDataResult See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public VehicleDataResult getWindowStatus(){\n+    public VehicleDataResult getWindowStatus() {\n         return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WINDOW_STATUS);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MTUzNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458361534", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            /**\n          \n          \n            \n             *\n          \n          \n            \n             * <p><b>Parameter List</b></p>\n          \n          \n            \n             *\n          \n          \n            \n             * <table border=\"1\" rules=\"all\">\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <th>Param Name</th>\n          \n          \n            \n             *      <th>Type</th>\n          \n          \n            \n             *      <th>Description</th>\n          \n          \n            \n             *      <th>Required</th>\n          \n          \n            \n             *      <th>Version Available</th>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>approximatePosition</td>\n          \n          \n            \n             *      <td>Integer</td>\n          \n          \n            \n             *      <td>The approximate percentage that the window is open - 0 being fully closed, 100 being fullyopen</td>\n          \n          \n            \n             *      <td>Y</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>deviation</td>\n          \n          \n            \n             *      <td>Integer</td>\n          \n          \n            \n             *      <td>The percentage deviation of the approximatePosition. e.g. If the approximatePosition is 50and the deviation is 10, then the window's location is somewhere between 40 and 60.</td>\n          \n          \n            \n             *      <td>Y</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             * </table>\n          \n          \n            \n             * @since SmartDeviceLink 7.0.0\n          \n          \n            \n             */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator will also update the rest of the JavaDocs in this file to ensure everything matches the RPC Spec exactly", "author": "RHenigan", "createdAt": "2020-07-21T20:16:13Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MzI0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458363246", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setApproximatePosition(Integer approximatePosition) {\n          \n          \n            \n                public void setApproximatePosition(@NonNull Integer approximatePosition) {", "author": "RHenigan", "createdAt": "2020-07-21T20:19:31Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+\n+    public void setApproximatePosition(Integer approximatePosition) {", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MzgyMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458363821", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setDeviation(Integer deviation) {\n          \n          \n            \n                public void setDeviation(@NonNull Integer deviation) {", "author": "RHenigan", "createdAt": "2020-07-21T20:20:29Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+\n+    public void setApproximatePosition(Integer approximatePosition) {\n+        setValue(KEY_APPROXIMATE_POSITION, approximatePosition);\n+    }\n+\n+    public Integer getApproximatePosition() {\n+        return getInteger(KEY_APPROXIMATE_POSITION);\n+    }\n+\n+    public void setDeviation(Integer deviation) {", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NDY1MQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458364651", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            /**\n          \n          \n            \n             * Describes the status of a window of a door/liftgate etc.\n          \n          \n            \n             *\n          \n          \n            \n             * <p><b>Parameter List</b></p>\n          \n          \n            \n             *\n          \n          \n            \n             * <table border=\"1\" rules=\"all\">\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <th>Param Name</th>\n          \n          \n            \n             *      <th>Type</th>\n          \n          \n            \n             *      <th>Description</th>\n          \n          \n            \n             *      <th>Required</th>\n          \n          \n            \n             *      <th>Version Available</th>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>location</td>\n          \n          \n            \n             *      <td>Grid</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *      <td>Y</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>state</td>\n          \n          \n            \n             *      <td>WindowState</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *      <td>Y</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             * </table>\n          \n          \n            \n             *\n          \n          \n            \n             * @since SmartDeviceLink 7.0.0\n          \n          \n            \n             */\n          \n      \n    \n    \n  \n\nPlease use the RPC generator in the sdl_java_suite project to ensure the RPC matched the spec exactly. The generator will also update the rest of the JavaDocs in this file to ensure everything matches the RPC Spec exactly", "author": "RHenigan", "createdAt": "2020-07-21T20:22:07Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NTE4NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458365184", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setLocation(Grid location) {\n          \n          \n            \n                public void setLocation(@NonNull Grid location) {", "author": "RHenigan", "createdAt": "2020-07-21T20:23:08Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NTc3NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458365774", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setWindowState(WindowState state) {\n          \n          \n            \n                public void setState(@NonNull WindowState state) {", "author": "RHenigan", "createdAt": "2020-07-21T20:24:09Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+\n+    public void setWindowState(WindowState state) {", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NTk1Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458365953", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public WindowState getWindowState() {\n          \n          \n            \n                public WindowState getState() {", "author": "RHenigan", "createdAt": "2020-07-21T20:24:29Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+\n+    public void setWindowState(WindowState state) {\n+        setValue(KEY_WINDOW_STATE, state);\n+    }\n+\n+    public WindowState getWindowState() {", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2NjYyOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458366629", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "author": "RHenigan", "createdAt": "2020-07-21T20:25:37Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "diffHunk": "@@ -167,6 +167,8 @@\n      * @since SmartDeviceLink 6.0\r\n      */\r\n     VEHICLEDATA_OEM_CUSTOM_DATA,\r\n+\r", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex e292ce14c..cff40fcc1 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n\n@@ -1,187 +1,188 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc.enums;\n-\n-/**\n- * Defines the vehicle data types that can be published and subscribed to.\n- * \n- */\n-public enum VehicleDataType {\n-\t/**\n-\t * Notifies GPSData may be subscribed\n-\t */\n-\tVEHICLEDATA_GPS,\n-\t/**\n-\t * Notifies SPEED Data may be subscribed\n-\t */\n-    VEHICLEDATA_SPEED,\n-    /**\n-     * Notifies RPMData may be subscribed\n-     */\n-    VEHICLEDATA_RPM,\n-    /**\n-     * Notifies FUELLEVELData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL,\n-    /**\n-     * Notifies FUELLEVEL_STATEData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL_STATE,\n-/**\n- * Notifies FUELCONSUMPTIONData may be subscribed\n- */\n-    VEHICLEDATA_FUELCONSUMPTION,\n-    /**\n-     * Notifies EXTERNTEMPData may be subscribed\n-     */\n-    VEHICLEDATA_EXTERNTEMP,\n-    /**\n-     * Notifies VINData may be subscribed\n-     */\n-    VEHICLEDATA_VIN,\n-    /**\n-     * Notifies PRNDLData may be subscribed\n-     */\n-    VEHICLEDATA_PRNDL,\n-    /**\n-     * Notifies TIREPRESSUREData may be subscribed\n-     */\n-    VEHICLEDATA_TIREPRESSURE,\n-    /**\n-     * Notifies ODOMETERData may be subscribed\n-     */\n-    VEHICLEDATA_ODOMETER,   \n-    /**\n-     * Notifies BELTSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_BELTSTATUS,\n-    /**\n-     * Notifies BODYINFOData may be subscribed\n-     */\n-    VEHICLEDATA_BODYINFO,\n-    /**\n-     * Notifies DEVICESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_DEVICESTATUS,\n-    /**\n-     * Notifies BRAKINGData may be subscribed\n-     */\n-    VEHICLEDATA_BRAKING,\n-    /**\n-     * Notifies WIPERSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_WIPERSTATUS,\n-    /**\n-     * Notifies HEADLAMPSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_HEADLAMPSTATUS,\n-    /**\n-     * Notifies BATTVOLTAGEData may be subscribed\n-     */\n-    VEHICLEDATA_BATTVOLTAGE,\n-    /**\n-     * Notifies EGINETORQUEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINETORQUE,\n-    /**\n-     * Notifies ENGINEOILLIFEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINEOILLIFE,\n-    /**\n-     * Notifies ACCPEDALData may be subscribed\n-     */\n-    VEHICLEDATA_ACCPEDAL,\n-    /**\n-     * Notifies STEERINGWHEELData may be subscribed\n-     */\n-    VEHICLEDATA_STEERINGWHEEL,\n-    /**\n-     * Notifies ECALLINFOData may be subscribed\n-     */\n-    VEHICLEDATA_ECALLINFO,\n-    /**\n-     * Notifies AIRBAGSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_AIRBAGSTATUS,\n-    /**\n-     * Notifies EMERGENCYEVENTData may be subscribed\n-     */\n-    VEHICLEDATA_EMERGENCYEVENT,\n-    /**\n-     * Notifies CLUSTERMODESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_CLUSTERMODESTATUS,\n-    /**\n-     * Notifies MYKEYData may be subscribed\n-     */\n-    VEHICLEDATA_MYKEY,\n-\n-    VEHICLEDATA_FUELRANGE,\n-\n-    /**\n-     * Notifies TURNSIGNALData may be subscribed\n-     */\n-    VEHICLEDATA_TURNSIGNAL,\n-\n-    /**\n-     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n-\n-    /**\n-     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n-     */\n-    VEHICLEDATA_CLOUDAPPVEHICLEID,\n-    /**\n-     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n-     *\n-     * @since SmartDeviceLink 6.0\n-     */\n-    VEHICLEDATA_OEM_CUSTOM_DATA,\n-\n-    VEHICLEDATA_WINDOWSTATUS\n-    ;\n-\n-     /**\n-     * Convert String to VehicleDataType\n-     * @param value String\n-     * @return VehicleDataType\n-     */\n-\n-    public static VehicleDataType valueForString(String value) {\n-        try{\n-            return valueOf(value);\n-        }catch(Exception e){\n-            return null;\n-        }\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc.enums;\n+\n+/**\n+ * Defines the vehicle data types that can be published and subscribed to.\n+ *\n+ */\n+public enum VehicleDataType {\n+\t/**\n+\t * Notifies GPSData may be subscribed\n+\t */\n+\tVEHICLEDATA_GPS,\n+\t/**\n+\t * Notifies SPEED Data may be subscribed\n+\t */\n+    VEHICLEDATA_SPEED,\n+    /**\n+     * Notifies RPMData may be subscribed\n+     */\n+    VEHICLEDATA_RPM,\n+    /**\n+     * Notifies FUELLEVELData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL,\n+    /**\n+     * Notifies FUELLEVEL_STATEData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL_STATE,\n+/**\n+ * Notifies FUELCONSUMPTIONData may be subscribed\n+ */\n+    VEHICLEDATA_FUELCONSUMPTION,\n+    /**\n+     * Notifies EXTERNTEMPData may be subscribed\n+     */\n+    VEHICLEDATA_EXTERNTEMP,\n+    /**\n+     * Notifies VINData may be subscribed\n+     */\n+    VEHICLEDATA_VIN,\n+    /**\n+     * Notifies PRNDLData may be subscribed\n+     */\n+    VEHICLEDATA_PRNDL,\n+    /**\n+     * Notifies TIREPRESSUREData may be subscribed\n+     */\n+    VEHICLEDATA_TIREPRESSURE,\n+    /**\n+     * Notifies ODOMETERData may be subscribed\n+     */\n+    VEHICLEDATA_ODOMETER,\n+    /**\n+     * Notifies BELTSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_BELTSTATUS,\n+    /**\n+     * Notifies BODYINFOData may be subscribed\n+     */\n+    VEHICLEDATA_BODYINFO,\n+    /**\n+     * Notifies DEVICESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_DEVICESTATUS,\n+    /**\n+     * Notifies BRAKINGData may be subscribed\n+     */\n+    VEHICLEDATA_BRAKING,\n+    /**\n+     * Notifies WIPERSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_WIPERSTATUS,\n+    /**\n+     * Notifies HEADLAMPSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_HEADLAMPSTATUS,\n+    /**\n+     * Notifies BATTVOLTAGEData may be subscribed\n+     */\n+    VEHICLEDATA_BATTVOLTAGE,\n+    /**\n+     * Notifies EGINETORQUEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINETORQUE,\n+    /**\n+     * Notifies ENGINEOILLIFEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINEOILLIFE,\n+    /**\n+     * Notifies ACCPEDALData may be subscribed\n+     */\n+    VEHICLEDATA_ACCPEDAL,\n+    /**\n+     * Notifies STEERINGWHEELData may be subscribed\n+     */\n+    VEHICLEDATA_STEERINGWHEEL,\n+    /**\n+     * Notifies ECALLINFOData may be subscribed\n+     */\n+    VEHICLEDATA_ECALLINFO,\n+    /**\n+     * Notifies AIRBAGSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_AIRBAGSTATUS,\n+    /**\n+     * Notifies EMERGENCYEVENTData may be subscribed\n+     */\n+    VEHICLEDATA_EMERGENCYEVENT,\n+    /**\n+     * Notifies CLUSTERMODESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_CLUSTERMODESTATUS,\n+    /**\n+     * Notifies MYKEYData may be subscribed\n+     */\n+    VEHICLEDATA_MYKEY,\n+\n+    VEHICLEDATA_FUELRANGE,\n+\n+    /**\n+     * Notifies TURNSIGNALData may be subscribed\n+     */\n+    VEHICLEDATA_TURNSIGNAL,\n+\n+    /**\n+     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n+\n+    /**\n+     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n+     */\n+    VEHICLEDATA_CLOUDAPPVEHICLEID,\n+    /**\n+     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n+     *\n+     * @since SmartDeviceLink 6.0\n+     */\n+    VEHICLEDATA_OEM_CUSTOM_DATA,\n+    /**\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    VEHICLEDATA_WINDOWSTATUS;\n+\n+     /**\n+     * Convert String to VehicleDataType\n+     * @param value String\n+     * @return VehicleDataType\n+     */\n+\n+    public static VehicleDataType valueForString(String value) {\n+        try {\n+            return valueOf(value);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNzMzMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458837332", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return (WindowState) getObject(WindowState.class, KEY_WINDOW_STATE);\n          \n          \n            \n                    return (WindowState) getObject(WindowState.class, KEY_STATE);", "author": "RHenigan", "createdAt": "2020-07-22T14:31:31Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+\n+    public void setWindowState(WindowState state) {\n+        setValue(KEY_WINDOW_STATE, state);\n+    }\n+\n+    public WindowState getWindowState() {\n+        return (WindowState) getObject(WindowState.class, KEY_WINDOW_STATE);", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNzczOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458837739", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the state.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return WindowState\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:32:03Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+\n+    public void setWindowState(WindowState state) {\n+        setValue(KEY_WINDOW_STATE, state);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzODAwMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458838000", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    setValue(KEY_WINDOW_STATE, state);\n          \n          \n            \n                    setValue(KEY_STATE, state);", "author": "RHenigan", "createdAt": "2020-07-22T14:32:26Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+\n+    public void setWindowState(WindowState state) {\n+        setValue(KEY_WINDOW_STATE, state);", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzODQ0Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458838443", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the state.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param state\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease inclue javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:33:03Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+\n+    public Grid getLocation(){\n+        return (Grid) getObject(Grid.class, KEY_LOCATION);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzOTUwMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458839502", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the location.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Grid\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:34:25Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+\n+    public void setLocation(Grid location) {\n+        setValue(KEY_LOCATION, location);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MDAwMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458840002", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the location.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param location\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:35:06Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);\n+    }\n+\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MDM0Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458840347", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String KEY_WINDOW_STATE = \"state\";\n          \n          \n            \n                public static final String KEY_STATE = \"state\";", "author": "RHenigan", "createdAt": "2020-07-22T14:35:34Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MDgyNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458840826", "bodyText": "Please include any copyright that is needed for this file", "author": "RHenigan", "createdAt": "2020-07-22T14:36:15Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MjA5Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458842096", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    setWindowState(state);\n          \n          \n            \n                    setState(state);", "author": "RHenigan", "createdAt": "2020-07-22T14:37:55Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowStatus extends RPCStruct {\n+\n+    public static final String KEY_LOCATION = \"location\";\n+    public static final String KEY_WINDOW_STATE = \"state\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowStatus() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     * @param location describes location of Window of Door/liftgate\n+     * @param state describes state of Window of Door/liftgate\n+     */\n+    public WindowStatus(@NonNull Grid location, @NonNull WindowState state) {\n+        this();\n+        setLocation(location);\n+        setWindowState(state);", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\nindex 927c2f490..509f5ed99 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowStatus.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0NzkyMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458847922", "bodyText": "Please include any copyright that is needed for this file", "author": "RHenigan", "createdAt": "2020-07-22T14:45:30Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0OTgxOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458849819", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the deviation.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Integer The percentage deviation of the approximatePosition. e.g. If the approximatePosition is 50\n          \n          \n            \n                 * and the deviation is 10, then the window's location is somewhere between 40 and 60.\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include Javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:47:51Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+\n+    public void setApproximatePosition(Integer approximatePosition) {\n+        setValue(KEY_APPROXIMATE_POSITION, approximatePosition);\n+    }\n+\n+    public Integer getApproximatePosition() {\n+        return getInteger(KEY_APPROXIMATE_POSITION);\n+    }\n+\n+    public void setDeviation(Integer deviation) {\n+        setValue(KEY_DEVIATION, deviation);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MDExNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458850115", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the deviation.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param deviation The percentage deviation of the approximatePosition. e.g. If the approximatePosition is 50\n          \n          \n            \n                 * and the deviation is 10, then the window's location is somewhere between 40 and 60.\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:48:13Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+\n+    public void setApproximatePosition(Integer approximatePosition) {\n+        setValue(KEY_APPROXIMATE_POSITION, approximatePosition);\n+    }\n+\n+    public Integer getApproximatePosition() {\n+        return getInteger(KEY_APPROXIMATE_POSITION);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MTIxNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458851214", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the approximatePosition.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Integer The approximate percentage that the window is open - 0 being fully closed, 100 being fully\n          \n          \n            \n                 * open\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include Javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:49:32Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+\n+    public void setApproximatePosition(Integer approximatePosition) {\n+        setValue(KEY_APPROXIMATE_POSITION, approximatePosition);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MjA1Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458852052", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the approximatePosition.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param approximatePosition The approximate percentage that the window is open - 0 being fully closed, 100 being fully\n          \n          \n            \n                 * open\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nPlease include javadocs", "author": "RHenigan", "createdAt": "2020-07-22T14:50:33Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState(@NonNull Integer approximatePosition, @NonNull Integer deviation) {\n+        this();\n+        setApproximatePosition(approximatePosition);\n+        setDeviation(deviation);\n+    }\n+", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1MjUzNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1396#discussion_r458852534", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Constructs a newly allocated WindowStatus object\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param approximatePosition The approximate percentage that the window is open - 0 being fully closed, 100 being fully\n          \n          \n            \n                 * open\n          \n          \n            \n                 * @param deviation The percentage deviation of the approximatePosition. e.g. If the approximatePosition is 50\n          \n          \n            \n                 * and the deviation is 10, then the window's location is somewhere between 40 and 60.\n          \n      \n    \n    \n  \n\nPlease make sure javadocs include the params", "author": "RHenigan", "createdAt": "2020-07-22T14:51:13Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+\n+import java.util.Hashtable;\n+\n+public class WindowState extends RPCStruct {\n+    public static final String KEY_APPROXIMATE_POSITION = \"approximatePosition\";\n+    public static final String KEY_DEVIATION = \"deviation\";\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object\n+     */\n+    public WindowState() {}\n+\n+    /**\n+     * Constructs a newly allocated WindowStatus object indicated by the Hashtable parameter\n+     * @param hash The Hashtable to use\n+     */\n+    public WindowState(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a newly allocated WindowStatus object", "originalCommit": "972b6ef08d060bf92b11ca38e4795eaac2b9eb1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\nindex 3cacab9ec..79c6d7663 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/WindowState.java\n\n@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import android.support.annotation.NonNull;\n"}}, {"oid": "728d26b6aab6e503fdf088e7b456fbad7cec8113", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/728d26b6aab6e503fdf088e7b456fbad7cec8113", "message": "[0261]\n    - Regenerate using Generator\n    - Fix tests", "committedDate": "2020-07-23T08:34:07Z", "type": "commit"}, {"oid": "c76fd597f64f90794d15fc73519218d9091a2e23", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/c76fd597f64f90794d15fc73519218d9091a2e23", "message": "[0261]\n    - Rollback of formatting changes", "committedDate": "2020-08-03T12:47:51Z", "type": "commit"}, {"oid": "e8ffb3fe0937935eb9e8de5d2e069fc9f3e7205f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e8ffb3fe0937935eb9e8de5d2e069fc9f3e7205f", "message": "Merge branch 'develop' into fork/0261_new_vehicle_data_window_status\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/assets/json/SubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/assets/json/UnsubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/enums/VehicleDataTypeTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/notifications/OnVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/GetVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/SubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/SubscribeVehicleDataResponseTest.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "committedDate": "2020-08-07T10:07:12Z", "type": "commit"}, {"oid": "983f62a731b3fc1c3b4be51fbd3a8aafec9b20ff", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/983f62a731b3fc1c3b4be51fbd3a8aafec9b20ff", "message": "[0261]\n    - Fix compilation errors on merge", "committedDate": "2020-08-07T10:55:05Z", "type": "commit"}, {"oid": "a42df36412027742684f4be696875ee02fc28ba5", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a42df36412027742684f4be696875ee02fc28ba5", "message": "[0261]\n    - Update javadoc", "committedDate": "2020-08-07T11:36:43Z", "type": "commit"}, {"oid": "29ddfa18237d59440572838553e2b71a650d3f2a", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/29ddfa18237d59440572838553e2b71a650d3f2a", "message": "Revert LF to CRLF line separators", "committedDate": "2020-08-10T12:33:33Z", "type": "commit"}]}