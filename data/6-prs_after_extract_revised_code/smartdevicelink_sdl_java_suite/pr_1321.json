{"pr_number": 1321, "pr_title": "Align SystemCapabilityManager with iOS (part3)", "pr_createdAt": "2020-03-25T21:31:11Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321", "timeline": [{"oid": "ada4a6aab493b48a72ce17ad1ac0b91d232202d7", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ada4a6aab493b48a72ce17ad1ac0b91d232202d7", "message": "Update comments in SCM", "committedDate": "2020-03-25T16:04:23Z", "type": "commit"}, {"oid": "a7e73066397e3abec6578be6bbe7c317577b08f2", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a7e73066397e3abec6578be6bbe7c317577b08f2", "message": "Update SCM to avoid force updating if subscribed to capability", "committedDate": "2020-03-25T17:05:35Z", "type": "commit"}, {"oid": "ead0466e11c82a8894a6764c33ef3f6d64784093", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ead0466e11c82a8894a6764c33ef3f6d64784093", "message": "Update SCM to not send GSCR in HMI NONE", "committedDate": "2020-03-25T18:49:20Z", "type": "commit"}, {"oid": "c77e4412e77b8825b9e940727af8d8f18c43ed94", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/c77e4412e77b8825b9e940727af8d8f18c43ed94", "message": "Fix broken SCM unit tests", "committedDate": "2020-03-25T21:28:16Z", "type": "commit"}, {"oid": "f6c872e283b0022f75336a4d8eb9cffb64c3d245", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f6c872e283b0022f75336a4d8eb9cffb64c3d245", "message": "Add test to get capability on HMI NONE", "committedDate": "2020-03-25T21:43:21Z", "type": "commit"}, {"oid": "7dfa046a78250d7e9d0f45d2d3d42a69863e200c", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/7dfa046a78250d7e9d0f45d2d3d42a69863e200c", "message": "Add the new getCapability() method to Isdl", "committedDate": "2020-03-26T18:37:54Z", "type": "commit"}, {"oid": "bee9f979499f88a041590290b811896883f6bbe4", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/bee9f979499f88a041590290b811896883f6bbe4", "message": "Add the new getCapability() method to LifecycleManager", "committedDate": "2020-03-26T18:46:36Z", "type": "commit"}, {"oid": "32ba00131305e45ce094b970473fa474b4a12ddc", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/32ba00131305e45ce094b970473fa474b4a12ddc", "message": "Update VideoStreamManager to avoid querying for capabilities in HMI NONE", "committedDate": "2020-03-26T22:39:00Z", "type": "commit"}, {"oid": "a97d392533f167fb93ad0bffa363e60412c29bf7", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a97d392533f167fb93ad0bffa363e60412c29bf7", "message": "Mark DISPLAYS as auto subscribed when the SCM is created", "committedDate": "2020-03-27T16:28:04Z", "type": "commit"}, {"oid": "205cb94cc7b80ab6adf9c8704ce3e468ea026a63", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/205cb94cc7b80ab6adf9c8704ce3e468ea026a63", "message": "Fix SCM unit tests", "committedDate": "2020-03-27T16:49:31Z", "type": "commit"}, {"oid": "d9340f4a3bd113c9f85b41c770d68b3a94d21d11", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d9340f4a3bd113c9f85b41c770d68b3a94d21d11", "message": "Fix spacing issue in SCM", "committedDate": "2020-03-27T22:22:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzNzMwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r402537301", "bodyText": "This indentation doesn't seem correct", "author": "joeljfischer", "createdAt": "2020-04-02T18:50:24Z", "path": "base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java", "diffHunk": "@@ -284,6 +289,13 @@ public void onReceived(RPCMessage message) {\n                         }\n                     } else if (RPCMessage.KEY_NOTIFICATION.equals(message.getMessageType())) {\n                         switch (message.getFunctionID()) {\n+\t\t\t\t\t\t\tcase ON_HMI_STATUS:\n+\t\t\t\t\t\t\t\tOnHMIStatus onHMIStatus = (OnHMIStatus) message;\n+\t\t\t\t\t\t\t\tif (onHMIStatus.getWindowID() != null && onHMIStatus.getWindowID() != PredefinedWindows.DEFAULT_WINDOW.getValue()) {\n+\t\t\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\tcurrentHMILevel = onHMIStatus.getHmiLevel();\n+\t\t\t\t\t\t\t\tbreak;", "originalCommit": "d9340f4a3bd113c9f85b41c770d68b3a94d21d11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "416188dc8a9afd69756d16705a44fe735b5bedbd", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java b/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\nindex 764ac8af8..2716a9593 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\n\n@@ -289,13 +289,13 @@ public class SystemCapabilityManager {\n                         }\n                     } else if (RPCMessage.KEY_NOTIFICATION.equals(message.getMessageType())) {\n                         switch (message.getFunctionID()) {\n-\t\t\t\t\t\t\tcase ON_HMI_STATUS:\n-\t\t\t\t\t\t\t\tOnHMIStatus onHMIStatus = (OnHMIStatus) message;\n-\t\t\t\t\t\t\t\tif (onHMIStatus.getWindowID() != null && onHMIStatus.getWindowID() != PredefinedWindows.DEFAULT_WINDOW.getValue()) {\n-\t\t\t\t\t\t\t\t\treturn;\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tcurrentHMILevel = onHMIStatus.getHmiLevel();\n-\t\t\t\t\t\t\t\tbreak;\n+                            case ON_HMI_STATUS:\n+                                OnHMIStatus onHMIStatus = (OnHMIStatus) message;\n+                                if (onHMIStatus.getWindowID() != null && onHMIStatus.getWindowID() != PredefinedWindows.DEFAULT_WINDOW.getValue()) {\n+                                    return;\n+                                }\n+                                currentHMILevel = onHMIStatus.getHmiLevel();\n+                                break;\n                             case ON_SYSTEM_CAPABILITY_UPDATED:\n                                 OnSystemCapabilityUpdated onSystemCapabilityUpdated = (OnSystemCapabilityUpdated) message;\n                                 if (onSystemCapabilityUpdated.getSystemCapability() != null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUzODI4NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r402538285", "bodyText": "Indentation?", "author": "joeljfischer", "createdAt": "2020-04-02T18:51:59Z", "path": "base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java", "diffHunk": "@@ -325,11 +336,12 @@ public void onReceived(RPCMessage message) {\n             }\n         };\n \n-        if (callback != null) {\n-        \tcallback.addOnRPCListener(FunctionID.GET_SYSTEM_CAPABILITY, rpcListener);\n-            callback.addOnRPCListener(FunctionID.SET_DISPLAY_LAYOUT, rpcListener);\n-            callback.addOnRPCListener(FunctionID.ON_SYSTEM_CAPABILITY_UPDATED, rpcListener);\n-        }\n+\t\tif (callback != null) {\n+\t\t\tcallback.addOnRPCListener(FunctionID.GET_SYSTEM_CAPABILITY, rpcListener);\n+\t\t\tcallback.addOnRPCListener(FunctionID.SET_DISPLAY_LAYOUT, rpcListener);\n+\t\t\tcallback.addOnRPCListener(FunctionID.ON_SYSTEM_CAPABILITY_UPDATED, rpcListener);\n+\t\t\tcallback.addOnRPCListener(FunctionID.ON_HMI_STATUS, rpcListener);\n+\t\t}", "originalCommit": "d9340f4a3bd113c9f85b41c770d68b3a94d21d11", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java b/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\nindex 764ac8af8..abce3a4f8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java\n\n@@ -296,45 +296,45 @@ public class SystemCapabilityManager {\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\tcurrentHMILevel = onHMIStatus.getHmiLevel();\n \t\t\t\t\t\t\t\tbreak;\n-                            case ON_SYSTEM_CAPABILITY_UPDATED:\n-                                OnSystemCapabilityUpdated onSystemCapabilityUpdated = (OnSystemCapabilityUpdated) message;\n-                                if (onSystemCapabilityUpdated.getSystemCapability() != null) {\n-                                    SystemCapability systemCapability = onSystemCapabilityUpdated.getSystemCapability();\n-                                    SystemCapabilityType systemCapabilityType = systemCapability.getSystemCapabilityType();\n-                                    Object capability = systemCapability.getCapabilityForType(systemCapabilityType);\n-                                    if (cachedSystemCapabilities.containsKey(systemCapabilityType)) { //The capability already exists\n-                                        switch (systemCapabilityType) {\n-                                            case APP_SERVICES:\n-                                                // App services only updates what was changed so we need\n-                                                // to update the capability rather than override it\n-                                                AppServicesCapabilities appServicesCapabilities = (AppServicesCapabilities) capability;\n-                                                if (capability != null) {\n-                                                    List<AppServiceCapability> appServicesCapabilitiesList = appServicesCapabilities.getAppServices();\n-                                                    AppServicesCapabilities cachedAppServicesCapabilities = (AppServicesCapabilities) cachedSystemCapabilities.get(systemCapabilityType);\n-                                                    //Update the cached app services\n-                                                    if (cachedAppServicesCapabilities != null) {\n-                                                    \tcachedAppServicesCapabilities.updateAppServices(appServicesCapabilitiesList);\n-                                                    }\n-                                                    //Set the new capability object to the updated cached capabilities\n-                                                    capability = cachedAppServicesCapabilities;\n-                                                }\n-                                                break;\n-                                            case DISPLAYS:\n-                                                shouldConvertDeprecatedDisplayCapabilities = false; // Successfully got DISPLAYS data. No conversion needed anymore\n-                                                // this notification can return only affected windows (hence not all windows)\n-                                                List<DisplayCapability> newCapabilities = (List<DisplayCapability>) capability;\n-                                                updateCachedDisplayCapabilityList(newCapabilities);\n-                                        }\n-                                    }\n-                                    if (capability != null) {\n-                                        setCapability(systemCapabilityType, capability);\n-                                    }\n-                                }\n-                        }\n-                    }\n-                }\n-            }\n-        };\n+\t\t\t\t\t\t\tcase ON_SYSTEM_CAPABILITY_UPDATED:\n+\t\t\t\t\t\t\t\tOnSystemCapabilityUpdated onSystemCapabilityUpdated = (OnSystemCapabilityUpdated) message;\n+\t\t\t\t\t\t\t\tif (onSystemCapabilityUpdated.getSystemCapability() != null) {\n+\t\t\t\t\t\t\t\t\tSystemCapability systemCapability = onSystemCapabilityUpdated.getSystemCapability();\n+\t\t\t\t\t\t\t\t\tSystemCapabilityType systemCapabilityType = systemCapability.getSystemCapabilityType();\n+\t\t\t\t\t\t\t\t\tObject capability = systemCapability.getCapabilityForType(systemCapabilityType);\n+\t\t\t\t\t\t\t\t\tif (cachedSystemCapabilities.containsKey(systemCapabilityType)) { //The capability already exists\n+\t\t\t\t\t\t\t\t\t\tswitch (systemCapabilityType) {\n+\t\t\t\t\t\t\t\t\t\t\tcase APP_SERVICES:\n+\t\t\t\t\t\t\t\t\t\t\t\t// App services only updates what was changed so we need\n+\t\t\t\t\t\t\t\t\t\t\t\t// to update the capability rather than override it\n+\t\t\t\t\t\t\t\t\t\t\t\tAppServicesCapabilities appServicesCapabilities = (AppServicesCapabilities) capability;\n+\t\t\t\t\t\t\t\t\t\t\t\tif (capability != null) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\tList<AppServiceCapability> appServicesCapabilitiesList = appServicesCapabilities.getAppServices();\n+\t\t\t\t\t\t\t\t\t\t\t\t\tAppServicesCapabilities cachedAppServicesCapabilities = (AppServicesCapabilities) cachedSystemCapabilities.get(systemCapabilityType);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t//Update the cached app services\n+\t\t\t\t\t\t\t\t\t\t\t\t\tif (cachedAppServicesCapabilities != null) {\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\tcachedAppServicesCapabilities.updateAppServices(appServicesCapabilitiesList);\n+\t\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t\t\t\t\t//Set the new capability object to the updated cached capabilities\n+\t\t\t\t\t\t\t\t\t\t\t\t\tcapability = cachedAppServicesCapabilities;\n+\t\t\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t\t\t\t\t\tcase DISPLAYS:\n+\t\t\t\t\t\t\t\t\t\t\t\tshouldConvertDeprecatedDisplayCapabilities = false; // Successfully got DISPLAYS data. No conversion needed anymore\n+\t\t\t\t\t\t\t\t\t\t\t\t// this notification can return only affected windows (hence not all windows)\n+\t\t\t\t\t\t\t\t\t\t\t\tList<DisplayCapability> newCapabilities = (List<DisplayCapability>) capability;\n+\t\t\t\t\t\t\t\t\t\t\t\tupdateCachedDisplayCapabilityList(newCapabilities);\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tif (capability != null) {\n+\t\t\t\t\t\t\t\t\t\tsetCapability(systemCapabilityType, capability);\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t};\n \n \t\tif (callback != null) {\n \t\t\tcallback.addOnRPCListener(FunctionID.GET_SYSTEM_CAPABILITY, rpcListener);\n"}}, {"oid": "416188dc8a9afd69756d16705a44fe735b5bedbd", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/416188dc8a9afd69756d16705a44fe735b5bedbd", "message": "Fix Indentation issues in SCM", "committedDate": "2020-04-03T14:20:05Z", "type": "commit"}, {"oid": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "message": "Fix Indentation issues in SCM", "committedDate": "2020-04-03T14:22:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NTQwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405595401", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (proxy.getSystemCapabilityManager() != null) {\n          \n          \n            \n            \t\t\tif (proxy != null && proxy.getSystemCapabilityManager() != null) {", "author": "joeygrover", "createdAt": "2020-04-08T15:05:20Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java", "diffHunk": "@@ -866,6 +866,14 @@ public void getCapability(SystemCapabilityType systemCapabilityType, OnSystemCap\n \t\t\tproxy.getCapability(systemCapabilityType, scListener);\n \t\t}\n \n+\t\t@Override\n+\t\tpublic Object getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener, boolean forceUpdate) {\n+\t\t\tif (proxy.getSystemCapabilityManager() != null) {", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a7a25302033513ee7bfd86885f2725fb73698c6", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java b/android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java\nindex 2fa31cbd8..6cbdf85d8 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java\n\n@@ -868,7 +868,7 @@ public class SdlManager extends BaseSdlManager{\n \n \t\t@Override\n \t\tpublic Object getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener, boolean forceUpdate) {\n-\t\t\tif (proxy.getSystemCapabilityManager() != null) {\n+\t\t\tif (proxy != null && proxy.getSystemCapabilityManager() != null) {\n \t\t\t\treturn proxy.getSystemCapabilityManager().getCapability(systemCapabilityType, scListener, forceUpdate);\n \t\t\t}\n \t\t\treturn null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NjA0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405596046", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (!hmiLevel.equals(HMILevel.HMI_NONE) && VideoStreamManager.this.parameters == null) {\n          \n          \n            \n            \t\t\t\tif (!HMILevel.HMI_NONE.equals(hmiLevel) && VideoStreamManager.this.parameters == null) {", "author": "joeygrover", "createdAt": "2020-04-08T15:06:15Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java", "diffHunk": "@@ -151,6 +151,9 @@ public void onNotified(RPCNotification notification) {\n \t\t\t\t}\n \t\t\t\tHMILevel prevHMILevel = hmiLevel;\n \t\t\t\thmiLevel = onHMIStatus.getHmiLevel();\n+\t\t\t\tif (!hmiLevel.equals(HMILevel.HMI_NONE) && VideoStreamManager.this.parameters == null) {", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NjQyMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405596422", "bodyText": "Avoids an NPE if hmiLevel is null but doesn't need an NPE check explicitly.", "author": "joeygrover", "createdAt": "2020-04-08T15:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NjA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ce273f914a1f1b30446bc1bbac8cee75ee8a05ad", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java b/android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java\nindex 93e591365..96b73148d 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java\n\n@@ -151,7 +151,7 @@ public class VideoStreamManager extends BaseVideoStreamManager {\n \t\t\t\t}\n \t\t\t\tHMILevel prevHMILevel = hmiLevel;\n \t\t\t\thmiLevel = onHMIStatus.getHmiLevel();\n-\t\t\t\tif (!hmiLevel.equals(HMILevel.HMI_NONE) && VideoStreamManager.this.parameters == null) {\n+\t\t\t\tif (!HMILevel.HMI_NONE.equals(hmiLevel) && VideoStreamManager.this.parameters == null) {\n \t\t\t\t\tgetVideoStreamingParams();\n \t\t\t\t}\n \t\t\t\tif(hmiLevel.equals(HMILevel.HMI_FULL)){\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5ODMxMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405598313", "bodyText": "Is this what iOS does? IMO our currentHMILevel would be none until we are at least registered on the IVI and even then we are inferring that. However, I'm not sure if it makes much of a difference to simply put this as the initial state or not so if it is what iOS does then this comment can be resolved without action.", "author": "joeygrover", "createdAt": "2020-04-08T15:09:26Z", "path": "base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java", "diffHunk": "@@ -78,14 +80,17 @@\n \tprivate final ISdl callback;\n \tprivate OnRPCListener rpcListener;\n \tprivate boolean shouldConvertDeprecatedDisplayCapabilities;\n+\tprivate HMILevel currentHMILevel;\n \n \tpublic SystemCapabilityManager(ISdl callback) {\n \t\tthis.callback = callback;\n \t\tthis.LISTENER_LOCK = new Object();\n \t\tthis.onSystemCapabilityListeners = new HashMap<>();\n \t\tthis.cachedSystemCapabilities = new HashMap<>();\n \t\tthis.systemCapabilitiesSubscriptionStatus = new HashMap<>();\n+\t\tthis.systemCapabilitiesSubscriptionStatus.put(SystemCapabilityType.DISPLAYS, true);\n \t\tthis.shouldConvertDeprecatedDisplayCapabilities = true;\n+\t\tthis.currentHMILevel = HMILevel.HMI_NONE;", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxMzU5MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405713590", "bodyText": "Yes, iOS does a similar thing: https://github.com/smartdevicelink/sdl_ios/blob/4f650efc70d853d31b14ccc3e64210f192f3f9b7/SmartDeviceLink/SDLSystemCapabilityManager.m#L97", "author": "bilal-alsharifi", "createdAt": "2020-04-08T18:04:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5ODMxMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjU0Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405602543", "bodyText": "Do we need the message variable here, or couldn't this simply be inline with the DebugTool call?", "author": "joeygrover", "createdAt": "2020-04-08T15:15:07Z", "path": "base/src/main/java/com/smartdevicelink/proxy/SystemCapabilityManager.java", "diffHunk": "@@ -541,6 +555,15 @@ public boolean removeOnSystemCapabilityListener(final SystemCapabilityType syste\n \t * @param subscribe flag to subscribe to updates of the supplied capability type. True means subscribe; false means cancel subscription; null means don't change current subscription status.\n \t */\n \tprivate void retrieveCapability(final SystemCapabilityType systemCapabilityType, final OnSystemCapabilityListener scListener, final Boolean subscribe) {\n+\t\tif (currentHMILevel != null && currentHMILevel.equals(HMILevel.HMI_NONE)) {\n+\t\t\tString message = String.format(\"Attempted to update type: %s in HMI level NONE, which is not allowed. \" +\n+\t\t\t\t\t\"Please wait until you are in HMI BACKGROUND, LIMITED, or FULL before attempting to update any SystemCapabilityType\", systemCapabilityType);\n+\t\t\tDebugTool.logError(message);", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxNDYxMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405714610", "bodyText": "I stored the message in var so I can reuse it when I call scListener.onError(message)", "author": "bilal-alsharifi", "createdAt": "2020-04-08T18:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjU0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjkyOA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405602928", "bodyText": "Please add javadoc as to what method should be used instead of this one because of deprecation.", "author": "joeygrover", "createdAt": "2020-04-08T15:15:40Z", "path": "base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java", "diffHunk": "@@ -208,6 +208,7 @@\n      * @param systemCapabilityType a system capability type that should be retrieved\n      * @return the system capability provided if available, null if not\n      */\n+    @Deprecated", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxOTE0MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405719140", "bodyText": "I will add that to deprecated methods here and in SCM", "author": "bilal-alsharifi", "createdAt": "2020-04-08T18:13:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "89f4f1de22f213c67a665451df551ece890693c9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java b/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\nindex e3dcfca8d..9a5674492 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\n\n@@ -207,6 +207,7 @@ public interface ISdl {\n      * Get SystemCapability Object\n      * @param systemCapabilityType a system capability type that should be retrieved\n      * @return the system capability provided if available, null if not\n+     * @deprecated use {@link #getCapability(SystemCapabilityType, OnSystemCapabilityListener, boolean)} instead.\n      */\n     @Deprecated\n     Object getCapability(SystemCapabilityType systemCapabilityType);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwMjk5MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405602990", "bodyText": "Please add javadoc as to what method should be used instead of this one because of deprecation.", "author": "joeygrover", "createdAt": "2020-04-08T15:15:45Z", "path": "base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java", "diffHunk": "@@ -216,8 +217,18 @@\n      * @param scListener listener that will be called when the system capability is retrieved. If already cached, it\n      *                   will be called immediately\n      */\n+    @Deprecated", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89f4f1de22f213c67a665451df551ece890693c9", "chunk": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java b/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\nindex e3dcfca8d..9a5674492 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/interfaces/ISdl.java\n\n@@ -216,6 +217,7 @@ public interface ISdl {\n      * @param systemCapabilityType a system capability type that should be retrieved\n      * @param scListener listener that will be called when the system capability is retrieved. If already cached, it\n      *                   will be called immediately\n+     * @deprecated use {@link #getCapability(SystemCapabilityType, OnSystemCapabilityListener, boolean)} instead.\n      */\n     @Deprecated\n     void getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYwNDA2Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1321#discussion_r405604062", "bodyText": "There should probably be some null checks here and in the isCapabilitySupported methods to make sure that LifecycleManager.this.systemCapabilityManager isn't null before simply accessing it.", "author": "joeygrover", "createdAt": "2020-04-08T15:17:15Z", "path": "javaSE/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java", "diffHunk": "@@ -1145,6 +1145,11 @@ public void getCapability(SystemCapabilityType systemCapabilityType, OnSystemCap\n \n         }\n \n+        @Override\n+        public Object getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener, boolean forceUpdate) {\n+            return LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType, scListener, forceUpdate);", "originalCommit": "4dd9dff6eb45603dc963076f3dc0a4069e48d67a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fb483682f1f36d49f68225069afbece15c5074fb", "chunk": "diff --git a/javaSE/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java b/javaSE/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\nindex 788d3d481..5fc8d6c57 100644\n--- a/javaSE/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n+++ b/javaSE/src/main/java/com/smartdevicelink/managers/lifecycle/LifecycleManager.java\n\n@@ -1136,34 +1136,52 @@ public class LifecycleManager extends BaseLifecycleManager {\n \n         @Override\n         public Object getCapability(SystemCapabilityType systemCapabilityType) {\n-            return LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType);\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                return LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType);\n+            } else {\n+                return null;\n+            }\n         }\n \n         @Override\n         public void getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener) {\n-            LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType,scListener);\n-\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType, scListener);\n+            }\n         }\n \n         @Override\n         public Object getCapability(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener scListener, boolean forceUpdate) {\n-            return LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType, scListener, forceUpdate);\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                return LifecycleManager.this.systemCapabilityManager.getCapability(systemCapabilityType, scListener, forceUpdate);\n+            } else {\n+                return null;\n+            }\n         }\n \n         @Override\n         public boolean isCapabilitySupported(SystemCapabilityType systemCapabilityType) {\n-            return LifecycleManager.this.systemCapabilityManager.isCapabilitySupported(systemCapabilityType);\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                return LifecycleManager.this.systemCapabilityManager.isCapabilitySupported(systemCapabilityType);\n+            } else {\n+                return false;\n+            }\n         }\n \n         @Override\n         public void addOnSystemCapabilityListener(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener listener) {\n-            LifecycleManager.this.systemCapabilityManager.addOnSystemCapabilityListener(systemCapabilityType,listener);\n-\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                LifecycleManager.this.systemCapabilityManager.addOnSystemCapabilityListener(systemCapabilityType, listener);\n+            }\n         }\n \n         @Override\n         public boolean removeOnSystemCapabilityListener(SystemCapabilityType systemCapabilityType, OnSystemCapabilityListener listener) {\n-            return LifecycleManager.this.systemCapabilityManager.removeOnSystemCapabilityListener(systemCapabilityType,listener);\n+            if (LifecycleManager.this.systemCapabilityManager != null) {\n+                return LifecycleManager.this.systemCapabilityManager.removeOnSystemCapabilityListener(systemCapabilityType, listener);\n+            } else {\n+                return false;\n+            }\n         }\n \n         @Override\n"}}, {"oid": "0a7a25302033513ee7bfd86885f2725fb73698c6", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/0a7a25302033513ee7bfd86885f2725fb73698c6", "message": "Update android/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java\n\nCo-Authored-By: Joey Grover <joeygrover@gmail.com>", "committedDate": "2020-04-08T17:46:02Z", "type": "commit"}, {"oid": "ce273f914a1f1b30446bc1bbac8cee75ee8a05ad", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ce273f914a1f1b30446bc1bbac8cee75ee8a05ad", "message": "Update android/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java\n\nCo-Authored-By: Joey Grover <joeygrover@gmail.com>", "committedDate": "2020-04-08T17:46:41Z", "type": "commit"}, {"oid": "fb483682f1f36d49f68225069afbece15c5074fb", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/fb483682f1f36d49f68225069afbece15c5074fb", "message": "Add some null checks to LifecycleManager", "committedDate": "2020-04-08T17:58:15Z", "type": "commit"}, {"oid": "89f4f1de22f213c67a665451df551ece890693c9", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/89f4f1de22f213c67a665451df551ece890693c9", "message": "Add use @link Javadoc annotation to ISdl and SCM", "committedDate": "2020-04-08T18:13:08Z", "type": "commit"}, {"oid": "f119e40af55c2ce1e5014f6c1d647b2fce7f68ff", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f119e40af55c2ce1e5014f6c1d647b2fce7f68ff", "message": "Merge branch 'develop' into feature/scm_align_part3\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/proxy/SystemCapabilityManagerTests.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/managers/SdlManager.java\n#\tandroid/sdl_android/src/main/java/com/smartdevicelink/managers/video/VideoStreamManager.java", "committedDate": "2020-04-08T18:42:00Z", "type": "commit"}]}