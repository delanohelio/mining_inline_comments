{"pr_number": 1347, "pr_title": "Bugfix/issue_1343 foreground permissions exception", "pr_createdAt": "2020-05-13T14:53:38Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347", "timeline": [{"oid": "efa9416df313d372546b0440815d9983171b33d2", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/efa9416df313d372546b0440815d9983171b33d2", "message": "Check permissions before trying to startForeground", "committedDate": "2020-05-13T14:42:05Z", "type": "commit"}, {"oid": "3584f04e8d85ebacb9c7012ea22abf642c828d46", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3584f04e8d85ebacb9c7012ea22abf642c828d46", "message": "Remove output.json file", "committedDate": "2020-05-13T15:00:51Z", "type": "commit"}, {"oid": "5b60db1cbfa0a8eb6e7e27927bd55bf610e4a546", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5b60db1cbfa0a8eb6e7e27927bd55bf610e4a546", "message": "Establish safeStartForeground in AndroidTools", "committedDate": "2020-05-13T19:35:37Z", "type": "commit"}, {"oid": "919bf5923aa1550148620803e2006d357a3710de", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/919bf5923aa1550148620803e2006d357a3710de", "message": "Implement AndroidTools.safeStartForegroundService", "committedDate": "2020-05-13T19:51:03Z", "type": "commit"}, {"oid": "2607bdd8e6aae1043512429572ae61461232c7e1", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2607bdd8e6aae1043512429572ae61461232c7e1", "message": "Bring safestart back to SdlRouterService", "committedDate": "2020-05-14T17:11:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MDM1Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426780357", "bodyText": "unused import", "author": "bilal-alsharifi", "createdAt": "2020-05-18T17:19:57Z", "path": "android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlReceiver.java", "diffHunk": "@@ -1,12 +1,15 @@\n package com.sdl.hellosdlandroid;\n \n+import android.Manifest;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Build;\n import android.util.Log;\n \n import com.smartdevicelink.transport.SdlBroadcastReceiver;\n import com.smartdevicelink.transport.SdlRouterService;\n+import com.smartdevicelink.util.AndroidTools;\n+import com.smartdevicelink.util.DebugTool;", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMjYxMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426902613", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:27:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MDM1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlReceiver.java b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlReceiver.java\nindex 6b9a7ee8c..0b7981472 100755\n--- a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlReceiver.java\n+++ b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlReceiver.java\n\n@@ -1,6 +1,5 @@\n package com.sdl.hellosdlandroid;\n \n-import android.Manifest;\n import android.content.Context;\n import android.content.Intent;\n import android.os.Build;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTY4OA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426785688", "bodyText": "Can we remove that change if it only changes the location of the method in the same file? to make it easier to track the actual changes.", "author": "bilal-alsharifi", "createdAt": "2020-05-18T17:29:34Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java", "diffHunk": "@@ -1484,37 +1484,14 @@ private void enterForeground(String content, long chronometerLength, boolean ong\n \t\t\t\t}\n \t\t\t\treturn;\n \t\t\t}\n-\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, notification);\n+\n+\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, builder.build());\n \t\t\tisForeground = true;\n \n \t\t}\n  \n     }\n \n-\t/**", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMzI1OA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426903258", "bodyText": "Moved back, I had put it back to the wrong place after I had originally gotten rid of it.", "author": "RHenigan", "createdAt": "2020-05-18T21:29:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4NTY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\nindex 602d8bab2..826604e84 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\n\n@@ -1485,13 +1484,45 @@ public class SdlRouterService extends Service{\n \t\t\t\treturn;\n \t\t\t}\n \n-\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, builder.build());\n+\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, notification);\n \t\t\tisForeground = true;\n \n \t\t}\n  \n     }\n \n+\t/**\n+\t * This is a simple wrapper around the startForeground method. In the case that the notification\n+\t * is null, or a notification was unable to be created we will still attempt to call the\n+\t * startForeground method in hopes that Android will not throw the System Exception.\n+\t * @param id notification channel id\n+\t * @param notification the notification to display when in the foreground\n+\t */\n+\tprivate void safeStartForeground(int id, Notification notification){\n+\t\tint permission = PackageManager.PERMISSION_GRANTED;\n+\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tpermission = this.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t}\n+\t\ttry{\n+\t\t\tif(notification == null){\n+\t\t\t\t//Try the NotificationCompat this time in case there was a previous error\n+\t\t\t\tNotificationCompat.Builder builder =\n+\t\t\t\t\t\tnew NotificationCompat.Builder(this, SDL_NOTIFICATION_CHANNEL_ID)\n+\t\t\t\t\t\t\t\t.setContentTitle(\"SmartDeviceLink\")\n+\t\t\t\t\t\t\t\t.setContentText(\"Service Running\");\n+\t\t\t\tnotification = builder.build();\n+\t\t\t}\n+\t\t\tif (permission != PackageManager.PERMISSION_DENIED) {\n+\t\t\t\tthis.startForeground(id, notification);\n+\t\t\t\tDebugTool.logInfo(\"Entered the foreground - \" + System.currentTimeMillis());\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n+\t\t\t}\n+\t\t}catch (Exception e){\n+\t\t\tDebugTool.logError(\"Unable to start service in foreground\", e);\n+\t\t}\n+\t}\n+\n \tprivate void exitForeground(){\n \t\tsynchronized (NOTIFICATION_LOCK) {\n \t\t\tif (isForeground && !isPrimaryTransportConnected()) {\t//Ensure that the service is in the foreground and no longer connected to a transport\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4ODI1Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426788252", "bodyText": "Is there a reason for changing the param from notification to builder.build()? as the notification will already be built at this point.", "author": "bilal-alsharifi", "createdAt": "2020-05-18T17:34:19Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java", "diffHunk": "@@ -1484,37 +1484,14 @@ private void enterForeground(String content, long chronometerLength, boolean ong\n \t\t\t\t}\n \t\t\t\treturn;\n \t\t\t}\n-\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, notification);\n+\n+\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, builder.build());", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMzQxNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426903414", "bodyText": "This was a mistake, thanks for catching it", "author": "RHenigan", "createdAt": "2020-05-18T21:29:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4ODI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\nindex 602d8bab2..826604e84 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterService.java\n\n@@ -1485,13 +1484,45 @@ public class SdlRouterService extends Service{\n \t\t\t\treturn;\n \t\t\t}\n \n-\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, builder.build());\n+\t\t\tsafeStartForeground(FOREGROUND_SERVICE_ID, notification);\n \t\t\tisForeground = true;\n \n \t\t}\n  \n     }\n \n+\t/**\n+\t * This is a simple wrapper around the startForeground method. In the case that the notification\n+\t * is null, or a notification was unable to be created we will still attempt to call the\n+\t * startForeground method in hopes that Android will not throw the System Exception.\n+\t * @param id notification channel id\n+\t * @param notification the notification to display when in the foreground\n+\t */\n+\tprivate void safeStartForeground(int id, Notification notification){\n+\t\tint permission = PackageManager.PERMISSION_GRANTED;\n+\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tpermission = this.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t}\n+\t\ttry{\n+\t\t\tif(notification == null){\n+\t\t\t\t//Try the NotificationCompat this time in case there was a previous error\n+\t\t\t\tNotificationCompat.Builder builder =\n+\t\t\t\t\t\tnew NotificationCompat.Builder(this, SDL_NOTIFICATION_CHANNEL_ID)\n+\t\t\t\t\t\t\t\t.setContentTitle(\"SmartDeviceLink\")\n+\t\t\t\t\t\t\t\t.setContentText(\"Service Running\");\n+\t\t\t\tnotification = builder.build();\n+\t\t\t}\n+\t\t\tif (permission != PackageManager.PERMISSION_DENIED) {\n+\t\t\t\tthis.startForeground(id, notification);\n+\t\t\t\tDebugTool.logInfo(\"Entered the foreground - \" + System.currentTimeMillis());\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n+\t\t\t}\n+\t\t}catch (Exception e){\n+\t\t\tDebugTool.logError(\"Unable to start service in foreground\", e);\n+\t\t}\n+\t}\n+\n \tprivate void exitForeground(){\n \t\tsynchronized (NOTIFICATION_LOCK) {\n \t\t\tif (isForeground && !isPrimaryTransportConnected()) {\t//Ensure that the service is in the foreground and no longer connected to a transport\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MzEwNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426793106", "bodyText": "unused import", "author": "bilal-alsharifi", "createdAt": "2020-05-18T17:43:39Z", "path": "android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java", "diffHunk": "@@ -6,6 +6,7 @@\n import android.app.NotificationManager;\n import android.app.Service;\n import android.content.Context;\n+import android.content.ContextWrapper;", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMzQ2NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426903465", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5MzEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\nindex 13ebdaae9..6b7e77c69 100755\n--- a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\n+++ b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\n\n@@ -6,7 +6,6 @@ import android.app.NotificationChannel;\n import android.app.NotificationManager;\n import android.app.Service;\n import android.content.Context;\n-import android.content.ContextWrapper;\n import android.content.Intent;\n import android.os.Build;\n import android.os.IBinder;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NDU0OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426794549", "bodyText": "unused import", "author": "bilal-alsharifi", "createdAt": "2020-05-18T17:46:14Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -44,6 +47,8 @@\n import android.graphics.Bitmap;\n import android.graphics.BitmapFactory;\n import android.os.BatteryManager;\n+import android.os.Build;\n+import android.support.v4.app.NotificationCompat;", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMzU2OA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426903568", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:29:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc5NDU0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex cb488ae26..76e76cc04 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -48,7 +47,7 @@ import android.graphics.Bitmap;\n import android.graphics.BitmapFactory;\n import android.os.BatteryManager;\n import android.os.Build;\n-import android.support.v4.app.NotificationCompat;\n+import android.support.annotation.RequiresApi;\n \n import com.smartdevicelink.transport.TransportConstants;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNDY1MQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426804651", "bodyText": "unused import", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:04:56Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -57,7 +62,12 @@\n import java.util.HashMap;\n import java.util.List;\n \n+import static com.smartdevicelink.transport.TransportConstants.SDL_NOTIFICATION_CHANNEL_ID;", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDA0NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426904045", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNDY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex cb488ae26..76e76cc04 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -62,12 +61,8 @@ import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n \n-import static com.smartdevicelink.transport.TransportConstants.SDL_NOTIFICATION_CHANNEL_ID;\n-\n public class AndroidTools {\n \n-\tpublic static final String SDL_NOTIFICATION_CHANNEL_ID \t\t\t\t\t\t= \"sdl_notification_channel\";\n-\n \t/**\n \t * Check to see if a component is exported\n \t * @param context object used to retrieve the package manager\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNDc0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426804746", "bodyText": "unused variable", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:05:06Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -57,7 +62,12 @@\n import java.util.HashMap;\n import java.util.List;\n \n+import static com.smartdevicelink.transport.TransportConstants.SDL_NOTIFICATION_CHANNEL_ID;\n+\n public class AndroidTools {\n+\n+\tpublic static final String SDL_NOTIFICATION_CHANNEL_ID \t\t\t\t\t\t= \"sdl_notification_channel\";", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMzYxMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426903611", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:29:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgwNDc0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex cb488ae26..76e76cc04 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -62,12 +61,8 @@ import java.util.Comparator;\n import java.util.HashMap;\n import java.util.List;\n \n-import static com.smartdevicelink.transport.TransportConstants.SDL_NOTIFICATION_CHANNEL_ID;\n-\n public class AndroidTools {\n \n-\tpublic static final String SDL_NOTIFICATION_CHANNEL_ID \t\t\t\t\t\t= \"sdl_notification_channel\";\n-\n \t/**\n \t * Check to see if a component is exported\n \t * @param context object used to retrieve the package manager\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNzk0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426817946", "bodyText": "We should reuse the static function\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tint permission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n          \n          \n            \n            \t\t\tif (permission != -1) {\n          \n          \n            \n            \t\t\t\tAndroidTools.safeStartForegroundService(context, bindingIntent);\n          \n          \n            \n            \t\t\t} else {\n          \n          \n            \n            \t\t\t\tDebugTool.logError(\"Foreground Permissions Not Enabled: will not start foreground permissions\");\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t\tAndroidTools.safeStartForegroundService(context, bindingIntent);", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:30:53Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterStatusProvider.java", "diffHunk": "@@ -134,8 +136,12 @@ private boolean bindToService(){\n \t\t}else {\n \t\t\tbindingIntent.putExtra(FOREGROUND_EXTRA, true);\n \t\t\tSdlBroadcastReceiver.setForegroundExceptionHandler(); //Prevent ANR in case the OS takes too long to start the service\n-\t\t\tcontext.startForegroundService(bindingIntent);\n-\n+\t\t\tint permission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t\tif (permission != -1) {\n+\t\t\t\tAndroidTools.safeStartForegroundService(context, bindingIntent);\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"Foreground Permissions Not Enabled: will not start foreground permissions\");\n+\t\t\t}", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDI3OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426904279", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:31:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNzk0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterStatusProvider.java b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterStatusProvider.java\nindex 56adb8f8f..4332c3267 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterStatusProvider.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/transport/SdlRouterStatusProvider.java\n\n@@ -136,12 +134,7 @@ public class SdlRouterStatusProvider {\n \t\t}else {\n \t\t\tbindingIntent.putExtra(FOREGROUND_EXTRA, true);\n \t\t\tSdlBroadcastReceiver.setForegroundExceptionHandler(); //Prevent ANR in case the OS takes too long to start the service\n-\t\t\tint permission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n-\t\t\tif (permission != -1) {\n-\t\t\t\tAndroidTools.safeStartForegroundService(context, bindingIntent);\n-\t\t\t} else {\n-\t\t\t\tDebugTool.logError(\"Foreground Permissions Not Enabled: will not start foreground permissions\");\n-\t\t\t}\n+\t\t\tAndroidTools.safeStartForegroundService(context, bindingIntent);\n \t\t}\n \t\tbindingIntent.setAction( TransportConstants.BIND_REQUEST_TYPE_STATUS);\n \t\treturn context.bindService(bindingIntent, routerConnection, Context.BIND_AUTO_CREATE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxOTEyNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426819125", "bodyText": "This function is not needed and should be removed as it already exists in the RS class. Adding new public APIs should always be avoided when possible.", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:33:16Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -191,4 +201,60 @@ public static Bitmap downloadImage(String urlStr) throws IOException {\n \t\tbis.close();\n \t\treturn result;\n \t}\n+\n+\t/**\n+\t * This is a wrapper around the startForeground method. In the case that the notification\n+\t * is null, or a notification was unable to be created we will still attempt to call the\n+\t * startForeground method in hopes that Android will not throw the System Exception. In the\n+\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n+\t * before trying to call startForeground.\n+\t * @param service a service instance\n+\t * @param context a context instance\n+\t * @param id notification channel id\n+\t * @param notification the notification to display when in the foreground\n+\t */\n+\tpublic static void safeStartForeground(Service service, Context context, int id, Notification notification){", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDM3MQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426904371", "bodyText": "removed", "author": "RHenigan", "createdAt": "2020-05-18T21:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxOTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDY3NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426904674", "bodyText": "to investigate if this logic is needed in SdlRouterService implementation", "author": "RHenigan", "createdAt": "2020-05-18T21:32:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxOTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzOTkyNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r427339925", "bodyText": "According to android documentation startForeground startForeground will not actually put the service in the started state, startService or startForegroundService needs to be called first which will verify the permissions", "author": "RHenigan", "createdAt": "2020-05-19T14:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxOTEyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex cb488ae26..76e76cc04 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -202,34 +197,6 @@ public class AndroidTools {\n \t\treturn result;\n \t}\n \n-\t/**\n-\t * This is a wrapper around the startForeground method. In the case that the notification\n-\t * is null, or a notification was unable to be created we will still attempt to call the\n-\t * startForeground method in hopes that Android will not throw the System Exception. In the\n-\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n-\t * before trying to call startForeground.\n-\t * @param service a service instance\n-\t * @param context a context instance\n-\t * @param id notification channel id\n-\t * @param notification the notification to display when in the foreground\n-\t */\n-\tpublic static void safeStartForeground(Service service, Context context, int id, Notification notification){\n-\t\tint permission = PackageManager.PERMISSION_GRANTED;\n-\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {\n-\t\t\tpermission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n-\t\t}\n-\t\ttry{\n-\t\t\tif (permission != PackageManager.PERMISSION_DENIED) {\n-\t\t\t\tservice.startForeground(id, notification);\n-\t\t\t\tDebugTool.logInfo(\"Entered the foreground - \" + System.currentTimeMillis());\n-\t\t\t} else {\n-\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n-\t\t\t}\n-\t\t}catch (Exception e){\n-\t\t\tDebugTool.logError(\"Unable to start service in foreground\", e);\n-\t\t}\n-\t}\n-\n \t/**\n \t * This is a wrapper around the startForegroundService method. In the\n \t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMDQyMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426820421", "bodyText": "This change should be reverted back as the flow will not reach this phase if the permission is not added && the Android version is P or above. Also, the AndroidTools import should be removed.", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:35:57Z", "path": "android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java", "diffHunk": "@@ -105,7 +107,11 @@ public void enterForeground() {\n \t\t\t\t\t\t.setContentTitle(\"Connected through SDL\")\n \t\t\t\t\t\t.setSmallIcon(R.drawable.ic_sdl)\n \t\t\t\t\t\t.build();\n-\t\t\t\tstartForeground(FOREGROUND_SERVICE_ID, serviceNotification);\n+\t\t\t\ttry {", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDkwNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426904906", "bodyText": "updated", "author": "RHenigan", "createdAt": "2020-05-18T21:32:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyMDQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\nindex 13ebdaae9..6b7e77c69 100755\n--- a/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\n+++ b/android/hello_sdl_android/src/main/java/com/sdl/hellosdlandroid/SdlService.java\n\n@@ -107,11 +105,7 @@ public class SdlService extends Service {\n \t\t\t\t\t\t.setContentTitle(\"Connected through SDL\")\n \t\t\t\t\t\t.setSmallIcon(R.drawable.ic_sdl)\n \t\t\t\t\t\t.build();\n-\t\t\t\ttry {\n-\t\t\t\t\tAndroidTools.safeStartForeground(this, this, FOREGROUND_SERVICE_ID, serviceNotification);\n-\t\t\t\t} catch (Exception e){\n-\t\t\t\t\tDebugTool.logError(\"Unable to start notification service in the foreground\", e);\n-\t\t\t\t}\n+\t\t\t\tstartForeground(FOREGROUND_SERVICE_ID, serviceNotification);\n \t\t\t}\n \t\t}\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyOTEyMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426829123", "bodyText": "This needs some modifications:\n\nIt should check the permission when Android >= P (currently it checks if Android < P)\nIt should still throw the exception in debug mode to let developers know that they are missing the permission\nAdd RequiresApi annotation as the method should only be used for Android O and above\n\n@RequiresApi(api = Build.VERSION_CODES.O)\npublic static ComponentName safeStartForegroundService(Context context, Intent intent) {\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n        boolean inDebugMode = (0 != (context.getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE));\n        boolean permissionGranted = PackageManager.PERMISSION_GRANTED == context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n        if (inDebugMode || permissionGranted) {\n            return context.startForegroundService(intent);\n        } else {\n            DebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n        }\n    } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {\n        return context.startForegroundService(intent);\n    } else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n        DebugTool.logError(\"startForegroundService() call requires Android Oreo or newer\");\n    }\n    return null;\n}", "author": "bilal-alsharifi", "createdAt": "2020-05-18T18:53:01Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -191,4 +201,60 @@ public static Bitmap downloadImage(String urlStr) throws IOException {\n \t\tbis.close();\n \t\treturn result;\n \t}\n+\n+\t/**\n+\t * This is a wrapper around the startForeground method. In the case that the notification\n+\t * is null, or a notification was unable to be created we will still attempt to call the\n+\t * startForeground method in hopes that Android will not throw the System Exception. In the\n+\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n+\t * before trying to call startForeground.\n+\t * @param service a service instance\n+\t * @param context a context instance\n+\t * @param id notification channel id\n+\t * @param notification the notification to display when in the foreground\n+\t */\n+\tpublic static void safeStartForeground(Service service, Context context, int id, Notification notification){\n+\t\tint permission = PackageManager.PERMISSION_GRANTED;\n+\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {\n+\t\t\tpermission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t}\n+\t\ttry{\n+\t\t\tif (permission != PackageManager.PERMISSION_DENIED) {\n+\t\t\t\tservice.startForeground(id, notification);\n+\t\t\t\tDebugTool.logInfo(\"Entered the foreground - \" + System.currentTimeMillis());\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n+\t\t\t}\n+\t\t}catch (Exception e){\n+\t\t\tDebugTool.logError(\"Unable to start service in foreground\", e);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * This is a wrapper around the startForegroundService method. In the\n+\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n+\t * before trying to call startForegroundService.\n+\t * @param context a context instance\n+\t * @param intent the foreground service intent\n+\t * @return a ComponentName, an identifier for the started service, will return null is service\n+\t * was unable to start\n+\t */\n+\tpublic static ComponentName safeStartForegroundService(Context context, Intent intent){", "originalCommit": "2607bdd8e6aae1043512429572ae61461232c7e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNTAzMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r426905031", "bodyText": "Changes made", "author": "RHenigan", "createdAt": "2020-05-18T21:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyOTEyMw=="}], "type": "inlineReview", "revised_code": {"commit": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex cb488ae26..76e76cc04 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -202,34 +197,6 @@ public class AndroidTools {\n \t\treturn result;\n \t}\n \n-\t/**\n-\t * This is a wrapper around the startForeground method. In the case that the notification\n-\t * is null, or a notification was unable to be created we will still attempt to call the\n-\t * startForeground method in hopes that Android will not throw the System Exception. In the\n-\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n-\t * before trying to call startForeground.\n-\t * @param service a service instance\n-\t * @param context a context instance\n-\t * @param id notification channel id\n-\t * @param notification the notification to display when in the foreground\n-\t */\n-\tpublic static void safeStartForeground(Service service, Context context, int id, Notification notification){\n-\t\tint permission = PackageManager.PERMISSION_GRANTED;\n-\t\tif (Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {\n-\t\t\tpermission = context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n-\t\t}\n-\t\ttry{\n-\t\t\tif (permission != PackageManager.PERMISSION_DENIED) {\n-\t\t\t\tservice.startForeground(id, notification);\n-\t\t\t\tDebugTool.logInfo(\"Entered the foreground - \" + System.currentTimeMillis());\n-\t\t\t} else {\n-\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n-\t\t\t}\n-\t\t}catch (Exception e){\n-\t\t\tDebugTool.logError(\"Unable to start service in foreground\", e);\n-\t\t}\n-\t}\n-\n \t/**\n \t * This is a wrapper around the startForegroundService method. In the\n \t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n"}}, {"oid": "527a7c86c4b0227dce18b0018f89d3e9049e9d90", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/527a7c86c4b0227dce18b0018f89d3e9049e9d90", "message": "Feedback fixes", "committedDate": "2020-05-18T21:15:13Z", "type": "commit"}, {"oid": "d8d3bfc7559e123048e532bbe937fcd0518a22e2", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/d8d3bfc7559e123048e532bbe937fcd0518a22e2", "message": "safeStartforeground does not need permission check", "committedDate": "2020-05-19T14:10:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4OTI4NA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r427489284", "bodyText": "I have just learned that there are two versions of Android O (VERSION_CODES.O= 26 & VERSION_CODES.O_MR1 = 27) and they both don't require the foreground permission. So I updated the code accordingly\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t} else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {\n          \n          \n            \n            \t\t\treturn context.startForegroundService(intent);\n          \n          \n            \n            \t\t} else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n          \n          \n            \n            \t\t\tDebugTool.logError(\"startForegroundService() call requires Android Oreo or newer\");\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\t} else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n          \n          \n            \n            \t\t\treturn context.startForegroundService(intent);\n          \n          \n            \n            \t\t}", "author": "bilal-alsharifi", "createdAt": "2020-05-19T17:50:30Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -191,4 +196,31 @@ public static Bitmap downloadImage(String urlStr) throws IOException {\n \t\tbis.close();\n \t\treturn result;\n \t}\n+\n+\t/**\n+\t * This is a wrapper around the startForegroundService method. In the\n+\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n+\t * before trying to call startForegroundService.\n+\t * @param context a context instance\n+\t * @param intent the foreground service intent\n+\t * @return a ComponentName, an identifier for the started service, will return null is service\n+\t * was unable to start\n+\t */\n+\t@RequiresApi(api = Build.VERSION_CODES.O)\n+\tpublic static ComponentName safeStartForegroundService(Context context, Intent intent) {\n+\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tboolean inDebugMode = (0 != (context.getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE));\n+\t\t\tboolean permissionGranted = PackageManager.PERMISSION_GRANTED == context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t\tif (inDebugMode || permissionGranted) {\n+\t\t\t\treturn context.startForegroundService(intent);\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n+\t\t\t}\n+\t\t} else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {\n+\t\t\treturn context.startForegroundService(intent);\n+\t\t} else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n+\t\t\tDebugTool.logError(\"startForegroundService() call requires Android Oreo or newer\");\n+\t\t}", "originalCommit": "d8d3bfc7559e123048e532bbe937fcd0518a22e2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a88586083a9fdc41038ec0c0b86202331621e43f", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex 76e76cc04..3baa52860 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -216,10 +216,8 @@ public class AndroidTools {\n \t\t\t} else {\n \t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n \t\t\t}\n-\t\t} else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {\n+\t\t} else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n \t\t\treturn context.startForegroundService(intent);\n-\t\t} else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n-\t\t\tDebugTool.logError(\"startForegroundService() call requires Android Oreo or newer\");\n \t\t}\n \t\treturn null;\n \t}\n"}}, {"oid": "a88586083a9fdc41038ec0c0b86202331621e43f", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/a88586083a9fdc41038ec0c0b86202331621e43f", "message": "Update android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\nCo-authored-by: Bilal Alsharifi <599206+bilal-alsharifi@users.noreply.github.com>", "committedDate": "2020-05-19T17:58:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5OTc1NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1347#discussion_r427499755", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n          \n          \n            \n            \t\t\t\tDebugTool.logError(\"App is missing FOREGROUND_SERVICE Permission. Sdl will not work.\");", "author": "bilal-alsharifi", "createdAt": "2020-05-19T18:07:11Z", "path": "android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java", "diffHunk": "@@ -191,4 +196,29 @@ public static Bitmap downloadImage(String urlStr) throws IOException {\n \t\tbis.close();\n \t\treturn result;\n \t}\n+\n+\t/**\n+\t * This is a wrapper around the startForegroundService method. In the\n+\t * event that the user is on Android 28+ it will check the FOREGROUND_SERVICE permissions\n+\t * before trying to call startForegroundService.\n+\t * @param context a context instance\n+\t * @param intent the foreground service intent\n+\t * @return a ComponentName, an identifier for the started service, will return null is service\n+\t * was unable to start\n+\t */\n+\t@RequiresApi(api = Build.VERSION_CODES.O)\n+\tpublic static ComponentName safeStartForegroundService(Context context, Intent intent) {\n+\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tboolean inDebugMode = (0 != (context.getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE));\n+\t\t\tboolean permissionGranted = PackageManager.PERMISSION_GRANTED == context.checkPermission(Manifest.permission.FOREGROUND_SERVICE, android.os.Process.myPid(), android.os.Process.myUid());\n+\t\t\tif (inDebugMode || permissionGranted) {\n+\t\t\t\treturn context.startForegroundService(intent);\n+\t\t\t} else {\n+\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");", "originalCommit": "a88586083a9fdc41038ec0c0b86202331621e43f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6274f16950bcc52e234083d70ac00c804c4366ae", "chunk": "diff --git a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\nindex 3baa52860..00e912743 100644\n--- a/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n+++ b/android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\n@@ -214,7 +214,7 @@ public class AndroidTools {\n \t\t\tif (inDebugMode || permissionGranted) {\n \t\t\t\treturn context.startForegroundService(intent);\n \t\t\t} else {\n-\t\t\t\tDebugTool.logError(\"App missing FOREGROUND_SERVICE Permissions\");\n+\t\t\t\tDebugTool.logError(\"App is missing FOREGROUND_SERVICE Permission. Sdl will not work.\");\n \t\t\t}\n \t\t} else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n \t\t\treturn context.startForegroundService(intent);\n"}}, {"oid": "6274f16950bcc52e234083d70ac00c804c4366ae", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/6274f16950bcc52e234083d70ac00c804c4366ae", "message": "Update android/sdl_android/src/main/java/com/smartdevicelink/util/AndroidTools.java\n\nCo-authored-by: Bilal Alsharifi <599206+bilal-alsharifi@users.noreply.github.com>", "committedDate": "2020-05-19T18:08:55Z", "type": "commit"}]}