{"pr_number": 755, "pr_title": "CAM-11665: make integration tests run on Unix systems", "pr_createdAt": "2020-03-24T17:29:04Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/755", "timeline": [{"oid": "1e5fe4f93081a2a77e3e222236b3dfc0d1f98e9f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1e5fe4f93081a2a77e3e222236b3dfc0d1f98e9f", "message": "fix(run): make integration tests run on Unix systems\n\n- avoids copying the unpacked run distribution into the test classpath\n  via the maven resources plugin\n- copying lost the file permissions for the startup scripts,\n  so the integration tests failed\n\nrelated to CAM-11665", "committedDate": "2020-03-25T09:57:18Z", "type": "commit"}, {"oid": "1e5fe4f93081a2a77e3e222236b3dfc0d1f98e9f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1e5fe4f93081a2a77e3e222236b3dfc0d1f98e9f", "message": "fix(run): make integration tests run on Unix systems\n\n- avoids copying the unpacked run distribution into the test classpath\n  via the maven resources plugin\n- copying lost the file permissions for the startup scripts,\n  so the integration tests failed\n\nrelated to CAM-11665", "committedDate": "2020-03-25T09:57:18Z", "type": "forcePushed"}, {"oid": "2cbfd483421d014b34b2960ba3bf3b6b587100cf", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2cbfd483421d014b34b2960ba3bf3b6b587100cf", "message": "* move baseDirectory resolution into container based on system property\n* fix AutoDeploymentIT paths", "committedDate": "2020-03-26T09:51:28Z", "type": "commit"}, {"oid": "84fea9ba3d45dbd77f2c69aa24b407b067ae6af5", "url": "https://github.com/camunda/camunda-bpm-platform/commit/84fea9ba3d45dbd77f2c69aa24b407b067ae6af5", "message": "* fix YAML path on Linux", "committedDate": "2020-03-26T10:04:29Z", "type": "commit"}, {"oid": "311c875c9e948f4cabab51ad3c20a8fef51e4b73", "url": "https://github.com/camunda/camunda-bpm-platform/commit/311c875c9e948f4cabab51ad3c20a8fef51e4b73", "message": "* skip gracefullyTerminateProcess", "committedDate": "2020-03-26T16:08:47Z", "type": "commit"}, {"oid": "45e80ac6bb0ed3887a0e4d4ea51fe62517eae6b6", "url": "https://github.com/camunda/camunda-bpm-platform/commit/45e80ac6bb0ed3887a0e4d4ea51fe62517eae6b6", "message": "kill process group on linux", "committedDate": "2020-03-31T14:18:04Z", "type": "commit"}, {"oid": "cfd27df7c03bb19a4b7efb629f38333b325c075e", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cfd27df7c03bb19a4b7efb629f38333b325c075e", "message": "give the app some time to shutdown", "committedDate": "2020-03-31T15:18:26Z", "type": "commit"}, {"oid": "3cc0aa1697f898a0dbe99a26be0d30712f4ff3e6", "url": "https://github.com/camunda/camunda-bpm-platform/commit/3cc0aa1697f898a0dbe99a26be0d30712f4ff3e6", "message": "extract waiting startup & shutdown procedures", "committedDate": "2020-04-01T07:44:57Z", "type": "commit"}, {"oid": "70ce3ca37abce6227813c487614927c30d36d0df", "url": "https://github.com/camunda/camunda-bpm-platform/commit/70ce3ca37abce6227813c487614927c30d36d0df", "message": "extract config for REST", "committedDate": "2020-04-01T09:39:37Z", "type": "commit"}, {"oid": "70ce3ca37abce6227813c487614927c30d36d0df", "url": "https://github.com/camunda/camunda-bpm-platform/commit/70ce3ca37abce6227813c487614927c30d36d0df", "message": "extract config for REST", "committedDate": "2020-04-01T09:39:37Z", "type": "forcePushed"}, {"oid": "67e14ba4b66d57d3b4b19f753c5f8ee93a710733", "url": "https://github.com/camunda/camunda-bpm-platform/commit/67e14ba4b66d57d3b4b19f753c5f8ee93a710733", "message": "allow more ramp up / down time", "committedDate": "2020-04-01T12:00:10Z", "type": "commit"}, {"oid": "449ce75997f7e0ede9d9a57a12f95f9c8b56f53d", "url": "https://github.com/camunda/camunda-bpm-platform/commit/449ce75997f7e0ede9d9a57a12f95f9c8b56f53d", "message": "javadoc", "committedDate": "2020-04-01T15:43:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxNTQwMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/755#discussion_r401715400", "bodyText": "Why this change from assertj to hamcrest?", "author": "ThorbenLindhauer", "createdAt": "2020-04-01T15:42:48Z", "path": "distro/run/qa/integration-tests/src/test/java/org/camunda/bpm/run/qa/AutoDeploymentIT.java", "diffHunk": "@@ -133,9 +130,9 @@ public void shouldAutoDeployScriptAndForms() throws IOException {\n     // when\n     Response resourcesResponse = when().get(container.getBaseUrl() + DEPLOYMENT_ENDPOINT + \"/\" + deploymentId + \"/resources\");\n     List<String> resourceNames = extractResourceNames(resourcesResponse);\n-    \n+\n     // then\n-    assertThat(resourceNames).contains(\"/form.html\", \"/script.js\");\n+    assertThat(resourceNames, contains(\"/form.html\", \"/script.js\"));", "originalCommit": "67e14ba4b66d57d3b4b19f753c5f8ee93a710733", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNjkzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/755#discussion_r402226936", "bodyText": "I (only vaguely, to be honest) remember that we had an issue in the EE repo with this test because the assertj dependency wasn't present there somehow. Miklas used it \"by accident\" and was fine with using hamcrest here because that's on the classpath already. Makes the build easier, I would say.\nWe could also investigate on why it didn't work in the EE repo but I think it's not worth the effort for that one assertion right now.\nThoughts on this?", "author": "tmetzke", "createdAt": "2020-04-02T10:58:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxNTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzOTQyOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/755#discussion_r402239429", "bodyText": "I think we should try to make assertj work. Assertj is our go-to library for assertions. The next person that writes a test here will run into the same problem again and it looks like the root cause is not easy to understand.", "author": "ThorbenLindhauer", "createdAt": "2020-04-02T11:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxNTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0NzE0Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/755#discussion_r402247142", "bodyText": "I'll have a look and update here with insights", "author": "tmetzke", "createdAt": "2020-04-02T11:39:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxNTQwMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMxODc1Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/755#discussion_r402318756", "bodyText": "OK, using assertj again, the EE module now adds a dependency to assertj as well \ud83d\udc4d", "author": "tmetzke", "createdAt": "2020-04-02T13:37:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxNTQwMA=="}], "type": "inlineReview", "revised_code": {"commit": "2b33f6631888b85b36b024178cb49eeee6fa7e83", "chunk": "diff --git a/distro/run/qa/integration-tests/src/test/java/org/camunda/bpm/run/qa/AutoDeploymentIT.java b/distro/run/qa/integration-tests/src/test/java/org/camunda/bpm/run/qa/AutoDeploymentIT.java\nindex bd0f214de7..59209fca32 100644\n--- a/distro/run/qa/integration-tests/src/test/java/org/camunda/bpm/run/qa/AutoDeploymentIT.java\n+++ b/distro/run/qa/integration-tests/src/test/java/org/camunda/bpm/run/qa/AutoDeploymentIT.java\n\n@@ -132,7 +131,7 @@ public class AutoDeploymentIT {\n     List<String> resourceNames = extractResourceNames(resourcesResponse);\n \n     // then\n-    assertThat(resourceNames, contains(\"/form.html\", \"/script.js\"));\n+    assertThat(resourceNames).contains(\"/form.html\", \"/script.js\");\n   }\n \n   @Test\n"}}, {"oid": "2b33f6631888b85b36b024178cb49eeee6fa7e83", "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b33f6631888b85b36b024178cb49eeee6fa7e83", "message": "* keep using assertj\n* make dependency to assertj explicit\n* use camunda-parent compatible assertj version", "committedDate": "2020-04-02T13:35:38Z", "type": "commit"}]}