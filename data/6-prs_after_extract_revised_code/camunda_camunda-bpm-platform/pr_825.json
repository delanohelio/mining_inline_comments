{"pr_number": 825, "pr_title": "CAM-1798 Add query criteria to several queries (Java & REST API)", "pr_createdAt": "2020-05-08T09:20:15Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/825", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MjQ2MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429242460", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Only select historic incidents which have the which incident message is like the given value.\n          \n          \n            \n               * Only select historic incidents which incident message is like the given value.", "author": "tasso94", "createdAt": "2020-05-22T13:22:42Z", "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java", "diffHunk": "@@ -33,9 +35,20 @@\n   /** Only select historic incidents which have the given incident message. **/\n   HistoricIncidentQuery incidentMessage(String incidentMessage);\n \n+  /**\n+   * Only select historic incidents which have the which incident message is like the given value.", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\nindex 936d0de77f..2dab527504 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n\n@@ -36,7 +36,7 @@ public interface HistoricIncidentQuery extends Query<HistoricIncidentQuery, Hist\n   HistoricIncidentQuery incidentMessage(String incidentMessage);\n \n   /**\n-   * Only select historic incidents which have the which incident message is like the given value.\n+   * Only select historic incidents which incident message is like the given value\n    *\n    * @param incidentMessageLike The string can include the wildcard character '%' to express\n    *    like-strategy: starts with (string%), ends with (%string) or contains (%string%).\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NDEyNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429244125", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Only select incidents which have the which incident message is like the given value.\n          \n          \n            \n               * Only select incidents which incident message is like the given value.", "author": "tasso94", "createdAt": "2020-05-22T13:26:03Z", "path": "engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java", "diffHunk": "@@ -32,6 +34,14 @@\n   /** Only select incidents which have the given incident message. **/\n   IncidentQuery incidentMessage(String incidentMessage);\n \n+  /**\n+   * Only select incidents which have the which incident message is like the given value.", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\nindex 1163365694..6e5110c214 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n\n@@ -35,7 +35,7 @@ public interface IncidentQuery extends Query<IncidentQuery, Incident> {\n   IncidentQuery incidentMessage(String incidentMessage);\n \n   /**\n-   * Only select incidents which have the which incident message is like the given value.\n+   * Only select incidents which incident message is like the given value.\n    *\n    * @param incidentMessageLike The string can include the wildcard character '%' to express\n    *    like-strategy: starts with (string%), ends with (%string) or contains (%string%).\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NDM0MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429244340", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Only select incidents instances which have a incidentTimestamp date before the given date **/\n          \n          \n            \n              /** Only select incidents which have an incidentTimestamp date before the given date **/", "author": "tasso94", "createdAt": "2020-05-22T13:26:28Z", "path": "engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java", "diffHunk": "@@ -44,6 +54,12 @@\n   /** Only select incidents with the given id. **/\n   IncidentQuery executionId(String executionId);\n \n+  /** Only select incidents instances which have a incidentTimestamp date before the given date **/", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\nindex 1163365694..6e5110c214 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n\n@@ -54,10 +54,10 @@ public interface IncidentQuery extends Query<IncidentQuery, Incident> {\n   /** Only select incidents with the given id. **/\n   IncidentQuery executionId(String executionId);\n \n-  /** Only select incidents instances which have a incidentTimestamp date before the given date **/\n+  /** Only select incidents which have an incidentTimestamp date before the given date **/\n   IncidentQuery incidentTimestampBefore(Date incidentTimestampBefore);\n \n-  /** Only select incidents which have a incidentTimestamp date after the given date **/\n+  /** Only select incidents which have an incidentTimestamp date after the given date **/\n   IncidentQuery incidentTimestampAfter(Date incidentTimestampAfter);\n \n   /** Only select incidents which contain an activity with the given id. **/\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NDUxMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429244511", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Only select incidents which have a incidentTimestamp date after the given date **/\n          \n          \n            \n              /** Only select incidents which have an incidentTimestamp date after the given date **/", "author": "tasso94", "createdAt": "2020-05-22T13:26:50Z", "path": "engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java", "diffHunk": "@@ -44,6 +54,12 @@\n   /** Only select incidents with the given id. **/\n   IncidentQuery executionId(String executionId);\n \n+  /** Only select incidents instances which have a incidentTimestamp date before the given date **/\n+  IncidentQuery incidentTimestampBefore(Date incidentTimestampBefore);\n+\n+  /** Only select incidents which have a incidentTimestamp date after the given date **/", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\nindex 1163365694..6e5110c214 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/runtime/IncidentQuery.java\n\n@@ -54,10 +54,10 @@ public interface IncidentQuery extends Query<IncidentQuery, Incident> {\n   /** Only select incidents with the given id. **/\n   IncidentQuery executionId(String executionId);\n \n-  /** Only select incidents instances which have a incidentTimestamp date before the given date **/\n+  /** Only select incidents which have an incidentTimestamp date before the given date **/\n   IncidentQuery incidentTimestampBefore(Date incidentTimestampBefore);\n \n-  /** Only select incidents which have a incidentTimestamp date after the given date **/\n+  /** Only select incidents which have an incidentTimestamp date after the given date **/\n   IncidentQuery incidentTimestampAfter(Date incidentTimestampAfter);\n \n   /** Only select incidents which contain an activity with the given id. **/\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NTY5Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429245697", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Only select historic incidents instances which have a createTime date before the given date **/\n          \n          \n            \n              /** Only select historic incidents which have a createTime date before the given date **/", "author": "tasso94", "createdAt": "2020-05-22T13:29:06Z", "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java", "diffHunk": "@@ -45,6 +58,18 @@\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n+  /** Only select historic incidents instances which have a createTime date before the given date **/", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\nindex 936d0de77f..2dab527504 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n\n@@ -58,16 +58,16 @@ public interface HistoricIncidentQuery extends Query<HistoricIncidentQuery, Hist\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n-  /** Only select historic incidents instances which have a createTime date before the given date **/\n+  /** Only select historic incidents which have a createTime date before the given date **/\n   HistoricIncidentQuery createTimeBefore(Date createTimeBefore);\n \n   /** Only select historic incidents which have a createTime date after the given date **/\n   HistoricIncidentQuery createTimeAfter(Date createTimeAfter);\n \n-  /** Only select historic incidents instances which have a endTimeBefore date before the given date **/\n+  /** Only select historic incidents which have an endTimeBefore date before the given date **/\n   HistoricIncidentQuery endTimeBefore(Date endTimeBefore);\n \n-  /** Only select historic incidents which have a endTimeAfter date after the given date **/\n+  /** Only select historic incidents which have an endTimeAfter date after the given date **/\n   HistoricIncidentQuery endTimeAfter(Date endTimeAfter);\n \n   /** Only select historic incidents which contain an activity with the given id. **/\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NjExMg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429246112", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Only select historic incidents instances which have a endTimeBefore date before the given date **/\n          \n          \n            \n              /** Only select historic incidents which have an endTimeBefore date before the given date **/", "author": "tasso94", "createdAt": "2020-05-22T13:29:53Z", "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java", "diffHunk": "@@ -45,6 +58,18 @@\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n+  /** Only select historic incidents instances which have a createTime date before the given date **/\n+  HistoricIncidentQuery createTimeBefore(Date createTimeBefore);\n+\n+  /** Only select historic incidents which have a createTime date after the given date **/\n+  HistoricIncidentQuery createTimeAfter(Date createTimeAfter);\n+\n+  /** Only select historic incidents instances which have a endTimeBefore date before the given date **/", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\nindex 936d0de77f..2dab527504 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n\n@@ -58,16 +58,16 @@ public interface HistoricIncidentQuery extends Query<HistoricIncidentQuery, Hist\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n-  /** Only select historic incidents instances which have a createTime date before the given date **/\n+  /** Only select historic incidents which have a createTime date before the given date **/\n   HistoricIncidentQuery createTimeBefore(Date createTimeBefore);\n \n   /** Only select historic incidents which have a createTime date after the given date **/\n   HistoricIncidentQuery createTimeAfter(Date createTimeAfter);\n \n-  /** Only select historic incidents instances which have a endTimeBefore date before the given date **/\n+  /** Only select historic incidents which have an endTimeBefore date before the given date **/\n   HistoricIncidentQuery endTimeBefore(Date endTimeBefore);\n \n-  /** Only select historic incidents which have a endTimeAfter date after the given date **/\n+  /** Only select historic incidents which have an endTimeAfter date after the given date **/\n   HistoricIncidentQuery endTimeAfter(Date endTimeAfter);\n \n   /** Only select historic incidents which contain an activity with the given id. **/\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NjM0NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429246344", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Only select historic incidents which have a endTimeAfter date after the given date **/\n          \n          \n            \n              /** Only select historic incidents which have an endTimeAfter date after the given date **/", "author": "tasso94", "createdAt": "2020-05-22T13:30:16Z", "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java", "diffHunk": "@@ -45,6 +58,18 @@\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n+  /** Only select historic incidents instances which have a createTime date before the given date **/\n+  HistoricIncidentQuery createTimeBefore(Date createTimeBefore);\n+\n+  /** Only select historic incidents which have a createTime date after the given date **/\n+  HistoricIncidentQuery createTimeAfter(Date createTimeAfter);\n+\n+  /** Only select historic incidents instances which have a endTimeBefore date before the given date **/\n+  HistoricIncidentQuery endTimeBefore(Date endTimeBefore);\n+\n+  /** Only select historic incidents which have a endTimeAfter date after the given date **/", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\nindex 936d0de77f..2dab527504 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/history/HistoricIncidentQuery.java\n\n@@ -58,16 +58,16 @@ public interface HistoricIncidentQuery extends Query<HistoricIncidentQuery, Hist\n   /** Only select historic incidents with the given id. **/\n   HistoricIncidentQuery executionId(String executionId);\n \n-  /** Only select historic incidents instances which have a createTime date before the given date **/\n+  /** Only select historic incidents which have a createTime date before the given date **/\n   HistoricIncidentQuery createTimeBefore(Date createTimeBefore);\n \n   /** Only select historic incidents which have a createTime date after the given date **/\n   HistoricIncidentQuery createTimeAfter(Date createTimeAfter);\n \n-  /** Only select historic incidents instances which have a endTimeBefore date before the given date **/\n+  /** Only select historic incidents which have an endTimeBefore date before the given date **/\n   HistoricIncidentQuery endTimeBefore(Date endTimeBefore);\n \n-  /** Only select historic incidents which have a endTimeAfter date after the given date **/\n+  /** Only select historic incidents which have an endTimeAfter date after the given date **/\n   HistoricIncidentQuery endTimeAfter(Date endTimeAfter);\n \n   /** Only select historic incidents which contain an activity with the given id. **/\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0OTc1Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429249757", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                verify(mockedQuery).activityName(stringQueryParameters.get(\"activityNameLike\"));\n          \n          \n            \n                verify(mockedQuery).activityNameLike(stringQueryParameters.get(\"activityNameLike\"));", "author": "tasso94", "createdAt": "2020-05-22T13:36:27Z", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricActivityInstanceRestServiceQueryTest.java", "diffHunk": "@@ -530,6 +531,7 @@ private void verifyStringParameterQueryInvocations() {\n     verify(mockedQuery).executionId(stringQueryParameters.get(\"executionId\"));\n     verify(mockedQuery).activityId(stringQueryParameters.get(\"activityId\"));\n     verify(mockedQuery).activityName(stringQueryParameters.get(\"activityName\"));\n+    verify(mockedQuery).activityName(stringQueryParameters.get(\"activityNameLike\"));", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricActivityInstanceRestServiceQueryTest.java b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricActivityInstanceRestServiceQueryTest.java\nindex cdfddafde5..31c26304b8 100644\n--- a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricActivityInstanceRestServiceQueryTest.java\n+++ b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricActivityInstanceRestServiceQueryTest.java\n\n@@ -531,7 +531,7 @@ public class HistoricActivityInstanceRestServiceQueryTest extends AbstractRestSe\n     verify(mockedQuery).executionId(stringQueryParameters.get(\"executionId\"));\n     verify(mockedQuery).activityId(stringQueryParameters.get(\"activityId\"));\n     verify(mockedQuery).activityName(stringQueryParameters.get(\"activityName\"));\n-    verify(mockedQuery).activityName(stringQueryParameters.get(\"activityNameLike\"));\n+    verify(mockedQuery).activityNameLike(stringQueryParameters.get(\"activityNameLike\"));\n     verify(mockedQuery).activityType(stringQueryParameters.get(\"activityType\"));\n     verify(mockedQuery).taskAssignee(stringQueryParameters.get(\"taskAssignee\"));\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1MDY3Mw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429250673", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                inOrder.verify(mockedQuery).orderByIncidentState();\n          \n          \n            \n                inOrder.verify(mockedQuery).orderByProcessDefinitionKey();", "author": "tasso94", "createdAt": "2020-05-22T13:38:09Z", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java", "diffHunk": "@@ -281,6 +281,16 @@ public void testSortingParameters() {\n     executeAndVerifySorting(\"incidentState\", \"desc\", Status.OK);\n     inOrder.verify(mockedQuery).orderByIncidentState();\n     inOrder.verify(mockedQuery).desc();\n+\n+    inOrder = Mockito.inOrder(mockedQuery);\n+    executeAndVerifySorting(\"processDefinitionKey\", \"asc\", Status.OK);\n+    inOrder.verify(mockedQuery).orderByIncidentState();", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\nindex 7f21f7dbcf..56dca387d9 100644\n--- a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\n+++ b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\n\n@@ -284,12 +284,12 @@ public class HistoricIncidentRestServiceQueryTest extends AbstractRestServiceTes\n \n     inOrder = Mockito.inOrder(mockedQuery);\n     executeAndVerifySorting(\"processDefinitionKey\", \"asc\", Status.OK);\n-    inOrder.verify(mockedQuery).orderByIncidentState();\n+    inOrder.verify(mockedQuery).orderByProcessDefinitionKey();\n     inOrder.verify(mockedQuery).asc();\n \n     inOrder = Mockito.inOrder(mockedQuery);\n     executeAndVerifySorting(\"processDefinitionKey\", \"desc\", Status.OK);\n-    inOrder.verify(mockedQuery).orderByIncidentState();\n+    inOrder.verify(mockedQuery).orderByProcessDefinitionKey();\n     inOrder.verify(mockedQuery).desc();\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1MDgwOA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/825#discussion_r429250808", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                inOrder.verify(mockedQuery).orderByIncidentState();\n          \n          \n            \n                inOrder.verify(mockedQuery).orderByProcessDefinitionKey();", "author": "tasso94", "createdAt": "2020-05-22T13:38:24Z", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java", "diffHunk": "@@ -281,6 +281,16 @@ public void testSortingParameters() {\n     executeAndVerifySorting(\"incidentState\", \"desc\", Status.OK);\n     inOrder.verify(mockedQuery).orderByIncidentState();\n     inOrder.verify(mockedQuery).desc();\n+\n+    inOrder = Mockito.inOrder(mockedQuery);\n+    executeAndVerifySorting(\"processDefinitionKey\", \"asc\", Status.OK);\n+    inOrder.verify(mockedQuery).orderByIncidentState();\n+    inOrder.verify(mockedQuery).asc();\n+\n+    inOrder = Mockito.inOrder(mockedQuery);\n+    executeAndVerifySorting(\"processDefinitionKey\", \"desc\", Status.OK);\n+    inOrder.verify(mockedQuery).orderByIncidentState();", "originalCommit": "783f2d8d383cf18f50aa7d67e77d2f4578963008", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a733cdd413172f1b053dfbadce6c6358565da7b4", "chunk": "diff --git a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\nindex 7f21f7dbcf..56dca387d9 100644\n--- a/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\n+++ b/engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/history/HistoricIncidentRestServiceQueryTest.java\n\n@@ -284,12 +284,12 @@ public class HistoricIncidentRestServiceQueryTest extends AbstractRestServiceTes\n \n     inOrder = Mockito.inOrder(mockedQuery);\n     executeAndVerifySorting(\"processDefinitionKey\", \"asc\", Status.OK);\n-    inOrder.verify(mockedQuery).orderByIncidentState();\n+    inOrder.verify(mockedQuery).orderByProcessDefinitionKey();\n     inOrder.verify(mockedQuery).asc();\n \n     inOrder = Mockito.inOrder(mockedQuery);\n     executeAndVerifySorting(\"processDefinitionKey\", \"desc\", Status.OK);\n-    inOrder.verify(mockedQuery).orderByIncidentState();\n+    inOrder.verify(mockedQuery).orderByProcessDefinitionKey();\n     inOrder.verify(mockedQuery).desc();\n   }\n \n"}}, {"oid": "a733cdd413172f1b053dfbadce6c6358565da7b4", "url": "https://github.com/camunda/camunda-bpm-platform/commit/a733cdd413172f1b053dfbadce6c6358565da7b4", "message": "feat(engine/rest): add query criteria to several queries\n\nExtended queries:\n\n* Historic incident\n  * incidentMessageLike\n  * processDefinitionKey\n  * createTimeBefore\n  * createTimeAfter\n  * endTimeBefore\n  * endTimeAfter\n  * orderByProcessDefinitionKey\n* Runtime incident\n  * incidentMessageLike\n  * incidentTimestampBefore\n  * incidentTimestampAfter\n* Historic activity instance\n  * activityNameLike\n\nrelated to CAM-11798\ncloses #825", "committedDate": "2020-05-27T12:05:33Z", "type": "commit"}, {"oid": "a733cdd413172f1b053dfbadce6c6358565da7b4", "url": "https://github.com/camunda/camunda-bpm-platform/commit/a733cdd413172f1b053dfbadce6c6358565da7b4", "message": "feat(engine/rest): add query criteria to several queries\n\nExtended queries:\n\n* Historic incident\n  * incidentMessageLike\n  * processDefinitionKey\n  * createTimeBefore\n  * createTimeAfter\n  * endTimeBefore\n  * endTimeAfter\n  * orderByProcessDefinitionKey\n* Runtime incident\n  * incidentMessageLike\n  * incidentTimestampBefore\n  * incidentTimestampAfter\n* Historic activity instance\n  * activityNameLike\n\nrelated to CAM-11798\ncloses #825", "committedDate": "2020-05-27T12:05:33Z", "type": "forcePushed"}]}