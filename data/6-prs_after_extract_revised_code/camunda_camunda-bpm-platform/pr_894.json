{"pr_number": 894, "pr_title": "chore(fix): partition delete historicProcessInstances when > 2000", "pr_createdAt": "2020-07-13T08:22:24Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/894", "timeline": [{"oid": "22eda1bdb49a723035b7239975b37fe1b668a92c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/22eda1bdb49a723035b7239975b37fe1b668a92c", "message": "chore(fix): partition delete historicProcessInstances when > 2000\n\nRelated to CAM-11755", "committedDate": "2020-07-13T08:19:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1OTE1Nw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/894#discussion_r455559157", "bodyText": "Wouldn't OPTIMIZE_PAGE_SIZE * 2 quadruple the amount of entities since the size is already doubled in EngineDataGenerator?\nIs this intentional?", "author": "koevskinikola", "createdAt": "2020-07-16T07:14:14Z", "path": "qa/large-data-tests/src/test/java/org/camunda/bpm/qa/largedata/optimize/OptimizeApiPageSizeTest.java", "diffHunk": "@@ -41,13 +41,13 @@\n   @ClassRule\n   public static ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n \n-\n   @BeforeClass\n   public static void init() {\n     optimizeService = processEngineRule.getProcessEngineConfiguration().getOptimizeService();\n \n     // given the generated engine data\n-    EngineDataGenerator generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), OPTIMIZE_PAGE_SIZE);\n+    // make sure that there are at least two pages of each entity available\n+    EngineDataGenerator generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), OPTIMIZE_PAGE_SIZE * 2);", "originalCommit": "22eda1bdb49a723035b7239975b37fe1b668a92c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU2NDY1OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/894#discussion_r455564658", "bodyText": "I removed the doubling of the amount in the EngineDataGenerator so it can be used for other tests as well. See https://github.com/camunda/camunda-bpm-platform/pull/894/files?file-filters%5B%5D=.java#diff-38e8226d6f10d7399ca8c47f8b0e9d1dR80\nOr am I missing something?", "author": "mboskamp", "createdAt": "2020-07-16T07:24:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1OTE1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU2OTAyOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/894#discussion_r455569029", "bodyText": "Sorry, mixed up the diffs. Completely my bad :)", "author": "koevskinikola", "createdAt": "2020-07-16T07:32:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1OTE1Nw=="}], "type": "inlineReview", "revised_code": null}]}