{"pr_number": 752, "pr_title": "chore(engine): add javadocs to queries about hist. instance permissions", "pr_createdAt": "2020-03-24T14:13:49Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/752", "timeline": [{"oid": "080545d0e915b70419e4716b9ed5f0c7f52322b6", "url": "https://github.com/camunda/camunda-bpm-platform/commit/080545d0e915b70419e4716b9ed5f0c7f52322b6", "message": "chore(engine): add javadocs to queries about hist. instance permissions\n\nrelated to CAM-11676", "committedDate": "2020-03-24T14:21:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2MzgyMA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/752#discussion_r400063820", "bodyText": "to unify with the rest of the mentions\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n          \n          \n            \n               *       ({@code enforceSpecificVariablePermission} in {@link ProcessEngineConfigurationImpl} must be set to", "author": "yanavasileva", "createdAt": "2020-03-30T09:50:49Z", "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "diffHunk": "@@ -107,21 +109,58 @@\n    */\n   HistoricCaseActivityStatisticsQuery createHistoricCaseActivityStatisticsQuery(String caseDefinitionId);\n \n-  /** Creates a new programmatic query to search for {@link HistoricTaskInstance}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricTaskInstanceQuery createHistoricTaskInstanceQuery();\n \n-  /** Creates a new programmatic query to search for {@link HistoricDetail}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricDetail}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to", "originalCommit": "080545d0e915b70419e4716b9ed5f0c7f52322b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "225f68c9998913a4d96e69a5a8accbbab73e8086", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java b/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\nindex a3d03615cc..106ed90841 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\n\n@@ -112,10 +112,11 @@ public interface HistoryService {\n   /**\n    * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n    *\n-   * <p>The result of the query is empty when the user has no...\n+   * <p>The result of the query is empty in the following cases:\n    * <ul>\n-   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n-   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *   <li>The user has no {@link Permissions#READ_HISTORY} permission on\n+   *   {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>The user has no {@link HistoricTaskPermissions#READ} permission on\n    *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n    *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n    * */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2NDA1Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/752#discussion_r400064052", "bodyText": "to unify with the rest of the mentions\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n          \n          \n            \n               *       ({@code enforceSpecificVariablePermission} in {@link ProcessEngineConfigurationImpl} must be set to", "author": "yanavasileva", "createdAt": "2020-03-30T09:51:15Z", "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "diffHunk": "@@ -107,21 +109,58 @@\n    */\n   HistoricCaseActivityStatisticsQuery createHistoricCaseActivityStatisticsQuery(String caseDefinitionId);\n \n-  /** Creates a new programmatic query to search for {@link HistoricTaskInstance}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricTaskInstanceQuery createHistoricTaskInstanceQuery();\n \n-  /** Creates a new programmatic query to search for {@link HistoricDetail}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricDetail}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n+   *       {@code true}) OR\n+   *   <li>{@link HistoricTaskPermissions#READ_VARIABLE} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enforceSpecificVariablePermission} and\n+   *       {@code enableHistoricInstancePermissions}\n+   *       in {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricDetailQuery createHistoricDetailQuery();\n \n   /**\n-   * Creates a new programmatic query to search for {@link HistoricVariableInstance}s.\n-   * <p>\n-   * The result of the query is empty:\n-   * <li>if the user has no {@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} or</li>\n-   * <li>the user has no {@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on {@link Resources#PROCESS_DEFINITION}\n-   * in case {@link ProcessEngineConfiguration#enforceSpecificVariablePermission} is enabled.</li>\n-   * </p>\n-   */\n+   * <p>Creates a new programmatic query to search for {@link HistoricVariableInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to", "originalCommit": "080545d0e915b70419e4716b9ed5f0c7f52322b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "225f68c9998913a4d96e69a5a8accbbab73e8086", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java b/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\nindex a3d03615cc..106ed90841 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/HistoryService.java\n\n@@ -112,10 +112,11 @@ public interface HistoryService {\n   /**\n    * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n    *\n-   * <p>The result of the query is empty when the user has no...\n+   * <p>The result of the query is empty in the following cases:\n    * <ul>\n-   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n-   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *   <li>The user has no {@link Permissions#READ_HISTORY} permission on\n+   *   {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>The user has no {@link HistoricTaskPermissions#READ} permission on\n    *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n    *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n    * */\n"}}, {"oid": "225f68c9998913a4d96e69a5a8accbbab73e8086", "url": "https://github.com/camunda/camunda-bpm-platform/commit/225f68c9998913a4d96e69a5a8accbbab73e8086", "message": "chore(engine): add javadocs to queries about hist. instance permissions\n\nrelated to CAM-11676", "committedDate": "2020-03-30T15:27:43Z", "type": "forcePushed"}, {"oid": "e68e82ae7af970eed9d69e1f1def84bceb5afc69", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e68e82ae7af970eed9d69e1f1def84bceb5afc69", "message": "chore(engine): add javadocs to queries about hist. instance permissions\n\nrelated to CAM-11676", "committedDate": "2020-03-31T06:56:53Z", "type": "commit"}, {"oid": "e68e82ae7af970eed9d69e1f1def84bceb5afc69", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e68e82ae7af970eed9d69e1f1def84bceb5afc69", "message": "chore(engine): add javadocs to queries about hist. instance permissions\n\nrelated to CAM-11676", "committedDate": "2020-03-31T06:56:53Z", "type": "forcePushed"}]}