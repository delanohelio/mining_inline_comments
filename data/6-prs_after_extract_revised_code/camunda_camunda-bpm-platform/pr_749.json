{"pr_number": 749, "pr_title": "feat(engine): introduce READ_VARIABLE permission for historic tasks", "pr_createdAt": "2020-03-23T15:25:09Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/749", "timeline": [{"oid": "257d64886de8ecbc9a7909a4fd71fce49a38b16b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/257d64886de8ecbc9a7909a4fd71fce49a38b16b", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626", "committedDate": "2020-03-24T13:24:19Z", "type": "forcePushed"}, {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626", "committedDate": "2020-03-24T14:18:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r399265434", "bodyText": "note to myself, double check the value", "author": "yanavasileva", "createdAt": "2020-03-27T13:31:41Z", "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "originalCommit": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MDQyNQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400270425", "bodyText": "we agreed to put 64 as value for READ_VARIABLE permission to be consistent with TaskPermissions#READ_VARIABLE", "author": "yanavasileva", "createdAt": "2020-03-30T15:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTY5OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271698", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 4);\n          \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 64);", "author": "yanavasileva", "createdAt": "2020-03-30T15:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "729c083bce0686a34c8e053fe2bcaa151e032c86", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java b/engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java\nindex 75212c3aeb..694a24fcb3 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java\n\n@@ -43,7 +43,7 @@ public enum HistoricTaskPermissions implements Permission {\n   READ(\"READ\", 2),\n \n   /** Indicates that READ_VARIABLE interactions are permitted. */\n-  READ_VARIABLE(\"READ_VARIABLE\", 4);\n+  READ_VARIABLE(\"READ_VARIABLE\", 64);\n \n   protected static final Resource[] RESOURCES = new Resource[] { Resources.HISTORIC_TASK };\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExOTEzNg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400119136", "bodyText": "could we fix this typo (wasn't me)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * will be required to fetch variables when the autorizations are enabled.\n          \n          \n            \n               * will be required to fetch variables when the authorizations are enabled.", "author": "yanavasileva", "createdAt": "2020-03-30T11:29:35Z", "path": "engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java", "diffHunk": "@@ -372,6 +372,7 @@\n    * READ_HISTORY_VARIABLE, or\n    * READ_TASK_VARIABLE on Process Definition resource, and\n    * READ_VARIABLE on Task resource\n+   * READ_VARIABLE on Historic Task Instance resource\n    * will be required to fetch variables when the autorizations are enabled.", "originalCommit": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8b73fd6888affb451d7d93ab879bd488f51c2db5", "chunk": "diff --git a/engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java b/engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java\nindex b7f3e9e48b..78002ea2b5 100644\n--- a/engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java\n+++ b/engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java\n\n@@ -373,7 +373,7 @@ public abstract class ProcessEngineConfiguration {\n    * READ_TASK_VARIABLE on Process Definition resource, and\n    * READ_VARIABLE on Task resource\n    * READ_VARIABLE on Historic Task Instance resource\n-   * will be required to fetch variables when the autorizations are enabled.\n+   * will be required to fetch variables when the authorizations are enabled.\n    */\n   protected boolean enforceSpecificVariablePermission = false;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTMwMQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400141301", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);\n          \n          \n            \n                enableHistoricInstancePermissions= processEngineConfiguration.isEnableHistoricInstancePermissions();\n          \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);", "author": "yanavasileva", "createdAt": "2020-03-30T12:11:15Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -78,6 +100,7 @@ public void init() {\n \r\n     enforceSpecificVariablePermission = processEngineConfiguration.isEnforceSpecificVariablePermission();\r\n     processEngineConfiguration.setEnforceSpecificVariablePermission(true);\r\n+    processEngineConfiguration.setEnableHistoricInstancePermissions(true);\r", "originalCommit": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142258", "bodyText": "Is it only for debugging purposes, shall we remove it?", "author": "yanavasileva", "createdAt": "2020-03-30T12:12:58Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r", "originalCommit": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTk2MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271960", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"RUNTIME!\");", "author": "yanavasileva", "createdAt": "2020-03-30T15:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA=="}], "type": "inlineReview", "revised_code": {"commit": "cfa258ce1d1483d099474815d77db3a176234f61", "chunk": "diff --git a/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java b/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\nindex d1a9a16ed2..0d1afec44b 100644\n--- a/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\n+++ b/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\n\n@@ -362,7 +362,6 @@ public class TaskReadVariablePermissionAuthorizationTest {\n       verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\n \n     } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\n-      System.out.println(\"HISTORY!\");\n \n       Authorization historyUserAuthorization = authorizationService.createAuthorizationQuery()\n           .resourceType(HISTORIC_TASK)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142409", "bodyText": "Is it only for debugging purposes, shall we remove it?", "author": "yanavasileva", "createdAt": "2020-03-30T12:13:14Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r\n+      Authorization runtimeUserAuthorization = authorizationService.createAuthorizationQuery()\r\n+          .resourceType(TASK)\r\n+          .userIdIn(userId)\r\n+          .singleResult();\r\n+\r\n+      assertNotNull(runtimeUserAuthorization);\r\n+      verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\r\n+\r\n+    } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\r\n+      System.out.println(\"HISTORY!\");\r", "originalCommit": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MjE2NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400272165", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"HISTORY!\");", "author": "yanavasileva", "createdAt": "2020-03-30T15:13:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "cfa258ce1d1483d099474815d77db3a176234f61", "chunk": "diff --git a/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java b/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\nindex d1a9a16ed2..0d1afec44b 100644\n--- a/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\n+++ b/engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java\n\n@@ -362,7 +362,6 @@ public class TaskReadVariablePermissionAuthorizationTest {\n       verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\n \n     } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\n-      System.out.println(\"HISTORY!\");\n \n       Authorization historyUserAuthorization = authorizationService.createAuthorizationQuery()\n           .resourceType(HISTORIC_TASK)\n"}}, {"oid": "5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "url": "https://github.com/camunda/camunda-bpm-platform/commit/5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626", "committedDate": "2020-03-30T15:40:36Z", "type": "commit"}, {"oid": "5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "url": "https://github.com/camunda/camunda-bpm-platform/commit/5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626", "committedDate": "2020-03-30T15:40:36Z", "type": "forcePushed"}, {"oid": "8b73fd6888affb451d7d93ab879bd488f51c2db5", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8b73fd6888affb451d7d93ab879bd488f51c2db5", "message": "SQUASH ME typo", "committedDate": "2020-03-30T15:42:12Z", "type": "commit"}, {"oid": "cfa258ce1d1483d099474815d77db3a176234f61", "url": "https://github.com/camunda/camunda-bpm-platform/commit/cfa258ce1d1483d099474815d77db3a176234f61", "message": "SQUASH ME remove syso", "committedDate": "2020-03-30T15:42:32Z", "type": "commit"}, {"oid": "365fdedd644f87752d1ad4e7b1d42a6b0997093c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/365fdedd644f87752d1ad4e7b1d42a6b0997093c", "message": "SQUASH ME remove syso", "committedDate": "2020-03-30T15:42:53Z", "type": "commit"}, {"oid": "729c083bce0686a34c8e053fe2bcaa151e032c86", "url": "https://github.com/camunda/camunda-bpm-platform/commit/729c083bce0686a34c8e053fe2bcaa151e032c86", "message": "SQUASH ME 4->64", "committedDate": "2020-03-30T15:43:21Z", "type": "commit"}]}