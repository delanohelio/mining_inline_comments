{"pr_number": 995, "pr_title": "CAM-12421: chore(engine): add telemetry request timeout configuration", "pr_createdAt": "2020-09-18T11:28:03Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/995", "timeline": [{"oid": "5095fc3222e8dc02a14b9ace994efe7ad692c71c", "url": "https://github.com/camunda/camunda-bpm-platform/commit/5095fc3222e8dc02a14b9ace994efe7ad692c71c", "message": "chore(engine): add telemetry request timeout configuration\n\n* introduce a process engine configuration property\n* default value 15 seconds\n* apply the configuration on the telemetry request\n\nRelated to CAM-12421", "committedDate": "2020-09-21T08:43:28Z", "type": "forcePushed"}, {"oid": "8911dfefe526744d023144acabb76b16f701f469", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8911dfefe526744d023144acabb76b16f701f469", "message": "test", "committedDate": "2020-09-21T13:53:45Z", "type": "forcePushed"}, {"oid": "e81dec4ab8870026fe10ba95310278e0317c27bf", "url": "https://github.com/camunda/camunda-bpm-platform/commit/e81dec4ab8870026fe10ba95310278e0317c27bf", "message": "adjust test", "committedDate": "2020-09-21T18:08:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4MTE2NQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/995#discussion_r492581165", "bodyText": "This is probably not needed anymore, right?", "author": "tmetzke", "createdAt": "2020-09-22T09:03:45Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryConfigurationTest.java", "diffHunk": "@@ -162,5 +174,35 @@ public void shouldLogTelemetryPersistenceLog() {\n     assertThat(loggingRule.getFilteredLog(\"No telemetry property found in the database\").size()).isOne();\n     assertThat(loggingRule.getFilteredLog(\"Creating the telemetry property in database with the value: \" + telemetryInitialized).size()).isOne();\n   }\n+  //WireMockServer wireMockServer = new WireMockServer(wireMockConfig().port(8089)); //No-args constructor will start on port 8080, no HTTPS\n+//  wireMockServer.start();", "originalCommit": "e81dec4ab8870026fe10ba95310278e0317c27bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "23401483b16ca47af67a92cb26f92584b6bb5d7b", "chunk": "diff --git a/engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryConfigurationTest.java b/engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryConfigurationTest.java\nindex 06f1b0941b..079a9b3639 100644\n--- a/engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryConfigurationTest.java\n+++ b/engine/src/test/java/org/camunda/bpm/engine/test/api/mgmt/telemetry/TelemetryConfigurationTest.java\n\n@@ -174,15 +165,11 @@ public class TelemetryConfigurationTest {\n     assertThat(loggingRule.getFilteredLog(\"No telemetry property found in the database\").size()).isOne();\n     assertThat(loggingRule.getFilteredLog(\"Creating the telemetry property in database with the value: \" + telemetryInitialized).size()).isOne();\n   }\n-  //WireMockServer wireMockServer = new WireMockServer(wireMockConfig().port(8089)); //No-args constructor will start on port 8080, no HTTPS\n-//  wireMockServer.start();\n \n   @Test\n   @WatchLogger(loggerNames = {\"org.camunda.bpm.engine.telemetry\"}, level = \"INFO\")\n-  public void shouldThrowAnException() {\n+  public void shouldThrowAnConnectorException() {\n     // given\n-    wireMockServer = new WireMockServer(WireMockConfiguration.wireMockConfig().port(8085));\n-    wireMockServer.start();\n     inMemoryConfiguration = new StandaloneInMemProcessEngineConfiguration();\n     inMemoryConfiguration\n         .setJdbcUrl(\"jdbc:h2:mem:camunda\" + getClass().getSimpleName())\n"}}, {"oid": "23401483b16ca47af67a92cb26f92584b6bb5d7b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/23401483b16ca47af67a92cb26f92584b6bb5d7b", "message": "chore(engine): add telemetry request timeout configuration\n\n* introduce a process engine configuration property\n* default value 15 seconds\n* apply the configuration on the telemetry request\n\nRelated to CAM-12421", "committedDate": "2020-09-22T11:08:25Z", "type": "commit"}, {"oid": "7f4ff69e9882224f11635c2b0430155ddb07d7bf", "url": "https://github.com/camunda/camunda-bpm-platform/commit/7f4ff69e9882224f11635c2b0430155ddb07d7bf", "message": "test", "committedDate": "2020-09-22T11:08:25Z", "type": "commit"}, {"oid": "1caa579237a0278b69e9548e2b456df4ecfdb4c3", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1caa579237a0278b69e9548e2b456df4ecfdb4c3", "message": "adjust test", "committedDate": "2020-09-22T11:08:25Z", "type": "commit"}, {"oid": "8c7616648a544a4b2063c7c913dd93ef1ec41840", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8c7616648a544a4b2063c7c913dd93ef1ec41840", "message": "squash me", "committedDate": "2020-09-22T11:11:28Z", "type": "commit"}, {"oid": "8c7616648a544a4b2063c7c913dd93ef1ec41840", "url": "https://github.com/camunda/camunda-bpm-platform/commit/8c7616648a544a4b2063c7c913dd93ef1ec41840", "message": "squash me", "committedDate": "2020-09-22T11:11:28Z", "type": "forcePushed"}]}