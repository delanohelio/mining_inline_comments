{"pr_number": 5671, "pr_title": "feat(client): support admin operations in Java client", "pr_createdAt": "2020-06-23T22:49:03Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5671", "timeline": [{"oid": "37af3d49729bef4d74c89ea5b9cdc4938ee9cf53", "url": "https://github.com/confluentinc/ksql/commit/37af3d49729bef4d74c89ea5b9cdc4938ee9cf53", "message": "feat: support listing streams/table from Java client (wip)", "committedDate": "2020-06-18T20:34:35Z", "type": "commit"}, {"oid": "b67a6f0cf414510074f1836195a9e99861009268", "url": "https://github.com/confluentinc/ksql/commit/b67a6f0cf414510074f1836195a9e99861009268", "message": "chore: finish implementing list streams", "committedDate": "2020-06-22T22:25:37Z", "type": "commit"}, {"oid": "5a8e50185302c71835a5068a9f735c2a3fc80488", "url": "https://github.com/confluentinc/ksql/commit/5a8e50185302c71835a5068a9f735c2a3fc80488", "message": "refactor: prep for other methods", "committedDate": "2020-06-22T22:43:41Z", "type": "commit"}, {"oid": "e54185549e2fb7915be6778e2c6909dbddf171a4", "url": "https://github.com/confluentinc/ksql/commit/e54185549e2fb7915be6778e2c6909dbddf171a4", "message": "test: add tests for list streams", "committedDate": "2020-06-22T23:34:11Z", "type": "commit"}, {"oid": "bf8e8862b26b6cbd9c140b21ed8340654012a201", "url": "https://github.com/confluentinc/ksql/commit/bf8e8862b26b6cbd9c140b21ed8340654012a201", "message": "feat: support list tables", "committedDate": "2020-06-23T05:16:48Z", "type": "commit"}, {"oid": "d6ee218dd8ddad625a9a73598dddb65081ddcfc2", "url": "https://github.com/confluentinc/ksql/commit/d6ee218dd8ddad625a9a73598dddb65081ddcfc2", "message": "feat: support list topics", "committedDate": "2020-06-23T22:21:07Z", "type": "commit"}, {"oid": "7466c72d322f53fb4a907424d4534a32d440808d", "url": "https://github.com/confluentinc/ksql/commit/7466c72d322f53fb4a907424d4534a32d440808d", "message": "test: add error response test for list topics", "committedDate": "2020-06-23T22:30:40Z", "type": "commit"}, {"oid": "33e2c67bf156c1587240148e40b88de2f8fffc5d", "url": "https://github.com/confluentinc/ksql/commit/33e2c67bf156c1587240148e40b88de2f8fffc5d", "message": "chore: checkstyle", "committedDate": "2020-06-23T22:35:50Z", "type": "commit"}, {"oid": "d5dbc344f0ffec141670c7401a5fd0b181cc3bca", "url": "https://github.com/confluentinc/ksql/commit/d5dbc344f0ffec141670c7401a5fd0b181cc3bca", "message": "docs: javadocs", "committedDate": "2020-06-23T22:44:40Z", "type": "commit"}, {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f", "url": "https://github.com/confluentinc/ksql/commit/2456569ee6be275416e81a49be0a4cff46ca588f", "message": "Merge branch 'master' into java-client-admin-operations", "committedDate": "2020-06-23T22:45:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1OTk4NA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444559984", "bodyText": "might be worth adding some documentation as to why this is different than listStreams and listTopic - maybe (if I'm understand what you're saying correctly):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n          \n          \n            \n               * failed.\n          \n          \n            \n               * <p>If the ksqlDb server receives a non-200 response is received from the kafka broker, the {@code CompletableFuture} will be\n          \n          \n            \n               * failed.", "author": "agavra", "createdAt": "2020-06-23T23:19:40Z", "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java", "diffHunk": "@@ -92,6 +93,30 @@\n    */\n   CompletableFuture<Void> terminatePushQuery(String queryId);\n \n+  /**\n+   * Returns the list of ksqlDB streams from the ksqlDB server's metastore.\n+   *\n+   * @return list of streams\n+   */\n+  CompletableFuture<List<StreamInfo>> listStreams();\n+\n+  /**\n+   * Returns the list of ksqlDB tables from the ksqlDB server's metastore\n+   *\n+   * @return list of tables\n+   */\n+  CompletableFuture<List<TableInfo>> listTables();\n+\n+  /**\n+   * Returns the list of Kafka topics available for use with ksqlDB.\n+   *\n+   * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n+   * failed.", "originalCommit": "2456569ee6be275416e81a49be0a4cff46ca588f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NjExMA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445196110", "bodyText": "It's actually listStreams and listTables that were different from all the rest of the methods (if you look at the other Client methods, you'll see they all have the same note as listTopics), since if ksqlDB is operating correctly, those shouldn't ever fail. However, it occurs to me that those requests can still fail if, e.g., ksqlDB is unavailable, or because of misconfigurations in the client, so I've added the note to those methods as well.", "author": "vcrfxia", "createdAt": "2020-06-24T22:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1OTk4NA=="}], "type": "inlineReview", "revised_code": {"commit": "97e17f680141acd80111b69295df889fe8257218", "chunk": "diff --git a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java\nindex 086d022f05..2670dbac3a 100644\n--- a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java\n+++ b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java\n\n@@ -96,6 +96,9 @@ public interface Client {\n   /**\n    * Returns the list of ksqlDB streams from the ksqlDB server's metastore.\n    *\n+   * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n+   * failed.\n+   *\n    * @return list of streams\n    */\n   CompletableFuture<List<StreamInfo>> listStreams();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MDIwMA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444560200", "bodyText": "nit, my personal preference is just to have @return the name of this stream as one line if it's a simple getter", "author": "agavra", "createdAt": "2020-06-23T23:20:24Z", "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.client;\n+\n+/**\n+ * Metadata for a ksqlDB stream.\n+ */\n+public interface StreamInfo {\n+\n+  /**\n+   * Returns the name of this stream.\n+   *\n+   * @return stream name", "originalCommit": "2456569ee6be275416e81a49be0a4cff46ca588f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97e17f680141acd80111b69295df889fe8257218", "chunk": "diff --git a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java\nindex d417a682ce..8c794e4293 100644\n--- a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java\n+++ b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java\n\n@@ -21,23 +21,17 @@ package io.confluent.ksql.api.client;\n public interface StreamInfo {\n \n   /**\n-   * Returns the name of this stream.\n-   *\n-   * @return stream name\n+   * @return the name of this stream\n    */\n   String getName();\n \n   /**\n-   * Returns the name of the Kafka topic underlying this ksqlDB stream.\n-   *\n-   * @return topic name\n+   * @return the name of the Kafka topic underlying this ksqlDB stream\n    */\n   String getTopic();\n \n   /**\n-   * Returns the format of the data in this stream.\n-   *\n-   * @return the format\n+   * @return the format of the data in this stream\n    */\n   String getFormat();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzEwMg==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444563102", "bodyText": "nit: might want to add some constants for the endpoints", "author": "agavra", "createdAt": "2020-06-23T23:29:52Z", "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -149,6 +154,51 @@ public BatchedQueryResult executeQuery(\n     return cf;\n   }\n \n+  @Override\n+  public CompletableFuture<List<StreamInfo>> listStreams() {\n+    final CompletableFuture<List<StreamInfo>> cf = new CompletableFuture<>();\n+\n+    makeRequest(\n+        \"/ksql\",", "originalCommit": "2456569ee6be275416e81a49be0a4cff46ca588f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97e17f680141acd80111b69295df889fe8257218", "chunk": "diff --git a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java\nindex 49cde8f7d4..d12ce99572 100644\n--- a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java\n+++ b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java\n\n@@ -159,7 +164,7 @@ public class ClientImpl implements Client {\n     final CompletableFuture<List<StreamInfo>> cf = new CompletableFuture<>();\n \n     makeRequest(\n-        \"/ksql\",\n+        KSQL_ENDPOINT,\n         new JsonObject().put(\"ksql\", \"list streams;\"),\n         cf,\n         response -> handleSingleEntityResponse(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444563599", "bodyText": "generally worth having equals/hashcode/tostring on externally exposed classes so that people can leverage them if they want to", "author": "agavra", "createdAt": "2020-06-23T23:31:38Z", "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/StreamInfoImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.client.impl;\n+\n+import io.confluent.ksql.api.client.StreamInfo;\n+import java.util.Objects;\n+\n+public class StreamInfoImpl implements StreamInfo {", "originalCommit": "2456569ee6be275416e81a49be0a4cff46ca588f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NzE4MQ==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445197181", "bodyText": "To make sure I understand correctly: you're suggesting we add equals/hashcode/tostring methods to each of the implementation classes, not the interfaces, right? This makes sense to me, though I'm not sure whether it makes more sense for the toString method to say StreamInfoImpl{...} or StreamInfo{...} since the former is an implementation detail, but the latter is a bit misleading.", "author": "vcrfxia", "createdAt": "2020-06-24T22:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIxODAzMA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445218030", "bodyText": "Hmm, good point - I'm satisfied with StreamInfo because I dont' think we expect more than just this impl", "author": "agavra", "createdAt": "2020-06-24T23:02:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyMjU4MQ==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445222581", "bodyText": "Sounds good. I'm going to merge this PR and then open a follow-up to add equals/hashcode/tostring to all the client interfaces, since none of the new interfaces have them (not just the ones in this PR).", "author": "vcrfxia", "createdAt": "2020-06-24T23:17:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyOTUxOA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445229518", "bodyText": "Here's the follow-up: #5681", "author": "vcrfxia", "createdAt": "2020-06-24T23:40:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NjE4Mg==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444566182", "bodyText": "would we need this if we implemented .equals()?", "author": "agavra", "createdAt": "2020-06-23T23:40:54Z", "path": "ksqldb-api-client/src/test/java/io/confluent/ksql/api/client/integration/ClientIntegrationTest.java", "diffHunk": "@@ -770,4 +813,97 @@ private static void verifyPullQueryRow(final Row row) {\n     }\n     return expectedRows;\n   }\n+\n+  private static Matcher<? super StreamInfo> streamForProvider(\n+      final TestDataProvider<?> testDataProvider\n+  ) {\n+    return streamInfo(testDataProvider.kstreamName(), testDataProvider.topicName(), \"JSON\");\n+  }\n+\n+  private static Matcher<? super StreamInfo> streamInfo(\n+      final String streamName, final String topicName, final String format\n+  ) {\n+    return new TypeSafeDiagnosingMatcher<StreamInfo>() {\n+      @Override\n+      protected boolean matchesSafely(", "originalCommit": "2456569ee6be275416e81a49be0a4cff46ca588f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5Nzg5NA==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445197894", "bodyText": "I think so, for two reasons:\n\nI think it's useful for the test to validate the StreamInfo methods (getName, getTopic, getFormat) explicitly, since they're external APIs, rather than simply perform a comparison.\nStreamInfoImpl is package-private so the test can't even create StreamInfo instances for comparison, without exposing StreamInfoImpl which doesn't seem great.", "author": "vcrfxia", "createdAt": "2020-06-24T22:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NjE4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwNzE0MQ==", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445207141", "bodyText": "ah I had missed the distinction between the impl and the interface", "author": "agavra", "createdAt": "2020-06-24T22:29:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NjE4Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "97e17f680141acd80111b69295df889fe8257218", "url": "https://github.com/confluentinc/ksql/commit/97e17f680141acd80111b69295df889fe8257218", "message": "chore: feedback", "committedDate": "2020-06-24T22:00:18Z", "type": "commit"}]}