{"pr_number": 6066, "pr_title": "fix: Use a SandboxedPersistentQueryMetadata to not interact with KafkStreams", "pr_createdAt": "2020-08-20T19:51:52Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6066", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1Mzk0MQ==", "url": "https://github.com/confluentinc/ksql/pull/6066#discussion_r474353941", "bodyText": "it seems like stop/start aren't going to do anything except call the close callback - can we just override them to do nothing except for call the close callback?\nalso note #6068 I refactor this class a bit to make the close/stop a little clearer.", "author": "agavra", "createdAt": "2020-08-21T01:14:08Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/util/QueryMetadata.java", "diffHunk": "@@ -297,16 +309,16 @@ protected void doClose(final boolean cleanUp) {\n     closeKafkaStreams();\n \n     if (cleanUp) {\n-      kafkaStreams.cleanUp();\n+      cleanUpKafkaStreams();", "originalCommit": "3a1b5e317febc08973f8cf72296d42f8bfdad421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc1MzY2OQ==", "url": "https://github.com/confluentinc/ksql/pull/6066#discussion_r475753669", "bodyText": "Done", "author": "spena", "createdAt": "2020-08-24T16:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1Mzk0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f103b7860906255a88e0ffc4fc16e5eecee7bd1", "chunk": "diff --git a/ksqldb-engine/src/main/java/io/confluent/ksql/util/QueryMetadata.java b/ksqldb-engine/src/main/java/io/confluent/ksql/util/QueryMetadata.java\nindex f836c66870..f871780b69 100644\n--- a/ksqldb-engine/src/main/java/io/confluent/ksql/util/QueryMetadata.java\n+++ b/ksqldb-engine/src/main/java/io/confluent/ksql/util/QueryMetadata.java\n\n@@ -301,24 +298,28 @@ public abstract class QueryMetadata {\n    */\n   public void close() {\n     doClose(true);\n-    closeCallback.accept(this);\n   }\n \n-  protected void doClose(final boolean cleanUp) {\n+  private void doClose(final boolean cleanUp) {\n     closed = true;\n     closeKafkaStreams();\n \n     if (cleanUp) {\n-      cleanUpKafkaStreams();\n+      kafkaStreams.cleanUp();\n     }\n \n-    closeStateListener();\n+    queryStateListener.ifPresent(QueryStateListener::close);\n+\n+    if (cleanUp) {\n+      closeCallback.accept(this);\n+    }\n+    onStop.run();\n   }\n \n   public void start() {\n     LOG.info(\"Starting query with application id: {}\", queryApplicationId);\n     everStarted = true;\n-    startKafkaStreams();\n+    kafkaStreams.start();\n   }\n \n   public void clearErrors() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1NDA4Mg==", "url": "https://github.com/confluentinc/ksql/pull/6066#discussion_r474354082", "bodyText": "can we add test coverage here for what should/shouldn't happen? we have test coverage for the sandbox, but not that on validation we don't actually affect the KS app", "author": "agavra", "createdAt": "2020-08-21T01:14:36Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineContext.java", "diffHunk": "@@ -111,7 +112,7 @@ EngineContext createSandbox(final ServiceContext serviceContext) {\n     persistentQueries.forEach((queryId, query) ->\n         sandBox.persistentQueries.put(\n             query.getQueryId(),\n-            query.copyWith(sandBox::unregisterQuery)));\n+            SandboxedPersistentQueryMetadata.of(query, sandBox::unregisterQuery)));", "originalCommit": "3a1b5e317febc08973f8cf72296d42f8bfdad421", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc1NDMxOA==", "url": "https://github.com/confluentinc/ksql/pull/6066#discussion_r475754318", "bodyText": "Done.\nI added the cases in KsqlEngineTest. I didn't use the execute method in the tests because it wasn't allowing me to execute the terminate 'cause it is a not executable statement.", "author": "spena", "createdAt": "2020-08-24T16:49:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1NDA4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8f103b7860906255a88e0ffc4fc16e5eecee7bd1", "chunk": "diff --git a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineContext.java b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineContext.java\nindex bb5e18a32c..c07ce18db4 100644\n--- a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineContext.java\n+++ b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineContext.java\n\n@@ -105,14 +110,13 @@ final class EngineContext {\n         SandboxedServiceContext.create(serviceContext),\n         processingLogContext,\n         metaStore.copy(),\n-        queryIdGenerator.createSandbox(),\n-        (sc, query) -> { /* No-op */ }\n+        queryIdGenerator.createSandbox()\n     );\n \n     persistentQueries.forEach((queryId, query) ->\n         sandBox.persistentQueries.put(\n             query.getQueryId(),\n-            SandboxedPersistentQueryMetadata.of(query, sandBox::unregisterQuery)));\n+            SandboxedPersistentQueryMetadata.of(query, sandBox::closeQuery)));\n \n     return sandBox;\n   }\n"}}, {"oid": "8f103b7860906255a88e0ffc4fc16e5eecee7bd1", "url": "https://github.com/confluentinc/ksql/commit/8f103b7860906255a88e0ffc4fc16e5eecee7bd1", "message": "fix: address Almog's feedback\n\n- override only start/stop methods\n- add test case for not start/stop/close streams in ksqlengine sandbox", "committedDate": "2020-08-24T16:47:24Z", "type": "forcePushed"}, {"oid": "72f804fee4259abcfa00af61646d5dfaa5280955", "url": "https://github.com/confluentinc/ksql/commit/72f804fee4259abcfa00af61646d5dfaa5280955", "message": "fix: Use a SandboxedPersistentQueryMetadata to not interact with KafkaStreams", "committedDate": "2020-08-25T01:38:43Z", "type": "commit"}, {"oid": "df11076df91f98e18b3002d0cd92631b5a954998", "url": "https://github.com/confluentinc/ksql/commit/df11076df91f98e18b3002d0cd92631b5a954998", "message": "fix: address Almog's feedback\n\n- override only start/stop methods\n- add test case for not start/stop/close streams in ksqlengine sandbox", "committedDate": "2020-08-25T01:39:15Z", "type": "commit"}, {"oid": "d5e4f73d3c8b59449ccf9c8f652ba5a9ac8d2ae6", "url": "https://github.com/confluentinc/ksql/commit/d5e4f73d3c8b59449ccf9c8f652ba5a9ac8d2ae6", "message": "fix: use last command sequence number on TestKsqlRestApp", "committedDate": "2020-08-25T01:39:15Z", "type": "forcePushed"}, {"oid": "6081eaf8f72f4e8b625371872931621c8e9b7660", "url": "https://github.com/confluentinc/ksql/commit/6081eaf8f72f4e8b625371872931621c8e9b7660", "message": "fix: use last command sequence number on TestKsqlRestApp", "committedDate": "2020-08-25T03:09:42Z", "type": "commit"}, {"oid": "6081eaf8f72f4e8b625371872931621c8e9b7660", "url": "https://github.com/confluentinc/ksql/commit/6081eaf8f72f4e8b625371872931621c8e9b7660", "message": "fix: use last command sequence number on TestKsqlRestApp", "committedDate": "2020-08-25T03:09:42Z", "type": "forcePushed"}]}