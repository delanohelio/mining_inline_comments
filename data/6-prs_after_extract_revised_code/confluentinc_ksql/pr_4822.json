{"pr_number": 4822, "pr_title": "fix: Stop PARTITION BY and UDTFs that fail from terminating the query", "pr_createdAt": "2020-03-19T12:57:29Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4822", "timeline": [{"oid": "3aed09829f139a89f87df99fd3aa9d4da294e6c3", "url": "https://github.com/confluentinc/ksql/commit/3aed09829f139a89f87df99fd3aa9d4da294e6c3", "message": "refactor: easier access/mocking of processing logger\n\nThis commit all the steps needed to access a processing logger into the query builder, (which already knows the query id).", "committedDate": "2020-03-18T19:07:55Z", "type": "commit"}, {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43", "url": "https://github.com/confluentinc/ksql/commit/9515d06b874f073f94cf2f7a9276c8f88382be43", "message": "refactor: have ProcessingLogger.error accept object not function\n\nThis makes it easier to add unit tests that test _what_ is being logged.", "committedDate": "2020-03-19T10:06:46Z", "type": "commit"}, {"oid": "bc2d8b3f9526d44a0e8702491f14bd8d481be83d", "url": "https://github.com/confluentinc/ksql/commit/bc2d8b3f9526d44a0e8702491f14bd8d481be83d", "message": "refactor: remove KsqlQueryBuilder.getProcessingLogContext\n\nAs its only used in tests now - fixed tests.", "committedDate": "2020-03-19T10:23:39Z", "type": "commit"}, {"oid": "d4fbcaaa307a5356cd6296c199b6bd2c4f5a0de1", "url": "https://github.com/confluentinc/ksql/commit/d4fbcaaa307a5356cd6296c199b6bd2c4f5a0de1", "message": "chore: fix spotbugs", "committedDate": "2020-03-19T11:40:31Z", "type": "commit"}, {"oid": "063f66d0793207a46c9005c606f23ecd2bb369e8", "url": "https://github.com/confluentinc/ksql/commit/063f66d0793207a46c9005c606f23ecd2bb369e8", "message": "fix: PARTITION BY and UDTFs that fail from terminating the query\n\n`PARTITION BY` was recently enhanced to support any expression, rather than just column references.  If the expression expression results in an error, e.g. a UDF that throws an exception, this exception was not being handled - resulting in the query being terminated.\n\nUDTFs were recently introduced. If a UDTF throws an exception, or an exception occurs extracting a UDTFs parameters, e.g. if a parameter is a UDF that throws, then the exception was not being handled - resulting in the query being terminated.\n\nAll these exceptions are now handled by logging the error to the processing logger and continuing.", "committedDate": "2020-03-19T12:55:47Z", "type": "commit"}, {"oid": "0f3f72d5052f790e59c9d881a5bdb2d2e4349ab5", "url": "https://github.com/confluentinc/ksql/commit/0f3f72d5052f790e59c9d881a5bdb2d2e4349ab5", "message": "chore: fix immutability test", "committedDate": "2020-03-20T12:10:00Z", "type": "commit"}, {"oid": "9e27c6878e495151daace9faab225fc035b9efd8", "url": "https://github.com/confluentinc/ksql/commit/9e27c6878e495151daace9faab225fc035b9efd8", "message": "chore: merge from master\n\nConflicting files\nksqldb-common/src/main/java/io/confluent/ksql/errors/ProductionExceptionHandlerUtil.java\nksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogger.java\nksqldb-execution/src/main/java/io/confluent/ksql/execution/transform/select/SelectValueMapper.java\nksqldb-execution/src/main/java/io/confluent/ksql/execution/transform/sqlpredicate/SqlPredicate.java\nksqldb-execution/src/main/java/io/confluent/ksql/logging/processing/RecordProcessingError.java\nksqldb-execution/src/test/java/io/confluent/ksql/execution/transform/select/SelectValueMapperTest.java\nksqldb-execution/src/test/java/io/confluent/ksql/execution/transform/sqlpredicate/SqlPredicateTest.java\nksqldb-serde/src/main/java/io/confluent/ksql/logging/processing/DeserializationError.java\nksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/GroupByParamsFactory.java\nksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/timestamp/LoggingTimestampExtractor.java\nksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/GroupByParamsFactoryTest.java", "committedDate": "2020-03-20T14:22:29Z", "type": "commit"}, {"oid": "792ddbe1bff3dbdfe5feb241842e1a40968e75cf", "url": "https://github.com/confluentinc/ksql/commit/792ddbe1bff3dbdfe5feb241842e1a40968e75cf", "message": "chore: fix UDTF tests", "committedDate": "2020-03-20T14:44:11Z", "type": "commit"}, {"oid": "681a071a00cebc959720fb005016b466f2fbe9c7", "url": "https://github.com/confluentinc/ksql/commit/681a071a00cebc959720fb005016b466f2fbe9c7", "message": "chore: implement remaining todos", "committedDate": "2020-03-20T14:53:33Z", "type": "commit"}, {"oid": "8e36e8163b0eb1023534614cb98ea49750f85eaa", "url": "https://github.com/confluentinc/ksql/commit/8e36e8163b0eb1023534614cb98ea49750f85eaa", "message": "chore: merge from master\n\nConflicting files\nksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/StreamSelectKeyBuilder.java", "committedDate": "2020-03-20T17:51:38Z", "type": "commit"}, {"oid": "5774a1fb3d7057701088ba7bbb6c055f5f70db2a", "url": "https://github.com/confluentinc/ksql/commit/5774a1fb3d7057701088ba7bbb6c055f5f70db2a", "message": "chore: fix up tests", "committedDate": "2020-03-23T11:16:27Z", "type": "commit"}, {"oid": "a5e91b83ebd9d3322121401039340a872850be26", "url": "https://github.com/confluentinc/ksql/commit/a5e91b83ebd9d3322121401039340a872850be26", "message": "chore: merge from master\n\nConflicting files\nksqldb-execution/src/main/java/io/confluent/ksql/execution/transform/sqlpredicate/SqlPredicate.java", "committedDate": "2020-03-23T16:20:56Z", "type": "commit"}, {"oid": "83a61a5f04262dd5df4d0d38a26f52acd6670490", "url": "https://github.com/confluentinc/ksql/commit/83a61a5f04262dd5df4d0d38a26f52acd6670490", "message": "Merge branch 'master' into evaluator_logging", "committedDate": "2020-03-23T17:18:02Z", "type": "commit"}, {"oid": "5f0988ad668a988398aa9156f21447e62b8ab1ec", "url": "https://github.com/confluentinc/ksql/commit/5f0988ad668a988398aa9156f21447e62b8ab1ec", "message": "chore: handle null values", "committedDate": "2020-03-23T17:28:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNTEyMg==", "url": "https://github.com/confluentinc/ksql/pull/4822#discussion_r396625122", "bodyText": "get with the times! (\ud83d\ude09 update your file template)", "author": "agavra", "createdAt": "2020-03-23T17:25:34Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/ThrowingUdtf.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2019 Confluent Inc.", "originalCommit": "a5e91b83ebd9d3322121401039340a872850be26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2MDQ2NA==", "url": "https://github.com/confluentinc/ksql/pull/4822#discussion_r396660464", "bodyText": "My template is a macro..... weird...", "author": "big-andy-coates", "createdAt": "2020-03-23T18:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNTEyMg=="}], "type": "inlineReview", "revised_code": {"commit": "9f4dacab2119de71c50b8baa41ba6dad73b0603c", "chunk": "diff --git a/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/ThrowingUdtf.java b/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/ThrowingUdtf.java\nindex 96f5e7a2fb..384ead6070 100644\n--- a/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/ThrowingUdtf.java\n+++ b/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/ThrowingUdtf.java\n\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2019 Confluent Inc.\n+ * Copyright 2020 Confluent Inc.\n  *\n  * Licensed under the Confluent Community License (the \"License\"); you may not use\n  * this file except in compliance with the License.  You may obtain a copy of the\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNjQzNg==", "url": "https://github.com/confluentinc/ksql/pull/4822#discussion_r396626436", "bodyText": "I think there's an existing configuration about whether to hard-fail on error or log-and-continue. If there is, we should respect that, and if there isn't we should add one so people can control if they want their application skipping events", "author": "agavra", "createdAt": "2020-03-23T17:27:29Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/ExpressionMetadata.java", "diffHunk": "@@ -62,16 +64,35 @@ public Expression getExpression() {\n     return expression;\n   }\n \n-  public Object evaluate(final GenericRow row) {\n+  /**\n+   * Evaluate the expression against the supplied {@code row}.\n+   *\n+   * <p>On error the supplied {@code logger} is called with the details of the error and the method\n+   * return {@code null}.\n+   *\n+   * @param row the row of data to evaluate the expression against.\n+   * @param defaultValue the value to return if an exception is thrown.\n+   * @param logger an optional logger to log errors to. If not supplied the method throws on error.\n+   * @param errorMsg called to get the text for the logged error.\n+   * @return the result of the evaluation.\n+   */\n+  public Object evaluate(\n+      final GenericRow row,\n+      final Object defaultValue,\n+      final ProcessingLogger logger,\n+      final Supplier<String> errorMsg\n+  ) {\n     try {\n       return expressionEvaluator.evaluate(getParameters(row));\n     } catch (final InvocationTargetException e) {\n-      throw new KsqlException(e.getCause().getMessage(), e.getCause());\n+      logger.error(RecordProcessingError.recordProcessingError(errorMsg.get(), e.getCause(), row));", "originalCommit": "a5e91b83ebd9d3322121401039340a872850be26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2NDQwNQ==", "url": "https://github.com/confluentinc/ksql/pull/4822#discussion_r396664405", "bodyText": "It's an interesting point...\nHowever, the changes I've made in this PR close a few holes where we invoke evaluate but don't protect it within a try/catch(log) block.\nThe existing places that do this try/catch(log) block do NOT honour any streams exception handling config on whether to exist or log-and-continue.\nHence, while I think it's an interesting point, I also think its outside the scope of this change.  A log of our code / UDFs etc throw NPEs and a variety of other exceptions. We'd need to clean all those up before having a query terminate due to bad data...", "author": "big-andy-coates", "createdAt": "2020-03-23T18:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNjQzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3OTc3Nw==", "url": "https://github.com/confluentinc/ksql/pull/4822#discussion_r396679777", "bodyText": "Talked offline - @agavra's happy with this.", "author": "big-andy-coates", "createdAt": "2020-03-23T18:47:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyNjQzNg=="}], "type": "inlineReview", "revised_code": {"commit": "5f0988ad668a988398aa9156f21447e62b8ab1ec", "chunk": "diff --git a/ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/ExpressionMetadata.java b/ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/ExpressionMetadata.java\nindex 82f979b303..daf0c64722 100644\n--- a/ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/ExpressionMetadata.java\n+++ b/ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/ExpressionMetadata.java\n\n@@ -84,8 +84,12 @@ public class ExpressionMetadata {\n   ) {\n     try {\n       return expressionEvaluator.evaluate(getParameters(row));\n-    } catch (final InvocationTargetException e) {\n-      logger.error(RecordProcessingError.recordProcessingError(errorMsg.get(), e.getCause(), row));\n+    } catch (final Exception e) {\n+      final Throwable cause = e instanceof InvocationTargetException\n+          ? e.getCause()\n+          : e;\n+\n+      logger.error(RecordProcessingError.recordProcessingError(errorMsg.get(), cause, row));\n       return defaultValue;\n     }\n   }\n"}}, {"oid": "9f4dacab2119de71c50b8baa41ba6dad73b0603c", "url": "https://github.com/confluentinc/ksql/commit/9f4dacab2119de71c50b8baa41ba6dad73b0603c", "message": "Update cr date", "committedDate": "2020-03-23T18:19:38Z", "type": "commit"}, {"oid": "402e53fc524bbab930e705742efecf8418279116", "url": "https://github.com/confluentinc/ksql/commit/402e53fc524bbab930e705742efecf8418279116", "message": "Merge branch 'master' into evaluator_logging", "committedDate": "2020-03-23T18:28:40Z", "type": "commit"}]}