{"pr_number": 4427, "pr_title": "refactor: Changes lag APIs to return Optional, per comments", "pr_createdAt": "2020-02-03T20:42:13Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4427", "timeline": [{"oid": "b649ae54afe4ff2a19fde8d2fd4a180ff789640e", "url": "https://github.com/confluentinc/ksql/commit/b649ae54afe4ff2a19fde8d2fd4a180ff789640e", "message": "refactor: Changes lag APIs to return Optional, per comments", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "41f0d6fe7cc2dc481d1f053dc8511710af6d8f7a", "url": "https://github.com/confluentinc/ksql/commit/41f0d6fe7cc2dc481d1f053dc8511710af6d8f7a", "message": "Simplifies test", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "c271a0f44c482ca4b9c4858e4ee1b373b6f39540", "url": "https://github.com/confluentinc/ksql/commit/c271a0f44c482ca4b9c4858e4ee1b373b6f39540", "message": "Additional test simplification", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "d7ed77e0bbe48b44f64626b14dae1cf69d2e0ae3", "url": "https://github.com/confluentinc/ksql/commit/d7ed77e0bbe48b44f64626b14dae1cf69d2e0ae3", "message": "Remove unused empty objects", "committedDate": "2020-02-03T23:44:40Z", "type": "commit"}, {"oid": "4ce99053548ee0a03093d3b0c938c0cd983f45bb", "url": "https://github.com/confluentinc/ksql/commit/4ce99053548ee0a03093d3b0c938c0cd983f45bb", "message": "Fixes tests", "committedDate": "2020-02-03T23:44:40Z", "type": "commit"}, {"oid": "4ce99053548ee0a03093d3b0c938c0cd983f45bb", "url": "https://github.com/confluentinc/ksql/commit/4ce99053548ee0a03093d3b0c938c0cd983f45bb", "message": "Fixes tests", "committedDate": "2020-02-03T23:44:40Z", "type": "forcePushed"}, {"oid": "bdce4832ad55855c4edb06b67f9a397e11513418", "url": "https://github.com/confluentinc/ksql/commit/bdce4832ad55855c4edb06b67f9a397e11513418", "message": "Fix validation after rebase", "committedDate": "2020-02-04T00:21:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5Mzk0OQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374793949", "bodyText": "nit: if you invert this if you could move it before the construction of the lagInfo var.\ne.g.\n  if (!aliveHosts.contains(host)) {\n     return Optional.empty();\n   }\n\n   final Optional<LagInfoEntity> lagInfo = ...\n   return lagInfo;", "author": "big-andy-coates", "createdAt": "2020-02-04T16:51:47Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java", "diffHunk": "@@ -171,12 +167,11 @@ public void receiveHostLag(final LagReportingMessage lagReportingMessage) {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final LagInfoEntity lagInfo = receivedLagInfo\n-        .getOrDefault(host, EMPTY_HOST_STORE_LAGS)\n-        .getStateStoreLagsOrDefault(queryStateStoreId, EMPTY_STATE_STORE_LAGS)\n-        .getLagByPartition(partition);\n-    if (aliveHosts.contains(host) && lagInfo != null) {\n-      return Optional.of(lagInfo);\n+    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n+        .flatMap(hostStoreLags -> hostStoreLags.getStateStoreLags(queryStateStoreId))\n+        .flatMap(stateStoreLags -> stateStoreLags.getLagByPartition(partition));\n+    if (aliveHosts.contains(host)) {", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0ODA1OQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374848059", "bodyText": "Done", "author": "AlanConfluent", "createdAt": "2020-02-04T18:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5Mzk0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4908b72e6181dcc75e4d936ea4dbd98f83060e81", "chunk": "diff --git a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\nindex e4c0637954..cab44c277c 100644\n--- a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\n+++ b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\n\n@@ -167,13 +167,12 @@ public final class LagReportingAgent implements HostStatusListener {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n+    if (!aliveHosts.contains(host)) {\n+      return Optional.empty();\n+    }\n+    return getLagPerHost(host)\n         .flatMap(hostStoreLags -> hostStoreLags.getStateStoreLags(queryStateStoreId))\n         .flatMap(stateStoreLags -> stateStoreLags.getLagByPartition(partition));\n-    if (aliveHosts.contains(host)) {\n-      return lagInfo;\n-    }\n-    return Optional.empty();\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTA5Mg==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374795092", "bodyText": "Can't this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n          \n          \n            \n                final Optional<LagInfoEntity> lagInfo = getLagPerHost(host)\n          \n      \n    \n    \n  \n\n??", "author": "big-andy-coates", "createdAt": "2020-02-04T16:53:45Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java", "diffHunk": "@@ -171,12 +167,11 @@ public void receiveHostLag(final LagReportingMessage lagReportingMessage) {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final LagInfoEntity lagInfo = receivedLagInfo\n-        .getOrDefault(host, EMPTY_HOST_STORE_LAGS)\n-        .getStateStoreLagsOrDefault(queryStateStoreId, EMPTY_STATE_STORE_LAGS)\n-        .getLagByPartition(partition);\n-    if (aliveHosts.contains(host) && lagInfo != null) {\n-      return Optional.of(lagInfo);\n+    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NzU2MQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374847561", "bodyText": "Yep, changed.", "author": "AlanConfluent", "createdAt": "2020-02-04T18:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTA5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4908b72e6181dcc75e4d936ea4dbd98f83060e81", "chunk": "diff --git a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\nindex e4c0637954..cab44c277c 100644\n--- a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\n+++ b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java\n\n@@ -167,13 +167,12 @@ public final class LagReportingAgent implements HostStatusListener {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n+    if (!aliveHosts.contains(host)) {\n+      return Optional.empty();\n+    }\n+    return getLagPerHost(host)\n         .flatMap(hostStoreLags -> hostStoreLags.getStateStoreLags(queryStateStoreId))\n         .flatMap(stateStoreLags -> stateStoreLags.getLagByPartition(partition));\n-    if (aliveHosts.contains(host)) {\n-      return lagInfo;\n-    }\n-    return Optional.empty();\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTk5Nw==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374795997", "bodyText": "Think this can just be:\nprivate HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n    return lagReportingAgent\n        .map(agent -> agent.getLagPerHost(ksqlHost))\n        .orElse(EMPTY_HOST_STORE_LAGS);\n  }", "author": "big-andy-coates", "createdAt": "2020-02-04T16:55:18Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java", "diffHunk": "@@ -71,12 +71,17 @@ private ClusterStatusResponse getResponse() {\n             entry -> new KsqlHostEntity(entry.getKey().host(), entry.getKey().port()) ,\n             entry -> new HostStatusEntity(entry.getValue().isHostAlive(),\n                                           entry.getValue().getLastStatusUpdateMs(),\n-                                          lagReportingAgent.isPresent()\n-                                              ? lagReportingAgent.get().getLagPerHost(\n-                                                  entry.getKey())\n-                                              : EMPTY_HOST_STORE_LAGS)\n+                                          getHostStoreLags(entry.getKey()))\n         ));\n \n     return new ClusterStatusResponse(response);\n   }\n+\n+  private HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n+    if (!lagReportingAgent.isPresent()) {\n+      return EMPTY_HOST_STORE_LAGS;\n+    }\n+    final Optional<HostStoreLags> lags = lagReportingAgent.get().getLagPerHost(ksqlHost);\n+    return lags.orElse(EMPTY_HOST_STORE_LAGS);\n+  }", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1MDMwOQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374850309", "bodyText": "Done", "author": "AlanConfluent", "createdAt": "2020-02-04T18:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTk5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "4908b72e6181dcc75e4d936ea4dbd98f83060e81", "chunk": "diff --git a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java\nindex 77f47adf50..edbcd77095 100644\n--- a/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java\n+++ b/ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java\n\n@@ -78,10 +78,8 @@ public class ClusterStatusResource {\n   }\n \n   private HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n-    if (!lagReportingAgent.isPresent()) {\n-      return EMPTY_HOST_STORE_LAGS;\n-    }\n-    final Optional<HostStoreLags> lags = lagReportingAgent.get().getLagPerHost(ksqlHost);\n-    return lags.orElse(EMPTY_HOST_STORE_LAGS);\n+    return lagReportingAgent\n+      .flatMap(agent -> agent.getLagPerHost(ksqlHost))\n+        .orElse(EMPTY_HOST_STORE_LAGS);\n   }\n }\n"}}, {"oid": "4908b72e6181dcc75e4d936ea4dbd98f83060e81", "url": "https://github.com/confluentinc/ksql/commit/4908b72e6181dcc75e4d936ea4dbd98f83060e81", "message": "Feedback", "committedDate": "2020-02-04T18:41:44Z", "type": "commit"}]}