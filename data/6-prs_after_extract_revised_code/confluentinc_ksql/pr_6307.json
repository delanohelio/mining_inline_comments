{"pr_number": 6307, "pr_title": "Refactor: remove `SerdeOption`", "pr_createdAt": "2020-09-28T16:47:17Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6307", "timeline": [{"oid": "c95f9c0658badb42ef144d5d281a0d4dbaa7734d", "url": "https://github.com/confluentinc/ksql/commit/c95f9c0658badb42ef144d5d281a0d4dbaa7734d", "message": "chore: unwrap single keys on internal topics\n\nfixes: https://github.com/confluentinc/ksql/issues/6209\n\nEnsure internal changelog and repartition topics set `SerdeFeature.UNWRAP_SINGLES` if the key format supports both unwrapping and wrapping.  This is done to avoid ambiguity, which may cause compatibility issues once wrapped keys are supported.", "committedDate": "2020-09-25T12:48:45Z", "type": "commit"}, {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003", "url": "https://github.com/confluentinc/ksql/commit/2b58bed63f1200aa2cfe3325c59f6411d437d003", "message": "refactor: remove `SerdeOption`\n\n`SerdeOption` and `SerdeFeature` serve pretty much the same function. Formats define what features they support using the `SerdeFeature` enum, i.e. it operates at the _format_ level. Conversely, `SerdeOption` operates at the _topic_ level. It holds the serde features required for both the key and value formats. It's just code bloat, in there for historical reasons.\n\nThis commit removes `SerdeOption` from the code base, replacing it with `SerdeFeature`.\n\nChanges:\n\n1. Removed `SerdeOption` enum and `SerdeOptions` class.\n1. Renamed `EnabledSerdeFeatures` -> `SerdeFeatures`.  This class is just a validated set of features. You can't build an instance with conflicting features, e.g. both `WRAP_SINGLES` and `UNWRAPE_SINGLES`.\n1. Split the `SerdeOptions` attribute of `DataSource` into `SerdeFeatures` attributes of the `KeyFormat` and `ValueFormat` classes, which are attributes of the `KsqlTopic` class, which itself is an attribute of the `DataSource`.\n  ```\n  // Previously:\n  dataSource->serdeOptions   <-- stored SerdeOptions for both key and value\n\n  // Now:\n  dataSource->ksqlTopic->keyFormat->features  <-- stores SerdeFeatures for the key\n                       ->valueFormat->features  <-- stores SerdeFeatures for the value\n  ```\n1. C* statements simply construct the `KsqlTopic` with the serde features set on the key and value format.\n1. C*AS are slightly more complex. Previously the `Analyser` was constructing the `KsqlTopic`, and the Logical Plan was constructing the `SerdeOption`.  Now the `Analsyser` can't construct the `KsqlTopic` as the `SerdeFeatures` are unknown at this point.  Hence it creates a `NewTopic`, which the Logical Plan uses to build the `KsqlTopic` once its constructed the `SerdeFeatures`.\n1. `SchemaKStream.into` and `SchemaKTable.into` now just take the `KsqlTopic`, rather than lots of individual params.\n1. `SerdeOptionsFactory`, the class responsible for building the `SerdeOptions` has been renamed to `SerdeFeaturesFactory` and now has separate methods for building key and value features.\n1. `PhysicalSchema` no longer stores `SerdeOptions`, as the key and value `PersistenceSchema`s already track the `SerdeFeatures`.\n1. Each `SerdeFeature` now defines any other features it is not compatible with - making this more data driven.\n1. *Command Topic change*:\n   1. The `Formats` type is used to serialize format information to the command topic. Previously, it stored the key and value `FormatInfo` and the `SerdeOptions`.  Now it stores key and value `FormatInfo` and key and value `SerdeFeatures`.  To enable backwards compatibility with older plans the factory method used by Jackson when deserializing the plans accepts both old and new attributes and converts the old into the new format.\n1. *QTT changes*\n   1. Not historic query plans need to change because change!\n   1. Historic query _specs_ have been changed: places that stored the serde options have been changed to store the serde features\n   1. `ValueFormat` was being serialized as a value type, but now has a `SerdeFeatures` attribute, so the type now exposes the format name and properties of its inner `FormatInfo` manually. (So the JSON is clean).\n   1. `KeyFormat` was being serialized with an inner `formatInfo` field. This was out of whack with `ValueFormat`, so this has been changed to follow the same pattern as `ValueFormat`.\n   1. A few QTT changes have been updated to use the new layout.", "committedDate": "2020-09-28T16:11:29Z", "type": "commit"}, {"oid": "0e30cdbb399a56da0723ef5dedcdfc261c44e2f3", "url": "https://github.com/confluentinc/ksql/commit/0e30cdbb399a56da0723ef5dedcdfc261c44e2f3", "message": "test: major stuff", "committedDate": "2020-09-28T16:12:01Z", "type": "commit"}, {"oid": "acabcfc0ba7c0b9973fc90638970b0e395793c58", "url": "https://github.com/confluentinc/ksql/commit/acabcfc0ba7c0b9973fc90638970b0e395793c58", "message": "refactor: minor stuff", "committedDate": "2020-09-28T16:13:10Z", "type": "commit"}, {"oid": "59d619fa938f73d211934f497b18a62adf364448", "url": "https://github.com/confluentinc/ksql/commit/59d619fa938f73d211934f497b18a62adf364448", "message": "test: minor stuff", "committedDate": "2020-09-28T16:14:43Z", "type": "commit"}, {"oid": "22848de7e0b7e54e162ee65d969580298e87da1b", "url": "https://github.com/confluentinc/ksql/commit/22848de7e0b7e54e162ee65d969580298e87da1b", "message": "test: qtt", "committedDate": "2020-09-28T16:22:21Z", "type": "commit"}, {"oid": "0c2062a499e9c6e562ecc6caa8461a89b7c917c7", "url": "https://github.com/confluentinc/ksql/commit/0c2062a499e9c6e562ecc6caa8461a89b7c917c7", "message": "test: historical plans", "committedDate": "2020-09-28T16:27:14Z", "type": "commit"}, {"oid": "869990f5ae096166916c3565ed0fc6cd95e48965", "url": "https://github.com/confluentinc/ksql/commit/869990f5ae096166916c3565ed0fc6cd95e48965", "message": "chore: merge from master", "committedDate": "2020-09-28T16:38:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NDkxNA==", "url": "https://github.com/confluentinc/ksql/pull/6307#discussion_r496094914", "bodyText": "Actually a rename from EnabledSerdeFeatures, but git's lost track.", "author": "big-andy-coates", "createdAt": "2020-09-28T16:51:50Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeatures.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.Sets;\n+import com.google.errorprone.annotations.Immutable;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import io.confluent.ksql.util.GrammaticalJoiner;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+\n+/**\n+ * Validated set of enabled features\n+ *\n+ * <p>Known to not have conflicting features enabled\n+ */\n+@Immutable\n+public final class SerdeFeatures {", "originalCommit": "2b58bed63f1200aa2cfe3325c59f6411d437d003", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTI1Mw==", "url": "https://github.com/confluentinc/ksql/pull/6307#discussion_r496095253", "bodyText": "Actually a rename from SerdeOptionsFactory...", "author": "big-andy-coates", "createdAt": "2020-09-28T16:52:26Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/serde/SerdeFeaturesFactory.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.confluent.ksql.properties.with.CommonCreateConfigs;\n+import io.confluent.ksql.schema.ksql.LogicalSchema;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.confluent.ksql.util.KsqlException;\n+import java.util.Optional;\n+\n+public final class SerdeFeaturesFactory {", "originalCommit": "2b58bed63f1200aa2cfe3325c59f6411d437d003", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "397f8706d354e3f8102d6853f35d56b7d72b6593", "url": "https://github.com/confluentinc/ksql/commit/397f8706d354e3f8102d6853f35d56b7d72b6593", "message": "chore: fix test", "committedDate": "2020-09-29T13:22:17Z", "type": "commit"}, {"oid": "d4b3f42339bb72346d88f1d3b44b33d8512656c1", "url": "https://github.com/confluentinc/ksql/commit/d4b3f42339bb72346d88f1d3b44b33d8512656c1", "message": "Merge branch 'master' into unwrapped_internals", "committedDate": "2020-09-29T13:22:58Z", "type": "commit"}, {"oid": "a9b232b68d27d69c5a3e469da6cc8f95a421e5c6", "url": "https://github.com/confluentinc/ksql/commit/a9b232b68d27d69c5a3e469da6cc8f95a421e5c6", "message": "chore: vic's got nits", "committedDate": "2020-09-29T14:27:54Z", "type": "commit"}]}