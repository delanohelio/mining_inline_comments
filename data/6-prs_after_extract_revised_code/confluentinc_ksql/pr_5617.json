{"pr_number": 5617, "pr_title": "fix: don't fail if broker does not support AuthorizedOperations", "pr_createdAt": "2020-06-12T17:54:29Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5617", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU3MDAzNQ==", "url": "https://github.com/confluentinc/ksql/pull/5617#discussion_r439570035", "bodyText": "this test is currently broken, I didn't do proper setup - I'm looking into it now", "author": "agavra", "createdAt": "2020-06-12T18:07:49Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/security/KsqlAuthorizationValidatorFactoryTest.java", "diffHunk": "@@ -176,6 +178,22 @@ public void shouldReturnEmptyValidatorIfAuthorizedOperationsReturnNull() {\n     assertThat(validator, is(Optional.empty()));\n   }\n \n+  @Test\n+  public void shouldReturnEmptyValidatorIfKafkaBrokerVersionTooLow() {", "originalCommit": "e0439541c60e8c79793613092360ac87ac179977", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9e1bebf5b79b9f20eba4ea1200ba391d28e6304", "chunk": "diff --git a/ksqldb-engine/src/test/java/io/confluent/ksql/security/KsqlAuthorizationValidatorFactoryTest.java b/ksqldb-engine/src/test/java/io/confluent/ksql/security/KsqlAuthorizationValidatorFactoryTest.java\nindex 944ef92e4c..e55137bba9 100644\n--- a/ksqldb-engine/src/test/java/io/confluent/ksql/security/KsqlAuthorizationValidatorFactoryTest.java\n+++ b/ksqldb-engine/src/test/java/io/confluent/ksql/security/KsqlAuthorizationValidatorFactoryTest.java\n\n@@ -179,10 +179,21 @@ public class KsqlAuthorizationValidatorFactoryTest {\n   }\n \n   @Test\n-  public void shouldReturnEmptyValidatorIfKafkaBrokerVersionTooLow() {\n+  public void shouldReturnEmptyValidatorIfKafkaBrokerVersionTooLowButAuthorizerClassConfigIsSet() {\n     // Given:\n-    when(adminClient.describeCluster( new DescribeClusterOptions().includeAuthorizedOperations(true)))\n-        .thenThrow(new UnsupportedVersionException(\"too old\"));\n+    final Collection<Node> nodes = Collections.singletonList(node);\n+    final DescribeClusterResult describeClusterResult = mock(DescribeClusterResult.class);\n+    when(describeClusterResult.nodes()).thenReturn(KafkaFuture.completedFuture(nodes));\n+    when(adminClient.describeCluster()).thenReturn(describeClusterResult);\n+\n+    final DescribeConfigsResult describeConfigsResult = describeBrokerResult(\n+        Collections.singletonList(\n+            new ConfigEntry(KAFKA_AUTHORIZER_CLASS_NAME, \"a-class\")\n+        )\n+    );\n+    when(adminClient.describeConfigs(describeBrokerRequest()))\n+        .thenReturn(describeConfigsResult);\n+    when(adminClient.describeCluster(any())).thenThrow(new UnsupportedVersionException(\"too old\"));\n \n     // When:\n     final Optional<KsqlAuthorizationValidator> validator = KsqlAuthorizationValidatorFactory.create(\n"}}, {"oid": "d9e1bebf5b79b9f20eba4ea1200ba391d28e6304", "url": "https://github.com/confluentinc/ksql/commit/d9e1bebf5b79b9f20eba4ea1200ba391d28e6304", "message": "fix: do not fail if kafka broker does not support AuthorizedOperations", "committedDate": "2020-06-12T18:10:24Z", "type": "commit"}, {"oid": "d9e1bebf5b79b9f20eba4ea1200ba391d28e6304", "url": "https://github.com/confluentinc/ksql/commit/d9e1bebf5b79b9f20eba4ea1200ba391d28e6304", "message": "fix: do not fail if kafka broker does not support AuthorizedOperations", "committedDate": "2020-06-12T18:10:24Z", "type": "forcePushed"}]}