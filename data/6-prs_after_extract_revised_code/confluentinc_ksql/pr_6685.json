{"pr_number": 6685, "pr_title": "feat: added NULLIF function (#6567)", "pr_createdAt": "2020-11-27T09:09:43Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6685", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMDkxNQ==", "url": "https://github.com/confluentinc/ksql/pull/6685#discussion_r532720915", "bodyText": "Could you add a test when value2 is null and value1 is not null?\nCould you add a test to verify case-sensitive comparison? nullif(\"a\", \"A\")", "author": "spena", "createdAt": "2020-11-30T16:19:26Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/nulls/NullIfTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.confluent.ksql.function.udf.nulls;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+public class NullIfTest {\n+\n+  private NullIf udf;\n+\n+  @Before\n+  public void setUp() {\n+    udf = new NullIf();\n+  }\n+\n+  @Test\n+  public void shouldReturnNullIfBothValuesAreNulls() {\n+    assertThat(udf.nullIf(null, null), is(nullValue()));\n+  }\n+\n+  @Test\n+  public void shouldReturnNullIfValue1IsNull() {\n+    assertThat(udf.nullIf(null, \"a\"), is(nullValue()));\n+  }\n+\n+  @Test\n+  public void shouldReturnNullIfBothValuesAreEqual() {\n+    assertThat(udf.nullIf(\"a\", \"a\"), is(nullValue()));\n+  }\n+\n+  @Test\n+  public void shouldReturnValue1IfBothValuesAreNonEqual() {\n+    assertThat(udf.nullIf(\"a\", \"b\"), is(\"a\"));\n+  }", "originalCommit": "8429d40f3f68e3b14d7692547cd7f4215541440a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3NjEzMQ==", "url": "https://github.com/confluentinc/ksql/pull/6685#discussion_r538076131", "bodyText": "Added more tests", "author": "fjbecerra", "createdAt": "2020-12-08T06:48:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMDkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "97d48f5e8cf37f40c4d3f97c6b9e5bc0ed00ce21", "chunk": "diff --git a/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/nulls/NullIfTest.java b/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/nulls/NullIfTest.java\nindex 176d83b147..8b69ee028f 100644\n--- a/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/nulls/NullIfTest.java\n+++ b/ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/nulls/NullIfTest.java\n\n@@ -35,4 +35,14 @@ public class NullIfTest {\n   public void shouldReturnValue1IfBothValuesAreNonEqual() {\n     assertThat(udf.nullIf(\"a\", \"b\"), is(\"a\"));\n   }\n+\n+  @Test\n+  public void shouldReturnValue1IfValue1IsNotNullAndValue2IsNull(){\n+    assertThat(udf.nullIf(\"a\", null), is(\"a\"));\n+  }\n+\n+  @Test\n+  public void shouldReturnValue1CaseSensitive(){\n+    assertThat(udf.nullIf(\"a\", \"A\"), is(\"a\"));\n+  }\n }\n\\ No newline at end of file\n"}}, {"oid": "97d48f5e8cf37f40c4d3f97c6b9e5bc0ed00ce21", "url": "https://github.com/confluentinc/ksql/commit/97d48f5e8cf37f40c4d3f97c6b9e5bc0ed00ce21", "message": "feat: added NULLIF function (#6567)", "committedDate": "2020-12-02T08:00:44Z", "type": "forcePushed"}, {"oid": "d5e35c154336c5d66e90a8f0bf5ddd607c51a8ed", "url": "https://github.com/confluentinc/ksql/commit/d5e35c154336c5d66e90a8f0bf5ddd607c51a8ed", "message": "feat: added NULLIF function (#6567)", "committedDate": "2021-05-06T06:06:26Z", "type": "commit"}, {"oid": "d5e35c154336c5d66e90a8f0bf5ddd607c51a8ed", "url": "https://github.com/confluentinc/ksql/commit/d5e35c154336c5d66e90a8f0bf5ddd607c51a8ed", "message": "feat: added NULLIF function (#6567)", "committedDate": "2021-05-06T06:06:26Z", "type": "forcePushed"}]}