{"pr_number": 5680, "pr_title": "feat: support WINDOWEND in WHERE of pull queries", "pr_createdAt": "2020-06-24T23:13:20Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5680", "timeline": [{"oid": "3bfdd0c36a80e4697e7a68caba186d7107958c30", "url": "https://github.com/confluentinc/ksql/commit/3bfdd0c36a80e4697e7a68caba186d7107958c30", "message": "feat: support WINDOWEND in WHERE of pull queries\n\nfixes: https://github.com/confluentinc/ksql/issues/5666", "committedDate": "2020-06-24T23:11:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyODE4MA==", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445228180", "bodyText": "Extra parens", "author": "AlanConfluent", "createdAt": "2020-06-24T23:35:40Z", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "diffHunk": "@@ -61,28 +63,35 @@\n   private List<WindowedRow> findSession(\n       final ReadOnlySessionStore<Struct, GenericRow> store,\n       final Struct key,\n-      final Range<Instant> windowStart\n+      final Range<Instant> windowStart,\n+      final Range<Instant> windowEnd\n   ) {\n     try (KeyValueIterator<Windowed<Struct>, GenericRow> it = store.fetch(key)) {\n \n       final Builder<WindowedRow> builder = ImmutableList.builder();\n \n       while (it.hasNext()) {\n         final KeyValue<Windowed<Struct>, GenericRow> next = it.next();\n+        final Window wnd = next.key.window();\n \n-        if (windowStart.contains(next.key.window().startTime())) {\n+        if (!windowStart.contains(wnd.startTime())) {\n+          continue;\n+        }\n+\n+        if (!windowEnd.contains((wnd.endTime()))) {", "originalCommit": "3bfdd0c36a80e4697e7a68caba186d7107958c30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "167b419149eb98e648b8f5a00179344d42c2f5de", "chunk": "diff --git a/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java b/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\nindex f380f4a2c9..e45fe0ea5d 100644\n--- a/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\n+++ b/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\n\n@@ -78,7 +78,7 @@ class KsMaterializedSessionTable implements MaterializedWindowedTable {\n           continue;\n         }\n \n-        if (!windowEnd.contains((wnd.endTime()))) {\n+        if (!windowEnd.contains(wnd.endTime())) {\n           continue;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzMjkyOA==", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445232928", "bodyText": "Just for my own knowledge, why don't we fetch from the store using the same bounds as in KsMaterializedWindowTable.java.  Is it because the window sizes are not uniform in size and therefore we don't know exactly where to stop if all we know is the window start range?  If they provide a window end range now, it seems like we could provide bounds to the store lookup (and could use Long.MAX_VALUE anyway).", "author": "AlanConfluent", "createdAt": "2020-06-24T23:51:52Z", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "diffHunk": "@@ -61,28 +63,35 @@\n   private List<WindowedRow> findSession(\n       final ReadOnlySessionStore<Struct, GenericRow> store,\n       final Struct key,\n-      final Range<Instant> windowStart\n+      final Range<Instant> windowStart,\n+      final Range<Instant> windowEnd\n   ) {\n     try (KeyValueIterator<Windowed<Struct>, GenericRow> it = store.fetch(key)) {", "originalCommit": "3bfdd0c36a80e4697e7a68caba186d7107958c30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2NTgzMw==", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445465833", "bodyText": "The Streams API for session tables is different.  There is no fetch(key, lower, upper) method.", "author": "big-andy-coates", "createdAt": "2020-06-25T10:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzMjkyOA=="}], "type": "inlineReview", "revised_code": {"commit": "167b419149eb98e648b8f5a00179344d42c2f5de", "chunk": "diff --git a/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java b/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\nindex f380f4a2c9..e45fe0ea5d 100644\n--- a/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\n+++ b/ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java\n\n@@ -78,7 +78,7 @@ class KsMaterializedSessionTable implements MaterializedWindowedTable {\n           continue;\n         }\n \n-        if (!windowEnd.contains((wnd.endTime()))) {\n+        if (!windowEnd.contains(wnd.endTime())) {\n           continue;\n         }\n \n"}}, {"oid": "167b419149eb98e648b8f5a00179344d42c2f5de", "url": "https://github.com/confluentinc/ksql/commit/167b419149eb98e648b8f5a00179344d42c2f5de", "message": "chore: changes requested by Alan", "committedDate": "2020-06-25T10:38:41Z", "type": "commit"}]}