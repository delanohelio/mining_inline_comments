{"pr_number": 5360, "pr_title": "fix(client): Java client error handling", "pr_createdAt": "2020-05-14T08:00:27Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5360", "timeline": [{"oid": "80190160c3ae27e49ca809b5653947b534cfd147", "url": "https://github.com/confluentinc/ksql/commit/80190160c3ae27e49ca809b5653947b534cfd147", "message": "chore: rename BaseApiTest columns", "committedDate": "2020-05-12T19:42:47Z", "type": "commit"}, {"oid": "d45869ed9f67879a67304cafd270661b4eece614", "url": "https://github.com/confluentinc/ksql/commit/d45869ed9f67879a67304cafd270661b4eece614", "message": "test: add complex types to BaseApiTest", "committedDate": "2020-05-12T22:06:38Z", "type": "commit"}, {"oid": "f1494cf0e5b3941453327eb5178eaa554d02e102", "url": "https://github.com/confluentinc/ksql/commit/f1494cf0e5b3941453327eb5178eaa554d02e102", "message": "refactor: collect row verification in ClientTest into one place", "committedDate": "2020-05-12T22:34:25Z", "type": "commit"}, {"oid": "6387d698fc441d7a5da51c5a84fb95099ea2da81", "url": "https://github.com/confluentinc/ksql/commit/6387d698fc441d7a5da51c5a84fb95099ea2da81", "message": "test: exercise Row methods in ClientTest", "committedDate": "2020-05-12T22:58:08Z", "type": "commit"}, {"oid": "b0acc152812ed18e2d1fdeb072c0913c41eea480", "url": "https://github.com/confluentinc/ksql/commit/b0acc152812ed18e2d1fdeb072c0913c41eea480", "message": "test: exercise KsqlArray and KsqlObject methods in ClientTest", "committedDate": "2020-05-13T20:41:27Z", "type": "commit"}, {"oid": "8303a4c77103912d582069e8637dc8ed34e5a6b1", "url": "https://github.com/confluentinc/ksql/commit/8303a4c77103912d582069e8637dc8ed34e5a6b1", "message": "fix: do not close PollableSubscriber on complete til all rows delivered", "committedDate": "2020-05-13T21:04:01Z", "type": "commit"}, {"oid": "424e8918bb6017ae75cd55afa664430e3e0ee6f0", "url": "https://github.com/confluentinc/ksql/commit/424e8918bb6017ae75cd55afa664430e3e0ee6f0", "message": "Merge branch 'master' into java-client-test-coverage-2", "committedDate": "2020-05-13T21:04:47Z", "type": "commit"}, {"oid": "9e406173f0692499d6f817f37eda93cf7e9c6018", "url": "https://github.com/confluentinc/ksql/commit/9e406173f0692499d6f817f37eda93cf7e9c6018", "message": "test: verify nested fields", "committedDate": "2020-05-13T21:10:24Z", "type": "commit"}, {"oid": "44228e579d748e149ef272218c01ad26db5d6c23", "url": "https://github.com/confluentinc/ksql/commit/44228e579d748e149ef272218c01ad26db5d6c23", "message": "chore: findbugs", "committedDate": "2020-05-13T22:55:26Z", "type": "commit"}, {"oid": "3c1cd2af711e355ff7600dcaca019c0e57525498", "url": "https://github.com/confluentinc/ksql/commit/3c1cd2af711e355ff7600dcaca019c0e57525498", "message": "Merge branch 'master' into java-client-test-coverage-2", "committedDate": "2020-05-14T06:53:30Z", "type": "commit"}, {"oid": "dc591b43e38f04cfa9f8372dcdc11a23fe4e2b4d", "url": "https://github.com/confluentinc/ksql/commit/dc591b43e38f04cfa9f8372dcdc11a23fe4e2b4d", "message": "fix: java client handling of errors during query stream", "committedDate": "2020-05-14T07:48:50Z", "type": "commit"}, {"oid": "630c823a12447c1f025036819fd7b5ed75738086", "url": "https://github.com/confluentinc/ksql/commit/630c823a12447c1f025036819fd7b5ed75738086", "message": "chore: fix typo", "committedDate": "2020-05-14T08:03:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMzY0MQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425213641", "bodyText": "Why wrap it in an exception?", "author": "purplefox", "createdAt": "2020-05-14T15:11:16Z", "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/PollableSubscriber.java", "diffHunk": "@@ -55,6 +56,7 @@ protected void handleValue(final Row row) {\n \n   @Override\n   protected void handleError(final Throwable t) {\n+    failed = true;\n     errorHandler.accept(new Exception(t));", "originalCommit": "630c823a12447c1f025036819fd7b5ed75738086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NDgxNw==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425384817", "bodyText": "Previously it was being passed into a handler that required an Exception rather than a Throwable but this is no longer the case so I've removed this.\nOut of curiosity, do you know why reactive streams methods expect Throwables for errors, rather than Exceptions? Most other APIs I've seen work with Exceptions.", "author": "vcrfxia", "createdAt": "2020-05-14T19:39:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMzY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f207345b64ec993bde9557e0c5d1a4f792b74cef", "chunk": "diff --git a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/PollableSubscriber.java b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/PollableSubscriber.java\nindex 3d918c9cf9..7742139fde 100644\n--- a/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/PollableSubscriber.java\n+++ b/ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/PollableSubscriber.java\n\n@@ -57,7 +57,7 @@ public class PollableSubscriber extends BaseSubscriber<Row> {\n   @Override\n   protected void handleError(final Throwable t) {\n     failed = true;\n-    errorHandler.accept(new Exception(t));\n+    errorHandler.accept(t);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMDAzOA==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425220038", "bodyText": "If hasSentComplete, isn't complete always true?", "author": "purplefox", "createdAt": "2020-05-14T15:19:57Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/reactive/BufferedPublisher.java", "diffHunk": "@@ -90,10 +90,10 @@ public BufferedPublisher(final Context ctx, final int bufferMaxSize) {\n    */\n   public boolean accept(final T t) {\n     checkContext();\n-    if (complete) {\n+    if (isComplete() || hasSentComplete()) {", "originalCommit": "630c823a12447c1f025036819fd7b5ed75738086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MzE3Ng==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425383176", "bodyText": "Not necessarily. A user could call close() on the publisher, which immediately calls subscriber.onComplete() (if a subscriber is present) without marking the publisher as complete (or waiting for any buffered rows to be delivered, in the case of BufferedPublisher).\nIs this not the expected behavior?", "author": "vcrfxia", "createdAt": "2020-05-14T19:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMDAzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMDYwMQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425220601", "bodyText": "I think cancelled can be removed completely now?", "author": "purplefox", "createdAt": "2020-05-14T15:20:39Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Subscriber<? super T> subscriber;\n   private long demand;\n   private boolean cancelled;", "originalCommit": "630c823a12447c1f025036819fd7b5ed75738086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MTA2MQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425381061", "bodyText": "A user can still call cancel() on the subscription right? If this happens, subsequent calls to BufferedPublisher#accept() will not actually add to the buffer.", "author": "vcrfxia", "createdAt": "2020-05-14T19:32:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMDYwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f207345b64ec993bde9557e0c5d1a4f792b74cef", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java b/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\nindex eaf2c4761d..dea57449fa 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\n\n@@ -34,11 +34,11 @@ public abstract class BasePublisher<T> implements Publisher<T> {\n   private static final Logger log = LoggerFactory.getLogger(BasePublisher.class);\n \n   protected final Context ctx;\n-  private Subscriber<? super T> subscriber;\n-  private long demand;\n-  private boolean cancelled;\n-  private boolean sentComplete;\n-  private Exception failure;\n+  private volatile Subscriber<? super T> subscriber;\n+  private volatile long demand;\n+  private volatile boolean cancelled;\n+  private volatile boolean sentComplete;\n+  private volatile Exception failure;\n \n   public BasePublisher(final Context ctx) {\n     this.ctx = Objects.requireNonNull(ctx);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMTQ4MQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425221481", "bodyText": "I think sentComplete and failure should be volatile as they're accessed outside of a monitor", "author": "purplefox", "createdAt": "2020-05-14T15:21:49Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java", "diffHunk": "@@ -37,6 +37,8 @@\n   private Subscriber<? super T> subscriber;\n   private long demand;\n   private boolean cancelled;\n+  private boolean sentComplete;", "originalCommit": "630c823a12447c1f025036819fd7b5ed75738086", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MDEzOQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425380139", "bodyText": "The same is true for subscriber, demand, and cancelled, right? I've marked them all as volatile.", "author": "vcrfxia", "createdAt": "2020-05-14T19:30:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMTQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyMTE4NQ==", "url": "https://github.com/confluentinc/ksql/pull/5360#discussion_r425421185", "bodyText": "Nvm, I misread.\n\nYou're certainly right that failure needs to be volatile since it's access from BasePublisher#subscribe() before the check that guarantees we're on the right context.\nsubscriber needs to be volatile since it's accessed from TestQueryPublisher#hasSubscriber() and TestQueryPublisher#sendError(), which don't have the context guarantee.\nsentComplete, demand, and cancelled don't need to be volatile at the moment since all current usages of these fields are after corresponding context checks, but they all have protected accessors so we're liable to reintroducing similar bugs in the future :-/ Is there a way to guard against this?\n\nI've removed the extra volatiles I added and only left the keyword on failure and subscriber for now.", "author": "vcrfxia", "createdAt": "2020-05-14T20:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMTQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f207345b64ec993bde9557e0c5d1a4f792b74cef", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java b/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\nindex eaf2c4761d..dea57449fa 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/reactive/BasePublisher.java\n\n@@ -34,11 +34,11 @@ public abstract class BasePublisher<T> implements Publisher<T> {\n   private static final Logger log = LoggerFactory.getLogger(BasePublisher.class);\n \n   protected final Context ctx;\n-  private Subscriber<? super T> subscriber;\n-  private long demand;\n-  private boolean cancelled;\n-  private boolean sentComplete;\n-  private Exception failure;\n+  private volatile Subscriber<? super T> subscriber;\n+  private volatile long demand;\n+  private volatile boolean cancelled;\n+  private volatile boolean sentComplete;\n+  private volatile Exception failure;\n \n   public BasePublisher(final Context ctx) {\n     this.ctx = Objects.requireNonNull(ctx);\n"}}, {"oid": "f207345b64ec993bde9557e0c5d1a4f792b74cef", "url": "https://github.com/confluentinc/ksql/commit/f207345b64ec993bde9557e0c5d1a4f792b74cef", "message": "chore: feedback", "committedDate": "2020-05-14T19:37:59Z", "type": "commit"}, {"oid": "0e3a1a0786875b94061220879597c5dba9d14b04", "url": "https://github.com/confluentinc/ksql/commit/0e3a1a0786875b94061220879597c5dba9d14b04", "message": "chore: remove unnecessary volatiles", "committedDate": "2020-05-14T20:43:45Z", "type": "commit"}]}