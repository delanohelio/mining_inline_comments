{"pr_number": 5813, "pr_title": "feat: organize UDFs by category", "pr_createdAt": "2020-07-11T01:44:44Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5813", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453946428", "bodyText": "it might be better to have these just be strings so that users can categorize their own into whatever categories they want", "author": "agavra", "createdAt": "2020-07-13T21:33:50Z", "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "originalCommit": "1ec7f061cc2ac852af141758b5429e9e066bde13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk1NTQ0MA==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453955440", "bodyText": "i did wonder about that but decided i'd rather be restrictive so that we don't accidentally introduce a plethora of too-similar ones into the codebase over time. Perhaps a good compromise would be to have a \"CUSTOM\" enum value ? Maybe even set that as the default value so that if someone doesn't set a value for this in their own UDF then it just gets set correctly for them ? WDYT ?", "author": "blueedgenick", "createdAt": "2020-07-13T21:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwODc2NQ==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454008765", "bodyText": "I don't think that should really be a concern if we group all of the values in a constant file just like we have here as an enum - people follow examples that are already there, so they'll tend to look in that file before introducing new ones. In the worst case, we'll have some unnecessary categories - but it would be compatible to change those and clean them up.\nMy preference is to avoid enums in public APIs because they're difficult to extend and impossible to remove.", "author": "agavra", "createdAt": "2020-07-13T23:37:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAyOTM3OQ==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454029379", "bodyText": "gotcha, i'll change that then.\nJust for my own edification, why is it harder to extend or remove enum constants in an API than static strings ? i would naively suppose that removing existing things always has a similar backwards-compatibility problem, however they are defined ? And by \"extending\" here, do you mean adding new values ?", "author": "blueedgenick", "createdAt": "2020-07-14T00:41:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3NTc2NQ==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454075765", "bodyText": "why is it harder to extend or remove enum constants in an API than static strings\n\nA few reasons. One is logistically if external repos depend on a removed enum they can't just \"add it in\" and keep going (which you can if you depended on a removed string constant). Second is a little bit more philosophical, you shouldn't remove an enum because it changes the ordinals of everything after it - which I've been bit by before (though unlikely it'll fall into play here). I think JSON schema might actually fail compatibility checks if you removed an enum from a schema (not that we use json schema yet...)\n\nAnd by \"extending\" here, do you mean adding new values ?\n\nyeah", "author": "agavra", "createdAt": "2020-07-14T03:24:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4NzkzMg==", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454087932", "bodyText": "got it, that makes sense. thanks for taking the time to share!", "author": "blueedgenick", "createdAt": "2020-07-14T04:11:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}], "type": "inlineReview", "revised_code": {"commit": "1efb7a1244d7271ce73f27c41e023abb2547e13c", "chunk": "diff --git a/ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java b/ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java\nindex c0cd01dc5f..b73b6f125b 100644\n--- a/ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java\n+++ b/ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java\n\n@@ -14,17 +14,17 @@\n \n package io.confluent.ksql.function;\n \n-public enum FunctionCategory {\n-  CONDITIONAL,\n-  MATHEMATICAL,\n-  STRING, \n-  REGULAR_EXPRESSION,\n-  JSON,\n-  DATE_TIME,\n-  ARRAY,\n-  MAP,\n-  URL,\n-  OTHER, \n-  AGGREGATE,\n-  TABLE;\n+public class FunctionCategory {\n+  public static final String CONDITIONAL = \"CONDITIONAL\";\n+  public static final String MATHEMATICAL = \"OTHER\";\n+  public static final String STRING = \"OTHER\";\n+  public static final String REGULAR_EXPRESSION = \"OTHER\";\n+  public static final String JSON = \"OTHER\";\n+  public static final String DATE_TIME = \"OTHER\";\n+  public static final String ARRAY = \"ARRAY\";\n+  public static final String MAP = \"MAP\";\n+  public static final String URL = \"URL\";\n+  public static final String OTHER = \"OTHER\";\n+  public static final String AGGREGATE = \"AGGREGATE\";\n+  public static final String TABLE = \"TABLE\";\n }\n"}}, {"oid": "50adb7ff006868a864bbfd8b2336bb6a36dc10a2", "url": "https://github.com/confluentinc/ksql/commit/50adb7ff006868a864bbfd8b2336bb6a36dc10a2", "message": "initial version", "committedDate": "2020-07-14T18:29:23Z", "type": "commit"}, {"oid": "3452336935970324083b9769acbbb1206deb7f96", "url": "https://github.com/confluentinc/ksql/commit/3452336935970324083b9769acbbb1206deb7f96", "message": "docs", "committedDate": "2020-07-14T18:29:23Z", "type": "commit"}, {"oid": "8db9dc346775d377d3828e5dd69ce839dc4cebc0", "url": "https://github.com/confluentinc/ksql/commit/8db9dc346775d377d3828e5dd69ce839dc4cebc0", "message": "fix docs typo", "committedDate": "2020-07-14T18:29:23Z", "type": "commit"}, {"oid": "5189085554e01c5f200feb6dc085b7d8c4a51d19", "url": "https://github.com/confluentinc/ksql/commit/5189085554e01c5f200feb6dc085b7d8c4a51d19", "message": "missed a couple of 'final's", "committedDate": "2020-07-14T18:29:23Z", "type": "commit"}, {"oid": "34d90372bdcf0b02106c4210d0e05dda4892514b", "url": "https://github.com/confluentinc/ksql/commit/34d90372bdcf0b02106c4210d0e05dda4892514b", "message": "retry integration test fix", "committedDate": "2020-07-14T18:37:41Z", "type": "commit"}, {"oid": "1efb7a1244d7271ce73f27c41e023abb2547e13c", "url": "https://github.com/confluentinc/ksql/commit/1efb7a1244d7271ce73f27c41e023abb2547e13c", "message": "Almog's requested changes", "committedDate": "2020-07-14T18:37:41Z", "type": "commit"}, {"oid": "436397a7f0cf01c3b9b70d4e2ce03469ddb297a6", "url": "https://github.com/confluentinc/ksql/commit/436397a7f0cf01c3b9b70d4e2ce03469ddb297a6", "message": "checkstyle", "committedDate": "2020-07-14T18:37:41Z", "type": "commit"}, {"oid": "0efb17ba234378ee243af403bb076713dedfd943", "url": "https://github.com/confluentinc/ksql/commit/0efb17ba234378ee243af403bb076713dedfd943", "message": "more rules", "committedDate": "2020-07-14T18:37:41Z", "type": "commit"}, {"oid": "351a6c1ef86a9205a83f00018003ea822f4f24c9", "url": "https://github.com/confluentinc/ksql/commit/351a6c1ef86a9205a83f00018003ea822f4f24c9", "message": "fix copy/paste error", "committedDate": "2020-07-14T18:37:41Z", "type": "commit"}, {"oid": "065e4dd218e4ae9727907fa2f79fd85984f13d77", "url": "https://github.com/confluentinc/ksql/commit/065e4dd218e4ae9727907fa2f79fd85984f13d77", "message": "fix fallout from switching to static strings", "committedDate": "2020-07-14T19:52:58Z", "type": "commit"}, {"oid": "065e4dd218e4ae9727907fa2f79fd85984f13d77", "url": "https://github.com/confluentinc/ksql/commit/065e4dd218e4ae9727907fa2f79fd85984f13d77", "message": "fix fallout from switching to static strings", "committedDate": "2020-07-14T19:52:58Z", "type": "forcePushed"}, {"oid": "718e937851fea1742a8f888781d528e160282036", "url": "https://github.com/confluentinc/ksql/commit/718e937851fea1742a8f888781d528e160282036", "message": "missed one more typo", "committedDate": "2020-07-14T22:04:55Z", "type": "commit"}]}