{"pr_number": 5621, "pr_title": "fix: /inserts-stream endpoint now supports nested types", "pr_createdAt": "2020-06-12T21:58:37Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5621", "timeline": [{"oid": "4ed3087876a915a1a83b97acdf002da609984440", "url": "https://github.com/confluentinc/ksql/commit/4ed3087876a915a1a83b97acdf002da609984440", "message": "fix: inserts stream endpoint now supports struct", "committedDate": "2020-06-11T15:35:43Z", "type": "commit"}, {"oid": "732317ca26c35a7e0bf3214fb2efbb0c9d93a0dc", "url": "https://github.com/confluentinc/ksql/commit/732317ca26c35a7e0bf3214fb2efbb0c9d93a0dc", "message": "fix: support case-insensitive insert of nested struct", "committedDate": "2020-06-11T19:44:26Z", "type": "commit"}, {"oid": "417f0f9315d18a6047ee8a2c4c3e2f596639e4e3", "url": "https://github.com/confluentinc/ksql/commit/417f0f9315d18a6047ee8a2c4c3e2f596639e4e3", "message": "fix: should not coerce map to struct in non-json case", "committedDate": "2020-06-11T23:04:26Z", "type": "commit"}, {"oid": "dfda29139fb4e663d3d43d044b65f5c2aa31f5f6", "url": "https://github.com/confluentinc/ksql/commit/dfda29139fb4e663d3d43d044b65f5c2aa31f5f6", "message": "fix: allow insert of decimal nested in struct", "committedDate": "2020-06-12T00:08:23Z", "type": "commit"}, {"oid": "92d69ae9e43ce8a8d81304e687d51b4e7b3f234f", "url": "https://github.com/confluentinc/ksql/commit/92d69ae9e43ce8a8d81304e687d51b4e7b3f234f", "message": "test: basic unit tests", "committedDate": "2020-06-12T00:28:32Z", "type": "commit"}, {"oid": "393c7a1ca032ffa44a5d9cb4f0fca4038c1e8ffb", "url": "https://github.com/confluentinc/ksql/commit/393c7a1ca032ffa44a5d9cb4f0fca4038c1e8ffb", "message": "test: lots of unit tests", "committedDate": "2020-06-12T02:41:34Z", "type": "commit"}, {"oid": "e30aa2c8e5a3abc8126e0aedb5a17a20ca54184e", "url": "https://github.com/confluentinc/ksql/commit/e30aa2c8e5a3abc8126e0aedb5a17a20ca54184e", "message": "test: prep for integration tests", "committedDate": "2020-06-12T16:10:24Z", "type": "commit"}, {"oid": "12151d3ef5036eb2d79bbe3d67ae2784348197ed", "url": "https://github.com/confluentinc/ksql/commit/12151d3ef5036eb2d79bbe3d67ae2784348197ed", "message": "test: integration test support for struct", "committedDate": "2020-06-12T16:28:04Z", "type": "commit"}, {"oid": "d16797071a338c8508b0980db9e167fd6f7a9bb8", "url": "https://github.com/confluentinc/ksql/commit/d16797071a338c8508b0980db9e167fd6f7a9bb8", "message": "test: integration test support for complex structs (wip)", "committedDate": "2020-06-12T18:17:12Z", "type": "commit"}, {"oid": "f296a3b8f96d2f6504c76895dd4c43f703af458b", "url": "https://github.com/confluentinc/ksql/commit/f296a3b8f96d2f6504c76895dd4c43f703af458b", "message": "fix: allow insertion of nested structs", "committedDate": "2020-06-12T20:05:50Z", "type": "commit"}, {"oid": "f05bfa64864af045be7a1c9c36ac9ef8ebea825a", "url": "https://github.com/confluentinc/ksql/commit/f05bfa64864af045be7a1c9c36ac9ef8ebea825a", "message": "test: fix test expectation for nested decimal", "committedDate": "2020-06-12T20:31:41Z", "type": "commit"}, {"oid": "49ddd7be6a8464e3fac1f9d306bf9b4f85b551ad", "url": "https://github.com/confluentinc/ksql/commit/49ddd7be6a8464e3fac1f9d306bf9b4f85b551ad", "message": "fix: support insert of struct nested inside array or map", "committedDate": "2020-06-12T20:50:26Z", "type": "commit"}, {"oid": "ea074728dc98cd7308b501745ad95c95b56c208e", "url": "https://github.com/confluentinc/ksql/commit/ea074728dc98cd7308b501745ad95c95b56c208e", "message": "test: reenable tests for arrays of complex types", "committedDate": "2020-06-12T20:55:43Z", "type": "commit"}, {"oid": "c45e880a705c0d97eaf239b6ff9df015ba6600e5", "url": "https://github.com/confluentinc/ksql/commit/c45e880a705c0d97eaf239b6ff9df015ba6600e5", "message": "test: update server integration tests", "committedDate": "2020-06-12T21:38:32Z", "type": "commit"}, {"oid": "e639ea58c70716a73bbd71fc392d50aa96791f5d", "url": "https://github.com/confluentinc/ksql/commit/e639ea58c70716a73bbd71fc392d50aa96791f5d", "message": "chore: checkstyle", "committedDate": "2020-06-12T21:45:47Z", "type": "commit"}, {"oid": "1246c7b8747f755a770ea8208f17d6fe77c7df79", "url": "https://github.com/confluentinc/ksql/commit/1246c7b8747f755a770ea8208f17d6fe77c7df79", "message": "chore: dummy commit to retrigger build", "committedDate": "2020-06-12T22:35:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5ODYwNA==", "url": "https://github.com/confluentinc/ksql/pull/5621#discussion_r439998604", "bodyText": "I don't think it's necessary to create special classes JavaListObject/JsonListObject etc.\nCan just call getList() on the JsonArray to get the List. This should simplify things quite a bit?", "author": "purplefox", "createdAt": "2020-06-15T08:05:39Z", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/schema/ksql/DefaultSqlValueCoercer.java", "diffHunk": "@@ -129,15 +162,19 @@ private static Result coerceStruct(final Object value, final SqlStruct targetTyp\n     return Result.of(coerced);\n   }\n \n-  private static Result coerceArray(final Object value, final SqlArray targetType) {\n-    if (!(value instanceof List<?>)) {\n+  private Result coerceArray(final Object value, final SqlArray targetType) {\n+    final ListObject list;\n+    if (value instanceof List<?>) {\n+      list = JavaListObject.of((List<?>) value);", "originalCommit": "1246c7b8747f755a770ea8208f17d6fe77c7df79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMyNDA2MQ==", "url": "https://github.com/confluentinc/ksql/pull/5621#discussion_r440324061", "bodyText": "I had this in an earlier version but it fails for structs nested inside arrays/maps because once getList() is called on the JsonArray, extracting a nested struct-type comes back as a LinkedHashMap rather than a JsonObject. When the LinkedHashMap is passed to coerceStruct(), coerceStruct() throws an exception because DefaultSqlValueCoercer is intended to fail if a caller attempts to coerce a map to a struct.\nThe other solutions I could think of for working around this were more complex than having the special classes JavaListObject/JsonListObject/etc.", "author": "vcrfxia", "createdAt": "2020-06-15T17:11:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5ODYwNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5OTM0NA==", "url": "https://github.com/confluentinc/ksql/pull/5621#discussion_r439999344", "bodyText": "As previous comment, I don't think these classes are necessary (?)", "author": "purplefox", "createdAt": "2020-06-15T08:06:56Z", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/schema/ksql/DefaultSqlValueCoercer.java", "diffHunk": "@@ -167,4 +208,162 @@ private static Result coerceMap(final Object value, final SqlMap targetType) {\n \n     return Result.of(coerced);\n   }\n+\n+  private interface ListObject {", "originalCommit": "1246c7b8747f755a770ea8208f17d6fe77c7df79", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzODI2Mw==", "url": "https://github.com/confluentinc/ksql/pull/5621#discussion_r440338263", "bodyText": "As above.\nMerging this for now, will open a follow-up if it turns out I've missed something. Thanks!", "author": "vcrfxia", "createdAt": "2020-06-15T17:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5OTM0NA=="}], "type": "inlineReview", "revised_code": null}]}