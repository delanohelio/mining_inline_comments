{"pr_number": 6518, "pr_title": "chore: json_sr tests and minor fixes", "pr_createdAt": "2020-10-23T22:45:37Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6518", "timeline": [{"oid": "4f7afe4f60be13be149390ccd71440394b117905", "url": "https://github.com/confluentinc/ksql/commit/4f7afe4f60be13be149390ccd71440394b117905", "message": "chore: json_sr tests and minor fixes", "committedDate": "2020-10-23T22:44:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDQ3MQ==", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304471", "bodyText": "Is this just for clarity? this should already refer to PostTopicNode.this here, right?", "author": "vcrfxia", "createdAt": "2020-10-24T04:05:11Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java", "diffHunk": "@@ -205,7 +205,7 @@ public PostTopicNode(\n         @Override\n         public void describeTo(final Description description) {\n           try {\n-            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(this));\n+            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(PostTopicNode.this));", "originalCommit": "4f7afe4f60be13be149390ccd71440394b117905", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1OTA5OQ==", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r512059099", "bodyText": "no, this is within the Matcher anonymous class. I need to use PostTopicNode.this to refer to the outer wrapper (non-anon) class", "author": "agavra", "createdAt": "2020-10-26T15:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDQ3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "35f9902ba13cbe7d8c9c2b75d0d5b6181b851709", "chunk": "diff --git a/ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java b/ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java\nindex 273b6529df..cf500d5911 100644\n--- a/ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java\n+++ b/ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java\n\n@@ -205,7 +205,8 @@ public final class PostConditionsNode {\n         @Override\n         public void describeTo(final Description description) {\n           try {\n-            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(PostTopicNode.this));\n+            description.appendText(\n+                TestJsonMapper.INSTANCE.get().writeValueAsString(PostTopicNode.this));\n           } catch (JsonProcessingException e) {\n             throw new IllegalArgumentException(e);\n           }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUwNA==", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304504", "bodyText": "How come we're making JSON_SR available by default, given that AVRO still isn't enabled by default? Aren't both blocked on the same additional testing for joins?\nAlso, what's the point of having \"ksql.key.format.enabled\": true in the new QTTs (with primitive keys) if we're enabling this by default?", "author": "vcrfxia", "createdAt": "2020-10-24T04:05:17Z", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java", "diffHunk": "@@ -25,7 +25,8 @@\n       FormatFactory.NONE,\n       FormatFactory.KAFKA,\n       FormatFactory.DELIMITED,\n-      FormatFactory.JSON\n+      FormatFactory.JSON,\n+      FormatFactory.JSON_SR", "originalCommit": "4f7afe4f60be13be149390ccd71440394b117905", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1OTQwMQ==", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r512059401", "bodyText": "\ud83e\udd26 this is me not being careful. Thank you for checking this", "author": "agavra", "createdAt": "2020-10-26T15:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUwNA=="}], "type": "inlineReview", "revised_code": {"commit": "35f9902ba13cbe7d8c9c2b75d0d5b6181b851709", "chunk": "diff --git a/ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java b/ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java\nindex 9958da6c2e..359a32e62e 100644\n--- a/ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java\n+++ b/ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java\n\n@@ -25,12 +25,12 @@ public final class KeyFormatUtils {\n       FormatFactory.NONE,\n       FormatFactory.KAFKA,\n       FormatFactory.DELIMITED,\n-      FormatFactory.JSON,\n-      FormatFactory.JSON_SR\n+      FormatFactory.JSON\n   );\n \n   private static final List<Format> KEY_FORMATS_UNDER_DEVELOPMENT = ImmutableList.of(\n-      FormatFactory.AVRO\n+      FormatFactory.AVRO,\n+      FormatFactory.JSON_SR\n   );\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUzMQ==", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304531", "bodyText": "nit: I'm with @big-andy-coates on preferring tests simply have throws Exception so we don't need to worry about keeping lists of exceptions up to date. I don't think seeing the specific exceptions is insightful either.", "author": "vcrfxia", "createdAt": "2020-10-24T04:05:20Z", "path": "ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java", "diffHunk": "@@ -233,7 +236,7 @@ public void shouldHandleNestedStruct() throws IOException {\n   }\n \n   @Test\n-  public void shouldSerializeBoolean() {\n+  public void shouldSerializeBoolean() throws IOException, RestClientException {", "originalCommit": "4f7afe4f60be13be149390ccd71440394b117905", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "35f9902ba13cbe7d8c9c2b75d0d5b6181b851709", "chunk": "diff --git a/ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java b/ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java\nindex bee43c33e6..1a844d5783 100644\n--- a/ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java\n+++ b/ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java\n\n@@ -236,7 +236,7 @@ public class KsqlJsonSerializerTest {\n   }\n \n   @Test\n-  public void shouldSerializeBoolean() throws IOException, RestClientException {\n+  public void shouldSerializeBoolean() throws Exception {\n     // Given:\n     final Serializer<Boolean> serializer =\n         givenSerializerForSchema(Schema.OPTIONAL_BOOLEAN_SCHEMA, Boolean.class);\n"}}, {"oid": "35f9902ba13cbe7d8c9c2b75d0d5b6181b851709", "url": "https://github.com/confluentinc/ksql/commit/35f9902ba13cbe7d8c9c2b75d0d5b6181b851709", "message": "chore: victorias comments", "committedDate": "2020-10-26T17:00:50Z", "type": "commit"}]}