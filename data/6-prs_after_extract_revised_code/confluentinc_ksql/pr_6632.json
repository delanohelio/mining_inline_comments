{"pr_number": 6632, "pr_title": "chore: improve sr key schema check in insert values (MINOR)", "pr_createdAt": "2020-11-17T18:23:14Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6632", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0NDMwOQ==", "url": "https://github.com/confluentinc/ksql/pull/6632#discussion_r525544309", "bodyText": "What's the purpose of separately handling potential auth errors here rather than unifying in SchemaRegistryUtil where missing schemas are handled?", "author": "vcrfxia", "createdAt": "2020-11-17T21:43:46Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java", "diffHunk": "@@ -303,21 +303,25 @@ private void ensureKeySchemasMatch(\n         .getSchemaTranslator(keyFormat.getFormatInfo().getProperties())\n         .toParsedSchema(keySchema);\n \n+    final Optional<SchemaMetadata> latest;\n     try {\n-      final SchemaMetadata latest = serviceContext.getSchemaRegistryClient()\n-          .getLatestSchemaMetadata(\n-              KsqlConstants.getSRSubject(dataSource.getKafkaTopicName(), true));\n-      if (!latest.getSchema().equals(schema.canonicalString())) {\n-        throw new KsqlException(\"Cannot INSERT VALUES into data source \" + dataSource.getName()\n-            + \". ksqlDB generated schema would overwrite existing key schema.\"\n-            + \"\\n\\tExisting Schema: \" + latest.getSchema()\n-            + \"\\n\\tksqlDB Generated: \" + schema.canonicalString());\n-      }\n-    } catch (IOException | RestClientException e) {\n+      latest = SchemaRegistryUtil.getLatestSchema(\n+          serviceContext.getSchemaRegistryClient(),\n+          dataSource.getKafkaTopicName(),\n+          true);\n+\n+    } catch (final Exception e) {\n       maybeThrowSchemaRegistryAuthError(format, dataSource.getKafkaTopicName(), true, \"read\", e);", "originalCommit": "84473b6b7d50a208bca6635a190db98d14f9e8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM1NjEzOA==", "url": "https://github.com/confluentinc/ksql/pull/6632#discussion_r526356138", "bodyText": "It makes it a little easier to handle the error message. If it's an auth error, I want to expose that directly. If it's another error, then I want to throw our generic shim: \"Could not determine that insert values...\"\nIf I handled this in the SchemaRegistryUtil, then I would have to throw a different exception type or parse the exception message to decide whether to propagate it or to wrap it.", "author": "agavra", "createdAt": "2020-11-18T19:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0NDMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "chunk": "diff --git a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\nindex 858c99f34a..61d4606f7f 100644\n--- a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\n+++ b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\n\n@@ -310,7 +310,7 @@ public class InsertValuesExecutor {\n           dataSource.getKafkaTopicName(),\n           true);\n \n-    } catch (final Exception e) {\n+    } catch (final KsqlException e) {\n       maybeThrowSchemaRegistryAuthError(format, dataSource.getKafkaTopicName(), true, \"read\", e);\n       throw new KsqlException(\"Could not determine that insert values operations is safe; \"\n           + \"operation potentially overrides existing key schema in schema registry.\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0NDU4Mw==", "url": "https://github.com/confluentinc/ksql/pull/6632#discussion_r525544583", "bodyText": "Do we ever expect exceptions other than KsqlException here?", "author": "vcrfxia", "createdAt": "2020-11-17T21:44:15Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java", "diffHunk": "@@ -303,21 +303,25 @@ private void ensureKeySchemasMatch(\n         .getSchemaTranslator(keyFormat.getFormatInfo().getProperties())\n         .toParsedSchema(keySchema);\n \n+    final Optional<SchemaMetadata> latest;\n     try {\n-      final SchemaMetadata latest = serviceContext.getSchemaRegistryClient()\n-          .getLatestSchemaMetadata(\n-              KsqlConstants.getSRSubject(dataSource.getKafkaTopicName(), true));\n-      if (!latest.getSchema().equals(schema.canonicalString())) {\n-        throw new KsqlException(\"Cannot INSERT VALUES into data source \" + dataSource.getName()\n-            + \". ksqlDB generated schema would overwrite existing key schema.\"\n-            + \"\\n\\tExisting Schema: \" + latest.getSchema()\n-            + \"\\n\\tksqlDB Generated: \" + schema.canonicalString());\n-      }\n-    } catch (IOException | RestClientException e) {\n+      latest = SchemaRegistryUtil.getLatestSchema(\n+          serviceContext.getSchemaRegistryClient(),\n+          dataSource.getKafkaTopicName(),\n+          true);\n+\n+    } catch (final Exception e) {", "originalCommit": "84473b6b7d50a208bca6635a190db98d14f9e8b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0OTU3Nw==", "url": "https://github.com/confluentinc/ksql/pull/6632#discussion_r526349577", "bodyText": "No, we shouldn't have any other exception type here. I'll consolidate it", "author": "agavra", "createdAt": "2020-11-18T19:07:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU0NDU4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "chunk": "diff --git a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\nindex 858c99f34a..61d4606f7f 100644\n--- a/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\n+++ b/ksqldb-engine/src/main/java/io/confluent/ksql/engine/InsertValuesExecutor.java\n\n@@ -310,7 +310,7 @@ public class InsertValuesExecutor {\n           dataSource.getKafkaTopicName(),\n           true);\n \n-    } catch (final Exception e) {\n+    } catch (final KsqlException e) {\n       maybeThrowSchemaRegistryAuthError(format, dataSource.getKafkaTopicName(), true, \"read\", e);\n       throw new KsqlException(\"Could not determine that insert values operations is safe; \"\n           + \"operation potentially overrides existing key schema in schema registry.\", e);\n"}}, {"oid": "a22e9fffc9e9e48f44bc9811b0bba49b9dd562e7", "url": "https://github.com/confluentinc/ksql/commit/a22e9fffc9e9e48f44bc9811b0bba49b9dd562e7", "message": "chore: improve sr key schema check in insert values (MINOR)", "committedDate": "2020-11-18T19:05:09Z", "type": "commit"}, {"oid": "21681b513fa0a7d15478adbc2cf2c38636f31e39", "url": "https://github.com/confluentinc/ksql/commit/21681b513fa0a7d15478adbc2cf2c38636f31e39", "message": "chore: test me plz", "committedDate": "2020-11-18T19:05:09Z", "type": "commit"}, {"oid": "77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "url": "https://github.com/confluentinc/ksql/commit/77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "message": "chore: tighten try-catch", "committedDate": "2020-11-18T19:19:20Z", "type": "commit"}, {"oid": "77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "url": "https://github.com/confluentinc/ksql/commit/77bf7c9a5d5853b992738b5d5c9fc2fb907a00af", "message": "chore: tighten try-catch", "committedDate": "2020-11-18T19:19:20Z", "type": "forcePushed"}, {"oid": "ac1533aaa7de4ea51d755befee89ced3ca96441a", "url": "https://github.com/confluentinc/ksql/commit/ac1533aaa7de4ea51d755befee89ced3ca96441a", "message": "test me", "committedDate": "2020-11-18T19:37:38Z", "type": "commit"}]}