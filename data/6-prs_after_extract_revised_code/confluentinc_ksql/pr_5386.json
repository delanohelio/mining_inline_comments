{"pr_number": 5386, "pr_title": "fix: Block writer thread if response output buffer is full", "pr_createdAt": "2020-05-18T14:58:10Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5386", "timeline": [{"oid": "42231878884e9bfc8aa2cf8ae84edae4d40fc33c", "url": "https://github.com/confluentinc/ksql/commit/42231878884e9bfc8aa2cf8ae84edae4d40fc33c", "message": "fix: block on write if write queue full", "committedDate": "2020-05-18T14:11:03Z", "type": "commit"}, {"oid": "a3982d67d35db415dc5bc220fb55f8799465e5c2", "url": "https://github.com/confluentinc/ksql/commit/a3982d67d35db415dc5bc220fb55f8799465e5c2", "message": "use cf for blocking", "committedDate": "2020-05-18T14:54:38Z", "type": "commit"}, {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a", "url": "https://github.com/confluentinc/ksql/commit/c0b06549f9407fe13e7a1428a99dd6e02441995a", "message": "tweaks", "committedDate": "2020-05-18T15:32:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNTkzMA==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427035930", "bodyText": "Should we add a more informative error message?", "author": "vcrfxia", "createdAt": "2020-05-19T05:19:23Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -55,13 +59,29 @@ public void write(final @NotNull byte[] bytes, final int offset, final int lengt\n     final byte[] bytesToWrite = new byte[length];\n     System.arraycopy(bytes, offset, bytesToWrite, 0, length);\n     final Buffer buffer = Buffer.buffer(bytesToWrite);\n+    blockIfWriteQueueFull();\n     response.write(buffer);\n   }\n \n   @Override\n   public void close() {\n     response.end();\n   }\n+\n+  private void blockIfWriteQueueFull() {\n+    VertxUtils.checkIsWorker();\n+    if (response.writeQueueFull()) {\n+      final CompletableFuture<Void> cf = new CompletableFuture<>();\n+      response.drainHandler(v -> cf.complete(null));\n+      try {\n+        cf.get(60, TimeUnit.SECONDS);\n+      } catch (Exception e) {\n+        // Very slow consumers will result in a timeout, this will cause the push query to be closed\n+        throw new KsqlException(e);", "originalCommit": "c0b06549f9407fe13e7a1428a99dd6e02441995a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNjAzNQ==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427106035", "bodyText": "The wrapped exception should contain the important error messages. I don't usually like adding new messages on rethrows unless you're doing something extra.", "author": "purplefox", "createdAt": "2020-05-19T08:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNTkzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjE0NQ==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427036145", "bodyText": "Should we check explicitly for TimeoutException? Since we don't expect ExecutionException to be thrown here.", "author": "vcrfxia", "createdAt": "2020-05-19T05:20:09Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -55,13 +59,29 @@ public void write(final @NotNull byte[] bytes, final int offset, final int lengt\n     final byte[] bytesToWrite = new byte[length];\n     System.arraycopy(bytes, offset, bytesToWrite, 0, length);\n     final Buffer buffer = Buffer.buffer(bytesToWrite);\n+    blockIfWriteQueueFull();\n     response.write(buffer);\n   }\n \n   @Override\n   public void close() {\n     response.end();\n   }\n+\n+  private void blockIfWriteQueueFull() {\n+    VertxUtils.checkIsWorker();\n+    if (response.writeQueueFull()) {\n+      final CompletableFuture<Void> cf = new CompletableFuture<>();\n+      response.drainHandler(v -> cf.complete(null));\n+      try {\n+        cf.get(60, TimeUnit.SECONDS);\n+      } catch (Exception e) {", "originalCommit": "c0b06549f9407fe13e7a1428a99dd6e02441995a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwODQzNQ==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427108435", "bodyText": "We could, but I don't think it adds much as we want to rethrow on any exception we receive.", "author": "purplefox", "createdAt": "2020-05-19T08:07:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjE0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjY4NQ==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427036685", "bodyText": "ResponseOutputStream is only written to by a single thread anyway, right? (Trying to check my understanding.)", "author": "vcrfxia", "createdAt": "2020-05-19T05:22:09Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -41,7 +45,7 @@ public void write(final int b) {\n   }\n \n   @Override\n-  public void write(final @NotNull byte[] bytes, final int offset, final int length) {\n+  public synchronized void write(final @NotNull byte[] bytes, final int offset, final int length) {", "originalCommit": "c0b06549f9407fe13e7a1428a99dd6e02441995a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwNTQ0Mg==", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427105442", "bodyText": "Yes, but it's a sanity check.", "author": "purplefox", "createdAt": "2020-05-19T08:02:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjY4NQ=="}], "type": "inlineReview", "revised_code": null}]}