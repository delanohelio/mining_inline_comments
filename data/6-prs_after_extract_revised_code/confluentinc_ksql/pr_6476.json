{"pr_number": 6476, "pr_title": "test: fix KsqlVersion so it supports new version format", "pr_createdAt": "2020-10-20T18:22:48Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6476", "timeline": [{"oid": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "url": "https://github.com/confluentinc/ksql/commit/a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "message": "test: fix KsqlVersion so it supports new version format\n\nPOM now has version set to `6.1.0-0`, which `KsqlVersion` couldn't handle.  This causes any attempt to generate new historical QTT test cases to fail.\n\n- Updated KsqlVersion to be able to handle new format.\n- Added unit test for new format.\n- Added unit test to test against latest version in POM, so we pick this up earlier next time.", "committedDate": "2020-10-20T18:22:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc0ODY1Mw==", "url": "https://github.com/confluentinc/ksql/pull/6476#discussion_r508748653", "bodyText": "\ud83d\ude0d", "author": "agavra", "createdAt": "2020-10-20T18:30:28Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/KsqlVersion.java", "diffHunk": "@@ -29,7 +29,7 @@\n public final class KsqlVersion implements Comparable<KsqlVersion> {\n \n   private static final Pattern VERSION_PATTERN = Pattern\n-      .compile(\"(\\\\d+)\\\\.(\\\\d+)(.\\\\d+)?(-SNAPSHOT)?\");\n+      .compile(\"(?<major>\\\\d+)\\\\.(?<minor>\\\\d+)(?<patch>.\\\\d+)?(?:-(SNAPSHOT|\\\\d+))?\");", "originalCommit": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc0ODgxNQ==", "url": "https://github.com/confluentinc/ksql/pull/6476#discussion_r508748815", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldParseWeirdNewFormat() {\n          \n          \n            \n              public void shouldParseNanoVersions() {\n          \n      \n    \n    \n  \n\n\ud83d\ude44", "author": "agavra", "createdAt": "2020-10-20T18:30:45Z", "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java", "diffHunk": "@@ -64,6 +64,16 @@ public void shouldParseMajorMinorPointSnapshot() {\n     assertThat(result.getVersion(), is(SemanticVersion.of(5, 4, 1)));\n   }\n \n+  @Test\n+  public void shouldParseWeirdNewFormat() {", "originalCommit": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "88f49c80e65a30af464e675d952df581f64aa334", "chunk": "diff --git a/ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java b/ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java\nindex 2df8326a47..2fe1a3c95b 100644\n--- a/ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java\n+++ b/ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java\n\n@@ -65,7 +65,7 @@ public class KsqlVersionTest {\n   }\n \n   @Test\n-  public void shouldParseWeirdNewFormat() {\n+  public void shouldParseNanoVersions() {\n     // When:\n     final KsqlVersion result = KsqlVersion.parse(\"5.4.1-0\");\n \n"}}, {"oid": "88f49c80e65a30af464e675d952df581f64aa334", "url": "https://github.com/confluentinc/ksql/commit/88f49c80e65a30af464e675d952df581f64aa334", "message": "Update ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java\n\nCo-authored-by: Almog Gavra <almog@confluent.io>", "committedDate": "2020-10-20T18:38:40Z", "type": "commit"}]}