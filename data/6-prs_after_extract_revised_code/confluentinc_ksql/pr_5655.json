{"pr_number": 5655, "pr_title": "test: fix flaky test: KsMaterializationFunctionalTest", "pr_createdAt": "2020-06-19T17:00:04Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5655", "timeline": [{"oid": "6a4f2f0664a60a29e68ef2f6a51e91e5582f46c6", "url": "https://github.com/confluentinc/ksql/commit/6a4f2f0664a60a29e68ef2f6a51e91e5582f46c6", "message": "test: fix flaky test\n\nfixes: https://github.com/confluentinc/ksql/issues/5654", "committedDate": "2020-06-19T16:59:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTcxMw==", "url": "https://github.com/confluentinc/ksql/pull/5655#discussion_r442955713", "bodyText": "It might be nice to pull this retry logic out to a common utility.  This is a common pattern, though not sure if I've seen it elsewhere in KSQL.", "author": "AlanConfluent", "createdAt": "2020-06-19T17:10:56Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/materialization/ks/KsMaterializationFunctionalTest.java", "diffHunk": "@@ -745,5 +756,21 @@ private static void initializeKsql(final TestKsqlContext ksqlContext) {\n         + \");\"\n     );\n   }\n+\n+  /*\n+   * table.get() calls can sometimes fail when partitions are being rebalanced.\n+   * When that happens: retry!\n+   */\n+  private static <T> T withRetry(final Supplier<T> supplier) {", "originalCommit": "6a4f2f0664a60a29e68ef2f6a51e91e5582f46c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU3OTYwNw==", "url": "https://github.com/confluentinc/ksql/pull/5655#discussion_r444579607", "bodyText": "done. I've extended the existing assertThatEventually.", "author": "big-andy-coates", "createdAt": "2020-06-24T00:30:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTcxMw=="}], "type": "inlineReview", "revised_code": {"commit": "6ddb4ffdb6ed380eacb3b594cb8d6fa139857980", "chunk": "diff --git a/ksqldb-engine/src/test/java/io/confluent/ksql/materialization/ks/KsMaterializationFunctionalTest.java b/ksqldb-engine/src/test/java/io/confluent/ksql/materialization/ks/KsMaterializationFunctionalTest.java\nindex aa8cc16a0f..e046905272 100644\n--- a/ksqldb-engine/src/test/java/io/confluent/ksql/materialization/ks/KsMaterializationFunctionalTest.java\n+++ b/ksqldb-engine/src/test/java/io/confluent/ksql/materialization/ks/KsMaterializationFunctionalTest.java\n\n@@ -762,15 +764,7 @@ public class KsMaterializationFunctionalTest {\n    * When that happens: retry!\n    */\n   private static <T> T withRetry(final Supplier<T> supplier) {\n-    final long threshold = System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(30);\n-    while (System.currentTimeMillis() < threshold) {\n-      try {\n-        return supplier.get();\n-      } catch (final MaterializationException e) {\n-        // Expected occasionally if partitions are being rebalanced.\n-      }\n-    }\n-    return supplier.get();\n+    return assertThatEventually(supplier, is(notNullValue()), RetryOnException);\n   }\n }\n \n"}}, {"oid": "6ddb4ffdb6ed380eacb3b594cb8d6fa139857980", "url": "https://github.com/confluentinc/ksql/commit/6ddb4ffdb6ed380eacb3b594cb8d6fa139857980", "message": "test: generalize assertEventually to allow custom exception handling", "committedDate": "2020-06-24T00:10:32Z", "type": "commit"}]}