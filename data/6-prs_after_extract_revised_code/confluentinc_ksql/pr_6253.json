{"pr_number": 6253, "pr_title": "feat: add KSQL processing log message on uncaught streams exceptions", "pr_createdAt": "2020-09-18T03:41:44Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6253", "timeline": [{"oid": "9219c6d4caa29c9e695a94bea646c2b8065248ac", "url": "https://github.com/confluentinc/ksql/commit/9219c6d4caa29c9e695a94bea646c2b8065248ac", "message": "feat: add KSQL processing log message on uncaught streams exceptions", "committedDate": "2020-09-18T14:06:30Z", "type": "forcePushed"}, {"oid": "430c7ac4e42ccd4c8cc47c0a5c1897c51b92ad50", "url": "https://github.com/confluentinc/ksql/commit/430c7ac4e42ccd4c8cc47c0a5c1897c51b92ad50", "message": "feat: add KSQL processing log message on uncaught streams exceptions", "committedDate": "2020-09-21T14:35:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5MzE4NA==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492493184", "bodyText": "let's use the name \"threadName\"", "author": "rodesai", "createdAt": "2020-09-22T06:12:19Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogMessageSchema.java", "diffHunk": "@@ -76,11 +76,23 @@\n       .optional()\n       .build();\n \n+  public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_MESSAGE = \"errorMessage\";\n+  public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_NAME = \"name\";", "originalCommit": "430c7ac4e42ccd4c8cc47c0a5c1897c51b92ad50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODEzNQ==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492888135", "bodyText": "Done", "author": "spena", "createdAt": "2020-09-22T16:50:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5MzE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "79b471c9ab8a0b25601faa144fb1fcfc214b9de7", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogMessageSchema.java b/ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogMessageSchema.java\nindex 9fad96a576..b690b750a0 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogMessageSchema.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogMessageSchema.java\n\n@@ -77,7 +77,7 @@ public final class ProcessingLogMessageSchema {\n       .build();\n \n   public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_MESSAGE = \"errorMessage\";\n-  public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_NAME = \"name\";\n+  public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_NAME = \"threadName\";\n   public static final String KAFKA_STREAMS_THREAD_ERROR_FIELD_CAUSE = \"cause\";\n \n   private static final Schema KAFKA_STREAMS_THREAD_ERROR_SCHEMA = SchemaBuilder.struct()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NjY2Mg==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492496662", "bodyText": "We should use a different logger here. The logger is important because its name tells you a lot about the context of the error. In this case, the logger's name is ksql.logger.production.error, which tells you this is an error hit while trying to produce a record to Kafka. Other loggers' names include the node in the query topology. Eventually we'll let users adjust the log levels for some loggers at runtime, so you could see very detailed logging from just 1 UDF for example. In this case I'd name this something like ksql.logger.thread.exception.uncaught.\nTo create the logger, you can use the factory in the processingLogContext member of this class.", "author": "rodesai", "createdAt": "2020-09-22T06:22:47Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/query/QueryExecutor.java", "diffHunk": "@@ -229,7 +229,9 @@ public PersistentQueryMetadata buildPersistentQuery(\n         ksqlConfig.getLong(KSQL_SHUTDOWN_TIMEOUT_MS_CONFIG),\n         classifier,\n         physicalPlan,\n-        ksqlConfig.getInt(KsqlConfig.KSQL_QUERY_ERROR_MAX_QUEUE_SIZE)\n+        ksqlConfig.getInt(KsqlConfig.KSQL_QUERY_ERROR_MAX_QUEUE_SIZE),\n+        (ProcessingLogger) streamsProperties.get(", "originalCommit": "430c7ac4e42ccd4c8cc47c0a5c1897c51b92ad50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg4ODE4Nw==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492888187", "bodyText": "Done", "author": "spena", "createdAt": "2020-09-22T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NjY2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "91d9b3599c26f3fb3832c2f69a97247cc9d8cf2f", "chunk": "diff --git a/ksqldb-engine/src/main/java/io/confluent/ksql/query/QueryExecutor.java b/ksqldb-engine/src/main/java/io/confluent/ksql/query/QueryExecutor.java\nindex 5d57bbf4f5..ae2a2c467c 100644\n--- a/ksqldb-engine/src/main/java/io/confluent/ksql/query/QueryExecutor.java\n+++ b/ksqldb-engine/src/main/java/io/confluent/ksql/query/QueryExecutor.java\n\n@@ -224,7 +226,7 @@ public final class QueryExecutor {\n         kafkaStreamsBuilder,\n         ksqlQueryBuilder.getSchemas(),\n         streamsProperties,\n-        overrides,\n+        config.getOverrides(),\n         queryCloseCallback,\n         ksqlConfig.getLong(KSQL_SHUTDOWN_TIMEOUT_MS_CONFIG),\n         classifier,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NzA4Ng==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492497086", "bodyText": "consider logging this at the fatal level, since this is a thread-killing error.", "author": "rodesai", "createdAt": "2020-09-22T06:24:07Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/util/PersistentQueryMetadata.java", "diffHunk": "@@ -114,6 +120,15 @@ protected PersistentQueryMetadata(\n     this.materializationProvider = other.materializationProvider;\n     this.physicalPlan = other.physicalPlan;\n     this.materializationProviderBuilder = other.materializationProviderBuilder;\n+    this.processingLogger = other.processingLogger;\n+  }\n+\n+  @Override\n+  protected void uncaughtHandler(final Thread thread, final Throwable error) {\n+    super.uncaughtHandler(thread, error);\n+\n+    processingLogger.error(KafkaStreamsThreadError.of(", "originalCommit": "430c7ac4e42ccd4c8cc47c0a5c1897c51b92ad50", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgzNzkyNw==", "url": "https://github.com/confluentinc/ksql/pull/6253#discussion_r492837927", "bodyText": "How do I log at fatal level?\nThe ProcessingLogger has only error, an the inner logger has only error, info, debug.", "author": "spena", "createdAt": "2020-09-22T15:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ5NzA4Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "91d9b3599c26f3fb3832c2f69a97247cc9d8cf2f", "url": "https://github.com/confluentinc/ksql/commit/91d9b3599c26f3fb3832c2f69a97247cc9d8cf2f", "message": "feat: add KSQL processing log message on uncaught streams exceptions", "committedDate": "2020-09-22T20:34:49Z", "type": "commit"}, {"oid": "79b471c9ab8a0b25601faa144fb1fcfc214b9de7", "url": "https://github.com/confluentinc/ksql/commit/79b471c9ab8a0b25601faa144fb1fcfc214b9de7", "message": "fix: address PR feedback", "committedDate": "2020-09-22T20:35:37Z", "type": "commit"}, {"oid": "79b471c9ab8a0b25601faa144fb1fcfc214b9de7", "url": "https://github.com/confluentinc/ksql/commit/79b471c9ab8a0b25601faa144fb1fcfc214b9de7", "message": "fix: address PR feedback", "committedDate": "2020-09-22T20:35:37Z", "type": "forcePushed"}, {"oid": "56a28eb3729a7b128f7e26f4d4cdb59f7f8e18ad", "url": "https://github.com/confluentinc/ksql/commit/56a28eb3729a7b128f7e26f4d4cdb59f7f8e18ad", "message": "fix: add queryId to logger name", "committedDate": "2020-09-23T14:58:14Z", "type": "commit"}]}