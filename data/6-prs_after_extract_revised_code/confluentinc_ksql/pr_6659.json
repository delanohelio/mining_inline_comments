{"pr_number": 6659, "pr_title": "chore: switch to schema-less KsqlStruct", "pr_createdAt": "2020-11-23T13:07:22Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6659", "timeline": [{"oid": "c9782b52333e476a9c0b8c2c147eb5e089cfc2f1", "url": "https://github.com/confluentinc/ksql/commit/c9782b52333e476a9c0b8c2c147eb5e089cfc2f1", "message": "refactor: remove unused validation code\n\n`KsqlStruct` is not yet used. However, the code calls `validateValue` when setting the value of a field. This check is not free and is on the critical path.  ksqlDB is strongly typed, so the only way the type would be wrong would be if a function or deserializer where returning incorrect data, i.e. a bug.  We should not pay the production runtime cost of checking _every_ field we set during _every_ record we process.\n\nRather than validate here, we should add a `-debug` option to ksqlDB that validates the returned data from deserializers and functions against the expected schema, as suggested here: https://github.com/confluentinc/ksql/issues/3624#issuecomment-729532558", "committedDate": "2020-11-20T22:43:27Z", "type": "commit"}, {"oid": "4d8afe824f346f700b4febcfb2f51e4604b91e93", "url": "https://github.com/confluentinc/ksql/commit/4d8afe824f346f700b4febcfb2f51e4604b91e93", "message": "chore: switch to schema-less KsqlStruct\n\nNo other sql instance types, (e.g. BigDecimal, String, Double, Map, List, etc), require the schema during instantiation. Only the Connect `Struct` type and the ksqlDB specific `KsqlStruct` type, which is to be `Struct`'s replacement, require the schema during Construction.  This can make working with structs more tricky than other types.\n\nThis change removes the requirement to provide the schema when instantiating `KsqlStruct`. The aim is to make this type easier to use.\n\nThe `Field` type has also been moved into the `SqlStruct` class. The code base has many `Field` types. `Field` is specifically a struct field. Making this an inner class of `SqlStruct` helps avoid confusion as to which field type we are talking about.", "committedDate": "2020-11-23T13:06:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2NjU4NA==", "url": "https://github.com/confluentinc/ksql/pull/6659#discussion_r529066584", "bodyText": "I feel like if we're touting efficiency in this class, we should strive not to use optionals to avoid unnecessary wrapping/unwrapping - but that can be change for another time :)", "author": "agavra", "createdAt": "2020-11-23T23:38:41Z", "path": "ksqldb-udf/src/main/java/io/confluent/ksql/types/KsqlStruct.java", "diffHunk": "@@ -35,36 +39,57 @@\n @Immutable\n public final class KsqlStruct {\n \n-  private final SqlStruct schema;\n   @EffectivelyImmutable\n   private final ImmutableList<Optional<?>> values;\n \n   public static Builder builder(final SqlStruct schema) {\n     return new Builder(schema);\n   }\n \n-  private KsqlStruct(\n-      final SqlStruct schema,\n-      final List<Optional<?>> values\n-  ) {\n-    this.schema = Objects.requireNonNull(schema, \"schema\");\n+  private KsqlStruct(final List<Optional<?>> values) {", "originalCommit": "4d8afe824f346f700b4febcfb2f51e4604b91e93", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2OTYyMQ==", "url": "https://github.com/confluentinc/ksql/pull/6659#discussion_r529069621", "bodyText": "I'd be surprised if it made a significant difference.  We'd need to profile to work that out. As you say, one for another day.", "author": "big-andy-coates", "createdAt": "2020-11-23T23:46:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2NjU4NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9343f398fef2a21528632f24dd998572011fd1de", "url": "https://github.com/confluentinc/ksql/commit/9343f398fef2a21528632f24dd998572011fd1de", "message": "Merge branch 'master' into schemaless-struct", "committedDate": "2020-11-23T23:50:44Z", "type": "commit"}, {"oid": "a5c6058c1b7a460d3b85aa050cd5d89fd8b1d18b", "url": "https://github.com/confluentinc/ksql/commit/a5c6058c1b7a460d3b85aa050cd5d89fd8b1d18b", "message": "chore: fix merge issue", "committedDate": "2020-11-24T09:48:27Z", "type": "commit"}]}