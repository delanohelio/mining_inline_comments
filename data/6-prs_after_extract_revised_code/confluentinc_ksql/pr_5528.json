{"pr_number": 5528, "pr_title": "feat: create MetricsContext for ksql metrics reporters", "pr_createdAt": "2020-06-02T18:01:28Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5528", "timeline": [{"oid": "7ad7489b7f1a3721b88ea3af08fe2d5c62aab224", "url": "https://github.com/confluentinc/ksql/commit/7ad7489b7f1a3721b88ea3af08fe2d5c62aab224", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T03:32:21Z", "type": "forcePushed"}, {"oid": "81657ea6bfa815453d00bcab23d178b9667437bf", "url": "https://github.com/confluentinc/ksql/commit/81657ea6bfa815453d00bcab23d178b9667437bf", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T04:03:55Z", "type": "forcePushed"}, {"oid": "77463eb908403dda1b97fdc74800f21ca111f5f0", "url": "https://github.com/confluentinc/ksql/commit/77463eb908403dda1b97fdc74800f21ca111f5f0", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T04:29:47Z", "type": "forcePushed"}, {"oid": "f78ea0b1fa9c0061be363cdf47c017766fd06151", "url": "https://github.com/confluentinc/ksql/commit/f78ea0b1fa9c0061be363cdf47c017766fd06151", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T07:15:18Z", "type": "forcePushed"}, {"oid": "05d3a23e5ef4e739b8d2f284f2ea62d54d63e39d", "url": "https://github.com/confluentinc/ksql/commit/05d3a23e5ef4e739b8d2f284f2ea62d54d63e39d", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T17:00:01Z", "type": "forcePushed"}, {"oid": "0cf1ea2e8c91ac6a1a0d73e080cf5f289f37414f", "url": "https://github.com/confluentinc/ksql/commit/0cf1ea2e8c91ac6a1a0d73e080cf5f289f37414f", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T17:07:45Z", "type": "forcePushed"}, {"oid": "a74fcc7505ed0685f151b2dc69a011616edeae57", "url": "https://github.com/confluentinc/ksql/commit/a74fcc7505ed0685f151b2dc69a011616edeae57", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T17:39:22Z", "type": "forcePushed"}, {"oid": "26fff4854f6d36514d8bf250a24b598a2de2e367", "url": "https://github.com/confluentinc/ksql/commit/26fff4854f6d36514d8bf250a24b598a2de2e367", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T18:22:57Z", "type": "commit"}, {"oid": "26fff4854f6d36514d8bf250a24b598a2de2e367", "url": "https://github.com/confluentinc/ksql/commit/26fff4854f6d36514d8bf250a24b598a2de2e367", "message": "feat: create MetricsContext for ksql metrics reporters", "committedDate": "2020-06-03T18:22:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NzE4NA==", "url": "https://github.com/confluentinc/ksql/pull/5528#discussion_r434777184", "bodyText": "You don't need this. According to KIP-606, \"kafka.cluster.id\" is for kafka broker. For client of TelemetryReporter, you only need resource.cluster.id", "author": "xiaodongdu", "createdAt": "2020-06-03T18:40:41Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/metrics/MetricCollectors.java", "diffHunk": "@@ -96,15 +117,51 @@ static String addCollector(final String id, final MetricCollector collector) {\n     return finalId;\n   }\n \n-  public static void addConfigurableReporter(final KsqlConfig ksqlConfig) {\n+  public static void addConfigurableReporter(\n+      final KsqlConfig ksqlConfig,\n+      final String kafkaClusterId\n+  ) {\n+    final String ksqlServiceId = ksqlConfig.getString(KsqlConfig.KSQL_SERVICE_ID_CONFIG);\n     final List<MetricsReporter> reporters = ksqlConfig.getConfiguredInstances(\n         KsqlConfig.METRIC_REPORTER_CLASSES_CONFIG,\n-        MetricsReporter.class);\n-    for (final MetricsReporter reporter: reporters) {\n-      metrics.addReporter(reporter);\n+        MetricsReporter.class,\n+        Collections.singletonMap(\n+            KsqlConfig.KSQL_SERVICE_ID_CONFIG,\n+            ksqlServiceId));\n+\n+    if (reporters.size() > 0) {\n+      final Map<String, Object> metadata =\n+          new HashMap<>(ksqlConfig.originalsWithPrefix(CommonClientConfigs.METRICS_CONTEXT_PREFIX));\n+      final MetricsContext metricsContext =\n+          new KafkaMetricsContext(\n+              KSQL_JMX_PREFIX,\n+              addConfluentMetricsContextConfigs(\n+                  metadata,\n+                  ksqlServiceId,\n+                  kafkaClusterId));\n+\n+      for (final MetricsReporter reporter : reporters) {\n+        reporter.contextChange(metricsContext);\n+        metrics.addReporter(reporter);\n+      }\n     }\n   }\n \n+  public static Map<String, Object> addConfluentMetricsContextConfigs(\n+      final Map<String,Object> props,\n+      final String ksqlServiceId,\n+      final String kafkaClusterId\n+  ) {\n+    final Map<String, Object> updatedProps = new HashMap<>(props);\n+    updatedProps.put(RESOURCE_LABEL_VERSION, AppInfo.getVersion());\n+    updatedProps.put(RESOURCE_LABEL_COMMIT_ID, AppInfo.getCommitId());\n+    updatedProps.put(RESOURCE_LABEL_TYPE, KSQL_RESOURCE_TYPE);\n+    updatedProps.put(RESOURCE_LABEL_KSQL_SERVICE_ID, ksqlServiceId);\n+    updatedProps.put(RESOURCE_LABEL_CLUSTER_ID, ksqlServiceId);\n+    updatedProps.put(RESOURCE_LABEL_KAFKA_CLUSTER_ID, kafkaClusterId);", "originalCommit": "26fff4854f6d36514d8bf250a24b598a2de2e367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg0ODczNg==", "url": "https://github.com/confluentinc/ksql/pull/5528#discussion_r434848736", "bodyText": "removed", "author": "stevenpyzhang", "createdAt": "2020-06-03T20:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NzE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "c08255638466fd65002313ab4516218f66af5db3", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/metrics/MetricCollectors.java b/ksqldb-common/src/main/java/io/confluent/ksql/metrics/MetricCollectors.java\nindex 866d160489..1383c37d09 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/metrics/MetricCollectors.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/metrics/MetricCollectors.java\n\n@@ -118,8 +116,7 @@ public final class MetricCollectors {\n   }\n \n   public static void addConfigurableReporter(\n-      final KsqlConfig ksqlConfig,\n-      final String kafkaClusterId\n+      final KsqlConfig ksqlConfig\n   ) {\n     final String ksqlServiceId = ksqlConfig.getString(KsqlConfig.KSQL_SERVICE_ID_CONFIG);\n     final List<MetricsReporter> reporters = ksqlConfig.getConfiguredInstances(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MDk5Mw==", "url": "https://github.com/confluentinc/ksql/pull/5528#discussion_r434790993", "bodyText": "If you want ksql cluster id and application propagate to AdminClient, you should add as part of admin client properties:\nmetrics.context.cluster.id, metrics.context.ksql.application.id\nBecause in KafkaAdminClient, we treat properties as metrics reporter properties if it starts with metrics.context: https://github.com/confluentinc/ce-kafka/blob/0f61da6b355f2f34e1b6d2f30072bb47f600bdae/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java#L495", "author": "xiaodongdu", "createdAt": "2020-06-03T19:06:28Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java", "diffHunk": "@@ -768,15 +775,25 @@ private KsqlConfig(final ConfigGeneration generation,\n     for (final ConfigValue config : ksqlStreamConfigProps.values()) {\n       props.put(config.key, config.value);\n     }\n+\n+    props.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n     return Collections.unmodifiableMap(props);\n   }\n \n   public Map<String, Object> getKsqlAdminClientConfigProps() {\n-    return getConfigsFor(AdminClientConfig.configNames());\n+    final Map<String, Object> map = new HashMap<>();", "originalCommit": "26fff4854f6d36514d8bf250a24b598a2de2e367", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg0ODY0Mg==", "url": "https://github.com/confluentinc/ksql/pull/5528#discussion_r434848642", "bodyText": "I updated it so that metrics.context.resource.cluster.id=<ksql-service-id> is being passed in for adminClient, producer, and streams", "author": "stevenpyzhang", "createdAt": "2020-06-03T20:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MDk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c08255638466fd65002313ab4516218f66af5db3", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java b/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\nindex d9c0d431d1..45bf131d7e 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\n\n@@ -771,29 +775,33 @@ public class KsqlConfig extends AbstractConfig {\n   }\n \n   public Map<String, Object> getKsqlStreamConfigProps() {\n-    final Map<String, Object> props = new HashMap<>();\n+    final Map<String, Object> map = new HashMap<>();\n     for (final ConfigValue config : ksqlStreamConfigProps.values()) {\n-      props.put(config.key, config.value);\n+      map.put(config.key, config.value);\n     }\n-\n-    props.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n-    return Collections.unmodifiableMap(props);\n+    map.putAll(getMetricsContextConfigs());\n+    return Collections.unmodifiableMap(map);\n   }\n \n   public Map<String, Object> getKsqlAdminClientConfigProps() {\n     final Map<String, Object> map = new HashMap<>();\n     map.putAll(getConfigsFor(AdminClientConfig.configNames()));\n-\n-    map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n+    map.putAll(getMetricsContextConfigs());\n     return Collections.unmodifiableMap(map);\n   }\n \n   public Map<String, Object> getProducerClientConfigProps() {\n     final Map<String, Object> map = new HashMap<>();\n     map.putAll(getConfigsFor(ProducerConfig.configNames()));\n+    map.putAll(getMetricsContextConfigs());\n+    return Collections.unmodifiableMap(map);\n+  }\n \n+  private Map<String,Object> getMetricsContextConfigs() {\n+    final Map<String, Object> map = new HashMap<>();\n+    map.put(MetricCollectors.RESOURCE_LABEL_CLUSTER_ID, getString(KSQL_SERVICE_ID_CONFIG));\n     map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n-    return Collections.unmodifiableMap(map);\n+    return map;\n   }\n \n   public Map<String, Object> getProcessingLogConfigProps() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc5MTQwOA==", "url": "https://github.com/confluentinc/ksql/pull/5528#discussion_r434791408", "bodyText": "Same comments as AdminClient", "author": "xiaodongdu", "createdAt": "2020-06-03T19:07:08Z", "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java", "diffHunk": "@@ -768,15 +775,25 @@ private KsqlConfig(final ConfigGeneration generation,\n     for (final ConfigValue config : ksqlStreamConfigProps.values()) {\n       props.put(config.key, config.value);\n     }\n+\n+    props.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n     return Collections.unmodifiableMap(props);\n   }\n \n   public Map<String, Object> getKsqlAdminClientConfigProps() {\n-    return getConfigsFor(AdminClientConfig.configNames());\n+    final Map<String, Object> map = new HashMap<>();\n+    map.putAll(getConfigsFor(AdminClientConfig.configNames()));\n+\n+    map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n+    return Collections.unmodifiableMap(map);\n   }\n \n   public Map<String, Object> getProducerClientConfigProps() {\n-    return getConfigsFor(ProducerConfig.configNames());\n+    final Map<String, Object> map = new HashMap<>();\n+    map.putAll(getConfigsFor(ProducerConfig.configNames()));\n+\n+    map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));", "originalCommit": "26fff4854f6d36514d8bf250a24b598a2de2e367", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c08255638466fd65002313ab4516218f66af5db3", "chunk": "diff --git a/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java b/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\nindex d9c0d431d1..45bf131d7e 100644\n--- a/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\n+++ b/ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java\n\n@@ -771,29 +775,33 @@ public class KsqlConfig extends AbstractConfig {\n   }\n \n   public Map<String, Object> getKsqlStreamConfigProps() {\n-    final Map<String, Object> props = new HashMap<>();\n+    final Map<String, Object> map = new HashMap<>();\n     for (final ConfigValue config : ksqlStreamConfigProps.values()) {\n-      props.put(config.key, config.value);\n+      map.put(config.key, config.value);\n     }\n-\n-    props.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n-    return Collections.unmodifiableMap(props);\n+    map.putAll(getMetricsContextConfigs());\n+    return Collections.unmodifiableMap(map);\n   }\n \n   public Map<String, Object> getKsqlAdminClientConfigProps() {\n     final Map<String, Object> map = new HashMap<>();\n     map.putAll(getConfigsFor(AdminClientConfig.configNames()));\n-\n-    map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n+    map.putAll(getMetricsContextConfigs());\n     return Collections.unmodifiableMap(map);\n   }\n \n   public Map<String, Object> getProducerClientConfigProps() {\n     final Map<String, Object> map = new HashMap<>();\n     map.putAll(getConfigsFor(ProducerConfig.configNames()));\n+    map.putAll(getMetricsContextConfigs());\n+    return Collections.unmodifiableMap(map);\n+  }\n \n+  private Map<String,Object> getMetricsContextConfigs() {\n+    final Map<String, Object> map = new HashMap<>();\n+    map.put(MetricCollectors.RESOURCE_LABEL_CLUSTER_ID, getString(KSQL_SERVICE_ID_CONFIG));\n     map.putAll(getConfigsForPrefix(REPORTER_CONFIGS_PREFIXES));\n-    return Collections.unmodifiableMap(map);\n+    return map;\n   }\n \n   public Map<String, Object> getProcessingLogConfigProps() {\n"}}, {"oid": "c08255638466fd65002313ab4516218f66af5db3", "url": "https://github.com/confluentinc/ksql/commit/c08255638466fd65002313ab4516218f66af5db3", "message": "feedback", "committedDate": "2020-06-03T20:38:59Z", "type": "commit"}, {"oid": "c08255638466fd65002313ab4516218f66af5db3", "url": "https://github.com/confluentinc/ksql/commit/c08255638466fd65002313ab4516218f66af5db3", "message": "feedback", "committedDate": "2020-06-03T20:38:59Z", "type": "forcePushed"}, {"oid": "5d09d36c06330b4e218bcf0ab2e49f663d5e80db", "url": "https://github.com/confluentinc/ksql/commit/5d09d36c06330b4e218bcf0ab2e49f663d5e80db", "message": "more feedback", "committedDate": "2020-06-03T22:24:38Z", "type": "forcePushed"}, {"oid": "72e641329a9044426aa0bbb9c25f41858100a272", "url": "https://github.com/confluentinc/ksql/commit/72e641329a9044426aa0bbb9c25f41858100a272", "message": "more feedback", "committedDate": "2020-06-03T22:33:28Z", "type": "forcePushed"}, {"oid": "bc680cfdd9038abcebd4c867fda3c21b38cfa3be", "url": "https://github.com/confluentinc/ksql/commit/bc680cfdd9038abcebd4c867fda3c21b38cfa3be", "message": "more feedback", "committedDate": "2020-06-04T01:57:52Z", "type": "forcePushed"}, {"oid": "3c1d1c99e8f6a8dbcb74c5652cfe9223b2d01340", "url": "https://github.com/confluentinc/ksql/commit/3c1d1c99e8f6a8dbcb74c5652cfe9223b2d01340", "message": "more feedback", "committedDate": "2020-06-04T06:30:32Z", "type": "forcePushed"}, {"oid": "03f6fa69e348bfa082ce00506997fde0e4153a81", "url": "https://github.com/confluentinc/ksql/commit/03f6fa69e348bfa082ce00506997fde0e4153a81", "message": "more feedback", "committedDate": "2020-06-04T06:31:32Z", "type": "forcePushed"}, {"oid": "b80b081c077cc0dba419ae1a98bbabec681b3f3d", "url": "https://github.com/confluentinc/ksql/commit/b80b081c077cc0dba419ae1a98bbabec681b3f3d", "message": "more feedback", "committedDate": "2020-06-04T06:55:15Z", "type": "forcePushed"}, {"oid": "9ff74dd566e5875a6efb117a8b45c131240fc0db", "url": "https://github.com/confluentinc/ksql/commit/9ff74dd566e5875a6efb117a8b45c131240fc0db", "message": "more feedback", "committedDate": "2020-06-04T14:10:52Z", "type": "forcePushed"}, {"oid": "4190131d0a096d7ebd6c71bb57b3946484770f43", "url": "https://github.com/confluentinc/ksql/commit/4190131d0a096d7ebd6c71bb57b3946484770f43", "message": "more feedback", "committedDate": "2020-06-04T14:52:57Z", "type": "commit"}, {"oid": "4190131d0a096d7ebd6c71bb57b3946484770f43", "url": "https://github.com/confluentinc/ksql/commit/4190131d0a096d7ebd6c71bb57b3946484770f43", "message": "more feedback", "committedDate": "2020-06-04T14:52:57Z", "type": "forcePushed"}]}