{"pr_number": 159, "pr_title": "Auto Query Fixer: Implement the fixers for syntax errors", "pr_createdAt": "2020-08-21T19:23:05Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159", "timeline": [{"oid": "b8f031dac491be271cf668e7b232629161167afa", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/b8f031dac491be271cf668e7b232629161167afa", "message": "Implement the fixers for syntax errors", "committedDate": "2020-08-21T19:18:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0NzE4Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r476647186", "bodyText": "'Insert'?", "author": "kikkyo", "createdAt": "2020-08-25T18:17:34Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/ExpectKeywordButGotOthersFixer.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.ExpectKeywordButGotOthersError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * A class to fix {@link ExpectKeywordButGotOthersError}. If the expected token is a keyword, then\n+ * the fixer will either (1) replace a token near the error position that is similar to the expected\n+ * keyword to the expected one, or (2) insert the expected keyword at the error location.\n+ *\n+ * <p>Here is a BigQuery query with this error:\n+ *\n+ * <pre>\n+ *     Select max(col1) from table group col2\n+ * </pre>\n+ *\n+ * The error message is \"Syntax error: Expected keyword BY but got identifier \"col2\" at [1:34]\".\n+ * Thus, the fixer will insert a BY keyword at this error position, which looks like\n+ *\n+ * <pre>\n+ *     Select max(col1) from table group BY col2\n+ * </pre>\n+ */\n+public class ExpectKeywordButGotOthersFixer implements IFixer {\n+\n+  private final String query;\n+  private final ExpectKeywordButGotOthersError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+\n+  // TODO: it could be configured by users in future.\n+  private static final double SIMILARITY_THRESHOLD = 0.5;\n+\n+  public ExpectKeywordButGotOthersFixer(\n+          String query, ExpectKeywordButGotOthersError err, QueryTokenProcessor queryTokenProcessor) {\n+    this.query = query;\n+    this.err = err;\n+    this.queryTokenProcessor = queryTokenProcessor;\n+  }\n+\n+  @Override\n+  public FixResult fix() {\n+    Position errorPosition = err.getErrorPosition();\n+    IToken token =\n+        queryTokenProcessor.getTokenAt(query, errorPosition.getRow(), errorPosition.getColumn());\n+\n+    List<FixOption> fixOptions = new ArrayList<>();\n+    if (isTokenSimilarAsExpectedKeyword(token)) {\n+      fixOptions.add(replaceToken(token));\n+    }\n+    fixOptions.add(insertKeyword(token));\n+\n+    String approach =\n+        String.format(\"Put keyword %s at the error position\", err.getExpectedKeyword());", "originalCommit": "b8f031dac491be271cf668e7b232629161167afa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4Mjk0Nw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r477482947", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-26T17:53:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0NzE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3cddc76415db4d15f5bbdbe8430bb2961506219e", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/ExpectKeywordButGotOthersFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/ExpectKeywordButGotOthersFixer.java\nindex 3aa56ad..b76a6bb 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/ExpectKeywordButGotOthersFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/ExpectKeywordButGotOthersFixer.java\n\n@@ -58,7 +58,7 @@ public class ExpectKeywordButGotOthersFixer implements IFixer {\n     fixOptions.add(insertKeyword(token));\n \n     String approach =\n-        String.format(\"Put keyword %s at the error position\", err.getExpectedKeyword());\n+        String.format(\"Insert keyword %s at the error position\", err.getExpectedKeyword());\n     return FixResult.success(query, approach, fixOptions, err, /*isConfident=*/ true);\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0ODAxNg==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r476648016", "bodyText": "nit: The", "author": "kikkyo", "createdAt": "2020-08-25T18:19:03Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FixerFactory.java", "diffHunk": "@@ -39,6 +36,29 @@ public IFixer getFixer(String query, BigQuerySqlError error) {\n       return new FunctionNotFoundFixer(query, functionError, queryTokenProcessor);\n     }\n \n+    if (error instanceof UnexpectedKeywordError) {\n+      return new UnexpectedKeywordFixer(query, (UnexpectedKeywordError) error, queryTokenProcessor);\n+    }\n+\n+    if (error instanceof IllegalInputCharacterError) {\n+      return new IllegalInputCharacterFixer(query, (IllegalInputCharacterError) error);\n+    }\n+\n+    if (error instanceof ExpectKeywordButGotOthersError) {\n+      ExpectKeywordButGotOthersError expectKeywordError = (ExpectKeywordButGotOthersError) error;\n+\n+      // the parser probably expects multiple keywords, but the error messages only provide the last", "originalCommit": "b8f031dac491be271cf668e7b232629161167afa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4MzgzOA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r477483838", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-26T17:55:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0ODAxNg=="}], "type": "inlineReview", "revised_code": {"commit": "3cddc76415db4d15f5bbdbe8430bb2961506219e", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FixerFactory.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FixerFactory.java\nindex 23b36db..4d73726 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FixerFactory.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FixerFactory.java\n\n@@ -47,7 +47,7 @@ public class FixerFactory {\n     if (error instanceof ExpectKeywordButGotOthersError) {\n       ExpectKeywordButGotOthersError expectKeywordError = (ExpectKeywordButGotOthersError) error;\n \n-      // the parser probably expects multiple keywords, but the error messages only provide the last\n+      // The parser probably expects multiple keywords, but the error messages only provide the last\n       // option, which usually is END_OF_INPUT. Therefore, if this happens, we can only search near\n       // the error position and see if an identifier may be converted to a keyword.\n       if (ExpectKeywordButGotOthersError.END_OF_INPUT.equals(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0OTk0NA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r476649944", "bodyText": "'anc' -> 'and'", "author": "kikkyo", "createdAt": "2020-08-25T18:22:35Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.ExpectKeywordButGotOthersError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A class to fix general syntax errors. Usually, a general syntax error looks like {@link\n+ * ExpectKeywordButGotOthersError} but expects \"end of input\". It basically means there may be\n+ * multiple expected tokens but the error message cannot recognize them, so the fixer will try to\n+ * see if the tokens near the error position are similar to any keywords. If yes, then replace the\n+ * token to the similar keyword anc check if the error is eliminated from the query.", "originalCommit": "b8f031dac491be271cf668e7b232629161167afa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4Mzg3OA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r477483878", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-26T17:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0OTk0NA=="}], "type": "inlineReview", "revised_code": {"commit": "3cddc76415db4d15f5bbdbe8430bb2961506219e", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\nindex 4335ef9..1d860f6 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\n\n@@ -18,7 +18,7 @@ import java.util.stream.Collectors;\n  * ExpectKeywordButGotOthersError} but expects \"end of input\". It basically means there may be\n  * multiple expected tokens but the error message cannot recognize them, so the fixer will try to\n  * see if the tokens near the error position are similar to any keywords. If yes, then replace the\n- * token to the similar keyword anc check if the error is eliminated from the query.\n+ * token to the similar keyword and check if the error is eliminated from the query.\n  *\n  * <p>Here is an example with an input query:\n  *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1NDk1Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r476654956", "bodyText": "Do we have a use case where this would be confident? where left edit distance = right distance and use both of them?", "author": "kikkyo", "createdAt": "2020-08-25T18:31:28Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java", "diffHunk": "@@ -0,0 +1,136 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.ExpectKeywordButGotOthersError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+import com.google.common.collect.ImmutableList;\n+import org.apache.commons.lang3.tuple.Pair;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * A class to fix general syntax errors. Usually, a general syntax error looks like {@link\n+ * ExpectKeywordButGotOthersError} but expects \"end of input\". It basically means there may be\n+ * multiple expected tokens but the error message cannot recognize them, so the fixer will try to\n+ * see if the tokens near the error position are similar to any keywords. If yes, then replace the\n+ * token to the similar keyword anc check if the error is eliminated from the query.\n+ *\n+ * <p>Here is an example with an input query:\n+ *\n+ * <pre>\n+ *     SELECT status FORM `bigquery-public-data.austin_311.311_request` LIMIT 10\n+ * </pre>\n+ *\n+ * It causes an error \"Syntax error: Expected end of input but got identifier `...` at [1:20]\". The\n+ * fixer will look around this position and find FORM looks like a keyword FROM and convert it to\n+ * FROM, leading to a new query\n+ *\n+ * <pre>\n+ *     SELECT status FROM `bigquery-public-data.austin_311.311_request` LIMIT 10\n+ * </pre>\n+ */\n+public class NearbyTokenFixer implements IFixer {\n+\n+  private final String query;\n+  private final ExpectKeywordButGotOthersError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+  private final List<String> keywords;\n+\n+  // TODO: it could be configured by users in future.\n+  private static final double SIMILARITY_THRESHOLD = 0.5;\n+\n+  public NearbyTokenFixer(\n+      String query, ExpectKeywordButGotOthersError err, QueryTokenProcessor queryTokenProcessor) {\n+    this.query = query;\n+    this.err = err;\n+    this.queryTokenProcessor = queryTokenProcessor;\n+    this.keywords = getAllKeywords();\n+  }\n+\n+  @Override\n+  public FixResult fix() {\n+\n+    Position errorPosition = err.getErrorPosition();\n+    Pair<IToken, IToken> tokens =\n+        queryTokenProcessor.getNearbyTokens(\n+            query, errorPosition.getRow(), errorPosition.getColumn());\n+\n+    StringUtil.SimilarStrings rightTokenSimilarStrings = findSimilarKeywords(tokens.getRight());\n+    StringUtil.SimilarStrings leftTokenSimilarStrings = findSimilarKeywords(tokens.getLeft());\n+\n+    // The overall logic below is that if left token has a more similar (measured by\n+    // edit distance) keyword, then only choose the fixes on left tokens. If right token\n+    // has more similar keywords, choose the fixes on right tokens. If both of them have\n+    // the similar keywords with the same edit distance, then choose both of them.", "originalCommit": "b8f031dac491be271cf668e7b232629161167afa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ4NDU2NQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/159#discussion_r477484565", "bodyText": "I think it is hard to consider them as confident, because we are guessing the correct keywords rather than inferring one from the error message.", "author": "mingen-pan", "createdAt": "2020-08-26T17:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY1NDk1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3cddc76415db4d15f5bbdbe8430bb2961506219e", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\nindex 4335ef9..1d860f6 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/NearbyTokenFixer.java\n\n@@ -18,7 +18,7 @@ import java.util.stream.Collectors;\n  * ExpectKeywordButGotOthersError} but expects \"end of input\". It basically means there may be\n  * multiple expected tokens but the error message cannot recognize them, so the fixer will try to\n  * see if the tokens near the error position are similar to any keywords. If yes, then replace the\n- * token to the similar keyword anc check if the error is eliminated from the query.\n+ * token to the similar keyword and check if the error is eliminated from the query.\n  *\n  * <p>Here is an example with an input query:\n  *\n"}}, {"oid": "3cddc76415db4d15f5bbdbe8430bb2961506219e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/3cddc76415db4d15f5bbdbe8430bb2961506219e", "message": "Minor fix", "committedDate": "2020-08-26T18:05:46Z", "type": "commit"}, {"oid": "25752b1fecda94fdf832114990d232b624d25190", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/25752b1fecda94fdf832114990d232b624d25190", "message": "Merge branch 'master' into add_syntax_fixer", "committedDate": "2020-08-26T18:08:48Z", "type": "commit"}]}