{"pr_number": 118, "pr_title": "Allen wang314/tokens2", "pr_createdAt": "2020-07-26T03:12:43Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118", "timeline": [{"oid": "34dd546ad93425c3e71fec45b12cf8e69e27d4fc", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/34dd546ad93425c3e71fec45b12cf8e69e27d4fc", "message": "brought up to date with previous progress", "committedDate": "2020-07-24T18:03:52Z", "type": "commit"}, {"oid": "45ec1c56507e1fbb63d893e2cd61b57700de96f1", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/45ec1c56507e1fbb63d893e2cd61b57700de96f1", "message": "made progress on token generation", "committedDate": "2020-07-24T22:05:26Z", "type": "commit"}, {"oid": "150b00c668f8c2b0d328ef77def478e2c4a6826d", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/150b00c668f8c2b0d328ef77def478e2c4a6826d", "message": "finished simple cases for token generation", "committedDate": "2020-07-26T03:03:26Z", "type": "commit"}, {"oid": "0ddf31f446ae95d999b81efba6ac3f238e5ae639", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0ddf31f446ae95d999b81efba6ac3f238e5ae639", "message": "factored out placeholder generation into a function", "committedDate": "2020-07-27T20:13:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r461769394", "bodyText": "Instead of create another hashset for generating a random, can we use the schema.keyset to get a random instead?", "author": "Bei-z", "createdAt": "2020-07-28T17:59:10Z", "path": "tools/template_based_query_generation/src/main/java/data/Table.java", "diffHunk": "@@ -40,5 +47,27 @@ public String getName() {\n     return this.name;\n   }\n \n+  public void setNumRows(int numRows) {\n+    this.numRows = numRows;\n+  }\n+\n+  public int getNumRows() {\n+    return this.numRows;\n+  }\n+\n+  /**\n+   *\n+   * @param datatype\n+   * @return name of random column of given datatype\n+   */\n+  public String getRandomColumn(DataType datatype) {\n+    Set<String> s = new HashSet<>();\n+    for (String col: this.schema.keySet()){\n+      if (this.schema.get(col) == datatype) {\n+        s.add(col);\n+      }\n+    }\n+    return Utils.getRandomElement(s);", "originalCommit": "0ddf31f446ae95d999b81efba6ac3f238e5ae639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0NDE5NA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r462444194", "bodyText": "The method picks a random column of a specific datatype (the parameter is datatype). So I go through the entire schema first and find the column names that contain data of type datatype. I also added another getRandomColumn method that just picks a random column and it uses schema.keySet() directly.", "author": "AllenWang314", "createdAt": "2020-07-29T16:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3NDk2Ng==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r462474966", "bodyText": "Thank you for the explanation. Then let's use an array instead of a hashset to get the random.", "author": "Bei-z", "createdAt": "2020-07-29T17:42:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "ccfcc01b5b5e6adc4deb67ff1a6eb9fecd16846d", "chunk": "diff --git a/tools/template_based_query_generation/src/main/java/data/Table.java b/tools/template_based_query_generation/src/main/java/data/Table.java\nindex b74d203..11c2be3 100644\n--- a/tools/template_based_query_generation/src/main/java/data/Table.java\n+++ b/tools/template_based_query_generation/src/main/java/data/Table.java\n\n@@ -55,6 +56,14 @@ public class Table {\n     return this.numRows;\n   }\n \n+  /**\n+   *\n+   * @return name of random column of schema\n+   */\n+  public String getRandomColumn() {\n+    return Utils.getRandomElement(schema.keySet());\n+  }\n+\n   /**\n    *\n    * @param datatype\n"}}, {"oid": "ccfcc01b5b5e6adc4deb67ff1a6eb9fecd16846d", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/ccfcc01b5b5e6adc4deb67ff1a6eb9fecd16846d", "message": "added method to Table", "committedDate": "2020-07-29T16:52:38Z", "type": "commit"}, {"oid": "f3928ecca2a35e8d14da9a4de2b849ee76fa728b", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/f3928ecca2a35e8d14da9a4de2b849ee76fa728b", "message": "made changes to address PR comments", "committedDate": "2020-07-29T19:59:57Z", "type": "commit"}, {"oid": "35862278eff0373301592758eee4ba825342a19e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/35862278eff0373301592758eee4ba825342a19e", "message": "changed parameter and return type in generateRandomElement", "committedDate": "2020-07-29T20:38:10Z", "type": "commit"}, {"oid": "1811c3e082b6320d5439d1049ecdd5b9a0522117", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/1811c3e082b6320d5439d1049ecdd5b9a0522117", "message": "changed type in Table.java", "committedDate": "2020-07-29T20:38:49Z", "type": "commit"}, {"oid": "da6a94ce05615471ad58ab7c41b5ed0a76d19a88", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/da6a94ce05615471ad58ab7c41b5ed0a76d19a88", "message": "Merge branch 'master' into AllenWang314/tokens2", "committedDate": "2020-07-30T02:26:23Z", "type": "commit"}]}