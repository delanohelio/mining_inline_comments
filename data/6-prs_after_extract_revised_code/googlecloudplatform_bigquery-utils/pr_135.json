{"pr_number": 135, "pr_title": "Auto Query Fixer: Implement TableNotFoundFixer", "pr_createdAt": "2020-08-05T01:40:19Z", "pr_url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135", "timeline": [{"oid": "fab85becdc0345f57bfc78394ceaad4b70618bb9", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/fab85becdc0345f57bfc78394ceaad4b70618bb9", "message": "add getMessage method", "committedDate": "2020-07-17T18:08:15Z", "type": "commit"}, {"oid": "0ec1d3710e919bc04b693a2819d896866d298a95", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0ec1d3710e919bc04b693a2819d896866d298a95", "message": "implement SqlErrorFactory", "committedDate": "2020-07-17T18:10:58Z", "type": "commit"}, {"oid": "c904515daa5d85c2d7761784ea040e7f41188120", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/c904515daa5d85c2d7761784ea040e7f41188120", "message": "Merge remote-tracking branch 'upstream/master' into add_error_class", "committedDate": "2020-07-17T18:12:33Z", "type": "commit"}, {"oid": "f546f5d54e17211d513f0b56d6aaa7a545126f0c", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/f546f5d54e17211d513f0b56d6aaa7a545126f0c", "message": "minor change", "committedDate": "2020-07-27T18:17:36Z", "type": "commit"}, {"oid": "64133924809dfc239ad0e0f3bf4cb31c2370916e", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/64133924809dfc239ad0e0f3bf4cb31c2370916e", "message": "Merge remote-tracking branch 'upstream/master' into add_error_class", "committedDate": "2020-07-27T18:20:50Z", "type": "commit"}, {"oid": "225248220a13d782a7daaa74eedd46e0207f97d8", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/225248220a13d782a7daaa74eedd46e0207f97d8", "message": "Implement tokenizer and a few helper classes to process query", "committedDate": "2020-07-30T23:06:38Z", "type": "commit"}, {"oid": "cbfbbfc01d8a62c7adf7b77cec349ea1b9e36942", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/cbfbbfc01d8a62c7adf7b77cec349ea1b9e36942", "message": "Minor change to comments.", "committedDate": "2020-08-03T19:02:47Z", "type": "commit"}, {"oid": "88aa4fa6951b881cf55cc74aa0998cbf6efbd4d5", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/88aa4fa6951b881cf55cc74aa0998cbf6efbd4d5", "message": "Minor change", "committedDate": "2020-08-04T23:43:04Z", "type": "commit"}, {"oid": "55854d7dd138385cd13a0d2792e0c315c8727e4d", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/55854d7dd138385cd13a0d2792e0c315c8727e4d", "message": "Merge remote-tracking branch 'upstream/master' into add_error_class", "committedDate": "2020-08-04T23:47:50Z", "type": "commit"}, {"oid": "572992edaae8f993873cf9bbaca9fcbbc65dff4c", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/572992edaae8f993873cf9bbaca9fcbbc65dff4c", "message": "Implement TableNotFoundFixer", "committedDate": "2020-08-05T01:37:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NTMyMA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466085320", "bodyText": "nit: stylewise we usually don't use paragraph for field comment.\nJust use \"//...\" for short comment.", "author": "kikkyo", "createdAt": "2020-08-06T01:01:21Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixOption.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package com.google.cloud.bigquery.utils.queryfixer.entity;\n+\n+import lombok.Value;\n+\n+@Value(staticConstructor = \"of\")\n+public class FixOption {\n+  /**\n+   * A short description about this fixing option. Usually, if an identifier is to be modified, this\n+   * field will be the new identifier to replace. For example, if a table is to be replaced, this", "originalCommit": "572992edaae8f993873cf9bbaca9fcbbc65dff4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNTE1MA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466705150", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-06T21:49:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NTMyMA=="}], "type": "inlineReview", "revised_code": {"commit": "050f5b060e9826100b9019d3bbf1353857215ee0", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixOption.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixOption.java\nindex b5fc5b7..7752e0a 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixOption.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixOption.java\n\n@@ -4,13 +4,12 @@ import lombok.Value;\n \n @Value(staticConstructor = \"of\")\n public class FixOption {\n-  /**\n-   * A short description about this fixing option. Usually, if an identifier is to be modified, this\n-   * field will be the new identifier to replace. For example, if a table is to be replaced, this\n-   * field will be the new table name.\n-   */\n+\n+  // A short description about this fixing option. Usually, if an identifier is to be modified, this\n+  // field will be the new identifier to replace. For example, if a table is to be replaced, this\n+  // field will be the new table name.\n   String description;\n \n-  /** The fixed query in this option. */\n+  // The fixed query in this option.\n   String fixedQuery;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4Njk0OQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466086949", "bodyText": "maybe add a TODO to make this user configurable.", "author": "kikkyo", "createdAt": "2020-08-06T01:08:03Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.utils.queryfixer.QueryPositionConverter;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.TableNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.service.BigQueryService;\n+import com.google.cloud.bigquery.utils.queryfixer.util.PatternMatcher;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The fixer class responsible for \"table not found\" error. It fixes the error by (1) find the\n+ * similar table under the same project and dataset as the incorrect one, and (2) replace the\n+ * incorrect one with the most similar table.\n+ *\n+ * <p>If no similar tables are found in the dataset, the fixer will directly return the error\n+ * without providing any fix options.\n+ */\n+public class TableNotFoundFixer implements IFixer {\n+\n+  /** This regex is able to parse both project:dataset.table and dataset.table. */\n+  private static final String tableIdRegex = \"^((.*?):)?(.*?)\\\\.(.*?)$\";\n+\n+  private final String query;\n+  private final TableNotFoundError err;\n+  private final BigQueryService bigQueryService;\n+  private final QueryPositionConverter queryPositionConverter;\n+\n+  public TableNotFoundFixer(String query, TableNotFoundError err, BigQueryService bigQueryService) {\n+    this.query = query;\n+    this.err = err;\n+    this.bigQueryService = bigQueryService;\n+    this.queryPositionConverter = new QueryPositionConverter(query);\n+  }\n+\n+  @Override\n+  public FixResult fix() {\n+    TableId fullTableId = constructTableId(err.getTableName());\n+    List<String> tableNames =\n+        bigQueryService.listTableNames(fullTableId.getProject(), fullTableId.getDataset());\n+\n+    StringUtil.SimilarStrings similarTables =\n+        StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n+\n+    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as\n+    // the incorrect table typo.\n+    int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;", "originalCommit": "572992edaae8f993873cf9bbaca9fcbbc65dff4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNDgyOQ==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466704829", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-06T21:49:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4Njk0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "050f5b060e9826100b9019d3bbf1353857215ee0", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\nindex 0ac96fd..0c38d79 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n\n@@ -47,9 +47,9 @@ public class TableNotFoundFixer implements IFixer {\n     StringUtil.SimilarStrings similarTables =\n         StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n \n-    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n-    // similarity as\n-    // the incorrect table typo.\n+    // This is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as the incorrect table typo.\n+    // TODO: this could be user configurable in future.\n     int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;\n \n     if (similarTables.getStrings().isEmpty()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzEwMA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466087100", "bodyText": "nit: This", "author": "kikkyo", "createdAt": "2020-08-06T01:08:34Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.utils.queryfixer.QueryPositionConverter;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.TableNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.service.BigQueryService;\n+import com.google.cloud.bigquery.utils.queryfixer.util.PatternMatcher;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The fixer class responsible for \"table not found\" error. It fixes the error by (1) find the\n+ * similar table under the same project and dataset as the incorrect one, and (2) replace the\n+ * incorrect one with the most similar table.\n+ *\n+ * <p>If no similar tables are found in the dataset, the fixer will directly return the error\n+ * without providing any fix options.\n+ */\n+public class TableNotFoundFixer implements IFixer {\n+\n+  /** This regex is able to parse both project:dataset.table and dataset.table. */\n+  private static final String tableIdRegex = \"^((.*?):)?(.*?)\\\\.(.*?)$\";\n+\n+  private final String query;\n+  private final TableNotFoundError err;\n+  private final BigQueryService bigQueryService;\n+  private final QueryPositionConverter queryPositionConverter;\n+\n+  public TableNotFoundFixer(String query, TableNotFoundError err, BigQueryService bigQueryService) {\n+    this.query = query;\n+    this.err = err;\n+    this.bigQueryService = bigQueryService;\n+    this.queryPositionConverter = new QueryPositionConverter(query);\n+  }\n+\n+  @Override\n+  public FixResult fix() {\n+    TableId fullTableId = constructTableId(err.getTableName());\n+    List<String> tableNames =\n+        bigQueryService.listTableNames(fullTableId.getProject(), fullTableId.getDataset());\n+\n+    StringUtil.SimilarStrings similarTables =\n+        StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n+\n+    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as\n+    // the incorrect table typo.\n+    int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;\n+\n+    if (similarTables.getStrings().isEmpty()\n+        || similarTables.getDistance() > editDistanceThreshold) {\n+      return FixResult.failure(err);\n+    }\n+\n+    // this method only finds the first occurrence of the incorrect table. It is possible that this", "originalCommit": "572992edaae8f993873cf9bbaca9fcbbc65dff4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNDE2MA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466704160", "bodyText": "Done", "author": "mingen-pan", "createdAt": "2020-08-06T21:47:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4NzEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "050f5b060e9826100b9019d3bbf1353857215ee0", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\nindex 0ac96fd..0c38d79 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n\n@@ -47,9 +47,9 @@ public class TableNotFoundFixer implements IFixer {\n     StringUtil.SimilarStrings similarTables =\n         StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n \n-    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n-    // similarity as\n-    // the incorrect table typo.\n+    // This is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as the incorrect table typo.\n+    // TODO: this could be user configurable in future.\n     int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;\n \n     if (similarTables.getStrings().isEmpty()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MDA3Mw==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466090073", "bodyText": "So we rely on the error message to identify if they used legacy sql?", "author": "kikkyo", "createdAt": "2020-08-06T01:19:44Z", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.utils.queryfixer.QueryPositionConverter;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.Position;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.TableNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.service.BigQueryService;\n+import com.google.cloud.bigquery.utils.queryfixer.util.PatternMatcher;\n+import com.google.cloud.bigquery.utils.queryfixer.util.StringUtil;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The fixer class responsible for \"table not found\" error. It fixes the error by (1) find the\n+ * similar table under the same project and dataset as the incorrect one, and (2) replace the\n+ * incorrect one with the most similar table.\n+ *\n+ * <p>If no similar tables are found in the dataset, the fixer will directly return the error\n+ * without providing any fix options.\n+ */\n+public class TableNotFoundFixer implements IFixer {\n+\n+  /** This regex is able to parse both project:dataset.table and dataset.table. */\n+  private static final String tableIdRegex = \"^((.*?):)?(.*?)\\\\.(.*?)$\";\n+\n+  private final String query;\n+  private final TableNotFoundError err;\n+  private final BigQueryService bigQueryService;\n+  private final QueryPositionConverter queryPositionConverter;\n+\n+  public TableNotFoundFixer(String query, TableNotFoundError err, BigQueryService bigQueryService) {\n+    this.query = query;\n+    this.err = err;\n+    this.bigQueryService = bigQueryService;\n+    this.queryPositionConverter = new QueryPositionConverter(query);\n+  }\n+\n+  @Override\n+  public FixResult fix() {\n+    TableId fullTableId = constructTableId(err.getTableName());\n+    List<String> tableNames =\n+        bigQueryService.listTableNames(fullTableId.getProject(), fullTableId.getDataset());\n+\n+    StringUtil.SimilarStrings similarTables =\n+        StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n+\n+    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as\n+    // the incorrect table typo.\n+    int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;\n+\n+    if (similarTables.getStrings().isEmpty()\n+        || similarTables.getDistance() > editDistanceThreshold) {\n+      return FixResult.failure(err);\n+    }\n+\n+    // this method only finds the first occurrence of the incorrect table. It is possible that this\n+    // table exists in multiple positions of this query. What is worse, it is possible that the\n+    // table name is also part of a literal, then this auto fixing may have problem. The ultimate\n+    // solution for this issue is to use Parser to find the correct position of this table.\n+    int tableStartIndex = findTheIndexOfIncorrectTable();\n+\n+    List<FixOption> fixOptions =\n+        similarTables.getStrings().stream()\n+            .map(\n+                table -> {\n+                  String fullTableName =\n+                      constructFullTableName(\n+                          fullTableId.getProject(), fullTableId.getDataset(), table);\n+                  String fixedQuery = replaceTable(fullTableName, tableStartIndex);\n+                  return FixOption.of(fullTableName, fixedQuery);\n+                })\n+            .collect(Collectors.toList());\n+\n+    return FixResult.success(/*approach= */ \"Replace the table name.\", fixOptions, err);\n+  }\n+\n+  private TableId constructTableId(String fullTableName) {\n+    List<String> contents = PatternMatcher.extract(fullTableName, tableIdRegex);\n+    String projectId;\n+    // Assume the table name from dry-run message is always correct, so no check is performed for\n+    // matching.\n+    // If contents[0] == null, it means the table looks like dataset.table, so the project ID should\n+    // be fetched from the BigQuery Client.\n+    if (contents.get(0) == null) {\n+      projectId = bigQueryService.getBigQueryOptions().getProjectId();\n+    } else {\n+      projectId = contents.get(1);\n+    }\n+    String datasetId = contents.get(2);\n+    String tableName = contents.get(3);\n+    return TableId.of(projectId, datasetId, tableName);\n+  }\n+\n+  private String constructFullTableName(String projectId, String datasetId, String tableName) {\n+    return String.format(\"%s.%s.%s\", projectId, datasetId, tableName);\n+  }\n+\n+  private int findTheIndexOfIncorrectTable() {\n+    // the table in the error message is presented in the legacySQL mode, but this fixer is used to", "originalCommit": "572992edaae8f993873cf9bbaca9fcbbc65dff4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwMzYxOA==", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/135#discussion_r466703618", "bodyText": "Here I mean the error message represents the table in legacySQL format, which is project:dataset.table. I guess we could be an issue for BigQuery to update this error message.", "author": "mingen-pan", "createdAt": "2020-08-06T21:46:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MDA3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "050f5b060e9826100b9019d3bbf1353857215ee0", "chunk": "diff --git a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\nindex 0ac96fd..0c38d79 100644\n--- a/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n+++ b/tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/TableNotFoundFixer.java\n\n@@ -47,9 +47,9 @@ public class TableNotFoundFixer implements IFixer {\n     StringUtil.SimilarStrings similarTables =\n         StringUtil.findSimilarWords(tableNames, fullTableId.getTable());\n \n-    // this is an arbitrary standard. It requires the candidate table should share at least 50%\n-    // similarity as\n-    // the incorrect table typo.\n+    // This is an arbitrary standard. It requires the candidate table should share at least 50%\n+    // similarity as the incorrect table typo.\n+    // TODO: this could be user configurable in future.\n     int editDistanceThreshold = (fullTableId.getTable().length() + 1) / 2;\n \n     if (similarTables.getStrings().isEmpty()\n"}}, {"oid": "050f5b060e9826100b9019d3bbf1353857215ee0", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/050f5b060e9826100b9019d3bbf1353857215ee0", "message": "Respond to PR", "committedDate": "2020-08-06T21:53:30Z", "type": "commit"}, {"oid": "7c32ff3e8cf2b40fa9baf0731b28beddb9ea1a73", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/7c32ff3e8cf2b40fa9baf0731b28beddb9ea1a73", "message": "Merge branch 'master' into add_fixer", "committedDate": "2020-08-06T21:54:10Z", "type": "commit"}]}