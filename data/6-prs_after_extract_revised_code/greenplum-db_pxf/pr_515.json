{"pr_number": 515, "pr_title": "Use Lombok for RequestContext", "pr_createdAt": "2020-12-09T14:59:33Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/515", "timeline": [{"oid": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "url": "https://github.com/greenplum-db/pxf/commit/4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "message": "Use Lombok for RequestContext\n\n- Simplify RequestContext by using Lombok.\n- Remove deprecated X-GP-DATA-FRAGMENT, use X-GP-FRAGMENT-INDEX instead.", "committedDate": "2020-12-09T15:15:04Z", "type": "commit"}, {"oid": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "url": "https://github.com/greenplum-db/pxf/commit/4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "message": "Use Lombok for RequestContext\n\n- Simplify RequestContext by using Lombok.\n- Remove deprecated X-GP-DATA-FRAGMENT, use X-GP-FRAGMENT-INDEX instead.", "committedDate": "2020-12-09T15:15:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUwNDIzNw==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539504237", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private String accessor;\n          \n          \n            \n                private String accessorClassName;\n          \n      \n    \n    \n  \n\nshould we do this and for other components as well (fragmented / resolver) ?", "author": "denalex", "createdAt": "2020-12-09T17:31:08Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -63,25 +68,101 @@ public void setRequestType(RequestType requestType) {\n     }\n \n     // ----- NAMED PROPERTIES -----\n+\n+    /**\n+     * The fully-qualified class name for the java class that was defined as\n+     * Accessor.\n+     */\n     private String accessor;", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzNjcxOQ==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539536719", "bodyText": "I do not want to make any changes that will impact other classes. This will make us change getters for accessor, fragmenter, resolver.", "author": "frankgh", "createdAt": "2020-12-09T18:15:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUwNDIzNw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNDAyOQ==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539514029", "bodyText": "nice, even though we technically do not need  @RequiredArgsConstructor that comes with it. Any way to suppress it ?", "author": "denalex", "createdAt": "2020-12-09T17:42:32Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -36,6 +40,7 @@\n  * Common configuration available to all PXF plugins. Represents input data\n  * coming from client applications, such as GPDB.\n  */\n+@Data", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzNDc0MQ==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539534741", "bodyText": "good catch, I'll replace it with @Getter @Setter.", "author": "frankgh", "createdAt": "2020-12-09T18:12:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNDAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e4925e0e5864addc1709fa722764df20cb2b7f19", "chunk": "diff --git a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\nindex 9c3dfc5d..f7e706ba 100644\n--- a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n+++ b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n\n@@ -40,7 +39,8 @@ import java.util.TreeMap;\n  * Common configuration available to all PXF plugins. Represents input data\n  * coming from client applications, such as GPDB.\n  */\n-@Data\n+@Getter\n+@Setter\n public class RequestContext {\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNDkyNA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539514924", "bodyText": "so this was not used at all ? the write case would not have any fragments, default will change from -1 to 0, hopefully no existing logic impact ?", "author": "denalex", "createdAt": "2020-12-09T17:43:52Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -63,25 +68,101 @@ public void setRequestType(RequestType requestType) {\n     }\n \n     // ----- NAMED PROPERTIES -----\n+\n+    /**\n+     * The fully-qualified class name for the java class that was defined as\n+     * Accessor.\n+     */\n     private String accessor;\n+\n+    /**\n+     * The aggregate type, i.e - count, min, max, etc\n+     */\n     private EnumAggregationType aggType;\n+\n+    /**\n+     * The name of the server configuration for this request.\n+     */\n+    @Setter(AccessLevel.NONE)\n     private String config;\n+\n+    /**\n+     * The server configuration associated to the server that this request is\n+     * accessing\n+     */\n     private Configuration configuration;\n-    private int dataFragment = -1; /* should be deprecated */", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzNzc4Ng==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539537786", "bodyText": "this was not used at all, but we had the same information here:\nhttps://github.com/greenplum-db/pxf/pull/515/files#diff-f4bcdfde3d8615e2a52da19be244339ca0e9b457df836d33d469f9a01a0d5148L228\nhttps://github.com/greenplum-db/pxf/pull/515/files#diff-f4bcdfde3d8615e2a52da19be244339ca0e9b457df836d33d469f9a01a0d5148L226", "author": "frankgh", "createdAt": "2020-12-09T18:17:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNDkyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNjIxMA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539516210", "bodyText": "should this be transient to exclude from toString / hashcode methods ?", "author": "denalex", "createdAt": "2020-12-09T17:45:47Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -94,15 +175,46 @@ public void setRequestType(RequestType requestType) {\n      */\n     private int numAttrsProjected;\n \n+    /**\n+     * The plugin configuration\n+     */\n+    private PluginConf pluginConf;", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzODU0NA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539538544", "bodyText": "these should not be included anymore after I remove @Data and use @Getter, @Setter instead.", "author": "frankgh", "createdAt": "2020-12-09T18:18:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNjIxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNjkzMg==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539516932", "bodyText": "why restrict getters ?", "author": "denalex", "createdAt": "2020-12-09T17:46:45Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -94,15 +175,46 @@ public void setRequestType(RequestType requestType) {\n      */\n     private int numAttrsProjected;\n \n+    /**\n+     * The plugin configuration\n+     */\n+    private PluginConf pluginConf;\n+\n+    /**\n+     * The server port providing the service.\n+     */\n+    private int port;\n+\n+    /**\n+     * The name of the profile associated to this request.\n+     */\n     private String profile;\n+\n+    /**\n+     * The scheme defined at the profile level\n+     */\n     private String profileScheme;\n \n-    // The protocol defined at the foreign data wrapper (FDW) level\n+    /**\n+     * The protocol defined at the foreign data wrapper (FDW) level\n+     */\n+    @Getter(AccessLevel.NONE)", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTAzOA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539539038", "bodyText": "we have a getProtocol implementation down below that has some logic:\n    public String getProtocol() {\n        return StringUtils.isNotBlank(protocol) ? protocol : inferProtocolName();\n    }", "author": "frankgh", "createdAt": "2020-12-09T18:19:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNjkzMg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNzU1Mg==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539517552", "bodyText": "wow, what are these for ?", "author": "denalex", "createdAt": "2020-12-09T17:47:39Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -118,26 +230,62 @@ public void setRequestType(RequestType requestType) {\n      */\n     private ColumnDescriptor recordkeyColumn;\n \n+    /**\n+     * The contents of pxf_remote_service_login set in Greenplum. Should the\n+     * user set it to an empty string this function will return null.\n+     */\n     private String remoteLogin;\n+\n+    /**\n+     * The contents of pxf_remote_service_secret set in Greenplum. Should the\n+     * user set it to an empty string this function will return null.\n+     */", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTQzOA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539539438", "bodyText": "no idea, but I did not remove them, maybe we should clean up some of this code at some point", "author": "frankgh", "createdAt": "2020-12-09T18:19:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxNzU1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e4925e0e5864addc1709fa722764df20cb2b7f19", "chunk": "diff --git a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\nindex 9c3dfc5d..f7e706ba 100644\n--- a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n+++ b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n\n@@ -254,7 +254,7 @@ public class RequestContext {\n \n     /**\n      * The name of the server to access. The name will be used to build\n-     * a path for the config files (i.e. $PXF_CONF/servers/$serverName/*.xml)\n+     * a path for the config files (i.e. $PXF_BASE/servers/$serverName/*.xml)\n      */\n     @Setter(AccessLevel.NONE)\n     private String serverName = \"default\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxODA3Nw==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539518077", "bodyText": "still PXF_BASE, no ?", "author": "denalex", "createdAt": "2020-12-09T17:48:27Z", "path": "server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java", "diffHunk": "@@ -118,26 +230,62 @@ public void setRequestType(RequestType requestType) {\n      */\n     private ColumnDescriptor recordkeyColumn;\n \n+    /**\n+     * The contents of pxf_remote_service_login set in Greenplum. Should the\n+     * user set it to an empty string this function will return null.\n+     */\n     private String remoteLogin;\n+\n+    /**\n+     * The contents of pxf_remote_service_secret set in Greenplum. Should the\n+     * user set it to an empty string this function will return null.\n+     */\n     private String remoteSecret;\n-    private String resolver;\n+\n+    /**\n+     * The current segment ID in Greenplum.\n+     */\n     private int segmentId;\n+\n+    /**\n+     * The transaction ID for the current Greenplum query.\n+     */\n     private String transactionId;\n+\n     /**\n      * The name of the server to access. The name will be used to build\n-     * a path for the config files (i.e. $PXF_BASE/servers/$serverName/*.xml)\n+     * a path for the config files (i.e. $PXF_CONF/servers/$serverName/*.xml)", "originalCommit": "4efa84d7a70c5b44c34c092c5714cb5ea16a6c9d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzOTc1OA==", "url": "https://github.com/greenplum-db/pxf/pull/515#discussion_r539539758", "bodyText": "good catch, thanks!", "author": "frankgh", "createdAt": "2020-12-09T18:20:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxODA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e4925e0e5864addc1709fa722764df20cb2b7f19", "chunk": "diff --git a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\nindex 9c3dfc5d..f7e706ba 100644\n--- a/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n+++ b/server/pxf-api/src/main/java/org/greenplum/pxf/api/model/RequestContext.java\n\n@@ -254,7 +254,7 @@ public class RequestContext {\n \n     /**\n      * The name of the server to access. The name will be used to build\n-     * a path for the config files (i.e. $PXF_CONF/servers/$serverName/*.xml)\n+     * a path for the config files (i.e. $PXF_BASE/servers/$serverName/*.xml)\n      */\n     @Setter(AccessLevel.NONE)\n     private String serverName = \"default\";\n"}}, {"oid": "e4925e0e5864addc1709fa722764df20cb2b7f19", "url": "https://github.com/greenplum-db/pxf/commit/e4925e0e5864addc1709fa722764df20cb2b7f19", "message": "Address PR feedback", "committedDate": "2020-12-09T18:21:08Z", "type": "commit"}, {"oid": "b2185f8af710c25281ae10e14d1691d77f7de868", "url": "https://github.com/greenplum-db/pxf/commit/b2185f8af710c25281ae10e14d1691d77f7de868", "message": "Also apply ET change to FDW", "committedDate": "2020-12-09T18:35:52Z", "type": "commit"}]}