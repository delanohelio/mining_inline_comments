{"pr_number": 378, "pr_title": "Improve error message display by leveraging Spring Boot JSON errors", "pr_createdAt": "2020-06-10T15:13:44Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/378", "timeline": [{"oid": "eefe6b3b04345fd5351a1c1255a4d2b95e6de607", "url": "https://github.com/greenplum-db/pxf/commit/eefe6b3b04345fd5351a1c1255a4d2b95e6de607", "message": "Improve error message display by leveraging Spring Boot JSON errors\n\nSpring Boot provides JSON error messages by default, that are easier to\nparse on the PXF C-client. We add support for Spring Boot error\nmessages, and enhance error messages with error HINTs provided to the\nend user. This also gave us the opportunity to improve some of the error\nmessages and enhance them with useful hints.\n\nThis commit also fixes automation tests that have been neglected for a\nwhile, but now there's only 1 test that is failing 50% of the time\n(which we will address later). The failing test is\n`HdfsReadableTextTest.limit` which seems to be related to the fact that\nwe are doing limit.\n\nThis commit also makes sure that the TaskExecutorPool is correctly\nconfigured and is properly hooked to the ShutdownHook. Before this fix,\nthe application would take a long time to shutdown because of running\nthreads.\n\nAlso, we improve the doAs call. It turns out that for the Bridge\ncreation we also need to perform a doAs, this is specially critical in\na keberized environment.\n\nAs part of fixing the automation tests, we have started adding\ntransitive dependencies that were neglected for a while. We also make\nsure that they do not bring transitives themselves by marking them with\n`{ transitive = false }`.\n\nCo-authored-by: Francisco Guerrero <aguerrero@pivotal.io>\nCo-authored-by: Alexander Denissov <adenissov@pivotal.io>\nCo-authored-by: Lisa Owen <lowen@pivotal.io>", "committedDate": "2020-06-10T15:00:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MzgzOA==", "url": "https://github.com/greenplum-db/pxf/pull/378#discussion_r442973838", "bodyText": "this will share the pool within the application. so this is not what we intended to do", "author": "frankgh", "createdAt": "2020-06-19T17:53:15Z", "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/PxfConfiguration.java", "diffHunk": "@@ -48,11 +45,22 @@ public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n         builder = builder.awaitTermination(shutdown.isAwaitTermination());\n         builder = builder.awaitTerminationPeriod(shutdown.getAwaitTerminationPeriod());\n         builder = builder.threadNamePrefix(properties.getThreadNamePrefix());\n+        builder = builder.customizers(taskExecutorCustomizers.orderedStream()::iterator);\n+        builder = builder.taskDecorator(taskDecorator.getIfUnique());\n+        return builder;\n+    }\n \n-        ThreadPoolTaskExecutor taskExecutor = builder.build(PxfThreadPoolTaskExecutor.class);\n-\n-        taskExecutor.initialize();\n-        configurer.setTaskExecutor(taskExecutor);\n-\n+    /**\n+     * Builds the {@link ThreadPoolTaskExecutor} that has previously been\n+     * configured\n+     *\n+     * @param builder the {@link TaskExecutorBuilder} object\n+     * @return the {@link ThreadPoolTaskExecutor} that has previously been configured\n+     */\n+    @Lazy\n+    @Bean(name = {APPLICATION_TASK_EXECUTOR_BEAN_NAME,", "originalCommit": "eefe6b3b04345fd5351a1c1255a4d2b95e6de607", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEyMzQzMg==", "url": "https://github.com/greenplum-db/pxf/pull/378#discussion_r445123432", "bodyText": "fixed", "author": "frankgh", "createdAt": "2020-06-24T19:32:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MzgzOA=="}], "type": "inlineReview", "revised_code": null}]}