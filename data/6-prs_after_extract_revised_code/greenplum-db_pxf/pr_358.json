{"pr_number": 358, "pr_title": "Fix Glob Patterns for Hadoop-Compatible FileSystems", "pr_createdAt": "2020-05-15T16:27:51Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/358", "timeline": [{"oid": "db1e04bb9c0ce7285c4176089eaeacaff915eb93", "url": "https://github.com/greenplum-db/pxf/commit/db1e04bb9c0ce7285c4176089eaeacaff915eb93", "message": "Fix Glob Patterns for Hadoop-Compatible FileSystems\n\n- Added unit tests\n- Added integration tests that test the following:\n\n| Pattern        | Description                                                                                                                                                    |\n|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ?              | Matches any single character                                                                                                                                   |\n| *              | Matches zero or more characters                                                                                                                                |\n| [abc]          | Matches a single character from character set {a,b,c}.                                                                                                         |\n| [a-b]          | Matches a single character from the character range {a\u2026b}.                                                                                                     |\n| [^a]           | Matches a single character that is not from character set or range {a}. Note that the \u201c^\u201dcharacter must occur immediately to the right of the opening bracket. |\n| \\c             | Removes (escapes) any special meaning of character c.                                                                                                          |\n| {ab,cd}        | Matches a string from the string set {ab, cd}.                                                                                                                 |\n| {ab,c{de, fh}} | Matches a string from the string set {ab, cde, cfh}.                                                                                                           |", "committedDate": "2020-05-15T16:51:47Z", "type": "forcePushed"}, {"oid": "6eea6456edd1a8403bdd9aeed40df09c79c4217a", "url": "https://github.com/greenplum-db/pxf/commit/6eea6456edd1a8403bdd9aeed40df09c79c4217a", "message": "Use collate for consistent output between OSX and linux", "committedDate": "2020-05-15T22:06:43Z", "type": "forcePushed"}, {"oid": "69bc3641cc3e82a8b0a088e104cc8dd91cbf55e9", "url": "https://github.com/greenplum-db/pxf/commit/69bc3641cc3e82a8b0a088e104cc8dd91cbf55e9", "message": "Fix expected error message on cloud", "committedDate": "2020-05-15T23:07:41Z", "type": "forcePushed"}, {"oid": "4123bfe8c3fb2c8f8d7ba22dab26d18fccb68599", "url": "https://github.com/greenplum-db/pxf/commit/4123bfe8c3fb2c8f8d7ba22dab26d18fccb68599", "message": "Fix expected error message on cloud", "committedDate": "2020-05-15T23:46:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyMjc4MQ==", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428922781", "bodyText": "nice test, would be good to also see smith starting with a slash /foo/bar and variations", "author": "denalex", "createdAt": "2020-05-21T21:23:55Z", "path": "server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java", "diffHunk": "@@ -413,4 +413,48 @@ public void testSecurityIsEnabledWithKerberosAuthentication() {\n         configuration.set(\"hadoop.security.authentication\", \"kerberos\");\n         assertTrue(Utilities.isSecurityEnabled(configuration));\n     }\n+\n+    @Test\n+    public void testGetHost() {\n+\n+        assertNull(Utilities.getHost(null));\n+        assertNull(Utilities.getHost(\"\"));\n+        assertNull(Utilities.getHost(\"  \"));\n+        assertNull(Utilities.getHost(\":\"));\n+        assertNull(Utilities.getHost(\"#\"));\n+        assertNull(Utilities.getHost(\"/\"));\n+\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"https://www.google.com/\"));\n+        assertEquals(\"www.google.com\", Utilities.getHost(\"http://www.google.com/\"));\n+\n+        assertEquals(\"www.blog.classroom.me.uk\", Utilities.getHost(\"http://www.blog.classroom.me.uk/index.php\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"http://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"https://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"www.youtube.com\", Utilities.getHost(\"www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"ftp.websitename.com\", Utilities.getHost(\"ftps://ftp.websitename.com/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"websitename.com\", Utilities.getHost(\"ftps://websitename.com:1234/dir/file.txt\"));\n+        assertEquals(\"example.com\", Utilities.getHost(\"example.com?param=value\"));\n+        assertEquals(\"facebook.github.io\", Utilities.getHost(\"https://facebook.github.io/jest/\"));\n+        assertEquals(\"youtube.com\", Utilities.getHost(\"//youtube.com/watch?v=ClkQA2Lb_iE\"));\n+        assertEquals(\"localhost\", Utilities.getHost(\"http://localhost:4200/watch?v=ClkQA2Lb_iE\"));\n+\n+        assertEquals(\"127.0.0.1\", Utilities.getHost(\"hdfs://127.0.0.1:8020\"));\n+        assertEquals(\"my-bucket\", Utilities.getHost(\"s3a://my-bucket/foo/ba[rc]\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"s3://foo/bar.txt\"));\n+        assertEquals(\"foo.azuredatalakestore.net\", Utilities.getHost(\"adl://foo.azuredatalakestore.net/foo/bar.txt\"));\n+        assertEquals(\"foo\", Utilities.getHost(\"xyz://foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"xyz://0.0.0.0:80/foo/bar.txt\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"xyz://abc/foo/bar.txt\"));\n+        assertNull(Utilities.getHost(\"file:///foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020\"));\n+        assertEquals(\"abc\", Utilities.getHost(\"hdfs://abc:8020/foo/bar.txt\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020/tmp/issues/172848577/[a-b].csv\"));\n+\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0#anchor\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0/p\"));\n+        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0?PROFILE=foo\"));\n+        assertEquals(\"www.example.com\", Utilities.getHost(\"www.example.com\"));\n+        assertEquals(\"10.0.0.15\", Utilities.getHost(\"10.0.0.15\"));", "originalCommit": "62cda9291f992f9d71dd612f0b79915952a171b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMTM5Ng==", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428931396", "bodyText": "I just added one like that! Oliver also pointed it out.", "author": "frankgh", "createdAt": "2020-05-21T21:40:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyMjc4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b4353abaa6bdef68644583bf32cab35c106c0ef2", "chunk": "diff --git a/server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java b/server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java\nindex 6e178672c..74a5106e5 100644\n--- a/server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java\n+++ b/server/pxf-api/src/test/java/org/greenplum/pxf/api/utilities/UtilitiesTest.java\n\n@@ -413,48 +413,4 @@ public class UtilitiesTest {\n         configuration.set(\"hadoop.security.authentication\", \"kerberos\");\n         assertTrue(Utilities.isSecurityEnabled(configuration));\n     }\n-\n-    @Test\n-    public void testGetHost() {\n-\n-        assertNull(Utilities.getHost(null));\n-        assertNull(Utilities.getHost(\"\"));\n-        assertNull(Utilities.getHost(\"  \"));\n-        assertNull(Utilities.getHost(\":\"));\n-        assertNull(Utilities.getHost(\"#\"));\n-        assertNull(Utilities.getHost(\"/\"));\n-\n-        assertEquals(\"www.google.com\", Utilities.getHost(\"https://www.google.com/\"));\n-        assertEquals(\"www.google.com\", Utilities.getHost(\"http://www.google.com/\"));\n-\n-        assertEquals(\"www.blog.classroom.me.uk\", Utilities.getHost(\"http://www.blog.classroom.me.uk/index.php\"));\n-        assertEquals(\"www.youtube.com\", Utilities.getHost(\"http://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n-        assertEquals(\"www.youtube.com\", Utilities.getHost(\"https://www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n-        assertEquals(\"www.youtube.com\", Utilities.getHost(\"www.youtube.com/watch?v=ClkQA2Lb_iE\"));\n-        assertEquals(\"ftp.websitename.com\", Utilities.getHost(\"ftps://ftp.websitename.com/dir/file.txt\"));\n-        assertEquals(\"websitename.com\", Utilities.getHost(\"websitename.com:1234/dir/file.txt\"));\n-        assertEquals(\"websitename.com\", Utilities.getHost(\"ftps://websitename.com:1234/dir/file.txt\"));\n-        assertEquals(\"example.com\", Utilities.getHost(\"example.com?param=value\"));\n-        assertEquals(\"facebook.github.io\", Utilities.getHost(\"https://facebook.github.io/jest/\"));\n-        assertEquals(\"youtube.com\", Utilities.getHost(\"//youtube.com/watch?v=ClkQA2Lb_iE\"));\n-        assertEquals(\"localhost\", Utilities.getHost(\"http://localhost:4200/watch?v=ClkQA2Lb_iE\"));\n-\n-        assertEquals(\"127.0.0.1\", Utilities.getHost(\"hdfs://127.0.0.1:8020\"));\n-        assertEquals(\"my-bucket\", Utilities.getHost(\"s3a://my-bucket/foo/ba[rc]\"));\n-        assertEquals(\"foo\", Utilities.getHost(\"s3://foo/bar.txt\"));\n-        assertEquals(\"foo.azuredatalakestore.net\", Utilities.getHost(\"adl://foo.azuredatalakestore.net/foo/bar.txt\"));\n-        assertEquals(\"foo\", Utilities.getHost(\"xyz://foo/bar.txt\"));\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"xyz://0.0.0.0:80/foo/bar.txt\"));\n-        assertEquals(\"abc\", Utilities.getHost(\"xyz://abc/foo/bar.txt\"));\n-        assertNull(Utilities.getHost(\"file:///foo/bar.txt\"));\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020\"));\n-        assertEquals(\"abc\", Utilities.getHost(\"hdfs://abc:8020/foo/bar.txt\"));\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0:8020/tmp/issues/172848577/[a-b].csv\"));\n-\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0#anchor\"));\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0/p\"));\n-        assertEquals(\"0.0.0.0\", Utilities.getHost(\"hdfs://0.0.0.0?PROFILE=foo\"));\n-        assertEquals(\"www.example.com\", Utilities.getHost(\"www.example.com\"));\n-        assertEquals(\"10.0.0.15\", Utilities.getHost(\"10.0.0.15\"));\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQyNg==", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428924426", "bodyText": "I would like to preserve the comment on why we are finding the hostname in the first place", "author": "denalex", "createdAt": "2020-05-21T21:27:04Z", "path": "server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java", "diffHunk": "@@ -235,15 +233,12 @@ protected String getDataUriForPrefix(Configuration configuration, String dataSou\n      * @param configuration configuration used for HCFS operations\n      */\n     protected void disableSecureTokenRenewal(String uri, Configuration configuration) {\n-        if (Utilities.isSecurityEnabled(configuration))\n+        if (Utilities.isSecurityEnabled(configuration) || StringUtils.isBlank(uri))\n             return;\n \n-        // find the \"host\" that TokenCache will check against the exclusion list, for cloud file systems (like S3)\n-        // it might actually be a bucket in the full resource path\n-        String host = URI.create(StringUtils.replace(uri, \" \", \"%20\")).getHost();\n-        // String host = URI.create(uri).getHost();\n-        LOG.debug(\"Disabling token renewal for host {} for path {}\", host, uri);\n+        String host = Utilities.getHost(uri);", "originalCommit": "62cda9291f992f9d71dd612f0b79915952a171b3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMTUwOA==", "url": "https://github.com/greenplum-db/pxf/pull/358#discussion_r428931508", "bodyText": "good catch. Didn't mean to remove it", "author": "frankgh", "createdAt": "2020-05-21T21:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b4353abaa6bdef68644583bf32cab35c106c0ef2", "chunk": "diff --git a/server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java b/server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java\nindex 1ba5cd116..097f2aa49 100644\n--- a/server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java\n+++ b/server/pxf-hdfs/src/main/java/org/greenplum/pxf/plugins/hdfs/HcfsType.java\n\n@@ -233,10 +240,18 @@ public enum HcfsType {\n      * @param configuration configuration used for HCFS operations\n      */\n     protected void disableSecureTokenRenewal(String uri, Configuration configuration) {\n-        if (Utilities.isSecurityEnabled(configuration) || StringUtils.isBlank(uri))\n+        if (Utilities.isSecurityEnabled(configuration))\n             return;\n \n-        String host = Utilities.getHost(uri);\n+        String host = null;\n+        try {\n+            // find the \"host\" that TokenCache will check against the exclusion\n+            // list, for cloud file systems (like S3) it might actually be a\n+            // bucket in the full resource path\n+            host = URI.create(StringUtils.replace(uri, \" \", \"%20\")).getHost();\n+        } catch (IllegalArgumentException e) {\n+            LOG.error(String.format(\"Unable to create URI from string '%s'\", uri), e);\n+        }\n         if (host != null) {\n             LOG.debug(\"Disabling token renewal for host {} for path {}\", host, uri);\n             // disable token renewal for the \"host\" in the path\n"}}, {"oid": "b4353abaa6bdef68644583bf32cab35c106c0ef2", "url": "https://github.com/greenplum-db/pxf/commit/b4353abaa6bdef68644583bf32cab35c106c0ef2", "message": "Fix Glob Patterns for Hadoop-Compatible FileSystems\n\n- Added unit tests\n- Added integration tests that test the following:\n\n| Pattern        | Description                                                                                                                                                    |\n|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ?              | Matches any single character                                                                                                                                   |\n| *              | Matches zero or more characters                                                                                                                                |\n| [abc]          | Matches a single character from character set {a,b,c}.                                                                                                         |\n| [a-b]          | Matches a single character from the character range {a\u2026b}.                                                                                                     |\n| [^a]           | Matches a single character that is not from character set or range {a}. Note that the \u201c^\u201dcharacter must occur immediately to the right of the opening bracket. |\n| \\c             | Removes (escapes) any special meaning of character c.                                                                                                          |\n| {ab,cd}        | Matches a string from the string set {ab, cd}.                                                                                                                 |\n| {ab,c{de, fh}} | Matches a string from the string set {ab, cde, cfh}.                                                                                                           |", "committedDate": "2020-05-22T02:05:49Z", "type": "commit"}, {"oid": "e654e0422fa888cd11614e23fb77387261e10137", "url": "https://github.com/greenplum-db/pxf/commit/e654e0422fa888cd11614e23fb77387261e10137", "message": "Skip if URI is blank", "committedDate": "2020-05-22T02:05:49Z", "type": "commit"}, {"oid": "c8a7d600304667f454fc6f988b4a7451338837a1", "url": "https://github.com/greenplum-db/pxf/commit/c8a7d600304667f454fc6f988b4a7451338837a1", "message": "Fix imports", "committedDate": "2020-05-22T02:05:49Z", "type": "commit"}, {"oid": "a6adb6ea3f557ba247b6567151fc3ce3f63bc777", "url": "https://github.com/greenplum-db/pxf/commit/a6adb6ea3f557ba247b6567151fc3ce3f63bc777", "message": "Implement getHost ourselves to support invalid chars in URI (i.e. [)", "committedDate": "2020-05-22T02:05:49Z", "type": "commit"}, {"oid": "2ea4a71368b284dfcffe0b7cb23ded362e5ca14d", "url": "https://github.com/greenplum-db/pxf/commit/2ea4a71368b284dfcffe0b7cb23ded362e5ca14d", "message": "Fix automation tests", "committedDate": "2020-05-22T02:05:50Z", "type": "commit"}, {"oid": "7839745a2fb5a4c09f4efa90bf3cc5775cf93655", "url": "https://github.com/greenplum-db/pxf/commit/7839745a2fb5a4c09f4efa90bf3cc5775cf93655", "message": "Use collate for consistent output between OSX and linux", "committedDate": "2020-05-22T02:05:50Z", "type": "commit"}, {"oid": "1023c831e466de6a719ddbcb6eec0093ee85c0a1", "url": "https://github.com/greenplum-db/pxf/commit/1023c831e466de6a719ddbcb6eec0093ee85c0a1", "message": "Fix expected error message on cloud", "committedDate": "2020-05-22T02:05:50Z", "type": "commit"}, {"oid": "890a3c76c19314da46908edb48c97009a68461cd", "url": "https://github.com/greenplum-db/pxf/commit/890a3c76c19314da46908edb48c97009a68461cd", "message": "Collate one more", "committedDate": "2020-05-22T02:05:50Z", "type": "commit"}, {"oid": "98b3dc5043ddc5e299038eaad439712ef0a5d6e3", "url": "https://github.com/greenplum-db/pxf/commit/98b3dc5043ddc5e299038eaad439712ef0a5d6e3", "message": "Address PR feedback", "committedDate": "2020-05-22T02:05:50Z", "type": "commit"}, {"oid": "98b3dc5043ddc5e299038eaad439712ef0a5d6e3", "url": "https://github.com/greenplum-db/pxf/commit/98b3dc5043ddc5e299038eaad439712ef0a5d6e3", "message": "Address PR feedback", "committedDate": "2020-05-22T02:05:50Z", "type": "forcePushed"}]}