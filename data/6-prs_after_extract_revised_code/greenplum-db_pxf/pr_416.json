{"pr_number": 416, "pr_title": "Fix performance issues when writing wide CSV/TEXT rows", "pr_createdAt": "2020-08-05T16:18:42Z", "pr_url": "https://github.com/greenplum-db/pxf/pull/416", "timeline": [{"oid": "5ae9d8261b698ecacf1f7339d0a3265fae3b50b5", "url": "https://github.com/greenplum-db/pxf/commit/5ae9d8261b698ecacf1f7339d0a3265fae3b50b5", "message": "Fix performance issues when writing wide CSV/TEXT rows\n\nDuring writing of wide CSV/TEXT rows (1MB+/row) PXF performance would be\ngreatly degraded. The performance degradation occurs at\norg.greenplum.pxf.api.io.Text#setCapacity. Once the original buffer size\nwas exceeded, the setCapacity call would increase the buffer size by 1\nand perform a copy of bytes. This became extremely slow when writing\nwide rows because org.greenplum.pxf.api.io.Text would consume from the\nbuffer until it encountered a line break delimiter (\\n). In this commit,\nwe delay consuming from the InputStream until the writing to HCFS\noccurs, we consume the InputStream during write. The downside of this\napproach is that we don't report the number of tuples written to the\nexternal system correctly anymore, as we will always report a single\ntuple written.", "committedDate": "2020-08-05T10:13:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwNDEwOQ==", "url": "https://github.com/greenplum-db/pxf/pull/416#discussion_r466104109", "bodyText": "being inside this if means external table was defined with FORMAT \"TEXT\" or \"CSV\", not that the actual profile will be:text, right ? Maybe coincidentally this is only used for :text profiles, but considering we were thinking of getting rid of gpdb_writable I think in the longer term we need to be more selective here and look at the actual profile or resolver to be used.", "author": "denalex", "createdAt": "2020-08-06T02:11:25Z", "path": "server/pxf-service/src/main/java/org/greenplum/pxf/service/BridgeInputBuilder.java", "diffHunk": "@@ -45,9 +44,16 @@ public BridgeInputBuilder(RequestContext protocolData) {\n \n     public List<OneField> makeInput(DataInput inputStream) throws Exception {\n         if (protocolData.getOutputFormat() == OutputFormat.TEXT) {\n-            Text txt = new Text();\n-            txt.readFields(inputStream);\n-            return Collections.singletonList(new OneField(DataType.BYTEA.getOID(), txt.getBytes()));\n+            // Avoid copying the bytes from the inputStream directly. This", "originalCommit": "5ae9d8261b698ecacf1f7339d0a3265fae3b50b5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2MjEzMg==", "url": "https://github.com/greenplum-db/pxf/pull/416#discussion_r468262132", "bodyText": "being inside this if means external table was defined with FORMAT \"TEXT\" or \"CSV\", not that the actual profile will be:text, right ?\n\nThat is correct\n\nMaybe coincidentally this is only used for :text profiles, but considering we were thinking of getting rid of gpdb_writable I think in the longer term we need to be more selective here and look at the actual profile or resolver to be used.\n\nThe last decision during the rewrite was to keep some binary format, because we did see a performance gain when doing binary vs text, even though we had in the past done some comparisons that indicated otherwise. And that was only for the read case, we still need to define what we'll do about the write case", "author": "frankgh", "createdAt": "2020-08-11T00:42:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjEwNDEwOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "3dc4a998f608ece061a3d8bfb80690243b09a89e", "url": "https://github.com/greenplum-db/pxf/commit/3dc4a998f608ece061a3d8bfb80690243b09a89e", "message": "Increase default connection timeout from 20 seconds to 5 minutes", "committedDate": "2020-08-07T20:10:14Z", "type": "commit"}, {"oid": "774626cb4c96cfb908d70d6657d83a4c208b62cc", "url": "https://github.com/greenplum-db/pxf/commit/774626cb4c96cfb908d70d6657d83a4c208b62cc", "message": "Add tests with wide rows", "committedDate": "2020-08-08T14:30:43Z", "type": "commit"}, {"oid": "4f8c43cd9780a45e33c8223aeb7b4e85621bf6dc", "url": "https://github.com/greenplum-db/pxf/commit/4f8c43cd9780a45e33c8223aeb7b4e85621bf6dc", "message": "fixup! Add tests with wide rows", "committedDate": "2020-08-08T14:44:24Z", "type": "commit"}, {"oid": "b7288378c82a609809cbe7f0cfc521e3b98e40f8", "url": "https://github.com/greenplum-db/pxf/commit/b7288378c82a609809cbe7f0cfc521e3b98e40f8", "message": "fixup! Add tests with wide rows", "committedDate": "2020-08-08T23:25:36Z", "type": "commit"}, {"oid": "b7288378c82a609809cbe7f0cfc521e3b98e40f8", "url": "https://github.com/greenplum-db/pxf/commit/b7288378c82a609809cbe7f0cfc521e3b98e40f8", "message": "fixup! Add tests with wide rows", "committedDate": "2020-08-08T23:25:36Z", "type": "forcePushed"}]}