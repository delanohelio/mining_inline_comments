{"pr_number": 692, "pr_title": "CXF-8227: Failure to comply with JAX-RS spec with ContainerRequestContext and WriterInterceptorContext", "pr_createdAt": "2020-09-09T01:48:12Z", "pr_url": "https://github.com/apache/cxf/pull/692", "timeline": [{"oid": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "url": "https://github.com/apache/cxf/commit/3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "message": "CXF-8227: Failure to comply with JAX-RS spec with ContainerRequestContext and WriterInterceptorContext", "committedDate": "2020-09-09T01:41:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxMDU5OA==", "url": "https://github.com/apache/cxf/pull/692#discussion_r485710598", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private HttpServletRequest request;\n          \n          \n            \n                    private final HttpServletRequest request;\n          \n      \n    \n    \n  \n\nit looks like this is not intended to be changed, so we could explicitly mark it as final.", "author": "andymc12", "createdAt": "2020-09-09T15:39:01Z", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java", "diffHunk": "@@ -41,6 +46,60 @@ public static PropertyHolder getPropertyHolder(Message m) {\n         void setProperty(String name, Object value);\n         Collection<String> getPropertyNames();\n     }\n+    \n+    private static class ServletRequestPropertyHolder extends MessagePropertyHolder {\n+        private static final String ENDPOINT_ADDRESS_PROPERTY = \"org.apache.cxf.transport.endpoint.address\";\n+        private HttpServletRequest request;", "originalCommit": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0MzYxNw==", "url": "https://github.com/apache/cxf/pull/692#discussion_r485943617", "bodyText": "\ud83d\udc4d correct, thank you!", "author": "reta", "createdAt": "2020-09-09T21:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxMDU5OA=="}], "type": "inlineReview", "revised_code": {"commit": "4e73867cc862983e64cc50dd1650ae031588090b", "chunk": "diff --git a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java\nindex 0a771e8055..052eb488c7 100644\n--- a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java\n+++ b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/PropertyHolderFactory.java\n\n@@ -49,7 +49,7 @@ public final class PropertyHolderFactory {\n     \n     private static class ServletRequestPropertyHolder extends MessagePropertyHolder {\n         private static final String ENDPOINT_ADDRESS_PROPERTY = \"org.apache.cxf.transport.endpoint.address\";\n-        private HttpServletRequest request;\n+        private final HttpServletRequest request;\n         \n         ServletRequestPropertyHolder(Message m) {\n             super(m);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNDk1MQ==", "url": "https://github.com/apache/cxf/pull/692#discussion_r485714951", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Header\", property);\n          \n          \n            \n                            context.getHeaders().putSingle(\"X-Book-Response-Header\", property);\n          \n      \n    \n    \n  \n\nJust a suggestion, but IIUC, the intent is to show that property set from the request filter is propagated to the writer interceptor (in the response flow).  By using a different header in the response, it makes it clear that the test is not just propagating headers from the request back to the response.", "author": "andymc12", "createdAt": "2020-09-09T15:44:54Z", "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java", "diffHunk": "@@ -106,6 +106,12 @@ public void setDefaultId(List<String> ids) {\n         public void aroundWriteTo(WriterInterceptorContext context) throws IOException,\n             WebApplicationException {\n             context.getHeaders().putSingle(\"BookWriter\", \"TheBook\");\n+            \n+            final Object property = context.getProperty(\"x-book\");\n+            if (property != null) {\n+                context.getHeaders().putSingle(\"X-Book-Header\", property);", "originalCommit": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk2NDQwNw==", "url": "https://github.com/apache/cxf/pull/692#discussion_r485964407", "bodyText": "Completely agree, rewrote the test to reflect its purpose, thanks a lot!", "author": "reta", "createdAt": "2020-09-09T22:51:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNDk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4e73867cc862983e64cc50dd1650ae031588090b", "chunk": "diff --git a/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java b/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java\nindex 4039940459..04659169b7 100644\n--- a/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java\n+++ b/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/BookApplication.java\n\n@@ -107,9 +107,9 @@ public class BookApplication extends Application {\n             WebApplicationException {\n             context.getHeaders().putSingle(\"BookWriter\", \"TheBook\");\n             \n-            final Object property = context.getProperty(\"x-book\");\n+            final Object property = context.getProperty(\"property\");\n             if (property != null) {\n-                context.getHeaders().putSingle(\"X-Book-Header\", property);\n+                context.getHeaders().putSingle(\"X-Property-WriterInterceptor\", property);\n             }\n             \n             context.proceed();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNTMwNQ==", "url": "https://github.com/apache/cxf/pull/692#discussion_r485715305", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));\n          \n          \n            \n                    assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Response-Header\"));\n          \n      \n    \n    \n  \n\nsee previous comment", "author": "andymc12", "createdAt": "2020-09-09T15:45:23Z", "path": "systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java", "diffHunk": "@@ -186,17 +186,33 @@ public void testGetBook123Application11PerRequest() throws Exception {\n             doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\");\n         assertEquals(\"TheBook\", r.getHeaderString(\"BookWriter\"));\n     }\n+    \n+    @Test\n+    public void testGetBook123Application11PerRequestWithHeader() throws Exception {\n+        Response r = \n+            doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\", \n+                \"PropValue\");\n+        assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));", "originalCommit": "3caeb643068ee6a9cafb849deee6bd7bc67f2ed9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4e73867cc862983e64cc50dd1650ae031588090b", "chunk": "diff --git a/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java b/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java\nindex f456ba3ee2..619200077d 100644\n--- a/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java\n+++ b/systests/jaxrs/src/test/java/org/apache/cxf/systest/jaxrs/JAXRSClientServerNonSpringBookTest.java\n\n@@ -188,11 +190,11 @@ public class JAXRSClientServerNonSpringBookTest extends AbstractBusClientServerT\n     }\n     \n     @Test\n-    public void testGetBook123Application11PerRequestWithHeader() throws Exception {\n+    public void testGetBook123PropagatingContextPropertyToWriterInterceptor() throws Exception {\n         Response r = \n-            doTestPerRequest(\"http://localhost:\" + PORT + \"/application11/thebooks/bookstore2/bookheaders\", \n-                \"PropValue\");\n-        assertEquals(\"PropValue\", r.getHeaderString(\"X-Book-Header\"));\n+            doTestPerRequest(\"http://localhost:\" + PORT + \"/application6/thebooks/bookstore2/bookheaders\",\n+                new SimpleEntry<>(\"property\", \"PropValue\"));\n+        assertEquals(\"PropValue\", r.getHeaderString(\"X-Property-WriterInterceptor\"));\n     }\n \n \n"}}, {"oid": "4e73867cc862983e64cc50dd1650ae031588090b", "url": "https://github.com/apache/cxf/commit/4e73867cc862983e64cc50dd1650ae031588090b", "message": "Addressing review comments", "committedDate": "2020-09-09T23:34:52Z", "type": "commit"}]}