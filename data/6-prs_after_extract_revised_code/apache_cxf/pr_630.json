{"pr_number": 630, "pr_title": "CXF-8201 add additional check for file scheme in setUriParts", "pr_createdAt": "2020-01-24T12:03:20Z", "pr_url": "https://github.com/apache/cxf/pull/630", "timeline": [{"oid": "b4f248e2ee0af94b9265aa21f73aaa69855d062b", "url": "https://github.com/apache/cxf/commit/b4f248e2ee0af94b9265aa21f73aaa69855d062b", "message": "Adding unit test", "committedDate": "2020-01-23T11:58:36Z", "type": "commit"}, {"oid": "6ab792a48795df552190128eecfe28d366b51f7a", "url": "https://github.com/apache/cxf/commit/6ab792a48795df552190128eecfe28d366b51f7a", "message": "Merge remote-tracking branch 'apache/master' into uribuilderimpltest", "committedDate": "2020-01-24T11:20:14Z", "type": "commit"}, {"oid": "9059a7eaa8d95a5e7b64bb7a84816d29151e01ee", "url": "https://github.com/apache/cxf/commit/9059a7eaa8d95a5e7b64bb7a84816d29151e01ee", "message": "CXF-8201 additional check for file scheme to enable appending paths to file URIs.", "committedDate": "2020-01-24T11:24:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxMTk2Ng==", "url": "https://github.com/apache/cxf/pull/630#discussion_r370911966", "bodyText": "Hi @jgallimore, thanks for the PR. I think CXF should not assume any intrinsic knowledge about the URI scheme and handle it in a specific way. For example,  what about handling jar:file? Or any other custom schemes?\nAlthough the reply on spec list (https://www.eclipse.org/lists/jaxrs-dev/msg00774.html) explicitly mentions that JAX-RS context is REST-over-HTTP (the CXF case), we could certainly make UriBuilder more flexible if the general solution could be found.\nHope it makes sense, thank you.", "author": "reta", "createdAt": "2020-01-25T03:55:27Z", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -651,8 +651,8 @@ private void setUriParts(URI uri) {\n         } else {\n             schemeSpecificPart = uri.getSchemeSpecificPart();\n         }\n-        if (scheme != null && host == null && (query == null || query.isEmpty()) && userInfo == null\n-            && uri.getSchemeSpecificPart() != null) {\n+        if (scheme != null && !\"file\".equalsIgnoreCase(scheme) && host == null && (query == null || query.isEmpty())", "originalCommit": "9059a7eaa8d95a5e7b64bb7a84816d29151e01ee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "70c056a50c79f390f4e777bf717c693adfd5b124", "chunk": "diff --git a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\nindex 130a7d3640..d7a298bf12 100644\n--- a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n+++ b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n\n@@ -651,8 +651,9 @@ public class UriBuilderImpl extends UriBuilder implements Cloneable {\n         } else {\n             schemeSpecificPart = uri.getSchemeSpecificPart();\n         }\n-        if (scheme != null && !\"file\".equalsIgnoreCase(scheme) && host == null && (query == null || query.isEmpty())\n-            && userInfo == null  && uri.getSchemeSpecificPart() != null) {\n+        if (scheme != null && host == null && port == -1\n+                && queryIsEmpty() && !sspMatchessPath(uri) && userInfo == null\n+                && uri.getSchemeSpecificPart() != null) {\n             schemeSpecificPart = uri.getSchemeSpecificPart();\n         }\n         String theFragment = uri.getFragment();\n"}}, {"oid": "5c53951fc42b080d6d1e9d3e0490752715f3a388", "url": "https://github.com/apache/cxf/commit/5c53951fc42b080d6d1e9d3e0490752715f3a388", "message": "Merge Remote-tracking branch 'apache/master' into uribuilderimpltest", "committedDate": "2020-01-27T10:46:29Z", "type": "commit"}, {"oid": "70c056a50c79f390f4e777bf717c693adfd5b124", "url": "https://github.com/apache/cxf/commit/70c056a50c79f390f4e777bf717c693adfd5b124", "message": "CXF-8201 attempting to make this a more generic check", "committedDate": "2020-01-27T13:37:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU3MTgzNA==", "url": "https://github.com/apache/cxf/pull/630#discussion_r371571834", "bodyText": "We have a helper method for it,  CollectionUtils.isEmpty(query) from org.apache.cxf.common.util", "author": "reta", "createdAt": "2020-01-28T01:29:54Z", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();", "originalCommit": "70c056a50c79f390f4e777bf717c693adfd5b124", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "295f1dbccd1db42c228a15d387e652cd96cc9a3d", "chunk": "diff --git a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\nindex d7a298bf12..01531bd25a 100644\n--- a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n+++ b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n\n@@ -662,12 +664,10 @@ public class UriBuilderImpl extends UriBuilder implements Cloneable {\n         }\n     }\n \n-    private boolean queryIsEmpty() {\n-        return query == null || query.isEmpty();\n-    }\n-\n-    private boolean sspMatchessPath(final URI uri) {\n-        return uri.getRawSchemeSpecificPart() != null && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n+    private boolean schemeSpecificPartMatchesUriPath(final URI uri) {\n+        return uri.getRawSchemeSpecificPart() != null\n+                && uri.getPath() != null\n+                && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n     }\n \n     private void setPathAndMatrix(String path) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5NjE5OA==", "url": "https://github.com/apache/cxf/pull/630#discussion_r371596198", "bodyText": "It would be good to check if uri.getPath() is not null, otherwise \"//\" + uri.getPath() becomes something like //null", "author": "reta", "createdAt": "2020-01-28T03:37:06Z", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();\n+    }\n+\n+    private boolean sspMatchessPath(final URI uri) {\n+        return uri.getRawSchemeSpecificPart() != null && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());", "originalCommit": "70c056a50c79f390f4e777bf717c693adfd5b124", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "295f1dbccd1db42c228a15d387e652cd96cc9a3d", "chunk": "diff --git a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\nindex d7a298bf12..01531bd25a 100644\n--- a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n+++ b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n\n@@ -662,12 +664,10 @@ public class UriBuilderImpl extends UriBuilder implements Cloneable {\n         }\n     }\n \n-    private boolean queryIsEmpty() {\n-        return query == null || query.isEmpty();\n-    }\n-\n-    private boolean sspMatchessPath(final URI uri) {\n-        return uri.getRawSchemeSpecificPart() != null && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n+    private boolean schemeSpecificPartMatchesUriPath(final URI uri) {\n+        return uri.getRawSchemeSpecificPart() != null\n+                && uri.getPath() != null\n+                && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n     }\n \n     private void setPathAndMatrix(String path) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5NjM0Ng==", "url": "https://github.com/apache/cxf/pull/630#discussion_r371596346", "bodyText": "Matchess is misspelled, schemeSpecificPartMatchesUriPath would be probably better name (despite being long).", "author": "reta", "createdAt": "2020-01-28T03:38:08Z", "path": "rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java", "diffHunk": "@@ -661,6 +662,14 @@ private void setUriParts(URI uri) {\n         }\n     }\n \n+    private boolean queryIsEmpty() {\n+        return query == null || query.isEmpty();\n+    }\n+\n+    private boolean sspMatchessPath(final URI uri) {", "originalCommit": "70c056a50c79f390f4e777bf717c693adfd5b124", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "295f1dbccd1db42c228a15d387e652cd96cc9a3d", "chunk": "diff --git a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\nindex d7a298bf12..01531bd25a 100644\n--- a/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n+++ b/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/impl/UriBuilderImpl.java\n\n@@ -662,12 +664,10 @@ public class UriBuilderImpl extends UriBuilder implements Cloneable {\n         }\n     }\n \n-    private boolean queryIsEmpty() {\n-        return query == null || query.isEmpty();\n-    }\n-\n-    private boolean sspMatchessPath(final URI uri) {\n-        return uri.getRawSchemeSpecificPart() != null && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n+    private boolean schemeSpecificPartMatchesUriPath(final URI uri) {\n+        return uri.getRawSchemeSpecificPart() != null\n+                && uri.getPath() != null\n+                && uri.getRawSchemeSpecificPart().equals(\"//\" + uri.getPath());\n     }\n \n     private void setPathAndMatrix(String path) {\n"}}, {"oid": "3c7d1caf13c4df6cf5c36b5bc621a80d2c37544b", "url": "https://github.com/apache/cxf/commit/3c7d1caf13c4df6cf5c36b5bc621a80d2c37544b", "message": "Merge remote-tracking branch 'apache/master' into uribuilderimpltest", "committedDate": "2020-01-29T12:23:54Z", "type": "commit"}, {"oid": "295f1dbccd1db42c228a15d387e652cd96cc9a3d", "url": "https://github.com/apache/cxf/commit/295f1dbccd1db42c228a15d387e652cd96cc9a3d", "message": "CXF-8201 incorporate feedback on PR. Use CollectionUtils to check map/collection is empty, null check and better name for checking the scheme specific part against the path.", "committedDate": "2020-01-29T12:43:09Z", "type": "commit"}]}