{"pr_number": 307, "pr_title": "sling servlet suffix utility", "pr_createdAt": "2020-06-04T19:57:28Z", "pr_url": "https://github.com/redhataccess/pantheon/pull/307", "timeline": [{"oid": "ac5e18c19c9e4707477706966a3ed63b76a3fed3", "url": "https://github.com/redhataccess/pantheon/commit/ac5e18c19c9e4707477706966a3ed63b76a3fed3", "message": "introduce the SlingPathSuffix class\n\nThe new class allows for the easy manipulation of sling servlet\nsuffixes, when needed.\nIt should also facilitate the creation of better resource urls\nwithout involving query parameters.", "committedDate": "2020-06-04T17:50:39Z", "type": "commit"}, {"oid": "5777265f68f30d7758a8b9700268eb67f9b6a09a", "url": "https://github.com/redhataccess/pantheon/commit/5777265f68f30d7758a8b9700268eb67f9b6a09a", "message": "add javadocs to SlingPathSuffix", "committedDate": "2020-06-04T19:43:12Z", "type": "commit"}, {"oid": "8d6ca48b04f94127885deaa64796ee6c7a9fc210", "url": "https://github.com/redhataccess/pantheon/commit/8d6ca48b04f94127885deaa64796ee6c7a9fc210", "message": "add additional unit tests", "committedDate": "2020-06-04T19:53:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzNjMzMQ==", "url": "https://github.com/redhataccess/pantheon/pull/307#discussion_r435536331", "bodyText": "do we allow '-' in the sufix pattern?", "author": "xdavidson", "createdAt": "2020-06-04T20:41:21Z", "path": "pantheon-bundle/src/main/java/com/redhat/pantheon/servlet/util/SlingPathSuffix.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package com.redhat.pantheon.servlet.util;\n+\n+import org.apache.sling.api.SlingHttpServletRequest;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * Represents the suffix of a sling url and allows to extract information from it.\n+ * To be used primarily in servlets where suffix information contains input information\n+ * (i.e. parameters).\n+ * <br><br>\n+ *\n+ * Parameters may be extracted like so:\n+ *\n+ * <pre>{@code\n+ * SlingPathSuffix suffix = new SlingPathSuffix(\"/path/with/{param1}/and/{param2}\");\n+ * suffix.getParam(\"param1\", request);\n+ * suffix.getParam(\"param2\", request);\n+ * }</pre>\n+ *\n+ * The suffix needs a template or pattern to be provided in order to be able to extract\n+ * information from it. It may be a completely static pattern or contain placeholders for\n+ * named parameters.\n+ *\n+ * @author Carlos Munoz\n+ */\n+public class SlingPathSuffix {\n+\n+    private static final Pattern PARAMETER_PATTERN = Pattern.compile(\"(\\\\{[a-zA-Z0-9]+})\");", "originalCommit": "8d6ca48b04f94127885deaa64796ee6c7a9fc210", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzOTgwOA==", "url": "https://github.com/redhataccess/pantheon/pull/307#discussion_r435539808", "bodyText": "Yes in the pattern (the url itself). No for the parameter names.", "author": "carlosmunoz", "createdAt": "2020-06-04T20:48:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzNjMzMQ=="}], "type": "inlineReview", "revised_code": null}]}