{"pr_number": 1651, "pr_title": "support inline subworkflow definition", "pr_createdAt": "2020-04-20T20:53:06Z", "pr_url": "https://github.com/Netflix/conductor/pull/1651", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0NDY2NQ==", "url": "https://github.com/Netflix/conductor/pull/1651#discussion_r416944665", "bodyText": "Please add test(s) for getWorkflowDef as we are casting the object to WorkflowDef class.", "author": "kishorebanala", "createdAt": "2020-04-28T21:48:38Z", "path": "common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java", "diffHunk": "@@ -38,4 +39,11 @@ public void testWorkflowSetTaskToDomain() {\n         subWorkflowParams.setTaskToDomain(taskToDomain);\n         assertEquals(taskToDomain, subWorkflowParams.getTaskToDomain());\n     }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void testSetWorkflowDefinition() {\n+        SubWorkflowParams subWorkflowParams = new SubWorkflowParams();//name is null\n+        subWorkflowParams.setName(\"dummy-name\");\n+        subWorkflowParams.setWorkflowDefinition(new Object());\n+    }\n }", "originalCommit": "3229516ae192fe1b821390e622cdcde7bc7e2d13", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc4MTIzNA==", "url": "https://github.com/Netflix/conductor/pull/1651#discussion_r426781234", "bodyText": "Done.", "author": "jun-he", "createdAt": "2020-05-18T17:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0NDY2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "03fdcc9bfcc80b7ac1dea9fdcb08a8b0d37e13f9", "chunk": "diff --git a/common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java b/common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java\nindex 13ae5a92..bbd13cc6 100644\n--- a/common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java\n+++ b/common/src/test/java/com/netflix/conductor/common/workflow/SubWorkflowParamsTest.java\n\n@@ -46,4 +51,76 @@ public class SubWorkflowParamsTest {\n         subWorkflowParams.setName(\"dummy-name\");\n         subWorkflowParams.setWorkflowDefinition(new Object());\n     }\n+\n+    @Test\n+    public void testGetWorkflowDef() {\n+        SubWorkflowParams subWorkflowParams = new SubWorkflowParams();//name is null\n+        subWorkflowParams.setName(\"dummy-name\");\n+        WorkflowDef def = new WorkflowDef();\n+        def.setName(\"test_workflow\");\n+        def.setVersion(1);\n+        WorkflowTask task = new WorkflowTask();\n+        task.setName(\"test_task\");\n+        task.setTaskReferenceName(\"t1\");\n+        def.getTasks().add(task);\n+        subWorkflowParams.setWorkflowDefinition(def);\n+        assertEquals(def, subWorkflowParams.getWorkflowDefinition());\n+        assertEquals(def, subWorkflowParams.getWorkflowDef());\n+    }\n+\n+    @Test\n+    public void testWorkflowDefJson() throws Exception {\n+        SubWorkflowParams subWorkflowParams = new SubWorkflowParams();//name is null\n+        subWorkflowParams.setName(\"dummy-name\");\n+        WorkflowDef def = new WorkflowDef();\n+        def.setName(\"test_workflow\");\n+        def.setVersion(1);\n+        WorkflowTask task = new WorkflowTask();\n+        task.setName(\"test_task\");\n+        task.setTaskReferenceName(\"t1\");\n+        def.getTasks().add(task);\n+        subWorkflowParams.setWorkflowDefinition(def);\n+\n+        String expected = \"{\\n\" +\n+            \"  \\\"name\\\" : \\\"test_workflow\\\",\\n\" +\n+            \"  \\\"version\\\" : 1,\\n\" +\n+            \"  \\\"workflowDefinition\\\" : {\\n\" +\n+            \"    \\\"inputParameters\\\" : [ ],\\n\" +\n+            \"    \\\"name\\\" : \\\"test_workflow\\\",\\n\" +\n+            \"    \\\"outputParameters\\\" : { },\\n\" +\n+            \"    \\\"restartable\\\" : true,\\n\" +\n+            \"    \\\"schemaVersion\\\" : 2,\\n\" +\n+            \"    \\\"tasks\\\" : [ {\\n\" +\n+            \"      \\\"asyncComplete\\\" : false,\\n\" +\n+            \"      \\\"decisionCases\\\" : { },\\n\" +\n+            \"      \\\"defaultCase\\\" : [ ],\\n\" +\n+            \"      \\\"defaultExclusiveJoinTask\\\" : [ ],\\n\" +\n+            \"      \\\"forkTasks\\\" : [ ],\\n\" +\n+            \"      \\\"inputParameters\\\" : { },\\n\" +\n+            \"      \\\"joinOn\\\" : [ ],\\n\" +\n+            \"      \\\"loopOver\\\" : [ ],\\n\" +\n+            \"      \\\"name\\\" : \\\"test_task\\\",\\n\" +\n+            \"      \\\"optional\\\" : false,\\n\" +\n+            \"      \\\"startDelay\\\" : 0,\\n\" +\n+            \"      \\\"taskReferenceName\\\" : \\\"t1\\\",\\n\" +\n+            \"      \\\"type\\\" : \\\"SIMPLE\\\"\\n\" +\n+            \"    } ],\\n\" +\n+            \"    \\\"timeoutPolicy\\\" : \\\"ALERT_ONLY\\\",\\n\" +\n+            \"    \\\"timeoutSeconds\\\" : 0,\\n\" +\n+            \"    \\\"version\\\" : 1,\\n\" +\n+            \"    \\\"workflowStatusListenerEnabled\\\" : false\\n\" +\n+            \"  }\\n\" +\n+            \"}\";\n+        ObjectMapper objectMapper = new JsonMapperProvider().get();\n+        objectMapper.enable(SerializationFeature.INDENT_OUTPUT);\n+        objectMapper.enable(MapperFeature.SORT_PROPERTIES_ALPHABETICALLY);\n+        objectMapper.enable(SerializationFeature.ORDER_MAP_ENTRIES_BY_KEYS);\n+\n+        assertEquals(expected, objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(subWorkflowParams));\n+\n+        SubWorkflowParams actualSubWorkflowParam = objectMapper.readValue(expected, SubWorkflowParams.class);\n+        assertEquals(subWorkflowParams, actualSubWorkflowParam);\n+        assertEquals(def, actualSubWorkflowParam.getWorkflowDefinition());\n+        assertEquals(def, actualSubWorkflowParam.getWorkflowDef());\n+    }\n }\n"}}, {"oid": "03fdcc9bfcc80b7ac1dea9fdcb08a8b0d37e13f9", "url": "https://github.com/Netflix/conductor/commit/03fdcc9bfcc80b7ac1dea9fdcb08a8b0d37e13f9", "message": "Add additional unit tests", "committedDate": "2020-05-18T16:31:48Z", "type": "forcePushed"}, {"oid": "80ed35094ce225cab9d52f8cefe9d03dd61ca078", "url": "https://github.com/Netflix/conductor/commit/80ed35094ce225cab9d52f8cefe9d03dd61ca078", "message": "support inline subworkflow definition", "committedDate": "2020-05-20T00:42:22Z", "type": "commit"}, {"oid": "77d0beb82042d30006cca110b4d2e988ec7a4523", "url": "https://github.com/Netflix/conductor/commit/77d0beb82042d30006cca110b4d2e988ec7a4523", "message": "Add additional unit tests", "committedDate": "2020-05-20T00:42:22Z", "type": "commit"}, {"oid": "83b8d9b8717b9003d98bbe743d01c6bac5b445c0", "url": "https://github.com/Netflix/conductor/commit/83b8d9b8717b9003d98bbe743d01c6bac5b445c0", "message": "lazily initialize objectmapper in subworkflow", "committedDate": "2020-05-20T00:42:22Z", "type": "commit"}, {"oid": "83b8d9b8717b9003d98bbe743d01c6bac5b445c0", "url": "https://github.com/Netflix/conductor/commit/83b8d9b8717b9003d98bbe743d01c6bac5b445c0", "message": "lazily initialize objectmapper in subworkflow", "committedDate": "2020-05-20T00:42:22Z", "type": "forcePushed"}]}