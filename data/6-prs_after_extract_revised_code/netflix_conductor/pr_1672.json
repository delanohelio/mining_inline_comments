{"pr_number": 1672, "pr_title": "Introduced groovy and added ExclusiveJoinTest case to verify the work\u2026", "pr_createdAt": "2020-05-07T00:27:54Z", "pr_url": "https://github.com/Netflix/conductor/pull/1672", "timeline": [{"oid": "d37f20630b9740e1619699e9ccf96a2d4dcc7ea5", "url": "https://github.com/Netflix/conductor/commit/d37f20630b9740e1619699e9ccf96a2d4dcc7ea5", "message": "Introduced groovy and added ExclusiveJoinTest case to verify the workings in the build", "committedDate": "2020-05-07T00:26:17Z", "type": "commit"}, {"oid": "e8b3894b3f70f59320d8d9ac69b5428d8c51ca3d", "url": "https://github.com/Netflix/conductor/commit/e8b3894b3f70f59320d8d9ac69b5428d8c51ca3d", "message": "Added KafkaTaskBasedWorkflowSpec and introduced WorkflowConfigurationSpec", "committedDate": "2020-05-08T16:52:44Z", "type": "commit"}, {"oid": "9e7223b2a4af6c138e4febe06f2cdb3d4b85370f", "url": "https://github.com/Netflix/conductor/commit/9e7223b2a4af6c138e4febe06f2cdb3d4b85370f", "message": "Simple workflow integration test", "committedDate": "2020-05-11T21:13:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5MTAwNw==", "url": "https://github.com/Netflix/conductor/pull/1672#discussion_r423391007", "bodyText": "Nit: Trying to understand what this class does. JavaDoc?", "author": "kishorebanala", "createdAt": "2020-05-12T00:15:42Z", "path": "test-harness/src/test/java/com/netflix/conductor/tests/utils/WorkflowCleanUpUtil.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.netflix.conductor.tests.utils;\n+\n+import com.netflix.conductor.common.run.Workflow;\n+import com.netflix.conductor.core.execution.WorkflowExecutor;\n+import com.netflix.conductor.dao.QueueDAO;\n+import com.netflix.conductor.service.ExecutionService;\n+import com.netflix.conductor.service.MetadataService;\n+import org.apache.commons.lang.StringUtils;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+import java.io.FileOutputStream;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@Singleton\n+public class WorkflowCleanUpUtil {", "originalCommit": "9e7223b2a4af6c138e4febe06f2cdb3d4b85370f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NTcxNg==", "url": "https://github.com/Netflix/conductor/pull/1672#discussion_r424695716", "bodyText": "Moved to another utility class : WorkflowTestUtil and added documentation", "author": "pctreddy", "createdAt": "2020-05-13T19:58:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5MTAwNw=="}], "type": "inlineReview", "revised_code": {"commit": "b3e58729e875870eb72e1b08891eaccf9217dfd7", "chunk": "diff --git a/test-harness/src/test/java/com/netflix/conductor/tests/utils/WorkflowCleanUpUtil.java b/test-harness/src/test/java/com/netflix/conductor/tests/utils/WorkflowCleanUpUtil.java\ndeleted file mode 100644\nindex a9feaeb6..00000000\n--- a/test-harness/src/test/java/com/netflix/conductor/tests/utils/WorkflowCleanUpUtil.java\n+++ /dev/null\n\n@@ -1,54 +0,0 @@\n-package com.netflix.conductor.tests.utils;\n-\n-import com.netflix.conductor.common.run.Workflow;\n-import com.netflix.conductor.core.execution.WorkflowExecutor;\n-import com.netflix.conductor.dao.QueueDAO;\n-import com.netflix.conductor.service.ExecutionService;\n-import com.netflix.conductor.service.MetadataService;\n-import org.apache.commons.lang.StringUtils;\n-\n-import javax.inject.Inject;\n-import javax.inject.Singleton;\n-import java.io.FileOutputStream;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n-@Singleton\n-public class WorkflowCleanUpUtil {\n-\n-    private final MetadataService metadataService;\n-    private final ExecutionService workflowExecutionService;\n-    private final WorkflowExecutor workflowExecutor;\n-    private final QueueDAO queueDAO;\n-\n-    public static final String TEMP_FILE_PATH = \"/input.json\";\n-\n-    @Inject\n-    public WorkflowCleanUpUtil(MetadataService metadataService, ExecutionService workflowExecutionService,\n-                               WorkflowExecutor workflowExecutor, QueueDAO queueDAO) {\n-        this.metadataService = metadataService;\n-        this.workflowExecutionService = workflowExecutionService;\n-        this.workflowExecutor = workflowExecutor;\n-        this.queueDAO = queueDAO;\n-    }\n-\n-    public void clearWorkflows() throws Exception {\n-        List<String> workflowsWithVersion = metadataService.getWorkflowDefs().stream()\n-                .map(def -> def.getName() + \":\" + def.getVersion())\n-                .collect(Collectors.toList());\n-        for (String workflowWithVersion : workflowsWithVersion) {\n-            String workflowName = StringUtils.substringBefore(workflowWithVersion, \":\");\n-            int version = Integer.parseInt(StringUtils.substringAfter(workflowWithVersion, \":\"));\n-            List<String> running = workflowExecutionService.getRunningWorkflows(workflowName, version);\n-            for (String wfid : running) {\n-                Workflow workflow = workflowExecutor.getWorkflow(wfid, false);\n-                if (!workflow.getStatus().isTerminal()) {\n-                    workflowExecutor.terminateWorkflow(wfid, \"cleanup\");\n-                }\n-            }\n-        }\n-        queueDAO.queuesDetail().keySet().forEach(queueDAO::flush);\n-\n-        new FileOutputStream(this.getClass().getResource(TEMP_FILE_PATH).getPath()).close();\n-    }\n-}\n"}}, {"oid": "3cb19c807462c3718c0b2e8b6addb702ab696cc5", "url": "https://github.com/Netflix/conductor/commit/3cb19c807462c3718c0b2e8b6addb702ab696cc5", "message": "Simple workflow integration test additional tests", "committedDate": "2020-05-12T16:38:55Z", "type": "commit"}, {"oid": "204f2b13d98ed736ecd48e700fcbcb910d09eeb7", "url": "https://github.com/Netflix/conductor/commit/204f2b13d98ed736ecd48e700fcbcb910d09eeb7", "message": "Simple workflow integration test with retry at workflow level feature", "committedDate": "2020-05-12T18:19:20Z", "type": "commit"}, {"oid": "1176cf587a66bbf312810cc61bf60dd9a218ee3c", "url": "https://github.com/Netflix/conductor/commit/1176cf587a66bbf312810cc61bf60dd9a218ee3c", "message": "clean up", "committedDate": "2020-05-12T23:05:11Z", "type": "commit"}, {"oid": "b3e58729e875870eb72e1b08891eaccf9217dfd7", "url": "https://github.com/Netflix/conductor/commit/b3e58729e875870eb72e1b08891eaccf9217dfd7", "message": "Introduced WorkflowTestUtil to enable reuse of registration and clean up in all specifications", "committedDate": "2020-05-13T19:20:07Z", "type": "commit"}, {"oid": "54f5b544c388565759d1f87323963be9a7676554", "url": "https://github.com/Netflix/conductor/commit/54f5b544c388565759d1f87323963be9a7676554", "message": "Added documentation to the WorkflowTestUtil", "committedDate": "2020-05-13T19:56:58Z", "type": "commit"}]}