{"pr_number": 889, "pr_title": "PHOENIX-6148 & PHOENIX-6149 : [SchemaExtractionTool] DDL parsing exception in Phoenix\u2026", "pr_createdAt": "2020-09-22T00:04:00Z", "pr_url": "https://github.com/apache/phoenix/pull/889", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyOTA0NQ==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492429045", "bodyText": "Is this a bug in SchemaUtil.getQualfiedTableName? This seems like something we shouldn't have to repeat everywhere.", "author": "gjacoby126", "createdAt": "2020-09-22T01:17:00Z", "path": "phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java", "diffHunk": "@@ -203,6 +203,9 @@ protected String extractCreateViewDDL(PTable table) throws SQLException {\n     private String generateCreateViewDDL(String columnInfoString, String baseTableFullName,\n             String whereClause, String pSchemaName, String pTableName) {\n         String viewFullName = SchemaUtil.getQualifiedTableName(pSchemaName, pTableName);\n+        if(Character.isDigit(pTableName.charAt(0))) {", "originalCommit": "3d699a61e025ee4f40db8e1051b87d7ef7611134", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyOTgwNA==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492429804", "bodyText": "I think not, this is mainly for parsing. For Internals of phoenix, function should ignore quotes around the name.", "author": "swaroopak", "createdAt": "2020-09-22T01:20:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyOTA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5MzcxMw==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492893713", "bodyText": "If you look at the phoenix grammar for create table or create view the table name is of the format below: https://phoenix.apache.org/language/index.html#table_ref\nhttps://phoenix.apache.org/language/index.html#name\nSo table names can begin with [A-Z] or _ so any table name that doesn't begin with this has to begin with a quote. So just checking for isDigit is wrong as we might miss other cases where the first letter is something other than a digit for example like a $ or other character. The fix should be if the first character is not a letter or  underscore then quote.", "author": "tkhurana", "createdAt": "2020-09-22T16:59:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyOTA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkwNDcxMA==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492904710", "bodyText": "Makes sense! However,  [a-zA-Z_0-9-.] these are the only acceptable characters in the name.", "author": "swaroopak", "createdAt": "2020-09-22T17:17:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyOTA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c2707d1b7f1ff814697548f6b03ab2f1088225f", "chunk": "diff --git a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\nindex 0b7baac09..2f56ad52e 100644\n--- a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n+++ b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n\n@@ -202,15 +202,20 @@ public class SchemaExtractionProcessor {\n \n     private String generateCreateViewDDL(String columnInfoString, String baseTableFullName,\n             String whereClause, String pSchemaName, String pTableName) {\n-        String viewFullName = SchemaUtil.getQualifiedTableName(pSchemaName, pTableName);\n-        if(Character.isDigit(pTableName.charAt(0))) {\n-            viewFullName = pSchemaName+\".\\\"\"+pTableName+\"\\\"\";\n-        }\n+        String viewFullName = getPTableFullName(pSchemaName, pTableName);\n         StringBuilder outputBuilder = new StringBuilder(String.format(CREATE_VIEW, viewFullName,\n                 columnInfoString, baseTableFullName, whereClause));\n         return outputBuilder.toString();\n     }\n \n+    private String getPTableFullName(String pSchemaName, String pTableName) {\n+        String pTableFullName = SchemaUtil.getQualifiedTableName(pSchemaName, pTableName);\n+        if(!(Character.isAlphabetic(pTableName.charAt(0)))) {\n+            pTableFullName = pSchemaName+\".\\\"\"+pTableName+\"\\\"\";\n+        }\n+        return pTableFullName;\n+    }\n+\n     public String extractCreateTableDDL(PTable table) throws IOException, SQLException {\n         String pSchemaName = table.getSchemaName().getString();\n         String pTableName = table.getTableName().getString();\n"}}, {"oid": "0c2707d1b7f1ff814697548f6b03ab2f1088225f", "url": "https://github.com/apache/phoenix/commit/0c2707d1b7f1ff814697548f6b03ab2f1088225f", "message": "PHOENIX-6148: [SchemaExtractionTool] DDL parsing exception in Phoenix in view name", "committedDate": "2020-09-22T17:41:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNDQzNA==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492924434", "bodyText": "Why not add this function to SchemaUtil class itself?", "author": "priyankporwal", "createdAt": "2020-09-22T17:50:13Z", "path": "phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java", "diffHunk": "@@ -202,12 +202,20 @@ protected String extractCreateViewDDL(PTable table) throws SQLException {\n \n     private String generateCreateViewDDL(String columnInfoString, String baseTableFullName,\n             String whereClause, String pSchemaName, String pTableName) {\n-        String viewFullName = SchemaUtil.getQualifiedTableName(pSchemaName, pTableName);\n+        String viewFullName = getPTableFullName(pSchemaName, pTableName);\n         StringBuilder outputBuilder = new StringBuilder(String.format(CREATE_VIEW, viewFullName,\n                 columnInfoString, baseTableFullName, whereClause));\n         return outputBuilder.toString();\n     }\n \n+    private String getPTableFullName(String pSchemaName, String pTableName) {", "originalCommit": "0c2707d1b7f1ff814697548f6b03ab2f1088225f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNTMyMA==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r492925320", "bodyText": "This is not needed in internals of phoenix.", "author": "swaroopak", "createdAt": "2020-09-22T17:51:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNDQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxMjEyNQ==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r493012125", "bodyText": "Maybe so today, but we never know when it might be needed later. SchemaUtil seems like the right place for it instead of fragmented/duplicated in various tools.", "author": "priyankporwal", "createdAt": "2020-09-22T20:25:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkyNDQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "f46b842d8c91bb32893ea19c5d553aa8764a8bc1", "chunk": "diff --git a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\nindex 2f56ad52e..77db43957 100644\n--- a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n+++ b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n\n@@ -202,20 +202,12 @@ public class SchemaExtractionProcessor {\n \n     private String generateCreateViewDDL(String columnInfoString, String baseTableFullName,\n             String whereClause, String pSchemaName, String pTableName) {\n-        String viewFullName = getPTableFullName(pSchemaName, pTableName);\n+        String viewFullName = SchemaUtil.getPTableFullNameWithQuotes(pSchemaName, pTableName);\n         StringBuilder outputBuilder = new StringBuilder(String.format(CREATE_VIEW, viewFullName,\n                 columnInfoString, baseTableFullName, whereClause));\n         return outputBuilder.toString();\n     }\n \n-    private String getPTableFullName(String pSchemaName, String pTableName) {\n-        String pTableFullName = SchemaUtil.getQualifiedTableName(pSchemaName, pTableName);\n-        if(!(Character.isAlphabetic(pTableName.charAt(0)))) {\n-            pTableFullName = pSchemaName+\".\\\"\"+pTableName+\"\\\"\";\n-        }\n-        return pTableFullName;\n-    }\n-\n     public String extractCreateTableDDL(PTable table) throws IOException, SQLException {\n         String pSchemaName = table.getSchemaName().getString();\n         String pTableName = table.getTableName().getString();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxNDE2Ng==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r493014166", "bodyText": "what does digit in the first position signify? Perhaps add a comment as well.", "author": "priyankporwal", "createdAt": "2020-09-22T20:29:45Z", "path": "phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java", "diffHunk": "@@ -326,8 +334,13 @@ private String convertPropertiesToString() {\n                 if (optionBuilder.length() != 0) {\n                     optionBuilder.append(\", \");\n                 }\n-                key = columnFamilyName.equals(QueryConstants.DEFAULT_COLUMN_FAMILY)? key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n-                optionBuilder.append(key+\"=\"+value);\n+                key = columnFamilyName.equals(QueryConstants.DEFAULT_COLUMN_FAMILY)?\n+                        key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n+                if(!Character.isDigit(value.charAt(0)) &&", "originalCommit": "0c2707d1b7f1ff814697548f6b03ab2f1088225f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNDEzNA==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r493024134", "bodyText": "added a comment.", "author": "swaroopak", "createdAt": "2020-09-22T20:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxNDE2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f46b842d8c91bb32893ea19c5d553aa8764a8bc1", "chunk": "diff --git a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\nindex 2f56ad52e..77db43957 100644\n--- a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n+++ b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n\n@@ -336,6 +329,8 @@ public class SchemaExtractionProcessor {\n                 }\n                 key = columnFamilyName.equals(QueryConstants.DEFAULT_COLUMN_FAMILY)?\n                         key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n+                // properties value that corresponds to a number will not need single quotes around it\n+                // properties value that corresponds to a boolean value will not need single quotes around it\n                 if(!Character.isDigit(value.charAt(0)) &&\n                         !(value.equalsIgnoreCase(Boolean.TRUE.toString()) ||value.equalsIgnoreCase(Boolean.FALSE.toString()))) {\n                     value= \"'\" + value + \"'\";\n"}}, {"oid": "f46b842d8c91bb32893ea19c5d553aa8764a8bc1", "url": "https://github.com/apache/phoenix/commit/f46b842d8c91bb32893ea19c5d553aa8764a8bc1", "message": "PHOENIX-6148: [SchemaExtractionTool] DDL parsing exception in Phoenix in view name", "committedDate": "2020-09-22T20:47:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyOTg0Ng==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r493029846", "bodyText": "Nit: given this comment, shouldn't we check that the string beginning with a digit is actually a number and not something like '72HOURS'? :)", "author": "priyankporwal", "createdAt": "2020-09-22T20:58:46Z", "path": "phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java", "diffHunk": "@@ -326,8 +327,15 @@ private String convertPropertiesToString() {\n                 if (optionBuilder.length() != 0) {\n                     optionBuilder.append(\", \");\n                 }\n-                key = columnFamilyName.equals(QueryConstants.DEFAULT_COLUMN_FAMILY)? key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n-                optionBuilder.append(key+\"=\"+value);\n+                key = columnFamilyName.equals(QueryConstants.DEFAULT_COLUMN_FAMILY)?\n+                        key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n+                // properties value that corresponds to a number will not need single quotes around it", "originalCommit": "f46b842d8c91bb32893ea19c5d553aa8764a8bc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA1ODAzMg==", "url": "https://github.com/apache/phoenix/pull/889#discussion_r493058032", "bodyText": "That makes sense, I changed it.", "author": "swaroopak", "createdAt": "2020-09-22T21:59:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyOTg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b853022810c50104a1f7d6da4e1ac2412ad0ca6c", "chunk": "diff --git a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\nindex 77db43957..27fda9020 100644\n--- a/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n+++ b/phoenix-tools/src/main/java/org/apache/phoenix/schema/SchemaExtractionProcessor.java\n\n@@ -331,7 +333,7 @@ public class SchemaExtractionProcessor {\n                         key : String.format(\"\\\"%s\\\".%s\", columnFamilyName, key);\n                 // properties value that corresponds to a number will not need single quotes around it\n                 // properties value that corresponds to a boolean value will not need single quotes around it\n-                if(!Character.isDigit(value.charAt(0)) &&\n+                if(!(StringUtils.isNumeric(value)) &&\n                         !(value.equalsIgnoreCase(Boolean.TRUE.toString()) ||value.equalsIgnoreCase(Boolean.FALSE.toString()))) {\n                     value= \"'\" + value + \"'\";\n                 }\n"}}, {"oid": "b853022810c50104a1f7d6da4e1ac2412ad0ca6c", "url": "https://github.com/apache/phoenix/commit/b853022810c50104a1f7d6da4e1ac2412ad0ca6c", "message": "PHOENIX-6148: [SchemaExtractionTool] DDL parsing exception in Phoenix in view name", "committedDate": "2020-09-22T21:23:21Z", "type": "commit"}, {"oid": "b853022810c50104a1f7d6da4e1ac2412ad0ca6c", "url": "https://github.com/apache/phoenix/commit/b853022810c50104a1f7d6da4e1ac2412ad0ca6c", "message": "PHOENIX-6148: [SchemaExtractionTool] DDL parsing exception in Phoenix in view name", "committedDate": "2020-09-22T21:23:21Z", "type": "forcePushed"}]}