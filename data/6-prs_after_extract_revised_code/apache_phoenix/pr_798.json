{"pr_number": 798, "pr_title": "PHOENIX-5942 - ParameterizedIndexUpgradeToolIT is too slow", "pr_createdAt": "2020-06-06T00:02:45Z", "pr_url": "https://github.com/apache/phoenix/pull/798", "timeline": [{"oid": "351bf8f3bfdb941c363d5d9b5e54d85cf85de9ce", "url": "https://github.com/apache/phoenix/commit/351bf8f3bfdb941c363d5d9b5e54d85cf85de9ce", "message": "PHOENIX-5942 - ParameterizedIndexUpgradeToolIT is too slow", "committedDate": "2020-06-06T00:01:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3MDMxNg==", "url": "https://github.com/apache/phoenix/pull/798#discussion_r436970316", "bodyText": "nit: extra lines", "author": "swaroopak", "createdAt": "2020-06-08T20:08:32Z", "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java", "diffHunk": "@@ -169,59 +167,144 @@ private void setClusterProperties() {\n \n     private void prepareSetup() throws SQLException {\n         //inputList is \"TEST.MOCK1,TEST1.MOCK2,TEST.MOCK3\";\n+\n+        String mockTableOne = \"TEST.\" + generateUniqueName();\n+        TABLE_LIST[0] = mockTableOne;\n+        String mockTableTwo = \"TEST1.\" + generateUniqueName();\n+        TABLE_LIST[1] = mockTableTwo;\n+        String mockTableThree = \"TEST.\" + generateUniqueName();\n+        TABLE_LIST[2] = mockTableThree;\n+        String multiTenantTable = \"TEST.\" + generateUniqueName();\n+        TABLE_LIST[3] = multiTenantTable;\n+        INPUT_LIST = StringUtils.join(TABLE_LIST, \",\");\n         if (isNamespaceEnabled) {\n-            conn.createStatement().execute(\"CREATE SCHEMA TEST\");\n-            conn.createStatement().execute(\"CREATE SCHEMA TEST1\");\n+            TABLE_LIST_NAMESPACE[0] = mockTableOne.replace(\".\", \":\");\n+            TABLE_LIST_NAMESPACE[1] = mockTableTwo.replace(\".\", \":\");\n+            TABLE_LIST_NAMESPACE[2] = mockTableThree.replace(\".\", \":\");\n+            TABLE_LIST_NAMESPACE[3] = multiTenantTable.replace(\".\", \":\");\n+            conn.createStatement().execute(\"CREATE SCHEMA IF NOT EXISTS TEST\");\n+            conn.createStatement().execute(\"CREATE SCHEMA IF NOT EXISTS TEST1\");\n         }\n-        conn.createStatement().execute(\"CREATE TABLE TEST.MOCK1 (id bigint NOT NULL \"\n+\n+\n+", "originalCommit": "351bf8f3bfdb941c363d5d9b5e54d85cf85de9ce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f45b91af71fef6d3da45a35755b316bdfec35312", "chunk": "diff --git a/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java b/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java\nindex 5943b391b..3e5795471 100644\n--- a/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java\n+++ b/phoenix-core/src/it/java/org/apache/phoenix/end2end/ParameterizedIndexUpgradeToolIT.java\n\n@@ -165,9 +158,8 @@ public class ParameterizedIndexUpgradeToolIT extends BaseTest {\n                 Boolean.toString(!upgrade));\n     }\n \n-    private void prepareSetup() throws SQLException {\n-        //inputList is \"TEST.MOCK1,TEST1.MOCK2,TEST.MOCK3\";\n-\n+    private void prepareFullSetup() throws SQLException {\n+        clearOldTableNames();\n         String mockTableOne = \"TEST.\" + generateUniqueName();\n         TABLE_LIST[0] = mockTableOne;\n         String mockTableTwo = \"TEST1.\" + generateUniqueName();\n"}}, {"oid": "f45b91af71fef6d3da45a35755b316bdfec35312", "url": "https://github.com/apache/phoenix/commit/f45b91af71fef6d3da45a35755b316bdfec35312", "message": "PHOENIX-5942 - ParameterizedIndexUpgradeToolIT is too slow", "committedDate": "2020-06-08T21:05:41Z", "type": "commit"}, {"oid": "89faeff859f07ef56b6047e8a8f3cd837f195687", "url": "https://github.com/apache/phoenix/commit/89faeff859f07ef56b6047e8a8f3cd837f195687", "message": "PHOENIX-5942 - ParameterizedIndexUpgradeToolIT is too slow", "committedDate": "2020-06-08T21:23:23Z", "type": "commit"}]}