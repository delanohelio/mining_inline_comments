{"pr_number": 821, "pr_title": "PHOENIX-5973 - Stabilize and speed up IndexToolForNonTxGlobalIndexIT \u2026", "pr_createdAt": "2020-07-02T21:23:59Z", "pr_url": "https://github.com/apache/phoenix/pull/821", "timeline": [{"oid": "496e01ed91553d33884b777ae539c3e56a9fd24c", "url": "https://github.com/apache/phoenix/commit/496e01ed91553d33884b777ae539c3e56a9fd24c", "message": "PHOENIX-5973 - Stabilize and speed up IndexToolForNonTxGlobalIndexIT (#809)", "committedDate": "2020-07-02T21:04:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMDkxNg==", "url": "https://github.com/apache/phoenix/pull/821#discussion_r449300916", "bodyText": "This should return 0 scanned and 0 valid because the view has where clause on val6 which won't qualify for the delete marker that is there on HBase row. Thank you @abhishek-chouhan for clarifying this.\nThat means in order to consider a deleted row for incremental verification on a view with where clause, its upsert should also fall into the same window. Otherwise, any such mismatches will be caught in full verification.\nFYI @kadirozde @priyankporwal", "author": "swaroopak", "createdAt": "2020-07-02T22:57:53Z", "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java", "diffHunk": "@@ -952,20 +998,22 @@ public void testIndexToolForIncrementalVerify_viewIndex() throws Exception {\n                             viewIndexName, null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t1),\n                             \"-et\", String.valueOf(t3));\n             verifyCounters(it, 2, 2);\n-\n+/*\n             // job with update on only one row\n             it =\n                     IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, viewName,\n                             viewIndexName, null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t3),\n                             \"-et\", String.valueOf(t4));\n             verifyCounters(it, 1, 1);", "originalCommit": "496e01ed91553d33884b777ae539c3e56a9fd24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxMTA5NQ==", "url": "https://github.com/apache/phoenix/pull/821#discussion_r449311095", "bodyText": "That seems like incorrect behavior though, because that delete statement does delete a row that's part of the view.", "author": "gjacoby126", "createdAt": "2020-07-02T23:40:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMDkxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3Njg3MQ==", "url": "https://github.com/apache/phoenix/pull/821#discussion_r450476871", "bodyText": "Based on our previous conversation that led to the filing of PHOENIX-5989, I've just updated this with a reference to 5989 and kept it commented out.", "author": "gjacoby126", "createdAt": "2020-07-06T20:59:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMDkxNg=="}], "type": "inlineReview", "revised_code": {"commit": "971aedd6dc1d94e06c10167d93f58b9d055a03d3", "chunk": "diff --git a/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java b/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java\nindex 91f8ca103..392637040 100644\n--- a/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java\n+++ b/phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java\n\n@@ -998,7 +998,8 @@ public class IndexToolForNonTxGlobalIndexIT extends BaseUniqueNamesOwnClusterIT\n                             viewIndexName, null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t1),\n                             \"-et\", String.valueOf(t3));\n             verifyCounters(it, 2, 2);\n-/*\n+/*          Disabled pending completion of PHOENIX-5989, because the view filter doesn't include\n+            a PK column, so the delete is getting filtered out of the verification scan\n             // job with update on only one row\n             it =\n                     IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, viewName,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMTY5MQ==", "url": "https://github.com/apache/phoenix/pull/821#discussion_r449301691", "bodyText": "There are 2 index rows in this time window. Wondering if it is returning 1 because of different skip scan behaviors in the master branch's HBase or something else? Do you know @abhishek-chouhan?", "author": "swaroopak", "createdAt": "2020-07-02T23:00:42Z", "path": "phoenix-core/src/it/java/org/apache/phoenix/end2end/IndexToolForNonTxGlobalIndexIT.java", "diffHunk": "@@ -791,95 +826,107 @@ public void testIndexToolForIncrementalVerify() throws Exception {\n             conn.createStatement().execute(String.format(\n                     \"CREATE INDEX \"+indexTableName+\" ON \"+dataTableFullName+\" (val3) INCLUDE(val5)\"));\n \n-            customeEdge.setValue(EnvironmentEdgeManager.currentTimeMillis());\n-            EnvironmentEdgeManager.injectEdge(customeEdge);\n-            long t0 = customeEdge.currentTime();\n-            customeEdge.incrementValue(waitForUpsert);\n-            conn.createStatement().execute(\"UPSERT INTO \"+dataTableFullName+\"(key1, key2, val1, val2) VALUES (4,5,'abc',3)\");\n-            customeEdge.incrementValue(waitForUpsert);\n-            long t1 = customeEdge.currentTime();\n-            customeEdge.incrementValue(waitForUpsert);\n-            conn.createStatement().execute(\"UPSERT INTO \"+dataTableFullName+\"(key1, key2, val1, val2) VALUES (1,2,'abc',3)\");\n-            customeEdge.incrementValue(waitForUpsert);\n-            long t2 = customeEdge.currentTime();\n-            customeEdge.incrementValue(waitForUpsert);\n-            conn.createStatement().execute(\"UPSERT INTO \"+dataTableFullName+\"(key1, key2, val3, val4) VALUES (1,2,4,1.2)\");\n-            customeEdge.incrementValue(waitForUpsert);\n-            long t3 = customeEdge.currentTime();\n-            customeEdge.incrementValue(waitForUpsert);\n-            conn.createStatement().execute(\"UPSERT INTO \"+dataTableFullName+\"(key1, key2, val5, val6) VALUES (1,2,5,'def')\");\n-            customeEdge.incrementValue(waitForUpsert);\n-            long t4 = customeEdge.currentTime();\n-            customeEdge.incrementValue(waitForUpsert);\n-            conn.createStatement().execute(\"DELETE FROM \"+dataTableFullName+\" WHERE key1=4\");\n-            customeEdge.incrementValue(waitForUpsert);\n-            long t5 = customeEdge.currentTime();\n-            customeEdge.incrementValue(10);\n-            long t6 = customeEdge.currentTime();\n+            customEdge.setValue(EnvironmentEdgeManager.currentTimeMillis());\n+            EnvironmentEdgeManager.injectEdge(customEdge);\n+            long t0 = customEdge.currentTime();\n+            customEdge.incrementValue(waitForUpsert);\n+            conn.createStatement().execute(\"UPSERT INTO \"+viewFullName+\"(key1, key2, val1, val2) VALUES (4,5,'abc',3)\");\n+            customEdge.incrementValue(waitForUpsert);\n+            long t1 = customEdge.currentTime();\n+            customEdge.incrementValue(waitForUpsert);\n+            conn.createStatement().execute(\"UPSERT INTO \"+viewFullName+\"(key1, key2, val1, val2) VALUES (1,2,'abc',3)\");\n+            customEdge.incrementValue(waitForUpsert);\n+            long t2 = customEdge.currentTime();\n+            customEdge.incrementValue(waitForUpsert);\n+            conn.createStatement().execute(\"UPSERT INTO \"+viewFullName+\"(key1, key2, val3, val4) VALUES (1,2,4,1.2)\");\n+            customEdge.incrementValue(waitForUpsert);\n+            long t3 = customEdge.currentTime();\n+            customEdge.incrementValue(waitForUpsert);\n+            conn.createStatement().execute(\"UPSERT INTO \"+viewFullName+\"(key1, key2, val5, val6) VALUES (1,2,5,'def')\");\n+            customEdge.incrementValue(waitForUpsert);\n+            long t4 = customEdge.currentTime();\n+            customEdge.incrementValue(waitForUpsert);\n+            conn.createStatement().execute(\"DELETE FROM \"+viewFullName+\" WHERE key1=4\");\n+            customEdge.incrementValue(waitForUpsert);\n+            long t5 = customEdge.currentTime();\n+            customEdge.incrementValue(10);\n+            long t6 = customEdge.currentTime();\n             IndexTool it;\n             if(!mutable) {\n                 // job with 2 rows\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t0),\"-et\", String.valueOf(t2));\n                 verifyCounters(it, 2, 2);\n+                //increment time between rebuilds so that PHOENIX_INDEX_TOOL and\n+                // PHOENIX_INDEX_TOOL_RESULT tables get unique keys for each run\n+                customEdge.incrementValue(waitForUpsert);\n \n                 // only one row\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t1),\"-et\", String.valueOf(t2));\n                 verifyCounters(it, 1, 1);\n-\n+                customEdge.incrementValue(waitForUpsert);\n                 // no rows\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t5),\"-et\", String.valueOf(t6));\n                 verifyCounters(it, 0, 0);\n-\n+                customEdge.incrementValue(waitForUpsert);\n                 //view index\n                 // job with 2 rows\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, viewName, viewIndexName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t0),\"-et\", String.valueOf(t2));\n                 verifyCounters(it, 2, 2);\n-\n+                customEdge.incrementValue(waitForUpsert);\n                 // only one row\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, viewName, viewIndexName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t1),\"-et\", String.valueOf(t2));\n                 verifyCounters(it, 1, 1);\n-\n+                customEdge.incrementValue(waitForUpsert);\n                 // no rows\n                 it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, viewName, viewIndexName,\n                         null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t5),\"-et\", String.valueOf(t6));\n                 verifyCounters(it, 0, 0);\n-\n+                customEdge.incrementValue(waitForUpsert);\n                 return;\n             }\n+\n             // regular job without delete row\n             it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                     null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t0),\"-et\", String.valueOf(t4));\n-            verifyCounters(it, 2, 3);\n+            verifyCounters(it, 2, 2);\n+            customEdge.incrementValue(waitForUpsert);\n \n             // job with 2 rows\n             it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                     null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t0),\"-et\", String.valueOf(t2));\n             verifyCounters(it, 2, 2);\n+            customEdge.incrementValue(waitForUpsert);\n \n             // job with update on only one row\n             it = IndexToolIT.runIndexTool(directApi, useSnapshot, schemaName, dataTableName, indexTableName,\n                     null, 0, IndexTool.IndexVerifyType.ONLY, \"-st\", String.valueOf(t1),\"-et\", String.valueOf(t3));\n-            verifyCounters(it, 1, 2);\n+            verifyCounters(it, 1, 1);", "originalCommit": "496e01ed91553d33884b777ae539c3e56a9fd24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxMjU3NA==", "url": "https://github.com/apache/phoenix/pull/821#discussion_r449312574", "bodyText": "There should be 2 versions of a single row, I believe. Different max versions behavior coming from lack of max lookback protection maybe?", "author": "gjacoby126", "createdAt": "2020-07-02T23:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMTY5MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "971aedd6dc1d94e06c10167d93f58b9d055a03d3", "url": "https://github.com/apache/phoenix/commit/971aedd6dc1d94e06c10167d93f58b9d055a03d3", "message": "PHOENIX-5973 - Stabilize and speed up IndexToolForNonTxGlobalIndexIT", "committedDate": "2020-07-06T20:55:55Z", "type": "commit"}]}