{"pr_number": 529, "pr_title": "Add openid connect quickstart test", "pr_createdAt": "2020-04-17T16:13:13Z", "pr_url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjQ4MQ==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836481", "bodyText": "So we cannot use TestContainer like this, as the lifecycle is different from the Quarkus lifecycle.\nYou need to use a Quarkus Test Resource, and BTW, it will also let you set some properties dynamically.\nCheck how the Kafka quickstart is built as an example.", "author": "cescoffier", "createdAt": "2020-04-19T07:08:19Z", "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");", "originalCommit": "04bead224a4764e09a1230685776e9b98467d2b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MzY4OQ==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410863689", "bodyText": "I will check how the Kafka quickstart is built.", "author": "cemnura", "createdAt": "2020-04-19T09:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "156a80d7f3a07e04b2c06d2aa9e11d88efad2960", "chunk": "diff --git a/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java b/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\nindex 7ba1a12b..b4afbf15 100644\n--- a/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\n+++ b/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\n\n@@ -1,33 +1,17 @@\n package org.acme.security.oauth2;\n \n+import io.quarkus.test.common.QuarkusTestResource;\n import io.quarkus.test.junit.QuarkusTest;\n import io.restassured.RestAssured;\n-import org.junit.ClassRule;\n import org.junit.jupiter.api.Test;\n-import org.testcontainers.containers.BindMode;\n-import org.testcontainers.containers.FixedHostPortGenericContainer;\n-import org.testcontainers.containers.GenericContainer;\n-import org.testcontainers.containers.wait.strategy.Wait;\n-import org.testcontainers.junit.jupiter.Container;\n-import org.testcontainers.junit.jupiter.Testcontainers;\n \n-@Testcontainers\n @QuarkusTest\n+@QuarkusTestResource(KeycloakResource.class)\n public class TokenSecuredResourceTest {\n \n-    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\");\n     private static final String KEYCLOAK_REALM = \"quarkus\";\n \n-    @ClassRule\n-    @Container\n-    private static GenericContainer keycloak = new FixedHostPortGenericContainer(\"quay.io/keycloak/keycloak:9.0.3\")\n-            .withFixedExposedPort(8180, 8080)\n-            .withEnv(\"KEYCLOAK_USER\", \"admin\")\n-            .withEnv(\"KEYCLOAK_PASSWORD\", \"admin\")\n-            .withEnv(\"KEYCLOAK_IMPORT\", \"/tmp/realm.json\")\n-            .withClasspathResourceMapping(\"quarkus-realm.json\", \"/tmp/realm.json\", BindMode.READ_ONLY)\n-            .waitingFor(Wait.forHttp(\"/auth\"));\n-\n     @Test\n     public void testPermitAllAccess() {\n         RestAssured.given().auth().oauth2(getAccessToken(\"alice\"))\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjYyOQ==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410836629", "bodyText": "This should be moved to a Quarkus Test Resources, and probably bound to a free port.\nAlso, I'm surprised about @ClassRule as it's a Junit 4 annotation.", "author": "cescoffier", "createdAt": "2020-04-19T07:09:18Z", "path": "security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.acme.security.oauth2;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.ClassRule;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.BindMode;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+@Testcontainers\n+@QuarkusTest\n+public class TokenSecuredResourceTest {\n+\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");\n+    private static final String KEYCLOAK_REALM = \"quarkus\";\n+\n+    @ClassRule\n+    @Container\n+    private static GenericContainer keycloak = new FixedHostPortGenericContainer(\"quay.io/keycloak/keycloak:9.0.3\")", "originalCommit": "04bead224a4764e09a1230685776e9b98467d2b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg2MzQ1NA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r410863454", "bodyText": "Okey I will move try to move this and try to bound to a free port.\nYes you are correct @ClassRule is a Junit4 annotation. I misread the testcontainer documentation. I will be removing this in general.", "author": "cemnura", "createdAt": "2020-04-19T09:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDgzNjYyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "156a80d7f3a07e04b2c06d2aa9e11d88efad2960", "chunk": "diff --git a/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java b/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\nindex 7ba1a12b..b4afbf15 100644\n--- a/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\n+++ b/security-oauth2-quickstart/src/test/java/org/acme/security/oauth2/TokenSecuredResourceTest.java\n\n@@ -1,33 +1,17 @@\n package org.acme.security.oauth2;\n \n+import io.quarkus.test.common.QuarkusTestResource;\n import io.quarkus.test.junit.QuarkusTest;\n import io.restassured.RestAssured;\n-import org.junit.ClassRule;\n import org.junit.jupiter.api.Test;\n-import org.testcontainers.containers.BindMode;\n-import org.testcontainers.containers.FixedHostPortGenericContainer;\n-import org.testcontainers.containers.GenericContainer;\n-import org.testcontainers.containers.wait.strategy.Wait;\n-import org.testcontainers.junit.jupiter.Container;\n-import org.testcontainers.junit.jupiter.Testcontainers;\n \n-@Testcontainers\n @QuarkusTest\n+@QuarkusTestResource(KeycloakResource.class)\n public class TokenSecuredResourceTest {\n \n-    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\", \"http://localhost:8180/auth\");\n+    private static final String KEYCLOAK_SERVER_URL = System.getProperty(\"keycloak.url\");\n     private static final String KEYCLOAK_REALM = \"quarkus\";\n \n-    @ClassRule\n-    @Container\n-    private static GenericContainer keycloak = new FixedHostPortGenericContainer(\"quay.io/keycloak/keycloak:9.0.3\")\n-            .withFixedExposedPort(8180, 8080)\n-            .withEnv(\"KEYCLOAK_USER\", \"admin\")\n-            .withEnv(\"KEYCLOAK_PASSWORD\", \"admin\")\n-            .withEnv(\"KEYCLOAK_IMPORT\", \"/tmp/realm.json\")\n-            .withClasspathResourceMapping(\"quarkus-realm.json\", \"/tmp/realm.json\", BindMode.READ_ONLY)\n-            .waitingFor(Wait.forHttp(\"/auth\"));\n-\n     @Test\n     public void testPermitAllAccess() {\n         RestAssured.given().auth().oauth2(getAccessToken(\"alice\"))\n"}}, {"oid": "a71bc157aea5662057235d503ef7bc1e761e0579", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/a71bc157aea5662057235d503ef7bc1e761e0579", "message": "Added test for security-oauth2-quickstart\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-20T08:58:36Z", "type": "forcePushed"}, {"oid": "156a80d7f3a07e04b2c06d2aa9e11d88efad2960", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/156a80d7f3a07e04b2c06d2aa9e11d88efad2960", "message": "Added test for security-oauth2-quickstart\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-04-20T18:33:41Z", "type": "forcePushed"}, {"oid": "c66b83b5aaf1cba3353dc99ef4e0fdf416653346", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/c66b83b5aaf1cba3353dc99ef4e0fdf416653346", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-10T21:25:21Z", "type": "forcePushed"}, {"oid": "7366b62f104951d73a4a7cd8583bed665a5c5412", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/7366b62f104951d73a4a7cd8583bed665a5c5412", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-10T21:31:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzNDM1NA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r502834354", "bodyText": "@sberyozkin  This is a demo Keycloak mock server using WireMock for evaluation. Is missing protocol/openid-connect/token path mock.", "author": "cemnura", "createdAt": "2020-10-10T21:30:52Z", "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package org.acme.security.openid.connect;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {", "originalCommit": "c66b83b5aaf1cba3353dc99ef4e0fdf416653346", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzNzY5NA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r503537694", "bodyText": "I have deleted this class from this PR and moving it to the main quarkus repository", "author": "cemnura", "createdAt": "2020-10-12T21:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzNDM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "c2d0cb2643dbcca986b8466281173baf588a350b", "chunk": "diff --git a/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java b/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java\ndeleted file mode 100644\nindex 499d6bbf..00000000\n--- a/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/KeycloakTestResource.java\n+++ /dev/null\n\n@@ -1,92 +0,0 @@\n-package org.acme.security.openid.connect;\n-\n-import com.github.tomakehurst.wiremock.WireMockServer;\n-import com.github.tomakehurst.wiremock.client.WireMock;\n-import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n-\n-import javax.ws.rs.core.MediaType;\n-import java.util.Collections;\n-import java.util.Map;\n-\n-import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n-import static com.github.tomakehurst.wiremock.client.WireMock.get;\n-import static com.github.tomakehurst.wiremock.client.WireMock.post;\n-import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n-import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n-import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n-\n-public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {\n-\n-    private WireMockServer server;\n-\n-    @Override\n-    public Map<String, String> start() {\n-\n-        server = new WireMockServer(options().port(8180));\n-        server.start();\n-\n-        WireMock.configureFor(8180);\n-        WireMock.stubFor(\n-                get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n-                        .willReturn(aResponse()\n-                                .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n-                                .withBody(\"{\\n\" +\n-                                        \"    \\\"authorization_endpoint\\\": \\\"http://localhost:8180/authenticate\\\",\\n\" +\n-                                        \"    \\\"end_session_endpoint\\\": \\\"http://localhost:8180/logout\\\",\\n\" +\n-                                        \"    \\\"id_token_signing_alg_values_supported\\\": [\\n\" +\n-                                        \"        \\\"RS256\\\",\\n\" +\n-                                        \"        \\\"ES256\\\",\\n\" +\n-                                        \"        \\\"HS256\\\"\\n\" +\n-                                        \"    ],\\n\" +\n-                                        \"    \\\"issuer\\\": \\\"http://localhost:8180/auth/realms/quarkus\\\",\\n\" +\n-                                        \"    \\\"jwks_uri\\\": \\\"http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/certs\\\",\\n\" +\n-                                        \"    \\\"response_types_supported\\\": [\\n\" +\n-                                        \"        \\\"code\\\",\\n\" +\n-                                        \"        \\\"code id_token\\\",\\n\" +\n-                                        \"        \\\"id_token\\\",\\n\" +\n-                                        \"        \\\"token id_token\\\"\\n\" +\n-                                        \"    ],\\n\" +\n-                                        \"    \\\"subject_types_supported\\\": [\\n\" +\n-                                        \"        \\\"public\\\"\\n\" +\n-                                        \"    ],\\n\" +\n-                                        \"    \\\"token_endpoint\\\": \\\"http://localhost:8180/auth/realms/quarkus/protocol/openid-connect/token\\\"\\n\" +\n-                                        \"}\")));\n-\n-        WireMock.stubFor(\n-                get(urlEqualTo(\"/auth/realms/quarkus/protocol/openid-connect/certs\"))\n-                    .willReturn(aResponse()\n-                            .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n-                            .withBody(\"{\\n\" +\n-                                        \"    \\\"keys\\\": [\\n\" +\n-                                        \"        {\\n\" +\n-                                        \"            \\\"alg\\\": \\\"RS256\\\",\\n\" +\n-                                        \"            \\\"e\\\": \\\"AQAB\\\",\\n\" +\n-                                        \"            \\\"kid\\\": \\\"keyId\\\",\\n\" +\n-                                        \"            \\\"kty\\\": \\\"RSA\\\",\\n\" +\n-                                        \"            \\\"n\\\": \\\"AKzaf4nijuwtAn9ieZaz-iGXBp1pFm6dJMAxRO6ax2CV9cBFeThxrKJNFmDY7j7gKRnrgWxvgJKSd3hAm_CGmXHbTM8cPi_gsof-CsOohv7LH0UYbr0UpCIJncTiRrKQto7q_NOO4Jh1EBSLMPX7MzttEhh35Ue9txHLq3zkdkR6BR6nGS7QxEg7FzYzA4IooV59OPr-TvlDxbEpwc1wkRZDGavo-WjngAt7m_BEQtHnav3whitbrMmi_1tWY8cQbO9D4FuQTM7yvACLSv94G2TCvsjm_gGJmOJyRBkI1r-uEIfhz9-VIKlswqapKSul-Hoxv5NycucRa4xi4N39dfM=\\\",\\n\" +\n-                                        \"            \\\"use\\\": \\\"sig\\\"\\n\" +\n-                                        \"        }\\n\" +\n-                                        \"    ]\\n\" +\n-                                        \"}\"))\n-        );\n-\n-        WireMock.stubFor(\n-                post(urlEqualTo(\"/realms/quarkus/protocol/openid-connect/token\"))\n-                .willReturn(aResponse()\n-                            .withBody(\"eyJraWQiOiJrZXlJZCIsImFsZyI6IlJTMjU2In0.eyJhdWQiOlsiYXVkaWVuY2UiXSwiaWF0IjoxNjAyMjc3MzI5LCJhdXRoX3RpbWUiOjAsImV4cCI6MTYwMjI3Nzk4OSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoxMjM0L2F1dGgvcmVhbG1zL2N1c3RvbSIsInN1YiI6InN1YmplY3QiLCJzY29wZSI6Im9wZW5pZCBzY29wZSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImF1dGhvcml6ZWRfcGFydHkiLCJuYmYiOjE2MDIyNzczODksIm5hbWUiOiJuYW1lIiwiZ2l2ZW5fbmFtZSI6ImdpdmVuIiwiZmFtaWx5X25hbWUiOiJmYW1pbHkiLCJlbWFpbCI6ImVtYWlsIiwicHJlZmVycmVkX3VzZXJuYW1lIjoidXNlcm5hbWUiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiYWRtaW4iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhdWRpZW5jZSI6eyJyb2xlcyI6WyJhZG1pbiJdfSwiYXV0aG9yaXplZF9wYXJ0eSI6eyJyb2xlcyI6WyJwYXJ0eSJdfX0sImNsYWltIjoibXkgY2xhaW0iLCJpc3N1ZXIiOiJpZ25vcmVkIn0.mzPB05nrMoJqdyzXv1q4ZLjg8i_OecJLeO0QSNtwMyYSE_RHfrxkTXMQiobgVsF7zp8ik2ynmfovQxBmOQcRVHkznjbSc4h2YEBOwRxnefOzk8fxWoDejJ8tgR__Xyo0uNwNnx1HOadWZWXbjGbYUOmDPibkv8PcjaB1HD19AAwKEmgOtAj-wJtWfOZZ756D67SdSjtyitXB-ZTXeTbi1Fh3cEPTMJz53PdOz-47NvLydijCtkiuTzwnh0eSiIPDi3qTN7bgQD5OdHXu2APAgOhf9JVXgL6srM7eIT9hq9K2dp7ObG3UQNXCO4RH1md74-_eEhXZeYxVYD9JFM1f7Q\")\n-                ));\n-\n-        System.out.println(\"[INFO] Keycloak started in mock mode; server status\");\n-        return Collections.singletonMap(\"quarkus.oidc.auth-server-url\", server.baseUrl() + \"/auth/realms/quarkus\");\n-    }\n-\n-    @Override\n-    public synchronized void stop() {\n-        if (server != null) {\n-            server.stop();\n-            System.out.println(\"[INFO] Keycloak was shut down\");\n-            server = null;\n-        }\n-    }\n-\n-}\n"}}, {"oid": "c2d0cb2643dbcca986b8466281173baf588a350b", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/c2d0cb2643dbcca986b8466281173baf588a350b", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-12T21:18:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504092462", "bodyText": "@cemnura Can you please have a single test class (say BearerTokenAuthenticationTest) combining both admin and user resources tests - to have KC started and stopped once and avoid some instability.", "author": "sberyozkin", "createdAt": "2020-10-13T16:27:41Z", "path": "security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.acme.security.openid.connect;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KeycloakServer.class)\n+public class UsersResourceTest {", "originalCommit": "c2d0cb2643dbcca986b8466281173baf588a350b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIyNDY5MA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504224690", "bodyText": "@sberyozkin gladly. Resolving ASAP.", "author": "cemnura", "createdAt": "2020-10-13T20:07:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNzI4NQ==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/529#discussion_r504307285", "bodyText": "I combined the test classes into one class being BearerTokenAuthenticationTest.", "author": "cemnura", "createdAt": "2020-10-13T23:03:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5MjQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d4b2ff1a2bf620f350c105f233a56eb9fb79c371", "chunk": "diff --git a/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java b/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/BearerTokenAuthenticationTest.java\nsimilarity index 74%\nrename from security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java\nrename to security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/BearerTokenAuthenticationTest.java\nindex 1b94ca99..6a9af605 100644\n--- a/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/UsersResourceTest.java\n+++ b/security-openid-connect-quickstart/src/test/java/org/acme/security/openid/connect/BearerTokenAuthenticationTest.java\n\n@@ -8,11 +8,24 @@ import org.junit.jupiter.api.Test;\n \n @QuarkusTest\n @QuarkusTestResource(KeycloakServer.class)\n-public class UsersResourceTest {\n+public class BearerTokenAuthenticationTest {\n \n     @ConfigProperty(name = \"quarkus.oidc.auth-server-url\")\n     String oidc;\n \n+    @Test\n+    public void testAdminAccess() {\n+        RestAssured.given().auth().oauth2(getAccessToken(\"admin\"))\n+                .when().get(\"/api/admin\")\n+                .then()\n+                .statusCode(200);\n+\n+        RestAssured.given().auth().oauth2(getAccessToken(\"alice\"))\n+                .when().get(\"/api/admin\")\n+                .then()\n+                .statusCode(403);\n+    }\n+\n     @Test\n     public void testUserAccess() {\n \n"}}, {"oid": "d4b2ff1a2bf620f350c105f233a56eb9fb79c371", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/d4b2ff1a2bf620f350c105f233a56eb9fb79c371", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-13T22:15:30Z", "type": "forcePushed"}, {"oid": "7571170100331b7067471e8adde056327cc5d61e", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/7571170100331b7067471e8adde056327cc5d61e", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-14T11:18:33Z", "type": "forcePushed"}, {"oid": "40cdf9d981918d1b9787da242d3816831314519f", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/40cdf9d981918d1b9787da242d3816831314519f", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-14T11:24:01Z", "type": "commit"}, {"oid": "40cdf9d981918d1b9787da242d3816831314519f", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/40cdf9d981918d1b9787da242d3816831314519f", "message": "Added openid connect quickstart test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>", "committedDate": "2020-10-14T11:24:01Z", "type": "forcePushed"}]}