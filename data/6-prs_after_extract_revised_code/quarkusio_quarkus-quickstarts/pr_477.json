{"pr_number": 477, "pr_title": "RSS Regression: Upload pmap output to cloud storage, compare between runs", "pr_createdAt": "2020-03-02T21:58:24Z", "pr_url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477", "timeline": [{"oid": "ba9ed8b142f93fa202c108716266fe8845d1abac", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/ba9ed8b142f93fa202c108716266fe8845d1abac", "message": "Capture pmap output, upload to IBM cloud storage, compute RSS regression based on <10% from previous run", "committedDate": "2020-03-02T21:45:28Z", "type": "commit"}, {"oid": "bf5edbccbd964558c0d4341f3a1e2f0efe6249e5", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/bf5edbccbd964558c0d4341f3a1e2f0efe6249e5", "message": "Only upload pmap object if there is no regression", "committedDate": "2020-03-03T08:57:19Z", "type": "commit"}, {"oid": "6d58aa7af1ce84e99847b716c597fc22cdb7d359", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/6d58aa7af1ce84e99847b716c597fc22cdb7d359", "message": "Update secret names", "committedDate": "2020-03-03T10:04:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MTcyNA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386991724", "bodyText": "This line should be moved no?", "author": "cescoffier", "createdAt": "2020-03-03T12:38:28Z", "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){\n+            System.out.println(args.length);\n+            printUsage();\n+            exit(1);\n+        }\n+        String BUCKET_NAME = args[0];\n+        String API_KEY = args[1];\n+        String SERVICE_INSTANCE_ID = args[2];\n+        String bucketFile = args[3];\n+        String oldPmapFile = args[4];\n+        String newPmapFile = args[5];\n+\n+        _cosClient = createClient(API_KEY, SERVICE_INSTANCE_ID, ENDPOINT_URL, LOCATION);\n+\n+        System.out.println(\"Downloading file from storage: \" + bucketFile + \" to local: \" + oldPmapFile);\n+        try{\n+            downloadFile(_cosClient, BUCKET_NAME, bucketFile, oldPmapFile);\n+        } catch (AmazonS3Exception s3Execpetion){\n+            System.out.println(\"Download failed with: \" + s3Execpetion.getMessage());\n+            _cosClient.shutdown();\n+            exit(1);\n+        }\n+\n+        int oldRss = getRssFromFile(oldPmapFile);\n+        int newRss = getRssFromFile(newPmapFile);\n+        boolean rssRegression = false;\n+\n+        if( oldRss != -1 && newRss != -1) {\n+            System.out.println(\"Old RSS: \" + oldRss);\n+            System.out.println(\"New RSS: \" + newRss);\n+\n+            rssRegression = newRss > (oldRss * 1.1);\n+            System.out.println(\"Regression: \" + rssRegression);\n+\n+            System.out.println(\"Uploading new pmap file to storage: \" + bucketFile + \" from local: \" + oldPmapFile);", "originalCommit": "6d58aa7af1ce84e99847b716c597fc22cdb7d359", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5ODQ4OA==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r386998488", "bodyText": "moved that log statement", "author": "johnaohara", "createdAt": "2020-03-03T12:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MTcyNA=="}], "type": "inlineReview", "revised_code": {"commit": "042dfe58465546880907b57db490d541216abf43", "chunk": "diff --git a/.github/RssRegression.java b/.github/RssRegression.java\nindex 21e8cce2..d9f8910b 100755\n--- a/.github/RssRegression.java\n+++ b/.github/RssRegression.java\n\n@@ -73,7 +73,6 @@ public class RssRegression {\n             rssRegression = newRss > (oldRss * 1.1);\n             System.out.println(\"Regression: \" + rssRegression);\n \n-            System.out.println(\"Uploading new pmap file to storage: \" + bucketFile + \" from local: \" + oldPmapFile);\n         }\n         _cosClient.shutdown();\n \n"}}, {"oid": "042dfe58465546880907b57db490d541216abf43", "url": "https://github.com/quarkusio/quarkus-quickstarts/commit/042dfe58465546880907b57db490d541216abf43", "message": "Move upload log statement", "committedDate": "2020-03-03T12:51:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387472842", "bodyText": "fyi you can greatly simplify the parsing and usage text by using picocli ... not a blocker for the PR but just a pointer.  example: https://github.com/maxandersen/jbang/blob/master/examples/smee.java#L51", "author": "maxandersen", "createdAt": "2020-03-04T06:37:23Z", "path": ".github/RssRegression.java", "diffHunk": "@@ -0,0 +1,182 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+//DEPS com.ibm.cos:ibm-cos-java-sdk:2.1.0\n+//DEPS javax.xml.bind:jaxb-api:2.4.0-b180830.0359\n+\n+package io.quarkus;\n+\n+import com.ibm.cloud.objectstorage.ClientConfiguration;\n+import com.ibm.cloud.objectstorage.SDKGlobalConfiguration;\n+import com.ibm.cloud.objectstorage.auth.AWSCredentials;\n+import com.ibm.cloud.objectstorage.auth.AWSStaticCredentialsProvider;\n+import com.ibm.cloud.objectstorage.client.builder.AwsClientBuilder.EndpointConfiguration;\n+import com.ibm.cloud.objectstorage.oauth.BasicIBMOAuthCredentials;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3;\n+import com.ibm.cloud.objectstorage.services.s3.AmazonS3ClientBuilder;\n+import com.ibm.cloud.objectstorage.services.s3.model.AmazonS3Exception;\n+import com.ibm.cloud.objectstorage.services.s3.model.GetObjectRequest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+\n+import static java.lang.System.exit;\n+\n+public class RssRegression {\n+\n+    private static AmazonS3 _cosClient;\n+    private static String ENDPOINT_URL;\n+    private static String LOCATION;\n+\n+    static {\n+        ENDPOINT_URL = \"https://s3.eu-gb.cloud-object-storage.appdomain.cloud\";\n+        SDKGlobalConfiguration.IAM_ENDPOINT = \"https://iam.cloud.ibm.com/identity/token\";\n+        LOCATION = \"eu-gb\";\n+    }\n+\n+    /**\n+     * @param args\n+     */\n+    public static void main(String[] args) {\n+\n+        if(args.length != 6){", "originalCommit": "042dfe58465546880907b57db490d541216abf43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxOTYyOQ==", "url": "https://github.com/quarkusio/quarkus-quickstarts/pull/477#discussion_r387619629", "bodyText": "Thanks for the pointer", "author": "johnaohara", "createdAt": "2020-03-04T11:56:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg=="}], "type": "inlineReview", "revised_code": null}]}