{"pr_number": 404, "pr_title": "Multiple Android / iOS improvements", "pr_createdAt": "2020-03-04T17:34:42Z", "pr_url": "https://github.com/gluonhq/substrate/pull/404", "timeline": [{"oid": "388087ea8bcdf120a0a1df7c49eee2907610e2fd", "url": "https://github.com/gluonhq/substrate/commit/388087ea8bcdf120a0a1df7c49eee2907610e2fd", "message": "Add additional libraries", "committedDate": "2020-02-26T18:24:26Z", "type": "commit"}, {"oid": "7a1beebaab6179e63f3e5e385eb3be829462bbf8", "url": "https://github.com/gluonhq/substrate/commit/7a1beebaab6179e63f3e5e385eb3be829462bbf8", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-02-26T18:24:48Z", "type": "commit"}, {"oid": "cc826d421ef87b9c803d6a30cd32765aff12810e", "url": "https://github.com/gluonhq/substrate/commit/cc826d421ef87b9c803d6a30cd32765aff12810e", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-02-26T22:18:42Z", "type": "commit"}, {"oid": "290094b52f3eadf8b25dac6a5384a6d0176e0a39", "url": "https://github.com/gluonhq/substrate/commit/290094b52f3eadf8b25dac6a5384a6d0176e0a39", "message": "Merge branch 'master' into additionalLibs", "committedDate": "2020-02-27T13:38:40Z", "type": "commit"}, {"oid": "0146fb519b3a680a511ba2b02a5b3436b57048bf", "url": "https://github.com/gluonhq/substrate/commit/0146fb519b3a680a511ba2b02a5b3436b57048bf", "message": "Should have fixed r+w+e page problem", "committedDate": "2020-02-27T18:36:59Z", "type": "commit"}, {"oid": "8aec0bde5b7e4d8c2ba5e6d9659d5df66f0f4f9f", "url": "https://github.com/gluonhq/substrate/commit/8aec0bde5b7e4d8c2ba5e6d9659d5df66f0f4f9f", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-02-27T18:37:09Z", "type": "commit"}, {"oid": "582e42d0816c0508ae187b442583f2658963d73b", "url": "https://github.com/gluonhq/substrate/commit/582e42d0816c0508ae187b442583f2658963d73b", "message": "Bumped target sdk back to 28", "committedDate": "2020-02-27T18:44:29Z", "type": "commit"}, {"oid": "3b92936e4dac034f8bceaf8d1df4b3b66c67142e", "url": "https://github.com/gluonhq/substrate/commit/3b92936e4dac034f8bceaf8d1df4b3b66c67142e", "message": "Removed debug", "committedDate": "2020-02-27T18:50:25Z", "type": "commit"}, {"oid": "b824805f76070a0a2045302c7a55b97e70fb8067", "url": "https://github.com/gluonhq/substrate/commit/b824805f76070a0a2045302c7a55b97e70fb8067", "message": "Reverted location of imports (no idea why it was moved)", "committedDate": "2020-02-27T19:01:19Z", "type": "commit"}, {"oid": "096cbfb4ebaf3cc99ee45ccdf8622c01abb1aa28", "url": "https://github.com/gluonhq/substrate/commit/096cbfb4ebaf3cc99ee45ccdf8622c01abb1aa28", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-02-28T08:48:59Z", "type": "commit"}, {"oid": "683952887fed1b308c2265d3224e1c1b35fd9cb0", "url": "https://github.com/gluonhq/substrate/commit/683952887fed1b308c2265d3224e1c1b35fd9cb0", "message": "Remove merge artifacts", "committedDate": "2020-02-28T08:51:54Z", "type": "commit"}, {"oid": "dcbcc8b10032cdcff4d8a9e2c06dba9e26ce9ff4", "url": "https://github.com/gluonhq/substrate/commit/dcbcc8b10032cdcff4d8a9e2c06dba9e26ce9ff4", "message": "Other libs", "committedDate": "2020-02-28T14:02:12Z", "type": "commit"}, {"oid": "2d9f43a00bacb496943b6f32b0499c954e843a29", "url": "https://github.com/gluonhq/substrate/commit/2d9f43a00bacb496943b6f32b0499c954e843a29", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-02-28T16:51:00Z", "type": "commit"}, {"oid": "b53d76def8eefc26a96e249bfbf30df7db4027d1", "url": "https://github.com/gluonhq/substrate/commit/b53d76def8eefc26a96e249bfbf30df7db4027d1", "message": "Split `.c` code, added glibc_shim (enables linking against graal libs)", "committedDate": "2020-02-28T21:11:42Z", "type": "commit"}, {"oid": "cb2b8c9b212a040d0050531c7929cc9fa67ccf87", "url": "https://github.com/gluonhq/substrate/commit/cb2b8c9b212a040d0050531c7929cc9fa67ccf87", "message": "Added opt-out for precompiled classes", "committedDate": "2020-03-04T17:00:41Z", "type": "commit"}, {"oid": "4dcbb861c01eca91fef07a3f397376b779fa8bbf", "url": "https://github.com/gluonhq/substrate/commit/4dcbb861c01eca91fef07a3f397376b779fa8bbf", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-03-04T17:01:08Z", "type": "commit"}, {"oid": "98ddf9da143125b74d9834b663077df0f436c4c4", "url": "https://github.com/gluonhq/substrate/commit/98ddf9da143125b74d9834b663077df0f436c4c4", "message": "Use precompiled classes by default", "committedDate": "2020-03-04T17:02:50Z", "type": "commit"}, {"oid": "c1954f1b216c373d89823e23a4aa7373aa0a280e", "url": "https://github.com/gluonhq/substrate/commit/c1954f1b216c373d89823e23a4aa7373aa0a280e", "message": "Removed stub function", "committedDate": "2020-03-04T17:13:17Z", "type": "commit"}, {"oid": "973c6ca7ceb2c6e2ae16b3858965630f6f88dd75", "url": "https://github.com/gluonhq/substrate/commit/973c6ca7ceb2c6e2ae16b3858965630f6f88dd75", "message": "Merge remote-tracking branch 'gluonhq/master' into additionalLibs", "committedDate": "2020-03-04T17:13:27Z", "type": "commit"}, {"oid": "46443ca09587e432300229a19a825e05f048b1ce", "url": "https://github.com/gluonhq/substrate/commit/46443ca09587e432300229a19a825e05f048b1ce", "message": "Removed duplicate libs", "committedDate": "2020-03-04T21:38:47Z", "type": "commit"}, {"oid": "3f82bc272681b8b005b53faa1c10ba31408bff0f", "url": "https://github.com/gluonhq/substrate/commit/3f82bc272681b8b005b53faa1c10ba31408bff0f", "message": "Make Codacy happy", "committedDate": "2020-03-04T21:51:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwNzg4Ng==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388207886", "bodyText": "New API should have a way to be set from SubstrateDispatcher::main as well (via System property).", "author": "jperedadnr", "createdAt": "2020-03-05T10:34:49Z", "path": "src/main/java/com/gluonhq/substrate/ProjectConfiguration.java", "diffHunk": "@@ -48,6 +48,7 @@\n \n     private boolean usePrismSW = false;\n     private boolean verbose = false;\n+    private boolean usePrecompiledCode = true;", "originalCommit": "3f82bc272681b8b005b53faa1c10ba31408bff0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzNjc4OA==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388336788", "bodyText": "Is this the right approach?", "author": "lazar-mitrovic", "createdAt": "2020-03-05T14:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwNzg4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java b/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\nindex 81cf8ec..32cff1d 100644\n--- a/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\n\n@@ -48,7 +48,7 @@ public class ProjectConfiguration {\n \n     private boolean usePrismSW = false;\n     private boolean verbose = false;\n-    private boolean usePrecompiledCode = true;\n+    private boolean usePrecompiledCode;\n \n     private Triplet targetTriplet;\n     private Triplet hostTriplet = Triplet.fromCurrentOS();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMzI0Mw==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388233243", "bodyText": "This means that you copy the sources even for the precompiled case? It is not necessary, is it?", "author": "jperedadnr", "createdAt": "2020-03-05T11:24:06Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -152,16 +159,38 @@ public boolean link() throws IOException, InterruptedException {\n         Files.createDirectories(apkLibPath);\n         Files.createDirectories(apkLibArm64Path);\n         Path androidManifestPath = apkPath.resolve(\"AndroidManifest.xml\");\n-        Path dalvikActivityPackage = apkClassPath.resolve(\"com/gluonhq/helloandroid\");\n-        Path dalvikKeyCodePackage = apkClassPath.resolve(\"javafx/scene/input\");\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity.class\", dalvikActivityPackage.resolve(\"MainActivity.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$1.class\", dalvikActivityPackage.resolve(\"MainActivity$1.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$2.class\", dalvikActivityPackage.resolve(\"MainActivity$2.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$3.class\", dalvikActivityPackage.resolve(\"MainActivity$3.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$InternalSurfaceView.class\", dalvikActivityPackage.resolve(\"MainActivity$InternalSurfaceView.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/KeyCode.class\", dalvikKeyCodePackage.resolve(\"KeyCode.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/KeyCode$KeyCodeClass.class\", dalvikKeyCodePackage.resolve(\"KeyCode$KeyCodeClass.class\"));\n \n+        String androidCodeLocation = \"/native/android/dalvik\";\n+\n+        String androidSrc = androidCodeLocation + \"/source/\";\n+        String androidPrecompiled = androidCodeLocation + \"/precompiled/class/\";\n+\n+        if (!Files.isDirectory(apkAndroidSourcePath)) {", "originalCommit": "3f82bc272681b8b005b53faa1c10ba31408bff0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMyMTU1OA==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388321558", "bodyText": "I was aiming to provide user an option do modify sources at later time (and then just flip the switch in configuration to recompile it)", "author": "lazar-mitrovic", "createdAt": "2020-03-05T14:19:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMzI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 1f6ece9..ea08999 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -171,7 +171,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n             }\n         }\n         \n-        if (!projectConfiguration.isUsePrecompiledCode()) {\n+        if (projectConfiguration.isUsePrecompiledCode()) {\n             for (String classFile : compiledGlueCode) {\n                 FileOps.copyResource(androidPrecompiled + classFile + \".class\", apkClassPath.resolve(classFile + \".class\"));\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0MDk0OA==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388240948", "bodyText": "I get these warnings compiling the additional sources for Android:\n[SUB] glibc_shim.c:8:23: warning: incompatible pointer types passing 'struct stat64 *' to parameter of type 'struct stat *' >\n[SUB]     return stat(path, stat_buf);\n[SUB]                       ^~~~~~~~\n[SUB] /home/user/.gluon/substrate/Android/ndk-bundle/toolchains/llvm/prebuil>\n[SUB] int stat(const char* __path, struct stat* __buf);\n[SUB]                                           ^\n[SUB] glibc_shim.c:13:24: warning: incompatible pointer types passing 'struct s>\n[SUB]     return lstat(path, stat_buf);\n[SUB]                        ^~~~~~~~\n[SUB] /home/user/.gluon/substrate/Android/ndk-bundle/toolchains/llvm/prebuil>\n[SUB] int lstat(const char* __path, struct stat* __buf);\n[SUB]                                            ^\n[SUB] glibc_shim.c:18:26: warning: incompatible pointer types passing 'struct s>\n[SUB]     return fstat(fildes, stat_buf);\n[SUB]                          ^~~~~~~~\n[SUB] /home/user/.gluon/substrate/Android/ndk-bundle/toolchains/llvm/prebuil>\n[SUB] int fstat(int __fd, struct stat* __buf);\n[SUB]                                  ^\n[SUB] glibc_shim.c:49:30: warning: incompatible pointer to integer conversion p>\n[SUB]     return mknod(path, mode, dev);\n[SUB]                              ^~~\n[SUB]                              *\n[SUB] /home/user/.gluon/substrate/Android/ndk-bundle/toolchains/llvm/prebuil>\n[SUB] int mknod(const char* __path, mode_t __mode, dev_t __dev);\n[SUB]                                                    ^\n[SUB] 4 warnings generated.", "author": "jperedadnr", "createdAt": "2020-03-05T11:40:54Z", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -322,7 +321,7 @@ protected boolean compileAdditionalSources()\n             FileOps.copyResource(getAdditionalSourceFileLocation()  + fileName, workDir.resolve(fileName));\n         }\n   \n-        int result = processRunner.runProcess(\"compile additional sources\", workDir.toFile());\n+        int result = processRunner.runProcess(\"compile-additional-sources\", workDir.toFile());", "originalCommit": "3f82bc272681b8b005b53faa1c10ba31408bff0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMzNTA2NQ==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388335065", "bodyText": "Ouch, it looks like one more bionic quirk (using stat64 everywhere).\nThis should be fixed now", "author": "lazar-mitrovic", "createdAt": "2020-03-05T14:40:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0MDk0OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0Mjg5Mw==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388242893", "bodyText": "Is it me, or is this inverted?", "author": "jperedadnr", "createdAt": "2020-03-05T11:45:09Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -152,16 +159,38 @@ public boolean link() throws IOException, InterruptedException {\n         Files.createDirectories(apkLibPath);\n         Files.createDirectories(apkLibArm64Path);\n         Path androidManifestPath = apkPath.resolve(\"AndroidManifest.xml\");\n-        Path dalvikActivityPackage = apkClassPath.resolve(\"com/gluonhq/helloandroid\");\n-        Path dalvikKeyCodePackage = apkClassPath.resolve(\"javafx/scene/input\");\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity.class\", dalvikActivityPackage.resolve(\"MainActivity.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$1.class\", dalvikActivityPackage.resolve(\"MainActivity$1.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$2.class\", dalvikActivityPackage.resolve(\"MainActivity$2.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$3.class\", dalvikActivityPackage.resolve(\"MainActivity$3.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/MainActivity$InternalSurfaceView.class\", dalvikActivityPackage.resolve(\"MainActivity$InternalSurfaceView.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/KeyCode.class\", dalvikKeyCodePackage.resolve(\"KeyCode.class\"));\n-        FileOps.copyResource(\"/native/android/dalvik/KeyCode$KeyCodeClass.class\", dalvikKeyCodePackage.resolve(\"KeyCode$KeyCodeClass.class\"));\n \n+        String androidCodeLocation = \"/native/android/dalvik\";\n+\n+        String androidSrc = androidCodeLocation + \"/source/\";\n+        String androidPrecompiled = androidCodeLocation + \"/precompiled/class/\";\n+\n+        if (!Files.isDirectory(apkAndroidSourcePath)) {\n+            for (String srcFile : sourceGlueCode) {\n+                FileOps.copyResource(androidSrc + srcFile + \".java\", apkAndroidSourcePath.resolve(srcFile + \".java\"));\n+            }\n+        }\n+        \n+        if (!projectConfiguration.isUsePrecompiledCode()) {", "originalCommit": "3f82bc272681b8b005b53faa1c10ba31408bff0f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMyMTgyMw==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388321823", "bodyText": "Yep it is.. Will fix it right away", "author": "lazar-mitrovic", "createdAt": "2020-03-05T14:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0Mjg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 1f6ece9..ea08999 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -171,7 +171,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n             }\n         }\n         \n-        if (!projectConfiguration.isUsePrecompiledCode()) {\n+        if (projectConfiguration.isUsePrecompiledCode()) {\n             for (String classFile : compiledGlueCode) {\n                 FileOps.copyResource(androidPrecompiled + classFile + \".class\", apkClassPath.resolve(classFile + \".class\"));\n             }\n"}}, {"oid": "7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "url": "https://github.com/gluonhq/substrate/commit/7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "message": "Added System property, fixed wrong calls etc", "committedDate": "2020-03-05T14:38:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTQ3Nw==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388385477", "bodyText": "Probably we want to keep it true (via client plugin main is not called)", "author": "jperedadnr", "createdAt": "2020-03-05T15:53:49Z", "path": "src/main/java/com/gluonhq/substrate/ProjectConfiguration.java", "diffHunk": "@@ -48,7 +48,7 @@\n \n     private boolean usePrismSW = false;\n     private boolean verbose = false;\n-    private boolean usePrecompiledCode = true;\n+    private boolean usePrecompiledCode;", "originalCommit": "7064b8e8a72ab3b9efd7b45f7bde0909c20cb434", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQyNzE3NA==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388427174", "bodyText": "Isn't this equivalent (constructor should always be called, right)?", "author": "lazar-mitrovic", "createdAt": "2020-03-05T16:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTQ3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0ODMyMg==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388448322", "bodyText": "Yes, you are right, but we do those settings in SubstrateDispatcher(via main, when running from command line, or gradle tests, or via client-plugin).", "author": "jperedadnr", "createdAt": "2020-03-05T17:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTQ3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU2Njk0OQ==", "url": "https://github.com/gluonhq/substrate/pull/404#discussion_r388566949", "bodyText": "This should be fixed now", "author": "lazar-mitrovic", "createdAt": "2020-03-05T21:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTQ3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5006420aa4120de1b9e7684a82c51bb76e204d34", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java b/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\nindex 32cff1d..f4be062 100644\n--- a/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/ProjectConfiguration.java\n\n@@ -48,7 +48,7 @@ public class ProjectConfiguration {\n \n     private boolean usePrismSW = false;\n     private boolean verbose = false;\n-    private boolean usePrecompiledCode;\n+    private boolean usePrecompiledCode = true;\n \n     private Triplet targetTriplet;\n     private Triplet hostTriplet = Triplet.fromCurrentOS();\n"}}, {"oid": "7843972297213dd7bd8c7e4f133de1821ce1313b", "url": "https://github.com/gluonhq/substrate/commit/7843972297213dd7bd8c7e4f133de1821ce1313b", "message": "Reverted `--no-server` removal", "committedDate": "2020-03-05T16:58:41Z", "type": "commit"}, {"oid": "5006420aa4120de1b9e7684a82c51bb76e204d34", "url": "https://github.com/gluonhq/substrate/commit/5006420aa4120de1b9e7684a82c51bb76e204d34", "message": "Fixed where default value is set", "committedDate": "2020-03-05T20:01:37Z", "type": "commit"}]}