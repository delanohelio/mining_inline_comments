{"pr_number": 264, "pr_title": "Use -H:ResourceConfigurationFiles", "pr_createdAt": "2020-01-13T10:32:38Z", "pr_url": "https://github.com/gluonhq/substrate/pull/264", "timeline": [{"oid": "495e3e7ef3c9721c38e431dff656761807198caa", "url": "https://github.com/gluonhq/substrate/commit/495e3e7ef3c9721c38e431dff656761807198caa", "message": "use single -H:ResourceConfigurationFiles instead of multiple -H:IncludeResources", "committedDate": "2020-01-13T10:30:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NzY2Mg==", "url": "https://github.com/gluonhq/substrate/pull/264#discussion_r365767662", "bodyText": "Maybe we could create a file with the default resources instead of writing it every time? Only adding the user list will be required.", "author": "jperedadnr", "createdAt": "2020-01-13T12:00:24Z", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -536,6 +520,41 @@ private Path createJNIConfig(String suffix) throws IOException {\n         return jniPath;\n     }\n \n+    private Path createResourceConfig(String suffix) throws IOException {\n+        Path gvmPath = paths.getGvmPath();\n+        Path resourcePath = gvmPath.resolve(\n+                Strings.substitute(Constants.RESOURCE_ARCH_FILE, Map.of(\"archOs\", suffix)));\n+        Files.deleteIfExists(resourcePath);\n+        try (BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(resourcePath.toFile())))) {\n+            bw.write(\"{\\n\");\n+            bw.write(\"  \\\"resources\\\": [\\n\");\n+            boolean patternHasBeenWritten = false;\n+            for (String extension : RESOURCES_BY_EXTENSION) {", "originalCommit": "495e3e7ef3c9721c38e431dff656761807198caa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}