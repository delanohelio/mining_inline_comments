{"pr_number": 321, "pr_title": "#317 Check if app exist before running", "pr_createdAt": "2020-02-04T17:16:01Z", "pr_url": "https://github.com/gluonhq/substrate/pull/321", "timeline": [{"oid": "5da7164159737112dffbc13248c589151e2e2ca6", "url": "https://github.com/gluonhq/substrate/commit/5da7164159737112dffbc13248c589151e2e2ca6", "message": "#317 Check if app exist before running", "committedDate": "2020-02-04T17:14:40Z", "type": "commit"}, {"oid": "b9c25e57ac9e2366c4ac90178a276955815e90f7", "url": "https://github.com/gluonhq/substrate/commit/b9c25e57ac9e2366c4ac90178a276955815e90f7", "message": "Remove unused import", "committedDate": "2020-02-04T17:21:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3MjUzMg==", "url": "https://github.com/gluonhq/substrate/pull/321#discussion_r375072532", "bodyText": "Although, there is inherently nothing wrong with this code, the intent would be clearer if these tests have their own lines.\nfinal Path appPath = Objects.requireNonNull(paths.getAppPath(), \"Application path can't be null\");\nfinal String appName = Objects.requireNonNull(projectConfiguration.getAppName(), \"Application name can't be null\");\nif (!Files.exists(appPath.resolve(appName))) {\n    throw new IOException(\"Application not found at path \" + appName);\n}\nProcess runProcess = startAppProcess(appPath, appName);\n\nor something like this:\nObjects.requireNonNull(paths.getAppPath(), \"Application path can't be null\");\nObjects.requireNonNull(projectConfiguration.getAppName(), \"Application name can't be null\");\nfinal Path appPath = paths.getAppPath().resolve(projectConfiguration.getAppName());\nif (!Files.exists(appPath)) {\n     throw new IOException(\"Application not found at path \" + appPath);\n}", "author": "abhinayagarwal", "createdAt": "2020-02-05T06:01:36Z", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -287,6 +287,11 @@ public String run(Path appPath, String appName) throws IOException, InterruptedE\n      */\n     @Override\n     public boolean runUntilEnd() throws IOException, InterruptedException {\n+        Path app = Objects.requireNonNull(paths.getAppPath(), \"Application path can't be null\")\n+                .resolve(Objects.requireNonNull(projectConfiguration.getAppName(), \"Application name can't be null\"));\n+        if (!Files.exists(app)) {\n+            throw new IOException(\"Application not found at path \" + app.toString());\n+        }\n         Process runProcess = startAppProcess(paths.getAppPath(), projectConfiguration.getAppName());", "originalCommit": "b9c25e57ac9e2366c4ac90178a276955815e90f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE1NzY0OA==", "url": "https://github.com/gluonhq/substrate/pull/321#discussion_r375157648", "bodyText": "changed", "author": "jperedadnr", "createdAt": "2020-02-05T09:56:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3MjUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "fb57133680095e3ea7b237d4205703e5bece368b", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\nindex 5e2a5af..ad4a480 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n\n@@ -287,12 +287,14 @@ public abstract class AbstractTargetConfiguration implements TargetConfiguration\n      */\n     @Override\n     public boolean runUntilEnd() throws IOException, InterruptedException {\n-        Path app = Objects.requireNonNull(paths.getAppPath(), \"Application path can't be null\")\n-                .resolve(Objects.requireNonNull(projectConfiguration.getAppName(), \"Application name can't be null\"));\n+        Path appPath = Objects.requireNonNull(paths.getAppPath(),\n+                \"Application path can't be null\");\n+        Path app = appPath.resolve(Objects.requireNonNull(projectConfiguration.getAppName(),\n+                \"Application name can't be null\"));\n         if (!Files.exists(app)) {\n             throw new IOException(\"Application not found at path \" + app.toString());\n         }\n-        Process runProcess = startAppProcess(paths.getAppPath(), projectConfiguration.getAppName());\n+        Process runProcess = startAppProcess(appPath, projectConfiguration.getAppName());\n         InputStream is = runProcess.getInputStream();\n         asynPrintFromInputStream(is);\n         int result = runProcess.waitFor();\n"}}, {"oid": "fb57133680095e3ea7b237d4205703e5bece368b", "url": "https://github.com/gluonhq/substrate/commit/fb57133680095e3ea7b237d4205703e5bece368b", "message": "Changes based on feedback", "committedDate": "2020-02-05T09:56:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2MjM5NQ==", "url": "https://github.com/gluonhq/substrate/pull/321#discussion_r375162395", "bodyText": "I particularly don't like this line: checking for null inside a method call. May be its just me :)", "author": "abhinayagarwal", "createdAt": "2020-02-05T10:05:41Z", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -287,7 +287,14 @@ public String run(Path appPath, String appName) throws IOException, InterruptedE\n      */\n     @Override\n     public boolean runUntilEnd() throws IOException, InterruptedException {\n-        Process runProcess = startAppProcess(paths.getAppPath(), projectConfiguration.getAppName());\n+        Path appPath = Objects.requireNonNull(paths.getAppPath(),\n+                \"Application path can't be null\");\n+        Path app = appPath.resolve(Objects.requireNonNull(projectConfiguration.getAppName(),\n+                \"Application name can't be null\"));", "originalCommit": "fb57133680095e3ea7b237d4205703e5bece368b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE5ODYzMQ==", "url": "https://github.com/gluonhq/substrate/pull/321#discussion_r375198631", "bodyText": "Fixed", "author": "jperedadnr", "createdAt": "2020-02-05T11:20:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE2MjM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "97edb4ba249412ff6b3f5cc00fd7d52715120562", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\nindex ad4a480..cc67b0e 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n\n@@ -289,12 +289,13 @@ public abstract class AbstractTargetConfiguration implements TargetConfiguration\n     public boolean runUntilEnd() throws IOException, InterruptedException {\n         Path appPath = Objects.requireNonNull(paths.getAppPath(),\n                 \"Application path can't be null\");\n-        Path app = appPath.resolve(Objects.requireNonNull(projectConfiguration.getAppName(),\n-                \"Application name can't be null\"));\n+        String appName = Objects.requireNonNull(projectConfiguration.getAppName(),\n+                \"Application name can't be null\");\n+        Path app = appPath.resolve(appName);\n         if (!Files.exists(app)) {\n             throw new IOException(\"Application not found at path \" + app.toString());\n         }\n-        Process runProcess = startAppProcess(appPath, projectConfiguration.getAppName());\n+        Process runProcess = startAppProcess(appPath, appName);\n         InputStream is = runProcess.getInputStream();\n         asynPrintFromInputStream(is);\n         int result = runProcess.waitFor();\n"}}, {"oid": "97edb4ba249412ff6b3f5cc00fd7d52715120562", "url": "https://github.com/gluonhq/substrate/commit/97edb4ba249412ff6b3f5cc00fd7d52715120562", "message": "More refactoring", "committedDate": "2020-02-05T10:32:31Z", "type": "commit"}]}