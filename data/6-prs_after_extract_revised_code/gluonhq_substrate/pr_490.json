{"pr_number": 490, "pr_title": "Fix download condition for JavaFX static libs", "pr_createdAt": "2020-04-03T03:51:47Z", "pr_url": "https://github.com/gluonhq/substrate/pull/490", "timeline": [{"oid": "689c63ce9525d6b190d43dc9b649f3a02604b90b", "url": "https://github.com/gluonhq/substrate/commit/689c63ce9525d6b190d43dc9b649f3a02604b90b", "message": "Fix download condition for JavaFX static libs", "committedDate": "2020-04-03T03:42:54Z", "type": "commit"}, {"oid": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96", "url": "https://github.com/gluonhq/substrate/commit/05b21f505f0ca90abeea53f3c1075ba5bb35ad96", "message": "Merge branch 'master' of https://github.com/gluonhq/substrate into jfx-static", "committedDate": "2020-04-03T08:17:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg==", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402856382", "bodyText": "if the check for the JavaFX jars is true, means that some jar is missing, therefore: downloadJavaFXStatic = true;\nAdding \"and either libglassXX.a\"  doesn't help. Shouldn't it be noneMatch?\nif (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) || \n     JAVAFX_STATIC_FILES.stream().map(s -> new File(path, s)).noneMatch(File::exists)) {", "author": "jperedadnr", "createdAt": "2020-04-03T08:58:07Z", "path": "src/main/java/com/gluonhq/substrate/util/FileDeps.java", "diffHunk": "@@ -231,10 +234,9 @@ private boolean setupDependencies() throws IOException {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream()\n-                        .map(s -> new File(path, s))\n-                        .anyMatch(f -> !f.exists())) {\n-                    Logger.logDebug(\"jar file not found\");\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&", "originalCommit": "05b21f505f0ca90abeea53f3c1075ba5bb35ad96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMjYzOQ==", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402902639", "bodyText": "Have you checked #489 for explanation?", "author": "abhinayagarwal", "createdAt": "2020-04-03T10:13:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxODA2MQ==", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402918061", "bodyText": "Yes, I did.\nWe used the javafx list to verify that those files are available or not. If any of them is missing, we download.\nNow we need to split that in two: jars and libs. Okay.\nBut your code is doing:\n\nif any jar is missing and either lib exists -> download\n\nso at this point, if a jar is missing but one lib exist, it won't download. Or if all jars exist, but no lib is found, it won't download.\nImo, the check should be:\n\nif any jar is missing -> download, or\nif none of these libs is found -> download", "author": "jperedadnr", "createdAt": "2020-04-03T10:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxOTgzOQ==", "url": "https://github.com/gluonhq/substrate/pull/490#discussion_r402919839", "bodyText": "Makes sense. Thank you for the explanation.", "author": "abhinayagarwal", "createdAt": "2020-04-03T10:47:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1NjM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ba960f15dc5692851bf08eb7e4404129f9aa6c0a", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/util/FileDeps.java b/src/main/java/com/gluonhq/substrate/util/FileDeps.java\nindex 5004f2f..0970abc 100644\n--- a/src/main/java/com/gluonhq/substrate/util/FileDeps.java\n+++ b/src/main/java/com/gluonhq/substrate/util/FileDeps.java\n\n@@ -234,8 +234,8 @@ public final class FileDeps {\n                 downloadJavaFXStatic = true;\n             } else {\n                 String path = javafxStatic.toString();\n-                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) &&\n-                        JAVAFX_STATIC_FILES.stream().map(s -> new File(path, s)).anyMatch(File::exists)) {\n+                if (JAVAFX_FILES.stream().map(s -> new File(path, s)).anyMatch(f -> !f.exists()) ||\n+                        JAVAFX_STATIC_FILES.stream().map(s -> new File(path, s)).noneMatch(File::exists)) {\n                     Logger.logDebug(\"JavaFX file not found\");\n                     downloadJavaFXStatic = true;\n                 } else if (configuration.isEnableCheckHash()) {\n"}}, {"oid": "ba960f15dc5692851bf08eb7e4404129f9aa6c0a", "url": "https://github.com/gluonhq/substrate/commit/ba960f15dc5692851bf08eb7e4404129f9aa6c0a", "message": "Fix condition for JavaFX lib download", "committedDate": "2020-04-03T10:46:49Z", "type": "commit"}]}