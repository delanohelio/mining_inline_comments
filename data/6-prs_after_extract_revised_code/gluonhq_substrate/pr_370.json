{"pr_number": 370, "pr_title": "use --no-server and set Xmx to a higher value when invoking native-image", "pr_createdAt": "2020-02-20T09:57:07Z", "pr_url": "https://github.com/gluonhq/substrate/pull/370", "timeline": [{"oid": "a42378f3a68bc3c9bee5f70303d7ff17dd1c5ea8", "url": "https://github.com/gluonhq/substrate/commit/a42378f3a68bc3c9bee5f70303d7ff17dd1c5ea8", "message": "use --no-server and set Xmx to a higher value when invoking native-image\nFixes #369 and #362", "committedDate": "2020-02-20T09:54:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTY0Mw==", "url": "https://github.com/gluonhq/substrate/pull/370#discussion_r381901643", "bodyText": "why 24G? Wouldn't it depend on the user's machine? Maybe we need some system property to set it?", "author": "jperedadnr", "createdAt": "2020-02-20T10:10:07Z", "path": "src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java", "diffHunk": "@@ -132,6 +132,8 @@ public boolean compile(String cp) throws IOException, InterruptedException {\n         }\n         compileRunner.addArg(\"--report-unsupported-elements-at-runtime\");\n         compileRunner.addArg(\"-Djdk.internal.lambda.eagerlyInitialize=false\");\n+        compileRunner.addArg(\"--no-server\");\n+        compileRunner.addArg(\"-J-Xmx24G\");", "originalCommit": "a42378f3a68bc3c9bee5f70303d7ff17dd1c5ea8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwODE2OQ==", "url": "https://github.com/gluonhq/substrate/pull/370#discussion_r381908169", "bodyText": "I'm ok with a system property that, if set, can overrule this value. But we still need a default.\n@lazar-mitrovic do you think 24G is an ok default?", "author": "johanvos", "createdAt": "2020-02-20T10:21:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjA0NQ==", "url": "https://github.com/gluonhq/substrate/pull/370#discussion_r381972045", "bodyText": "I had issues when building on older llvm with graalpython included, where I had to bump it to > 40G (with swap enabled).\nIf you look at SubstrateVM's source it is clamped down to 80% of user memory, so maybe bumping this up to something crazy high like 128G wouldn't be a bad idea.", "author": "lazar-mitrovic", "createdAt": "2020-02-20T12:36:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTY0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3Mjk5MQ==", "url": "https://github.com/gluonhq/substrate/pull/370#discussion_r381972991", "bodyText": "Or omitting Xmx since docs state that using only --no-server would:\nIf you run with --no-server option, you will get the whole 80% of what is reported as physical RAM as the baseline. This mode respects -Xmx arguments additionally.", "author": "lazar-mitrovic", "createdAt": "2020-02-20T12:38:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMTY0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c69c3ac25243c5103f674b72f27048a7e18d6dff", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\nindex 512c466..e3df606 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AbstractTargetConfiguration.java\n\n@@ -133,7 +133,6 @@ public abstract class AbstractTargetConfiguration implements TargetConfiguration\n         compileRunner.addArg(\"--report-unsupported-elements-at-runtime\");\n         compileRunner.addArg(\"-Djdk.internal.lambda.eagerlyInitialize=false\");\n         compileRunner.addArg(\"--no-server\");\n-        compileRunner.addArg(\"-J-Xmx24G\");\n         compileRunner.addArg(\"-H:+ExitAfterRelocatableImageWrite\");\n         compileRunner.addArg(\"-H:TempDirectory=\"+tmpDir);\n         compileRunner.addArg(\"-H:+SharedLibrary\");\n"}}, {"oid": "c69c3ac25243c5103f674b72f27048a7e18d6dff", "url": "https://github.com/gluonhq/substrate/commit/c69c3ac25243c5103f674b72f27048a7e18d6dff", "message": "don't specify xmx", "committedDate": "2020-02-20T12:47:41Z", "type": "commit"}]}