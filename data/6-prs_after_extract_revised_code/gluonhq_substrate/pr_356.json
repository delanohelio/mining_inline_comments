{"pr_number": 356, "pr_title": "#354 Use genSrc/android to let the user modify the Android resources", "pr_createdAt": "2020-02-18T11:34:49Z", "pr_url": "https://github.com/gluonhq/substrate/pull/356", "timeline": [{"oid": "1603e8c1b0317d617a5993e193679579f86ff06b", "url": "https://github.com/gluonhq/substrate/commit/1603e8c1b0317d617a5993e193679579f86ff06b", "message": "#354 Use genSrc/android to let the user modify the Android resources", "committedDate": "2020-02-18T10:24:41Z", "type": "commit"}, {"oid": "0d82ec6e7a681583a368c68e87e16d897d9bc774", "url": "https://github.com/gluonhq/substrate/commit/0d82ec6e7a681583a368c68e87e16d897d9bc774", "message": "copy files instead of resources", "committedDate": "2020-02-18T11:16:50Z", "type": "commit"}, {"oid": "a8497defcbbc04228c4af2ca859610dcd3d43ba5", "url": "https://github.com/gluonhq/substrate/commit/a8497defcbbc04228c4af2ca859610dcd3d43ba5", "message": "Fix comment", "committedDate": "2020-02-18T11:32:52Z", "type": "commit"}, {"oid": "aaf9611bfd5abadd808a05c5d41caa6044b45325", "url": "https://github.com/gluonhq/substrate/commit/aaf9611bfd5abadd808a05c5d41caa6044b45325", "message": "Remove unnecessary assets folder", "committedDate": "2020-02-18T12:20:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNzczNQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380637735", "bodyText": "Is it really critical for an icon image to exist?", "author": "tiainen", "createdAt": "2020-02-18T12:21:05Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -150,23 +179,28 @@ public boolean link() throws IOException, InterruptedException {\n         Files.createDirectories(dalvikBinPath);\n         Files.createDirectories(dalvikLibPath);\n         Files.createDirectories(dalvikLibArm64Path);\n-        Path androidManifestPath = dalvikPath.resolve(\"AndroidManifest.xml\");\n+        Path androidManifestDalvikPath = dalvikPath.resolve(Constants.MANIFEST_FILE);\n         Path dalvikActivityPackage = dalvikClassPath.resolve(\"com/gluonhq/helloandroid\");\n         Path dalvikKeyCodePackage = dalvikClassPath.resolve(\"javafx/scene/input\");\n         FileOps.copyResource(\"/native/android/dalvik/MainActivity.class\", dalvikActivityPackage.resolve(\"MainActivity.class\"));\n         FileOps.copyResource(\"/native/android/dalvik/MainActivity$1.class\", dalvikActivityPackage.resolve(\"MainActivity$1.class\"));\n         FileOps.copyResource(\"/native/android/dalvik/MainActivity$InternalSurfaceView.class\", dalvikActivityPackage.resolve(\"MainActivity$InternalSurfaceView.class\"));\n         FileOps.copyResource(\"/native/android/dalvik/KeyCode.class\", dalvikKeyCodePackage.resolve(\"KeyCode.class\"));\n         FileOps.copyResource(\"/native/android/dalvik/KeyCode$KeyCodeClass.class\", dalvikKeyCodePackage.resolve(\"KeyCode$KeyCodeClass.class\"));\n-        FileOps.copyResource(\"/native/android/AndroidManifest.xml\", dalvikPath.resolve(\"AndroidManifest.xml\"));\n-        FileOps.replaceInFile(dalvikPath.resolve(\"AndroidManifest.xml\"), \"package='com.gluonhq.helloandroid'\", \"package='\" + projectConfiguration.getAppId() + \"'\");\n-        FileOps.replaceInFile(dalvikPath.resolve(\"AndroidManifest.xml\"), \"A HelloGraal\", projectConfiguration.getAppName());\n \n-        // resources\n-       for (String iconFolder : iconFolders) {\n+        Path androidManifest = androidPath.resolve(Constants.MANIFEST_FILE);\n+        if (!Files.exists(androidManifest)) {\n+            throw new IOException(\"File \" + androidManifest.toString() + \" not found\");\n+        }\n+        FileOps.copyFile(androidManifest, androidManifestDalvikPath);\n+        for (String iconFolder : iconFolders) {\n+            Path iconPath = androidPath.resolve(\"assets\").resolve(\"res\").resolve(iconFolder).resolve(\"ic_launcher.png\");\n+            if (!Files.exists(iconPath)) {\n+                throw new IOException(\"File \" + iconPath.toString() + \" not found\");", "originalCommit": "a8497defcbbc04228c4af2ca859610dcd3d43ba5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODU1NQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380638555", "bodyText": "Yes, aapt package will fail if these icons are not there.", "author": "jperedadnr", "createdAt": "2020-02-18T12:22:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNzczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1Njg3OA==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380656878", "bodyText": "OK.", "author": "tiainen", "createdAt": "2020-02-18T13:02:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNzczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "425f6cf01fc1cbaac3aa5624e661d48fce8845b1", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 0de9282..6d88d92 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -194,7 +168,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n         }\n         FileOps.copyFile(androidManifest, androidManifestDalvikPath);\n         for (String iconFolder : iconFolders) {\n-            Path iconPath = androidPath.resolve(\"assets\").resolve(\"res\").resolve(iconFolder).resolve(\"ic_launcher.png\");\n+            Path iconPath = androidPath.resolve(\"res\").resolve(iconFolder).resolve(\"ic_launcher.png\");\n             if (!Files.exists(iconPath)) {\n                 throw new IOException(\"File \" + iconPath.toString() + \" not found\");\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380638652", "bodyText": "why is this \"Dalvik\" ?", "author": "johanvos", "createdAt": "2020-02-18T12:22:56Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -150,23 +179,28 @@ public boolean link() throws IOException, InterruptedException {\n         Files.createDirectories(dalvikBinPath);\n         Files.createDirectories(dalvikLibPath);\n         Files.createDirectories(dalvikLibArm64Path);\n-        Path androidManifestPath = dalvikPath.resolve(\"AndroidManifest.xml\");\n+        Path androidManifestDalvikPath = dalvikPath.resolve(Constants.MANIFEST_FILE);", "originalCommit": "aaf9611bfd5abadd808a05c5d41caa6044b45325", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MDg3Nw==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380640877", "bodyText": "We use an internal folder gvm/dalvik where the files to create the apk are added. Maybe we should rename this to something different?", "author": "jperedadnr", "createdAt": "2020-02-18T12:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Nzk3Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380647972", "bodyText": "yes, this has nothing to do with dalvik (the only dalvik-relevant part we have is where the Activity and related ancient Java files are)", "author": "johanvos", "createdAt": "2020-02-18T12:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0OTczOA==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380649738", "bodyText": "OK, filed #359 for that. Any suggestion? apk?", "author": "jperedadnr", "createdAt": "2020-02-18T12:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5Njk4OQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r381896989", "bodyText": "in this part of the code, since we're referring to the Android Manifest path, I think androidManifestPath is the best name.", "author": "johanvos", "createdAt": "2020-02-20T10:01:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMjQ5MQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r381902491", "bodyText": "Ok, changed", "author": "jperedadnr", "createdAt": "2020-02-20T10:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "50ea45f81bc6ab86a79fa2b8c30cd67e57093ca1", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 865745f..eea253d 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -179,7 +153,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n         Files.createDirectories(dalvikBinPath);\n         Files.createDirectories(dalvikLibPath);\n         Files.createDirectories(dalvikLibArm64Path);\n-        Path androidManifestDalvikPath = dalvikPath.resolve(Constants.MANIFEST_FILE);\n+        Path androidManifestPath = dalvikPath.resolve(Constants.MANIFEST_FILE);\n         Path dalvikActivityPackage = dalvikClassPath.resolve(\"com/gluonhq/helloandroid\");\n         Path dalvikKeyCodePackage = dalvikClassPath.resolve(\"javafx/scene/input\");\n         FileOps.copyResource(\"/native/android/dalvik/MainActivity.class\", dalvikActivityPackage.resolve(\"MainActivity.class\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODc2Ng==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380638766", "bodyText": "This block can be moved to a separate method.", "author": "tiainen", "createdAt": "2020-02-18T12:23:12Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -128,6 +129,34 @@ public boolean link() throws IOException, InterruptedException {\n             return false;\n         }\n \n+        // Prepare files", "originalCommit": "a8497defcbbc04228c4af2ca859610dcd3d43ba5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTU1OA==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380645558", "bodyText": "Done", "author": "jperedadnr", "createdAt": "2020-02-18T12:38:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "425f6cf01fc1cbaac3aa5624e661d48fce8845b1", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 0de9282..6d88d92 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -129,33 +129,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n             return false;\n         }\n \n-        // Prepare files\n-        String sourceOS = projectConfiguration.getTargetTriplet().getOs();\n-        Path rootPath = paths.getSourcePath().resolve(sourceOS);\n-        Path userManifest = rootPath.resolve(Constants.MANIFEST_FILE);\n-        Path androidPath;\n-        if (!Files.exists(userManifest)) {\n-            // copy manifest and assets to gensrc/android\n-            androidPath = paths.getGenPath().resolve(sourceOS);\n-            Path genManifest = androidPath.resolve(Constants.MANIFEST_FILE);\n-            Logger.logDebug(\"Copy \" + Constants.MANIFEST_FILE + \" to \" + genManifest.toString());\n-            FileOps.copyResource(\"/native/android/AndroidManifest.xml\", genManifest);\n-            FileOps.replaceInFile(genManifest, \"package='com.gluonhq.helloandroid'\", \"package='\" + projectConfiguration.getAppId() + \"'\");\n-            FileOps.replaceInFile(genManifest, \"A HelloGraal\", projectConfiguration.getAppName());\n-\n-            Path androidResources = androidPath.resolve(\"assets\").resolve(\"res\");\n-            Logger.logDebug(\"Copy assets to \" + androidResources.toString());\n-            for (String iconFolder : iconFolders) {\n-                Path assetPath = androidResources.resolve(iconFolder);\n-                Files.createDirectories(assetPath);\n-                FileOps.copyResource(\"/native/android/assets/res/\" + iconFolder + \"/ic_launcher.png\", assetPath.resolve(\"ic_launcher.png\"));\n-            }\n-            Logger.logInfo(\"Default Android resources generated in \" + androidPath.toString() + \".\\n\" +\n-                    \"Consider copying them to \" + rootPath.toString() + \" before performing any modification\");\n-        } else {\n-            // use manifest and assets from src/android\n-            androidPath = rootPath;\n-        }\n+        Path androidPath = prepareAndroidResources();\n \n         Path sdkPath = Paths.get(sdk);\n         Path buildToolsPath = sdkPath.resolve(\"build-tools\").resolve(findLatestBuildTool(sdkPath));\n"}}, {"oid": "425f6cf01fc1cbaac3aa5624e661d48fce8845b1", "url": "https://github.com/gluonhq/substrate/commit/425f6cf01fc1cbaac3aa5624e661d48fce8845b1", "message": "Refactor method", "committedDate": "2020-02-18T12:38:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTkwMw==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380645903", "bodyText": "Shouldn't this be .resolve(\"assets\").resolve(\"res\")?", "author": "tiainen", "createdAt": "2020-02-18T12:39:00Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -128,6 +129,34 @@ public boolean link() throws IOException, InterruptedException {\n             return false;\n         }\n \n+        // Prepare files\n+        String sourceOS = projectConfiguration.getTargetTriplet().getOs();\n+        Path rootPath = paths.getSourcePath().resolve(sourceOS);\n+        Path userManifest = rootPath.resolve(Constants.MANIFEST_FILE);\n+        Path androidPath;\n+        if (!Files.exists(userManifest)) {\n+            // copy manifest and assets to gensrc/android\n+            androidPath = paths.getGenPath().resolve(sourceOS);\n+            Path genManifest = androidPath.resolve(Constants.MANIFEST_FILE);\n+            Logger.logDebug(\"Copy \" + Constants.MANIFEST_FILE + \" to \" + genManifest.toString());\n+            FileOps.copyResource(\"/native/android/AndroidManifest.xml\", genManifest);\n+            FileOps.replaceInFile(genManifest, \"package='com.gluonhq.helloandroid'\", \"package='\" + projectConfiguration.getAppId() + \"'\");\n+            FileOps.replaceInFile(genManifest, \"A HelloGraal\", projectConfiguration.getAppName());\n+\n+            Path androidResources = androidPath.resolve(\"res\");", "originalCommit": "aaf9611bfd5abadd808a05c5d41caa6044b45325", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0ODAwNg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380648006", "bodyText": "No, I've removed that extra assets folder. In fact you can have android/res and android/assets folders (the latter will have to be included in the package command too)", "author": "jperedadnr", "createdAt": "2020-02-18T12:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MDgxOQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380650819", "bodyText": "With that in mind, the latter will then have a default in substrate as /native/android/assets/assets? Or is this not really mandatory for the default case?", "author": "tiainen", "createdAt": "2020-02-18T12:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MjI1MA==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380652250", "bodyText": "Yes, we don't need that for the default case.", "author": "jperedadnr", "createdAt": "2020-02-18T12:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTkwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1NzExNQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380657115", "bodyText": "Good.", "author": "tiainen", "createdAt": "2020-02-18T13:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NTkwMw=="}], "type": "inlineReview", "revised_code": {"commit": "e12f89c4585e5c629ddc5ebd5f0423fa8d8cf7a9", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 865745f..a45e77d 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -129,33 +129,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n             return false;\n         }\n \n-        // Prepare files\n-        String sourceOS = projectConfiguration.getTargetTriplet().getOs();\n-        Path rootPath = paths.getSourcePath().resolve(sourceOS);\n-        Path userManifest = rootPath.resolve(Constants.MANIFEST_FILE);\n-        Path androidPath;\n-        if (!Files.exists(userManifest)) {\n-            // copy manifest and assets to gensrc/android\n-            androidPath = paths.getGenPath().resolve(sourceOS);\n-            Path genManifest = androidPath.resolve(Constants.MANIFEST_FILE);\n-            Logger.logDebug(\"Copy \" + Constants.MANIFEST_FILE + \" to \" + genManifest.toString());\n-            FileOps.copyResource(\"/native/android/AndroidManifest.xml\", genManifest);\n-            FileOps.replaceInFile(genManifest, \"package='com.gluonhq.helloandroid'\", \"package='\" + projectConfiguration.getAppId() + \"'\");\n-            FileOps.replaceInFile(genManifest, \"A HelloGraal\", projectConfiguration.getAppName());\n-\n-            Path androidResources = androidPath.resolve(\"res\");\n-            Logger.logDebug(\"Copy assets to \" + androidResources.toString());\n-            for (String iconFolder : iconFolders) {\n-                Path assetPath = androidResources.resolve(iconFolder);\n-                Files.createDirectories(assetPath);\n-                FileOps.copyResource(\"/native/android/assets/res/\" + iconFolder + \"/ic_launcher.png\", assetPath.resolve(\"ic_launcher.png\"));\n-            }\n-            Logger.logInfo(\"Default Android resources generated in \" + androidPath.toString() + \".\\n\" +\n-                    \"Consider copying them to \" + rootPath.toString() + \" before performing any modification\");\n-        } else {\n-            // use manifest and assets from src/android\n-            androidPath = rootPath;\n-        }\n+        Path androidPath = prepareAndroidResources();\n \n         Path sdkPath = Paths.get(sdk);\n         Path buildToolsPath = sdkPath.resolve(\"build-tools\").resolve(findLatestBuildTool(sdkPath));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380646882", "bodyText": "What does this directory resolve to, relative to the root directory?", "author": "tiainen", "createdAt": "2020-02-18T12:40:59Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -128,6 +129,34 @@ public boolean link() throws IOException, InterruptedException {\n             return false;\n         }\n \n+        // Prepare files\n+        String sourceOS = projectConfiguration.getTargetTriplet().getOs();\n+        Path rootPath = paths.getSourcePath().resolve(sourceOS);", "originalCommit": "aaf9611bfd5abadd808a05c5d41caa6044b45325", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0ODI4OQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380648289", "bodyText": "that is /path/to/src/android in this case", "author": "jperedadnr", "createdAt": "2020-02-18T12:43:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTMwMw==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380651303", "bodyText": "OK, sounds a bit strange to use sourceOS as variable name. targetOS sounds more clear?", "author": "tiainen", "createdAt": "2020-02-18T12:50:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MzE3Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380653172", "bodyText": "source comes from src, and OS is for the targetOS, like android or ios(We use the same in utils/ios/InfoPlist).", "author": "jperedadnr", "createdAt": "2020-02-18T12:54:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1NTA0NQ==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380655045", "bodyText": "Yes, but the thing is, sourceOS is a variable that holds the name of the target OS and has not yet anything to do with src/.... It's only used for determining the rootPath, which should actually be path_to_target_OS_sources:\nString targetOs = projectConfiguration.getTargetTriplet().getOs();\nPath targetSourcePath = paths.getSourcePath().resolve(targetOs);", "author": "tiainen", "createdAt": "2020-02-18T12:58:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1ODA5Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r380658092", "bodyText": "Ok, changed it.", "author": "jperedadnr", "createdAt": "2020-02-18T13:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0Njg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "e12f89c4585e5c629ddc5ebd5f0423fa8d8cf7a9", "chunk": "diff --git a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\nindex 865745f..a45e77d 100644\n--- a/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n+++ b/src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java\n\n@@ -129,33 +129,7 @@ public class AndroidTargetConfiguration extends PosixTargetConfiguration {\n             return false;\n         }\n \n-        // Prepare files\n-        String sourceOS = projectConfiguration.getTargetTriplet().getOs();\n-        Path rootPath = paths.getSourcePath().resolve(sourceOS);\n-        Path userManifest = rootPath.resolve(Constants.MANIFEST_FILE);\n-        Path androidPath;\n-        if (!Files.exists(userManifest)) {\n-            // copy manifest and assets to gensrc/android\n-            androidPath = paths.getGenPath().resolve(sourceOS);\n-            Path genManifest = androidPath.resolve(Constants.MANIFEST_FILE);\n-            Logger.logDebug(\"Copy \" + Constants.MANIFEST_FILE + \" to \" + genManifest.toString());\n-            FileOps.copyResource(\"/native/android/AndroidManifest.xml\", genManifest);\n-            FileOps.replaceInFile(genManifest, \"package='com.gluonhq.helloandroid'\", \"package='\" + projectConfiguration.getAppId() + \"'\");\n-            FileOps.replaceInFile(genManifest, \"A HelloGraal\", projectConfiguration.getAppName());\n-\n-            Path androidResources = androidPath.resolve(\"res\");\n-            Logger.logDebug(\"Copy assets to \" + androidResources.toString());\n-            for (String iconFolder : iconFolders) {\n-                Path assetPath = androidResources.resolve(iconFolder);\n-                Files.createDirectories(assetPath);\n-                FileOps.copyResource(\"/native/android/assets/res/\" + iconFolder + \"/ic_launcher.png\", assetPath.resolve(\"ic_launcher.png\"));\n-            }\n-            Logger.logInfo(\"Default Android resources generated in \" + androidPath.toString() + \".\\n\" +\n-                    \"Consider copying them to \" + rootPath.toString() + \" before performing any modification\");\n-        } else {\n-            // use manifest and assets from src/android\n-            androidPath = rootPath;\n-        }\n+        Path androidPath = prepareAndroidResources();\n \n         Path sdkPath = Paths.get(sdk);\n         Path buildToolsPath = sdkPath.resolve(\"build-tools\").resolve(findLatestBuildTool(sdkPath));\n"}}, {"oid": "e12f89c4585e5c629ddc5ebd5f0423fa8d8cf7a9", "url": "https://github.com/gluonhq/substrate/commit/e12f89c4585e5c629ddc5ebd5f0423fa8d8cf7a9", "message": "Rename variables", "committedDate": "2020-02-18T13:03:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NzI3Mg==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r381897272", "bodyText": "probably in a subdir?", "author": "johanvos", "createdAt": "2020-02-20T10:02:05Z", "path": "src/main/java/com/gluonhq/substrate/target/AndroidTargetConfiguration.java", "diffHunk": "@@ -415,6 +423,44 @@ private String findLatestBuildTool(Path sdkPath) throws IOException {\n         //  Currently, sdkmanager doesn't work with JDK 11: https://issuetracker.google.com/issues/67495440\n     }\n \n+    /**\n+     * If android manifest and icons are present in src/android, then, this", "originalCommit": "e12f89c4585e5c629ddc5ebd5f0423fa8d8cf7a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5Nzg3Nw==", "url": "https://github.com/gluonhq/substrate/pull/356#discussion_r381897877", "bodyText": "AndroidManifest is at src/android, icons at src/android/res", "author": "jperedadnr", "createdAt": "2020-02-20T10:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NzI3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "38ac8ad8e34cc6254a89cf6ccf602c73cb2dd7dc", "url": "https://github.com/gluonhq/substrate/commit/38ac8ad8e34cc6254a89cf6ccf602c73cb2dd7dc", "message": "Merge branch 'master' of https://github.com/gluonhq/substrate into 354-gensrc", "committedDate": "2020-02-20T10:08:38Z", "type": "commit"}, {"oid": "50ea45f81bc6ab86a79fa2b8c30cd67e57093ca1", "url": "https://github.com/gluonhq/substrate/commit/50ea45f81bc6ab86a79fa2b8c30cd67e57093ca1", "message": "Rename variable", "committedDate": "2020-02-20T10:11:26Z", "type": "commit"}]}