{"pr_number": 553, "pr_title": "DPC-937: Add MBI hashing support", "pr_createdAt": "2020-01-21T20:24:50Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/553", "timeline": [{"oid": "9308dea34c02b775bec3b45aace525b421592f47", "url": "https://github.com/CMSgov/dpc-app/commit/9308dea34c02b775bec3b45aace525b421592f47", "message": "Add method for hashing MBI", "committedDate": "2020-01-21T21:13:27Z", "type": "commit"}, {"oid": "065171e73f1dc3a9e22598cf7a616868960a2e17", "url": "https://github.com/CMSgov/dpc-app/commit/065171e73f1dc3a9e22598cf7a616868960a2e17", "message": "Add mbi_hash column to attribution patients table", "committedDate": "2020-01-22T14:20:42Z", "type": "commit"}, {"oid": "065171e73f1dc3a9e22598cf7a616868960a2e17", "url": "https://github.com/CMSgov/dpc-app/commit/065171e73f1dc3a9e22598cf7a616868960a2e17", "message": "Add mbi_hash column to attribution patients table", "committedDate": "2020-01-22T14:20:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0ODczOA==", "url": "https://github.com/CMSgov/dpc-app/pull/553#discussion_r369648738", "bodyText": "Is there any portion of this that can be pulled out as class variables?", "author": "nickrobison-usds", "createdAt": "2020-01-22T16:00:50Z", "path": "dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java", "diffHunk": "@@ -150,6 +156,16 @@ public CapabilityStatement requestCapabilityStatement() throws ResourceNotFoundE\n                         .execute());\n     }\n \n+    @Override\n+    public String hashMbi(String mbi) throws GeneralSecurityException {\n+        String pepper = config.getBfdHashPepper();\n+        int iterations = config.getBfdHashIter();\n+        KeySpec keySpec = new PBEKeySpec(mbi.toCharArray(), Hex.decode(pepper), iterations, 256);\n+        SecretKeyFactory skf = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA256\");\n+        SecretKey secretKey = skf.generateSecret(keySpec);\n+        return Hex.toHexString(secretKey.getEncoded());", "originalCommit": "065171e73f1dc3a9e22598cf7a616868960a2e17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b9746c122694d10898c1f28a86a08087fea0a13c", "chunk": "diff --git a/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java b/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\nindex 739f5764..822e4896 100644\n--- a/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\n+++ b/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\n\n@@ -158,11 +174,17 @@ public class BlueButtonClientImpl implements BlueButtonClient {\n \n     @Override\n     public String hashMbi(String mbi) throws GeneralSecurityException {\n-        String pepper = config.getBfdHashPepper();\n-        int iterations = config.getBfdHashIter();\n-        KeySpec keySpec = new PBEKeySpec(mbi.toCharArray(), Hex.decode(pepper), iterations, 256);\n-        SecretKeyFactory skf = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA256\");\n-        SecretKey secretKey = skf.generateSecret(keySpec);\n+        if (StringUtils.isBlank(mbi)) {\n+            logger.error(\"Could not generate hash; provided MBI string was null or empty\");\n+            return \"\";\n+        }\n+\n+        if (secretKeyFactory == null) {\n+            throw new GeneralSecurityException(\"Secret key factory is null\");\n+        }\n+\n+        KeySpec keySpec = new PBEKeySpec(mbi.toCharArray(), bfdHashPepper, bfdHashIter, 256);\n+        SecretKey secretKey = secretKeyFactory.generateSecret(keySpec);\n         return Hex.toHexString(secretKey.getEncoded());\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM1MA==", "url": "https://github.com/CMSgov/dpc-app/pull/553#discussion_r369649350", "bodyText": "Do we have a failure case? Such as an empty or null string?", "author": "nickrobison-usds", "createdAt": "2020-01-22T16:01:50Z", "path": "dpc-bluebutton/src/test/java/gov/cms/dpc/bluebutton/client/BlueButtonClientTest.java", "diffHunk": "@@ -222,6 +223,16 @@ void shouldThrowExceptionWhenResourceNotFound() {\n         );\n     }\n \n+    @Test\n+    void shouldHashMbi() throws GeneralSecurityException {", "originalCommit": "065171e73f1dc3a9e22598cf7a616868960a2e17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b9746c122694d10898c1f28a86a08087fea0a13c", "chunk": "diff --git a/dpc-bluebutton/src/test/java/gov/cms/dpc/bluebutton/client/BlueButtonClientTest.java b/dpc-bluebutton/src/test/java/gov/cms/dpc/bluebutton/client/BlueButtonClientTest.java\nindex 32ab5264..99dfd1a0 100644\n--- a/dpc-bluebutton/src/test/java/gov/cms/dpc/bluebutton/client/BlueButtonClientTest.java\n+++ b/dpc-bluebutton/src/test/java/gov/cms/dpc/bluebutton/client/BlueButtonClientTest.java\n\n@@ -233,6 +233,15 @@ class BlueButtonClientTest {\n         assertEquals(\"ec49dc08f8dd8b4e189f623ab666cfc8b81f201cc94fe6aef860a4c3bd57f278\", hash);\n     }\n \n+    @Test\n+    void shouldNotHashMbi() throws GeneralSecurityException {\n+        String hash = bbc.hashMbi(null);\n+        assertEquals(\"\", hash);\n+\n+        hash = bbc.hashMbi(\"\");\n+        assertEquals(\"\", hash);\n+    }\n+\n     /**\n      * Helper method that configures the mock server to respond to a given GET request\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1MjYxNw==", "url": "https://github.com/CMSgov/dpc-app/pull/553#discussion_r369752617", "bodyText": "What happens if mbi is empty or null? The table's column can be null.", "author": "RickHawesUSDS", "createdAt": "2020-01-22T19:17:10Z", "path": "dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java", "diffHunk": "@@ -150,6 +156,16 @@ public CapabilityStatement requestCapabilityStatement() throws ResourceNotFoundE\n                         .execute());\n     }\n \n+    @Override\n+    public String hashMbi(String mbi) throws GeneralSecurityException {\n+        String pepper = config.getBfdHashPepper();", "originalCommit": "065171e73f1dc3a9e22598cf7a616868960a2e17", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b9746c122694d10898c1f28a86a08087fea0a13c", "chunk": "diff --git a/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java b/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\nindex 739f5764..822e4896 100644\n--- a/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\n+++ b/dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java\n\n@@ -158,11 +174,17 @@ public class BlueButtonClientImpl implements BlueButtonClient {\n \n     @Override\n     public String hashMbi(String mbi) throws GeneralSecurityException {\n-        String pepper = config.getBfdHashPepper();\n-        int iterations = config.getBfdHashIter();\n-        KeySpec keySpec = new PBEKeySpec(mbi.toCharArray(), Hex.decode(pepper), iterations, 256);\n-        SecretKeyFactory skf = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA256\");\n-        SecretKey secretKey = skf.generateSecret(keySpec);\n+        if (StringUtils.isBlank(mbi)) {\n+            logger.error(\"Could not generate hash; provided MBI string was null or empty\");\n+            return \"\";\n+        }\n+\n+        if (secretKeyFactory == null) {\n+            throw new GeneralSecurityException(\"Secret key factory is null\");\n+        }\n+\n+        KeySpec keySpec = new PBEKeySpec(mbi.toCharArray(), bfdHashPepper, bfdHashIter, 256);\n+        SecretKey secretKey = secretKeyFactory.generateSecret(keySpec);\n         return Hex.toHexString(secretKey.getEncoded());\n     }\n \n"}}, {"oid": "b9746c122694d10898c1f28a86a08087fea0a13c", "url": "https://github.com/CMSgov/dpc-app/commit/b9746c122694d10898c1f28a86a08087fea0a13c", "message": "Address PR comments", "committedDate": "2020-01-22T19:45:47Z", "type": "commit"}]}