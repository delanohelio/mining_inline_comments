{"pr_number": 921, "pr_title": "DPC-445 check provider in provenence header and group match", "pr_createdAt": "2020-07-21T21:16:06Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/921", "timeline": [{"oid": "e8dc3b740f01aa62571b61ee7a240d67b5525275", "url": "https://github.com/CMSgov/dpc-app/commit/e8dc3b740f01aa62571b61ee7a240d67b5525275", "message": "check provider in provenence header and group match", "committedDate": "2020-07-21T20:59:40Z", "type": "commit"}, {"oid": "99b553fef276e25f6fa3ed7fdac482622d582297", "url": "https://github.com/CMSgov/dpc-app/commit/99b553fef276e25f6fa3ed7fdac482622d582297", "message": "add test when provenance practitioner doesn't match group practitioner", "committedDate": "2020-07-22T04:57:26Z", "type": "commit"}, {"oid": "92f8c7f4da5510b41437faa64060067e5c127f62", "url": "https://github.com/CMSgov/dpc-app/commit/92f8c7f4da5510b41437faa64060067e5c127f62", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-07-22T05:00:47Z", "type": "commit"}, {"oid": "1d98f3f4d884b8c54e90f82e38cb5025f55ecc62", "url": "https://github.com/CMSgov/dpc-app/commit/1d98f3f4d884b8c54e90f82e38cb5025f55ecc62", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-07-27T15:25:56Z", "type": "commit"}, {"oid": "0b70654a71666a67c25c4d9da553d3f747218419", "url": "https://github.com/CMSgov/dpc-app/commit/0b70654a71666a67c25c4d9da553d3f747218419", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-07-29T15:46:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMzA3Mg==", "url": "https://github.com/CMSgov/dpc-app/pull/921#discussion_r462413072", "bodyText": "Should we set a status code on these two exceptions so it doesn't use the default of 500? My initial thought was 401 Unauthorized, but maybe 422 Unprocessable Entity is more accurate because it's the attestation that's a problem, not their authentication. \ud83e\udd14", "author": "em1", "createdAt": "2020-07-29T16:02:49Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -431,7 +433,29 @@ private void logAttestation(Provenance provenance, UUID rosterID, Group attribut\n \n         logger.info(\"Organization {} is attesting a {} purpose between provider {} and patient(s) {}{}\", performer.getWhoReference().getReference(),\n                 reason.getCode(),\n-                performer.getOnBehalfOfReference().getReference(), attributedPatients, groupIDLog);\n+                practitionerUUID, attributedPatients, groupIDLog);\n+\n+        verifyHeader(practitionerUUID, attributionRoster);\n+    }\n+\n+    private void verifyHeader(String practitionerUUID, Group attributionRoster) {\n+        try {\n+            Practitioner practitioner = client.read()\n+                    .resource(Practitioner.class)\n+                    .withId(FHIRExtractors.getEntityUUID(practitionerUUID).toString())\n+                    .encodedJson()\n+                    .execute();\n+\n+            Identifier provenancePractitionerNPI = FHIRExtractors.findMatchingIdentifier(practitioner.getIdentifier(), DPCIdentifierSystem.NPPES);\n+            String groupPractitionerNPI = FHIRExtractors.getAttributedNPI(attributionRoster);\n+\n+            if (!provenancePractitionerNPI.getValue().equals(groupPractitionerNPI)) {\n+                throw new WebApplicationException(\"Provenance header's provider does not match group provider\");\n+            }\n+        } catch(ResourceNotFoundException e) {\n+            throw new WebApplicationException(\"Could not find provider defined in provenance header\");", "originalCommit": "0b70654a71666a67c25c4d9da553d3f747218419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY2MzQxNw==", "url": "https://github.com/CMSgov/dpc-app/pull/921#discussion_r463663417", "bodyText": "I would think 422 would be most appropriate, remember this should require a swagger annotation indicating 422 as a potential API response....", "author": "richbraman", "createdAt": "2020-07-31T15:01:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMzA3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9db55a9a6e784e8f6fc5ce2b6eee39475a1978f3", "chunk": "diff --git a/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java b/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\nindex 8438b5ea..9a6a24af 100644\n--- a/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\n+++ b/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\n\n@@ -450,10 +457,10 @@ public class GroupResource extends AbstractGroupResource {\n             String groupPractitionerNPI = FHIRExtractors.getAttributedNPI(attributionRoster);\n \n             if (!provenancePractitionerNPI.getValue().equals(groupPractitionerNPI)) {\n-                throw new WebApplicationException(\"Provenance header's provider does not match group provider\");\n+                throw new WebApplicationException(\"Provenance header's provider does not match group provider\", Response.status(422).build());\n             }\n         } catch(ResourceNotFoundException e) {\n-            throw new WebApplicationException(\"Could not find provider defined in provenance header\");\n+            throw new WebApplicationException(\"Could not find provider defined in provenance header\", Response.status(422).build());\n         }\n \n     }\n"}}, {"oid": "9db55a9a6e784e8f6fc5ce2b6eee39475a1978f3", "url": "https://github.com/CMSgov/dpc-app/commit/9db55a9a6e784e8f6fc5ce2b6eee39475a1978f3", "message": "change status code to 422", "committedDate": "2020-08-02T04:54:09Z", "type": "commit"}, {"oid": "d3ff9b77985b011359652d425d09d9e0abf91796", "url": "https://github.com/CMSgov/dpc-app/commit/d3ff9b77985b011359652d425d09d9e0abf91796", "message": "Merge remote-tracking branch 'origin/wh/DPC-445-check-provenence-and-group-providers' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-02T04:54:19Z", "type": "commit"}, {"oid": "fbe5b31d5eb8a43873c40b132d6000b5d19fc471", "url": "https://github.com/CMSgov/dpc-app/commit/fbe5b31d5eb8a43873c40b132d6000b5d19fc471", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-02T04:54:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM4NTMzOA==", "url": "https://github.com/CMSgov/dpc-app/pull/921#discussion_r464385338", "bodyText": "It looks like we've established a pattern of using constants for response codes, either from Response.Status or HttpStatus, so it may make sense to do that here (e.g., HttpStatus.UNPROCESSABLE_ENTITY_422).", "author": "em1", "createdAt": "2020-08-03T12:37:15Z", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -431,7 +437,29 @@ private void logAttestation(Provenance provenance, UUID rosterID, Group attribut\n \n         logger.info(\"Organization {} is attesting a {} purpose between provider {} and patient(s) {}{}\", performer.getWhoReference().getReference(),\n                 reason.getCode(),\n-                performer.getOnBehalfOfReference().getReference(), attributedPatients, groupIDLog);\n+                practitionerUUID, attributedPatients, groupIDLog);\n+\n+        verifyHeader(practitionerUUID, attributionRoster);\n+    }\n+\n+    private void verifyHeader(String practitionerUUID, Group attributionRoster) {\n+        try {\n+            Practitioner practitioner = client.read()\n+                    .resource(Practitioner.class)\n+                    .withId(FHIRExtractors.getEntityUUID(practitionerUUID).toString())\n+                    .encodedJson()\n+                    .execute();\n+\n+            Identifier provenancePractitionerNPI = FHIRExtractors.findMatchingIdentifier(practitioner.getIdentifier(), DPCIdentifierSystem.NPPES);\n+            String groupPractitionerNPI = FHIRExtractors.getAttributedNPI(attributionRoster);\n+\n+            if (!provenancePractitionerNPI.getValue().equals(groupPractitionerNPI)) {\n+                throw new WebApplicationException(\"Provenance header's provider does not match group provider\", Response.status(422).build());\n+            }\n+        } catch(ResourceNotFoundException e) {\n+            throw new WebApplicationException(\"Could not find provider defined in provenance header\", Response.status(422).build());", "originalCommit": "fbe5b31d5eb8a43873c40b132d6000b5d19fc471", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3200e8723870e4a93dbd5b9d544df602d90c3032", "chunk": "diff --git a/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java b/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\nindex 0c2a646d..f62f7167 100644\n--- a/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\n+++ b/dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java\n\n@@ -454,10 +455,10 @@ public class GroupResource extends AbstractGroupResource {\n             String groupPractitionerNPI = FHIRExtractors.getAttributedNPI(attributionRoster);\n \n             if (!provenancePractitionerNPI.getValue().equals(groupPractitionerNPI)) {\n-                throw new WebApplicationException(\"Provenance header's provider does not match group provider\", Response.status(422).build());\n+                throw new WebApplicationException(\"Provenance header's provider does not match group provider\", HttpStatus.SC_UNPROCESSABLE_ENTITY);\n             }\n         } catch(ResourceNotFoundException e) {\n-            throw new WebApplicationException(\"Could not find provider defined in provenance header\", Response.status(422).build());\n+            throw new WebApplicationException(\"Could not find provider defined in provenance header\", HttpStatus.SC_UNPROCESSABLE_ENTITY);\n         }\n \n     }\n"}}, {"oid": "3200e8723870e4a93dbd5b9d544df602d90c3032", "url": "https://github.com/CMSgov/dpc-app/commit/3200e8723870e4a93dbd5b9d544df602d90c3032", "message": "change to constant", "committedDate": "2020-08-03T15:34:51Z", "type": "commit"}, {"oid": "5f69190aaa458100dc73981296b705124e4eaeb4", "url": "https://github.com/CMSgov/dpc-app/commit/5f69190aaa458100dc73981296b705124e4eaeb4", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-06T14:00:27Z", "type": "commit"}, {"oid": "6d70aa704429a22db877ecaf7c8fb6ae40102785", "url": "https://github.com/CMSgov/dpc-app/commit/6d70aa704429a22db877ecaf7c8fb6ae40102785", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-06T15:51:18Z", "type": "commit"}, {"oid": "12de3a48de9b7150e2b4802ecdc169e5f168cdd3", "url": "https://github.com/CMSgov/dpc-app/commit/12de3a48de9b7150e2b4802ecdc169e5f168cdd3", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-12T02:14:24Z", "type": "commit"}, {"oid": "5db4c3ecf1e1a9dc80a0a2092d4a126ec8bc1ea6", "url": "https://github.com/CMSgov/dpc-app/commit/5db4c3ecf1e1a9dc80a0a2092d4a126ec8bc1ea6", "message": "fix unit tests for creating roster with header matching", "committedDate": "2020-08-12T17:19:31Z", "type": "commit"}, {"oid": "02b6250616cd8fc96a7fdd7d0ded6d28e75a3e66", "url": "https://github.com/CMSgov/dpc-app/commit/02b6250616cd8fc96a7fdd7d0ded6d28e75a3e66", "message": "Merge branch 'master' into wh/DPC-445-check-provenence-and-group-providers", "committedDate": "2020-08-12T17:21:39Z", "type": "commit"}]}