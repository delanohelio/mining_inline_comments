{"pr_number": 1147, "pr_title": "Added suport for id filter in Endpoint resource search", "pr_createdAt": "2020-12-18T00:32:11Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/1147", "timeline": [{"oid": "7d65222fccd9d5cf8dacc8793a4e803e75706737", "url": "https://github.com/CMSgov/dpc-app/commit/7d65222fccd9d5cf8dacc8793a4e803e75706737", "message": "Added suport for id filter in Endpoint resource search", "committedDate": "2020-12-18T00:31:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMDUxOA==", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546010518", "bodyText": "Is this name consistent with other search or fetch methods in other DAOs? I like the shorter name, but maybe it could be more descriptive?", "author": "jonfulk", "createdAt": "2020-12-18T18:24:21Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {", "originalCommit": "7d65222fccd9d5cf8dacc8793a4e803e75706737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyNDA4Ng==", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546124086", "bodyText": "changed for consistency.", "author": "MrMorie", "createdAt": "2020-12-18T22:39:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMDUxOA=="}], "type": "inlineReview", "revised_code": {"commit": "da5934f11c6e7ece73be348c06144abc1c6001d5", "chunk": "diff --git a/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java b/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\nindex 9e67caf3..f7bd18cc 100644\n--- a/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\n+++ b/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\n\n@@ -29,7 +29,7 @@ public class EndpointDAO extends AbstractDAO<EndpointEntity> {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {\n+    public List<EndpointEntity> endpointSearch(UUID organizationID, UUID endpointId) {\n         // Build a selection query to get records from the database\n         final CriteriaBuilder builder = currentSession().getCriteriaBuilder();\n         final CriteriaQuery<EndpointEntity> query = builder.createQuery(EndpointEntity.class);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzMzI5NQ==", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546033295", "bodyText": "in the case where the organizationID and/or the endpointID is/are null, do we want to throw some sort of error? Otherwise, wouldn't we end up just not filtering the results by those predicates?", "author": "jonfulk", "createdAt": "2020-12-18T19:05:36Z", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {\n         // Build a selection query to get records from the database\n         final CriteriaBuilder builder = currentSession().getCriteriaBuilder();\n         final CriteriaQuery<EndpointEntity> query = builder.createQuery(EndpointEntity.class);\n         final Root<EndpointEntity> root = query.from(EndpointEntity.class);\n         query.select(root);\n \n+        final List<Predicate> predicates = Lists.newArrayList();\n \n-        query.where(builder.equal(root.get(\"organization\").get(\"id\"), organizationID));\n+        if(organizationID!=null){", "originalCommit": "7d65222fccd9d5cf8dacc8793a4e803e75706737", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyNTU1MA==", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546125550", "bodyText": "Thats right, no predicates would just translate to a select.\nIn the rest of the DAOs we do the same. Not allowing a search without filters is more of a business requirement and probably does not belong in the DAOs.", "author": "MrMorie", "createdAt": "2020-12-18T22:44:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzMzI5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "da5934f11c6e7ece73be348c06144abc1c6001d5", "chunk": "diff --git a/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java b/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\nindex 9e67caf3..f7bd18cc 100644\n--- a/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\n+++ b/dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java\n\n@@ -29,7 +29,7 @@ public class EndpointDAO extends AbstractDAO<EndpointEntity> {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {\n+    public List<EndpointEntity> endpointSearch(UUID organizationID, UUID endpointId) {\n         // Build a selection query to get records from the database\n         final CriteriaBuilder builder = currentSession().getCriteriaBuilder();\n         final CriteriaQuery<EndpointEntity> query = builder.createQuery(EndpointEntity.class);\n"}}, {"oid": "1472024d3d94a8c9f5cfdc39bd1f38113c2f19b9", "url": "https://github.com/CMSgov/dpc-app/commit/1472024d3d94a8c9f5cfdc39bd1f38113c2f19b9", "message": "Merge branch 'master' into sg/DPC-974-add-id-fiter-to-endpoint-search", "committedDate": "2020-12-18T21:05:25Z", "type": "commit"}, {"oid": "da5934f11c6e7ece73be348c06144abc1c6001d5", "url": "https://github.com/CMSgov/dpc-app/commit/da5934f11c6e7ece73be348c06144abc1c6001d5", "message": "Applied PR change requests", "committedDate": "2020-12-18T22:37:51Z", "type": "commit"}]}