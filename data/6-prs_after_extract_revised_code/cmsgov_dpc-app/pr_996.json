{"pr_number": 996, "pr_title": "DPC 641 match org or provider to any fields", "pr_createdAt": "2020-08-21T21:21:53Z", "pr_url": "https://github.com/CMSgov/dpc-app/pull/996", "timeline": [{"oid": "321c4255de7f228f7436b2dc2ebe40f883dc9310", "url": "https://github.com/CMSgov/dpc-app/commit/321c4255de7f228f7436b2dc2ebe40f883dc9310", "message": "tweak logging to one line", "committedDate": "2020-08-20T02:50:49Z", "type": "commit"}, {"oid": "6489d6ed5ab811dd022438c3efd04b79d2cb2399", "url": "https://github.com/CMSgov/dpc-app/commit/6489d6ed5ab811dd022438c3efd04b79d2cb2399", "message": "change log variables, fix a code climate complaint", "committedDate": "2020-08-20T14:53:26Z", "type": "commit"}, {"oid": "c28e3c4df8afe31acaa4a573a46a161f7284e4ac", "url": "https://github.com/CMSgov/dpc-app/commit/c28e3c4df8afe31acaa4a573a46a161f7284e4ac", "message": "Merge branch 'master' into DPC-389-tweak-logging", "committedDate": "2020-08-20T14:54:10Z", "type": "commit"}, {"oid": "caf358053072069b55358b8b46eee4f9e88b8ee4", "url": "https://github.com/CMSgov/dpc-app/commit/caf358053072069b55358b8b46eee4f9e88b8ee4", "message": "log more", "committedDate": "2020-08-20T22:30:24Z", "type": "commit"}, {"oid": "cab2a2dd7f66eea8b364243f4a97ccc053dbede5", "url": "https://github.com/CMSgov/dpc-app/commit/cab2a2dd7f66eea8b364243f4a97ccc053dbede5", "message": "Merge remote-tracking branch 'origin/DPC-389-tweak-logging' into DPC-389-tweak-logging", "committedDate": "2020-08-20T22:30:32Z", "type": "commit"}, {"oid": "971d467f8b025dcf40efca332c3d53e3913d6b0e", "url": "https://github.com/CMSgov/dpc-app/commit/971d467f8b025dcf40efca332c3d53e3913d6b0e", "message": "fix missing comma", "committedDate": "2020-08-20T22:53:44Z", "type": "commit"}, {"oid": "7580a9f7156de0d35ef88bae2382dc76d1e9a608", "url": "https://github.com/CMSgov/dpc-app/commit/7580a9f7156de0d35ef88bae2382dc76d1e9a608", "message": "Merge branch 'master' into DPC-389-tweak-logging", "committedDate": "2020-08-21T15:29:38Z", "type": "commit"}, {"oid": "bd55e41deb9ea550abb7a6624f693e1eab983cbf", "url": "https://github.com/CMSgov/dpc-app/commit/bd55e41deb9ea550abb7a6624f693e1eab983cbf", "message": "Merge branch 'master' into DPC-389-tweak-logging", "committedDate": "2020-08-21T17:50:30Z", "type": "commit"}, {"oid": "df6c9264904066ccbae8cc3b242e7ed783de39da", "url": "https://github.com/CMSgov/dpc-app/commit/df6c9264904066ccbae8cc3b242e7ed783de39da", "message": "match the org or provider npi to any npi fields in the eob", "committedDate": "2020-08-21T21:18:21Z", "type": "commit"}, {"oid": "b85a1c6477c5155f2594e6a3890c7670b2943d2f", "url": "https://github.com/CMSgov/dpc-app/commit/b85a1c6477c5155f2594e6a3890c7670b2943d2f", "message": "change list to string joine by semi colon for dpc json parsing to be successful", "committedDate": "2020-08-28T15:49:48Z", "type": "commit"}, {"oid": "322e970b0c43f32e9cd0678dda94630f98a7fdf5", "url": "https://github.com/CMSgov/dpc-app/commit/322e970b0c43f32e9cd0678dda94630f98a7fdf5", "message": "Merge branch 'master' of https://github.com/CMSgov/dpc-app", "committedDate": "2020-08-28T17:52:34Z", "type": "commit"}, {"oid": "9a2f280ee70e06a63cdc69eca2c455cb76a22833", "url": "https://github.com/CMSgov/dpc-app/commit/9a2f280ee70e06a63cdc69eca2c455cb76a22833", "message": "Merge branch 'master' into wh/DPC-641-match-org-or-provider-to-any-fields\n\n# Conflicts:\n#\tdpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackAnswer.java\n#\tdpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\n#\tdpc-aggregation/src/test/java/gov/cms/dpc/aggregation/service/LookBackServiceImplTest.java", "committedDate": "2020-08-31T20:05:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3NzUxNw==", "url": "https://github.com/CMSgov/dpc-app/pull/996#discussion_r480377517", "bodyText": "Do we want to null check the providerOrRosterID before getting UUID?", "author": "MrMorie", "createdAt": "2020-08-31T20:21:51Z", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -39,94 +39,64 @@ public LookBackServiceImpl(RosterDAO rosterDAO, OrganizationDAO organizationDAO,\n     @UnitOfWork(readOnly = true)\n     public String getProviderNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n         //Expect only one roster for the parameters, otherwise return null\n-        String npi = rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);\n-        LOGGER.info(\"jobProviderNPI={}\", npi);\n-        return npi;\n+        return rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);", "originalCommit": "df6c9264904066ccbae8cc3b242e7ed783de39da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NDc4Mg==", "url": "https://github.com/CMSgov/dpc-app/pull/996#discussion_r480394782", "bodyText": "I assume it's not possible for the job to have a null providerID", "author": "MrBilnon", "createdAt": "2020-08-31T20:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM3NzUxNw=="}], "type": "inlineReview", "revised_code": {"commit": "fe4cbd60220174542c318c880a20dd291b9aeac5", "chunk": "diff --git a/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java b/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\nindex dcf52292..4b650b2b 100644\n--- a/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\n+++ b/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\n\n@@ -37,14 +38,14 @@ public class LookBackServiceImpl implements LookBackService {\n \n     @Override\n     @UnitOfWork(readOnly = true)\n-    public String getProviderNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n+    public String getPractitionerNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n         //Expect only one roster for the parameters, otherwise return null\n         return rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);\n     }\n \n     @Override\n     @UnitOfWork(readOnly = true)\n-    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String providerNPI, long withinMonth) {\n+    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String practitionerNPI, long withinMonth) {\n         MDC.put(EOB_ID, explanationOfBenefit.getId());\n         Date billingPeriod = Optional.of(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getBillablePeriod)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4MDExNg==", "url": "https://github.com/CMSgov/dpc-app/pull/996#discussion_r480380116", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Pair<String, Set<String>> extractPractionerNPIs(ExplanationOfBenefit explanationOfBenefit) {\n          \n          \n            \n                private Pair<String, Set<String>> extractPractitionerNPIs(ExplanationOfBenefit explanationOfBenefit) {", "author": "em1", "createdAt": "2020-08-31T20:26:58Z", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -39,94 +39,64 @@ public LookBackServiceImpl(RosterDAO rosterDAO, OrganizationDAO organizationDAO,\n     @UnitOfWork(readOnly = true)\n     public String getProviderNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n         //Expect only one roster for the parameters, otherwise return null\n-        String npi = rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);\n-        LOGGER.info(\"jobProviderNPI={}\", npi);\n-        return npi;\n+        return rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);\n     }\n \n     @Override\n     @UnitOfWork(readOnly = true)\n-    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String providerUUID, long withinMonth) {\n-        Optional<Date> billingPeriod = Optional.ofNullable(explanationOfBenefit)\n+    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String providerNPI, long withinMonth) {\n+        MDC.put(EOB_ID, explanationOfBenefit.getId());\n+        Date billingPeriod = Optional.of(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getBillablePeriod)\n-                .map(Period::getEnd);\n-\n-        Optional<String> providerID = Optional.ofNullable(providerUUID);\n+                .map(Period::getEnd)\n+                .orElse(null);\n \n-        Optional<String> organizationID = organizationDAO.fetchOrganizationNPI(organizationUUID);\n+        String organizationID = organizationDAO.fetchOrganizationNPI(organizationUUID).orElse(null);\n \n-        Optional<String> eobOrganizationID = Optional.ofNullable(explanationOfBenefit)\n+        String eobOrganizationID = Optional.of(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getOrganization)\n                 .map(Reference::getIdentifier)\n                 .filter(i -> DPCIdentifierSystem.NPPES.getSystem().equals(i.getSystem()))\n-                .map(Identifier::getValue);\n-\n-        Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n-\n-        LOGGER.info(\"billingPeriod={}\", billingPeriod.orElse(null));\n-        LOGGER.info(\"eobOrganizationID={}\", eobOrganizationID.orElse(null));\n-        LOGGER.info(\"jobOrganizationID={}\", organizationID.orElse(null));\n-\n-        if (billingPeriod.isEmpty() || providerID.isEmpty() || organizationID.isEmpty() || eobOrganizationID.isEmpty()) {\n-            LOGGER.info(\"eob BillingPeriod or job providerID or job organizationID or eob OrganizationID are null\");\n-            return false;\n-        }\n-\n-        long lookBackMonthsDifference = getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate());\n-        boolean eobContainsProvider = eobProviderNPIs.contains(providerID.get());\n-        boolean eobRelatedToOrganization = organizationID.get().equals(eobOrganizationID.get());\n-        boolean eobWithinLookBackLimit = lookBackMonthsDifference < withinMonth;\n-\n-        boolean hasClaim = eobWithinLookBackLimit\n-                && eobContainsProvider\n-                && eobRelatedToOrganization;\n-\n-        LOGGER.info(\"LookBack stats eobWithinLookBackLimit={}, eobContainsProvider={}, eobRelatedToOrganization={}, eobMonthsDifference={}, hasClaim={}\",\n-                eobWithinLookBackLimit, eobContainsProvider, eobRelatedToOrganization, lookBackMonthsDifference, hasClaim);\n-\n-        return hasClaim;\n+                .map(Identifier::getValue)\n+                .orElse(null);\n+\n+        Pair<String, Set<String>> npis = extractPractionerNPIs(explanationOfBenefit);\n+        Set<String> allNPIs = new HashSet<>(npis.getRight());\n+        allNPIs.add(npis.getLeft());\n+\n+        LookBackAnswer lookBackAnswer = new LookBackAnswer(providerNPI, organizationID, withinMonth, operationsConfig.getLookBackDate())\n+                .addEobBillingPeriod(billingPeriod)\n+                .addEobOrganization(eobOrganizationID)\n+                .addEobProviders(allNPIs);\n+        LOGGER.info(\"billingPeriodDate={}, lookBackDate={}, monthsDifference={}, eobProvider={}, eobCareTeamProviders={}, jobProvider={}, eobOrganization={}, jobOrganization={}, withinLimit={}, eobProviderMatch={}, eobOrganizationMatch={}\",\n+                billingPeriod, operationsConfig.getLookBackDate(), lookBackAnswer.calculatedMonthDifference(), npis.getLeft(), npis.getRight(), providerNPI, eobOrganizationID,\n+                organizationID, lookBackAnswer.matchDateCriteria(), lookBackAnswer.providerMatchEob(), lookBackAnswer.orgMatchEob());\n+\n+        MDC.remove(EOB_ID);\n+        return lookBackAnswer.matchDateCriteria() && (lookBackAnswer.orgNPIMatchAnyEobNPIs() || lookBackAnswer.providerNPIMatchAnyEobNPIs());\n     }\n \n-    private Set<String> extractPractionerNPIs(ExplanationOfBenefit explanationOfBenefit) {\n-        Set<String> eobProviderNPIs = new HashSet<>();\n-        Optional<String> providerNPI = Optional.ofNullable(explanationOfBenefit)\n+    private Pair<String, Set<String>> extractPractionerNPIs(ExplanationOfBenefit explanationOfBenefit) {", "originalCommit": "df6c9264904066ccbae8cc3b242e7ed783de39da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4MDk4MA==", "url": "https://github.com/CMSgov/dpc-app/pull/996#discussion_r480380980", "bodyText": "Actually, maybe this is one case where it should be provider (i.e., extractProviderNpis(), since it's getting all the NPIs from the EoB.", "author": "em1", "createdAt": "2020-08-31T20:28:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4MDExNg=="}], "type": "inlineReview", "revised_code": {"commit": "fe4cbd60220174542c318c880a20dd291b9aeac5", "chunk": "diff --git a/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java b/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\nindex dcf52292..4b650b2b 100644\n--- a/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\n+++ b/dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java\n\n@@ -37,14 +38,14 @@ public class LookBackServiceImpl implements LookBackService {\n \n     @Override\n     @UnitOfWork(readOnly = true)\n-    public String getProviderNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n+    public String getPractitionerNPIFromRoster(UUID orgUUID, String providerOrRosterID, String patientMBI) {\n         //Expect only one roster for the parameters, otherwise return null\n         return rosterDAO.retrieveProviderNPIFromRoster(orgUUID, UUID.fromString(providerOrRosterID), patientMBI).orElse(null);\n     }\n \n     @Override\n     @UnitOfWork(readOnly = true)\n-    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String providerNPI, long withinMonth) {\n+    public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID organizationUUID, String practitionerNPI, long withinMonth) {\n         MDC.put(EOB_ID, explanationOfBenefit.getId());\n         Date billingPeriod = Optional.of(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getBillablePeriod)\n"}}, {"oid": "fe4cbd60220174542c318c880a20dd291b9aeac5", "url": "https://github.com/CMSgov/dpc-app/commit/fe4cbd60220174542c318c880a20dd291b9aeac5", "message": "change variable names", "committedDate": "2020-08-31T20:41:43Z", "type": "commit"}, {"oid": "9504d3030aca4d789c2ef8610887a0d88b47af14", "url": "https://github.com/CMSgov/dpc-app/commit/9504d3030aca4d789c2ef8610887a0d88b47af14", "message": "Merge branch 'master' into wh/DPC-641-match-org-or-provider-to-any-fields", "committedDate": "2020-08-31T20:54:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQwNDI3Nw==", "url": "https://github.com/CMSgov/dpc-app/pull/996#discussion_r480404277", "bodyText": "Similar blocks of code found in 5 locations. Consider refactoring.", "author": "codeclimate", "createdAt": "2020-08-31T21:17:27Z", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackAnswer.java", "diffHunk": "@@ -1,45 +1,84 @@\n package gov.cms.dpc.aggregation.service;\n \n+import org.apache.commons.lang3.StringUtils;\n+\n+import java.time.YearMonth;\n+import java.time.ZoneOffset;\n+import java.time.temporal.ChronoUnit;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n public class LookBackAnswer {\n \n-    private boolean matchLookBackLimitCriteria;\n-    private boolean matchProvidersCriteria;\n-    private boolean matchOrganizationCriteria;\n-    private long billingDateMonthsFromNow;\n+    private final String practitionerNPI;\n+    private final String organizationNPI;\n+    private final long withinMonths;\n+    private final Date lookBackMonth;\n+\n+    private final Set<String> eobProviderNPIs = new HashSet<>();\n+    private String eobOrganizationNPI;\n+    private Date billingPeriodEndDate;\n+\n+    public LookBackAnswer(String practitionerNPI, String organizationNPI, long withinMonths, Date lookBackMonth) {", "originalCommit": "9504d3030aca4d789c2ef8610887a0d88b47af14", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}