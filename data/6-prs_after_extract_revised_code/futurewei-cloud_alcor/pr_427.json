{"pr_number": 427, "pr_title": "[Data Plane Mgr] Input Validation Module", "pr_createdAt": "2020-10-16T19:08:02Z", "pr_url": "https://github.com/futurewei-cloud/alcor/pull/427", "timeline": [{"oid": "24b9b76ae349f277ac55f1cc11e81636d1569b6d", "url": "https://github.com/futurewei-cloud/alcor/commit/24b9b76ae349f277ac55f1cc11e81636d1569b6d", "message": "commit message", "committedDate": "2020-10-07T21:49:22Z", "type": "commit"}, {"oid": "08ec421662ef56559a388e6c7308aa47cfd07a6b", "url": "https://github.com/futurewei-cloud/alcor/commit/08ec421662ef56559a388e6c7308aa47cfd07a6b", "message": "Merge branch 'master' of https://github.com/futurewei-cloud/alcor into new_master", "committedDate": "2020-10-07T22:00:25Z", "type": "commit"}, {"oid": "2507b8fc44a4ca94da310b73c11453cec9f2504b", "url": "https://github.com/futurewei-cloud/alcor/commit/2507b8fc44a4ca94da310b73c11453cec9f2504b", "message": "Merge branch 'master' of https://github.com/futurewei-cloud/alcor into new_master", "committedDate": "2020-10-15T17:12:49Z", "type": "commit"}, {"oid": "8cab6bfa9573926c29b9f8dbbeab732a9de1da7e", "url": "https://github.com/futurewei-cloud/alcor/commit/8cab6bfa9573926c29b9f8dbbeab732a9de1da7e", "message": "Merge branch 'master' of https://github.com/futurewei-cloud/alcor into new_master", "committedDate": "2020-10-15T23:33:06Z", "type": "commit"}, {"oid": "d9d2a5822429286e2b01ce0842f16cb70dc5168f", "url": "https://github.com/futurewei-cloud/alcor/commit/d9d2a5822429286e2b01ce0842f16cb70dc5168f", "message": "Merge branch 'master' of https://github.com/futurewei-cloud/alcor into new_master", "committedDate": "2020-10-16T16:57:50Z", "type": "commit"}, {"oid": "632b7c11d12d77f79869b864294dbf4757390e5f", "url": "https://github.com/futurewei-cloud/alcor/commit/632b7c11d12d77f79869b864294dbf4757390e5f", "message": "update", "committedDate": "2020-10-16T19:00:19Z", "type": "commit"}, {"oid": "9461812c1a22dff1a680e14b23a2e86544475144", "url": "https://github.com/futurewei-cloud/alcor/commit/9461812c1a22dff1a680e14b23a2e86544475144", "message": "update", "committedDate": "2020-10-16T19:03:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNjMyOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506716329", "bodyText": "I think we can move the exception from com.futurewei.alcor.dataplane.exception.validation one level up to\ncom.futurewei.alcor.dataplane.exception\nNot big deal. Your call.", "author": "xieus", "createdAt": "2020-10-16T20:53:48Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/validation/OperationTypeNotValid.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.exception.validation;", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1NDI5Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508054292", "bodyText": "Sure", "author": "kevin-zhonghao", "createdAt": "2020-10-19T20:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNjMyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/validation/OperationTypeNotValid.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/OperationTypeNotValid.java\nsimilarity index 93%\nrename from services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/validation/OperationTypeNotValid.java\nrename to services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/OperationTypeNotValid.java\nindex 11015e20c..ffc8647d5 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/validation/OperationTypeNotValid.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/exception/OperationTypeNotValid.java\n\n@@ -13,7 +13,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n         See the License for the specific language governing permissions and\n         limitations under the License.\n */\n-package com.futurewei.alcor.dataplane.exception.validation;\n+package com.futurewei.alcor.dataplane.exception;\n \n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.ResponseStatus;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzIxMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506717210", "bodyText": "The input networkConfig could come from any other microservice, e.g., Subnet mgr when we start enabling the subnet-level programming path.\nSo let us keep the method name generic, like validateInput.", "author": "xieus", "createdAt": "2020-10-16T20:56:00Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java", "diffHunk": "@@ -418,6 +419,10 @@ private HostGoalState buildHostGoalState(NetworkConfiguration networkConfig, Str\n \n     @Override\n     public NetworkConfiguration createNetworkConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+\n+        // validation for networkConfig\n+        DataPlaneManagerValidationUtil.checkInputPayloadFromPortManager(networkConfig);", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1NTM2NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508055364", "bodyText": "Yeah you are right.", "author": "kevin-zhonghao", "createdAt": "2020-10-19T20:53:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java\nindex 231f2dc94..eec526191 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java\n\n@@ -421,7 +421,7 @@ public class DataPlaneServiceImpl implements DataPlaneService {\n     public NetworkConfiguration createNetworkConfiguration(NetworkConfiguration networkConfig) throws Exception {\n \n         // validation for networkConfig\n-        DataPlaneManagerValidationUtil.checkInputPayloadFromPortManager(networkConfig);\n+        DataPlaneManagerValidationUtil.validateInput(networkConfig);\n \n         List<HostGoalState> hostGoalStates = new ArrayList<>();\n         if (ResourceType.PORT.equals(networkConfig.getRsType())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzY4OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506717688", "bodyText": "rsType and opType are DPM internal variable so are supposed to be NULL.\nI know it is confusing here. We would need to keep \"internal\" variable internal to DPM, for example, create an DPM-internal entity class named \"InternalNetworkConfiguration\" which is a child class of NetworkConfiguration, and place the internal class inside DPM service, not under /web.", "author": "xieus", "createdAt": "2020-10-16T20:57:11Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {\n+        if (networkConfig == null) {\n+            throw new NetworkConfigurationIsNull();\n+        }\n+\n+        // rsType\n+        Common.ResourceType rsType = networkConfig.getRsType();\n+        if (rsType == null) {\n+            throw new ResourceTypeNotValid();\n+        }\n+\n+        // opType\n+        Common.OperationType opType = networkConfig.getOpType();\n+        if (opType == null) {\n+            throw new OperationTypeNotValid();\n+        }", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1ODU2OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508058568", "bodyText": "Make sense, I won't validate rsType and opType in validation method", "author": "kevin-zhonghao", "createdAt": "2020-10-19T20:59:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTI4Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508059283", "bodyText": "Or check if their value are null", "author": "kevin-zhonghao", "createdAt": "2020-10-19T21:00:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzY4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyMDQyMg==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508120422", "bodyText": "Let us keep the validation (to make sure it is NULL) until we get rid of the field and then remove the validation.", "author": "xieus", "createdAt": "2020-10-19T23:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxNzY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMDk5Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506720993", "bodyText": "Check string null or empty is quite common.\nPls take a look at https://www.baeldung.com/java-blank-empty-strings.\nOption 3.1 or 6 looks good to me.", "author": "xieus", "createdAt": "2020-10-16T21:05:24Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {\n+        if (networkConfig == null) {\n+            throw new NetworkConfigurationIsNull();\n+        }\n+\n+        // rsType\n+        Common.ResourceType rsType = networkConfig.getRsType();\n+        if (rsType == null) {\n+            throw new ResourceTypeNotValid();\n+        }\n+\n+        // opType\n+        Common.OperationType opType = networkConfig.getOpType();\n+        if (opType == null) {\n+            throw new OperationTypeNotValid();\n+        }\n+\n+        // ports_internal\n+        List<InternalPortEntity> portEntities = networkConfig.getPortEntities();\n+        if (portEntities == null || portEntities.size() == 0) {\n+            throw new PortEntitiesIsNull();\n+        }\n+        for (int i = 0; i < portEntities.size(); i ++) {\n+            InternalPortEntity port = portEntities.get(i);\n+\n+            // binding_host_ip\n+            String bindingHostIP = port.getBindingHostIP();\n+            if (bindingHostIP == null || bindingHostIP.equals(\"\")) {", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MTM3Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508061373", "bodyText": "That's really helpful", "author": "kevin-zhonghao", "createdAt": "2020-10-19T21:04:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMDk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMTM5MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506721390", "bodyText": "Can we enrich the exception by including extra information, like subnet id in this case?", "author": "xieus", "createdAt": "2020-10-16T21:06:28Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {\n+        if (networkConfig == null) {\n+            throw new NetworkConfigurationIsNull();\n+        }\n+\n+        // rsType\n+        Common.ResourceType rsType = networkConfig.getRsType();\n+        if (rsType == null) {\n+            throw new ResourceTypeNotValid();\n+        }\n+\n+        // opType\n+        Common.OperationType opType = networkConfig.getOpType();\n+        if (opType == null) {\n+            throw new OperationTypeNotValid();\n+        }\n+\n+        // ports_internal\n+        List<InternalPortEntity> portEntities = networkConfig.getPortEntities();\n+        if (portEntities == null || portEntities.size() == 0) {\n+            throw new PortEntitiesIsNull();\n+        }\n+        for (int i = 0; i < portEntities.size(); i ++) {\n+            InternalPortEntity port = portEntities.get(i);\n+\n+            // binding_host_ip\n+            String bindingHostIP = port.getBindingHostIP();\n+            if (bindingHostIP == null || bindingHostIP.equals(\"\")) {\n+                throw new BindingHostIPNotFound();\n+            }\n+        }\n+\n+        // vpcs_internal\n+        List<VpcEntity> vpcs = networkConfig.getVpcs();\n+        if (vpcs != null) {\n+            for (int i = 0; i < vpcs.size(); i ++) {\n+                VpcEntity vpc = vpcs.get(i);\n+\n+                // vpc_id\n+                String vpcId = vpc.getId();\n+                if (vpcId == null || vpcId.equals(\"\")) {\n+                    throw new VpcIdNotFound();\n+                }\n+            }\n+        }\n+\n+        // subnets_internal\n+        List<InternalSubnetEntity> subnets = networkConfig.getSubnets();\n+        if (subnets == null || subnets.size() == 0) {\n+            throw new SubnetsNotFound();\n+        }\n+        for (int i = 0; i < subnets.size(); i ++) {\n+            InternalSubnetEntity subnet = subnets.get(i);\n+\n+            // tunnel_id\n+            Long tunnelId = subnet.getTunnelId();\n+            if (tunnelId == null) {\n+                throw new TunnelIdNotFound();", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2NjA4MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508066080", "bodyText": "Sure", "author": "kevin-zhonghao", "createdAt": "2020-10-19T21:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMTM5MA=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMjc5MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506722791", "bodyText": "Become we have a variety of validations, each one field in networkConfig.\nRecommend to use a similar way to com.futurewei.alcor.portmanager.util.checkPort by packing one field validation in a single method.", "author": "xieus", "createdAt": "2020-10-16T21:10:35Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTU2OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508081568", "bodyText": "got it", "author": "kevin-zhonghao", "createdAt": "2020-10-19T21:46:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMjc5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMjk3NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506722974", "bodyText": "Make class name generic, like validateInput", "author": "xieus", "createdAt": "2020-10-16T21:11:09Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMzI3Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r506723273", "bodyText": "For neighborInfo, not only hostIP, but also other fields are null or empty, we should throw exception.", "author": "xieus", "createdAt": "2020-10-16T21:12:04Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.utils;\n+\n+import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.schema.Common;\n+import com.futurewei.alcor.web.entity.dataplane.*;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+\n+import java.util.List;\n+\n+public class DataPlaneManagerValidationUtil {\n+\n+    public static void checkInputPayloadFromPortManager (NetworkConfiguration networkConfig) throws Exception {\n+        if (networkConfig == null) {\n+            throw new NetworkConfigurationIsNull();\n+        }\n+\n+        // rsType\n+        Common.ResourceType rsType = networkConfig.getRsType();\n+        if (rsType == null) {\n+            throw new ResourceTypeNotValid();\n+        }\n+\n+        // opType\n+        Common.OperationType opType = networkConfig.getOpType();\n+        if (opType == null) {\n+            throw new OperationTypeNotValid();\n+        }\n+\n+        // ports_internal\n+        List<InternalPortEntity> portEntities = networkConfig.getPortEntities();\n+        if (portEntities == null || portEntities.size() == 0) {\n+            throw new PortEntitiesIsNull();\n+        }\n+        for (int i = 0; i < portEntities.size(); i ++) {\n+            InternalPortEntity port = portEntities.get(i);\n+\n+            // binding_host_ip\n+            String bindingHostIP = port.getBindingHostIP();\n+            if (bindingHostIP == null || bindingHostIP.equals(\"\")) {\n+                throw new BindingHostIPNotFound();\n+            }\n+        }\n+\n+        // vpcs_internal\n+        List<VpcEntity> vpcs = networkConfig.getVpcs();\n+        if (vpcs != null) {\n+            for (int i = 0; i < vpcs.size(); i ++) {\n+                VpcEntity vpc = vpcs.get(i);\n+\n+                // vpc_id\n+                String vpcId = vpc.getId();\n+                if (vpcId == null || vpcId.equals(\"\")) {\n+                    throw new VpcIdNotFound();\n+                }\n+            }\n+        }\n+\n+        // subnets_internal\n+        List<InternalSubnetEntity> subnets = networkConfig.getSubnets();\n+        if (subnets == null || subnets.size() == 0) {\n+            throw new SubnetsNotFound();\n+        }\n+        for (int i = 0; i < subnets.size(); i ++) {\n+            InternalSubnetEntity subnet = subnets.get(i);\n+\n+            // tunnel_id\n+            Long tunnelId = subnet.getTunnelId();\n+            if (tunnelId == null) {\n+                throw new TunnelIdNotFound();\n+            }\n+        }\n+\n+        // security_groups_internal\n+        List<SecurityGroup> securityGroups = networkConfig.getSecurityGroups();\n+        if (securityGroups != null) {\n+            for (int i = 0; i < securityGroups.size(); i ++) {\n+                SecurityGroup securityGroup = securityGroups.get(i);\n+            }\n+        }\n+\n+        // neighbor_info\n+        List<NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n+        if (neighborInfos != null) {\n+            for (int i = 0; i < neighborInfos.size(); i ++) {\n+                NeighborInfo neighborInfo = neighborInfos.get(i);\n+\n+                // host_ip\n+                String hostIp = neighborInfo.getHostIp();", "originalCommit": "9461812c1a22dff1a680e14b23a2e86544475144", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2NTU2NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/427#discussion_r508065565", "bodyText": "NP", "author": "kevin-zhonghao", "createdAt": "2020-10-19T21:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyMzI3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "2c84e91e977de5c0575331712a0582cdb616f261", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\nindex 4dcbf7980..7bc608690 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerValidationUtil.java\n\n@@ -15,7 +15,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n */\n package com.futurewei.alcor.dataplane.utils;\n \n-import com.futurewei.alcor.dataplane.exception.validation.*;\n+import com.futurewei.alcor.dataplane.exception.*;\n import com.futurewei.alcor.schema.Common;\n import com.futurewei.alcor.web.entity.dataplane.*;\n import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n"}}, {"oid": "2c84e91e977de5c0575331712a0582cdb616f261", "url": "https://github.com/futurewei-cloud/alcor/commit/2c84e91e977de5c0575331712a0582cdb616f261", "message": "update", "committedDate": "2020-10-19T21:45:19Z", "type": "commit"}, {"oid": "507acc2ae6e694fd61eea356e0b32ddbf8326132", "url": "https://github.com/futurewei-cloud/alcor/commit/507acc2ae6e694fd61eea356e0b32ddbf8326132", "message": "update", "committedDate": "2020-10-19T22:08:02Z", "type": "commit"}, {"oid": "c23c48d5c7f96afb6e7d3a261be2bfcb99b96542", "url": "https://github.com/futurewei-cloud/alcor/commit/c23c48d5c7f96afb6e7d3a261be2bfcb99b96542", "message": "update", "committedDate": "2020-10-19T22:08:57Z", "type": "commit"}, {"oid": "a91e75951c68e1cc2318b594b206fe337f6556ad", "url": "https://github.com/futurewei-cloud/alcor/commit/a91e75951c68e1cc2318b594b206fe337f6556ad", "message": "update", "committedDate": "2020-10-19T22:12:28Z", "type": "commit"}, {"oid": "1eccd06a5ac8895fece653f178077a615ac84924", "url": "https://github.com/futurewei-cloud/alcor/commit/1eccd06a5ac8895fece653f178077a615ac84924", "message": "update", "committedDate": "2020-10-19T22:14:35Z", "type": "commit"}]}