{"pr_number": 154, "pr_title": "[Micro-service] Subnet Manager - implementation and deployment in K8s", "pr_createdAt": "2020-04-09T06:36:42Z", "pr_url": "https://github.com/futurewei-cloud/alcor/pull/154", "timeline": [{"oid": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "url": "https://github.com/futurewei-cloud/alcor/commit/5fbdb2d16274cec8daf1e89de539473058bd8fb7", "message": "Remove vpcId in SubnetManagerAPIs and update the parameter format", "committedDate": "2020-04-20T19:21:13Z", "type": "commit"}, {"oid": "bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "url": "https://github.com/futurewei-cloud/alcor/commit/bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "message": "Add a new API to get all subnets in a project", "committedDate": "2020-04-20T21:11:17Z", "type": "commit"}, {"oid": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "url": "https://github.com/futurewei-cloud/alcor/commit/3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "message": "subnet manager update - comments issues", "committedDate": "2020-04-20T21:42:43Z", "type": "commit"}, {"oid": "928358ad845576848b72f826ca12f6cb4d8d1267", "url": "https://github.com/futurewei-cloud/alcor/commit/928358ad845576848b72f826ca12f6cb4d8d1267", "message": "Merge pull request #20 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update - comments issues", "committedDate": "2020-04-20T21:46:00Z", "type": "commit"}, {"oid": "82f28a1a356553499cf9b04b273e1c130c3f2682", "url": "https://github.com/futurewei-cloud/alcor/commit/82f28a1a356553499cf9b04b273e1c130c3f2682", "message": "Merge pull request #21 from kevin-zhonghao/master\n\nsync up", "committedDate": "2020-04-20T21:49:09Z", "type": "commit"}, {"oid": "a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "url": "https://github.com/futurewei-cloud/alcor/commit/a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "message": "Fix duplicated webclient bean issue", "committedDate": "2020-04-21T04:56:54Z", "type": "commit"}, {"oid": "133ab73e75e63b3cbbdaf3229ccf11d24b392035", "url": "https://github.com/futurewei-cloud/alcor/commit/133ab73e75e63b3cbbdaf3229ccf11d24b392035", "message": "api gateway update", "committedDate": "2020-04-21T04:59:38Z", "type": "commit"}, {"oid": "80aa7111dac5348423c91c5bf79709de6d7efb9d", "url": "https://github.com/futurewei-cloud/alcor/commit/80aa7111dac5348423c91c5bf79709de6d7efb9d", "message": "Merge pull request #22 from kevin-zhonghao/feature/route_manager\n\napi gateway update", "committedDate": "2020-04-21T05:03:07Z", "type": "commit"}, {"oid": "5628dd9a478eec91e0807d6d66f3623296a71adc", "url": "https://github.com/futurewei-cloud/alcor/commit/5628dd9a478eec91e0807d6d66f3623296a71adc", "message": "Merge pull request #23 from kevin-zhonghao/master\n\napi gateway update", "committedDate": "2020-04-21T05:04:25Z", "type": "commit"}, {"oid": "4e3c033782a3fc852c0b53882577d8eca50d2780", "url": "https://github.com/futurewei-cloud/alcor/commit/4e3c033782a3fc852c0b53882577d8eca50d2780", "message": "Update vpcManagerServiceURL and subnetManagerServiceURL", "committedDate": "2020-04-21T05:52:24Z", "type": "commit"}, {"oid": "46cee78617f584d217afae421f18d086edf7ea10", "url": "https://github.com/futurewei-cloud/alcor/commit/46cee78617f584d217afae421f18d086edf7ea10", "message": "Merge pull request #24 from kevin-zhonghao/master\n\nUpdate vpcManagerServiceURL and subnetManagerServiceURL", "committedDate": "2020-04-21T05:55:03Z", "type": "commit"}, {"oid": "e224f0083872c7d35f05661d7a503f377fa25d64", "url": "https://github.com/futurewei-cloud/alcor/commit/e224f0083872c7d35f05661d7a503f377fa25d64", "message": "Merge pull request #25 from futurewei-cloud/master\n\n[Micro-service] Private IP manager (#164)", "committedDate": "2020-04-22T17:15:49Z", "type": "commit"}, {"oid": "f6fc53f16c6827c0840d04010be665308b845728", "url": "https://github.com/futurewei-cloud/alcor/commit/f6fc53f16c6827c0840d04010be665308b845728", "message": "Merge pull request #26 from kevin-zhonghao/master\n\nip_manager", "committedDate": "2020-04-22T17:16:55Z", "type": "commit"}, {"oid": "513aa00613ba2d98d98661cc271c915d2d12104a", "url": "https://github.com/futurewei-cloud/alcor/commit/513aa00613ba2d98d98661cc271c915d2d12104a", "message": "subnet manager update", "committedDate": "2020-04-23T00:00:17Z", "type": "commit"}, {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930", "url": "https://github.com/futurewei-cloud/alcor/commit/f52b25dce6f357f66931c12fe75381eac92c8930", "message": "Merge pull request #27 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-23T00:03:22Z", "type": "commit"}, {"oid": "e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "url": "https://github.com/futurewei-cloud/alcor/commit/e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "message": "subnet manager update", "committedDate": "2020-04-23T18:02:38Z", "type": "commit"}, {"oid": "bbebd12fcebb3a31e6869c3a128864c96779d33e", "url": "https://github.com/futurewei-cloud/alcor/commit/bbebd12fcebb3a31e6869c3a128864c96779d33e", "message": "Merge pull request #28 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-23T18:05:22Z", "type": "commit"}, {"oid": "0adef992724bd6938f925e28b255c2283e106c7a", "url": "https://github.com/futurewei-cloud/alcor/commit/0adef992724bd6938f925e28b255c2283e106c7a", "message": "Merge pull request #29 from kevin-zhonghao/master\n\nvpc manager update", "committedDate": "2020-04-23T18:08:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxNjA1OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r414016059", "bodyText": "gateway mac address", "author": "xieus", "createdAt": "2020-04-23T18:11:49Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java", "diffHunk": "@@ -50,31 +50,44 @@\n     @JsonProperty(\"routes\")\n     private List<RouteWebObject> routes;\n \n+    @JsonProperty(\"mac_address\")\n+    private String macAddress;", "originalCommit": "f52b25dce6f357f66931c12fe75381eac92c8930", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMTAxOA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r414021018", "bodyText": "okay ~", "author": "kevin-zhonghao", "createdAt": "2020-04-23T18:19:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxNjA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "2f17b628b38eb670bf31a23d48671f60b1701aeb", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java\nindex 487c22c9..5967e57d 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java\n\n@@ -51,7 +51,7 @@ public class SubnetState extends CustomerResource {\n     private List<RouteWebObject> routes;\n \n     @JsonProperty(\"mac_address\")\n-    private String macAddress;\n+    private String gatewayMacAddress;\n \n     @JsonProperty(\"dns_list\")\n     private List<String> dnsList;\n"}}, {"oid": "2f17b628b38eb670bf31a23d48671f60b1701aeb", "url": "https://github.com/futurewei-cloud/alcor/commit/2f17b628b38eb670bf31a23d48671f60b1701aeb", "message": "subnet manager update", "committedDate": "2020-04-23T18:20:43Z", "type": "commit"}, {"oid": "39450ae0739d75c12ca6d81e21bd679e80d66f67", "url": "https://github.com/futurewei-cloud/alcor/commit/39450ae0739d75c12ca6d81e21bd679e80d66f67", "message": "Merge pull request #30 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-23T18:22:23Z", "type": "commit"}, {"oid": "245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "url": "https://github.com/futurewei-cloud/alcor/commit/245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "message": "Merge branch 'master' into master", "committedDate": "2020-04-23T18:28:40Z", "type": "commit"}, {"oid": "a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "url": "https://github.com/futurewei-cloud/alcor/commit/a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "message": "vpcmanager", "committedDate": "2020-03-24T23:00:44Z", "type": "commit"}, {"oid": "93da5e40ad87f49cfc891b56a8618c25567b9c40", "url": "https://github.com/futurewei-cloud/alcor/commit/93da5e40ad87f49cfc891b56a8618c25567b9c40", "message": "vpc manager service update", "committedDate": "2020-03-24T23:35:04Z", "type": "commit"}, {"oid": "bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "url": "https://github.com/futurewei-cloud/alcor/commit/bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "message": "Merge pull request #1 from futurewei-cloud/master\n\nReplace Redis with Apache Ignite for in memory cache and db (#129)", "committedDate": "2020-03-25T16:12:19Z", "type": "commit"}, {"oid": "2b6a43fb0ae185b880969b49ce852434d1799a24", "url": "https://github.com/futurewei-cloud/alcor/commit/2b6a43fb0ae185b880969b49ce852434d1799a24", "message": "vpc manager directory structure update", "committedDate": "2020-03-25T18:26:03Z", "type": "commit"}, {"oid": "49ad0b0272ef71832af87ff93ab68c80a8300121", "url": "https://github.com/futurewei-cloud/alcor/commit/49ad0b0272ef71832af87ff93ab68c80a8300121", "message": "common service and updated vpcmanager", "committedDate": "2020-03-27T07:02:52Z", "type": "commit"}, {"oid": "c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "url": "https://github.com/futurewei-cloud/alcor/commit/c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "message": "Rename directory name from Common-service to lib", "committedDate": "2020-03-27T07:28:26Z", "type": "commit"}, {"oid": "3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "url": "https://github.com/futurewei-cloud/alcor/commit/3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "message": "Move lib files under com.futurewei.alcor.common", "committedDate": "2020-03-27T07:34:01Z", "type": "commit"}, {"oid": "715675ee72a3518e87c9280a57ffe52fa242b3e8", "url": "https://github.com/futurewei-cloud/alcor/commit/715675ee72a3518e87c9280a57ffe52fa242b3e8", "message": "fix package paths in lib", "committedDate": "2020-03-27T07:53:44Z", "type": "commit"}, {"oid": "4de3c83ba533eb941ab9a2392f863eda36baa0a9", "url": "https://github.com/futurewei-cloud/alcor/commit/4de3c83ba533eb941ab9a2392f863eda36baa0a9", "message": "Rename package path to com.futurewei.alcor.vpcmanager", "committedDate": "2020-03-27T08:04:01Z", "type": "commit"}, {"oid": "8d2a24da02a5540318f52d288030fbab99b776b6", "url": "https://github.com/futurewei-cloud/alcor/commit/8d2a24da02a5540318f52d288030fbab99b776b6", "message": "Update common jar and use latest package path in vpcmanager", "committedDate": "2020-03-27T08:12:46Z", "type": "commit"}, {"oid": "84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "url": "https://github.com/futurewei-cloud/alcor/commit/84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "message": "update vpc manager jar package name", "committedDate": "2020-03-27T08:14:40Z", "type": "commit"}, {"oid": "00328559311fede7087bf48ed328008e748f2b0b", "url": "https://github.com/futurewei-cloud/alcor/commit/00328559311fede7087bf48ed328008e748f2b0b", "message": "change Dockerfilr", "committedDate": "2020-03-27T17:19:05Z", "type": "commit"}, {"oid": "510fe4aced4f39764ac8f5a30df4783a67bef57a", "url": "https://github.com/futurewei-cloud/alcor/commit/510fe4aced4f39764ac8f5a30df4783a67bef57a", "message": "delete useless file", "committedDate": "2020-03-27T17:22:43Z", "type": "commit"}, {"oid": "2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "url": "https://github.com/futurewei-cloud/alcor/commit/2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "message": "Reformat some files in vpc manager", "committedDate": "2020-03-27T17:48:42Z", "type": "commit"}, {"oid": "b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "url": "https://github.com/futurewei-cloud/alcor/commit/b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "message": "Reformat files in common lib", "committedDate": "2020-03-27T17:55:22Z", "type": "commit"}, {"oid": "0c06645add0d6720d8c1475cdc45e049ec370987", "url": "https://github.com/futurewei-cloud/alcor/commit/0c06645add0d6720d8c1475cdc45e049ec370987", "message": "route manager codes and update vpc manager", "committedDate": "2020-03-30T03:48:56Z", "type": "commit"}, {"oid": "bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "url": "https://github.com/futurewei-cloud/alcor/commit/bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "message": "update vpc_manager.yaml, route_manager_yaml", "committedDate": "2020-03-30T04:05:12Z", "type": "commit"}, {"oid": "3a2c035eda11418a0473781cd195d9492aa8a72a", "url": "https://github.com/futurewei-cloud/alcor/commit/3a2c035eda11418a0473781cd195d9492aa8a72a", "message": "update", "committedDate": "2020-03-30T04:07:49Z", "type": "commit"}, {"oid": "a739a9c0af774dcf9727474391ab796fa6ea43ef", "url": "https://github.com/futurewei-cloud/alcor/commit/a739a9c0af774dcf9727474391ab796fa6ea43ef", "message": "Delete unused files", "committedDate": "2020-03-30T04:15:29Z", "type": "commit"}, {"oid": "8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "url": "https://github.com/futurewei-cloud/alcor/commit/8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "message": "Add get/create apis on route manager and post call from vpc to route", "committedDate": "2020-03-30T06:55:51Z", "type": "commit"}, {"oid": "771dad76d57ef25344c77e266bca90b313055225", "url": "https://github.com/futurewei-cloud/alcor/commit/771dad76d57ef25344c77e266bca90b313055225", "message": "update vpc controller and vpcState", "committedDate": "2020-03-30T21:23:25Z", "type": "commit"}, {"oid": "d07ff34f909437485a64e40e0f8d71562c8fc8bd", "url": "https://github.com/futurewei-cloud/alcor/commit/d07ff34f909437485a64e40e0f8d71562c8fc8bd", "message": "Update gitignore to exclude logs file", "committedDate": "2020-03-31T02:38:49Z", "type": "commit"}, {"oid": "a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "url": "https://github.com/futurewei-cloud/alcor/commit/a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "message": "Merge from alcor/master", "committedDate": "2020-03-31T04:24:32Z", "type": "commit"}, {"oid": "e27b2facfe4e77d57f42f08fd8c9633152e071e1", "url": "https://github.com/futurewei-cloud/alcor/commit/e27b2facfe4e77d57f42f08fd8c9633152e071e1", "message": "Merge from vpcmanager to alcor.vpcmanager", "committedDate": "2020-03-31T05:13:59Z", "type": "commit"}, {"oid": "9070cd0137d7dfa0b8c200de531771ec5b839f45", "url": "https://github.com/futurewei-cloud/alcor/commit/9070cd0137d7dfa0b8c200de531771ec5b839f45", "message": "Remove lib jar and add dependency on pom", "committedDate": "2020-03-31T05:16:14Z", "type": "commit"}, {"oid": "8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "url": "https://github.com/futurewei-cloud/alcor/commit/8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "message": "Remove lib jar and add dependency on pom for route manager", "committedDate": "2020-03-31T05:17:36Z", "type": "commit"}, {"oid": "0b58f598d1df2422900c3c9b6768342e2ec15478", "url": "https://github.com/futurewei-cloud/alcor/commit/0b58f598d1df2422900c3c9b6768342e2ec15478", "message": "update alcor route manager service and package name", "committedDate": "2020-03-31T05:22:53Z", "type": "commit"}, {"oid": "b6c328f29bc96c5b46b074f313eb68859c54fc62", "url": "https://github.com/futurewei-cloud/alcor/commit/b6c328f29bc96c5b46b074f313eb68859c54fc62", "message": "Fix vpc manager duplicated UTs", "committedDate": "2020-03-31T05:26:53Z", "type": "commit"}, {"oid": "d11745b658f1092eaaf2dec138e1578dde36474d", "url": "https://github.com/futurewei-cloud/alcor/commit/d11745b658f1092eaaf2dec138e1578dde36474d", "message": "redis-route.yaml", "committedDate": "2020-03-31T05:35:20Z", "type": "commit"}, {"oid": "0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "url": "https://github.com/futurewei-cloud/alcor/commit/0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "message": "Update setRouteWebObjectList", "committedDate": "2020-03-31T05:56:16Z", "type": "commit"}, {"oid": "f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "url": "https://github.com/futurewei-cloud/alcor/commit/f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager", "committedDate": "2020-03-31T06:00:31Z", "type": "commit"}, {"oid": "6575ac236283bb433b4cd980015a267b8cef9ef4", "url": "https://github.com/futurewei-cloud/alcor/commit/6575ac236283bb433b4cd980015a267b8cef9ef4", "message": "Fix setter/getter issue in VpcState", "committedDate": "2020-03-31T06:09:21Z", "type": "commit"}, {"oid": "6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "url": "https://github.com/futurewei-cloud/alcor/commit/6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "message": "Move VpcManager under Services", "committedDate": "2020-03-31T06:19:16Z", "type": "commit"}, {"oid": "a25c9f024acc9c14c2b04fb36101b215c5727708", "url": "https://github.com/futurewei-cloud/alcor/commit/a25c9f024acc9c14c2b04fb36101b215c5727708", "message": "Rename vpcmanager to vpc_manager", "committedDate": "2020-03-31T06:22:22Z", "type": "commit"}, {"oid": "27e62ac7be121800ffecfdf9f89f17d54e7452e1", "url": "https://github.com/futurewei-cloud/alcor/commit/27e62ac7be121800ffecfdf9f89f17d54e7452e1", "message": "Move routemanager under services and rename it to route_manager", "committedDate": "2020-03-31T06:23:47Z", "type": "commit"}, {"oid": "0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "url": "https://github.com/futurewei-cloud/alcor/commit/0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "message": "Fix package issues for route_manager", "committedDate": "2020-03-31T06:33:46Z", "type": "commit"}, {"oid": "3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "url": "https://github.com/futurewei-cloud/alcor/commit/3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "message": "Add web route schema and update vpc schema", "committedDate": "2020-03-31T06:47:51Z", "type": "commit"}, {"oid": "3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "url": "https://github.com/futurewei-cloud/alcor/commit/3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "message": "Delete unused yaml files for vpcmanager", "committedDate": "2020-03-31T07:03:26Z", "type": "commit"}, {"oid": "e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "url": "https://github.com/futurewei-cloud/alcor/commit/e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "message": "Remove unused codes in VpcController", "committedDate": "2020-04-02T13:46:03Z", "type": "commit"}, {"oid": "3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "url": "https://github.com/futurewei-cloud/alcor/commit/3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "message": "Address format comments", "committedDate": "2020-04-02T15:24:50Z", "type": "commit"}, {"oid": "057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "url": "https://github.com/futurewei-cloud/alcor/commit/057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "message": "update dynamically load configuration file in kubernetes", "committedDate": "2020-04-02T22:40:11Z", "type": "commit"}, {"oid": "90f06509f2230d653d644685de2e0bdf91baa6f3", "url": "https://github.com/futurewei-cloud/alcor/commit/90f06509f2230d653d644685de2e0bdf91baa6f3", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager", "committedDate": "2020-04-02T22:40:43Z", "type": "commit"}, {"oid": "92a4853fc6056fd4a1df1d13e4c103f6026254ce", "url": "https://github.com/futurewei-cloud/alcor/commit/92a4853fc6056fd4a1df1d13e4c103f6026254ce", "message": "update subnet manager and kubernetes config", "committedDate": "2020-04-08T00:15:12Z", "type": "commit"}, {"oid": "fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "url": "https://github.com/futurewei-cloud/alcor/commit/fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "message": "update", "committedDate": "2020-04-09T01:00:05Z", "type": "commit"}, {"oid": "246a9676e137bc85b1ca76c9d64d7746a48892bf", "url": "https://github.com/futurewei-cloud/alcor/commit/246a9676e137bc85b1ca76c9d64d7746a48892bf", "message": "s", "committedDate": "2020-04-09T01:14:01Z", "type": "commit"}, {"oid": "1e0437f2a15fe1f1460e2b559d90372221d945c2", "url": "https://github.com/futurewei-cloud/alcor/commit/1e0437f2a15fe1f1460e2b559d90372221d945c2", "message": "update", "committedDate": "2020-04-09T06:27:17Z", "type": "commit"}, {"oid": "0d83e814f3c931bb01c6f3dc2c351009471e42fe", "url": "https://github.com/futurewei-cloud/alcor/commit/0d83e814f3c931bb01c6f3dc2c351009471e42fe", "message": "Merge pull request #3 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager", "committedDate": "2020-04-09T06:32:29Z", "type": "commit"}, {"oid": "ea63ded118de2a3d5adcc2d3f12608677861df14", "url": "https://github.com/futurewei-cloud/alcor/commit/ea63ded118de2a3d5adcc2d3f12608677861df14", "message": "subnet unit test", "committedDate": "2020-04-09T21:42:33Z", "type": "commit"}, {"oid": "c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "url": "https://github.com/futurewei-cloud/alcor/commit/c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "message": "Delete old files", "committedDate": "2020-04-09T22:03:25Z", "type": "commit"}, {"oid": "498c25db2bb78d29a2602c4068493d77537c430c", "url": "https://github.com/futurewei-cloud/alcor/commit/498c25db2bb78d29a2602c4068493d77537c430c", "message": "s", "committedDate": "2020-04-09T22:09:17Z", "type": "commit"}, {"oid": "825e40628b7c2471c0ff19756ca15de7cdfd79ba", "url": "https://github.com/futurewei-cloud/alcor/commit/825e40628b7c2471c0ff19756ca15de7cdfd79ba", "message": "u", "committedDate": "2020-04-09T22:10:36Z", "type": "commit"}, {"oid": "e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "url": "https://github.com/futurewei-cloud/alcor/commit/e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "message": "Merge branch 'master' into feature/route_manager\n\n# Conflicts:\n#\tservices/subnet_manager/pom.xml\n#\tservices/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\n#\tservices/subnet_manager/src/main/resources/application.properties\n#\tservices/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetApplicationTests.java", "committedDate": "2020-04-09T22:40:12Z", "type": "commit"}, {"oid": "e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "url": "https://github.com/futurewei-cloud/alcor/commit/e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "message": "subnet manager update", "committedDate": "2020-04-09T23:09:16Z", "type": "commit"}, {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "url": "https://github.com/futurewei-cloud/alcor/commit/f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "message": "Merge pull request #4 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager", "committedDate": "2020-04-09T23:12:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODMwMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r406908301", "bodyText": "Can we remove this file if not necessary?", "author": "xieus", "createdAt": "2020-04-10T19:30:24Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ControllerConfig.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.config;\n+\n+public class ControllerConfig {\n+\n+    public static String projectId = \"3dda2801-d675-4688-a63f-dcda8d327f50\";", "originalCommit": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxNDExMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408314111", "bodyText": "Yeah you are right.", "author": "kevin-zhonghao", "createdAt": "2020-04-14T17:33:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ControllerConfig.java b/services/route_manager/src/main/java/com/futurewei/alcor/route/entity/SubnetStateJson.java\nsimilarity index 60%\nrename from services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ControllerConfig.java\nrename to services/route_manager/src/main/java/com/futurewei/alcor/route/entity/SubnetStateJson.java\nindex d9f3dcc3..a2a21875 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ControllerConfig.java\n+++ b/services/route_manager/src/main/java/com/futurewei/alcor/route/entity/SubnetStateJson.java\n\n@@ -13,15 +13,29 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n         See the License for the specific language governing permissions and\n         limitations under the License.\n */\n+package com.futurewei.alcor.route.entity;\n \n-package com.futurewei.alcor.subnet.config;\n+import lombok.Data;\n \n-public class ControllerConfig {\n+@Data\n+public class SubnetStateJson {\n+    private SubnetState subnet;\n+\n+    public SubnetStateJson() {\n+\n+    }\n+\n+    public SubnetStateJson(SubnetState subnetState) {\n+        this.subnet = subnetState;\n+    }\n+\n+    public SubnetState getSubnet() {\n+        return subnet;\n+    }\n+\n+    public void setSubnet(SubnetState subnet) {\n+        this.subnet = subnet;\n+    }\n \n-    public static String projectId = \"3dda2801-d675-4688-a63f-dcda8d327f50\";\n-    public static String vpcId = \"9192a4d4-ffff-4ece-b3f0-8d36e3d88038\";\n-    private static int InitNumOfTransitSwitch = 3;\n-    private static int InitNumOfTransitRouter = 1;\n \n-    public static int epCounter = 0;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODU2NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r406908565", "bodyText": "Is this controller necessary for SubnetManager? Please clean up codes which are not needed.", "author": "xieus", "createdAt": "2020-04-10T19:31:14Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.", "originalCommit": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0ODkyMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408248920", "bodyText": "\"Git pull upstream master\" resolved the problem.", "author": "xieus", "createdAt": "2020-04-14T15:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\ndeleted file mode 100644\nindex 563a4e91..00000000\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n-Copyright 2019 The Alcor Authors.\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-        you may not use this file except in compliance with the License.\n-        You may obtain a copy of the License at\n-\n-        http://www.apache.org/licenses/LICENSE-2.0\n-\n-        Unless required by applicable law or agreed to in writing, software\n-        distributed under the License is distributed on an \"AS IS\" BASIS,\n-        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-        See the License for the specific language governing permissions and\n-        limitations under the License.\n-*/\n-\n-package com.futurewei.alcor.subnet.controller;\n-\n-import com.futurewei.alcor.subnet.dao.SubnetRedisRepository;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestParam;\n-import org.springframework.web.bind.annotation.RestController;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.atomic.AtomicLong;\n-\n-import static org.springframework.web.bind.annotation.RequestMethod.GET;\n-\n-@RestController\n-public class DebugController {\n-\n-    private static final String template = \"Hello, %s!\";\n-    private final AtomicLong counter = new AtomicLong();\n-\n-    @Autowired\n-    private SubnetRedisRepository subnetRedisRepository;\n-\n-    @RequestMapping(\"/\")\n-    public String index() {\n-        return \"Greetings from Alioth!\";\n-    }\n-\n-    @RequestMapping(\n-            method = GET,\n-            value = \"/debug\")\n-    public DebugInfo getDebugInfo(@RequestParam(value = \"name\", defaultValue = \"World\") String name) {\n-        return new DebugInfo(counter.incrementAndGet(),\n-                String.format(template, name));\n-    }\n-\n-    @RequestMapping(\n-            method = GET,\n-            value = \"/project/all/subnets\")\n-    public Map getAllSubnetStates() {\n-        Map result = new HashMap<String, Object>();\n-        Map dataItems = this.subnetRedisRepository.findAllItems();\n-        result.put(\"Count\", dataItems.size());\n-        result.put(\"Subnets\", dataItems);\n-\n-        return result;\n-    }\n-}\n\\ No newline at end of file\n"}}, {"oid": "4d6c25e581ae630a4e830df8a79389ababf73923", "url": "https://github.com/futurewei-cloud/alcor/commit/4d6c25e581ae630a4e830df8a79389ababf73923", "message": "update subnet unit test", "committedDate": "2020-04-11T00:07:46Z", "type": "commit"}, {"oid": "218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "url": "https://github.com/futurewei-cloud/alcor/commit/218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "message": "update", "committedDate": "2020-04-11T00:08:27Z", "type": "commit"}, {"oid": "cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "url": "https://github.com/futurewei-cloud/alcor/commit/cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "message": "Merge pull request #5 from kevin-zhonghao/master\n\nMerge pull request #4 from kevin-zhonghao/feature/route_manager", "committedDate": "2020-04-11T00:23:07Z", "type": "commit"}, {"oid": "c6ff66052b0dfc49c40b418dfd30d009897bd99e", "url": "https://github.com/futurewei-cloud/alcor/commit/c6ff66052b0dfc49c40b418dfd30d009897bd99e", "message": "subnet structure and unit test update", "committedDate": "2020-04-13T19:48:20Z", "type": "commit"}, {"oid": "d53791de5f19297f0c3ffd0f626986b4e655bfbf", "url": "https://github.com/futurewei-cloud/alcor/commit/d53791de5f19297f0c3ffd0f626986b4e655bfbf", "message": "Merge pull request #6 from kevin-zhonghao/feature/route_manager\n\nFeature/subnet_manager", "committedDate": "2020-04-13T19:51:51Z", "type": "commit"}, {"oid": "29266b302ceb94911607de3fb14ee9371b5e3e91", "url": "https://github.com/futurewei-cloud/alcor/commit/29266b302ceb94911607de3fb14ee9371b5e3e91", "message": "Merge from Alcor upstream master", "committedDate": "2020-04-13T23:33:52Z", "type": "commit"}, {"oid": "f52284e8afab618f70512313f83343de7f02b462", "url": "https://github.com/futurewei-cloud/alcor/commit/f52284e8afab618f70512313f83343de7f02b462", "message": "subnet manager update", "committedDate": "2020-04-14T04:18:31Z", "type": "commit"}, {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb", "url": "https://github.com/futurewei-cloud/alcor/commit/4d24063119fa0c59051cda61c356346d4d89b7eb", "message": "Merge pull request #7 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-14T06:13:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NDc0Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408254743", "bodyText": "Do we need a dedicated RedisConfiguration file every microservice, or could share one file in the /lib folder?", "author": "xieus", "createdAt": "2020-04-14T16:03:34Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/RedisConfiguration.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.config;\n+\n+import com.futurewei.alcor.common.service.RedisListener;\n+import com.futurewei.alcor.subnet.entity.SubnetState;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.redis.connection.RedisStandaloneConfiguration;\n+import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\n+import org.springframework.data.redis.core.RedisTemplate;\n+import org.springframework.data.redis.listener.ChannelTopic;\n+import org.springframework.data.redis.listener.RedisMessageListenerContainer;\n+import org.springframework.data.redis.listener.adapter.MessageListenerAdapter;\n+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;\n+import org.springframework.data.redis.serializer.StringRedisSerializer;\n+\n+@Configuration\n+@ComponentScan({\"com.futurewei.alcor.subnet.service\", \"com.futurewei.alcor.common.service\"})\n+@EntityScan({\"com.futurewei.alcor.subnet.entity}\", \"com.futurewei.alcor.common.entity\"})\n+public class RedisConfiguration {", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3NTg2MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408275860", "bodyText": "I think it is better to keep it in every microservce because they have different redis-host and redis-post", "author": "kevin-zhonghao", "createdAt": "2020-04-14T16:33:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NDc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwMjkzNw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408302937", "bodyText": "Got it thanks", "author": "xieus", "createdAt": "2020-04-14T17:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NDc0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NTE1MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408255151", "bodyText": "We should remove this file too.", "author": "xieus", "createdAt": "2020-04-14T16:04:05Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.subnet.dao.SubnetRedisRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.GET;\n+\n+@RestController\n+public class DebugController {", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3NjIwNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408276204", "bodyText": "Sure ~", "author": "kevin-zhonghao", "createdAt": "2020-04-14T16:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NTE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\ndeleted file mode 100644\nindex 563a4e91..00000000\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\n+++ /dev/null\n\n@@ -1,64 +0,0 @@\n-/*\n-Copyright 2019 The Alcor Authors.\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-        you may not use this file except in compliance with the License.\n-        You may obtain a copy of the License at\n-\n-        http://www.apache.org/licenses/LICENSE-2.0\n-\n-        Unless required by applicable law or agreed to in writing, software\n-        distributed under the License is distributed on an \"AS IS\" BASIS,\n-        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-        See the License for the specific language governing permissions and\n-        limitations under the License.\n-*/\n-\n-package com.futurewei.alcor.subnet.controller;\n-\n-import com.futurewei.alcor.subnet.dao.SubnetRedisRepository;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RequestParam;\n-import org.springframework.web.bind.annotation.RestController;\n-\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.atomic.AtomicLong;\n-\n-import static org.springframework.web.bind.annotation.RequestMethod.GET;\n-\n-@RestController\n-public class DebugController {\n-\n-    private static final String template = \"Hello, %s!\";\n-    private final AtomicLong counter = new AtomicLong();\n-\n-    @Autowired\n-    private SubnetRedisRepository subnetRedisRepository;\n-\n-    @RequestMapping(\"/\")\n-    public String index() {\n-        return \"Greetings from Alioth!\";\n-    }\n-\n-    @RequestMapping(\n-            method = GET,\n-            value = \"/debug\")\n-    public DebugInfo getDebugInfo(@RequestParam(value = \"name\", defaultValue = \"World\") String name) {\n-        return new DebugInfo(counter.incrementAndGet(),\n-                String.format(template, name));\n-    }\n-\n-    @RequestMapping(\n-            method = GET,\n-            value = \"/project/all/subnets\")\n-    public Map getAllSubnetStates() {\n-        Map result = new HashMap<String, Object>();\n-        Map dataItems = this.subnetRedisRepository.findAllItems();\n-        result.put(\"Count\", dataItems.size());\n-        result.put(\"Subnets\", dataItems);\n-\n-        return result;\n-    }\n-}\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NjY3NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408256675", "bodyText": "Suggest to use \"createRouteRules\"", "author": "xieus", "createdAt": "2020-04-14T16:06:15Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI3Nzg4NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408277884", "bodyText": "Yes, this is easier to understand", "author": "kevin-zhonghao", "createdAt": "2020-04-14T16:36:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NjY3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex b6f85d9d..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408257378", "bodyText": "Why vcResponse = ResourcePersistence?", "author": "xieus", "createdAt": "2020-04-14T16:07:16Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1ODc1OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408258759", "bodyText": "You might want to throw a more specific exception for the case of \"vpc doesn't exist\"?", "author": "xieus", "createdAt": "2020-04-14T16:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4OTMzOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408289339", "bodyText": "At the beginning, I set it to a specific exception because UTs are convenient for testing. Now I make it throw new Exception()", "author": "kevin-zhonghao", "createdAt": "2020-04-14T16:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwNDEwMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408304100", "bodyText": "a new generic Exception? I don't think you want to do that as you can't tell which block of codes threw the exception.", "author": "xieus", "createdAt": "2020-04-14T17:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex b6f85d9d..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzY0NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408257644", "bodyText": "Which operation will throw ResourceNullException?", "author": "xieus", "createdAt": "2020-04-14T16:07:40Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);\n+            if (routeResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacState macState = new MacState();\n+//            String portId = UUID.randomUUID().toString();\n+//            macState.setProjectId(projectid);\n+//            macState.setPortId(portId);\n+//            macState.setVpcId(inSubnetState.getVpcId());\n+//\n+//            HttpEntity<MacStateJson> macRequest = new HttpEntity<>(new MacStateJson(macState));\n+//            MacStateJson macResponse = restTemplate.postForObject(macUrl, macRequest, MacStateJson.class);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPState ipState = new IPState();\n+//            ipState.setSubnetId(inSubnetState.getId());\n+//            ipState.setPortId(portId);\n+//            ipState.setSubnetCidr(inSubnetState.getCidr());\n+//\n+//            String ipManagerServiceUrl = ipUrl + inSubnetState.getId() + \"/routes\"; // for kubernetes test\n+//            HttpEntity<IPStateJson> ipRequest = new HttpEntity<>(new IPStateJson(ipState));\n+//            IPStateJson ipResponse = restTemplate.postForObject(ipManagerServiceUrl, ipRequest, IPStateJson.class);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourceNullException e) {", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4OTU1OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408289559", "bodyText": "There also change to Exception", "author": "kevin-zhonghao", "createdAt": "2020-04-14T16:54:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzY0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwNDk4MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408304980", "bodyText": "Same rational as above. You want to a specific exception, with better name than \"ResourceNullException\", maybe \"VpcNotExistException\"", "author": "xieus", "createdAt": "2020-04-14T17:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzY0NA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex b6f85d9d..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MDQ5OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408260499", "bodyText": "Do we need to call other microservices here?", "author": "xieus", "createdAt": "2020-04-14T16:11:43Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);\n+            if (routeResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacState macState = new MacState();\n+//            String portId = UUID.randomUUID().toString();\n+//            macState.setProjectId(projectid);\n+//            macState.setPortId(portId);\n+//            macState.setVpcId(inSubnetState.getVpcId());\n+//\n+//            HttpEntity<MacStateJson> macRequest = new HttpEntity<>(new MacStateJson(macState));\n+//            MacStateJson macResponse = restTemplate.postForObject(macUrl, macRequest, MacStateJson.class);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPState ipState = new IPState();\n+//            ipState.setSubnetId(inSubnetState.getId());\n+//            ipState.setPortId(portId);\n+//            ipState.setSubnetCidr(inSubnetState.getCidr());\n+//\n+//            String ipManagerServiceUrl = ipUrl + inSubnetState.getId() + \"/routes\"; // for kubernetes test\n+//            HttpEntity<IPStateJson> ipRequest = new HttpEntity<>(new IPStateJson(ipState));\n+//            IPStateJson ipResponse = restTemplate.postForObject(ipManagerServiceUrl, ipRequest, IPStateJson.class);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourceNullException e) {\n+            // Route info of subnet rollback\n+            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n+            if (routes != null) {\n+                RouteWebObject route = routes.get(routes.size() - 1);\n+                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            throw new Exception(e);\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\", \"v4/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\"})\n+    public SubnetStateJson updateSubnetState(@PathVariable String projectid, @PathVariable String vpcid, @PathVariable String subnetid, @RequestBody SubnetStateJson resource) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetid);\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceNotNull(inSubnetState);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            RestPreconditionsUtil.populateResourceVpcId(inSubnetState, vpcid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+            if (subnetState == null) {\n+                throw new ResourceNotFoundException(\"Subnet not found : \" + subnetid);\n+            }\n+\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getProjectId(), projectid);\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getVpcId(), vpcid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5NzU0Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408297543", "bodyText": "I don't think so, I will add a new UT to test it.", "author": "kevin-zhonghao", "createdAt": "2020-04-14T17:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MDQ5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwNTkwNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408305904", "bodyText": "When a customer updates a subnet, if some resources in the subnet (for example, gateway IP) are changing, we might need to call other microservices to make changes accordingly.", "author": "xieus", "createdAt": "2020-04-14T17:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MDQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex b6f85d9d..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjEzMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408262130", "bodyText": "Please add interface for Mac and IP manager. it is time for us to think about it.", "author": "xieus", "createdAt": "2020-04-14T16:13:58Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.futurewei.alcor.subnet.service;\n+\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.subnet.entity.RouteWebJson;\n+import com.futurewei.alcor.subnet.entity.SubnetState;\n+import com.futurewei.alcor.subnet.entity.VpcStateJson;\n+\n+public interface SubnetService {\n+\n+    // Subnet Route info Rollback\n+    public void routeRollback (String routeId, String vpcId);\n+\n+    // Verify VPC ID\n+    public VpcStateJson verifyVpcId (String projectid, String vpcId) throws ResourcePersistenceException;\n+\n+    // Prepare Route Rule(IPv4/6) for Subnet\n+    public RouteWebJson prepeareRouteRule (String vpcId, VpcStateJson vpcResponse) throws ResourcePersistenceException;\n+\n+    // TODO : Allocate Gateway Mac", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5Nzc5MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408297791", "bodyText": "No problem", "author": "kevin-zhonghao", "createdAt": "2020-04-14T17:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java\nindex 88d19e62..52c18c15 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java\n\n@@ -1,23 +1,37 @@\n package com.futurewei.alcor.subnet.service;\n \n import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n-import com.futurewei.alcor.subnet.entity.RouteWebJson;\n-import com.futurewei.alcor.subnet.entity.SubnetState;\n-import com.futurewei.alcor.subnet.entity.VpcStateJson;\n+import com.futurewei.alcor.subnet.entity.*;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n \n public interface SubnetService {\n \n-    // Subnet Route info Rollback\n-    public void routeRollback (String routeId, String vpcId);\n+    // Subnet Route info Fallback\n+    public void routeFallback (String routeId, String vpcId);\n+\n+    // Mac info Fallback\n+    public void macFallback (String macAddress);\n+\n+    // Ip gateway Fallback\n+    public void ipFallback (String ipGateway);\n+\n+    // Fallback operation\n+    public void fallbackOperation (AtomicReference<RouteWebJson> routeResponseAtomic,\n+                                   AtomicReference<MacStateJson> macResponseAtomic,\n+                                   SubnetStateJson resource,\n+                                   String message);\n \n     // Verify VPC ID\n-    public VpcStateJson verifyVpcId (String projectid, String vpcId) throws ResourcePersistenceException;\n+    public VpcStateJson verifyVpcId (String projectId, String vpcId) throws Exception;\n \n     // Prepare Route Rule(IPv4/6) for Subnet\n-    public RouteWebJson prepeareRouteRule (String vpcId, VpcStateJson vpcResponse) throws ResourcePersistenceException;\n+    public RouteWebJson createRouteRules (String subnetId, SubnetState subnetState) throws Exception;\n \n-    // TODO : Allocate Gateway Mac\n+    // Allocate Gateway Mac\n+    public MacStateJson allocateMacGateway (String projectId, String vpcId, String portId) throws Exception;\n \n     // TODO : Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+    public IPStateJson allocateIPGateway (String subnetId, String cidr, String portId) throws Exception;\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjgzNg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408262836", "bodyText": "Can you use the same one in /lib folder?", "author": "xieus", "createdAt": "2020-04-14T16:14:55Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.service.implement;\n+\n+import com.futurewei.alcor.common.repo.ICachePublisher;\n+import com.futurewei.alcor.subnet.entity.VpcState;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.redis.core.RedisTemplate;\n+import org.springframework.data.redis.listener.ChannelTopic;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class RedisPublisherServiceImpl implements ICachePublisher {", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwOTcxMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408309710", "bodyText": "I dont think so, cause we need set different redisTemplate for different manager, like:\nprivate RedisTemplate<String, SubnetState> redisTemplate = new RedisTemplate<>();\nprivate RedisTemplate<String, VpcState> redisTemplate = new RedisTemplate<>();", "author": "kevin-zhonghao", "createdAt": "2020-04-14T17:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MjAwMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408852001", "bodyText": "Okay in that case let us keep it as is.", "author": "xieus", "createdAt": "2020-04-15T13:43:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjgzNg=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java\nindex 682b68a8..e4350f7a 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java\n\n@@ -17,6 +17,7 @@ Licensed under the Apache License, Version 2.0 (the \"License\");\n package com.futurewei.alcor.subnet.service.implement;\n \n import com.futurewei.alcor.common.repo.ICachePublisher;\n+import com.futurewei.alcor.subnet.entity.SubnetState;\n import com.futurewei.alcor.subnet.entity.VpcState;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.redis.core.RedisTemplate;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NDA0MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408264040", "bodyText": "Like the UTs. This is a very good start. Keep going :-)", "author": "xieus", "createdAt": "2020-04-14T16:16:43Z", "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java", "diffHunk": "@@ -0,0 +1,215 @@\n+package com.futurewei.alcor.subnet;\n+\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import static org.junit.Assert.*;\n+\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.subnet.config.UnitTestConfig;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.result.MockMvcResultMatchers;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\n+@RunWith(SpringRunner.class)", "originalCommit": "4d24063119fa0c59051cda61c356346d4d89b7eb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMwOTkyMg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408309922", "bodyText": "Thanks so much for your help !", "author": "kevin-zhonghao", "createdAt": "2020-04-14T17:27:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NDA0MA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nsimilarity index 56%\nrename from services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java\nrename to services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nindex f9b19714..9fbcbc25 100644\n--- a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java\n+++ b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n\n@@ -1,10 +1,12 @@\n package com.futurewei.alcor.subnet;\n \n+import static org.mockito.ArgumentMatchers.*;\n import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n import static org.junit.Assert.*;\n \n+import com.futurewei.alcor.common.exception.FallbackException;\n import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n import com.futurewei.alcor.subnet.config.UnitTestConfig;\n import com.futurewei.alcor.subnet.entity.*;\n"}}, {"oid": "69ac96153afe297489c93c498b46e535576d4353", "url": "https://github.com/futurewei-cloud/alcor/commit/69ac96153afe297489c93c498b46e535576d4353", "message": "subnet manager update", "committedDate": "2020-04-14T17:28:56Z", "type": "commit"}, {"oid": "54269648af85c72861e42874271fc81054d49049", "url": "https://github.com/futurewei-cloud/alcor/commit/54269648af85c72861e42874271fc81054d49049", "message": "Merge pull request #8 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-14T17:32:12Z", "type": "commit"}, {"oid": "3e815f7afcf76f65b67c47b36c9505c24cc18575", "url": "https://github.com/futurewei-cloud/alcor/commit/3e815f7afcf76f65b67c47b36c9505c24cc18575", "message": "subnet manager update", "committedDate": "2020-04-14T17:34:56Z", "type": "commit"}, {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57", "url": "https://github.com/futurewei-cloud/alcor/commit/291555968c8ee49f5e63327a8e344ddfb009ff57", "message": "Merge pull request #9 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-14T17:36:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1Mjk2MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408852960", "bodyText": "Can we have a better name for the UTs, a recommended name should mention what the main test scenario is.", "author": "xieus", "createdAt": "2020-04-15T13:44:49Z", "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java", "diffHunk": "@@ -133,8 +133,8 @@ public void subnetCreateTest2 () throws Exception {\n     public void subnetUpdateTest1 () throws Exception {", "originalCommit": "291555968c8ee49f5e63327a8e344ddfb009ff57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwMjQ0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409002446", "bodyText": "Thanks for suggestions ~ now I make the method name as [Method name] _ [Test condition] _ [Expected return] form.", "author": "kevin-zhonghao", "createdAt": "2020-04-15T17:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1Mjk2MA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nsimilarity index 62%\nrename from services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java\nrename to services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nindex d9a96fa8..9fbcbc25 100644\n--- a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java\n+++ b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n\n@@ -108,42 +148,80 @@ public class SubnetControllerTest {\n                 UnitTestConfig.vpcId, UnitTestConfig.name, UnitTestConfig.cidr, new ArrayList<RouteWebObject>(){{add(new RouteWebObject());}});\n \n         VpcStateJson vpcStateJson = new VpcStateJson(vpcState);\n+        MacStateJson macResponse = new MacStateJson();\n+        MacState macState = new MacState();\n+        macResponse.setMacState(macState);\n+\n+        Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n+                .thenReturn(subnetState);\n+        Mockito.when(subnetService.verifyVpcId(UnitTestConfig.projectId, UnitTestConfig.vpcId))\n+                .thenReturn(vpcStateJson);\n+        Mockito.when(subnetService.createRouteRules(eq(UnitTestConfig.subnetId), any(SubnetState.class)))\n+                .thenThrow(new FallbackException(\"fallback request\"));\n+        Mockito.when(subnetService.allocateMacGateway(anyString(), anyString(), anyString()))\n+                .thenReturn(macResponse);\n+        try {\n+            this.mockMvc.perform(post(creatwUri).contentType(MediaType.APPLICATION_JSON)\n+                    .content(UnitTestConfig.resource))\n+                    .andDo(print())\n+                    .andExpect(status().is(201))\n+                    .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n+        }catch (Exception ex) {\n+            //System.out.println(ex.getMessage());\n+            assertEquals(UnitTestConfig.createException2, ex.getMessage());\n+        }\n+\n+    }\n+\n+    @Test\n+    public void createSubnetState_canNotFindMac_notPass () throws Exception {\n+        SubnetState subnetState = new SubnetState(UnitTestConfig.projectId,\n+                UnitTestConfig.vpcId, UnitTestConfig.subnetId,\n+                UnitTestConfig.name, UnitTestConfig.cidr);\n+        VpcState vpcState = new VpcState(UnitTestConfig.projectId,\n+                UnitTestConfig.vpcId, UnitTestConfig.name, UnitTestConfig.cidr, new ArrayList<RouteWebObject>(){{add(new RouteWebObject());}});\n+\n         RouteWebJson routeWebJson = new RouteWebJson();\n+        RouteWebObject routeWebObject = new RouteWebObject();\n+        routeWebJson.setRoute(routeWebObject);\n+        VpcStateJson vpcStateJson = new VpcStateJson(vpcState);\n \n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n                 .thenReturn(subnetState);\n         Mockito.when(subnetService.verifyVpcId(UnitTestConfig.projectId, UnitTestConfig.vpcId))\n-                .thenReturn(null);\n-        Mockito.when(subnetService.createRouteRules(UnitTestConfig.vpcId, vpcStateJson))\n+                .thenReturn(vpcStateJson);\n+        Mockito.when(subnetService.createRouteRules(eq(UnitTestConfig.subnetId), any(SubnetState.class)))\n                 .thenReturn(routeWebJson);\n+        Mockito.when(subnetService.allocateMacGateway(anyString(), anyString(), anyString()))\n+                .thenThrow(new FallbackException(\"fallback request\"));\n         try {\n-            this.mockMvc.perform(post(creatwUri).contentType(MediaType.APPLICATION_JSON).\n-                    content(UnitTestConfig.resource))\n+            this.mockMvc.perform(post(creatwUri).contentType(MediaType.APPLICATION_JSON)\n+                    .content(UnitTestConfig.resource))\n                     .andDo(print())\n                     .andExpect(status().is(201))\n                     .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n         }catch (Exception ex) {\n             //System.out.println(ex.getMessage());\n-            assertEquals(UnitTestConfig.createException, ex.getMessage());\n+            assertEquals(UnitTestConfig.createException2, ex.getMessage());\n         }\n \n     }\n \n     @Test\n-    public void subnetUpdateTest1 () throws Exception {\n+    public void updateSubnetState_noUpdate_pass () throws Exception {\n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId)).\n                 thenReturn(new SubnetState(UnitTestConfig.projectId,\n                         UnitTestConfig.vpcId, UnitTestConfig.subnetId,\n                         UnitTestConfig.name, UnitTestConfig.cidr));\n-        this.mockMvc.perform(put(putUri).contentType(MediaType.APPLICATION_JSON).\n-                content(UnitTestConfig.resource))\n+        this.mockMvc.perform(put(putUri).contentType(MediaType.APPLICATION_JSON)\n+                .content(UnitTestConfig.resource))\n                 .andDo(print())\n                 .andExpect(status().isOk())\n                 .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n     }\n \n     @Test\n-    public void subnetUpdateTest2 () throws Exception {\n+    public void updateSubnetState_update_pass () throws Exception {\n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n                 .thenReturn(new SubnetState(UnitTestConfig.projectId,\n                         UnitTestConfig.vpcId, UnitTestConfig.subnetId,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NzU0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408857546", "bodyText": "Since this file is not SubnetManager specific, let us use the one under /lib.", "author": "xieus", "createdAt": "2020-04-15T13:50:59Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/RestPreconditionsUtil.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.utils;\n+\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.subnet.entity.VpcState;\n+import org.thymeleaf.util.StringUtils;\n+\n+public class RestPreconditionsUtil {\n+    public static <T> T verifyResourceFound(T resource) throws ResourceNotFoundException {", "originalCommit": "291555968c8ee49f5e63327a8e344ddfb009ff57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwMzk1NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409003954", "bodyText": "Okay ~ I'll move this utils to lib", "author": "kevin-zhonghao", "createdAt": "2020-04-15T17:14:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NzU0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1OTk5Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408859992", "bodyText": "Do you think it will be a good idea to use VpcState and VpcStateJson under /web folder, or replicate one copy in the microservice that needs that?", "author": "xieus", "createdAt": "2020-04-15T13:54:11Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/VpcState.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.entity;\n+\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+import lombok.Data;\n+\n+import java.util.List;\n+\n+@Data\n+public class VpcState extends CustomerResource {", "originalCommit": "291555968c8ee49f5e63327a8e344ddfb009ff57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAyNDY4MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409024680", "bodyText": "I used to replicate one copy in the microservice that needs that, but we can talk about it ~", "author": "kevin-zhonghao", "createdAt": "2020-04-15T17:49:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1OTk5Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "07b37d58b41a4360ae306febea1817fecdfcca1d", "url": "https://github.com/futurewei-cloud/alcor/commit/07b37d58b41a4360ae306febea1817fecdfcca1d", "message": "subnet_manager update", "committedDate": "2020-04-15T16:17:51Z", "type": "commit"}, {"oid": "d97eb29cc9f829ef86f170047311504074c4b98a", "url": "https://github.com/futurewei-cloud/alcor/commit/d97eb29cc9f829ef86f170047311504074c4b98a", "message": "Merge branch 'master' into feature/route_manager\nupdate", "committedDate": "2020-04-15T16:19:18Z", "type": "commit"}, {"oid": "67f66639282400684897a87a51e11ca688c810d9", "url": "https://github.com/futurewei-cloud/alcor/commit/67f66639282400684897a87a51e11ca688c810d9", "message": "Merge pull request #10 from kevin-zhonghao/feature/route_manager\n\nsubnet_manager update", "committedDate": "2020-04-15T16:22:08Z", "type": "commit"}, {"oid": "1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "url": "https://github.com/futurewei-cloud/alcor/commit/1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "message": "subnet manager UTs update", "committedDate": "2020-04-15T17:50:15Z", "type": "commit"}, {"oid": "797642f1dbada9af1fec5575b62865aa6a019559", "url": "https://github.com/futurewei-cloud/alcor/commit/797642f1dbada9af1fec5575b62865aa6a019559", "message": "Merge pull request #11 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager", "committedDate": "2020-04-15T17:52:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTQ0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409119446", "bodyText": "I don't think failing to create route rules should trigger fall back. We should retry first.", "author": "xieus", "createdAt": "2020-04-15T20:39:03Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+        String portId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+            if (routeResponse == null) {\n+                throw new FallbackException(\"fallback request\");", "originalCommit": "797642f1dbada9af1fec5575b62865aa6a019559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MDgwMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409190801", "bodyText": "yeah I agree with you, let me think about it", "author": "kevin-zhonghao", "createdAt": "2020-04-15T23:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex 1f4b9e28..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTg0Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409119846", "bodyText": "You might want to log different message in different logging level here.", "author": "xieus", "createdAt": "2020-04-15T20:39:51Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+        String portId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+            if (routeResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourcePersistenceException e) {\n+            throw new Exception(e);\n+        } catch (FallbackException e) {\n+            // Route info of subnet rollback\n+            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n+            if (routes != null) {\n+                RouteWebObject route = routes.get(routes.size() - 1);\n+                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            throw new Exception(e);\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\", \"v4/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\"})\n+    public SubnetStateJson updateSubnetState(@PathVariable String projectid, @PathVariable String vpcid, @PathVariable String subnetid, @RequestBody SubnetStateJson resource) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetid);\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceNotNull(inSubnetState);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            RestPreconditionsUtil.populateResourceVpcId(inSubnetState, vpcid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+            if (subnetState == null) {\n+                throw new ResourceNotFoundException(\"Subnet not found : \" + subnetid);\n+            }\n+\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getProjectId(), projectid);\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getVpcId(), vpcid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);", "originalCommit": "797642f1dbada9af1fec5575b62865aa6a019559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MDY0NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409190644", "bodyText": "NP", "author": "kevin-zhonghao", "createdAt": "2020-04-15T23:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTg0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex 1f4b9e28..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -18,10 +18,14 @@ package com.futurewei.alcor.subnet.controller;\n \n import com.futurewei.alcor.common.exception.*;\n import com.futurewei.alcor.common.entity.ResponseId;\n+\n import com.futurewei.alcor.subnet.entity.*;\n import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.subnet.utils.ThreadPoolExecutorUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDU1OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409120558", "bodyText": "We could update the ip related data structure to be aligned with the IP manager PR.", "author": "xieus", "createdAt": "2020-04-15T20:41:08Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/IPState.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.futurewei.alcor.subnet.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+\n+public class IPState  extends CustomerResource {", "originalCommit": "797642f1dbada9af1fec5575b62865aa6a019559", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MDU5NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409190594", "bodyText": "Okay ~ I'll update it", "author": "kevin-zhonghao", "createdAt": "2020-04-15T23:23:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "513aa00613ba2d98d98661cc271c915d2d12104a", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/IPState.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/IPState.java\ndeleted file mode 100644\nindex 3636475a..00000000\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/IPState.java\n+++ /dev/null\n\n@@ -1,51 +0,0 @@\n-package com.futurewei.alcor.subnet.entity;\n-\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.futurewei.alcor.common.entity.CustomerResource;\n-\n-public class IPState  extends CustomerResource {\n-\n-    @JsonProperty(\"subnet_id\")\n-    private String subnetId;\n-\n-    @JsonProperty(\"port_id\")\n-    private String portId;\n-\n-    @JsonProperty(\"subnet_cidr\")\n-    private String subnetCidr;\n-\n-    @JsonProperty(\"ip\")\n-    private String ip;\n-\n-    public String getSubnetId() {\n-        return subnetId;\n-    }\n-\n-    public void setSubnetId(String subnetId) {\n-        this.subnetId = subnetId;\n-    }\n-\n-    public String getPortId() {\n-        return portId;\n-    }\n-\n-    public void setPortId(String portId) {\n-        this.portId = portId;\n-    }\n-\n-    public String getSubnetCidr() {\n-        return subnetCidr;\n-    }\n-\n-    public void setSubnetCidr(String subnetCidr) {\n-        this.subnetCidr = subnetCidr;\n-    }\n-\n-    public String getIp() {\n-        return ip;\n-    }\n-\n-    public void setIp(String ip) {\n-        this.ip = ip;\n-    }\n-}\n"}}, {"oid": "e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "url": "https://github.com/futurewei-cloud/alcor/commit/e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "message": "subnet manager update", "committedDate": "2020-04-15T22:51:58Z", "type": "commit"}, {"oid": "8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "url": "https://github.com/futurewei-cloud/alcor/commit/8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "message": "Merge pull request #12 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update", "committedDate": "2020-04-15T22:54:58Z", "type": "commit"}, {"oid": "3bf0c7bf82318284711b0507f5dd8064ed754039", "url": "https://github.com/futurewei-cloud/alcor/commit/3bf0c7bf82318284711b0507f5dd8064ed754039", "message": "Merge pull request #13 from kevin-zhonghao/master\n\nadd mac manager", "committedDate": "2020-04-15T22:58:06Z", "type": "commit"}, {"oid": "81e7c12fd1552451c81c6cadae60d20365461f22", "url": "https://github.com/futurewei-cloud/alcor/commit/81e7c12fd1552451c81c6cadae60d20365461f22", "message": "Merge pull request #14 from futurewei-cloud/master\n\nmac manager update", "committedDate": "2020-04-15T23:01:50Z", "type": "commit"}, {"oid": "da15ddeb473f9f89f19108f49cc4bee62b219c1b", "url": "https://github.com/futurewei-cloud/alcor/commit/da15ddeb473f9f89f19108f49cc4bee62b219c1b", "message": "Merge pull request #15 from kevin-zhonghao/master\n\nupdate", "committedDate": "2020-04-15T23:02:40Z", "type": "commit"}, {"oid": "c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "url": "https://github.com/futurewei-cloud/alcor/commit/c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "message": "subnet manager e2e update", "committedDate": "2020-04-16T18:51:21Z", "type": "commit"}, {"oid": "30d105aa88f2346342deeefa70131cb550590a43", "url": "https://github.com/futurewei-cloud/alcor/commit/30d105aa88f2346342deeefa70131cb550590a43", "message": "Merge pull request #16 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update", "committedDate": "2020-04-16T18:54:56Z", "type": "commit"}, {"oid": "ee14adca5236d5634456789e4c6f4f5056b470c0", "url": "https://github.com/futurewei-cloud/alcor/commit/ee14adca5236d5634456789e4c6f4f5056b470c0", "message": "subnet manager e2e update", "committedDate": "2020-04-16T23:36:32Z", "type": "commit"}, {"oid": "dbb749f71eb935e476fe887a94b96e8f47bf8833", "url": "https://github.com/futurewei-cloud/alcor/commit/dbb749f71eb935e476fe887a94b96e8f47bf8833", "message": "Merge pull request #17 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update", "committedDate": "2020-04-16T23:38:48Z", "type": "commit"}, {"oid": "48808fa9e508d773b09bf4677b3295bfd102c833", "url": "https://github.com/futurewei-cloud/alcor/commit/48808fa9e508d773b09bf4677b3295bfd102c833", "message": "subnet update", "committedDate": "2020-04-17T19:41:14Z", "type": "commit"}, {"oid": "c74460e1f4b25207c5420f41b1651d0e8bf391b7", "url": "https://github.com/futurewei-cloud/alcor/commit/c74460e1f4b25207c5420f41b1651d0e8bf391b7", "message": "subnet manager e2e update", "committedDate": "2020-04-17T22:59:59Z", "type": "commit"}, {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "url": "https://github.com/futurewei-cloud/alcor/commit/39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "message": "Merge pull request #18 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update", "committedDate": "2020-04-17T23:03:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYyOTMzMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410629330", "bodyText": "does allFuture.join not include macFuture.join?", "author": "xieus", "createdAt": "2020-04-18T05:08:19Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc3MjI1OQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410772259", "bodyText": "allFuture.join() means sync up all futures (vpc, route, mac), when all above futures are done, this method will be Executed.\nmacResponse = macFuture.join() means make macResponse value", "author": "kevin-zhonghao", "createdAt": "2020-04-18T23:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYyOTMzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc3NDgxNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410774815", "bodyText": "Makes sense. Thanks.", "author": "xieus", "createdAt": "2020-04-18T23:55:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYyOTMzMA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMjUxMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410632511", "bodyText": "if inSubnetState.getVpcId() is used multiple times, we should use an individual variable to store its value.", "author": "xieus", "createdAt": "2020-04-18T05:16:08Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NTU5MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410965590", "bodyText": "Okay ~", "author": "kevin-zhonghao", "createdAt": "2020-04-19T18:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMjUxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMzU2NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410633565", "bodyText": "Why is the atomic reference used here?", "author": "xieus", "createdAt": "2020-04-18T05:18:40Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NzUxNg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410967516", "bodyText": "This is the way to execute asynchronously\uff0c because we can not use MacStateJson directly here (I mean it is in  CompletableFuture.handle() method).\nSo I use the atomic reference", "author": "kevin-zhonghao", "createdAt": "2020-04-19T18:54:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMzU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTU3NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731575", "bodyText": "what would happen if inSubnetState includes some route rules, and we add some more from routeResponse which could be duplicated? Will that create multiple copies of the same rules? like so as we are using List", "author": "xieus", "createdAt": "2020-04-18T18:15:27Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTYwMw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731603", "bodyText": "Can we skip inSubnetState.getRoutes()", "author": "xieus", "createdAt": "2020-04-18T18:15:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTU3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk2NzkwMw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410967903", "bodyText": "Yeah, if inSubnetState includes some route rules already, we will just add the rules just created into the list. Do you have any good suggestion?", "author": "kevin-zhonghao", "createdAt": "2020-04-19T18:57:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTc0Mw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731743", "bodyText": "When Database fails to store the data, actually we will need to roll back the allocated resources as well? What do you think?", "author": "xieus", "createdAt": "2020-04-18T18:17:38Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyNTEzOQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411125139", "bodyText": "Updated as discussed..", "author": "xieus", "createdAt": "2020-04-20T06:29:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTg3OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731878", "bodyText": "Like this! That is the right way to do.", "author": "xieus", "createdAt": "2020-04-18T18:18:34Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTk5Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731996", "bodyText": "So fall back will be an sync call?", "author": "xieus", "createdAt": "2020-04-18T18:19:18Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n+            logger.info(\"subnet fallback end\");\n+\n+            // Route fallback\n+            logger.info(\"Route fallback start\");\n+            if (routeResponse != null) {\n+                RouteWebObject route = routeResponse.getRoute();\n+                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDk3MTUyMg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410971522", "bodyText": "I can set up fall back as async call ~", "author": "kevin-zhonghao", "createdAt": "2020-04-19T19:16:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjA3MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410732070", "bodyText": "What could cause NullPointerException?", "author": "xieus", "createdAt": "2020-04-18T18:19:57Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n+            logger.info(\"subnet fallback end\");\n+\n+            // Route fallback\n+            logger.info(\"Route fallback start\");\n+            if (routeResponse != null) {\n+                RouteWebObject route = routeResponse.getRoute();\n+                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            logger.info(\"Route fallback end\");\n+\n+            // Mac fallback\n+            logger.info(\"Mac fallback start\");\n+            if (macResponse != null) {\n+                this.subnetService.macFallback(macResponse.getMacState().getMacAddress());\n+                //this.subnetService.macFallback(UnitTestConfig.macAddress);\n             }\n+            logger.info(\"Mac fallback end\");\n+            throw new Exception(e);\n+        } catch (NullPointerException e) {", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAyMDI0NA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411020244", "bodyText": "This is to prevent that when the call step is executed asynchronously, some responses return null, but this repsonse is used later", "author": "kevin-zhonghao", "createdAt": "2020-04-19T23:50:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjA3MA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjMyNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410732324", "bodyText": "Remove the comment if not applicable here.", "author": "xieus", "createdAt": "2020-04-18T18:22:33Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java", "diffHunk": "@@ -29,49 +30,86 @@\n     private RestTemplate restTemplate = new RestTemplate();\n \n     @Override\n-    public void routeRollback(String routeId, String vpcId) {\n-        String routeManagerServiceUrl = routeUrl + vpcId + \"/routes/\" + routeId; // for kubernetes test\n+    public void routeFallback(String routeId, String vpcId) {\n+        String routeManagerServiceUrl = routeUrl + \"vpcs/\" + vpcId + \"/routes/\" + routeId; // for kubernetes test", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxNzY4MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411017681", "bodyText": "NP", "author": "kevin-zhonghao", "createdAt": "2020-04-19T23:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjMyNA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\nindex 1b16e66f..3a182c9c 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\n\n@@ -29,28 +40,60 @@ public class SubnetServiceImp implements SubnetService {\n \n     private RestTemplate restTemplate = new RestTemplate();\n \n+    @Async\n     @Override\n     public void routeFallback(String routeId, String vpcId) {\n         String routeManagerServiceUrl = routeUrl + \"vpcs/\" + vpcId + \"/routes/\" + routeId; // for kubernetes test\n         restTemplate.delete(routeManagerServiceUrl, ResponseId.class);\n     }\n \n+    @Async\n     @Override\n     public void macFallback(String macAddress) {\n         String macManagerServiceUrl = macUrl + \"/\" + macAddress;\n         restTemplate.delete(macManagerServiceUrl, ResponseId.class);\n     }\n \n+    @Async\n     @Override\n     public void ipFallback(String ipGateway) {\n         String ipManagerServiceUrl = ipUrl + ipGateway;\n         restTemplate.delete(ipManagerServiceUrl, ResponseId.class);\n     }\n \n+    @Override\n+    public void fallbackOperation(AtomicReference<RouteWebJson> routeResponseAtomic,\n+                                  AtomicReference<MacStateJson> macResponseAtomic,\n+                                  SubnetStateJson resource,\n+                                  String message) {\n+        RouteWebJson routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+        MacStateJson macResponse = (MacStateJson) macResponseAtomic.get();\n+        logger.error(message);\n+\n+        // Subnet fallback\n+        logger.info(\"subnet fallback start\");\n+        this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n+        logger.info(\"subnet fallback end\");\n+\n+        // Route fallback\n+        logger.info(\"Route fallback start\");\n+        if (routeResponse != null) {\n+            RouteWebObject route = routeResponse.getRoute();\n+            this.routeFallback(route.getId(), resource.getSubnet().getVpcId());\n+        }\n+        logger.info(\"Route fallback end\");\n+\n+        // Mac fallback\n+        logger.info(\"Mac fallback start\");\n+        if (macResponse != null) {\n+            this.macFallback(macResponse.getMacState().getMacAddress());\n+        }\n+        logger.info(\"Mac fallback end\");\n+    }\n+\n     @Override\n     public VpcStateJson verifyVpcId(String projectid, String vpcId) throws FallbackException {\n-        String vpcManagerServiceUrl = vpcUrl + projectid + \"/vpcs/\" + vpcId; // for kubernetes test\n-        //HttpEntity<SubnetStateJson> vpcRequest = new HttpEntity<>(new SubnetStateJson(subnetState));\n+        String vpcManagerServiceUrl = vpcUrl + projectid + \"/vpcs/\" + vpcId;\n         VpcStateJson vpcResponse = restTemplate.getForObject(vpcManagerServiceUrl, VpcStateJson.class);\n         if (vpcResponse.getVpc() == null) {\n             throw new FallbackException(\"fallback request\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMzUwMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410733501", "bodyText": "We also need to handle FallbackException when the downstream services or db fall back fail.\nIn that case, we need to log error or critical as well.", "author": "xieus", "createdAt": "2020-04-18T18:32:08Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex fc2756a4..6309c191 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -93,30 +93,35 @@ public class SubnetController {\n         String portId = UUID.randomUUID().toString();\n \n         try {\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n             RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n \n             // TODO: Create a verification framework for all resources\n             SubnetState inSubnetState = resource.getSubnet();\n-            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n-            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            String subnetId = inSubnetState.getId();\n+            String vpcId = inSubnetState.getVpcId();\n+            RestPreconditionsUtil.verifyResourceFound(vpcId);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectId);\n \n             //Allocate Gateway Mac\n             CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                    return this.subnetService.allocateMacGateway(projectId, vpcId, portId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n             }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n                 macResponseAtomic.set(s);\n+                if (e != null) {\n+                    throw new CompletionException(e);\n+                }\n                 return s;\n             });\n \n             // Verify VPC ID\n             CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n                 try {\n-                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                    return this.subnetService.verifyVpcId(projectId, vpcId);\n                 } catch (Exception e) {\n                     throw new CompletionException(e);\n                 }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDAyNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410734025", "bodyText": "what do those value (10,20,5000) stand for?\nA recommended way is to use \"field name: field value\".\nAlso, if possibly, make those value configurable in our application.json file; if not possible, we should make those field as constants and maintain the constants in a separate file.", "author": "xieus", "createdAt": "2020-04-18T18:36:14Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.futurewei.alcor.subnet.utils;\n+\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class ThreadPoolExecutorUtils {\n+    public static final ThreadPoolExecutor SELECT_POOL_EXECUTOR = new ThreadPoolExecutor(10, 20, 5000,", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxOTE3Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411019172", "bodyText": "corePoolSize:10. maximumPoolSize:20, KeepAliveTime:5000.\nI agree with you, I will make those field as constants.", "author": "kevin-zhonghao", "createdAt": "2020-04-19T23:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDAyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java\nindex 74d501f2..55e201d2 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java\n\n@@ -1,5 +1,6 @@\n package com.futurewei.alcor.subnet.utils;\n \n+import com.futurewei.alcor.subnet.config.ThreadPoolExecutorConfig;\n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n import java.util.concurrent.LinkedBlockingQueue;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDE2MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410734160", "bodyText": "Looks like we have some fall back UTs. Good job!\nRecommend to cover all possible fall back failures.", "author": "xieus", "createdAt": "2020-04-18T18:37:43Z", "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java", "diffHunk": "@@ -138,13 +148,50 @@ public void createSubnetState_canNotFindRoute_notPass () throws Exception {\n                 UnitTestConfig.vpcId, UnitTestConfig.name, UnitTestConfig.cidr, new ArrayList<RouteWebObject>(){{add(new RouteWebObject());}});\n \n         VpcStateJson vpcStateJson = new VpcStateJson(vpcState);\n+        MacStateJson macResponse = new MacStateJson();\n \n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n                 .thenReturn(subnetState);\n         Mockito.when(subnetService.verifyVpcId(UnitTestConfig.projectId, UnitTestConfig.vpcId))\n                 .thenReturn(vpcStateJson);\n-        Mockito.when(subnetService.createRouteRules(UnitTestConfig.subnetId, subnetState))\n-                .thenReturn(null);\n+        Mockito.when(subnetService.createRouteRules(eq(UnitTestConfig.subnetId), any(SubnetState.class)))\n+                .thenThrow(new FallbackException(\"fallback request\"));\n+        Mockito.when(subnetService.allocateMacGateway(anyString(), anyString(), anyString()))\n+                .thenReturn(macResponse);\n+        try {\n+            this.mockMvc.perform(post(creatwUri).contentType(MediaType.APPLICATION_JSON)\n+                    .content(UnitTestConfig.resource))\n+                    .andDo(print())\n+                    .andExpect(status().is(201))\n+                    .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n+        }catch (Exception ex) {\n+            //System.out.println(ex.getMessage());\n+            assertEquals(UnitTestConfig.createException, ex.getMessage());\n+        }\n+\n+    }\n+\n+    @Test\n+    public void createSubnetState_canNotFindMac_notPass () throws Exception {", "originalCommit": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxODExMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411018111", "bodyText": "NP", "author": "kevin-zhonghao", "createdAt": "2020-04-19T23:39:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDE2MA=="}], "type": "inlineReview", "revised_code": {"commit": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "chunk": "diff --git a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nindex 9753fbc7..9fbcbc25 100644\n--- a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n+++ b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n\n@@ -149,6 +149,8 @@ public class SubnetControllerTests {\n \n         VpcStateJson vpcStateJson = new VpcStateJson(vpcState);\n         MacStateJson macResponse = new MacStateJson();\n+        MacState macState = new MacState();\n+        macResponse.setMacState(macState);\n \n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n                 .thenReturn(subnetState);\n"}}, {"oid": "ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "url": "https://github.com/futurewei-cloud/alcor/commit/ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "message": "subnet manager e2e update", "committedDate": "2020-04-20T06:17:06Z", "type": "commit"}, {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "url": "https://github.com/futurewei-cloud/alcor/commit/090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "message": "Merge pull request #19 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update", "committedDate": "2020-04-20T06:19:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMjkzNQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411122935", "bodyText": "DatabasePersistenceException?", "author": "xieus", "createdAt": "2020-04-20T06:24:56Z", "path": "lib/src/main/java/com/futurewei/alcor/common/exception/DatabaseAddException.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.futurewei.alcor.common.exception;\n+\n+public class DatabaseAddException extends Exception {", "originalCommit": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5NzI2OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411497268", "bodyText": "Your name is better ~", "author": "kevin-zhonghao", "createdAt": "2020-04-20T16:00:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMjkzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "chunk": "diff --git a/lib/src/main/java/com/futurewei/alcor/common/exception/DatabaseAddException.java b/lib/src/main/java/com/futurewei/alcor/common/exception/DatabaseAddException.java\ndeleted file mode 100644\nindex d89f6b67..00000000\n--- a/lib/src/main/java/com/futurewei/alcor/common/exception/DatabaseAddException.java\n+++ /dev/null\n\n@@ -1,9 +0,0 @@\n-package com.futurewei.alcor.common.exception;\n-\n-public class DatabaseAddException extends Exception {\n-\n-    public DatabaseAddException (String message) {\n-        super(message);\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzA2MQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123061", "bodyText": "Like it!", "author": "xieus", "createdAt": "2020-04-20T06:25:13Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ThreadPoolExecutorConfig.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.futurewei.alcor.subnet.config;\n+\n+public class ThreadPoolExecutorConfig {", "originalCommit": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzc0NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123745", "bodyText": "Very nice.", "author": "xieus", "createdAt": "2020-04-20T06:26:46Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -151,51 +159,25 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n \n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = inSubnetState.getRoutes();\n-            if (routes == null) {\n-                routes = new ArrayList<>();\n-            }\n+            List<RouteWebObject> routes = new ArrayList<>();\n             routes.add(routeResponse.getRoute());\n             inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n             this.subnetDatabaseService.addSubnet(inSubnetState);\n \n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+//            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+//            if (SubnetState == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n \n-            return new SubnetStateJson(subnetState);\n+            return new SubnetStateJson(inSubnetState);\n \n-        } catch (ResourcePersistenceException e) {\n-            logger.error(e.getMessage());\n-            throw new Exception(e);\n         } catch (CompletionException e) {\n-            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n-            macResponse = (MacStateJson) macResponseAtomic.get();\n-            logger.error(e.getMessage());\n-\n-            // Subnet fallback\n-            logger.info(\"subnet fallback start\");\n-            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n-            logger.info(\"subnet fallback end\");\n-\n-            // Route fallback\n-            logger.info(\"Route fallback start\");\n-            if (routeResponse != null) {\n-                RouteWebObject route = routeResponse.getRoute();\n-                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());\n-            }\n-            logger.info(\"Route fallback end\");\n-\n-            // Mac fallback\n-            logger.info(\"Mac fallback start\");\n-            if (macResponse != null) {\n-                this.subnetService.macFallback(macResponse.getMacState().getMacAddress());\n-                //this.subnetService.macFallback(UnitTestConfig.macAddress);\n-            }\n-            logger.info(\"Mac fallback end\");\n+            this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());\n+            throw new Exception(e);\n+        } catch (DatabaseAddException e) {\n+            this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());", "originalCommit": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\nindex a121e1a6..de4b4f49 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java\n\n@@ -176,7 +176,7 @@ public class SubnetController {\n         } catch (CompletionException e) {\n             this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());\n             throw new Exception(e);\n-        } catch (DatabaseAddException e) {\n+        } catch (DatabasePersistenceException e) {\n             this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());\n             throw new Exception(e);\n         } catch (NullPointerException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzkxMA==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123910", "bodyText": "oh we can wire two service together?", "author": "xieus", "createdAt": "2020-04-20T06:27:13Z", "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java", "diffHunk": "@@ -5,16 +5,27 @@\n import com.futurewei.alcor.common.exception.FallbackException;\n import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.HttpEntity;\n import org.springframework.scheduling.annotation.Async;\n import org.springframework.stereotype.Service;\n import org.springframework.web.client.RestTemplate;\n \n+import java.util.concurrent.atomic.AtomicReference;\n+\n @Service\n public class SubnetServiceImp implements SubnetService {\n \n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;", "originalCommit": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMjkyNw==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411502927", "bodyText": "Yes", "author": "kevin-zhonghao", "createdAt": "2020-04-20T16:07:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzkxMA=="}], "type": "inlineReview", "revised_code": {"commit": "513aa00613ba2d98d98661cc271c915d2d12104a", "chunk": "diff --git a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\nindex 3a182c9c..31aceb4b 100644\n--- a/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\n+++ b/services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java\n\n@@ -14,8 +14,10 @@ import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.HttpEntity;\n import org.springframework.scheduling.annotation.Async;\n import org.springframework.stereotype.Service;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.client.RestTemplate;\n \n+import java.util.UUID;\n import java.util.concurrent.atomic.AtomicReference;\n \n @Service\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyNDQzMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411124431", "bodyText": "Let us be a little creative in term of naming :-)", "author": "xieus", "createdAt": "2020-04-20T06:28:18Z", "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java", "diffHunk": "@@ -166,7 +168,7 @@ public void createSubnetState_canNotFindRoute_notPass () throws Exception {\n                     .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n         }catch (Exception ex) {\n             //System.out.println(ex.getMessage());\n-            assertEquals(UnitTestConfig.createException, ex.getMessage());\n+            assertEquals(UnitTestConfig.createException2, ex.getMessage());", "originalCommit": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwMDMyMQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411500321", "bodyText": "Okay ~ Naming is one of my weaknesses ~", "author": "kevin-zhonghao", "createdAt": "2020-04-20T16:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyNDQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "chunk": "diff --git a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\nindex 9fbcbc25..916e7efe 100644\n--- a/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n+++ b/services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java\n\n@@ -168,7 +168,7 @@ public class SubnetControllerTests {\n                     .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n         }catch (Exception ex) {\n             //System.out.println(ex.getMessage());\n-            assertEquals(UnitTestConfig.createException2, ex.getMessage());\n+            assertEquals(UnitTestConfig.createFallbackException, ex.getMessage());\n         }\n \n     }\n"}}, {"oid": "60123507d0c9c8e5e43aff5b559068aa5445ce5d", "url": "https://github.com/futurewei-cloud/alcor/commit/60123507d0c9c8e5e43aff5b559068aa5445ce5d", "message": "Add subnet APIs in API gateway", "committedDate": "2020-04-20T19:12:37Z", "type": "commit"}]}