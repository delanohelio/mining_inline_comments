{"pr_number": 512, "pr_title": "[Microservice] Move forward to DPM v2.0 APIs", "pr_createdAt": "2020-12-09T06:44:32Z", "pr_url": "https://github.com/futurewei-cloud/alcor/pull/512", "timeline": [{"oid": "fcb7c59ca053d3225cdf199492c77e329f2bb3fd", "url": "https://github.com/futurewei-cloud/alcor/commit/fcb7c59ca053d3225cdf199492c77e329f2bb3fd", "message": "pm uses the new APIs of dpm", "committedDate": "2020-12-09T06:43:24Z", "type": "commit"}, {"oid": "67701a0a5492806049b9a406cf332bac5a177833", "url": "https://github.com/futurewei-cloud/alcor/commit/67701a0a5492806049b9a406cf332bac5a177833", "message": "Remove the usage of deprecating OperationType in PM", "committedDate": "2020-12-09T06:49:40Z", "type": "commit"}, {"oid": "4deb5700508382222108a3fc6b0bde5dae322b7e", "url": "https://github.com/futurewei-cloud/alcor/commit/4deb5700508382222108a3fc6b0bde5dae322b7e", "message": "Refactor update-l3-neighbors API to accept a list of gateway port IDs", "committedDate": "2020-12-09T07:39:47Z", "type": "forcePushed"}, {"oid": "5846b1b176c94b57e821dcec833fc475cfd92dde", "url": "https://github.com/futurewei-cloud/alcor/commit/5846b1b176c94b57e821dcec833fc475cfd92dde", "message": "Refactor update-l3-neighbors API to accept a list of gateway port IDs", "committedDate": "2020-12-09T07:49:10Z", "type": "commit"}, {"oid": "5846b1b176c94b57e821dcec833fc475cfd92dde", "url": "https://github.com/futurewei-cloud/alcor/commit/5846b1b176c94b57e821dcec833fc475cfd92dde", "message": "Refactor update-l3-neighbors API to accept a list of gateway port IDs", "committedDate": "2020-12-09T07:49:10Z", "type": "forcePushed"}, {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "url": "https://github.com/futurewei-cloud/alcor/commit/4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "message": "DPM handles the configuration information of neighbors", "committedDate": "2020-12-09T10:14:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NDU1MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542164550", "bodyText": "This is indeed a better name.", "author": "xieus", "createdAt": "2020-12-14T07:29:10Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/DataPlaneClient.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n @Component\n public interface DataPlaneClient {\n-    List<String> createGoalStates(List<UnicastGoalState> unicastGoalStates) throws Exception;\n-    List<String> createGoalStates(List<UnicastGoalState> unicastGoalStates,\n-                                  MulticastGoalState multicastGoalState) throws Exception;\n+    List<String> sendGoalStates(List<UnicastGoalState> unicastGoalStates) throws Exception;", "originalCommit": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTUxNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542169514", "bodyText": "@kevin-zhonghao @cj-chung  FYI. Please review this change as well.", "author": "xieus", "createdAt": "2020-12-14T07:39:59Z", "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouterUpdateInfo.java", "diffHunk": "@@ -29,8 +29,8 @@\n     @JsonProperty(\"operation_type\")\n     private String operationType;\n \n-    @JsonProperty(\"old_subnet_ids\")\n-    private List<String> oldSubnetIds;\n+    @JsonProperty(\"gateway_port_ids\")", "originalCommit": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNzI5NQ==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542917295", "bodyText": "The change is ok I think.\n@kevin-zhonghao  we need to prepare a RouterUpdateInfo object and send it to update-l3-neighbors API in PM when there is a gateway port updated in a router.", "author": "cj-chung", "createdAt": "2020-12-14T23:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTUxNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NTE0Nw==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542175147", "bodyText": "what if gatewayPortEntities ==null here? Should we add some special handling?", "author": "xieus", "createdAt": "2020-12-14T07:52:02Z", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/PortServiceImpl.java", "diffHunk": "@@ -208,25 +209,51 @@ public PortWebJson getPort(String projectId, String portId) throws Exception {\n         return result;\n     }\n \n-    private List<NeighborEntry> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n-        List<NeighborEntry> neighborTable = new ArrayList<>();\n+    private Map<String, List<NeighborEntry>> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n+        Map<String, List<NeighborEntry>> neighborTable = new HashMap<>();\n         for (NeighborInfo localNeighborInfo: localNeighborInfos) {\n+            List<NeighborEntry> neighborEntries = new ArrayList<>();\n             for (NeighborInfo l3Neighbor: l3Neighbors) {\n                 NeighborEntry neighborEntry = new NeighborEntry();\n                 neighborEntry.setNeighborType(NeighborEntry.NeighborType.L3);\n                 neighborEntry.setLocalIp(localNeighborInfo.getPortIp());\n                 neighborEntry.setNeighborIp(l3Neighbor.getPortIp());\n-                neighborTable.add(neighborEntry);\n+                neighborEntries.add(neighborEntry);\n             }\n+\n+            String portIp = localNeighborInfo.getPortIp();\n+            neighborTable.put(portIp, neighborEntries);\n         }\n \n         return neighborTable;\n     }\n \n-    private List<NeighborEntry> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, List<NeighborInfo> neighborInfos) throws CacheException {\n+    private Map<String, List<NeighborEntry>> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, Map<String, NeighborInfo> neighborInfos) throws CacheException {\n         String vpcId = routerUpdateInfo.getVpcId();\n         String subnetId = routerUpdateInfo.getSubnetId();\n-        List<String> oldSubnetIds = routerUpdateInfo.getOldSubnetIds();\n+        List<String> gatewayPortIds = routerUpdateInfo.getGatewayPortIds();\n+        List<String> gatewaySubnetIds = new ArrayList<>();\n+\n+        Map<String, Object[]> filterParams = new HashMap<>();\n+        filterParams.put(\"id\", gatewayPortIds.toArray());\n+        Map<String, PortEntity> gatewayPortEntities = portRepository.findAllPortEntities(filterParams);\n+        if (gatewayPortEntities != null) {\n+            for (Map.Entry<String, PortEntity> entry: gatewayPortEntities.entrySet()) {\n+                PortEntity portEntity = entry.getValue();\n+                List<PortEntity.FixedIp> fixedIps = portEntity.getFixedIps();\n+                if (fixedIps == null) {\n+                    LOG.warn(\"Can not find fixedIp of gateway port: {}\", portEntity);\n+                    continue;\n+                }\n+\n+                for (PortEntity.FixedIp fixedIp: fixedIps) {\n+                    String subnetId1 = fixedIp.getSubnetId();\n+                    if (!StringUtils.isEmpty(subnetId1)) {\n+                        gatewaySubnetIds.add(subnetId1);\n+                    }\n+                }\n+            }\n+        }", "originalCommit": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NjI5Ng==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542186296", "bodyText": "PortController will check its legitimacy.", "author": "chenpiaoping", "createdAt": "2020-12-14T08:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NTE0Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NjIxNA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542176214", "bodyText": "Could you add brief comments to this method?", "author": "xieus", "createdAt": "2020-12-14T07:54:06Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -108,10 +117,10 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, hostIp, portEntities, multicastGoalState));\n         }\n \n-        return dataPlaneClient.createGoalStates(unicastGoalStates, multicastGoalState);\n+        return dataPlaneClient.sendGoalStates(unicastGoalStates, multicastGoalState);\n     }\n \n-    private List<String> createPortConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+    private List<String> processPortConfiguration(NetworkConfiguration networkConfig) throws Exception {", "originalCommit": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NjU1OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542186558", "bodyText": "No problem", "author": "chenpiaoping", "createdAt": "2020-12-14T08:14:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NjIxNA=="}], "type": "inlineReview", "revised_code": {"commit": "046ab21961d20b2c864fdf26a17056a060f397b4", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\nindex ee08b41ed..3028846b1 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\n\n@@ -120,6 +120,19 @@ public class DpmServiceImpl implements DpmService {\n         return dataPlaneClient.sendGoalStates(unicastGoalStates, multicastGoalState);\n     }\n \n+    /**\n+     * This method processes the network configuration where the resource type is PORT.\n+     * The NetworkConfiguration may contain multiple port entities, and these port\n+     * entities may need to be sent to multiple hosts, Other configurations related to port\n+     * also need to be processed, such as routing configuration and neighbor configuration.\n+     * Here we build one UnicastGoalState for each host and put the information that it needs\n+     * into it. If the same information needs to be sent to multiple host, in order to\n+     * improve the transmission performance, only one MulticastGoalState is constructed and\n+     * broadcast it to the all target  hosts.\n+     * @param networkConfig The networkConfig may contain multiple port entities and related Configuration\n+     * @return Hosts that failed to send GoalState\n+     * @throws Exception Process exceptions and send exceptions\n+     */\n     private List<String> processPortConfiguration(NetworkConfiguration networkConfig) throws Exception {\n         Map<String, List<InternalPortEntity>> grpcHostPortEntities = new HashMap<>();\n         Map<String, List<InternalPortEntity>> pulsarHostPortEntities = new HashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542176842", "bodyText": "Can you elaborate a bit here? Neighbor table also includes L2 neighbors if my memory is right :-)", "author": "xieus", "createdAt": "2020-12-14T07:55:19Z", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -144,20 +153,92 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, pulsarHostPortEntities, pulsarDataPlaneClient));\n         }\n \n-        localCache.addSubnetPorts(networkConfig);\n+        localCache.updateLocalCache(networkConfig);\n \n         return statusList;\n     }\n \n-    private List<String> createNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n-        return null;\n+    private List<String> processNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+        Map<String, NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n+        Map<String, List<NeighborEntry>> neighborTable = networkConfig.getNeighborTable();\n+        List<UnicastGoalState> unicastGoalStates = new ArrayList<>();\n+        MulticastGoalState multicastGoalState = new MulticastGoalState();\n+\n+        if (neighborTable == null || neighborInfos == null) {\n+            throw new NeighborInfoNotFound();\n+        }\n+\n+        Map<String, List<NeighborInfo>> hostNeighbors = new HashMap<>();\n+        for (Map.Entry<String, List<NeighborEntry>> entry: neighborTable.entrySet()) {\n+            String portIp = entry.getKey();\n+            NeighborInfo localInfo = neighborInfos.get(portIp);\n+            if (localInfo == null) {\n+                throw new NeighborInfoNotFound();\n+            }\n+\n+            String hostIp = localInfo.getHostIp();\n+            if (!hostNeighbors.containsKey(hostIp)) {\n+                hostNeighbors.put(hostIp, new ArrayList<>());\n+            }\n+\n+            List<NeighborEntry> neighborEntries = entry.getValue();\n+            for (NeighborEntry neighborEntry: neighborEntries) {\n+                String neighborIp = neighborEntry.getNeighborIp();\n+                NeighborInfo neighborInfo = neighborInfos.get(neighborIp);\n+                if (neighborInfo == null) {\n+                    throw new NeighborInfoNotFound();\n+                }\n+\n+                hostNeighbors.get(hostIp).add(neighborInfo);\n+                multicastGoalState.getHostIps().add(neighborInfo.getHostIp());\n+            }\n+\n+            //Add neighborInfo to multicastGoalState\n+            Neighbor.NeighborState neighborState = neighborService.buildNeighborState(\n+                    NeighborType.L3, localInfo, networkConfig.getOpType());\n+            multicastGoalState.getGoalStateBuilder().addNeighborStates(neighborState);\n+        }\n+\n+        for (Map.Entry<String, List<NeighborInfo>> entry: hostNeighbors.entrySet()) {\n+            String hostIp = entry.getKey();\n+            List<NeighborInfo> hostNeighborInfos = entry.getValue();\n+\n+            /**\n+             * At present, there are only L3 neighbors in the neighbor table,\n+             * and the processing of L2 neighbors should be considered in the future.\n+             */", "originalCommit": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NzI5OA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542187298", "bodyText": "This case is for update-l3-neighbor, so there will be no L2 neighbors here.", "author": "chenpiaoping", "createdAt": "2020-12-14T08:15:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2OTU1MA==", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542769550", "bodyText": "aha sounds good.", "author": "xieus", "createdAt": "2020-12-14T20:50:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "046ab21961d20b2c864fdf26a17056a060f397b4", "chunk": "diff --git a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\nindex ee08b41ed..3028846b1 100644\n--- a/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\n+++ b/services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java\n\n@@ -158,6 +171,14 @@ public class DpmServiceImpl implements DpmService {\n         return statusList;\n     }\n \n+    /**\n+     * This method get neighbor information from NetworkConfiguration, then build one\n+     * UnicastGoalState for each host and fill in the neighbor information it needs,\n+     * and finally send all UnicastGoalState to the relevant hosts.\n+     * @param networkConfig Network configuration with neighbor configuration\n+     * @return Hosts that failed to send GoalState\n+     * @throws Exception Process exceptions and send exceptions\n+     */\n     private List<String> processNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n         Map<String, NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n         Map<String, List<NeighborEntry>> neighborTable = networkConfig.getNeighborTable();\n"}}, {"oid": "046ab21961d20b2c864fdf26a17056a060f397b4", "url": "https://github.com/futurewei-cloud/alcor/commit/046ab21961d20b2c864fdf26a17056a060f397b4", "message": "Add some comments according to the suggestion of the review", "committedDate": "2020-12-15T07:37:14Z", "type": "commit"}]}