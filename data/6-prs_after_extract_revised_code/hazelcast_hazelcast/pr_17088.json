{"pr_number": 17088, "pr_title": "Fine-tuning group properties for EE WAN throttling", "pr_createdAt": "2020-06-15T16:05:48Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17088", "timeline": [{"oid": "c0115e7fe2b1963a17865ab93ad9adfa274bd4f7", "url": "https://github.com/hazelcast/hazelcast/commit/c0115e7fe2b1963a17865ab93ad9adfa274bd4f7", "message": "Fine-tuning group properties for EE WAN throttling\n\nAdding the fine-tuning group properties for the EE WAN throttling\nfeature.", "committedDate": "2020-06-15T16:03:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzU0NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17088#discussion_r440763544", "bodyText": "Is a million not a bit on the high side? If each item is 5KB (not uncommon) then we are at 5GB of inflight invocations.", "author": "pveentjer", "createdAt": "2020-06-16T10:56:16Z", "path": "hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java", "diffHunk": "@@ -1053,6 +1053,63 @@\n     public static final HazelcastProperty SEARCH_DYNAMIC_CONFIG_FIRST\n             = new HazelcastProperty(\"hazelcast.data.search.dynamic.config.first.enabled\", false);\n \n+    /**\n+     * Defines the pending invocation threshold for the Enterprise WAN\n+     * replication implementation. Exceeding this threshold on a WAN\n+     * consumer member makes the member delaying the WAN acknowledgment,\n+     * thus slowing down the WAN publishers on the source side that send\n+     * WAN events to the given WAN consumer. Setting this value to\n+     * negative turns off the acknowledgement delaying feature.\n+     *\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_INIT_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MAX_MS\n+     * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n+     */\n+    public static final HazelcastProperty WAN_CONSUMER_INVOCATION_THRESHOLD\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.invocation.threshold\", 1000000);", "originalCommit": "c0115e7fe2b1963a17865ab93ad9adfa274bd4f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5MzEzMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17088#discussion_r440893131", "bodyText": "It is. Reduced to 50k.", "author": "blazember", "createdAt": "2020-06-16T14:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzU0NA=="}], "type": "inlineReview", "revised_code": {"commit": "1981e2c37f3523f47aabb364fdaca96a71c3633f", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java b/hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java\nindex fd357da7f75..d989e3e3982 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java\n\n@@ -1066,7 +1066,7 @@ public final class GroupProperty {\n      * @see #WAN_CONSUMER_ACK_DELAY_BACKOFF_MULTIPLIER\n      */\n     public static final HazelcastProperty WAN_CONSUMER_INVOCATION_THRESHOLD\n-            = new HazelcastProperty(\"hazelcast.wan.consumer.invocation.threshold\", 1000000);\n+            = new HazelcastProperty(\"hazelcast.wan.consumer.invocation.threshold\", 50000);\n \n     /**\n      * Defines the initial backoff delay for the Enterprise WAN\n"}}, {"oid": "1981e2c37f3523f47aabb364fdaca96a71c3633f", "url": "https://github.com/hazelcast/hazelcast/commit/1981e2c37f3523f47aabb364fdaca96a71c3633f", "message": "Reduce default invocation threshold to 50K", "committedDate": "2020-06-16T14:24:35Z", "type": "commit"}]}