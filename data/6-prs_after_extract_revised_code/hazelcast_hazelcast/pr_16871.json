{"pr_number": 16871, "pr_title": "Remove assert and log instead", "pr_createdAt": "2020-04-09T13:07:33Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16871", "timeline": [{"oid": "4d38876931f73453fa01e1af548c047f3701bb0f", "url": "https://github.com/hazelcast/hazelcast/commit/4d38876931f73453fa01e1af548c047f3701bb0f", "message": "Open trace level logging (#16865)", "committedDate": "2020-04-09T13:06:09Z", "type": "commit"}, {"oid": "1d913ce796b1a4cf3f18273498ee4046136c1f9d", "url": "https://github.com/hazelcast/hazelcast/commit/1d913ce796b1a4cf3f18273498ee4046136c1f9d", "message": "Remove assert and log instead", "committedDate": "2020-04-09T13:14:20Z", "type": "forcePushed"}, {"oid": "4078622f54303743496dd0876f6b112d553ec240", "url": "https://github.com/hazelcast/hazelcast/commit/4078622f54303743496dd0876f6b112d553ec240", "message": "Remove assert and log instead", "committedDate": "2020-04-09T13:26:28Z", "type": "commit"}, {"oid": "4078622f54303743496dd0876f6b112d553ec240", "url": "https://github.com/hazelcast/hazelcast/commit/4078622f54303743496dd0876f6b112d553ec240", "message": "Remove assert and log instead", "committedDate": "2020-04-09T13:26:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYzNTA4MA==", "url": "https://github.com/hazelcast/hazelcast/pull/16871#discussion_r406635080", "bodyText": "If there is a bad configuration, then it is better to throw an exception. Now you are at risk of loosing the problematic configuration completely and I have no idea if the system will actually behave correctly.", "author": "pveentjer", "createdAt": "2020-04-10T07:14:10Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -453,6 +465,9 @@ void reset() {\n         // permit count can exceed allowed parallelization count.\n         replicaSyncSemaphore.drainPermits();\n         replicaSyncSemaphore.release(maxParallelReplications);\n+        if (logger.isFinestEnabled()) {", "originalCommit": "4078622f54303743496dd0876f6b112d553ec240", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9f9da8990f50b2d67592b017d860fdb9a81ee08", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java b/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\nindex 7f0af758e0..253e5c54f1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\n\n@@ -465,12 +473,14 @@ public class PartitionReplicaManager implements PartitionReplicaVersionManager {\n         // permit count can exceed allowed parallelization count.\n         replicaSyncSemaphore.drainPermits();\n         replicaSyncSemaphore.release(maxParallelReplications);\n+\n         if (logger.isFinestEnabled()) {\n             logger.finest(format(\"Reset replica sync permits to %d\", maxParallelReplications));\n         }\n     }\n \n-    void scheduleReplicaVersionSync(ExecutionService executionService) {\n+    void scheduleReplicaVersionSync(ExecutionService\n+                                            executionService) {\n         long definedBackupSyncCheckInterval = node.getProperties().getSeconds(ClusterProperty.PARTITION_BACKUP_SYNC_INTERVAL);\n         long backupSyncCheckInterval = definedBackupSyncCheckInterval > 0 ? definedBackupSyncCheckInterval : 1;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY1ODY1MA==", "url": "https://github.com/hazelcast/hazelcast/pull/16871#discussion_r406658650", "bodyText": "I think we should log this as a warning. So it will be visible.", "author": "mdogan", "createdAt": "2020-04-10T08:24:33Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java", "diffHunk": "@@ -409,13 +413,21 @@ public int tryAcquireReplicaSyncPermits(int requestedPermits) {\n      */\n     public void releaseReplicaSyncPermits(int permits) {\n         assert permits > 0 : \"Invalid permits: \" + permits;\n+\n         replicaSyncSemaphore.release(permits);\n+\n         if (logger.isFinestEnabled()) {\n-            logger.finest(\"Released \" + permits + \" replica sync permits. Available permits: \"\n-                        + replicaSyncSemaphore.availablePermits());\n+            int availableReplicaSyncPermits = availableReplicaSyncPermits();\n+\n+            logger.finest(format(\"Released %d replica sync permits. Available permits: %d\",\n+                    permits, availableReplicaSyncPermits));\n+\n+            if (availableReplicaSyncPermits <= maxParallelReplications) {\n+                logger.finest(format(\"Replica sync permits exceeded the configured number! (available: %d, max: %d)\",", "originalCommit": "4078622f54303743496dd0876f6b112d553ec240", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c9f9da8990f50b2d67592b017d860fdb9a81ee08", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java b/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\nindex 7f0af758e0..253e5c54f1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/partition/impl/PartitionReplicaManager.java\n\n@@ -409,24 +409,32 @@ public class PartitionReplicaManager implements PartitionReplicaVersionManager {\n     /**\n      * Releases the previously acquired permits.\n      *\n-     * @param permits number of permits\n+     * @param permitsToRelease number of permits\n      */\n-    public void releaseReplicaSyncPermits(int permits) {\n-        assert permits > 0 : \"Invalid permits: \" + permits;\n+    public void releaseReplicaSyncPermits(int permitsToRelease) {\n+        assert permitsToRelease > 0 : \"Invalid permits: \" + permitsToRelease;\n \n-        replicaSyncSemaphore.release(permits);\n+        int availablePermits = availableReplicaSyncPermits();\n+        int acquiredPermits = maxParallelReplications - availablePermits;\n \n-        if (logger.isFinestEnabled()) {\n-            int availableReplicaSyncPermits = availableReplicaSyncPermits();\n+        if (logger.isWarningEnabled() && acquiredPermits < permitsToRelease) {\n+            logger.warning(format(\"Found more replica sync permits than configured max number!\"\n+                            + \" (acquired: %d, available: %d, max: %d)\",\n+                    acquiredPermits, availablePermits, maxParallelReplications));\n+        }\n \n-            logger.finest(format(\"Released %d replica sync permits. Available permits: %d\",\n-                    permits, availableReplicaSyncPermits));\n+        int permits = Math.min(acquiredPermits, permitsToRelease);\n+        if (permits <= 0) {\n+            return;\n+        }\n \n-            if (availableReplicaSyncPermits <= maxParallelReplications) {\n-                logger.finest(format(\"Replica sync permits exceeded the configured number! (available: %d, max: %d)\",\n-                        availableReplicaSyncPermits, maxParallelReplications));\n+        replicaSyncSemaphore.release(permits);\n \n-            }\n+        if (logger.isFinestEnabled()) {\n+            int currentAvailable = availableReplicaSyncPermits();\n+            logger.finest(format(\"Released %d replica sync permits. (acquired: %d, available: %d, max: %d)\",\n+                    permits, maxParallelReplications - currentAvailable,\n+                    currentAvailable, maxParallelReplications));\n         }\n     }\n \n"}}, {"oid": "c9f9da8990f50b2d67592b017d860fdb9a81ee08", "url": "https://github.com/hazelcast/hazelcast/commit/c9f9da8990f50b2d67592b017d860fdb9a81ee08", "message": "Address review comments", "committedDate": "2020-04-10T10:38:12Z", "type": "commit"}, {"oid": "c9f9da8990f50b2d67592b017d860fdb9a81ee08", "url": "https://github.com/hazelcast/hazelcast/commit/c9f9da8990f50b2d67592b017d860fdb9a81ee08", "message": "Address review comments", "committedDate": "2020-04-10T10:38:12Z", "type": "forcePushed"}, {"oid": "20f4d22a191c014c47fd05d51f3bd6f9fac0e2d6", "url": "https://github.com/hazelcast/hazelcast/commit/20f4d22a191c014c47fd05d51f3bd6f9fac0e2d6", "message": "Address review comments: permitsToRelease", "committedDate": "2020-04-10T10:48:36Z", "type": "commit"}]}