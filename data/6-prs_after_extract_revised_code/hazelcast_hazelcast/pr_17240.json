{"pr_number": 17240, "pr_title": "MemberHandshake Options", "pr_createdAt": "2020-07-20T08:31:53Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17240", "timeline": [{"oid": "9e855cb000930083a8a4d5883141a505b7d81082", "url": "https://github.com/hazelcast/hazelcast/commit/9e855cb000930083a8a4d5883141a505b7d81082", "message": "MemberHandshake Options\n\nA options hashtable has been added to the member handshake. This way we can easily\nadd extra handshake options without changing the member handshake protocol.\n\nThe options are always of type string/string; it is up to the code that uses the option\nto do the appropriate conversion.\n\nIf a memberhandshake of version 1 is received, the options will be empty.", "committedDate": "2020-07-20T08:52:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE5MTUzNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17240#discussion_r457191534", "bodyText": "minor: add static final Strings for planeCount & planeIndex keys", "author": "vbekiaris", "createdAt": "2020-07-20T08:53:16Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MemberHandshake.java", "diffHunk": "@@ -67,24 +67,30 @@ public MemberHandshake(byte schemaVersion,\n                            Map<ProtocolType, Collection<Address>> localAddresses,\n                            Address targetAddress,\n                            boolean reply,\n-                           UUID uuid,\n-                           int planeIndex,\n-                           int planeCount) {\n+                           UUID uuid) {\n         this.schemaVersion = schemaVersion;\n         this.localAddresses = new EnumMap<>(localAddresses);\n         this.targetAddress = targetAddress;\n         this.reply = reply;\n         this.uuid = uuid;\n-        this.planeIndex = planeIndex;\n-        this.planeCount = planeCount;\n     }\n \n-    public int getPlaneIndex() {\n-        return planeIndex;\n+    public MemberHandshake addOption(String key, Object value) {\n+        options.put(key, \"\" + value);\n+        return this;\n+    }\n+\n+    public int getIntOption(String key, int defaultValue) {\n+        String value = options.get(key);\n+        return value == null ? defaultValue : Integer.parseInt(value);\n     }\n \n     public int getPlaneCount() {\n-        return planeCount;\n+        return getIntOption(\"planeCount\", 1);", "originalCommit": "9e855cb000930083a8a4d5883141a505b7d81082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzI4MTM2Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17240#discussion_r457281366", "bodyText": "Fixed", "author": "pveentjer", "createdAt": "2020-07-20T11:01:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE5MTUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "2f26aef3a14c366ab5f11c8f995c9b33e7fbdce4", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MemberHandshake.java b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MemberHandshake.java\nindex b8c071e8b8..6ecf846ac1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MemberHandshake.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MemberHandshake.java\n\n@@ -86,11 +94,11 @@ public class MemberHandshake\n     }\n \n     public int getPlaneCount() {\n-        return getIntOption(\"planeCount\", 1);\n+        return getIntOption(OPTION_PLANE_COUNT, 1);\n     }\n \n     public int getPlaneIndex() {\n-        return getIntOption(\"planeIndex\", 0);\n+        return getIntOption(OPTION_PLANE_INDEX, 0);\n     }\n \n     byte getSchemaVersion() {\n"}}, {"oid": "2f26aef3a14c366ab5f11c8f995c9b33e7fbdce4", "url": "https://github.com/hazelcast/hazelcast/commit/2f26aef3a14c366ab5f11c8f995c9b33e7fbdce4", "message": "MemberHandshake Options\n\nA options hashtable has been added to the member handshake. This way we can easily\nadd extra handshake options without changing the member handshake protocol.\n\nThe options are always of type string/string; it is up to the code that uses the option\nto do the appropriate conversion.\n\nIf a memberhandshake of version 1 is received, the options will be empty.", "committedDate": "2020-07-20T11:04:31Z", "type": "commit"}, {"oid": "2f26aef3a14c366ab5f11c8f995c9b33e7fbdce4", "url": "https://github.com/hazelcast/hazelcast/commit/2f26aef3a14c366ab5f11c8f995c9b33e7fbdce4", "message": "MemberHandshake Options\n\nA options hashtable has been added to the member handshake. This way we can easily\nadd extra handshake options without changing the member handshake protocol.\n\nThe options are always of type string/string; it is up to the code that uses the option\nto do the appropriate conversion.\n\nIf a memberhandshake of version 1 is received, the options will be empty.", "committedDate": "2020-07-20T11:04:31Z", "type": "forcePushed"}]}