{"pr_number": 17210, "pr_title": "Resolved performance problem with PagingPredicate JDK8", "pr_createdAt": "2020-07-14T06:04:29Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17210", "timeline": [{"oid": "f7825a6d5bef2425c4c6796e16aac2626edb7a21", "url": "https://github.com/hazelcast/hazelcast/commit/f7825a6d5bef2425c4c6796e16aac2626edb7a21", "message": "Resolved performance problem with PagingPredicate JDK8\n\nThere is a very severe performance issue with JDK 8 in combination with\nthe paging predicate. This is caused by SubList.sort.\n\nThe problem is fixed by switching from LinkedList to ArrayList in the\nQueryResult. Benchmarks are included in the ticket\n\nfix #17207", "committedDate": "2020-07-14T06:05:45Z", "type": "forcePushed"}, {"oid": "c9a0ee2acae9ce33dfbf8d6d7ab3c44ac03f3468", "url": "https://github.com/hazelcast/hazelcast/commit/c9a0ee2acae9ce33dfbf8d6d7ab3c44ac03f3468", "message": "Resolved performance problem with PagingPredicate JDK8\n\nThere is a very severe performance issue with JDK 8 in combination with\nthe paging predicate. This is caused by SubList.sort.\n\nThe problem is fixed by switching from LinkedList to ArrayList in the\nQueryResult. Benchmarks are included in the ticket\n\nfix #17207", "committedDate": "2020-07-14T07:02:25Z", "type": "commit"}, {"oid": "c9a0ee2acae9ce33dfbf8d6d7ab3c44ac03f3468", "url": "https://github.com/hazelcast/hazelcast/commit/c9a0ee2acae9ce33dfbf8d6d7ab3c44ac03f3468", "message": "Resolved performance problem with PagingPredicate JDK8\n\nThere is a very severe performance issue with JDK 8 in combination with\nthe paging predicate. This is caused by SubList.sort.\n\nThe problem is fixed by switching from LinkedList to ArrayList in the\nQueryResult. Benchmarks are included in the ticket\n\nfix #17207", "committedDate": "2020-07-14T07:02:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMzk4OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17210#discussion_r454223988", "bodyText": "QueryResult constructor has resultLimit, it can be better to pass it to ArrayList as an initial capacity. Seems initial capacity can be applied also for QueryResult#readData.\nUPDATE: I see that resultLimit cannot be used for capacity initialization.", "author": "ahmetmircik", "createdAt": "2020-07-14T09:25:03Z", "path": "hazelcast/src/main/java/com/hazelcast/map/impl/query/QueryResult.java", "diffHunk": "@@ -62,7 +62,7 @@\n  */\n public class QueryResult implements Result<QueryResult>, Iterable<QueryResultRow> {\n \n-    private List rows = new LinkedList();\n+    private List rows = new ArrayList();", "originalCommit": "c9a0ee2acae9ce33dfbf8d6d7ab3c44ac03f3468", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}