{"pr_number": 16791, "pr_title": "Create separate buffer pool for each SerializationService", "pr_createdAt": "2020-03-23T15:44:16Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16791", "timeline": [{"oid": "bab4abfb88f26dc8ecba742b0a2c6997672ad0e1", "url": "https://github.com/hazelcast/hazelcast/commit/bab4abfb88f26dc8ecba742b0a2c6997672ad0e1", "message": "Create separate buffer pool for each SerializationService", "committedDate": "2020-03-23T15:42:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU1ODYyMg==", "url": "https://github.com/hazelcast/hazelcast/pull/16791#discussion_r396558622", "bodyText": "If you expect to use this constructor only from member side, then HazelcastInstanceNotActiveException::new is fine. However if this constructor is to be used also by Jet client-side, then you should rather use whichever notActiveExceptionSupplier was used to construct the prototype service.", "author": "vbekiaris", "createdAt": "2020-03-23T15:54:56Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -100,15 +101,17 @@\n         this.nullSerializerAdapter = createSerializerAdapter(new ConstantSerializers.NullSerializer());\n     }\n \n+    // used by jet\n     protected AbstractSerializationService(AbstractSerializationService prototype) {\n         this.version = prototype.version;\n         this.inputOutputFactory = prototype.inputOutputFactory;\n         this.classLoader = prototype.classLoader;\n         this.managedContext = prototype.managedContext;\n         this.globalPartitioningStrategy = prototype.globalPartitioningStrategy;\n         this.outputBufferSize = prototype.outputBufferSize;\n-        this.bufferPoolThreadLocal = prototype.bufferPoolThreadLocal;\n         this.nullSerializerAdapter = prototype.nullSerializerAdapter;\n+        this.bufferPoolThreadLocal = new BufferPoolThreadLocal(this, new BufferPoolFactoryImpl(),\n+                HazelcastInstanceNotActiveException::new);", "originalCommit": "bab4abfb88f26dc8ecba742b0a2c6997672ad0e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MTM5Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/16791#discussion_r396581397", "bodyText": "from what i see HazelcastInstanceNotActiveException is used for instance here as well, there is no differentiation between client and member, @sancar what are your thoughts on this?", "author": "gierlachg", "createdAt": "2020-03-23T16:24:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU1ODYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc3MjgzMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16791#discussion_r397772831", "bodyText": "@vbekiaris is right. We don't expect HazelcastInstanceNotActiveException on the client side. The code that you shared should also be fixed in my opinion.", "author": "sancar", "createdAt": "2020-03-25T11:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU1ODYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "9674a954c66906bffcf442afe075e49c8fd096a2", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\nindex ed907b253b..5230c1ce1f 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n\n@@ -96,6 +96,7 @@ public abstract class AbstractSerializationService implements InternalSerializat\n         this.managedContext = builder.managedContext;\n         this.globalPartitioningStrategy = builder.globalPartitionStrategy;\n         this.outputBufferSize = builder.initialOutputBufferSize;\n+        this.notActiveExceptionSupplier = builder.notActiveExceptionSupplier;\n         this.bufferPoolThreadLocal = new BufferPoolThreadLocal(this, builder.bufferPoolFactory,\n                 builder.notActiveExceptionSupplier);\n         this.nullSerializerAdapter = createSerializerAdapter(new ConstantSerializers.NullSerializer());\n"}}, {"oid": "dc44d7f9292824e6d9fe654910706be5c85c1d79", "url": "https://github.com/hazelcast/hazelcast/commit/dc44d7f9292824e6d9fe654910706be5c85c1d79", "message": "Merge branch 'master' into ass_buffer_pool", "committedDate": "2020-03-24T08:58:04Z", "type": "commit"}, {"oid": "9674a954c66906bffcf442afe075e49c8fd096a2", "url": "https://github.com/hazelcast/hazelcast/commit/9674a954c66906bffcf442afe075e49c8fd096a2", "message": "Use NotActiveExceptionSupplier", "committedDate": "2020-03-25T11:24:50Z", "type": "commit"}]}