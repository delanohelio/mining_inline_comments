{"pr_number": 16684, "pr_title": "Improve logging when wrong class implemented", "pr_createdAt": "2020-02-25T10:36:58Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16684", "timeline": [{"oid": "562b4c4ff75690a8de926c9f8a897258e7d7115c", "url": "https://github.com/hazelcast/hazelcast/commit/562b4c4ff75690a8de926c9f8a897258e7d7115c", "message": "Improve logging when wrong class implemented\n\noriginal error:\n```\n2020-02-25 10:56:26,732 [DEBUG] [Thread-1] [c.h.i.u.ServiceLoader]: There appears to be a classloading conflict. Class com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook loaded by jdk.internal.loader.ClassLoaders$AppClassLoader@2c13da15 does not implement an interface with name com.hazelcast.nio.serialization.SerializerHook in both class loaders.the interface currently loaded by jdk.internal.loader.ClassLoaders$AppClassLoader@2c13da15\n```\n\nThe interface was same, but the class implemented wrong interface.", "committedDate": "2020-02-25T10:35:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MzEzMA==", "url": "https://github.com/hazelcast/hazelcast/pull/16684#discussion_r386993130", "bodyText": "I think the original was referring to a specific runtime environment (OSGi, Java EE) and not to execution time; so I would say that \"in a runtime\" was actually correct.", "author": "vojtechtoman", "createdAt": "2020-03-03T12:41:16Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java", "diffHunk": "@@ -374,8 +374,8 @@ private boolean isDuplicate(Class<?> candidate) {\n         private void onClassNotFoundException(String className, ClassLoader classLoader, ClassNotFoundException e) {\n             if (className.startsWith(\"com.hazelcast\")) {\n                 LOGGER.fine(\"Failed to load \" + className + \" by \" + classLoader\n-                        + \". This indicates a classloading issue. It can happen in a runtime with \"\n-                        + \"a complicated classloading model. (OSGi, Java EE, etc);\");\n+                        + \". This indicates a classloading issue. It can happen at runtime with \"", "originalCommit": "562b4c4ff75690a8de926c9f8a897258e7d7115c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3MTExOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16684#discussion_r387571119", "bodyText": "I misunderstood your comment at first, I agree, I'll fix.", "author": "viliam-durina", "createdAt": "2020-03-04T10:19:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5MzEzMA=="}], "type": "inlineReview", "revised_code": {"commit": "33e848439aa1b17b48c5d8d15965b894a1425ebc", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java b/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\nindex 2ddac7fb59b..7cab51f4c45 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\n\n@@ -374,7 +374,7 @@ public final class ServiceLoader {\n         private void onClassNotFoundException(String className, ClassLoader classLoader, ClassNotFoundException e) {\n             if (className.startsWith(\"com.hazelcast\")) {\n                 LOGGER.fine(\"Failed to load \" + className + \" by \" + classLoader\n-                        + \". This indicates a classloading issue. It can happen at runtime with \"\n+                        + \". This indicates a classloading issue. It can happen in a runtime with \"\n                         + \"a complicated classloading model (OSGi, Java EE, etc)\");\n             } else {\n                 throw new HazelcastException(e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NTkxOA==", "url": "https://github.com/hazelcast/hazelcast/pull/16684#discussion_r386995918", "bodyText": "Minor: the three logging statements in this method use three different conventions when referring to interfaces: \"does not implement ...\" vs \"does not implement an interface with name ...\" vs \"does not implement the expected interface ...\" What about unifying this?", "author": "vojtechtoman", "createdAt": "2020-03-03T12:46:40Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java", "diffHunk": "@@ -385,17 +385,22 @@ private void onNonAssignableClass(String className, Class candidate) {\n             if (expectedType.isInterface()) {\n                 if (ClassLoaderUtil.implementsInterfaceWithSameName(candidate, expectedType)) {\n                     // this can happen in application containers - different Hazelcast JARs are loaded\n-                    // by different classloaders.\n+                    // by different class loaders.\n                     LOGGER.fine(\"There appears to be a classloading conflict. \"\n                             + \"Class \" + className + \" loaded by \" + candidate.getClassLoader() + \" implements \"\n                             + expectedType.getName() + \" from its own class loader, but it does not implement \"\n                             + expectedType.getName() + \" loaded by \" + expectedType.getClassLoader());\n                 } else {\n-                    //the class does not implement interface with the expected name.\n-                    LOGGER.fine(\"There appears to be a classloading conflict. \"\n-                            + \"Class \" + className + \" loaded by \" + candidate.getClassLoader() + \" does not \"\n-                            + \"implement an interface with name \" + expectedType.getName() + \" in both class loaders.\"\n-                            + \"the interface currently loaded by \" + expectedType.getClassLoader());\n+                    if (candidate.getClassLoader() != expectedType.getClassLoader()) {\n+                        //the class does not implement interface with the expected name.\n+                        LOGGER.fine(\"There appears to be a classloading conflict. \"\n+                                + \"Class \" + className + \" loaded by \" + candidate.getClassLoader() + \" does not \"\n+                                + \"implement an interface with name \" + expectedType.getName() + \" in both class loaders.\"\n+                                + \" The interface currently loaded by \" + expectedType.getClassLoader());\n+                    } else {\n+                        LOGGER.fine(\"The class \" + candidate.getName() + \" does not implement the expected \" +\n+                                \"interface \" + expectedType.getName());", "originalCommit": "562b4c4ff75690a8de926c9f8a897258e7d7115c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU3OTM4MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16684#discussion_r387579381", "bodyText": "The text is actually unchanged from previous version, just the third case is new. I think we don't need consistency. All messages are understandable when seen in isolation... I tweaked them a bit.", "author": "viliam-durina", "createdAt": "2020-03-04T10:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk5NTkxOA=="}], "type": "inlineReview", "revised_code": {"commit": "33e848439aa1b17b48c5d8d15965b894a1425ebc", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java b/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\nindex 2ddac7fb59b..7cab51f4c45 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/util/ServiceLoader.java\n\n@@ -391,12 +391,12 @@ public final class ServiceLoader {\n                             + expectedType.getName() + \" from its own class loader, but it does not implement \"\n                             + expectedType.getName() + \" loaded by \" + expectedType.getClassLoader());\n                 } else {\n+                    // the class does not implement an interface with the expected name\n                     if (candidate.getClassLoader() != expectedType.getClassLoader()) {\n-                        //the class does not implement interface with the expected name.\n                         LOGGER.fine(\"There appears to be a classloading conflict. \"\n                                 + \"Class \" + className + \" loaded by \" + candidate.getClassLoader() + \" does not \"\n-                                + \"implement an interface with name \" + expectedType.getName() + \" in both class loaders.\"\n-                                + \" The interface currently loaded by \" + expectedType.getClassLoader());\n+                                + \"implement an interface with name \" + expectedType.getName() + \" in both class loaders. \"\n+                                + \"The interface is currently loaded by \" + expectedType.getClassLoader());\n                     } else {\n                         LOGGER.fine(\"The class \" + candidate.getName() + \" does not implement the expected \" +\n                                 \"interface \" + expectedType.getName());\n"}}, {"oid": "33e848439aa1b17b48c5d8d15965b894a1425ebc", "url": "https://github.com/hazelcast/hazelcast/commit/33e848439aa1b17b48c5d8d15965b894a1425ebc", "message": "Tweak the messages", "committedDate": "2020-03-04T10:33:27Z", "type": "commit"}, {"oid": "123a67e9b7bbacc5ffb479be4094a54de407cf4d", "url": "https://github.com/hazelcast/hazelcast/commit/123a67e9b7bbacc5ffb479be4094a54de407cf4d", "message": "Fix checkstyle", "committedDate": "2020-03-06T07:58:46Z", "type": "commit"}]}