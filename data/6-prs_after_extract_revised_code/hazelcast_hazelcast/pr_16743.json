{"pr_number": 16743, "pr_title": "Add ability to disallow on random target for ClientInvocations", "pr_createdAt": "2020-03-13T11:42:33Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16743", "timeline": [{"oid": "a762a71a712362c3d0c8aec96ed3a14d111bdfc1", "url": "https://github.com/hazelcast/hazelcast/commit/a762a71a712362c3d0c8aec96ed3a14d111bdfc1", "message": "Add ability to disallow on random target for ClientInvocations\n\nNew API usage:\nClientInvocation invocation = new ClientInvocation(client, request, objectName, target);\ninvocation.disallowRetryOnRandom();\ninvocation.invoke()\n\nfixes https://github.com/hazelcast/hazelcast/issues/16653", "committedDate": "2020-03-16T11:28:33Z", "type": "forcePushed"}, {"oid": "a762a71a712362c3d0c8aec96ed3a14d111bdfc1", "url": "https://github.com/hazelcast/hazelcast/commit/a762a71a712362c3d0c8aec96ed3a14d111bdfc1", "message": "Add ability to disallow on random target for ClientInvocations\n\nNew API usage:\nClientInvocation invocation = new ClientInvocation(client, request, objectName, target);\ninvocation.disallowRetryOnRandom();\ninvocation.invoke()\n\nfixes https://github.com/hazelcast/hazelcast/issues/16653", "committedDate": "2020-03-16T11:28:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyNjU4Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/16743#discussion_r394326586", "bodyText": "for non smart, there is really no concept of random, hence, the name is misleading but this is not a major issue.", "author": "ihsandemir", "createdAt": "2020-03-18T12:59:18Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientInvocation.java", "diffHunk": "@@ -159,20 +165,41 @@ private void invokeOnSelection() {\n             if (!urgent) {\n                 invocationService.checkInvocationAllowed();\n             }\n+\n+\n             if (isBindToSingleConnection()) {\n-                invocationService.invokeOnConnection(this, (ClientConnection) connection);\n-            } else if (partitionId != -1) {\n-                invocationService.invokeOnPartitionOwner(this, partitionId);\n-            } else if (uuid != null) {\n-                invocationService.invokeOnTarget(this, uuid);\n+                boolean invoked = invocationService.invokeOnConnection(this, (ClientConnection) connection);\n+                if (!invoked) {\n+                    notifyException(new IOException(\"Could not invoke on connection \" + connection));\n+                }\n+                return;\n+            }\n+\n+            boolean invoked;\n+            if (isSmartRoutingEnabled) {\n+                if (partitionId != -1) {\n+                    invoked = invocationService.invokeOnPartitionOwner(this, partitionId);\n+                } else if (uuid != null) {\n+                    invoked = invocationService.invokeOnTarget(this, uuid);\n+                } else {\n+                    invoked = invocationService.invokeOnRandomTarget(this);\n+                }\n+                if (allowRetryOnRandom && !invoked) {\n+                    invoked = invocationService.invokeOnRandomTarget(this);\n+                }\n             } else {\n-                invocationService.invokeOnRandomTarget(this);\n+                invoked = invocationService.invokeOnRandomTarget(this);", "originalCommit": "a762a71a712362c3d0c8aec96ed3a14d111bdfc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1MzI3OA==", "url": "https://github.com/hazelcast/hazelcast/pull/16743#discussion_r394353278", "bodyText": "How about invokeOnAvailableTarget name for this method?", "author": "puzpuzpuz", "createdAt": "2020-03-18T13:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyNjU4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNTY4OQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16743#discussion_r395535689", "bodyText": "@puzpuzpuz We have decided to name this invoke . I have also added javadoc for ClientInvocationService to explain the behaviours.", "author": "sancar", "createdAt": "2020-03-20T10:00:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyNjU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8cabbc16694e5900bdebd37c64f623c072d64947", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientInvocation.java b/hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientInvocation.java\nindex 20f21c41d4..4e2beff837 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientInvocation.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/spi/impl/ClientInvocation.java\n\n@@ -182,13 +182,13 @@ public class ClientInvocation extends BaseInvocation implements Runnable {\n                 } else if (uuid != null) {\n                     invoked = invocationService.invokeOnTarget(this, uuid);\n                 } else {\n-                    invoked = invocationService.invokeOnRandomTarget(this);\n+                    invoked = invocationService.invoke(this);\n                 }\n                 if (allowRetryOnRandom && !invoked) {\n-                    invoked = invocationService.invokeOnRandomTarget(this);\n+                    invoked = invocationService.invoke(this);\n                 }\n             } else {\n-                invoked = invocationService.invokeOnRandomTarget(this);\n+                invoked = invocationService.invoke(this);\n             }\n             if (!invoked) {\n                 notifyException(new IOException(\"No connection found to invoke\"));\n"}}, {"oid": "8cabbc16694e5900bdebd37c64f623c072d64947", "url": "https://github.com/hazelcast/hazelcast/commit/8cabbc16694e5900bdebd37c64f623c072d64947", "message": "review change. InvokeOnRandom -> invoke , and some javadoc for invocaitonService", "committedDate": "2020-03-20T09:27:46Z", "type": "commit"}]}