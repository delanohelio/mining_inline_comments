{"pr_number": 17612, "pr_title": "Check IMap permissions when executing an SQL query", "pr_createdAt": "2020-09-24T09:27:09Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17612", "timeline": [{"oid": "c2e41d2cb7c6efce63f8359e5f272e05014f12d4", "url": "https://github.com/hazelcast/hazelcast/commit/c2e41d2cb7c6efce63f8359e5f272e05014f12d4", "message": "SQL security draft", "committedDate": "2020-09-24T09:24:09Z", "type": "commit"}, {"oid": "82b06ff1e4bac37f49cda19f4710672898498a69", "url": "https://github.com/hazelcast/hazelcast/commit/82b06ff1e4bac37f49cda19f4710672898498a69", "message": "Optimized", "committedDate": "2020-09-25T07:29:44Z", "type": "commit"}, {"oid": "8246fb3a71095239300fb2399c75473013797b24", "url": "https://github.com/hazelcast/hazelcast/commit/8246fb3a71095239300fb2399c75473013797b24", "message": "Comments", "committedDate": "2020-09-25T07:36:11Z", "type": "commit"}, {"oid": "6617958301a103be77b74e61dc27632eb0a28175", "url": "https://github.com/hazelcast/hazelcast/commit/6617958301a103be77b74e61dc27632eb0a28175", "message": "Remove sql-permission", "committedDate": "2020-09-25T07:44:09Z", "type": "commit"}, {"oid": "c5f4f1190d0484d5af503268d3e4da0b2f8c6112", "url": "https://github.com/hazelcast/hazelcast/commit/c5f4f1190d0484d5af503268d3e4da0b2f8c6112", "message": "One more test", "committedDate": "2020-09-25T08:43:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0MDE5MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494840191", "bodyText": "Have you considered using a builder pattern?\nI know it's an \"impl\" class, but it would make the initializations more readable.", "author": "kwart", "createdAt": "2020-09-25T08:45:10Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java", "diffHunk": "@@ -77,7 +81,8 @@ public Plan(\n         SqlRowMetadata rowMetadata,\n         QueryParameterMetadata parameterMetadata,\n         PlanCacheKey planKey,\n-        Set<PlanObjectKey> objectIds\n+        Set<PlanObjectKey> objectIds,\n+        List<String> mapNames", "originalCommit": "c2e41d2cb7c6efce63f8359e5f272e05014f12d4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0Nzg5NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494847894", "bodyText": "I would say that both approaches (direct ctor and builder) have their own problems. With the builder, there is more code, and more ways to construct an inconsistent state. So I would prefer to leave it as is.", "author": "devozerov", "createdAt": "2020-09-25T08:58:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0MDE5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7abc5382532e31edad1619e706541de81c172bd9", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java b/hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java\nindex 353c7db3c3b..e63cd93f207 100644\n--- a/hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java\n+++ b/hazelcast/src/main/java/com/hazelcast/sql/impl/plan/Plan.java\n\n@@ -82,7 +85,7 @@ public class Plan implements CacheablePlan {\n         QueryParameterMetadata parameterMetadata,\n         PlanCacheKey planKey,\n         Set<PlanObjectKey> objectIds,\n-        List<String> mapNames\n+        List<Permission> permissions\n     ) {\n         this.partMap = partMap;\n         this.fragments = fragments;\n"}}, {"oid": "7abc5382532e31edad1619e706541de81c172bd9", "url": "https://github.com/hazelcast/hazelcast/commit/7abc5382532e31edad1619e706541de81c172bd9", "message": "Checkstyle", "committedDate": "2020-09-25T08:56:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5Mzk2Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494893966", "bodyText": "Wouldn't it be cleaner to put this class to the EE repo and make it available through some new method in the SecurityContext class? E.g. SecurityContext.createSqlSecurityContext(Subject)", "author": "kwart", "createdAt": "2020-09-25T10:22:30Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/security/SqlSecurityContextImpl.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql.impl.security;\n+\n+import com.hazelcast.security.SecurityContext;\n+\n+import javax.security.auth.Subject;\n+import java.security.Permission;\n+\n+public class SqlSecurityContextImpl implements SqlSecurityContext {", "originalCommit": "7abc5382532e31edad1619e706541de81c172bd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkzNTAwOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494935008", "bodyText": "Agree. Moved SqlSecurityContextImpl to enterprise. Now it is created from the SecurityContextImpl.", "author": "devozerov", "createdAt": "2020-09-25T11:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg5Mzk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "7de44d9cbf09bd3696b10d0ae1118c6992d84612", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/sql/impl/security/SqlSecurityContextImpl.java b/hazelcast/src/main/java/com/hazelcast/sql/impl/security/SqlSecurityContextImpl.java\ndeleted file mode 100644\nindex b7cdf48ac77..00000000000\n--- a/hazelcast/src/main/java/com/hazelcast/sql/impl/security/SqlSecurityContextImpl.java\n+++ /dev/null\n\n@@ -1,43 +0,0 @@\n-/*\n- * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.hazelcast.sql.impl.security;\n-\n-import com.hazelcast.security.SecurityContext;\n-\n-import javax.security.auth.Subject;\n-import java.security.Permission;\n-\n-public class SqlSecurityContextImpl implements SqlSecurityContext {\n-\n-    private final SecurityContext context;\n-    private final Subject subject;\n-\n-    public SqlSecurityContextImpl(SecurityContext context, Subject subject) {\n-        this.context = context;\n-        this.subject = subject;\n-    }\n-\n-    @Override\n-    public boolean isSecurityEnabled() {\n-        return true;\n-    }\n-\n-    @Override\n-    public void checkPermission(Permission permission) {\n-        context.checkPermission(subject, permission);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwNzM5NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494907395", "bodyText": "Not used.", "author": "mmedenjak", "createdAt": "2020-09-25T10:51:01Z", "path": "hazelcast-sql/src/main/java/com/hazelcast/sql/impl/calcite/opt/physical/visitor/PlanCreateVisitor.java", "diffHunk": "@@ -444,4 +428,16 @@ private static PlanNodeSchema getScanSchemaBeforeProject(AbstractMapTable table)\n     private PlanFragmentMapping dataMemberMapping() {\n         return new PlanFragmentMapping(memberIds, true);\n     }\n+\n+    private List<Permission> createPermissions() {", "originalCommit": "7abc5382532e31edad1619e706541de81c172bd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkzNDY3MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17612#discussion_r494934671", "bodyText": "Fixed", "author": "devozerov", "createdAt": "2020-09-25T11:50:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkwNzM5NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7de44d9cbf09bd3696b10d0ae1118c6992d84612", "url": "https://github.com/hazelcast/hazelcast/commit/7de44d9cbf09bd3696b10d0ae1118c6992d84612", "message": "Move SQL security context implementation to enterprise.", "committedDate": "2020-09-25T11:48:41Z", "type": "commit"}]}