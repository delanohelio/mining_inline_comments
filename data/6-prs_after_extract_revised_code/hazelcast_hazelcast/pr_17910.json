{"pr_number": 17910, "pr_title": "Add remove logger method to LoggingService and LoggerFactory interfaces", "pr_createdAt": "2020-12-01T09:37:02Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17910", "timeline": [{"oid": "2f655b9fb743d89f69409f1c2253881005fb97a7", "url": "https://github.com/hazelcast/hazelcast/commit/2f655b9fb743d89f69409f1c2253881005fb97a7", "message": "Add remove logger method to LoggingService and LoggerFactory interfaces", "committedDate": "2020-12-01T09:36:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzODg2OQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533438869", "bodyText": "Should be removeLogger", "author": "puzpuzpuz", "createdAt": "2020-12-01T14:15:49Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java", "diffHunk": "@@ -28,4 +28,8 @@\n     @Nonnull ILogger getLogger(@Nonnull String name);\n \n     @Nonnull ILogger getLogger(@Nonnull Class type);\n+\n+    void reoveLogger(@Nonnull String name);", "originalCommit": "2f655b9fb743d89f69409f1c2253881005fb97a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce9f3c98d721259ecbbda0befdcf856e82cc3562", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java b/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\nindex 4412473bc8..3db1b2452e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\n\n@@ -29,7 +29,7 @@ public interface LoggingService {\n \n     @Nonnull ILogger getLogger(@Nonnull Class type);\n \n-    void reoveLogger(@Nonnull String name);\n+    void removeLogger(@Nonnull String name);\n \n-    void reoveLogger(@Nonnull Class type);\n+    void removeLogger(@Nonnull Class type);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzODk1Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533438952", "bodyText": "Should be removeLogger", "author": "puzpuzpuz", "createdAt": "2020-12-01T14:15:56Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java", "diffHunk": "@@ -28,4 +28,8 @@\n     @Nonnull ILogger getLogger(@Nonnull String name);\n \n     @Nonnull ILogger getLogger(@Nonnull Class type);\n+\n+    void reoveLogger(@Nonnull String name);\n+\n+    void reoveLogger(@Nonnull Class type);", "originalCommit": "2f655b9fb743d89f69409f1c2253881005fb97a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce9f3c98d721259ecbbda0befdcf856e82cc3562", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java b/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\nindex 4412473bc8..3db1b2452e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/LoggingService.java\n\n@@ -29,7 +29,7 @@ public interface LoggingService {\n \n     @Nonnull ILogger getLogger(@Nonnull Class type);\n \n-    void reoveLogger(@Nonnull String name);\n+    void removeLogger(@Nonnull String name);\n \n-    void reoveLogger(@Nonnull Class type);\n+    void removeLogger(@Nonnull Class type);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQzOTU0OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533439548", "bodyText": "javax.annotation.Nonnull should be used instead of this one", "author": "puzpuzpuz", "createdAt": "2020-12-01T14:16:43Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java", "diffHunk": "@@ -27,6 +27,7 @@\n import com.hazelcast.logging.Logger;\n import com.hazelcast.logging.LoggerFactory;\n import com.hazelcast.logging.LoggingService;\n+import org.jetbrains.annotations.NotNull;", "originalCommit": "2f655b9fb743d89f69409f1c2253881005fb97a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ce9f3c98d721259ecbbda0befdcf856e82cc3562", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java b/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\nindex eb7663a220..5d70c52f70 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\n\n@@ -27,7 +27,6 @@ import com.hazelcast.logging.LogListener;\n import com.hazelcast.logging.Logger;\n import com.hazelcast.logging.LoggerFactory;\n import com.hazelcast.logging.LoggingService;\n-import org.jetbrains.annotations.NotNull;\n \n import javax.annotation.Nonnull;\n import java.util.concurrent.ConcurrentHashMap;\n"}}, {"oid": "ce9f3c98d721259ecbbda0befdcf856e82cc3562", "url": "https://github.com/hazelcast/hazelcast/commit/ce9f3c98d721259ecbbda0befdcf856e82cc3562", "message": "address comments", "committedDate": "2020-12-01T15:58:51Z", "type": "commit"}, {"oid": "729e75f8403722265c918f5e3e8232dcfc8a6851", "url": "https://github.com/hazelcast/hazelcast/commit/729e75f8403722265c918f5e3e8232dcfc8a6851", "message": "Add removeLogger to Logger", "committedDate": "2020-12-01T16:47:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2ODk0NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533568944", "bodyText": "nit: I think the old javadoc was closer to the truth, as clazz is not the class of the logger, but the class for which the logger is created/obtained.", "author": "puzpuzpuz", "createdAt": "2020-12-01T16:55:29Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/Logger.java", "diffHunk": "@@ -57,7 +57,7 @@ private Logger() {\n     /**\n      * Obtains a {@link ILogger logger} for the given {@code clazz}.\n      *\n-     * @param clazz the class to obtain the logger for.\n+     * @param clazz the class of the logger to obtain.", "originalCommit": "729e75f8403722265c918f5e3e8232dcfc8a6851", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\nindex d6ad5d3c0b..1dd485d711 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n\n@@ -57,11 +61,12 @@ public final class Logger {\n     /**\n      * Obtains a {@link ILogger logger} for the given {@code clazz}.\n      *\n-     * @param clazz the class of the logger to obtain.\n+     * @param clazz the class to obtain the logger for.\n      * @return the obtained logger.\n      */\n-    public static ILogger getLogger(Class clazz) {\n-        return getLogger(clazz.getName());\n+    public static ILogger getLogger(@Nonnull Class clazz) {\n+        checkNotNull(clazz, \"class must not be null\");\n+        return getLoggerInternal(clazz.getName());\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU3MDMxMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533570313", "bodyText": "We can get a NPE because of this change as if statement checks loggerFactory, but the internal block operates on existingFactory. The old code seems to be correct to me as it was reading a volatile fields into a local variable and then operating on it.", "author": "puzpuzpuz", "createdAt": "2020-12-01T16:57:22Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/Logger.java", "diffHunk": "@@ -71,16 +71,40 @@ public static ILogger getLogger(Class clazz) {\n      * @return the obtained logger.\n      */\n     public static ILogger getLogger(String name) {\n-        // try the fast path first\n         LoggerFactory existingFactory = loggerFactory;\n-        if (existingFactory != null) {\n+        if (loggerFactory != null) {", "originalCommit": "729e75f8403722265c918f5e3e8232dcfc8a6851", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\nindex d6ad5d3c0b..1dd485d711 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n\n@@ -70,9 +75,14 @@ public final class Logger {\n      * @param name the name of the logger to obtain.\n      * @return the obtained logger.\n      */\n-    public static ILogger getLogger(String name) {\n+    public static ILogger getLogger(@Nonnull String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        return getLoggerInternal(name);\n+    }\n+\n+    private static ILogger getLoggerInternal(String name) {\n         LoggerFactory existingFactory = loggerFactory;\n-        if (loggerFactory != null) {\n+        if (existingFactory != null) {\n             return existingFactory.getLogger(name);\n         }\n         return createFactoryInternal(name).getLogger(name);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxOTIwOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533619208", "bodyText": "nit: it would be nice to have input validation (e.g. checkNotNull(clazz, \"class must not be null\");) in this and other public methods of this class.", "author": "puzpuzpuz", "createdAt": "2020-12-01T18:10:12Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/Logger.java", "diffHunk": "@@ -71,16 +71,40 @@ public static ILogger getLogger(Class clazz) {\n      * @return the obtained logger.\n      */\n     public static ILogger getLogger(String name) {\n-        // try the fast path first\n         LoggerFactory existingFactory = loggerFactory;\n-        if (existingFactory != null) {\n+        if (loggerFactory != null) {\n             return existingFactory.getLogger(name);\n         }\n+        return createFactoryInternal(name).getLogger(name);\n+    }\n \n+    /**\n+     * Removes the {@link ILogger logger} for the given {@code clazz}.\n+     *\n+     * @param clazz the class of the logger to remove.\n+     */\n+    public static void removeLogger(Class clazz) {\n+        removeLogger(clazz.getName());", "originalCommit": "729e75f8403722265c918f5e3e8232dcfc8a6851", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\nindex d6ad5d3c0b..1dd485d711 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n\n@@ -70,9 +75,14 @@ public final class Logger {\n      * @param name the name of the logger to obtain.\n      * @return the obtained logger.\n      */\n-    public static ILogger getLogger(String name) {\n+    public static ILogger getLogger(@Nonnull String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        return getLoggerInternal(name);\n+    }\n+\n+    private static ILogger getLoggerInternal(String name) {\n         LoggerFactory existingFactory = loggerFactory;\n-        if (loggerFactory != null) {\n+        if (existingFactory != null) {\n             return existingFactory.getLogger(name);\n         }\n         return createFactoryInternal(name).getLogger(name);\n"}}, {"oid": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "url": "https://github.com/hazelcast/hazelcast/commit/fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "message": "more review comments", "committedDate": "2020-12-01T18:36:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk0ODYxNw==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533948617", "bodyText": "Should be javax.annotation.Nonnull", "author": "puzpuzpuz", "createdAt": "2020-12-02T07:29:17Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java", "diffHunk": "@@ -18,14 +18,15 @@\n \n import com.hazelcast.instance.BuildInfo;\n import com.hazelcast.instance.JetBuildInfo;\n+import com.hazelcast.internal.util.ConstructorFunction;\n import com.hazelcast.logging.AbstractLogger;\n import com.hazelcast.logging.ILogger;\n import com.hazelcast.logging.LogEvent;\n import com.hazelcast.logging.LogListener;\n import com.hazelcast.logging.Logger;\n import com.hazelcast.logging.LoggerFactory;\n import com.hazelcast.logging.LoggingService;\n-import com.hazelcast.internal.util.ConstructorFunction;\n+import org.jetbrains.annotations.NotNull;", "originalCommit": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62c8daf1619956dd2e615860f96024520934c2b7", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java b/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\nindex fa0a90f7d2..514c0afddf 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\n\n@@ -26,7 +26,6 @@ import com.hazelcast.logging.LogListener;\n import com.hazelcast.logging.Logger;\n import com.hazelcast.logging.LoggerFactory;\n import com.hazelcast.logging.LoggingService;\n-import org.jetbrains.annotations.NotNull;\n \n import javax.annotation.Nonnull;\n import java.util.concurrent.ConcurrentHashMap;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk0OTYzNg==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r533949636", "bodyText": "String name seems to be unused.", "author": "puzpuzpuz", "createdAt": "2020-12-02T07:31:31Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/Logger.java", "diffHunk": "@@ -70,17 +75,52 @@ public static ILogger getLogger(Class clazz) {\n      * @param name the name of the logger to obtain.\n      * @return the obtained logger.\n      */\n-    public static ILogger getLogger(String name) {\n-        // try the fast path first\n+    public static ILogger getLogger(@Nonnull String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        return getLoggerInternal(name);\n+    }\n+\n+    private static ILogger getLoggerInternal(String name) {\n         LoggerFactory existingFactory = loggerFactory;\n         if (existingFactory != null) {\n             return existingFactory.getLogger(name);\n         }\n+        return createFactoryInternal(name).getLogger(name);\n+    }\n+\n+    /**\n+     * Removes the {@link ILogger logger} for the given {@code clazz}.\n+     *\n+     * @param clazz the class to remove the logger for.\n+     */\n+    public static void removeLogger(Class clazz) {\n+        checkNotNull(clazz, \"class must not be null\");\n+        removeLoggerInternal(clazz.getName());\n+    }\n+\n+    /**\n+     * Removes the {@link ILogger logger} for the given {@code name}.\n+     *\n+     * @param name the name of the logger to remove.\n+     */\n+    public static void removeLogger(String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        removeLoggerInternal(name);\n+    }\n+\n+    private static void removeLoggerInternal(String name) {\n+        LoggerFactory existingFactory = loggerFactory;\n+        if (existingFactory != null) {\n+            existingFactory.removeLogger(name);\n+        }\n+        createFactoryInternal(name).removeLogger(name);\n+    }\n \n+    private static LoggerFactory createFactoryInternal(String name) {", "originalCommit": "fe9905945804e4cca1a7a2ef54b97d1bf5ebc9f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "62c8daf1619956dd2e615860f96024520934c2b7", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\nindex 1dd485d711..361ca1b15d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/Logger.java\n\n@@ -85,7 +85,7 @@ public final class Logger {\n         if (existingFactory != null) {\n             return existingFactory.getLogger(name);\n         }\n-        return createFactoryInternal(name).getLogger(name);\n+        return createFactoryInternal().getLogger(name);\n     }\n \n     /**\n"}}, {"oid": "62c8daf1619956dd2e615860f96024520934c2b7", "url": "https://github.com/hazelcast/hazelcast/commit/62c8daf1619956dd2e615860f96024520934c2b7", "message": "review comments", "committedDate": "2020-12-02T08:44:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NTQ5MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r534355490", "bodyText": "Does this need to be synchronized with concurrent calls to getLogger? I can see all calls to getLogger are thread-safe as they use striped locks but removeLogger here does not coordinate with methods adding loggers.", "author": "mmedenjak", "createdAt": "2020-12-02T17:36:50Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java", "diffHunk": "@@ -86,6 +86,21 @@ public ILogger getLogger(@Nonnull Class clazz) {\n         return getOrPutIfAbsent(mapLoggers, clazz.getName(), loggerConstructor);\n     }\n \n+    @Override\n+    public void removeLogger(@Nonnull String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        loggerFactory.removeLogger(name);", "originalCommit": "62c8daf1619956dd2e615860f96024520934c2b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwMTM1Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r534701357", "bodyText": "Good catch.\nI think, the simplest way to fix this problem is to use the fact that loggerFactory accesses are guarded with CHM (mapLoggers) operations and we could use CHM's atomicity guarantees for the deletion:\n    @Override\n    public void removeLogger(@Nonnull String name) {\n        checkNotNull(name, \"name must not be null\");\n        mapLoggers.computeIfPresent(name, (k, v) -> {\n            loggerFactory.removeLogger(name);\n            // delete the entry\n            return null;\n        });        \n    }", "author": "puzpuzpuz", "createdAt": "2020-12-03T05:59:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NTQ5MA=="}], "type": "inlineReview", "revised_code": {"commit": "c7bf93b154d5eb3396b742ba598718d514d7d43a", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java b/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\nindex 514c0afddf..8c446b6a4e 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/clientside/ClientLoggingService.java\n\n@@ -89,16 +89,21 @@ public class ClientLoggingService implements LoggingService {\n     @Override\n     public void removeLogger(@Nonnull String name) {\n         checkNotNull(name, \"name must not be null\");\n-        loggerFactory.removeLogger(name);\n-        mapLoggers.remove(name);\n+        removeLoggerInternal(name);\n     }\n \n     @Override\n     public void removeLogger(@Nonnull Class clazz) {\n         checkNotNull(clazz, \"class must not be null\");\n-        String name = clazz.getName();\n-        loggerFactory.removeLogger(name);\n-        mapLoggers.remove(name);\n+        removeLoggerInternal(clazz.getName());\n+    }\n+\n+    private void removeLoggerInternal(String name) {\n+        mapLoggers.computeIfPresent(name, (k, v) -> {\n+            loggerFactory.removeLogger(name);\n+            // delete the entry\n+            return null;\n+        });\n     }\n \n     private class DefaultLogger extends AbstractLogger {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NzQzMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17910#discussion_r534357432", "bodyText": "Same as in client logging service.", "author": "mmedenjak", "createdAt": "2020-12-02T17:39:42Z", "path": "hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java", "diffHunk": "@@ -83,6 +83,21 @@ public ILogger getLogger(@Nonnull Class clazz) {\n         return getOrPutIfAbsent(mapLoggers, clazz.getName(), loggerConstructor);\n     }\n \n+    @Override\n+    public void removeLogger(@Nonnull String name) {\n+        checkNotNull(name, \"name must not be null\");\n+        loggerFactory.removeLogger(name);", "originalCommit": "62c8daf1619956dd2e615860f96024520934c2b7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c7bf93b154d5eb3396b742ba598718d514d7d43a", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java b/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\nindex 5d70c52f70..b3d6464a44 100644\n--- a/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\n+++ b/hazelcast/src/main/java/com/hazelcast/logging/impl/LoggingServiceImpl.java\n\n@@ -86,16 +86,13 @@ public class LoggingServiceImpl implements LoggingService {\n     @Override\n     public void removeLogger(@Nonnull String name) {\n         checkNotNull(name, \"name must not be null\");\n-        loggerFactory.removeLogger(name);\n-        mapLoggers.remove(name);\n+        removeLoggerInternal(name);\n     }\n \n     @Override\n     public void removeLogger(@Nonnull Class clazz) {\n         checkNotNull(clazz, \"class must not be null\");\n-        String name = clazz.getName();\n-        loggerFactory.removeLogger(name);\n-        mapLoggers.remove(name);\n+        removeLoggerInternal(clazz.getName());\n     }\n \n     @Override\n"}}, {"oid": "c7bf93b154d5eb3396b742ba598718d514d7d43a", "url": "https://github.com/hazelcast/hazelcast/commit/c7bf93b154d5eb3396b742ba598718d514d7d43a", "message": "guard factory logger removal with computeIfPresent", "committedDate": "2020-12-03T07:00:55Z", "type": "commit"}]}