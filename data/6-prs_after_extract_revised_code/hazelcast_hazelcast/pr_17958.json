{"pr_number": 17958, "pr_title": "[IMDG-178] allow override of default serializers", "pr_createdAt": "2020-12-09T20:45:35Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17958", "timeline": [{"oid": "10d9d99993494dfd58f46645d153cbac469223cf", "url": "https://github.com/hazelcast/hazelcast/commit/10d9d99993494dfd58f46645d153cbac469223cf", "message": "#17954 Added a new property that allows override of default serializers", "committedDate": "2020-12-09T16:14:01Z", "type": "commit"}, {"oid": "76260d5d3b2e2a63a0eb375a46ace90f96304ad6", "url": "https://github.com/hazelcast/hazelcast/commit/76260d5d3b2e2a63a0eb375a46ace90f96304ad6", "message": "#17954 Added allowOverrideDefaultSerializers to configuration", "committedDate": "2020-12-09T17:51:29Z", "type": "commit"}, {"oid": "be3e93974dd134759f3e8588d50a9eba5c323c88", "url": "https://github.com/hazelcast/hazelcast/commit/be3e93974dd134759f3e8588d50a9eba5c323c88", "message": "#17954 Build deserialization service with allowOverrideDefaultSerializers", "committedDate": "2020-12-09T17:55:01Z", "type": "commit"}, {"oid": "13626dcc6e550c826d8fca4227a4f47a770faf59", "url": "https://github.com/hazelcast/hazelcast/commit/13626dcc6e550c826d8fca4227a4f47a770faf59", "message": "#17954 Parse allowOverrideDefaultSerializers from xml/yaml", "committedDate": "2020-12-09T17:55:33Z", "type": "commit"}, {"oid": "0144b24364278ae07eb5ab1263c6d028d9643549", "url": "https://github.com/hazelcast/hazelcast/commit/0144b24364278ae07eb5ab1263c6d028d9643549", "message": "#17954 Use allowOverrideDefaultSerializers property", "committedDate": "2020-12-09T17:56:41Z", "type": "commit"}, {"oid": "825924b72cd25465a28c688358437aa6570b8c1d", "url": "https://github.com/hazelcast/hazelcast/commit/825924b72cd25465a28c688358437aa6570b8c1d", "message": "#17954 Updated comment that explains order of serializers", "committedDate": "2020-12-09T17:57:14Z", "type": "commit"}, {"oid": "0208bdfcc6f8e1a4e8a81d716c0d3b182623b004", "url": "https://github.com/hazelcast/hazelcast/commit/0208bdfcc6f8e1a4e8a81d716c0d3b182623b004", "message": "#17954 Added simple test for allowOverrideDefaultSerializers", "committedDate": "2020-12-09T17:58:16Z", "type": "commit"}, {"oid": "615c8b12e2baa16f19a7e88ba2eb05bc4bf04a52", "url": "https://github.com/hazelcast/hazelcast/commit/615c8b12e2baa16f19a7e88ba2eb05bc4bf04a52", "message": "#17954 Fixed copy paste method name", "committedDate": "2020-12-09T19:38:17Z", "type": "commit"}, {"oid": "892b7a94ee727fce2855bc17633851f6e4de3cb7", "url": "https://github.com/hazelcast/hazelcast/commit/892b7a94ee727fce2855bc17633851f6e4de3cb7", "message": "#17954 Updated full example xml", "committedDate": "2020-12-09T19:38:40Z", "type": "commit"}, {"oid": "c3f1376105b9e51abd2d8078bd0bf16f13dec99c", "url": "https://github.com/hazelcast/hazelcast/commit/c3f1376105b9e51abd2d8078bd0bf16f13dec99c", "message": "#17954 Updated full example yaml", "committedDate": "2020-12-09T19:40:19Z", "type": "commit"}, {"oid": "94200284985ff167adbca7cf0ef82b8d1ca61fbc", "url": "https://github.com/hazelcast/hazelcast/commit/94200284985ff167adbca7cf0ef82b8d1ca61fbc", "message": "#17954 Updated client full example xml", "committedDate": "2020-12-09T19:45:36Z", "type": "commit"}, {"oid": "23a8a85cfe1ef9e29d4ce31daceb4c7283b9817c", "url": "https://github.com/hazelcast/hazelcast/commit/23a8a85cfe1ef9e29d4ce31daceb4c7283b9817c", "message": "#17954 Updated client full example yaml", "committedDate": "2020-12-09T19:45:43Z", "type": "commit"}, {"oid": "46b5ff17b337303796d28f2da728b5c20d1f9969", "url": "https://github.com/hazelcast/hazelcast/commit/46b5ff17b337303796d28f2da728b5c20d1f9969", "message": "#17954 Updated xsds to support allow-override-default-serializers", "committedDate": "2020-12-09T20:05:35Z", "type": "commit"}, {"oid": "e54ab5ffedae74ba382980960a259281d9ad9749", "url": "https://github.com/hazelcast/hazelcast/commit/e54ab5ffedae74ba382980960a259281d9ad9749", "message": "#17954 Added parser test for allow-override-default-serializers", "committedDate": "2020-12-09T20:06:21Z", "type": "commit"}, {"oid": "d95d830c1d16234d009e0b7a2948ff4b65b5382c", "url": "https://github.com/hazelcast/hazelcast/commit/d95d830c1d16234d009e0b7a2948ff4b65b5382c", "message": "#17954 Fixed variable name", "committedDate": "2020-12-09T20:21:27Z", "type": "commit"}, {"oid": "6d5e7eea01c344605e1b7ef049e59616c2c839ef", "url": "https://github.com/hazelcast/hazelcast/commit/6d5e7eea01c344605e1b7ef049e59616c2c839ef", "message": "#17954 Implemented override from system properties", "committedDate": "2020-12-09T20:40:36Z", "type": "commit"}, {"oid": "5c93e26b97e9760e038ac324f7d294ed04ce3110", "url": "https://github.com/hazelcast/hazelcast/commit/5c93e26b97e9760e038ac324f7d294ed04ce3110", "message": "Merge remote-tracking branch 'upstream/master' into 17954-allow-override-of-default-serializer", "committedDate": "2020-12-11T15:00:55Z", "type": "commit"}, {"oid": "22ee81d484a9ea17e358b8cf5b644d21fcda2103", "url": "https://github.com/hazelcast/hazelcast/commit/22ee81d484a9ea17e358b8cf5b644d21fcda2103", "message": "#17954 Fixed fallback to Serializable serializer", "committedDate": "2020-12-11T15:20:53Z", "type": "commit"}, {"oid": "f5a2d3347956222bad02906770ebd7011d21794b", "url": "https://github.com/hazelcast/hazelcast/commit/f5a2d3347956222bad02906770ebd7011d21794b", "message": "#17954 Improved test coverage", "committedDate": "2020-12-11T15:24:13Z", "type": "commit"}, {"oid": "c5a3e664720fd175655ff9c83634608643fc5b26", "url": "https://github.com/hazelcast/hazelcast/commit/c5a3e664720fd175655ff9c83634608643fc5b26", "message": "#17954 Fixed + code style", "committedDate": "2020-12-27T16:04:49Z", "type": "commit"}, {"oid": "121407e296d8b6354d9579d55a1634cf9cb9e5f6", "url": "https://github.com/hazelcast/hazelcast/commit/121407e296d8b6354d9579d55a1634cf9cb9e5f6", "message": "#17954 Covered new property by ConfigXmlGeneratorTest", "committedDate": "2020-12-27T16:33:57Z", "type": "commit"}, {"oid": "6de798d10c2b0b5a7ee51bd3b0a958d4cc6d9c10", "url": "https://github.com/hazelcast/hazelcast/commit/6de798d10c2b0b5a7ee51bd3b0a958d4cc6d9c10", "message": "#17954 Use 4.2 schema in hazelcast-client-full.xml", "committedDate": "2020-12-27T16:45:39Z", "type": "commit"}, {"oid": "02ca4663f5e14007b90b244cbdb5722b9527815f", "url": "https://github.com/hazelcast/hazelcast/commit/02ca4663f5e14007b90b244cbdb5722b9527815f", "message": "#17954 Added allow-override-default-serializers to hazelcast-client-full.xml", "committedDate": "2020-12-27T16:45:58Z", "type": "commit"}, {"oid": "95f32656875a763ed31c318bb0bbbd26bcfe318a", "url": "https://github.com/hazelcast/hazelcast/commit/95f32656875a763ed31c318bb0bbbd26bcfe318a", "message": "#17954 Added allow-override-default-serializers to hazelcast-client-full.yaml", "committedDate": "2020-12-27T16:47:03Z", "type": "commit"}, {"oid": "89e125a6b0b02ce8936d1be232cf6119d07ca90f", "url": "https://github.com/hazelcast/hazelcast/commit/89e125a6b0b02ce8936d1be232cf6119d07ca90f", "message": "#17954 Added allow-override-default-serializers to hazelcast-client-full-example.xml", "committedDate": "2020-12-27T16:47:41Z", "type": "commit"}, {"oid": "6d4b0ccd5d1e1f49b5632e26b82bbd17dcad9751", "url": "https://github.com/hazelcast/hazelcast/commit/6d4b0ccd5d1e1f49b5632e26b82bbd17dcad9751", "message": "#17954 Added allow-override-default-serializers to hazelcast-client-full-example.yaml", "committedDate": "2020-12-27T16:48:09Z", "type": "commit"}, {"oid": "d5ae08d2af8102611cded36d29e9e69db17b743a", "url": "https://github.com/hazelcast/hazelcast/commit/d5ae08d2af8102611cded36d29e9e69db17b743a", "message": "#17954 Added assert for isAllowOverrideDefaultSerializers to AbstractClientConfigBuilderTest", "committedDate": "2020-12-27T16:51:03Z", "type": "commit"}, {"oid": "4944cd86418f8e8096068094cbb836364ab38864", "url": "https://github.com/hazelcast/hazelcast/commit/4944cd86418f8e8096068094cbb836364ab38864", "message": "#17954 Covered new property by ClientConfigXmlGeneratorTest.java", "committedDate": "2020-12-27T16:53:45Z", "type": "commit"}, {"oid": "45ab31749d65709fe28491dcc5067a2b95dd0a20", "url": "https://github.com/hazelcast/hazelcast/commit/45ab31749d65709fe28491dcc5067a2b95dd0a20", "message": "#17954 Added allow-override-default-serializers to hazelcast-spring-4.2.xsd", "committedDate": "2020-12-27T17:15:56Z", "type": "commit"}, {"oid": "a751fac8da2129c8ad619ca96fbe22f804e9693b", "url": "https://github.com/hazelcast/hazelcast/commit/a751fac8da2129c8ad619ca96fbe22f804e9693b", "message": "#17954 Covered new property by TestFullApplicationContext", "committedDate": "2020-12-27T17:16:27Z", "type": "commit"}, {"oid": "cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "url": "https://github.com/hazelcast/hazelcast/commit/cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "message": "#17954 Extract helper methods to helper class\n\n- fixes \"Total number of methods is 32 (max allowed is 30). [MethodCount]\"", "committedDate": "2020-12-27T17:29:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NzcyMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549277721", "bodyText": "Hi @sgflt,\nsince we have decided to give full config support for this the property support is needed. Can we remove this back? Sorry for the inconvenience.", "author": "sancar", "createdAt": "2020-12-28T09:27:03Z", "path": "hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java", "diffHunk": "@@ -1546,6 +1546,18 @@ private int getWhenNoSSLDetected() {\n             = new HazelcastProperty(\"hazelcast.serialization.version\",\n             BuildInfoProvider.getBuildInfo().getSerializationVersion());\n \n+    /**\n+     * Property allows override of default Java serializers for backward compatibility.\n+     *\n+     * For example application using older version of Hazelcast provides custom java.util.Optional serializer.\n+     * Since version 4.2 of Hazelcast registration of any serializer for an embedded type is not possible\n+     * until this flag is set to true.\n+     *\n+     * @since 4.2\n+     */\n+    public static final HazelcastProperty SERIALIZATION_ALLOW_OVERRIDE_DEFAULT_SERIALIZERS", "originalCommit": "cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI5ODEwMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549298102", "bodyText": "Hi @sancar, I followed widely used way of configuration:\n\nsystem property - useful for debug or fine tuning, overrides config file\nstandard config file as persistent configuration\n\nSo the final decision is to drop the system property support? It simplifies some code paths, but removes duality of configuration, which may be useful in some use cases.", "author": "sgflt", "createdAt": "2020-12-28T10:33:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NzcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNTY0OQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549315649", "bodyText": "We are not putting configuration to both properties and config unless we have to.\nAnd I have just learned that we applied a feature that allows you to override Config via properties anyway.\nhttps://docs.hazelcast.org/docs/latest/manual/html-single/#overriding-configuration\nSo when you add it to Config, the property support is added automagically :)", "author": "sancar", "createdAt": "2020-12-28T11:33:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NzcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNDE5Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549434196", "bodyText": "Oh nice :) I am going to investigate this feature.", "author": "sgflt", "createdAt": "2020-12-28T18:00:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NzcyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1Mzg2OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549453868", "bodyText": "Property removed", "author": "sgflt", "createdAt": "2020-12-28T18:59:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NzcyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "46c9da1d7e58576d9210e941ab1ec378367d9755", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java b/hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java\nindex 3988b95dac..d3ba9172aa 100644\n--- a/hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java\n+++ b/hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java\n\n@@ -1546,18 +1546,6 @@ public final class ClusterProperty {\n             = new HazelcastProperty(\"hazelcast.serialization.version\",\n             BuildInfoProvider.getBuildInfo().getSerializationVersion());\n \n-    /**\n-     * Property allows override of default Java serializers for backward compatibility.\n-     *\n-     * For example application using older version of Hazelcast provides custom java.util.Optional serializer.\n-     * Since version 4.2 of Hazelcast registration of any serializer for an embedded type is not possible\n-     * until this flag is set to true.\n-     *\n-     * @since 4.2\n-     */\n-    public static final HazelcastProperty SERIALIZATION_ALLOW_OVERRIDE_DEFAULT_SERIALIZERS\n-      = new HazelcastProperty(\"hazelcast.serialization.allowOverrideDefaultSerializers\", false);\n-\n     /**\n      * By default, search for data structures config is performed within static\n      * configuration first:\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4ODYyMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549288621", "bodyText": "Can we add something like following into Javadoc of the set method?\nThis configuration should be used cautiously. Default serializers are used heavily by the hazelcast internally. \nIf any of the instance in the same cluster overrides a default serializer, all the members and clients in the same cluster must override it with the same serializer. \nThis configuration is introduced specifically to support the following case:\n1. There was a custom configuration by the user for a type \n2. Hazelcast decided to add a default serializer for the same type in a future release.\nTo be able to support Rolling Upgrade from an old version to the new version, one needs to make sure of the backward compatibility of the serialization. As a solution, the user will set this property on the new version so that new instances will be able to override new default serializers with their existing custom serializers.", "author": "sancar", "createdAt": "2020-12-28T10:02:45Z", "path": "hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java", "diffHunk": "@@ -454,6 +455,20 @@ public SerializationConfig setAllowUnsafe(boolean allowUnsafe) {\n         return this;\n     }\n \n+    /**\n+     * @return true if embedded serializers may be overridden by custom serializers\n+     *\n+     * @since 4.2\n+     */\n+    public boolean isAllowOverrideDefaultSerializers() {\n+        return allowOverrideDefaultSerializers;\n+    }\n+\n+    public SerializationConfig setAllowOverrideDefaultSerializers(final boolean allowOverrideDefaultSerializers) {", "originalCommit": "cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1Mzg0Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549453842", "bodyText": "Javadoc added", "author": "sgflt", "createdAt": "2020-12-28T18:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4ODYyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e459ae4218d0ec655ccc276f0eb19b76c92282bb", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java b/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\nindex 583b38cf37..bef252c1c2 100644\n--- a/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\n+++ b/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\n\n@@ -464,6 +464,32 @@ public class SerializationConfig {\n         return allowOverrideDefaultSerializers;\n     }\n \n+    /**\n+     * This configuration should be used cautiously.\n+     * <p>\n+     * Default serializers are used heavily by the hazelcast internally.\n+     * If any of the instance in the same cluster overrides a default serializer,\n+     * all the members and clients in the same cluster must override it with the same serializer.\n+     * </p>\n+     *\n+     * <p>\n+     * This configuration is introduced specifically to support the following case:\n+     * <ul>\n+     *   <li>There was a custom configuration by the user for a type</li>\n+     *   <li>Hazelcast decided to add a default serializer for the same type in a future release</li>\n+     * </ul>\n+     * </p>\n+     *\n+     * To be able to support Rolling Upgrade from an old version to the new version, one needs to make sure\n+     * of the backward compatibility of the serialization. As a solution, the user will set this property\n+     * on the new version so that new instances will be able to override new default serializers\n+     * with their existing custom serializers.\n+     *\n+     * @param allowOverrideDefaultSerializers value to set\n+     * @return configured {@link com.hazelcast.config.SerializerConfig} for chaining\n+     *\n+     * @since 4.2\n+     */\n     public SerializationConfig setAllowOverrideDefaultSerializers(final boolean allowOverrideDefaultSerializers) {\n         this.allowOverrideDefaultSerializers = allowOverrideDefaultSerializers;\n         return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4OTA0Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549289046", "bodyText": "Since we will be removing the property, please do not forget to update this part as SerializationConfig. setAllowOverrideDefaultSerializers", "author": "sancar", "createdAt": "2020-12-28T10:04:16Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -425,8 +427,11 @@ protected final boolean safeRegister(final Class type, final Serializer serializ\n     }\n \n     protected final boolean safeRegister(final Class type, final SerializerAdapter serializer) {\n-        if (constantTypesMap.containsKey(type)) {\n-            throw new IllegalArgumentException(\"[\" + type + \"] serializer cannot be overridden\");\n+        if (constantTypesMap.containsKey(type) && !allowOverrideDefaultSerializers) {\n+            throw new IllegalArgumentException(\n+                \"[\" + type + \"] serializer cannot be overridden.\"\n+                + \" See hazelcast.serialization.allowOverrideDefaultSerializers\"", "originalCommit": "cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NTk3NQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549455975", "bodyText": "Message updated", "author": "sgflt", "createdAt": "2020-12-28T19:07:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI4OTA0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f9e80594bae3b898bf4a77f0969d2534b69f139e", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\nindex 2870341c48..e7bf89461b 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n\n@@ -430,7 +430,7 @@ public abstract class AbstractSerializationService implements InternalSerializat\n         if (constantTypesMap.containsKey(type) && !allowOverrideDefaultSerializers) {\n             throw new IllegalArgumentException(\n                 \"[\" + type + \"] serializer cannot be overridden.\"\n-                + \" See hazelcast.serialization.allowOverrideDefaultSerializers\"\n+                + \" See documentation of hazelcast serialization configuration.\"\n               );\n         }\n         SerializerAdapter current = typeMap.putIfAbsent(type, serializer);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNDM3Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549304372", "bodyText": "Can we put field to equals/hashcode/toString methods of SerializationConfig?", "author": "sancar", "createdAt": "2020-12-28T10:55:12Z", "path": "hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java", "diffHunk": "@@ -51,6 +51,7 @@\n     private boolean allowUnsafe;\n     private final Set<ClassDefinition> classDefinitions;\n     private JavaSerializationFilterConfig javaSerializationFilterConfig;\n+    private boolean allowOverrideDefaultSerializers;", "originalCommit": "cc86a6c38908a24d9dffcd685d56ec246abc9bf6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NjY2Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r549456663", "bodyText": "fixed", "author": "sgflt", "createdAt": "2020-12-28T19:10:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNDM3Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "46c9da1d7e58576d9210e941ab1ec378367d9755", "url": "https://github.com/hazelcast/hazelcast/commit/46c9da1d7e58576d9210e941ab1ec378367d9755", "message": "#17954 Removed unnecessary property\n\n- there is automagic configuration that already does the same thing, but in clever way\n- see ExternalMemberConfigurationEnvTest", "committedDate": "2020-12-28T18:58:28Z", "type": "commit"}, {"oid": "e459ae4218d0ec655ccc276f0eb19b76c92282bb", "url": "https://github.com/hazelcast/hazelcast/commit/e459ae4218d0ec655ccc276f0eb19b76c92282bb", "message": "#17954 Added javadoc for setAllowOverrideDefaultSerializers", "committedDate": "2020-12-28T18:58:49Z", "type": "commit"}, {"oid": "1f85c4659fd5730632600020760912b96ecd58f5", "url": "https://github.com/hazelcast/hazelcast/commit/1f85c4659fd5730632600020760912b96ecd58f5", "message": "#17954 Added missing final", "committedDate": "2020-12-28T18:59:11Z", "type": "commit"}, {"oid": "1a9394c0cd7a79f703b6a4e72f9d9870b5e5b262", "url": "https://github.com/hazelcast/hazelcast/commit/1a9394c0cd7a79f703b6a4e72f9d9870b5e5b262", "message": "#17954 Removed unused import", "committedDate": "2020-12-28T19:00:54Z", "type": "commit"}, {"oid": "f9e80594bae3b898bf4a77f0969d2534b69f139e", "url": "https://github.com/hazelcast/hazelcast/commit/f9e80594bae3b898bf4a77f0969d2534b69f139e", "message": "#17954 Improved exception message", "committedDate": "2020-12-28T19:07:23Z", "type": "commit"}, {"oid": "f1bedf79d290a60b568c782f33ed382c656a4a17", "url": "https://github.com/hazelcast/hazelcast/commit/f1bedf79d290a60b568c782f33ed382c656a4a17", "message": "#17954 Fixed equals and hashCode", "committedDate": "2020-12-28T19:09:01Z", "type": "commit"}, {"oid": "1d3e9fb3a9b4a02837cc4f900d76bb44bb112ab4", "url": "https://github.com/hazelcast/hazelcast/commit/1d3e9fb3a9b4a02837cc4f900d76bb44bb112ab4", "message": "#17954 Added allowOverrideDefaultSerializers to toString", "committedDate": "2020-12-28T19:10:10Z", "type": "commit"}, {"oid": "332464e262c0d41a75d4b90822356c693ba02cbd", "url": "https://github.com/hazelcast/hazelcast/commit/332464e262c0d41a75d4b90822356c693ba02cbd", "message": "#17954 Use hazelcast-spring-4.2.xsd", "committedDate": "2020-12-28T19:26:18Z", "type": "commit"}, {"oid": "968f79c27df798136e14a584c52e1dff65a402f4", "url": "https://github.com/hazelcast/hazelcast/commit/968f79c27df798136e14a584c52e1dff65a402f4", "message": "#17954 Covered client context configuration for allowOverrideDefaultSerializers", "committedDate": "2020-12-28T19:27:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDE5NjIzMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560196231", "bodyText": "Minor: Could be replaced with\n@return {@code true} if default serializers may be overridden by custom serializers\n\nto be more consistent with the name of the method", "author": "mdumandag", "createdAt": "2021-01-19T14:02:05Z", "path": "hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java", "diffHunk": "@@ -454,6 +455,46 @@ public SerializationConfig setAllowUnsafe(boolean allowUnsafe) {\n         return this;\n     }\n \n+    /**\n+     * @return true if embedded serializers may be overridden by custom serializers", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ac6113a0fa5a404fce3d317430522865ac7a02ef", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java b/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\nindex 4e28c0bdb9..fec2b33b60 100644\n--- a/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\n+++ b/hazelcast/src/main/java/com/hazelcast/config/SerializationConfig.java\n\n@@ -456,7 +456,7 @@ public class SerializationConfig {\n     }\n \n     /**\n-     * @return true if embedded serializers may be overridden by custom serializers\n+     * @return {@code true} if default serializers may be overridden by custom serializers\n      *\n      * @since 4.2\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDIwODYxNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560208614", "bodyText": "Can be final", "author": "mdumandag", "createdAt": "2021-01-19T14:19:59Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -90,6 +90,7 @@\n     private volatile boolean active = true;\n     private final byte version;\n     private final ILogger logger = Logger.getLogger(InternalSerializationService.class);\n+    private boolean allowOverrideDefaultSerializers;", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTA1ODQ2MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r561058461", "bodyText": "Final revelaed small bug in Second constructor :)", "author": "sgflt", "createdAt": "2021-01-20T15:34:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDIwODYxNA=="}], "type": "inlineReview", "revised_code": {"commit": "e09e1de250b20d67f09074d6e7591cf630e33001", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\nindex e7bf89461b..86e59c8a6a 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n\n@@ -90,7 +90,7 @@ public abstract class AbstractSerializationService implements InternalSerializat\n     private volatile boolean active = true;\n     private final byte version;\n     private final ILogger logger = Logger.getLogger(InternalSerializationService.class);\n-    private boolean allowOverrideDefaultSerializers;\n+    private final boolean allowOverrideDefaultSerializers;\n \n     AbstractSerializationService(Builder<?> builder) {\n         this.inputOutputFactory = builder.inputOutputFactory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDIxMTI5Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560211293", "bodyText": "We can be more specific here and mention about the setAllowOverrideDefaultSerializers method", "author": "mdumandag", "createdAt": "2021-01-19T14:23:36Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -425,8 +427,11 @@ protected final boolean safeRegister(final Class type, final Serializer serializ\n     }\n \n     protected final boolean safeRegister(final Class type, final SerializerAdapter serializer) {\n-        if (constantTypesMap.containsKey(type)) {\n-            throw new IllegalArgumentException(\"[\" + type + \"] serializer cannot be overridden\");\n+        if (constantTypesMap.containsKey(type) && !allowOverrideDefaultSerializers) {\n+            throw new IllegalArgumentException(\n+                \"[\" + type + \"] serializer cannot be overridden.\"\n+                + \" See documentation of hazelcast serialization configuration.\"", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3af8f711e52873dc59f8ab6199c16483ff92d3bd", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\nindex e7bf89461b..ad5030af6d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java\n\n@@ -430,7 +431,8 @@ public abstract class AbstractSerializationService implements InternalSerializat\n         if (constantTypesMap.containsKey(type) && !allowOverrideDefaultSerializers) {\n             throw new IllegalArgumentException(\n                 \"[\" + type + \"] serializer cannot be overridden.\"\n-                + \" See documentation of hazelcast serialization configuration.\"\n+                + \" See documentation of Hazelcast serialization configuration \" +\n+                  \" or setAllowOverrideDefaultSerializers method in SerializationConfig.\"\n               );\n         }\n         SerializerAdapter current = typeMap.putIfAbsent(type, serializer);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDIzMzQyOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560233429", "bodyText": "We should also add this to the copy constructor below", "author": "mdumandag", "createdAt": "2021-01-19T14:51:49Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/AbstractSerializationService.java", "diffHunk": "@@ -102,6 +103,7 @@\n         this.bufferPoolThreadLocal = new BufferPoolThreadLocal(this, builder.bufferPoolFactory,\n                 builder.notActiveExceptionSupplier);\n         this.nullSerializerAdapter = createSerializerAdapter(new ConstantSerializers.NullSerializer());\n+        this.allowOverrideDefaultSerializers = builder.allowOverrideDefaultSerializers;", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI2NTgwNQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560265805", "bodyText": "Minor: Can you reformat this file with 4-spaces per tab instead of 2?", "author": "mdumandag", "createdAt": "2021-01-19T15:31:55Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45cdae862e6e03343abbad5d96f99a381ca95daf", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java b/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\nindex 8abc6db855..a2f141d70a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\n\n@@ -23,7 +23,8 @@ import com.hazelcast.internal.serialization.SerializationService;\n import com.hazelcast.nio.ObjectDataInput;\n import com.hazelcast.nio.ObjectDataOutput;\n import com.hazelcast.nio.serialization.StreamSerializer;\n-import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.ParallelJVMTest;\n import com.hazelcast.test.annotation.QuickTest;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI2ODcxNg==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560268716", "bodyText": "Not a big deal for this test suite but there is no need to run these serially. You can replace these lines with\n@RunWith(HazelcastParallelClassRunner.class)\n@Category({QuickTest.class, ParallelJVMTest.class})", "author": "mdumandag", "createdAt": "2021-01-19T15:35:46Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.internal.serialization.impl;\n+\n+import com.hazelcast.config.SerializationConfig;\n+import com.hazelcast.config.SerializerConfig;\n+import com.hazelcast.internal.serialization.Data;\n+import com.hazelcast.internal.serialization.SerializationService;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.StreamSerializer;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.annotation.QuickTest;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+\n+@RunWith(HazelcastSerialClassRunner.class)\n+@Category(QuickTest.class)", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "45cdae862e6e03343abbad5d96f99a381ca95daf", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java b/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\nindex 8abc6db855..a2f141d70a 100644\n--- a/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/internal/serialization/impl/CustomSerializationOverrideDefaultTest.java\n\n@@ -23,7 +23,8 @@ import com.hazelcast.internal.serialization.SerializationService;\n import com.hazelcast.nio.ObjectDataInput;\n import com.hazelcast.nio.ObjectDataOutput;\n import com.hazelcast.nio.serialization.StreamSerializer;\n-import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.HazelcastParallelClassRunner;\n+import com.hazelcast.test.annotation.ParallelJVMTest;\n import com.hazelcast.test.annotation.QuickTest;\n import org.junit.Test;\n import org.junit.experimental.categories.Category;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI3MjE2Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560272167", "bodyText": "I feel like this method is unnecessary. We will be able to set this via setConfig. If I am not mistaken, we are not using this anywhere, right?\n@sancar What do you think about it?", "author": "mdumandag", "createdAt": "2021-01-19T15:40:15Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/SerializationServiceBuilder.java", "diffHunk": "@@ -59,6 +59,8 @@\n \n     SerializationServiceBuilder setAllowUnsafe(boolean allowUnsafe);\n \n+    SerializationServiceBuilder setAllowOverrideDefaultSerializers(boolean allowOverrideDefaultSerializers);", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDcxMjUxOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560712519", "bodyText": "Yes, seems it is not needed. It is a leftover from the first commit I assume when we had property based configuration as well.\n@sgflt Can we clean this up and its implementation please?", "author": "sancar", "createdAt": "2021-01-20T06:43:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI3MjE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e190195f319ed06151bcd1662954a818382bed5b", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/SerializationServiceBuilder.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/SerializationServiceBuilder.java\nindex 3c1fe116b9..5baff1651c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/SerializationServiceBuilder.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/SerializationServiceBuilder.java\n\n@@ -59,8 +59,6 @@ public interface SerializationServiceBuilder {\n \n     SerializationServiceBuilder setAllowUnsafe(boolean allowUnsafe);\n \n-    SerializationServiceBuilder setAllowOverrideDefaultSerializers(boolean allowOverrideDefaultSerializers);\n-\n     SerializationServiceBuilder setPartitioningStrategy(PartitioningStrategy partitionStrategy);\n \n     SerializationServiceBuilder setNotActiveExceptionSupplier(Supplier<RuntimeException> notActiveExceptionSupplier);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI3MjYyOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17958#discussion_r560272629", "bodyText": "If we decide to remove this from the interface, we should remove this implementation too", "author": "mdumandag", "createdAt": "2021-01-19T15:40:52Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/DefaultSerializationServiceBuilder.java", "diffHunk": "@@ -202,6 +205,12 @@ public SerializationServiceBuilder setAllowUnsafe(boolean allowUnsafe) {\n         return this;\n     }\n \n+    @Override\n+    public SerializationServiceBuilder setAllowOverrideDefaultSerializers(final boolean allowOverrideDefaultSerializers) {", "originalCommit": "968f79c27df798136e14a584c52e1dff65a402f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e190195f319ed06151bcd1662954a818382bed5b", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/DefaultSerializationServiceBuilder.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/DefaultSerializationServiceBuilder.java\nindex 1c658ea801..7355eb3c23 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/DefaultSerializationServiceBuilder.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/DefaultSerializationServiceBuilder.java\n\n@@ -205,12 +205,6 @@ public class DefaultSerializationServiceBuilder implements SerializationServiceB\n         return this;\n     }\n \n-    @Override\n-    public SerializationServiceBuilder setAllowOverrideDefaultSerializers(final boolean allowOverrideDefaultSerializers) {\n-        this.allowOverrideDefaultSerializers = allowOverrideDefaultSerializers;\n-        return this;\n-    }\n-\n     @Override\n     public SerializationServiceBuilder setPartitioningStrategy(PartitioningStrategy partitionStrategy) {\n         this.partitioningStrategy = partitionStrategy;\n"}}, {"oid": "ac6113a0fa5a404fce3d317430522865ac7a02ef", "url": "https://github.com/hazelcast/hazelcast/commit/ac6113a0fa5a404fce3d317430522865ac7a02ef", "message": "#17954 Improved documentation and javadocs", "committedDate": "2021-01-20T15:44:01Z", "type": "commit"}, {"oid": "e09e1de250b20d67f09074d6e7591cf630e33001", "url": "https://github.com/hazelcast/hazelcast/commit/e09e1de250b20d67f09074d6e7591cf630e33001", "message": "#17954 Added final\n\n- revealed bug in copy constructor", "committedDate": "2021-01-20T15:44:44Z", "type": "commit"}, {"oid": "3af8f711e52873dc59f8ab6199c16483ff92d3bd", "url": "https://github.com/hazelcast/hazelcast/commit/3af8f711e52873dc59f8ab6199c16483ff92d3bd", "message": "#17954 Improved exception message", "committedDate": "2021-01-20T15:46:15Z", "type": "commit"}, {"oid": "45cdae862e6e03343abbad5d96f99a381ca95daf", "url": "https://github.com/hazelcast/hazelcast/commit/45cdae862e6e03343abbad5d96f99a381ca95daf", "message": "#17954 Fixed formatting\n\n- also changed test category to parallel", "committedDate": "2021-01-20T15:47:12Z", "type": "commit"}, {"oid": "e190195f319ed06151bcd1662954a818382bed5b", "url": "https://github.com/hazelcast/hazelcast/commit/e190195f319ed06151bcd1662954a818382bed5b", "message": "#17954 Deleted unused API and implementation", "committedDate": "2021-01-20T15:47:34Z", "type": "commit"}, {"oid": "d0ba83528247a514b34b7f6871a35840b490a95f", "url": "https://github.com/hazelcast/hazelcast/commit/d0ba83528247a514b34b7f6871a35840b490a95f", "message": "#17954 Updated ConfigCompatibilityChecker to test isAllowOverrideDefaultSerializers", "committedDate": "2021-01-20T15:52:46Z", "type": "commit"}, {"oid": "097aedfe3d7d9dc6a4266a36e23d8379948facfa", "url": "https://github.com/hazelcast/hazelcast/commit/097aedfe3d7d9dc6a4266a36e23d8379948facfa", "message": "#17954 Added allow-override-default-serializers to hazelcast-fullconfig-without-network.{xml,yaml}", "committedDate": "2021-01-20T15:59:06Z", "type": "commit"}, {"oid": "4ecd2b5ae6cf167a96300c6e1cf77fdab3bb2903", "url": "https://github.com/hazelcast/hazelcast/commit/4ecd2b5ae6cf167a96300c6e1cf77fdab3bb2903", "message": "#17954 Improved documentation in hazelcast-full-example.yaml", "committedDate": "2021-01-21T15:11:41Z", "type": "commit"}, {"oid": "9bde46126b5abd148a5e4dadecf5c79d3b73b078", "url": "https://github.com/hazelcast/hazelcast/commit/9bde46126b5abd148a5e4dadecf5c79d3b73b078", "message": "#17954 Fixed code style", "committedDate": "2021-01-21T15:13:07Z", "type": "commit"}, {"oid": "3a1f1f04a56d0300d60ed0e4f610410aeca535b2", "url": "https://github.com/hazelcast/hazelcast/commit/3a1f1f04a56d0300d60ed0e4f610410aeca535b2", "message": "#17954 Improved documentation in hazelcast-full-example.xml", "committedDate": "2021-01-21T15:26:27Z", "type": "commit"}, {"oid": "1d3196f486fd0ca1e89c25ebe2ab97253d29c3d8", "url": "https://github.com/hazelcast/hazelcast/commit/1d3196f486fd0ca1e89c25ebe2ab97253d29c3d8", "message": "#17954 Fixed consistency of documentation in hazelcast-config-4.2.xsd", "committedDate": "2021-01-21T15:29:36Z", "type": "commit"}]}