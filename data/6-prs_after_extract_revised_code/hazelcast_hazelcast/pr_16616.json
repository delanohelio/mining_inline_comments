{"pr_number": 16616, "pr_title": "[BACKPORT] Allow blocking Raft invocations to op-timeout after wait timeout", "pr_createdAt": "2020-02-05T15:21:12Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16616", "timeline": [{"oid": "f21af4a9f310c15c6b1c6f071d1a06648ce2f672", "url": "https://github.com/hazelcast/hazelcast/commit/f21af4a9f310c15c6b1c6f071d1a06648ce2f672", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This cloud lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-05T16:18:47Z", "type": "forcePushed"}, {"oid": "736973afc4c72beb4d7fad077cf790b3b87d7057", "url": "https://github.com/hazelcast/hazelcast/commit/736973afc4c72beb4d7fad077cf790b3b87d7057", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This cloud lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-05T18:18:05Z", "type": "forcePushed"}, {"oid": "98700760a91f09fabb5930975541e0c91c76dfe1", "url": "https://github.com/hazelcast/hazelcast/commit/98700760a91f09fabb5930975541e0c91c76dfe1", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This cloud lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-05T21:57:09Z", "type": "forcePushed"}, {"oid": "3fa7f3a65856d639f5e9fc9bb37db07ec5f6ff6c", "url": "https://github.com/hazelcast/hazelcast/commit/3fa7f3a65856d639f5e9fc9bb37db07ec5f6ff6c", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This cloud lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-06T08:21:55Z", "type": "forcePushed"}, {"oid": "cef7aa39981b8c2b3db0f20759ce94818c601718", "url": "https://github.com/hazelcast/hazelcast/commit/cef7aa39981b8c2b3db0f20759ce94818c601718", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This cloud lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-06T09:25:33Z", "type": "forcePushed"}, {"oid": "08987d3351e1ea8a9d3cec4c1e1b6762e6f9dcad", "url": "https://github.com/hazelcast/hazelcast/commit/08987d3351e1ea8a9d3cec4c1e1b6762e6f9dcad", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This could lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-06T15:01:29Z", "type": "commit"}, {"oid": "08987d3351e1ea8a9d3cec4c1e1b6762e6f9dcad", "url": "https://github.com/hazelcast/hazelcast/commit/08987d3351e1ea8a9d3cec4c1e1b6762e6f9dcad", "message": "Allow blocking Raft invocations to op-timeout after wait timeout\n\nIf the wait key of a blocking call times out, it is still reported\nas a live operation. This could lead to hang the caller side when\nthe majority is lost because the Raft invocation does not fail with\noperation timeout.\n\nTo prevent this problem, we don't report a wait key as a live operation\nif it is not expired on the CP group after its wait timeout occurs.", "committedDate": "2020-02-06T15:01:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg4ODY2MA==", "url": "https://github.com/hazelcast/hazelcast/pull/16616#discussion_r375888660", "bodyText": "typo: cloud -> could?", "author": "petrpleshachkov", "createdAt": "2020-02-06T15:07:11Z", "path": "hazelcast/src/main/java/com/hazelcast/cp/internal/datastructures/spi/blocking/ResourceRegistry.java", "diffHunk": "@@ -57,11 +57,31 @@\n  * @param <R> concrete type of the resource\n  */\n public abstract class ResourceRegistry<W extends WaitKey, R extends BlockingResource<W>>\n-        implements LiveOperationsTracker, DataSerializable {\n+        implements DataSerializable {\n+\n+    // If the wait key of a blocking call times out, it is still reported\n+    // as a live operation. This cloud lead to hang the caller side when", "originalCommit": "08987d3351e1ea8a9d3cec4c1e1b6762e6f9dcad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}