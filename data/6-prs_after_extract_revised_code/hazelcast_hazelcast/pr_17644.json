{"pr_number": 17644, "pr_title": "Fixed a data loss issue on lite member promotion", "pr_createdAt": "2020-09-30T09:23:15Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17644", "timeline": [{"oid": "3362c711db0de10598187c347162ac59cb779705", "url": "https://github.com/hazelcast/hazelcast/commit/3362c711db0de10598187c347162ac59cb779705", "message": "Fixed a data loss issue on lite member promotion\n\nNotify cluster members on lite member promotion to update\nmemberGroupSize. Otherwise, a data member might be not aware of other\npromoted data members, and it may cause backup operations\nnot being issued to other data members.\n\nCloses https://github.com/hazelcast/hazelcast/issues/17621", "committedDate": "2020-09-30T09:16:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODIxOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r497378219", "bodyText": "Shouldn't this be out of else block? What if this is on local member?", "author": "mdogan", "createdAt": "2020-09-30T09:41:06Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -367,6 +367,7 @@ private MemberImpl createNewMemberImplIfChanged(MemberInfo newMemberInfo, Member\n                 member = clusterService.promoteAndGetLocalMember();\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n+                node.partitionService.memberAdded(member);", "originalCommit": "3362c711db0de10598187c347162ac59cb779705", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4MjYwOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r497382608", "bodyText": "On the local member the  node.partitionService.memberAdded(member); is doing update only when the node is not local. For local case, it issues a special task only when the node is a master. But the master is notified about promotion without this change. This is why I decided that it is enough to put it in the else.", "author": "petrpleshachkov", "createdAt": "2020-09-30T09:48:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODIxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4MzQ0Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r497383442", "bodyText": "Also, the problem is when the member is not aware of other  members being promoted. That case is covered in the else branch", "author": "petrpleshachkov", "createdAt": "2020-09-30T09:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODIxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQwNzQzMg==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r497407432", "bodyText": "I think issue is a non-master member is not aware of any member being promoted, including itself. So maybe we should modify node.partitionService.memberAdded(member) to update `memberGroupSize even with local member.\nSee this modified test:\n    @org.junit.Test\n    public void lite_member_promotion_data_loss() throws InterruptedException {\n        int entryCount = 1000;\n\n        TestHazelcastInstanceFactory factory = new TestHazelcastInstanceFactory();\n        Config config = new Config().setLiteMember(true);\n\n        // start first hazelcast instance as a lite member\n        HazelcastInstance firstHazelcastInstance = factory.newHazelcastInstance(config);\n\n        // start second hazelcast instance as a lite member\n        HazelcastInstance secondHazelcastInstance = factory.newHazelcastInstance(config);\n\n        // promote all instances to data members\n        firstHazelcastInstance.getCluster().promoteLocalLiteMember();\n        secondHazelcastInstance.getCluster().promoteLocalLiteMember();\n\n        // check if cluster is in a good shape\n        assertTrueEventually(() -> assertTrue(firstHazelcastInstance.getPartitionService().isClusterSafe()));\n\n        // insert some dummy data into the testing map\n        String mapName = randomMapName();\n        IMap<String, String> testMap = firstHazelcastInstance.getMap(mapName);\n        for (int i = 0; i < entryCount; ++i) {\n            testMap.put(\"key\" + i, \"value\" + i);\n        }\n\n        // check all data is correctly inserted\n        assertEquals(entryCount, testMap.size());\n\n        // kill second instance\n        secondHazelcastInstance.getLifecycleService().terminate();\n\n        // backup count for the map is set to 1\n        // even with 1 node down, no data loss is expected\n        assertTrueEventually(() -> assertEquals(entryCount, firstHazelcastInstance.getMap(mapName).size()));\n    }", "author": "mdogan", "createdAt": "2020-09-30T10:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM3ODIxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "336f25081a7becba81d896423a6a950ddc46daeb", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\nindex d42d8f3e672..cba9f4fc96d 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n\n@@ -367,8 +375,8 @@ public class MembershipManager {\n                 member = clusterService.promoteAndGetLocalMember();\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n-                node.partitionService.memberAdded(member);\n             }\n+            node.partitionService.memberAdded(member);\n         } else if (member.getMemberListJoinVersion() != newMemberInfo.getMemberListJoinVersion()) {\n             if (member.getMemberListJoinVersion() != NA_MEMBER_LIST_JOIN_VERSION) {\n                 if (logger.isFineEnabled()) {\n"}}, {"oid": "336f25081a7becba81d896423a6a950ddc46daeb", "url": "https://github.com/hazelcast/hazelcast/commit/336f25081a7becba81d896423a6a950ddc46daeb", "message": "Update memberGroupSize on every lite membership change", "committedDate": "2020-10-05T10:53:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUxMzg1Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499513852", "bodyText": "Not needed anymore?", "author": "mdogan", "createdAt": "2020-10-05T10:59:41Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -368,6 +376,7 @@ private MemberImpl createNewMemberImplIfChanged(MemberInfo newMemberInfo, Member\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n             }\n+            node.partitionService.memberAdded(member);", "originalCommit": "336f25081a7becba81d896423a6a950ddc46daeb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0509105f07b4a645459cb82b5156481ad884604", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\nindex cba9f4fc96d..8bfbbdc593c 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n\n@@ -376,7 +376,6 @@ public class MembershipManager {\n             } else {\n                 member = createMember(newMemberInfo, member.getAttributes());\n             }\n-            node.partitionService.memberAdded(member);\n         } else if (member.getMemberListJoinVersion() != newMemberInfo.getMemberListJoinVersion()) {\n             if (member.getMemberListJoinVersion() != NA_MEMBER_LIST_JOIN_VERSION) {\n                 if (logger.isFineEnabled()) {\n"}}, {"oid": "a0509105f07b4a645459cb82b5156481ad884604", "url": "https://github.com/hazelcast/hazelcast/commit/a0509105f07b4a645459cb82b5156481ad884604", "message": "Removed unnecessary code", "committedDate": "2020-10-05T11:01:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMTEwOA==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499731108", "bodyText": "same here.", "author": "ahmetmircik", "createdAt": "2020-10-05T16:39:25Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "diffHunk": "@@ -323,6 +326,86 @@ public void promotion_shouldFail_whenMasterIsSuspected_duringPromotion() throws\n         }\n     }\n \n+    @Test\n+    public void lite_member_promotion_data_loss() throws InterruptedException {\n+        int entryCount = 1000;\n+\n+        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory();\n+        Config config = new Config().setLiteMember(true);\n+\n+        // start first hazelcast instance as a lite member\n+        HazelcastInstance firstHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // start second and third hazelcast instances as a lite member\n+        HazelcastInstance secondHazelcastInstance = factory.newHazelcastInstance(config);\n+        HazelcastInstance thirdHazelcastInstance = factory.newHazelcastInstance(config);\n+\n+        // promote all instances to data members\n+        firstHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        secondHazelcastInstance.getCluster().promoteLocalLiteMember();\n+        thirdHazelcastInstance.getCluster().promoteLocalLiteMember();\n+\n+        // check if cluster is in a good shape\n+        assertTrueEventually(() -> assertTrue(firstHazelcastInstance.getPartitionService().isClusterSafe()));\n+\n+        // insert some dummy data into the testing map\n+        String mapName = randomMapName();\n+        IMap<String, String> testMap = firstHazelcastInstance.getMap(mapName);\n+        for (int i = 0; i < entryCount; ++i) {\n+            testMap.put(\"key\" + i, \"value\" + i);\n+        }\n+\n+        // check all data is correctly inserted\n+        assertEquals(entryCount, testMap.size());\n+\n+        // kill second instance\n+        secondHazelcastInstance.getLifecycleService().terminate();\n+\n+        // backup count for the map is set to 1\n+        // even with 1 node down, no data loss is expected\n+        assertTrueEventually(() -> assertEquals(entryCount, firstHazelcastInstance.getMap(mapName).size()));\n+        assertTrueEventually(() -> assertEquals(entryCount, thirdHazelcastInstance.getMap(mapName).size()));\n+    }\n+\n+    @Test\n+    public void lite_member_promotion_data_loss2() throws InterruptedException {", "originalCommit": "a0509105f07b4a645459cb82b5156481ad884604", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ac4040c70f840bae22175794e658ce2993fa203", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java b/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\nindex b1dda34d83d..643bd19a206 100644\n--- a/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\n\n@@ -327,7 +327,7 @@ public class PromoteLiteMemberTest extends HazelcastTestSupport {\n     }\n \n     @Test\n-    public void lite_member_promotion_data_loss() throws InterruptedException {\n+    public void test_lite_member_promotion_causes_no_data_loss_on_three_members() throws InterruptedException {\n         int entryCount = 1000;\n \n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMTEyNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499731124", "bodyText": "can we give a better name to test? Seeing the state tested against and expected behavior in test method name would be helpful for the future readers.", "author": "ahmetmircik", "createdAt": "2020-10-05T16:39:27Z", "path": "hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java", "diffHunk": "@@ -323,6 +326,86 @@ public void promotion_shouldFail_whenMasterIsSuspected_duringPromotion() throws\n         }\n     }\n \n+    @Test\n+    public void lite_member_promotion_data_loss() throws InterruptedException {", "originalCommit": "a0509105f07b4a645459cb82b5156481ad884604", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ac4040c70f840bae22175794e658ce2993fa203", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java b/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\nindex b1dda34d83d..643bd19a206 100644\n--- a/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/internal/cluster/impl/PromoteLiteMemberTest.java\n\n@@ -327,7 +327,7 @@ public class PromoteLiteMemberTest extends HazelcastTestSupport {\n     }\n \n     @Test\n-    public void lite_member_promotion_data_loss() throws InterruptedException {\n+    public void test_lite_member_promotion_causes_no_data_loss_on_three_members() throws InterruptedException {\n         int entryCount = 1000;\n \n         TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NDQ5Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499754497", "bodyText": "it is hard to to follow similar named methods maybe we can make updateMemberGroupsSize() method public and can call it here: node.partitionService.getPartitionStateManager().updateMemberGroupsSize()", "author": "ahmetmircik", "createdAt": "2020-10-05T17:20:44Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -342,6 +346,10 @@ void updateMembers(MembersView membersView) {\n \n         setMembers(MemberMap.createNew(membersView.getVersion(), members));\n \n+        if (updatedLiteMember) {\n+            updateMembersGroupSize();", "originalCommit": "a0509105f07b4a645459cb82b5156481ad884604", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ac4040c70f840bae22175794e658ce2993fa203", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\nindex 8bfbbdc593c..8036f4de236 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n\n@@ -347,7 +349,7 @@ public class MembershipManager {\n         setMembers(MemberMap.createNew(membersView.getVersion(), members));\n \n         if (updatedLiteMember) {\n-            updateMembersGroupSize();\n+            node.partitionService.updateMemberGroupSize();\n         }\n \n         for (MemberImpl member : removedMembers) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NjMwOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17644#discussion_r499756309", "bodyText": "can you please add a short comment to the code to explain the meaning of updatedLiteMember?", "author": "ahmetmircik", "createdAt": "2020-10-05T17:24:01Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java", "diffHunk": "@@ -305,11 +305,15 @@ void updateMembers(MembersView membersView) {\n \n         MemberImpl[] members = new MemberImpl[membersView.size()];\n         int memberIndex = 0;\n+        boolean updatedLiteMember = false;\n         for (MemberInfo memberInfo : membersView.getMembers()) {\n             Address address = memberInfo.getAddress();\n             MemberImpl member = currentMemberMap.getMember(address);\n \n             if (member != null && member.getUuid().equals(memberInfo.getUuid())) {\n+                if (member.isLiteMember()) {\n+                    updatedLiteMember = true;", "originalCommit": "a0509105f07b4a645459cb82b5156481ad884604", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ac4040c70f840bae22175794e658ce2993fa203", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\nindex 8bfbbdc593c..8036f4de236 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/cluster/impl/MembershipManager.java\n\n@@ -305,6 +305,8 @@ public class MembershipManager {\n \n         MemberImpl[] members = new MemberImpl[membersView.size()];\n         int memberIndex = 0;\n+        // Indicates whether we received a notification on lite member membership change\n+        // (e.g. its promotion to a data member)\n         boolean updatedLiteMember = false;\n         for (MemberInfo memberInfo : membersView.getMembers()) {\n             Address address = memberInfo.getAddress();\n"}}, {"oid": "7ac4040c70f840bae22175794e658ce2993fa203", "url": "https://github.com/hazelcast/hazelcast/commit/7ac4040c70f840bae22175794e658ce2993fa203", "message": "Addressed reviewer's comment", "committedDate": "2020-10-08T10:46:45Z", "type": "commit"}]}