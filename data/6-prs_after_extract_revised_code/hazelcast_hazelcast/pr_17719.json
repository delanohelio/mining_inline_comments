{"pr_number": 17719, "pr_title": "SQL: Fix memory leak in the client handler", "pr_createdAt": "2020-10-13T17:07:57Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17719", "timeline": [{"oid": "dacf78740bdbd919c4dea7a6ec213f8abdf2e5e7", "url": "https://github.com/hazelcast/hazelcast/commit/dacf78740bdbd919c4dea7a6ec213f8abdf2e5e7", "message": "Done", "committedDate": "2020-10-13T17:00:53Z", "type": "commit"}, {"oid": "3de8236cedca2307622e501c2d6f0e6e056371c9", "url": "https://github.com/hazelcast/hazelcast/commit/3de8236cedca2307622e501c2d6f0e6e056371c9", "message": "Fix checkstyle", "committedDate": "2020-10-13T17:11:04Z", "type": "commit"}, {"oid": "97df53a25cdd72228e18136a1653a399214585a2", "url": "https://github.com/hazelcast/hazelcast/commit/97df53a25cdd72228e18136a1653a399214585a2", "message": "Fix HazelcastSqlException propagation.", "committedDate": "2020-10-14T08:23:28Z", "type": "commit"}, {"oid": "7d225bcd797543335e5e46ec8699ecf91a92e9e8", "url": "https://github.com/hazelcast/hazelcast/commit/7d225bcd797543335e5e46ec8699ecf91a92e9e8", "message": "checkstyle", "committedDate": "2020-10-14T08:28:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyNzc1MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r504727751", "bodyText": "Add Test to the name", "author": "viliam-durina", "createdAt": "2020-10-14T14:33:19Z", "path": "hazelcast-sql/src/test/java/com/hazelcast/sql/SqlClientCursorCleanup.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.hazelcast.sql;\n+\n+import com.hazelcast.client.config.ClientConfig;\n+import com.hazelcast.core.HazelcastInstance;\n+import com.hazelcast.map.IMap;\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.DataSerializable;\n+import com.hazelcast.sql.impl.SqlInternalService;\n+import com.hazelcast.sql.impl.SqlServiceImpl;\n+import com.hazelcast.sql.impl.SqlTestSupport;\n+import com.hazelcast.test.HazelcastSerialClassRunner;\n+import com.hazelcast.test.annotation.ParallelJVMTest;\n+import com.hazelcast.test.annotation.QuickTest;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+@SuppressWarnings(\"StatementWithEmptyBody\")\n+@RunWith(HazelcastSerialClassRunner.class)\n+@Category({QuickTest.class, ParallelJVMTest.class})\n+public class SqlClientCursorCleanup extends SqlTestSupport {", "originalCommit": "7d225bcd797543335e5e46ec8699ecf91a92e9e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxMjk4Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r505312983", "bodyText": "Fixed", "author": "devozerov", "createdAt": "2020-10-15T08:09:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyNzc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2d4a9db217e5b8dff8386c21d1c2e39911c057f1", "chunk": "diff --git a/hazelcast-sql/src/test/java/com/hazelcast/sql/SqlClientCursorCleanup.java b/hazelcast-sql/src/test/java/com/hazelcast/sql/misc/SqlClientCursorCleanupTest.java\nsimilarity index 94%\nrename from hazelcast-sql/src/test/java/com/hazelcast/sql/SqlClientCursorCleanup.java\nrename to hazelcast-sql/src/test/java/com/hazelcast/sql/misc/SqlClientCursorCleanupTest.java\nindex cf79aace65..824d204ce5 100644\n--- a/hazelcast-sql/src/test/java/com/hazelcast/sql/SqlClientCursorCleanup.java\n+++ b/hazelcast-sql/src/test/java/com/hazelcast/sql/misc/SqlClientCursorCleanupTest.java\n\n@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package com.hazelcast.sql;\n+package com.hazelcast.sql.misc;\n \n import com.hazelcast.client.config.ClientConfig;\n import com.hazelcast.core.HazelcastInstance;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMjE1MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r504732151", "bodyText": "The exception class is an important part of the exception. For example, NPE often has a null message.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        QueryException error = QueryException.error(e.getMessage(), e);\n          \n          \n            \n                        QueryException error = QueryException.error(e.toString(), e);", "author": "viliam-durina", "createdAt": "2020-10-14T14:38:31Z", "path": "hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java", "diffHunk": "@@ -90,14 +99,26 @@ private SqlPage fetchInternal(\n     ) {\n         ResultIterator<SqlRow> iterator = clientCursor.getIterator();\n \n-        List<List<Data>> page = new ArrayList<>(cursorBufferSize);\n-        boolean last = fetchPage(iterator, page, cursorBufferSize, serializationService, isFirstPage);\n+        try {\n+            List<List<Data>> page = new ArrayList<>(cursorBufferSize);\n+            boolean last = fetchPage(iterator, page, cursorBufferSize, serializationService, isFirstPage);\n \n-        if (last) {\n-            deleteClientCursor(clientCursor);\n-        }\n+            return new SqlPage(page, last);\n+        } catch (HazelcastSqlException e) {\n+            // We use public API to extract results from the cursor. The cursor may throw HazelcastSqlException only. When\n+            // it happens, the cursor is already closed with the error, so we just re-throw.\n+            throw e;\n+        } catch (Exception e) {\n+            // Any other exception indicates that something has happened outside of the internal query state. For example,\n+            // we may fail to serialize a specific column value to Data. We have to close the cursor in this case.\n+            AbstractSqlResult result = clientCursor.getSqlResult();\n+\n+            QueryException error = QueryException.error(e.getMessage(), e);", "originalCommit": "7d225bcd797543335e5e46ec8699ecf91a92e9e8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4MDE4Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17719#discussion_r505380186", "bodyText": "The exception class is available in the stack trace, there is not much need for duplicating it. Instead, I added a specific error message to this line of code, so that it is easier to identify where it happened on the client-side (where the stack trace is not available)", "author": "devozerov", "createdAt": "2020-10-15T09:09:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMjE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "bbe4e90b1277fda1d7b57d2e2ceac3345d963551", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java b/hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java\nindex 7757e0dc51..bcdd1e4225 100644\n--- a/hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java\n+++ b/hazelcast/src/main/java/com/hazelcast/sql/impl/state/QueryClientStateRegistry.java\n\n@@ -113,7 +113,7 @@ public class QueryClientStateRegistry {\n             // we may fail to serialize a specific column value to Data. We have to close the cursor in this case.\n             AbstractSqlResult result = clientCursor.getSqlResult();\n \n-            QueryException error = QueryException.error(e.getMessage(), e);\n+            QueryException error = QueryException.error(\"Failed to prepare the SQL result for the client: \" + e.getMessage(), e);\n \n             result.close(error);\n \n"}}, {"oid": "2d4a9db217e5b8dff8386c21d1c2e39911c057f1", "url": "https://github.com/hazelcast/hazelcast/commit/2d4a9db217e5b8dff8386c21d1c2e39911c057f1", "message": "Add \"Test\" to test name.", "committedDate": "2020-10-15T08:08:48Z", "type": "commit"}, {"oid": "bbe4e90b1277fda1d7b57d2e2ceac3345d963551", "url": "https://github.com/hazelcast/hazelcast/commit/bbe4e90b1277fda1d7b57d2e2ceac3345d963551", "message": "Change error message", "committedDate": "2020-10-15T09:07:27Z", "type": "commit"}]}