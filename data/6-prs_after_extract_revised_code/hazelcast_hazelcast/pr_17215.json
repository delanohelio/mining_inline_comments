{"pr_number": 17215, "pr_title": "Introduce auto-disposable tasks for ScheduledExecutor", "pr_createdAt": "2020-07-14T17:38:37Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17215", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY4NzU5Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r457687592", "bodyText": "I like what you did here, but unfortunately the NamedTask marker is public, meaning anyone can implement it directly without the use of our helper. In this case, the AbstractTaskDecorator inheritance expectation is not going to be valid.", "author": "tkountis", "createdAt": "2020-07-20T20:58:00Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java", "diffHunk": "@@ -382,12 +394,19 @@ private int getTaskOrKeyPartitionId(Runnable task, Object key) {\n     }\n \n     private String extractNameOrGenerateOne(Object command) {\n-        String name = null;\n-        if (command instanceof NamedTask) {\n-            name = ((NamedTask) command).getName();\n-        }\n+        String taskName = getNamedTaskName(command);\n+        return taskName != null ? taskName : UuidUtil.newUnsecureUuidString();\n+    }\n \n-        return name != null ? name : UuidUtil.newUnsecureUuidString();\n+    private String getNamedTaskName(Object command) {\n+        if (command instanceof AbstractTaskDecorator) {", "originalCommit": "502a4cfa5a4d0d225c7ebc26be680f4b47775e87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a6c5a326fe2c2d6eb6075edc5553a5897272363", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java b/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\nindex 57f22ea93e..c0573360f0 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\n\n@@ -400,12 +400,14 @@ public class ClientScheduledExecutorProxy\n \n     private String getNamedTaskName(Object command) {\n         if (command instanceof AbstractTaskDecorator) {\n-            AbstractTaskDecorator<?> decoratedTask = (AbstractTaskDecorator<?>) command;\n-            NamedTask namedTask = decoratedTask.undecorateTo(NamedTask.class);\n+            NamedTask namedTask = ((AbstractTaskDecorator<?>) command).undecorateTo(NamedTask.class);\n             if (namedTask != null) {\n                 return namedTask.getName();\n             }\n         }\n+        if (command instanceof NamedTask) {\n+            return ((NamedTask) command).getName();\n+        }\n         return null;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY4ODMwOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r457688309", "bodyText": "Same here.", "author": "tkountis", "createdAt": "2020-07-20T20:59:25Z", "path": "hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java", "diffHunk": "@@ -433,4 +452,11 @@ private String extractNameOrGenerateOne(Object command) {\n             throw rethrow(e);\n         }\n     }\n+\n+    private boolean isAutoDisposable(Object command) {\n+        if (command instanceof AbstractTaskDecorator) {", "originalCommit": "502a4cfa5a4d0d225c7ebc26be680f4b47775e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzcyMDA0MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r457720040", "bodyText": "I think in that case this is handled at line 460", "author": "peterjot", "createdAt": "2020-07-20T22:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY4ODMwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "4e082f70e50d17cf78879099e820c12506af4c93", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java b/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\nindex 57f22ea93e..d92f09dab1 100644\n--- a/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\n+++ b/hazelcast/src/main/java/com/hazelcast/client/impl/proxy/ClientScheduledExecutorProxy.java\n\n@@ -453,10 +447,8 @@ public class ClientScheduledExecutorProxy\n         }\n     }\n \n+\n     private boolean isAutoDisposable(Object command) {\n-        if (command instanceof AbstractTaskDecorator) {\n-            return ((AbstractTaskDecorator) command).isDecoratedWith(AutoDisposableTask.class);\n-        }\n-        return command instanceof AutoDisposableTask;\n+        return false;\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NDAzMA==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r457694030", "bodyText": "Same concerns as client proxy", "author": "tkountis", "createdAt": "2020-07-20T21:11:17Z", "path": "hazelcast/src/main/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceProxy.java", "diffHunk": "@@ -493,11 +503,10 @@ private String extractNameOrGenerateOne(Object command) {\n         return createFutureProxy(uuid, taskName);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     private <T> T initializeManagedContext(Object object) {\n         ManagedContext context = getNodeEngine().getSerializationService().getManagedContext();\n-        if (object instanceof NamedTaskDecorator) {\n-            ((NamedTaskDecorator) object).initializeContext(context);\n+        if (object instanceof AbstractTaskDecorator) {", "originalCommit": "502a4cfa5a4d0d225c7ebc26be680f4b47775e87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTA0NA==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r458249044", "bodyText": "It seems to me that an object implementing NamedTask is handled by the else block. As it worked before.", "author": "peterjot", "createdAt": "2020-07-21T16:58:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NDAzMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5NzEwNg==", "url": "https://github.com/hazelcast/hazelcast/pull/17215#discussion_r457697106", "bodyText": "Thread.sleep as you already mentioned is prone to cause flakiness. See assertTrueEventually which works with the maximum test waiting time.", "author": "tkountis", "createdAt": "2020-07-20T21:17:38Z", "path": "hazelcast/src/test/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceBasicTest.java", "diffHunk": "@@ -874,6 +904,49 @@ public void schedule_thenCancelAndGet() throws Exception {\n         first.get();\n     }\n \n+    @Test\n+    public void schedule_whenAutoDisposable_thenGet() throws Exception {\n+        HazelcastInstance[] instances = createClusterWithCount(2);\n+        IScheduledExecutorService executorService = getScheduledExecutor(instances, \"s\");\n+\n+        IScheduledFuture<Double> future = executorService.schedule(autoDisposable(new PlainCallableTask()), 1, SECONDS);\n+\n+        expected.expect(ExecutionException.class);\n+        expected.expectCause(isA(StaleTaskException.class));\n+        Thread.sleep(2000);", "originalCommit": "502a4cfa5a4d0d225c7ebc26be680f4b47775e87", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a6c5a326fe2c2d6eb6075edc5553a5897272363", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceBasicTest.java b/hazelcast/src/test/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceBasicTest.java\nindex 44b8165baa..aeafc07def 100644\n--- a/hazelcast/src/test/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceBasicTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/scheduledexecutor/impl/ScheduledExecutorServiceBasicTest.java\n\n@@ -911,10 +916,7 @@ public class ScheduledExecutorServiceBasicTest extends ScheduledExecutorServiceT\n \n         IScheduledFuture<Double> future = executorService.schedule(autoDisposable(new PlainCallableTask()), 1, SECONDS);\n \n-        expected.expect(ExecutionException.class);\n-        expected.expectCause(isA(StaleTaskException.class));\n-        Thread.sleep(2000);\n-        future.get();\n+        assertTaskHasBeenDestroyedEventually(future);\n     }\n \n \n"}}, {"oid": "7a6c5a326fe2c2d6eb6075edc5553a5897272363", "url": "https://github.com/hazelcast/hazelcast/commit/7a6c5a326fe2c2d6eb6075edc5553a5897272363", "message": "Remove flaky Thread.sleep from tests", "committedDate": "2020-07-22T23:15:58Z", "type": "forcePushed"}, {"oid": "4e082f70e50d17cf78879099e820c12506af4c93", "url": "https://github.com/hazelcast/hazelcast/commit/4e082f70e50d17cf78879099e820c12506af4c93", "message": "Add autoDisposable flag to TaskDefinition", "committedDate": "2020-07-23T22:04:01Z", "type": "commit"}, {"oid": "fd482204717ee9c5e4c539ecd3a6cbef2abbf20a", "url": "https://github.com/hazelcast/hazelcast/commit/fd482204717ee9c5e4c539ecd3a6cbef2abbf20a", "message": "Dispose the auto-disposable task on state-sync", "committedDate": "2020-07-23T22:04:02Z", "type": "commit"}, {"oid": "54db6741b158281a0243311022f3cbd9a19c04f6", "url": "https://github.com/hazelcast/hazelcast/commit/54db6741b158281a0243311022f3cbd9a19c04f6", "message": "Add AutoDisposableTask interface to check whether the task is auto-disposable", "committedDate": "2020-07-23T22:04:02Z", "type": "commit"}, {"oid": "7c7480bc3851d485051511a26085c25b6f3f9b4c", "url": "https://github.com/hazelcast/hazelcast/commit/7c7480bc3851d485051511a26085c25b6f3f9b4c", "message": "Regenerate protocol codecs", "committedDate": "2020-07-23T22:04:03Z", "type": "commit"}, {"oid": "20b116f7260ca5734bf3bf68a4a3dddbd67c793b", "url": "https://github.com/hazelcast/hazelcast/commit/20b116f7260ca5734bf3bf68a4a3dddbd67c793b", "message": "Handle task implementing NamedTask interface", "committedDate": "2020-07-23T22:04:03Z", "type": "commit"}, {"oid": "83d04646fb6e28f9b0c57825d0fc9dc07afd7736", "url": "https://github.com/hazelcast/hazelcast/commit/83d04646fb6e28f9b0c57825d0fc9dc07afd7736", "message": "Remove flaky Thread.sleep from tests", "committedDate": "2020-07-23T22:04:04Z", "type": "commit"}, {"oid": "cf17183680c7c7bff1e7a8bfae224b1ba06627d1", "url": "https://github.com/hazelcast/hazelcast/commit/cf17183680c7c7bff1e7a8bfae224b1ba06627d1", "message": "Test: getScheduled when a task implementing NamedTask", "committedDate": "2020-07-23T22:04:04Z", "type": "commit"}, {"oid": "cf17183680c7c7bff1e7a8bfae224b1ba06627d1", "url": "https://github.com/hazelcast/hazelcast/commit/cf17183680c7c7bff1e7a8bfae224b1ba06627d1", "message": "Test: getScheduled when a task implementing NamedTask", "committedDate": "2020-07-23T22:04:04Z", "type": "forcePushed"}, {"oid": "bf1e52d07053434c902aaeb6d30287d0b4a449c3", "url": "https://github.com/hazelcast/hazelcast/commit/bf1e52d07053434c902aaeb6d30287d0b4a449c3", "message": "Regenerate protocol", "committedDate": "2020-07-24T16:57:00Z", "type": "commit"}]}