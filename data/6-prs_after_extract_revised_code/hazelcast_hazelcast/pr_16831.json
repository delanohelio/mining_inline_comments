{"pr_number": 16831, "pr_title": "Fix class definitions registration with same class id", "pr_createdAt": "2020-03-31T13:57:23Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16831", "timeline": [{"oid": "781ca35b62d3fbca74cfaa9d9f5551d55e83f5f6", "url": "https://github.com/hazelcast/hazelcast/commit/781ca35b62d3fbca74cfaa9d9f5551d55e83f5f6", "message": "Fix class definitions registration with same class id\n\nWhen class definition is registered explicitly from serialization config\n, if user gives same class id in different factories, we could not\nhandle it correctly. This pr makes sure it works from now on.\n\nfixes https://github.com/hazelcast/hazelcast/issues/16820\n\n(cherry picked from commit 29b1fb3ad3f29e78757d472ab827bb0b222b39ad)", "committedDate": "2020-03-31T13:49:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3Mzg4Mw==", "url": "https://github.com/hazelcast/hazelcast/pull/16831#discussion_r400973883", "bodyText": "Shouldn't this be cd.getClassId() ?", "author": "mdumandag", "createdAt": "2020-03-31T14:47:40Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java", "diffHunk": "@@ -233,33 +233,43 @@ private void registerJavaTypeSerializers() {\n     }\n \n     public void registerClassDefinitions(Collection<ClassDefinition> classDefinitions, boolean checkClassDefErrors) {\n-        final Map<Integer, ClassDefinition> classDefMap = createHashMap(classDefinitions.size());\n+        Map<Integer, Map<Integer, ClassDefinition>> factoryMap = createHashMap(classDefinitions.size());\n         for (ClassDefinition cd : classDefinitions) {\n+            int factoryId = cd.getFactoryId();\n+            Map<Integer, ClassDefinition> classDefMap = factoryMap.computeIfAbsent(factoryId, k -> new HashMap<>());\n             if (classDefMap.containsKey(cd.getClassId())) {\n-                throw new HazelcastSerializationException(\"Duplicate registration found for class-id[\" + cd.getClassId() + \"]!\");\n+                throw new HazelcastSerializationException(\"Duplicate registration found for factory-id : \"\n+                        + factoryId + \", class-id \" + cd.getClassId());\n             }\n-            classDefMap.put(cd.getClassId(), cd);\n+            classDefMap.put(factoryId, cd);", "originalCommit": "781ca35b62d3fbca74cfaa9d9f5551d55e83f5f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ3OTg3Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/16831#discussion_r401479876", "bodyText": "Yes, you are right. Fixing it.", "author": "sancar", "createdAt": "2020-04-01T09:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3Mzg4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4046ac3a75391ef50ea5633cb1b31342ada6a413", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java\nindex 83ca8d5b9cc..17db8091789 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/serialization/impl/SerializationServiceV1.java\n\n@@ -237,11 +237,12 @@ public class SerializationServiceV1 extends AbstractSerializationService {\n         for (ClassDefinition cd : classDefinitions) {\n             int factoryId = cd.getFactoryId();\n             Map<Integer, ClassDefinition> classDefMap = factoryMap.computeIfAbsent(factoryId, k -> new HashMap<>());\n-            if (classDefMap.containsKey(cd.getClassId())) {\n+            int classId = cd.getClassId();\n+            if (classDefMap.containsKey(classId)) {\n                 throw new HazelcastSerializationException(\"Duplicate registration found for factory-id : \"\n-                        + factoryId + \", class-id \" + cd.getClassId());\n+                        + factoryId + \", class-id \" + classId);\n             }\n-            classDefMap.put(factoryId, cd);\n+            classDefMap.put(classId, cd);\n         }\n         for (ClassDefinition classDefinition : classDefinitions) {\n             registerClassDefinition(classDefinition, factoryMap, checkClassDefErrors);\n"}}, {"oid": "4046ac3a75391ef50ea5633cb1b31342ada6a413", "url": "https://github.com/hazelcast/hazelcast/commit/4046ac3a75391ef50ea5633cb1b31342ada6a413", "message": "fix after review", "committedDate": "2020-04-01T09:34:54Z", "type": "commit"}]}