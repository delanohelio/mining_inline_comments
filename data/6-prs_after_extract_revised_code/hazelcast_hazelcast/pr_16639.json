{"pr_number": 16639, "pr_title": "Compatibility test related fixes and improvements", "pr_createdAt": "2020-02-11T13:19:53Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16639", "timeline": [{"oid": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "url": "https://github.com/hazelcast/hazelcast/commit/d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "message": "Compatibility test related fixes and improvements\n\n- Cleaned up Versions constants for 4.x\n- Updated & improved HazelcastVersionLocator: removed\nlookup for client artifact, minor cleanups\n- Updated dynamically attached agent for final class\nmodifier removal\n- AnswerTest is removed for OS repository; it is\nmoved to EE repository, to be executed properly as a\ncompatibility test", "committedDate": "2020-02-11T13:10:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzNjQyMA==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377636420", "bodyText": "Previously used disableClassFormatChanges() was actually disallowing removal of final modifier, silently disregarding the transformer. We configure the agent with REDEFINE type strategy and NoOp initialization strategy; this allows for the redefinition of the type (instead of default REBASE strategy) without adding any methods (which result in modifying Serializable classes' serialVersionUid). For more details see ByteBuddy#rebase vs ByteBuddy#redefine.", "author": "vbekiaris", "createdAt": "2020-02-11T13:35:17Z", "path": "hazelcast/src/test/java/com/hazelcast/test/compatibility/CompatibilityTestUtils.java", "diffHunk": "@@ -32,25 +28,18 @@\n     // loaded with final modifier to allow subclass proxying.\n     public static void attachFinalRemovalAgent() {\n         Instrumentation instrumentation = ByteBuddyAgent.install();\n-        new AgentBuilder.Default()\n-                .disableClassFormatChanges()\n-                .type(new ElementMatcher<TypeDescription>() {\n-                    @Override\n-                    public boolean matches(TypeDescription target) {\n-                        return target.getName().startsWith(\"com.hazelcast\");\n-                    }\n-                })\n-                .transform(new AgentBuilder.Transformer() {\n-                    @Override\n-                    public DynamicType.Builder<?> transform(DynamicType.Builder<?> builder,\n-                                                            TypeDescription typeDescription,\n-                                                            ClassLoader classLoader, JavaModule module) {\n-                        int actualModifiers = typeDescription.getActualModifiers(false);\n-                        // unset final modifier\n-                        int nonFinalModifiers = actualModifiers & ~Opcodes.ACC_FINAL;\n-                        return builder.modifiers(nonFinalModifiers);\n-                    }\n-                })\n-                .installOn(instrumentation);\n+        new AgentBuilder.Default().with(AgentBuilder.TypeStrategy.Default.REDEFINE)\n+                                  .with(AgentBuilder.InitializationStrategy.NoOp.INSTANCE)", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5NjAzMg==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377696032", "bodyText": "+1 for the REDEFINE/REBASE background info, what about adding it as a code comment for posterity?", "author": "vojtechtoman", "createdAt": "2020-02-11T15:11:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzNjQyMA=="}], "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/compatibility/CompatibilityTestUtils.java b/hazelcast/src/test/java/com/hazelcast/test/compatibility/CompatibilityTestUtils.java\nindex ef2431b807a..c54fa3f0863 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/compatibility/CompatibilityTestUtils.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/compatibility/CompatibilityTestUtils.java\n\n@@ -24,8 +24,15 @@ import java.lang.instrument.Instrumentation;\n \n public final class CompatibilityTestUtils {\n \n-    // When running a compatibility test, all com.hazelcast.* classes are transformed so that none are\n-    // loaded with final modifier to allow subclass proxying.\n+    /**\n+     * When running a compatibility test, all com.hazelcast.* classes are transformed so that none are\n+     * loaded with final modifier to allow subclass proxying.\n+     * We configure the agent with REDEFINE type strategy and NoOp initialization strategy.\n+     * This allows for the redefinition of the type (instead of default REBASE strategy) without\n+     * adding any methods (which result in modifying Serializable classes' serialVersionUid). For\n+     * more details see {@link net.bytebuddy.ByteBuddy#rebase(Class)} vs\n+     * {@link net.bytebuddy.ByteBuddy#redefine(Class)}.\n+     */\n     public static void attachFinalRemovalAgent() {\n         Instrumentation instrumentation = ByteBuddyAgent.install();\n         new AgentBuilder.Default().with(AgentBuilder.TypeStrategy.Default.REDEFINE)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4ODIwMA==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377688200", "bodyText": "HAZELCAST_TESTS_JAR_INDEX?", "author": "vojtechtoman", "createdAt": "2020-02-11T14:59:30Z", "path": "hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java", "diffHunk": "@@ -45,19 +46,15 @@\n \n     @Test\n     public void testDownloadVersion() throws Exception {\n-        File[] files = HazelcastVersionLocator.locateVersion(\"3.6\", folder.getRoot(), true);\n+        File[] files = HazelcastVersionLocator.locateVersion(\"4.0\", folder.getRoot(), true);\n \n-        assertHash(files[0], \"89563f7dab02bd5f592082697c24d167\", \"OS member\");\n+        assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"66615c68c2708036a6030114a1b87f2b\", \"OS member tests\");\n+        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzcxOTA0Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377719047", "bodyText": "\ud83e\udd26\u200d\u2642 I thought I did that...", "author": "vbekiaris", "createdAt": "2020-02-11T15:44:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4ODIwMA=="}], "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\nindex dc50d213dc2..e8eedec67a9 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n\n@@ -50,11 +53,11 @@ public class HazelcastVersionLocatorTest {\n \n         assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n+        assertHash(files[HAZELCAST_TESTS_JAR_INDEX], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n \n-        assertHash(files[2], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n+        assertHash(files[HAZELCAST_EE_JAR_INDEX], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n \n-        assertHash(files[3], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n+        assertHash(files[HAZELCAST_EE_TESTS_JAR_INDEX], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n     }\n \n     private void assertHash(File file, String expectedHash, String label) throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4ODM2NA==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377688364", "bodyText": "HAZELCAST_EE_JAR_INDEX?", "author": "vojtechtoman", "createdAt": "2020-02-11T14:59:45Z", "path": "hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java", "diffHunk": "@@ -45,19 +46,15 @@\n \n     @Test\n     public void testDownloadVersion() throws Exception {\n-        File[] files = HazelcastVersionLocator.locateVersion(\"3.6\", folder.getRoot(), true);\n+        File[] files = HazelcastVersionLocator.locateVersion(\"4.0\", folder.getRoot(), true);\n \n-        assertHash(files[0], \"89563f7dab02bd5f592082697c24d167\", \"OS member\");\n+        assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"66615c68c2708036a6030114a1b87f2b\", \"OS member tests\");\n+        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n \n-        assertHash(files[2], \"fd6022e35908b42d24fe10a9c9fdaad5\", \"OS client\");\n+        assertHash(files[2], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\nindex dc50d213dc2..e8eedec67a9 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n\n@@ -50,11 +53,11 @@ public class HazelcastVersionLocatorTest {\n \n         assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n+        assertHash(files[HAZELCAST_TESTS_JAR_INDEX], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n \n-        assertHash(files[2], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n+        assertHash(files[HAZELCAST_EE_JAR_INDEX], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n \n-        assertHash(files[3], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n+        assertHash(files[HAZELCAST_EE_TESTS_JAR_INDEX], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n     }\n \n     private void assertHash(File file, String expectedHash, String label) throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY4ODUxMQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377688511", "bodyText": "HAZELCAST_EE_TESTS_JAR_INDEX?", "author": "vojtechtoman", "createdAt": "2020-02-11T15:00:00Z", "path": "hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java", "diffHunk": "@@ -45,19 +46,15 @@\n \n     @Test\n     public void testDownloadVersion() throws Exception {\n-        File[] files = HazelcastVersionLocator.locateVersion(\"3.6\", folder.getRoot(), true);\n+        File[] files = HazelcastVersionLocator.locateVersion(\"4.0\", folder.getRoot(), true);\n \n-        assertHash(files[0], \"89563f7dab02bd5f592082697c24d167\", \"OS member\");\n+        assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"66615c68c2708036a6030114a1b87f2b\", \"OS member tests\");\n+        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n \n-        assertHash(files[2], \"fd6022e35908b42d24fe10a9c9fdaad5\", \"OS client\");\n+        assertHash(files[2], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n \n-        assertHash(files[3], \"c5718ba5c280339fff9b54ecb5e61549\", \"EE member\");\n-\n-        assertHash(files[4], \"c5df750fdab71a650fb56c41742806ff\", \"EE member tests\");\n-\n-        assertHash(files[5], \"b1cf93ec4bb9bcda8809b81349f48cb3\", \"EE client\");\n+        assertHash(files[3], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\nindex dc50d213dc2..e8eedec67a9 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/starter/test/HazelcastVersionLocatorTest.java\n\n@@ -50,11 +53,11 @@ public class HazelcastVersionLocatorTest {\n \n         assertHash(files[HAZELCAST_JAR_INDEX], \"bc409b12b96ece6d05c3bd1e99b202bb\", \"OS\");\n \n-        assertHash(files[1], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n+        assertHash(files[HAZELCAST_TESTS_JAR_INDEX], \"220509ece9fc152525c91ba7c75ce600\", \"OS tests\");\n \n-        assertHash(files[2], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n+        assertHash(files[HAZELCAST_EE_JAR_INDEX], \"765816e628ca4ca57d5bd7387e761eaa\", \"EE\");\n \n-        assertHash(files[3], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n+        assertHash(files[HAZELCAST_EE_TESTS_JAR_INDEX], \"162bcb2412570845e6fd91ee61b54f94\", \"EE tests\");\n     }\n \n     private void assertHash(File file, String expectedHash, String label) throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5MDY5Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377690697", "bodyText": "Minor: since locateMember has been renamed to locateMainArtifact, maybe downloadMember should be renamed, too?", "author": "vojtechtoman", "createdAt": "2020-02-11T15:03:25Z", "path": "hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java", "diffHunk": "@@ -56,21 +59,19 @@\n     }\n \n     public static File[] locateVersion(String version, File target, boolean enterprise) {\n-        File[] files = new File[enterprise ? 6 : 3];\n-        files[0] = locateMember(version, target, false);\n-        files[1] = locateMemberTests(version, target, false);\n-        files[2] = locateClient(version, target, false);\n+        File[] files = new File[enterprise ? 4 : 2];\n+        files[HAZELCAST_JAR_INDEX] = locateMainArtifact(version, target, false);\n+        files[HAZELCAST_TESTS_JAR_INDEX] = locateTestsArtifact(version, target, false);\n         if (enterprise) {\n-            files[3] = locateMember(version, target, true);\n-            files[4] = locateMemberTests(version, target, true);\n-            files[5] = locateClient(version, target, true);\n+            files[HAZELCAST_EE_JAR_INDEX] = locateMainArtifact(version, target, true);\n+            files[HAZELCAST_EE_TESTS_JAR_INDEX] = locateTestsArtifact(version, target, true);\n         }\n         return files;\n     }\n \n     // attempts to locate member artifact in local maven repository, then downloads\n-    private static File locateMember(String version, File target, boolean enterprise) {\n-        File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPathForMember(version, enterprise));\n+    private static File locateMainArtifact(String version, File target, boolean enterprise) {", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java b/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\nindex 2e6b4982d64..c0f7e08c0ba 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\n\n@@ -69,34 +69,34 @@ public class HazelcastVersionLocator {\n         return files;\n     }\n \n-    // attempts to locate member artifact in local maven repository, then downloads\n+    // attempts to locate hazelcast artifact in local maven repository, then downloads\n     private static File locateMainArtifact(String version, File target, boolean enterprise) {\n         File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPath(version, enterprise));\n         if (artifact.exists()) {\n             return artifact;\n         } else {\n-            return downloadMember(version, target, enterprise);\n+            return downloadMainArtifact(version, target, enterprise);\n         }\n     }\n \n-    // attempts to locate member tests artifact in local maven repository, then downloads\n+    // attempts to locate tests artifact in local maven repository, then downloads\n     private static File locateTestsArtifact(String version, File target, boolean enterprise) {\n         File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPathForTests(version, enterprise));\n         if (artifact.exists()) {\n             return artifact;\n         } else {\n-            return downloadMemberTests(version, target, enterprise);\n+            return downloadTestsArtifact(version, target, enterprise);\n         }\n     }\n \n-    private static File downloadMember(String version, File target, boolean enterprise) {\n+    private static File downloadMainArtifact(String version, File target, boolean enterprise) {\n         String url = constructUrl(version, enterprise);\n         String filename = extractFilenameFromUrl(url);\n         logWarningForArtifactDownload(version, false, enterprise);\n         return downloadFile(url, target, filename);\n     }\n \n-    private static File downloadMemberTests(String version, File target, boolean enterprise) {\n+    private static File downloadTestsArtifact(String version, File target, boolean enterprise) {\n         String url = constructUrlForTests(version, enterprise);\n         String filename = extractFilenameFromUrl(url);\n         logWarningForArtifactDownload(version, true, enterprise);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5MDkyOQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16639#discussion_r377690929", "bodyText": "Minor: since locateMemberTests has been renamed to locateTestsArtifact, maybe downloadMemberTests should be renamed, too?", "author": "vojtechtoman", "createdAt": "2020-02-11T15:03:49Z", "path": "hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java", "diffHunk": "@@ -79,41 +80,24 @@ private static File locateMember(String version, File target, boolean enterprise\n     }\n \n     // attempts to locate member tests artifact in local maven repository, then downloads\n-    private static File locateMemberTests(String version, File target, boolean enterprise) {\n-        File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPathForMemberTests(version, enterprise));\n+    private static File locateTestsArtifact(String version, File target, boolean enterprise) {", "originalCommit": "d2b9d5d2db0afc0dd082654ddf8bfe1e77db3c1f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "chunk": "diff --git a/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java b/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\nindex 2e6b4982d64..c0f7e08c0ba 100644\n--- a/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\n+++ b/hazelcast/src/test/java/com/hazelcast/test/starter/HazelcastVersionLocator.java\n\n@@ -69,34 +69,34 @@ public class HazelcastVersionLocator {\n         return files;\n     }\n \n-    // attempts to locate member artifact in local maven repository, then downloads\n+    // attempts to locate hazelcast artifact in local maven repository, then downloads\n     private static File locateMainArtifact(String version, File target, boolean enterprise) {\n         File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPath(version, enterprise));\n         if (artifact.exists()) {\n             return artifact;\n         } else {\n-            return downloadMember(version, target, enterprise);\n+            return downloadMainArtifact(version, target, enterprise);\n         }\n     }\n \n-    // attempts to locate member tests artifact in local maven repository, then downloads\n+    // attempts to locate tests artifact in local maven repository, then downloads\n     private static File locateTestsArtifact(String version, File target, boolean enterprise) {\n         File artifact = new File(LOCAL_M2_REPOSITORY_PREFIX + constructPathForTests(version, enterprise));\n         if (artifact.exists()) {\n             return artifact;\n         } else {\n-            return downloadMemberTests(version, target, enterprise);\n+            return downloadTestsArtifact(version, target, enterprise);\n         }\n     }\n \n-    private static File downloadMember(String version, File target, boolean enterprise) {\n+    private static File downloadMainArtifact(String version, File target, boolean enterprise) {\n         String url = constructUrl(version, enterprise);\n         String filename = extractFilenameFromUrl(url);\n         logWarningForArtifactDownload(version, false, enterprise);\n         return downloadFile(url, target, filename);\n     }\n \n-    private static File downloadMemberTests(String version, File target, boolean enterprise) {\n+    private static File downloadTestsArtifact(String version, File target, boolean enterprise) {\n         String url = constructUrlForTests(version, enterprise);\n         String filename = extractFilenameFromUrl(url);\n         logWarningForArtifactDownload(version, true, enterprise);\n"}}, {"oid": "1f2f71f9ed4c04791f6c7da232afac523bd15abb", "url": "https://github.com/hazelcast/hazelcast/commit/1f2f71f9ed4c04791f6c7da232afac523bd15abb", "message": "Address review comments", "committedDate": "2020-02-11T15:48:20Z", "type": "commit"}]}