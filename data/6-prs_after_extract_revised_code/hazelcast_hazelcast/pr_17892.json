{"pr_number": 17892, "pr_title": "Improved telemetry 4.2", "pr_createdAt": "2020-11-24T20:48:05Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17892", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTY3MQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r561811671", "bodyText": "Can we switch to HTTPS please?", "author": "kwart", "createdAt": "2021-01-21T11:39:29Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/PhoneHome.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hazelcast.internal.util.phonehome;\n+\n+import com.hazelcast.instance.impl.Node;\n+import com.hazelcast.logging.ILogger;\n+import com.hazelcast.spi.properties.ClusterProperty;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.RejectedExecutionException;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import static java.lang.System.getenv;\n+\n+/**\n+ * Pings phone home server with cluster info daily.\n+ */\n+public class PhoneHome {\n+\n+    private static final String FALSE = \"false\";\n+    private static final String DEFAULT_BASE_PHONE_HOME_URL = \"http://phonehome.hazelcast.com/ping\";", "originalCommit": "c7d0cc0e35d54bd4ef08d1d6376be71ae1bcda77", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzc5MjQyMA==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r563792420", "bodyText": "Do we have https for the service? cc @erosb", "author": "mmedenjak", "createdAt": "2021-01-25T15:04:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMxNzg3Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r564317877", "bodyText": "AFAIK we currently don't have it. We can handle it separately. We can force redirect to https once that's done for older IMDG versions.", "author": "emre-aydin", "createdAt": "2021-01-26T08:13:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDMyNDM0MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r564324340", "bodyText": "I would like to see it resolved before merging this PR. We shouldn't leak even more info about users environment.\nWe can start with both endpoints available (http, https) - i.e. no redirect is needed, but new Hazelcast releases should go to the encrypted one.", "author": "kwart", "createdAt": "2021-01-26T08:24:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDM5NDA5Ng==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r564394096", "bodyText": "I created a callhome issue to track this: hazelcast/callhome#35", "author": "erosb", "createdAt": "2021-01-26T10:10:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTgxMTY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7ee9ea21fcb2c6bf33aca79687827bbad94ac686", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/PhoneHome.java b/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/PhoneHome.java\nindex 2253146a49..71e21c004f 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/PhoneHome.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/PhoneHome.java\n\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.hazelcast.internal.util.phonehome;\n \n import com.hazelcast.instance.impl.Node;\n"}}, {"oid": "fadc5ad3803e60aae976c3986aae64dcf46dfc70", "url": "https://github.com/hazelcast/hazelcast/commit/fadc5ad3803e60aae976c3986aae64dcf46dfc70", "message": "Improved telemetry", "committedDate": "2021-01-25T14:52:42Z", "type": "forcePushed"}, {"oid": "ef1f7244608b53ce2b91b2b3e27b451aa0a5fcdc", "url": "https://github.com/hazelcast/hazelcast/commit/ef1f7244608b53ce2b91b2b3e27b451aa0a5fcdc", "message": "Improved telemetry", "committedDate": "2021-01-25T15:31:13Z", "type": "commit"}, {"oid": "7ee9ea21fcb2c6bf33aca79687827bbad94ac686", "url": "https://github.com/hazelcast/hazelcast/commit/7ee9ea21fcb2c6bf33aca79687827bbad94ac686", "message": "Improved telemetry", "committedDate": "2021-01-25T15:42:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzg4MzQ5OA==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r563883498", "bodyText": "Why doesn't CLIENT_ENDPOINT_COUNT go to the ClientInfoCollector?", "author": "mmedenjak", "createdAt": "2021-01-25T16:59:42Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/BuildInfoCollector.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hazelcast.internal.util.phonehome;\n+\n+import com.hazelcast.instance.BuildInfo;\n+import com.hazelcast.instance.BuildInfoProvider;\n+import com.hazelcast.instance.JetBuildInfo;\n+import com.hazelcast.instance.impl.Node;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import static com.hazelcast.internal.nio.IOUtil.closeResource;\n+import static com.hazelcast.internal.util.EmptyStatement.ignore;\n+\n+class BuildInfoCollector implements MetricsCollector {\n+\n+    @Override\n+    public Map<PhoneHomeMetrics, String> computeMetrics(Node hazelcastNode) {\n+        BuildInfo build = BuildInfoProvider.getBuildInfo();\n+        Map<PhoneHomeMetrics, String> buildInfo = new HashMap<>();\n+        JetBuildInfo jetBuildInfo = hazelcastNode.getBuildInfo().getJetBuildInfo();\n+        buildInfo.put(PhoneHomeMetrics.HAZELCAST_DOWNLOAD_ID, getDownloadId());\n+        buildInfo.put(PhoneHomeMetrics.CLIENT_ENDPOINT_COUNT,", "originalCommit": "7ee9ea21fcb2c6bf33aca79687827bbad94ac686", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDQwMjUzNQ==", "url": "https://github.com/hazelcast/hazelcast/pull/17892#discussion_r564402535", "bodyText": "Good point, I moved it to ClientInfoCollector in fce44b3", "author": "erosb", "createdAt": "2021-01-26T10:23:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Mzg4MzQ5OA=="}], "type": "inlineReview", "revised_code": {"commit": "e676e203689bf2e24084f0f073e6f47fb93d934e", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/BuildInfoCollector.java b/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/BuildInfoCollector.java\nindex dd90e9bd91..d93aee31fd 100644\n--- a/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/BuildInfoCollector.java\n+++ b/hazelcast/src/main/java/com/hazelcast/internal/util/phonehome/BuildInfoCollector.java\n\n@@ -13,53 +13,53 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.hazelcast.internal.util.phonehome;\n \n import com.hazelcast.instance.BuildInfo;\n-import com.hazelcast.instance.BuildInfoProvider;\n import com.hazelcast.instance.JetBuildInfo;\n import com.hazelcast.instance.impl.Node;\n \n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.HashMap;\n-import java.util.Map;\n import java.util.Properties;\n+import java.util.function.BiConsumer;\n \n-import static com.hazelcast.internal.nio.IOUtil.closeResource;\n import static com.hazelcast.internal.util.EmptyStatement.ignore;\n \n+/**\n+ * Collects metadata about this instance\n+ */\n class BuildInfoCollector implements MetricsCollector {\n \n     @Override\n-    public Map<PhoneHomeMetrics, String> computeMetrics(Node hazelcastNode) {\n-        BuildInfo build = BuildInfoProvider.getBuildInfo();\n-        Map<PhoneHomeMetrics, String> buildInfo = new HashMap<>();\n-        JetBuildInfo jetBuildInfo = hazelcastNode.getBuildInfo().getJetBuildInfo();\n-        buildInfo.put(PhoneHomeMetrics.HAZELCAST_DOWNLOAD_ID, getDownloadId());\n-        buildInfo.put(PhoneHomeMetrics.CLIENT_ENDPOINT_COUNT,\n-                MetricsCollector.convertToLetter(hazelcastNode.clientEngine.getClientEndpointCount()));\n-        buildInfo.put(PhoneHomeMetrics.JAVA_VERSION_OF_SYSTEM, System.getProperty(\"java.version\"));\n-        buildInfo.put(PhoneHomeMetrics.BUILD_VERSION, build.getVersion());\n-        buildInfo.put(PhoneHomeMetrics.JET_BUILD_VERSION, jetBuildInfo == null ? \"\" : jetBuildInfo.getVersion());\n-        return buildInfo;\n+    public void forEachMetric(Node node, BiConsumer<PhoneHomeMetrics, String> metricsConsumer) {\n+        BuildInfo imdgInfo = node.getBuildInfo();\n+        JetBuildInfo jetInfo = imdgInfo.getJetBuildInfo();\n+        metricsConsumer.accept(PhoneHomeMetrics.HAZELCAST_DOWNLOAD_ID, getDownloadId());\n+        metricsConsumer.accept(PhoneHomeMetrics.CLIENT_ENDPOINT_COUNT,\n+                MetricsCollector.convertToLetter(node.clientEngine.getClientEndpointCount()));\n+        metricsConsumer.accept(PhoneHomeMetrics.JAVA_VERSION_OF_SYSTEM, System.getProperty(\"java.version\"));\n+        metricsConsumer.accept(PhoneHomeMetrics.BUILD_VERSION, imdgInfo.getVersion());\n+        metricsConsumer.accept(PhoneHomeMetrics.JET_BUILD_VERSION,\n+                jetInfo == null ? \"\" : jetInfo.getVersion());\n     }\n \n+    /**\n+     * Attempts to return the download ID for this instance or returns\n+     * {@code source} if unable to find the download ID.\n+     */\n     private String getDownloadId() {\n-        String downloadId = \"source\";\n-        InputStream is = null;\n-        try {\n-            is = getClass().getClassLoader().getResourceAsStream(\"hazelcast-download.properties\");\n+        try (InputStream is = getClass().getClassLoader()\n+                                        .getResourceAsStream(\"hazelcast-download.properties\")) {\n             if (is != null) {\n-                final Properties properties = new Properties();\n+                Properties properties = new Properties();\n                 properties.load(is);\n-                downloadId = properties.getProperty(\"hazelcastDownloadId\");\n+                return properties.getProperty(\"hazelcastDownloadId\");\n             }\n         } catch (IOException ignored) {\n             ignore(ignored);\n-        } finally {\n-            closeResource(is);\n         }\n-        return downloadId;\n+        return \"source\";\n     }\n }\n"}}, {"oid": "e676e203689bf2e24084f0f073e6f47fb93d934e", "url": "https://github.com/hazelcast/hazelcast/commit/e676e203689bf2e24084f0f073e6f47fb93d934e", "message": "Minor cleanup\n\n- add runner for integration test\n- add generics\n- avoid creating maps for collecting metrics\n- code cleanup and reformatting", "committedDate": "2021-01-25T19:23:01Z", "type": "commit"}, {"oid": "e676e203689bf2e24084f0f073e6f47fb93d934e", "url": "https://github.com/hazelcast/hazelcast/commit/e676e203689bf2e24084f0f073e6f47fb93d934e", "message": "Minor cleanup\n\n- add runner for integration test\n- add generics\n- avoid creating maps for collecting metrics\n- code cleanup and reformatting", "committedDate": "2021-01-25T19:23:01Z", "type": "forcePushed"}, {"oid": "9cdaa95633e6b1abf31e0bf4542780da50e5c8d5", "url": "https://github.com/hazelcast/hazelcast/commit/9cdaa95633e6b1abf31e0bf4542780da50e5c8d5", "message": "Fix test runner", "committedDate": "2021-01-25T20:38:51Z", "type": "commit"}, {"oid": "aadd9004a9a7e654fb2ef64435ed21752ae2ced3", "url": "https://github.com/hazelcast/hazelcast/commit/aadd9004a9a7e654fb2ef64435ed21752ae2ced3", "message": "Checkstyle", "committedDate": "2021-01-25T21:03:10Z", "type": "commit"}, {"oid": "fce44b3ed9b85ec2416ae2f857995d7a689db64f", "url": "https://github.com/hazelcast/hazelcast/commit/fce44b3ed9b85ec2416ae2f857995d7a689db64f", "message": "moving collection of CLIENT_ENDPOINT_COUNT metric to ClientInfoCollector (addressing PR comment)", "committedDate": "2021-01-26T10:22:38Z", "type": "commit"}]}