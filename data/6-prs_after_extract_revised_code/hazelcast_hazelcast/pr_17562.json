{"pr_number": 17562, "pr_title": "Make backupMap volatile to make it visible to user thread", "pr_createdAt": "2020-09-17T09:03:37Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/17562", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1MDIxMw==", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r491950213", "bodyText": "The backupMap is initialized with the HashMap that is not thread-safe. Is it handled properly that multiple threads are not accessing it?", "author": "petrpleshachkov", "createdAt": "2020-09-21T10:50:54Z", "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java", "diffHunk": "@@ -99,6 +98,8 @@\n     // to avoid reloading same items\n     private long lastIdLoaded;\n \n+    private volatile Map<Long, QueueItem> backupMap;", "originalCommit": "15844b170a946e4838ead3dacc09241210a18952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNzc1MA==", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r492017750", "bodyText": "fixed it by making backupMap a CHM.", "author": "ahmetmircik", "createdAt": "2020-09-21T12:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1MDIxMw=="}], "type": "inlineReview", "revised_code": {"commit": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\nindex c7a91bbf04..01a635409a 100644\n--- a/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\n+++ b/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\n\n@@ -98,7 +101,7 @@ public class QueueContainer implements IdentifiedDataSerializable {\n     // to avoid reloading same items\n     private long lastIdLoaded;\n \n-    private volatile Map<Long, QueueItem> backupMap;\n+    private volatile ConcurrentMap<Long, QueueItem> backupMap;\n \n     public QueueContainer() {\n     }\n"}}, {"oid": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "url": "https://github.com/hazelcast/hazelcast/commit/6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "message": "Address Petr's comments", "committedDate": "2020-09-21T12:47:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1Mjc0Nw==", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r493352747", "bodyText": "This mix of referring to a local variable and the field is a bit confusing. Can you elaborate a bit or simply use the local variable only when checking the size and adding to backup map?", "author": "mmedenjak", "createdAt": "2020-09-23T09:14:54Z", "path": "hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java", "diffHunk": "@@ -980,24 +986,29 @@ public boolean hasEnoughCapacity(int delta) {\n      * @return backup replica map from item ID to queue item\n      */\n     public Map<Long, QueueItem> getBackupMap() {\n+        ConcurrentMap<Long, QueueItem> backupMap = this.backupMap;\n         if (backupMap == null) {\n+            Queue<QueueItem> itemQueue = this.itemQueue;", "originalCommit": "6ad7f14fd8767a430e248a33a96aeb1f747d0c64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxMTIyNA==", "url": "https://github.com/hazelcast/hazelcast/pull/17562#discussion_r495811224", "bodyText": "now it should be more clear", "author": "ahmetmircik", "createdAt": "2020-09-28T09:36:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzM1Mjc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "cedd8d1a63db245596403a9cf34206aeacf3ca52", "chunk": "diff --git a/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\nindex 01a635409a..c7a91bbf04 100644\n--- a/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\n+++ b/hazelcast/src/main/java/com/hazelcast/collection/impl/queue/QueueContainer.java\n\n@@ -986,18 +983,18 @@ public class QueueContainer implements IdentifiedDataSerializable {\n      * @return backup replica map from item ID to queue item\n      */\n     public Map<Long, QueueItem> getBackupMap() {\n-        ConcurrentMap<Long, QueueItem> backupMap = this.backupMap;\n+        Map<Long, QueueItem> backupMap = this.backupMap;\n         if (backupMap == null) {\n             Queue<QueueItem> itemQueue = this.itemQueue;\n             if (itemQueue != null) {\n-                backupMap = createConcurrentHashMap(this.itemQueue.size());\n+                backupMap = createHashMap(this.itemQueue.size());\n                 for (QueueItem item : this.itemQueue) {\n                     backupMap.put(item.getItemId(), item);\n                 }\n                 itemQueue.clear();\n                 this.itemQueue = null;\n             } else {\n-                backupMap = new ConcurrentHashMap<>();\n+                backupMap = new HashMap<>();\n             }\n \n             this.backupMap = backupMap;\n"}}, {"oid": "cedd8d1a63db245596403a9cf34206aeacf3ca52", "url": "https://github.com/hazelcast/hazelcast/commit/cedd8d1a63db245596403a9cf34206aeacf3ca52", "message": "Make backupMap volatile to make it visible to user thread", "committedDate": "2020-09-28T09:23:44Z", "type": "commit"}, {"oid": "6ab0d1a0f4a842353180222304eb81e6289be432", "url": "https://github.com/hazelcast/hazelcast/commit/6ab0d1a0f4a842353180222304eb81e6289be432", "message": "Address Petr's comments", "committedDate": "2020-09-28T09:23:44Z", "type": "commit"}, {"oid": "ebe854f3705bbe26d926bb7983b65c57c2ff841a", "url": "https://github.com/hazelcast/hazelcast/commit/ebe854f3705bbe26d926bb7983b65c57c2ff841a", "message": "Address Matko's review comment", "committedDate": "2020-09-28T09:36:13Z", "type": "commit"}, {"oid": "ebe854f3705bbe26d926bb7983b65c57c2ff841a", "url": "https://github.com/hazelcast/hazelcast/commit/ebe854f3705bbe26d926bb7983b65c57c2ff841a", "message": "Address Matko's review comment", "committedDate": "2020-09-28T09:36:13Z", "type": "forcePushed"}]}