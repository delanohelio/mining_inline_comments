{"pr_number": 16993, "pr_title": "Introduce major version packet flags", "pr_createdAt": "2020-05-18T09:30:24Z", "pr_url": "https://github.com/hazelcast/hazelcast/pull/16993", "timeline": [{"oid": "06d9429edee307f1abc2dc643938f1c0c44955fa", "url": "https://github.com/hazelcast/hazelcast/commit/06d9429edee307f1abc2dc643938f1c0c44955fa", "message": "Introduce major version packet flags\n\nAdds a packet flag on all outgoing packets. This is to support running a\ncluster where a member can be connected to other members of the same\nmajor version as well as have a connection to members of different major\nversions. To distinguish between the two on a Packet level, we need to\nintroduce a Packet flag. This flag should be introduced on all versions\nwhich will support migrating between 3.x and 4.x, which at this point\nmeans 3.12.8+, 4.0.2+ and 4.1.x. The flags can be removed in 4.2 which\nwill not support data migration anymore.", "committedDate": "2020-05-18T09:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjAyMw==", "url": "https://github.com/hazelcast/hazelcast/pull/16993#discussion_r427766023", "bodyText": "All packets in a stream will be of the same version. Why is this not part of the MemberHandshake?", "author": "pveentjer", "createdAt": "2020-05-20T06:20:04Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/nio/Packet.java", "diffHunk": "@@ -43,6 +43,8 @@\n     // 1. URGENT (bit 4)\n     // 2. Packet type (bits 0, 2, 5)\n     // 3. Flags specific to a given packet type (bits 1, 6)\n+    // 4. 4.x flag (bit 7)", "originalCommit": "06d9429edee307f1abc2dc643938f1c0c44955fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MjkwMw==", "url": "https://github.com/hazelcast/hazelcast/pull/16993#discussion_r427792903", "bodyText": "It is part of the BindRequest (MemberHandshake). If you're asking why we don't just set the version on the tcp connection and use that, I guess the problem is getting a reference to the connection in all places where the Packet is passed around, and it introduces coupling between the connection/network layer and other subsystems like operation handling.", "author": "mmedenjak", "createdAt": "2020-05-20T07:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjAyMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjM4OQ==", "url": "https://github.com/hazelcast/hazelcast/pull/16993#discussion_r427766389", "bodyText": "Why do we need 2 bits? One bit would be sufficient. Either it is 3.x or it is 4.0. Now you have the option to be none or both.", "author": "pveentjer", "createdAt": "2020-05-20T06:20:58Z", "path": "hazelcast/src/main/java/com/hazelcast/internal/nio/Packet.java", "diffHunk": "@@ -96,6 +98,16 @@\n      */\n     public static final int FLAG_JET_FLOW_CONTROL = 1 << 1;\n \n+    /**", "originalCommit": "06d9429edee307f1abc2dc643938f1c0c44955fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwNTk2Mg==", "url": "https://github.com/hazelcast/hazelcast/pull/16993#discussion_r427805962", "bodyText": "We have these special members both on 3.x and 4.x which can process some packets both from 3.x and 4.x members. To do that, they rely on these flags. Let's say this special 4.x member says \"if the FLAG_4_0 is absent, it's sent by 3.x and if it's present, it's sent by 4.x\". This means, all members in the cluster that it's part of need to set this flag for the cluster to operate normally and this allows 3.8+ clusters to connect to this special member.\nNow, we have the other side of the replication, for users wanting to replicate back from 4.x to 3.x. They need to run a special 3.12 member. To distinguish incoming packets from 3.12.x members and 4.x, we need to again check some flag. Let's say we don't have the FLAG_3_x (we have only FLAG_4_0 as you proposed) and let's say, as you proposed we check \"if the FLAG_4_0 is present, it's sent by 4.x and if it's absent, it's sent by 3.x\". This places a restriction on the 4.x cluster -> it has to now be comprised out of members setting this flag, namely 4.0.2+.\nSo, to sum up, there is no technical limitation why we must have two flags, it's a decision on what kind of restriction we want to impose on users:\na) if we use just one flag like FLAG_4_0, the restriction would be \"your 4.x cluster, be it the source or target of migration, has to be at least 4.0.2+\"\nb) if we use use two flags, the restriction would be \"your target cluster which contains the special migration member has to be at least 4.0.2+ or 3.12.8+, depending on whether you're replicating 3.x->4.x or 4.x->3.x)\nI just assumed option b was easier for customers to set up and understand, given an existing source cluster. Also, I don't see using two flags as a big loss. Sure, it introduces a cognitive load but that's it. The bits are already there, they are just not used. Also, since migration tool will probably not support migrating to 4.2, we'll remove all traces of these flags in 4.2.", "author": "mmedenjak", "createdAt": "2020-05-20T07:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgxNDEyMw==", "url": "https://github.com/hazelcast/hazelcast/pull/16993#discussion_r427814123", "bodyText": "In even shorter terms, the option with one flag places a restriction on the versions of both clusters while the option with two flags places a restriction on the versions of only one cluster.", "author": "mmedenjak", "createdAt": "2020-05-20T08:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjM4OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "61b98131ff17a2a9c7d09adef7bffaaa575d64f4", "url": "https://github.com/hazelcast/hazelcast/commit/61b98131ff17a2a9c7d09adef7bffaaa575d64f4", "message": "Address review comments", "committedDate": "2020-05-20T11:28:05Z", "type": "commit"}]}