{"pr_number": 772, "pr_title": "CLDR-13300 fix tests for cldr-staging", "pr_createdAt": "2020-10-12T04:19:51Z", "pr_url": "https://github.com/unicode-org/cldr/pull/772", "timeline": [{"oid": "5aa9e3504d46ec5c8673b1f63ce5f3883dd745b5", "url": "https://github.com/unicode-org/cldr/commit/5aa9e3504d46ec5c8673b1f63ce5f3883dd745b5", "message": "CLDR-13300 fix tests for cldr-staging", "committedDate": "2020-10-12T04:19:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5Nzg5MQ==", "url": "https://github.com/unicode-org/cldr/pull/772#discussion_r503397891", "bodyText": "I like your fix, I had to do similar in the 'move sandbox to mul' PR #757", "author": "srl295", "createdAt": "2020-10-12T16:12:09Z", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestInheritance.java", "diffHunk": "@@ -247,18 +247,18 @@ public void TestLikelyAndDefaultConsistency() {\n         // find multiscript locales\n         Relation<String, String> base2scripts = Relation.of(\n             new TreeMap<String, Set<String>>(), TreeSet.class);\n-        Map<String, String> parent2default = new TreeMap<String, String>();\n-        Map<String, String> default2parent = new TreeMap<String, String>();\n+        Map<String, String> parent2default = new TreeMap<>();\n+        Map<String, String> default2parent = new TreeMap<>();\n         Relation<String, String> base2locales = Relation.of(\n             new TreeMap<String, Set<String>>(), TreeSet.class);\n \n-        Set<String> knownMultiScriptLanguages = new HashSet<String>(Arrays.asList(\"bm\", \"ha\"));\n+        Set<String> knownMultiScriptLanguages = new HashSet<>(Arrays.asList(\"bm\", \"ha\"));\n         // get multiscript locales\n         for (String localeID : availableLocales) {\n             String script = ltp.set(localeID).getScript();\n             final String base = ltp.getLanguage();\n-            if (!availableLocales.contains(base)) {\n-                errln(\"Missing base locale for: \" + localeID);\n+            if (!availableLocales.contains(base) && !base.equals(\"und\")) {", "originalCommit": "5aa9e3504d46ec5c8673b1f63ce5f3883dd745b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5ODE5OA==", "url": "https://github.com/unicode-org/cldr/pull/772#discussion_r503398198", "bodyText": "in #757 I made sure to print out the base locale also, because that's actually the one that's missing (not localeID)", "author": "srl295", "createdAt": "2020-10-12T16:12:43Z", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestInheritance.java", "diffHunk": "@@ -247,18 +247,18 @@ public void TestLikelyAndDefaultConsistency() {\n         // find multiscript locales\n         Relation<String, String> base2scripts = Relation.of(\n             new TreeMap<String, Set<String>>(), TreeSet.class);\n-        Map<String, String> parent2default = new TreeMap<String, String>();\n-        Map<String, String> default2parent = new TreeMap<String, String>();\n+        Map<String, String> parent2default = new TreeMap<>();\n+        Map<String, String> default2parent = new TreeMap<>();\n         Relation<String, String> base2locales = Relation.of(\n             new TreeMap<String, Set<String>>(), TreeSet.class);\n \n-        Set<String> knownMultiScriptLanguages = new HashSet<String>(Arrays.asList(\"bm\", \"ha\"));\n+        Set<String> knownMultiScriptLanguages = new HashSet<>(Arrays.asList(\"bm\", \"ha\"));\n         // get multiscript locales\n         for (String localeID : availableLocales) {\n             String script = ltp.set(localeID).getScript();\n             final String base = ltp.getLanguage();\n-            if (!availableLocales.contains(base)) {\n-                errln(\"Missing base locale for: \" + localeID);\n+            if (!availableLocales.contains(base) && !base.equals(\"und\")) {\n+                errln(\"Missing lang-subtag for: \" + localeID);", "originalCommit": "5aa9e3504d46ec5c8673b1f63ce5f3883dd745b5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}