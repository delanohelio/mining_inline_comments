{"pr_number": 861, "pr_title": "CLDR-11771 Add unit test for VettingViewer.getMissingStatus", "pr_createdAt": "2020-11-30T19:06:24Z", "pr_url": "https://github.com/unicode-org/cldr/pull/861", "timeline": [{"oid": "d486a31bd7cf7cf10f1d51a908109099afd091ca", "url": "https://github.com/unicode-org/cldr/commit/d486a31bd7cf7cf10f1d51a908109099afd091ca", "message": "CLDR-11771 Add unit test for VettingViewer.getMissingStatus\n\n-New method TestUtilities.TestMissingStatus\n\n-Delete some dead code\n\n-Comments", "committedDate": "2020-11-30T19:05:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r532864063", "bodyText": "How could we test for MissingStatus.DISPUTED? It would require the kind of CLDRFile that reflects voting in progress; do we have a way to set that up in the context of cldr-unittest TestAll?", "author": "btangmu", "createdAt": "2020-11-30T19:54:02Z", "path": "tools/cldr-code/src/test/java/org/unicode/cldr/unittest/TestUtilities.java", "diffHunk": "@@ -1409,4 +1372,20 @@ public void TestBulkUploadHtml() {\n         assertEquals(\"writeBulkInfoHtml\", expected, out.toString());\n     }\n \n+    /**\n+     * Verify that VettingViewer.getMissingStatus returns MissingStatus.PRESENT\n+     * for a typical path in a well-populated locale\n+     *\n+     * Ideally we should also test for MissingStatus.DISPUTED, etc.; that's more difficult\n+     */", "originalCommit": "d486a31bd7cf7cf10f1d51a908109099afd091ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk1Mzc2Mw==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r532953763", "bodyText": "We'd have to set it up so that the callback returned the interesting information, I'm guessing.", "author": "macchiati", "createdAt": "2020-11-30T22:48:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2OTExNA==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r532969114", "bodyText": "One way would be to leverage the TestSTFactory which already sets up vetters, disputes, etc. It actually creates a STFactory though which has a DB backing.\nBut all you need is a UsersChoice<Organization> subclass - VettingViewer.main() constructs one which includes disputed values, which looks quite suitable for a test case.", "author": "srl295", "createdAt": "2020-11-30T23:24:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk3MDY5Mg==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r532970692", "bodyText": "actually, getMissingStatus() will never return disputed, but member function getErrorOnPath() will.", "author": "srl295", "createdAt": "2020-11-30T23:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU0ODU2NQ==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r533548565", "bodyText": "actually, getMissingStatus() will never return disputed, but member function getErrorOnPath() will.\n\nGood point! The ancient bug, for which this is a follow-up, was https://unicode-org.atlassian.net/browse/CLDR-11765 and it involved items under Disputed in the Dashboard, hence my confusion...\nI think this is the first unit test for any method in VettingViewer. Obviously more tests would be helpful.\nI doubt whether getMissingStatus even belongs in VettingViewer -- shouldn't the status be the same regardless of whether an item is viewed in the Dashboard or the DataSection view?", "author": "btangmu", "createdAt": "2020-12-01T16:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU2MTEyOQ==", "url": "https://github.com/unicode-org/cldr/pull/861#discussion_r533561129", "bodyText": "@btangmu it seems to be more of a utility function that may belong somewhere else.", "author": "srl295", "createdAt": "2020-12-01T16:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2NDA2Mw=="}], "type": "inlineReview", "revised_code": null}]}