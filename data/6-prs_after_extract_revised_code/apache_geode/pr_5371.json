{"pr_number": 5371, "pr_title": "GEODE-8359", "pr_createdAt": "2020-07-14T22:20:24Z", "pr_url": "https://github.com/apache/geode/pull/5371", "timeline": [{"oid": "eb899bab969d6eda6d2f47aee983e53e7eaa5687", "url": "https://github.com/apache/geode/commit/eb899bab969d6eda6d2f47aee983e53e7eaa5687", "message": "Debug messaging", "committedDate": "2020-07-13T23:56:39Z", "type": "commit"}, {"oid": "cfc0a892503b22e4b906fd7664d7c7aa03f58d05", "url": "https://github.com/apache/geode/commit/cfc0a892503b22e4b906fd7664d7c7aa03f58d05", "message": "revert changes to test...", "committedDate": "2020-07-14T18:52:55Z", "type": "commit"}, {"oid": "fbf91679b733e18b3bf2795489bc3da51fe34ad6", "url": "https://github.com/apache/geode/commit/fbf91679b733e18b3bf2795489bc3da51fe34ad6", "message": "Revert \"revert changes to test...\"\n\nThis reverts commit cfc0a892", "committedDate": "2020-07-14T21:32:09Z", "type": "commit"}, {"oid": "160a60bfdc46fcc31e7be2b47fc8fc2132efc752", "url": "https://github.com/apache/geode/commit/160a60bfdc46fcc31e7be2b47fc8fc2132efc752", "message": "Cleanup and bugfix for GEM-2967", "committedDate": "2020-07-14T22:06:08Z", "type": "commit"}, {"oid": "e5ec401afa4be0adb5c6f7927ee4df60fd7d9991", "url": "https://github.com/apache/geode/commit/e5ec401afa4be0adb5c6f7927ee4df60fd7d9991", "message": "Spotless", "committedDate": "2020-07-14T22:08:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMDM5NA==", "url": "https://github.com/apache/geode/pull/5371#discussion_r454830394", "bodyText": "The important chunk here copied from RegisterInterest61 which already had a bug fix for this issue.", "author": "mhansonp", "createdAt": "2020-07-15T06:51:47Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java", "diffHunk": "@@ -163,29 +162,40 @@ public void cmdExecute(final Message clientMessage, final ServerConnection serve\n     }\n     try {\n       securityService.authorize(Resource.DATA, Operation.READ, regionName);\n-      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();\n-      if (authzRequest != null) {\n+      AuthorizeRequest authorizeRequest = serverConnection.getAuthzRequest();\n+      if (authorizeRequest != null) {\n         if (!DynamicRegionFactory.regionIsDynamicRegionList(regionName)) {\n           RegisterInterestOperationContext registerContext =\n-              authzRequest.registerInterestListAuthorize(regionName, keys, policy);\n-          keys = (List) registerContext.getKey();\n+              authorizeRequest.registerInterestListAuthorize(regionName, keys, policy);\n+          keys = (List<Object>) registerContext.getKey();\n         }\n       }\n       // Register interest\n       serverConnection.getAcceptor().getCacheClientNotifier().registerClientInterest(regionName,\n           keys, serverConnection.getProxyID(), isDurable, sendUpdatesAsInvalidates, true,\n           regionDataPolicyPartBytes[0], true);\n-    } catch (Exception ex) {\n+    } catch (Exception e) {\n       // If an interrupted exception is thrown , rethrow it\n-      checkForInterrupt(serverConnection, ex);\n+      checkForInterrupt(serverConnection, e);\n       // Otherwise, write an exception message and continue\n-      writeChunkedException(clientMessage, ex, serverConnection);\n+      writeChunkedException(clientMessage, e, serverConnection);\n       serverConnection.setAsTrue(RESPONDED);\n       return;\n     }\n \n-    boolean isPrimary = serverConnection.getAcceptor().getCacheClientNotifier()\n-        .getClientProxy(serverConnection.getProxyID()).isPrimary();\n+    CacheClientProxy ccp = serverConnection.getAcceptor().getCacheClientNotifier()\n+        .getClientProxy(serverConnection.getProxyID());\n+\n+    if (ccp == null) {", "originalCommit": "e5ec401afa4be0adb5c6f7927ee4df60fd7d9991", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMDczNQ==", "url": "https://github.com/apache/geode/pull/5371#discussion_r454830735", "bodyText": "The core issue was an NPE, because there was no cache client proxy returned during shutdown.", "author": "mhansonp", "createdAt": "2020-07-15T06:52:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzMDM5NA=="}], "type": "inlineReview", "revised_code": {"commit": "ef0c4958a61bf870e5287623f27ba29e07a42fe9", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\nindex ebbca7e49e..f4107c16c1 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\n\n@@ -188,7 +188,7 @@ public class RegisterInterestList66 extends BaseCommand {\n \n     if (ccp == null) {\n       IOException ioException = new IOException(\n-          \"CacheClientProxy for this client is no longer on the server , so registerInterest operation is unsuccessful\");\n+          \"CacheClientProxy for this client is no longer on the server\");\n       writeChunkedException(clientMessage, ioException, serverConnection);\n       serverConnection.setAsTrue(RESPONDED);\n       return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MjYwNg==", "url": "https://github.com/apache/geode/pull/5371#discussion_r455242606", "bodyText": "We could change the messaging part...", "author": "agingade", "createdAt": "2020-07-15T18:05:34Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java", "diffHunk": "@@ -163,29 +162,40 @@ public void cmdExecute(final Message clientMessage, final ServerConnection serve\n     }\n     try {\n       securityService.authorize(Resource.DATA, Operation.READ, regionName);\n-      AuthorizeRequest authzRequest = serverConnection.getAuthzRequest();\n-      if (authzRequest != null) {\n+      AuthorizeRequest authorizeRequest = serverConnection.getAuthzRequest();\n+      if (authorizeRequest != null) {\n         if (!DynamicRegionFactory.regionIsDynamicRegionList(regionName)) {\n           RegisterInterestOperationContext registerContext =\n-              authzRequest.registerInterestListAuthorize(regionName, keys, policy);\n-          keys = (List) registerContext.getKey();\n+              authorizeRequest.registerInterestListAuthorize(regionName, keys, policy);\n+          keys = (List<Object>) registerContext.getKey();\n         }\n       }\n       // Register interest\n       serverConnection.getAcceptor().getCacheClientNotifier().registerClientInterest(regionName,\n           keys, serverConnection.getProxyID(), isDurable, sendUpdatesAsInvalidates, true,\n           regionDataPolicyPartBytes[0], true);\n-    } catch (Exception ex) {\n+    } catch (Exception e) {\n       // If an interrupted exception is thrown , rethrow it\n-      checkForInterrupt(serverConnection, ex);\n+      checkForInterrupt(serverConnection, e);\n       // Otherwise, write an exception message and continue\n-      writeChunkedException(clientMessage, ex, serverConnection);\n+      writeChunkedException(clientMessage, e, serverConnection);\n       serverConnection.setAsTrue(RESPONDED);\n       return;\n     }\n \n-    boolean isPrimary = serverConnection.getAcceptor().getCacheClientNotifier()\n-        .getClientProxy(serverConnection.getProxyID()).isPrimary();\n+    CacheClientProxy ccp = serverConnection.getAcceptor().getCacheClientNotifier()\n+        .getClientProxy(serverConnection.getProxyID());\n+\n+    if (ccp == null) {\n+      IOException ioException = new IOException(\n+          \"CacheClientProxy for this client is no longer on the server , so registerInterest operation is unsuccessful\");", "originalCommit": "e5ec401afa4be0adb5c6f7927ee4df60fd7d9991", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNDUwNg==", "url": "https://github.com/apache/geode/pull/5371#discussion_r455924506", "bodyText": "done", "author": "mhansonp", "createdAt": "2020-07-16T16:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MjYwNg=="}], "type": "inlineReview", "revised_code": {"commit": "ef0c4958a61bf870e5287623f27ba29e07a42fe9", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\nindex ebbca7e49e..f4107c16c1 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/command/RegisterInterestList66.java\n\n@@ -188,7 +188,7 @@ public class RegisterInterestList66 extends BaseCommand {\n \n     if (ccp == null) {\n       IOException ioException = new IOException(\n-          \"CacheClientProxy for this client is no longer on the server , so registerInterest operation is unsuccessful\");\n+          \"CacheClientProxy for this client is no longer on the server\");\n       writeChunkedException(clientMessage, ioException, serverConnection);\n       serverConnection.setAsTrue(RESPONDED);\n       return;\n"}}, {"oid": "ef0c4958a61bf870e5287623f27ba29e07a42fe9", "url": "https://github.com/apache/geode/commit/ef0c4958a61bf870e5287623f27ba29e07a42fe9", "message": "GEODE-8395: more cleanup and propogating the fix", "committedDate": "2020-07-15T20:02:04Z", "type": "commit"}, {"oid": "06398f88528f673294b883002c1b1132ebe30728", "url": "https://github.com/apache/geode/commit/06398f88528f673294b883002c1b1132ebe30728", "message": "GEODE-8359: A touch more cleanup...", "committedDate": "2020-07-15T20:05:36Z", "type": "commit"}, {"oid": "d6e4b911e594e35b04b7f3942e67da77a01272a8", "url": "https://github.com/apache/geode/commit/d6e4b911e594e35b04b7f3942e67da77a01272a8", "message": "GEODE-8359: A touch more cleanup, again...", "committedDate": "2020-07-15T20:11:13Z", "type": "commit"}, {"oid": "9edffdf727a17ee65a0781aba1d6e3f1709fdff3", "url": "https://github.com/apache/geode/commit/9edffdf727a17ee65a0781aba1d6e3f1709fdff3", "message": "GEODE-8359: Spotless", "committedDate": "2020-07-15T20:17:51Z", "type": "commit"}, {"oid": "0e28bec17350fc79d3f3c656c918282839bfeb1c", "url": "https://github.com/apache/geode/commit/0e28bec17350fc79d3f3c656c918282839bfeb1c", "message": "GEODE-8359: Inconsistency.", "committedDate": "2020-07-15T20:44:19Z", "type": "commit"}]}