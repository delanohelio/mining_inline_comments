{"pr_number": 5645, "pr_title": "GEODE-7845: Now behaving with clients of various versions.", "pr_createdAt": "2020-10-20T23:45:22Z", "pr_url": "https://github.com/apache/geode/pull/5645", "timeline": [{"oid": "54e8745957e16398a0ff5d0faf338b598f284fa2", "url": "https://github.com/apache/geode/commit/54e8745957e16398a0ff5d0faf338b598f284fa2", "message": "GEODE-7845: Now behaving with clients of various versions.", "committedDate": "2020-10-20T17:03:14Z", "type": "commit"}, {"oid": "8f2654f188ce0cf9410f997d021bb0e913e04f4c", "url": "https://github.com/apache/geode/commit/8f2654f188ce0cf9410f997d021bb0e913e04f4c", "message": "GEODE-7845: a bit of cleanup", "committedDate": "2020-10-20T23:53:54Z", "type": "commit"}, {"oid": "91c001f749075d793d56562bc9b333c7c4a1a180", "url": "https://github.com/apache/geode/commit/91c001f749075d793d56562bc9b333c7c4a1a180", "message": "GEODE-7845: removing unneeded ServerVersionMismatchException", "committedDate": "2020-10-21T00:33:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NDk2Ng==", "url": "https://github.com/apache/geode/pull/5645#discussion_r508964966", "bodyText": "Change all the ServerOperationException  to be UnsupportedOperationException in this class, including comments and method names.", "author": "gesterzhou", "createdAt": "2020-10-21T03:20:43Z", "path": "geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java", "diffHunk": "@@ -109,20 +111,28 @@ public void before() {\n       region.put(\"A\", \"ValueA\");\n       region.put(\"B\", \"ValueB\");\n     });\n+  }\n+\n+  @After\n+  public void after() {\n+    locator.stop();\n+    serverNew.stop();\n+    serverOld.stop();\n \n   }\n ", "originalCommit": "91c001f749075d793d56562bc9b333c7c4a1a180", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82395c21fdbebfba7736c66db0401fd774940e88", "chunk": "diff --git a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\nindex deb1c5851b..412203aa52 100644\n--- a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\n+++ b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\n\n@@ -122,12 +122,12 @@ public class RollingUpgradePartitionRegionClearServerVersionMismatch {\n   }\n \n   /**\n-   * testClient_ServerOperationException - validates that when a client invokes a partitioned region\n-   * clear on a cluster where one server is running an unsupported version for this feature we\n-   * return a ServerOperationException\n+   * testClient_UnsupportedOperationExceptionCurrentServerVersion - validates that when a client\n+   * invokes a partitioned region clear on a cluster where one server is running an\n+   * unsupported version for this feature we return a UnsupportedOperationException\n    */\n   @Test\n-  public void testClient_ServerOperationExceptionCurrentServerVersion() throws Exception {\n+  public void testClient_UnsupportedOperationExceptionCurrentServerVersion() throws Exception {\n     IgnoredException.addIgnoredException(ServerOperationException.class);\n \n     // Get a client VM\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM4NjgyMQ==", "url": "https://github.com/apache/geode/pull/5645#discussion_r509386821", "bodyText": "it's better to have one test to run pr clear from an old version and another test to run pr clear from a new version. Two test methods.", "author": "gesterzhou", "createdAt": "2020-10-21T15:29:23Z", "path": "geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java", "diffHunk": "@@ -109,20 +111,28 @@ public void before() {\n       region.put(\"A\", \"ValueA\");\n       region.put(\"B\", \"ValueB\");\n     });\n+  }\n+\n+  @After\n+  public void after() {\n+    locator.stop();\n+    serverNew.stop();\n+    serverOld.stop();\n \n   }\n \n   /**\n-   * testClient_ServerVersionMismatchException - validates that when a client invokes a partitioned\n-   * region clear on a cluster where one server is running an unsupported version for this feature\n-   * we return a ServerVersionMismatchException\n+   * testClient_ServerOperationException - validates that when a client invokes a partitioned region\n+   * clear on a cluster where one server is running an unsupported version for this feature we\n+   * return a ServerOperationException\n    */\n   @Test\n-  public void testClient_ServerVersionMismatchException() throws Exception {\n+  public void testClient_ServerOperationExceptionCurrentServerVersion() throws Exception {\n     IgnoredException.addIgnoredException(ServerOperationException.class);\n-    final int locatorPort = locator.getPort();\n+\n     // Get a client VM\n-    ClientVM clientVM = cluster.startClientVM(3, c -> c.withLocatorConnection(locatorPort));\n+    int serverPort = serverNew.getPort();\n+    clientVM = cluster.startClientVM(3, oldVersion, c -> c.withServerConnection(serverPort));", "originalCommit": "91c001f749075d793d56562bc9b333c7c4a1a180", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQzMTM3NA==", "url": "https://github.com/apache/geode/pull/5645#discussion_r509431374", "bodyText": "Not sure I follow here, I have it broken out into two different client side tests. client -> old server, client -> new server", "author": "mhansonp", "createdAt": "2020-10-21T16:30:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM4NjgyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ2Mjc5MA==", "url": "https://github.com/apache/geode/pull/5645#discussion_r509462790", "bodyText": "I think Gester is recommending expanding the testing to include:\n\nnew client --> new server\nnew client --> old server\nold client --> new server\nold client --> old server\n\nIf (3) and (4) throw UnsupportedOperationException without sending any message to the server, then they could probably be collapsed into a single test.", "author": "kirklund", "createdAt": "2020-10-21T17:15:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM4NjgyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "82395c21fdbebfba7736c66db0401fd774940e88", "chunk": "diff --git a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\nindex deb1c5851b..412203aa52 100644\n--- a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\n+++ b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearServerVersionMismatch.java\n\n@@ -122,12 +122,12 @@ public class RollingUpgradePartitionRegionClearServerVersionMismatch {\n   }\n \n   /**\n-   * testClient_ServerOperationException - validates that when a client invokes a partitioned region\n-   * clear on a cluster where one server is running an unsupported version for this feature we\n-   * return a ServerOperationException\n+   * testClient_UnsupportedOperationExceptionCurrentServerVersion - validates that when a client\n+   * invokes a partitioned region clear on a cluster where one server is running an\n+   * unsupported version for this feature we return a UnsupportedOperationException\n    */\n   @Test\n-  public void testClient_ServerOperationExceptionCurrentServerVersion() throws Exception {\n+  public void testClient_UnsupportedOperationExceptionCurrentServerVersion() throws Exception {\n     IgnoredException.addIgnoredException(ServerOperationException.class);\n \n     // Get a client VM\n"}}, {"oid": "82395c21fdbebfba7736c66db0401fd774940e88", "url": "https://github.com/apache/geode/commit/82395c21fdbebfba7736c66db0401fd774940e88", "message": "GEODE-7845: more cleanup...", "committedDate": "2020-10-21T16:41:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ1OTQ3NQ==", "url": "https://github.com/apache/geode/pull/5645#discussion_r509459475", "bodyText": "This message reads weird. Maybe change to:\n\"Server(s) \" + memberNames + \" are running a version older than (<\" + KnownVersion.GEODE_1_14_0 + \">) which does not support partitioned region clear.\");", "author": "kirklund", "createdAt": "2020-10-21T17:11:52Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -349,13 +348,14 @@ public void allServerVersionsSupportPartitionRegionClear() {\n           && (internalDistributedMember.getVersion().isOlderThan(KnownVersion.GEODE_1_14_0))) {\n         if (!memberNames.contains(internalDistributedMember.getName())) {\n           memberNames.add(internalDistributedMember.getName());\n-          logger.info(\"MLH adding \" + internalDistributedMember.getName());\n         }\n       }\n     }\n     if (!memberNames.isEmpty()) {\n-      throw new ServerVersionMismatchException(memberNames, \"Partitioned Region Clear\",\n-          KnownVersion.GEODE_1_14_0.toString());\n+      throw new UnsupportedOperationException(\n+          \"A server's \" + memberNames + \" version was too old (< \"", "originalCommit": "82395c21fdbebfba7736c66db0401fd774940e88", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "d102922643ab94bfcb089c52b0949f5d91664d1c", "url": "https://github.com/apache/geode/commit/d102922643ab94bfcb089c52b0949f5d91664d1c", "message": "GEODE-7845: spotless", "committedDate": "2020-10-21T17:26:33Z", "type": "commit"}]}