{"pr_number": 5577, "pr_title": "GEODE-7845 blocking PR region clear if one or more server versions are too old", "pr_createdAt": "2020-09-30T20:18:38Z", "pr_url": "https://github.com/apache/geode/pull/5577", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzODgyNw==", "url": "https://github.com/apache/geode/pull/5577#discussion_r497838827", "bodyText": "I think the PR specific exceptions should go in the org.apache.geode.cache.partition package.", "author": "kirklund", "createdAt": "2020-09-30T22:35:39Z", "path": "geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.cache;", "originalCommit": "73e63b73d4c41ac0930053c0376e42dec1dd3efa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjEwMzI5Nw==", "url": "https://github.com/apache/geode/pull/5577#discussion_r502103297", "bodyText": "We looked and found that the other errors of this type were all in the same package. If we move this one, we should move the rest, but given they are all public API, I think it is best to skip.", "author": "mhansonp", "createdAt": "2020-10-09T00:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzODgyNw=="}], "type": "inlineReview", "revised_code": {"commit": "f7cacfed33f2075ace54789f62eae112de9ffbc8", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java b/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java\nindex e9d835ebee..e8b9c36858 100644\n--- a/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java\n+++ b/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java\n\n@@ -15,8 +15,8 @@\n package org.apache.geode.cache;\n \n /**\n- * Indicates a failure to perform a distributed operation on a Partitioned Region after multiple\n- * attempts.\n+ * Indicates a failure to perform an operation on a Partitioned Region due to\n+ * server versions not meeting requirements.\n  *\n  * @since GemFire 5.1\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDAxOA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r497840018", "bodyText": "Optional: We could have allServerVersionsSupportPartitionRegionClear or whatever it's named return a list of incompatible servers. Then you could format a message for PartitionedRegionVersionException which lists out the server names that that were incompatible.", "author": "kirklund", "createdAt": "2020-09-30T22:39:07Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -362,6 +367,10 @@ void doClear(RegionEventImpl regionEvent, boolean cacheWrite) {\n       try {\n         Set<Integer> bucketsCleared = clearRegion(regionEvent);\n \n+        if (!partitionedRegion.allServerVersionsSupportPartitionRegionClear()) {", "originalCommit": "73e63b73d4c41ac0930053c0376e42dec1dd3efa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTk4Nw==", "url": "https://github.com/apache/geode/pull/5577#discussion_r498985987", "bodyText": "why are we doing the check here again? I though we only need to check it before we send out the message.", "author": "jinmeiliao", "createdAt": "2020-10-02T18:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDAxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3NDQwNQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r499074405", "bodyText": "Good point. We should probably pull it. Look for another checkin that will have it.", "author": "mhansonp", "createdAt": "2020-10-02T22:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDAxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5Mjc2Nw==", "url": "https://github.com/apache/geode/pull/5577#discussion_r502592767", "bodyText": "I actually pulled the other one and kept the one in doClear.", "author": "mhansonp", "createdAt": "2020-10-09T18:05:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDAxOA=="}], "type": "inlineReview", "revised_code": {"commit": "e72c30e2db1a33a5c887cd39b138ca62b9b20a95", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\nindex 2a25672984..f3ced9f288 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\n\n@@ -367,10 +367,6 @@ public class PartitionedRegionClear {\n       try {\n         Set<Integer> bucketsCleared = clearRegion(regionEvent);\n \n-        if (!partitionedRegion.allServerVersionsSupportPartitionRegionClear()) {\n-          throw new PartitionedRegionVersionException();\n-        }\n-\n         if (partitionedRegion.getTotalNumberOfBuckets() != bucketsCleared.size()) {\n           String message = \"Unable to clear all the buckets from the partitioned region \"\n               + partitionedRegion.getName()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4MTk5Ng==", "url": "https://github.com/apache/geode/pull/5577#discussion_r498981996", "bodyText": "I am not very familiar with how PR is implemented, but is getTotalNumberOfBuckets returns the bucket counts for this server only or for the entire region?", "author": "jinmeiliao", "createdAt": "2020-10-02T18:23:49Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java", "diffHunk": "@@ -5328,6 +5328,22 @@ public int getTotalNumberOfBuckets() {\n     return this.totalNumberOfBuckets;\n   }\n \n+  /**\n+   * This method returns a boolean to indicate if all server versions support Partition Region clear\n+   */\n+  public boolean allServerVersionsSupportPartitionRegionClear() {\n+    for (int i = 0; i < getTotalNumberOfBuckets(); i++) {", "originalCommit": "ee7ff58681e6ffb8b77b895cc35334623260c119", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NzcyNA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r498987724", "bodyText": "In my experience the whole region.", "author": "mhansonp", "createdAt": "2020-10-02T18:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4MTk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java\nindex dd1a346932..256850beff 100755\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java\n\n@@ -5328,21 +5328,6 @@ public class PartitionedRegion extends LocalRegion\n     return this.totalNumberOfBuckets;\n   }\n \n-  /**\n-   * This method returns a boolean to indicate if all server versions support Partition Region clear\n-   */\n-  public boolean allServerVersionsSupportPartitionRegionClear() {\n-    for (int i = 0; i < getTotalNumberOfBuckets(); i++) {\n-      InternalDistributedMember internalDistributedMember = this.getBucketPrimary(i);\n-      if ((internalDistributedMember != null)\n-          && (internalDistributedMember.getVersion().isOlderThan(KnownVersion.GEODE_1_14_0))) {\n-        return false;\n-      }\n-    }\n-    return true;\n-  }\n-\n-\n \n   @Override\n   public void basicDestroy(final EntryEventImpl event, final boolean cacheWrite,\n"}}, {"oid": "f7cacfed33f2075ace54789f62eae112de9ffbc8", "url": "https://github.com/apache/geode/commit/f7cacfed33f2075ace54789f62eae112de9ffbc8", "message": "GEODE-7845: client implementation\n\n- if a server is running an old version when a PR clear is invoked\nby the client, the client will receive a ServerOperationException\nwith a cause of PartitionedRegionVersionException.", "committedDate": "2020-10-05T17:31:06Z", "type": "forcePushed"}, {"oid": "6d43a0ad7af6953b0e619713a283f27d32b60721", "url": "https://github.com/apache/geode/commit/6d43a0ad7af6953b0e619713a283f27d32b60721", "message": "GEODE-7845: client implementation\n\n- if a server is running an old version when a PR clear is invoked\nby the client, the client will receive a ServerOperationException\nwith a cause of PartitionedRegionVersionException.", "committedDate": "2020-10-05T18:08:32Z", "type": "commit"}, {"oid": "7b38807d21848acf3572a1ec8dfe45c62d1871c2", "url": "https://github.com/apache/geode/commit/7b38807d21848acf3572a1ec8dfe45c62d1871c2", "message": "GEODE-7845: cleanup", "committedDate": "2020-10-05T18:30:40Z", "type": "commit"}, {"oid": "7b38807d21848acf3572a1ec8dfe45c62d1871c2", "url": "https://github.com/apache/geode/commit/7b38807d21848acf3572a1ec8dfe45c62d1871c2", "message": "GEODE-7845: cleanup", "committedDate": "2020-10-05T18:30:40Z", "type": "forcePushed"}, {"oid": "e72c30e2db1a33a5c887cd39b138ca62b9b20a95", "url": "https://github.com/apache/geode/commit/e72c30e2db1a33a5c887cd39b138ca62b9b20a95", "message": "GEODE-7845: Further Cleanup", "committedDate": "2020-10-08T21:21:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r502374738", "bodyText": "The exception name seems a bit miss-leading to me, the \"actual problem\" is the version of the members on which the partition region is hosted, not the region itself. Maybe UnsupportedVersionException, IncompatibleVersionException or something similar?.\nIt would also be good to include at least the id or name of one of the members that's running an unsupported version within the exception message, it will make the user's troubleshooting experience a lot better.", "author": "jujoramos", "createdAt": "2020-10-09T11:52:41Z", "path": "geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.cache;\n+\n+/**\n+ * Indicates a failure to perform an operation on a Partitioned Region due to\n+ * server versions not meeting requirements.\n+ *\n+ * @since GemFire 5.1\n+ */\n+public class PartitionedRegionVersionException extends CacheRuntimeException {\n+  private static final long serialVersionUID = -3004093739855972548L;\n+\n+  public PartitionedRegionVersionException() {\n+    super(\"A server's version was too old to a partition region clear\");\n+  }", "originalCommit": "e72c30e2db1a33a5c887cd39b138ca62b9b20a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5MTAxMQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r502591011", "bodyText": "I see your point. I think it is very valid and worth changing. How about ServerVersionException or MemberVersionException?", "author": "mhansonp", "createdAt": "2020-10-09T18:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU5MzgzMg==", "url": "https://github.com/apache/geode/pull/5577#discussion_r502593832", "bodyText": "Or perhaps VersionMismatchException", "author": "mhansonp", "createdAt": "2020-10-09T18:07:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NDI4Ng==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503444286", "bodyText": "would be nice to indicate which server is the older version", "author": "jinmeiliao", "createdAt": "2020-10-12T17:45:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NTI5Ng==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503445296", "bodyText": "Will do.", "author": "mhansonp", "createdAt": "2020-10-12T17:47:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NzQ3MA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503447470", "bodyText": "The exception message is worded awkwardly. Should this be\n\n\"too old to do a partition region clear\"?\n\"too old to clear a partition region\"?\nsomething else?", "author": "demery-pivotal", "createdAt": "2020-10-12T17:52:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMzkwNQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503523905", "bodyText": "I have changed the exception to ServerVersionMismatchException(members, feature name) it now produces a message \"A server's [oldMember] version was too old for : Partitioned Region Clear\"", "author": "mhansonp", "createdAt": "2020-10-12T20:46:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM3NDczOA=="}], "type": "inlineReview", "revised_code": {"commit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\nsimilarity index 75%\nrename from geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java\nrename to geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\nindex e8b9c36858..d8796811d6 100644\n--- a/geode-core/src/main/java/org/apache/geode/cache/PartitionedRegionVersionException.java\n+++ b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\n\n@@ -14,16 +14,20 @@\n  */\n package org.apache.geode.cache;\n \n+import java.util.List;\n+\n /**\n  * Indicates a failure to perform an operation on a Partitioned Region due to\n  * server versions not meeting requirements.\n  *\n  * @since GemFire 5.1\n  */\n-public class PartitionedRegionVersionException extends CacheRuntimeException {\n+public class ServerVersionMismatchException extends CacheRuntimeException {\n   private static final long serialVersionUID = -3004093739855972548L;\n \n-  public PartitionedRegionVersionException() {\n-    super(\"A server's version was too old to a partition region clear\");\n+  public ServerVersionMismatchException(List<String> members, String featureName,\n+                                        String version) {\n+    super(\"A server's \" + members + \" version was too old (< \" + version + \") for : \" + featureName);\n+\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NDgxMQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503444811", "bodyText": "would be nice to have the exception tell which servers are outdated as a verification.", "author": "jinmeiliao", "createdAt": "2020-10-12T17:46:39Z", "path": "geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearMixedServerPartitionedRegion.java", "diffHunk": "@@ -0,0 +1,410 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.internal.cache.rollingupgrade;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.catchThrowable;\n+\n+import java.io.File;\n+import java.lang.reflect.Constructor;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Properties;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.apache.logging.log4j.Logger;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameter;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.junit.runners.Parameterized.UseParametersRunnerFactory;\n+\n+import org.apache.geode.cache.Cache;\n+import org.apache.geode.cache.CacheFactory;\n+import org.apache.geode.cache.GemFireCache;\n+import org.apache.geode.cache.PartitionedRegionVersionException;\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.RegionFactory;\n+import org.apache.geode.cache.RegionShortcut;\n+import org.apache.geode.cache.client.ClientCache;\n+import org.apache.geode.cache.client.ClientCacheFactory;\n+import org.apache.geode.cache.client.ClientRegionShortcut;\n+import org.apache.geode.cache.client.ServerOperationException;\n+import org.apache.geode.cache.server.CacheServer;\n+import org.apache.geode.distributed.DistributedSystem;\n+import org.apache.geode.distributed.internal.DistributionConfig;\n+import org.apache.geode.distributed.internal.membership.InternalDistributedMember;\n+import org.apache.geode.internal.AvailablePortHelper;\n+import org.apache.geode.internal.cache.GemFireCacheImpl;\n+import org.apache.geode.internal.cache.PartitionedRegion;\n+import org.apache.geode.logging.internal.log4j.api.LogService;\n+import org.apache.geode.test.dunit.DistributedTestUtils;\n+import org.apache.geode.test.dunit.Host;\n+import org.apache.geode.test.dunit.IgnoredException;\n+import org.apache.geode.test.dunit.Invoke;\n+import org.apache.geode.test.dunit.NetworkUtils;\n+import org.apache.geode.test.dunit.VM;\n+import org.apache.geode.test.dunit.internal.DUnitLauncher;\n+import org.apache.geode.test.dunit.internal.JUnit4DistributedTestCase;\n+import org.apache.geode.test.junit.runners.CategoryWithParameterizedRunnerFactory;\n+import org.apache.geode.test.version.VersionManager;\n+\n+@RunWith(Parameterized.class)\n+@UseParametersRunnerFactory(CategoryWithParameterizedRunnerFactory.class)\n+public class RollingUpgradePartitionRegionClearMixedServerPartitionedRegion\n+    extends JUnit4DistributedTestCase {\n+\n+  protected static final Logger logger = LogService.getLogger();\n+  protected static GemFireCache cache;\n+  protected static ClientCache clientcache;\n+\n+  @Parameter\n+  public String oldVersion;\n+\n+  @Parameters(name = \"from_v{0}\")\n+  public static Collection<String> data() {\n+    List<String> result = VersionManager.getInstance().getVersionsWithoutCurrent();\n+    if (result.size() < 1) {\n+      throw new RuntimeException(\"No older versions of Geode were found to test against\");\n+    } else {\n+      System.out.println(\"running against these versions: \" + result);\n+    }\n+    return result;\n+  }\n+\n+  @Test\n+  public void testPutAndGetMixedServerPartitionedRegion() throws Exception {\n+    doTestPutAndGetMixedServers(oldVersion);\n+  }\n+\n+  /**\n+   * This test starts up multiple servers from the current code base and multiple servers from the\n+   * old version and executes puts and gets on a new server and old server and verifies that the\n+   * results are present. Note that the puts have overlapping region keys just to test new puts and\n+   * replaces\n+   */\n+  void doTestPutAndGetMixedServers(String oldVersion)\n+      throws Exception {\n+    VM currentServer1 = VM.getVM(VersionManager.CURRENT_VERSION, 0);\n+    VM oldServerAndLocator = VM.getVM(oldVersion, 1);\n+    VM currentServer2 = VM.getVM(VersionManager.CURRENT_VERSION, 2);\n+    VM oldServer2 = VM.getVM(oldVersion, 3);\n+\n+    String regionName = \"aRegion\";\n+\n+    final String serverHostName = NetworkUtils.getServerHostName();\n+    final int port = AvailablePortHelper.getRandomAvailableTCPPort();\n+    oldServerAndLocator.invoke(() -> DistributedTestUtils.deleteLocatorStateFile(port));\n+    try {\n+      final Properties props = getSystemProperties();\n+      props.remove(DistributionConfig.LOCATORS_NAME);\n+\n+      // Fire up the locator and server\n+      oldServerAndLocator.invoke(() -> {\n+        props.put(DistributionConfig.START_LOCATOR_NAME,\n+            \"\" + serverHostName + \"[\" + port + \"]\");\n+        props.put(DistributionConfig.ENABLE_CLUSTER_CONFIGURATION_NAME, \"false\");\n+        cache = createCache(props);\n+        Thread.sleep(5000); // bug in 1.0 - cluster config service not immediately available\n+      });\n+\n+      props.put(DistributionConfig.LOCATORS_NAME, serverHostName + \"[\" + port + \"]\");\n+\n+      // create the cache in all the server VMs.\n+      for (VM vm : Arrays.asList(oldServer2, currentServer1, currentServer2)) {\n+        vm.invoke(() -> {\n+          cache = createCache(props);\n+        });\n+      }\n+      // spin up current version servers\n+      for (VM vm : Arrays.asList(currentServer1, currentServer2)) {\n+        vm.invoke(\n+            () -> assertVersion(cache, VersionManager.getInstance().getCurrentVersionOrdinal()));\n+      }\n+\n+      // create region\n+      for (VM vm : Arrays.asList(currentServer1, currentServer2, oldServerAndLocator, oldServer2)) {\n+        vm.invoke(() -> createRegion(cache, regionName));\n+      }\n+\n+      // put some data in the region to make sure there is something to clear.\n+      putDataSerializableAndVerify(currentServer1, regionName, currentServer2, oldServerAndLocator,\n+          oldServer2);\n+\n+      // invoke Partition Region Clear and verify we didn't touch the old servers.\n+\n+      currentServer1.invoke(() -> {\n+        assertRegionExists(cache, regionName);\n+        PartitionedRegion region = (PartitionedRegion) cache.getRegion(regionName);\n+\n+        Throwable thrown = catchThrowable(region::clear);", "originalCommit": "e72c30e2db1a33a5c887cd39b138ca62b9b20a95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNDEwMA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503524100", "bodyText": "I have changed the exception to ServerVersionMismatchException(members, feature name) it now produces a message \"A server's [oldMember] version was too old for : Partitioned Region Clear\"", "author": "mhansonp", "createdAt": "2020-10-12T20:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MTg0NQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503581845", "bodyText": "would be a good idea to verify that the message contains those two server names that has the old version.", "author": "jinmeiliao", "createdAt": "2020-10-12T23:22:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NDgxMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNzg3OQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r504117879", "bodyText": "Done", "author": "mhansonp", "createdAt": "2020-10-13T17:02:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NDgxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "chunk": "diff --git a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearMixedServerPartitionedRegion.java b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearMixedServerPartitionedRegion.java\nindex d8be7e902b..ec29a47fa0 100644\n--- a/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearMixedServerPartitionedRegion.java\n+++ b/geode-core/src/upgradeTest/java/org/apache/geode/internal/cache/rollingupgrade/RollingUpgradePartitionRegionClearMixedServerPartitionedRegion.java\n\n@@ -36,10 +36,10 @@ import org.junit.runners.Parameterized.UseParametersRunnerFactory;\n import org.apache.geode.cache.Cache;\n import org.apache.geode.cache.CacheFactory;\n import org.apache.geode.cache.GemFireCache;\n-import org.apache.geode.cache.PartitionedRegionVersionException;\n import org.apache.geode.cache.Region;\n import org.apache.geode.cache.RegionFactory;\n import org.apache.geode.cache.RegionShortcut;\n+import org.apache.geode.cache.ServerVersionMismatchException;\n import org.apache.geode.cache.client.ClientCache;\n import org.apache.geode.cache.client.ClientCacheFactory;\n import org.apache.geode.cache.client.ClientRegionShortcut;\n"}}, {"oid": "116d82d204d3344b1432f4fc8be213dd79884b7a", "url": "https://github.com/apache/geode/commit/116d82d204d3344b1432f4fc8be213dd79884b7a", "message": "GEODE-7845: Changing exception thrown to be more detailed and better named.", "committedDate": "2020-10-12T23:08:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MDA2NQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503580065", "bodyText": "this is not correct since this is a new exception", "author": "jinmeiliao", "createdAt": "2020-10-12T23:15:37Z", "path": "geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.cache;\n+\n+import java.util.List;\n+\n+/**\n+ * Indicates a failure to perform an operation on a Partitioned Region due to\n+ * server versions not meeting requirements.\n+ *\n+ * @since GemFire 5.1", "originalCommit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0aa76f2dbd7297987ac98d02c50d982efb331167", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\nindex d8796811d6..7b81f0e247 100644\n--- a/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\n+++ b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\n\n@@ -20,7 +20,7 @@ import java.util.List;\n  * Indicates a failure to perform an operation on a Partitioned Region due to\n  * server versions not meeting requirements.\n  *\n- * @since GemFire 5.1\n+ * @since GEODE 1.14.0\n  */\n public class ServerVersionMismatchException extends CacheRuntimeException {\n   private static final long serialVersionUID = -3004093739855972548L;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MDcyMw==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503580723", "bodyText": "this is still throwing the old exception?", "author": "jinmeiliao", "createdAt": "2020-10-12T23:18:07Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java", "diffHunk": "@@ -288,8 +292,13 @@ protected void releaseClearLockLocal() {\n       return bucketsOperated;\n     }\n \n+    if (!partitionedRegion.allServerVersionsSupportPartitionRegionClear()) {\n+      throw new PartitionedRegionVersionException();", "originalCommit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4NzM2Ng==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503587366", "bodyText": "nope that was a rebase error.", "author": "mhansonp", "createdAt": "2020-10-12T23:42:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MDcyMw=="}], "type": "inlineReview", "revised_code": {"commit": "0aa76f2dbd7297987ac98d02c50d982efb331167", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\nindex f38ea47904..977af51c0b 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegionClear.java\n\n@@ -292,10 +292,6 @@ public class PartitionedRegionClear {\n       return bucketsOperated;\n     }\n \n-    if (!partitionedRegion.allServerVersionsSupportPartitionRegionClear()) {\n-      throw new PartitionedRegionVersionException();\n-    }\n-\n     final Set<InternalDistributedMember> configRecipients =\n         new HashSet<>(partitionedRegion.getRegionAdvisor()\n             .adviseAllPRNodes());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MTYwOA==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503581608", "bodyText": "probably would be a good idea for this exception to only take a string message as an argument. Then situations using this exception is free to construct their own messages.", "author": "jinmeiliao", "createdAt": "2020-10-12T23:21:24Z", "path": "geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.cache;\n+\n+import java.util.List;\n+\n+/**\n+ * Indicates a failure to perform an operation on a Partitioned Region due to\n+ * server versions not meeting requirements.\n+ *\n+ * @since GemFire 5.1\n+ */\n+public class ServerVersionMismatchException extends CacheRuntimeException {\n+  private static final long serialVersionUID = -3004093739855972548L;\n+\n+  public ServerVersionMismatchException(List<String> members, String featureName,\n+                                        String version) {\n+    super(\"A server's \" + members + \" version was too old (< \" + version + \") for : \" + featureName);", "originalCommit": "116d82d204d3344b1432f4fc8be213dd79884b7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4Njg0OQ==", "url": "https://github.com/apache/geode/pull/5577#discussion_r503586849", "bodyText": "At this point you are right, but I also think a little consistency and structure is not a bad thing either. We identified things that we wanted to be in the string. This makes those contractual.", "author": "mhansonp", "createdAt": "2020-10-12T23:40:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4MTYwOA=="}], "type": "inlineReview", "revised_code": {"commit": "0aa76f2dbd7297987ac98d02c50d982efb331167", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\nindex d8796811d6..7b81f0e247 100644\n--- a/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\n+++ b/geode-core/src/main/java/org/apache/geode/cache/ServerVersionMismatchException.java\n\n@@ -20,7 +20,7 @@ import java.util.List;\n  * Indicates a failure to perform an operation on a Partitioned Region due to\n  * server versions not meeting requirements.\n  *\n- * @since GemFire 5.1\n+ * @since GEODE 1.14.0\n  */\n public class ServerVersionMismatchException extends CacheRuntimeException {\n   private static final long serialVersionUID = -3004093739855972548L;\n"}}, {"oid": "0aa76f2dbd7297987ac98d02c50d982efb331167", "url": "https://github.com/apache/geode/commit/0aa76f2dbd7297987ac98d02c50d982efb331167", "message": "Bad rebase fix", "committedDate": "2020-10-12T23:30:20Z", "type": "commit"}, {"oid": "0aa76f2dbd7297987ac98d02c50d982efb331167", "url": "https://github.com/apache/geode/commit/0aa76f2dbd7297987ac98d02c50d982efb331167", "message": "Bad rebase fix", "committedDate": "2020-10-12T23:30:20Z", "type": "forcePushed"}, {"oid": "3e536c37a2472f79e87c1c24a7c604f0db3a3c97", "url": "https://github.com/apache/geode/commit/3e536c37a2472f79e87c1c24a7c604f0db3a3c97", "message": "GEODE-7845: A few more fixes.", "committedDate": "2020-10-13T06:13:32Z", "type": "commit"}]}