{"pr_number": 5240, "pr_title": "GEODE-8242: Add HSTRLEN redis command", "pr_createdAt": "2020-06-11T16:28:20Z", "pr_url": "https://github.com/apache/geode/pull/5240", "timeline": [{"oid": "5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4", "url": "https://github.com/apache/geode/commit/5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4", "message": "GEODE-8242: Add HSTRLEN redis command\n\n- Also define PUBSUB as an unimplemented command\n\nAuthored-by: Jens Deppe <jdeppe@vmware.com>", "committedDate": "2020-06-11T16:26:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw==", "url": "https://github.com/apache/geode/pull/5240#discussion_r438972373", "bodyText": "do a hstrlen on some other existing type (like a string or set) and confirm you get the expected error", "author": "dschneider-pivotal", "createdAt": "2020-06-11T17:58:16Z", "path": "geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java", "diffHunk": "@@ -150,6 +150,15 @@ public void testHDelDeletesKeyWhenHashIsEmpty() {\n     assertThat(jedis.exists(\"farm\")).isFalse();\n   }\n \n+  @Test\n+  public void testHStrLen() {\n+    jedis.hset(\"farm\", \"chicken\", \"little\");\n+\n+    assertThat(jedis.hstrlen(\"farm\", \"chicken\")).isEqualTo(\"little\".length());\n+    assertThat(jedis.hstrlen(\"farm\", \"unknown-field\")).isEqualTo(0);\n+    assertThat(jedis.hstrlen(\"unknown-key\", \"unknown-field\")).isEqualTo(0);\n+  }", "originalCommit": "5ea497c330cf7cc43b23de1dc1fdd3a0efc176f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NDEzNg==", "url": "https://github.com/apache/geode/pull/5240#discussion_r438974136", "bodyText": "do we have a way of testing the wrong number of arguments to a command? Will any of our redis clients even let that happen?", "author": "dschneider-pivotal", "createdAt": "2020-06-11T18:01:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NzAzNQ==", "url": "https://github.com/apache/geode/pull/5240#discussion_r440367035", "bodyText": "We can do something like jedis.sendCommand(Command.STRLEN, \"foo\", \"bar\", ...) but we don't have explicit tests for command input lengths. They are tested implicitly through the parameter requirements defined against each command in RedisCommandType.", "author": "jdeppe-pivotal", "createdAt": "2020-06-15T18:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MjM3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ba53219f1837775d2c452195f63fb355e226698f", "chunk": "diff --git a/geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java b/geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java\nindex 7e26b9d7ba..87bfdf51e1 100755\n--- a/geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java\n+++ b/geode-redis/src/integrationTest/java/org/apache/geode/redis/HashesIntegrationTest.java\n\n@@ -159,6 +161,17 @@ public class HashesIntegrationTest {\n     assertThat(jedis.hstrlen(\"unknown-key\", \"unknown-field\")).isEqualTo(0);\n   }\n \n+  @Test\n+  public void testHStrLen_failsForNonHashes() {\n+    jedis.sadd(\"farm\", \"chicken\");\n+    assertThatThrownBy(() -> jedis.hstrlen(\"farm\", \"chicken\"))\n+        .hasMessageContaining(\"WRONGTYPE\");\n+\n+    jedis.set(\"tractor\", \"John Deere\");\n+    assertThatThrownBy(() -> jedis.hstrlen(\"tractor\", \"chicken\"))\n+        .hasMessageContaining(\"WRONGTYPE\");\n+  }\n+\n   @Test\n   public void testHkeys() {\n     String key = randString();\n"}}, {"oid": "ba53219f1837775d2c452195f63fb355e226698f", "url": "https://github.com/apache/geode/commit/ba53219f1837775d2c452195f63fb355e226698f", "message": "Add test", "committedDate": "2020-06-15T18:28:09Z", "type": "commit"}, {"oid": "3bcb85dc7fcb0895a9321f45a6fd77954d8f43c3", "url": "https://github.com/apache/geode/commit/3bcb85dc7fcb0895a9321f45a6fd77954d8f43c3", "message": "Fix spotless", "committedDate": "2020-06-15T19:40:55Z", "type": "commit"}]}