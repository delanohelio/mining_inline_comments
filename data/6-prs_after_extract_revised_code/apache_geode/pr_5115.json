{"pr_number": 5115, "pr_title": "Feature/GEODE-7414_2_redo", "pr_createdAt": "2020-05-13T23:44:25Z", "pr_url": "https://github.com/apache/geode/pull/5115", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng==", "url": "https://github.com/apache/geode/pull/5115#discussion_r425331746", "bodyText": "I would like to see some javadoc comments explaining both\n\nwhy a breaking change was justified, and\ndocumentation of property names and suitable values for each that need to be in this Properties object", "author": "onichols-pivotal", "createdAt": "2020-05-14T18:02:25Z", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java", "diffHunk": "@@ -29,9 +29,9 @@\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param config the DistributionConfig\n+   * @param properties the Properties\n    */\n-  default void init(DistributionConfig config) {}\n+  default void init(Properties properties) {}", "originalCommit": "e8bb2e5201f8b7d4205dafb0628f5ed97885fbdf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NDI0MA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r425344240", "bodyText": "why a breaking change was justified\n\nThink of this change as taking something that was internal and making it public API. The original introduction of this API was intended to be public but included components that are internal thus making it effectively an internal API.", "author": "pivotal-jbarrett", "createdAt": "2020-05-14T18:24:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NDk1MA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r425344950", "bodyText": "documentation of property names and suitable values for each that need to be in this Properties object\n\n@mivanac If you can name these then I think it justifies the request I had to have a concrete domain object for this API rather than a wide open property bag.", "author": "pivotal-jbarrett", "createdAt": "2020-05-14T18:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY1NTU1OA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r425655558", "bodyText": "As described in https://cwiki.apache.org/confluence/display/GEODE/Introduction+of+SSL+Parameter+Extension,\nidea was to implement generic solution for modification of SSL parameters. If the user wishes to manipulate SSL Parameters they would need to define class which implements new interface.\nAs such, Properties was used as generic input argument, and user will define which parameter he is interested in. For our case, parameter of interest is DISTRIBUTED_SYSTEM_ID.", "author": "mivanac", "createdAt": "2020-05-15T08:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5NTE3Ng==", "url": "https://github.com/apache/geode/pull/5115#discussion_r425895176", "bodyText": "The system properties isn't really a good API though. I really think we should make a concrete class, even if over time we have to evolve it to have more information. It's controlled and strongly typed.", "author": "pivotal-jbarrett", "createdAt": "2020-05-15T15:54:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyMDU2OQ==", "url": "https://github.com/apache/geode/pull/5115#discussion_r431420569", "bodyText": "@pivotal-jbarrett , you are proposing that Properties be replaced with a concrete class, wrapping a map? You did not request a change to the PR, so I'm otherwise ready to merge this as-is, and get it onto the 1.13 branch before it goes out, too.", "author": "rhoughton-pivot", "createdAt": "2020-05-27T20:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMDA4Nw==", "url": "https://github.com/apache/geode/pull/5115#discussion_r432030087", "bodyText": "I\u2019m not sure what the consensus is reading the threads. I see myself and a +1 in favor of something more strongly defined. I see the original PR for just properties with an approval by the same person that +1 the suggested change. shrug", "author": "pivotal-jbarrett", "createdAt": "2020-05-28T18:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMTEwMQ==", "url": "https://github.com/apache/geode/pull/5115#discussion_r432031101", "bodyText": "I suggest we leave the argument type as Properties but mark it @Experimental and get it into 1.13.0 in that state for now", "author": "onichols-pivotal", "createdAt": "2020-05-28T18:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzMzk3Nw==", "url": "https://github.com/apache/geode/pull/5115#discussion_r432033977", "bodyText": "Then why change it at all for 1.13. It\u2019s broken now. It will be broken later if we add @experimental knowing we will change it in the next release. Might as well save the trouble and skip this PR for 1.13 entirely and do it right in 1.14.", "author": "pivotal-jbarrett", "createdAt": "2020-05-28T18:22:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzODMxNw==", "url": "https://github.com/apache/geode/pull/5115#discussion_r432038317", "bodyText": "Using an internal class in a public API is \"more broken\", and we want to address that immediately.  It remains unclear what a long-term solution should look like.  Properties may be distasteful to some but seems sufficient to fix the internal API leakage.  Adding @experimental now allows us to refine the API in the future and hopefully deprecate the use of Properties someday.", "author": "onichols-pivotal", "createdAt": "2020-05-28T18:30:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAzOTU4MA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r432039580", "bodyText": "@pivotal-jbarrett can you share a code snippet of what you think a concrete class might look like?  I don't have the domain expertise to understand how restricting the ssl properties now might bite us in the future if additional properties become needed.", "author": "onichols-pivotal", "createdAt": "2020-05-28T18:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTc0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "48c7bdf8bf54085da324312fa9ddce158b4d89af", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java b/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java\nindex 3fa39b4e7b..d2ef9e5fc5 100644\n--- a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java\n+++ b/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtension.java\n\n@@ -26,12 +28,17 @@ import javax.net.ssl.SSLParameters;\n  */\n \n public interface SSLParameterExtension {\n+  enum SSLParameterExtensionTypes {\n+    DistributedSystemID\n+  }\n+\n   /**\n    * Initialize the SSLParameterExtension.\n    *\n-   * @param properties the Properties\n+   * @param config Seed values for modifying SSL input parameters\n    */\n-  default void init(Properties properties) {}\n+  @Experimental\n+  default void init(final Map<SSLParameterExtensionTypes, Object> config) {}\n \n   default SSLParameters modifySSLClientSocketParameters(SSLParameters parameters) {\n     return parameters;\n"}}, {"oid": "69ca29e656471579b0632665ab5932ce67001e95", "url": "https://github.com/apache/geode/commit/69ca29e656471579b0632665ab5932ce67001e95", "message": "GEODE-7414_2: modify init() method argument (#5040)\n\n(cherry picked from commit 5f9800b291d3a11140eb5a1a972459207e07b50c)", "committedDate": "2020-06-02T21:59:39Z", "type": "commit"}, {"oid": "48c7bdf8bf54085da324312fa9ddce158b4d89af", "url": "https://github.com/apache/geode/commit/48c7bdf8bf54085da324312fa9ddce158b4d89af", "message": "Add exemption for SSLParameterExtension API change\n\nFollowing feedback on the SSLParameterExtension\nAccept a map of <enum,object> as a more definite set of inputs than\n'Properties'. Extend as needed.\n\nAuthored-by: Robert Houghton <rhoughton@pivotal.io>", "committedDate": "2020-06-02T21:59:39Z", "type": "commit"}, {"oid": "48c7bdf8bf54085da324312fa9ddce158b4d89af", "url": "https://github.com/apache/geode/commit/48c7bdf8bf54085da324312fa9ddce158b4d89af", "message": "Add exemption for SSLParameterExtension API change\n\nFollowing feedback on the SSLParameterExtension\nAccept a map of <enum,object> as a more definite set of inputs than\n'Properties'. Extend as needed.\n\nAuthored-by: Robert Houghton <rhoughton@pivotal.io>", "committedDate": "2020-06-02T21:59:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNjE4OA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r434236188", "bodyText": "While this addresses the compile time discovery of the value it doesn't address its typing or issues with runtime existence of the value in the map like a concrete object would. The Map contract on get says it will return null if the key does not exist. At runtime I must check for null results and respond appropriately. A non-null value must then be cast to the correct type at runtime, possibly resulting an a runtime exception. What initializes this Map with default values? If we address all those issue we now have a class.", "author": "pivotal-jbarrett", "createdAt": "2020-06-02T23:54:04Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java", "diffHunk": "@@ -216,17 +217,18 @@ public void uncaughtException(final Thread thread, final Throwable throwable) {\n   }\n \n   public static class MySSLParameterExtension implements SSLParameterExtension {\n-    DistributionConfig config;\n+    Map<SSLParameterExtensionTypes, Object> config;", "originalCommit": "48c7bdf8bf54085da324312fa9ddce158b4d89af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg5Mzg4OA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r434893888", "bodyText": "@pivotal-jbarrett I have submitted changes to address this. Please re-review and provide further feedback.", "author": "rhoughton-pivot", "createdAt": "2020-06-03T22:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNjE4OA=="}], "type": "inlineReview", "revised_code": {"commit": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d", "chunk": "diff --git a/geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java b/geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java\nindex 2045c96861..363cba2b01 100644\n--- a/geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java\n+++ b/geode-core/src/integrationTest/java/org/apache/geode/net/SSLSocketParameterExtensionIntegrationTest.java\n\n@@ -217,18 +216,18 @@ public class SSLSocketParameterExtensionIntegrationTest {\n   }\n \n   public static class MySSLParameterExtension implements SSLParameterExtension {\n-    Map<SSLParameterExtensionTypes, Object> config;\n+    SSLParameterExtensionContext context;\n \n     @Override\n-    public void init(final Map<SSLParameterExtensionTypes, Object> seedConfig) {\n-      config = seedConfig;\n+    public void init(final SSLParameterExtensionContext seedContext) {\n+      context = seedContext;\n     }\n \n     @Override\n     public SSLParameters modifySSLClientSocketParameters(SSLParameters parameters) {\n       List<SNIServerName> serverNames = new ArrayList<>(1);\n       SNIHostName serverName =\n-          new SNIHostName(config.get(SSLParameterExtensionTypes.DistributedSystemID).toString());\n+          new SNIHostName(String.valueOf(context.getDistributedSystemId()));\n       serverNames.add(serverName);\n       parameters.setServerNames(serverNames);\n       return parameters;\n"}}, {"oid": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d", "url": "https://github.com/apache/geode/commit/4787ff7e5e3b781d35c1d00e44625564a0fbf80d", "message": "Applying feedback to use a real class to hold TLS context", "committedDate": "2020-06-03T21:05:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODQ2OQ==", "url": "https://github.com/apache/geode/pull/5115#discussion_r434918469", "bodyText": "is it necessary for this to be a mutable class?  I don't see setDistributedSystemId called anywhere.  If the constructor and getter are sufficient, I would discourage a setter...", "author": "onichols-pivotal", "createdAt": "2020-06-03T23:54:10Z", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;\n+\n+public class SSLParameterExtensionContextImpl implements SSLParameterExtensionContext {\n+  private int distributedSystemId;\n+\n+  public SSLParameterExtensionContextImpl(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }\n+\n+  @Override\n+  public int getDistributedSystemId() {\n+    return distributedSystemId;\n+  }\n+\n+  public void setDistributedSystemId(int distributedSystemIdInput) {\n+    distributedSystemId = distributedSystemIdInput;\n+  }", "originalCommit": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzNzg3OA==", "url": "https://github.com/apache/geode/pull/5115#discussion_r435337878", "bodyText": "At the moment, with only one value contained, there is not a compelling reason to need a setter. But I assume it will be expanded in the future to contain other context parameters for SSL, and that users will not want to pass (n) number or arguments into the constructor. Thus, a setter. Or we can over-engineer (IMO) and create a builder for a class containing one value.\nThat said, maybe the setter at this stage is also over-engineering.", "author": "rhoughton-pivot", "createdAt": "2020-06-04T15:15:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxODQ2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "faf236f18c1a83cc73ef01a580f2f297beca16ee", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java b/geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\nsimilarity index 88%\nrename from geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java\nrename to geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\nindex 8b0c428059..5a9db309f2 100644\n--- a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java\n+++ b/geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\n\n@@ -12,7 +12,9 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n-package org.apache.geode.net;\n+package org.apache.geode.net.internal;\n+\n+import org.apache.geode.net.SSLParameterExtensionContext;\n \n public class SSLParameterExtensionContextImpl implements SSLParameterExtensionContext {\n   private int distributedSystemId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg==", "url": "https://github.com/apache/geode/pull/5115#discussion_r435346406", "bodyText": "The impl class needs to be in an \"internal\" package for convention or made package private to the factory that creates it.", "author": "pivotal-jbarrett", "createdAt": "2020-06-04T15:26:38Z", "path": "geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+package org.apache.geode.net;", "originalCommit": "4787ff7e5e3b781d35c1d00e44625564a0fbf80d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1Nzk5MQ==", "url": "https://github.com/apache/geode/pull/5115#discussion_r435357991", "bodyText": "Thank you. I'll change the package.", "author": "rhoughton-pivot", "createdAt": "2020-06-04T15:40:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MjM4Mw==", "url": "https://github.com/apache/geode/pull/5115#discussion_r435362383", "bodyText": "Moving this to internal lessens the impact of removing the setter at this stage. I'll do that as well.", "author": "rhoughton-pivot", "createdAt": "2020-06-04T15:46:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0NjQwNg=="}], "type": "inlineReview", "revised_code": {"commit": "faf236f18c1a83cc73ef01a580f2f297beca16ee", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java b/geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\nsimilarity index 88%\nrename from geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java\nrename to geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\nindex 8b0c428059..5a9db309f2 100644\n--- a/geode-core/src/main/java/org/apache/geode/net/SSLParameterExtensionContextImpl.java\n+++ b/geode-core/src/main/java/org/apache/geode/net/internal/SSLParameterExtensionContextImpl.java\n\n@@ -12,7 +12,9 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n-package org.apache.geode.net;\n+package org.apache.geode.net.internal;\n+\n+import org.apache.geode.net.SSLParameterExtensionContext;\n \n public class SSLParameterExtensionContextImpl implements SSLParameterExtensionContext {\n   private int distributedSystemId;\n"}}, {"oid": "faf236f18c1a83cc73ef01a580f2f297beca16ee", "url": "https://github.com/apache/geode/commit/faf236f18c1a83cc73ef01a580f2f297beca16ee", "message": "move SSLParameterExtensionContextImpl to an internal package", "committedDate": "2020-06-04T15:59:43Z", "type": "commit"}, {"oid": "c09126fe354b7d4a30b682e0b0e38589046e08a6", "url": "https://github.com/apache/geode/commit/c09126fe354b7d4a30b682e0b0e38589046e08a6", "message": "prune un-needed value from exception list", "committedDate": "2020-06-04T16:23:00Z", "type": "commit"}, {"oid": "3ae8afd93fa37daa8f01c7b63bf84e69068b9677", "url": "https://github.com/apache/geode/commit/3ae8afd93fa37daa8f01c7b63bf84e69068b9677", "message": "fixup - remove now-internal javadoc from assembly", "committedDate": "2020-06-05T17:38:46Z", "type": "commit"}]}