{"pr_number": 5744, "pr_title": "GEODE-8670: ReconnectDUnitTest is hiding a NullPointerException", "pr_createdAt": "2020-11-12T21:57:57Z", "pr_url": "https://github.com/apache/geode/pull/5744", "timeline": [{"oid": "b0634f843b8a26b40855583979540cf66e1e6232", "url": "https://github.com/apache/geode/commit/b0634f843b8a26b40855583979540cf66e1e6232", "message": "GEODE-8670: ReconnectDUnitTest is hiding a NullPointerException\n\n1. Fixed all of the IgnorableException problems in ReconnectDUnitTest\n2. Modified InternalLocator to avoid throwing a NullPointerException and\n   added a test for this change", "committedDate": "2020-11-12T21:55:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1OTc5Nw==", "url": "https://github.com/apache/geode/pull/5744#discussion_r522459797", "bodyText": "I'm not saying this test is invalid, but it doesn't validate the fix below in InternalLocator i.e. if one comments out that code the test still passes...", "author": "echobravopapa", "createdAt": "2020-11-12T22:12:41Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -137,6 +137,18 @@ public void startedLocatorHasLocator() throws IOException {\n     assertThat(InternalLocator.hasLocator()).isTrue();\n   }\n \n+  @Test", "originalCommit": "b0634f843b8a26b40855583979540cf66e1e6232", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA1NDAwNg==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523054006", "bodyText": "I think that, in fact, the test is invalid.  I'll post a better one.", "author": "bschuchardt", "createdAt": "2020-11-13T16:16:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1OTc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "79c86a8cb76ed4e689347a29b6644d3b5c01d3ab", "chunk": "diff --git a/geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java b/geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java\nindex 4915d306d4..09efe36b35 100644\n--- a/geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java\n+++ b/geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java\n\n@@ -137,18 +137,6 @@ public class InternalLocatorIntegrationTest {\n     assertThat(InternalLocator.hasLocator()).isTrue();\n   }\n \n-  @Test\n-  public void startedLocatorDoesNotAttemptReconnect() throws IOException, InterruptedException {\n-    // start a locator that's not part of a cluster\n-    final boolean joinCluster = false;\n-    internalLocator = InternalLocator.startLocator(port, logFile, logWriter,\n-        securityLogWriter, bindAddress, joinCluster,\n-        distributedSystemProperties, hostnameForClients, workingDirectory);\n-    port = internalLocator.getPort();\n-    // the locator shouldn't attempt a reconnect because it's not part of a cluster\n-    assertThat(internalLocator.attemptReconnect()).isFalse();\n-  }\n-\n   @Test\n   public void stoppedLocatorIsStopped() throws IOException {\n     internalLocator = InternalLocator.startLocator(port, logFile, logWriter,\n"}}, {"oid": "79c86a8cb76ed4e689347a29b6644d3b5c01d3ab", "url": "https://github.com/apache/geode/commit/79c86a8cb76ed4e689347a29b6644d3b5c01d3ab", "message": "fixing invalid test - had to move it to a new class to use SystemOutRule\n\nthe rule wasn't working for some reason when I added it to\nInternalLocatorIntegrationTest", "committedDate": "2020-11-13T16:41:32Z", "type": "commit"}, {"oid": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "url": "https://github.com/apache/geode/commit/30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "message": "removed use of SystemOutRule, which wasn't working in Stress tests", "committedDate": "2020-11-13T19:38:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDM1Mg==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280352", "bodyText": "Now that the (broken) regexp is no longer hiding exceptions, and you've explicitly added expectations for all of them, this test serves a good documentation for these exceptions and their role in reconnect.", "author": "Bill", "createdAt": "2020-11-13T23:15:38Z", "path": "geode-core/src/distributedTest/java/org/apache/geode/cache30/ReconnectDUnitTest.java", "diffHunk": "@@ -1115,6 +1118,9 @@ public String description() {\n    */\n   @Test\n   public void testReconnectFailsDueToBadCacheXML() throws Exception {\n+    IgnoredException.addIgnoredException(DistributedSystemDisconnectedException.class);\n+    IgnoredException.addIgnoredException(\"Cause parsing to fail\");\n+    IgnoredException.addIgnoredException(\"Exception while initializing an instance\");", "originalCommit": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDUwNQ==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280505", "bodyText": "I assume this is done to speed up the test. I like it!\nBut shouldn't we be restoring the system property after the test runs? I believe we have a JUnit rule for that?", "author": "Bill", "createdAt": "2020-11-13T23:16:15Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -69,6 +70,8 @@\n \n   @Before\n   public void setUp() throws IOException {\n+    // set a property to tell membership to create a new cluster\n+    System.setProperty(GMSJoinLeave.BYPASS_DISCOVERY_PROPERTY, \"true\");", "originalCommit": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NDI4Ng==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523284286", "bodyText": "I just noticed that @bschuchardt did add a RestoreSystemProperties rule so this is all good now", "author": "Bill", "createdAt": "2020-11-13T23:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDUwNQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MDc0OA==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523280748", "bodyText": "My read of InternalLocator is that it's ok to provide null log writers to the constructor \u2713", "author": "Bill", "createdAt": "2020-11-13T23:17:10Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -97,16 +118,16 @@ public void constructs() {\n \n     assertThatCode(() -> {\n       internalLocator =\n-          new InternalLocator(port, loggingSession, logFile, logWriter, securityLogWriter,\n+          new InternalLocator(port, loggingSession, logFile, null, null,", "originalCommit": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4MjY4MQ==", "url": "https://github.com/apache/geode/pull/5744#discussion_r523282681", "bodyText": "I guess we had the reconnect cases covered (in the DUnit test) and this new test is for the no-reconnect case \u2713", "author": "Bill", "createdAt": "2020-11-13T23:24:43Z", "path": "geode-core/src/integrationTest/java/org/apache/geode/distributed/internal/InternalLocatorIntegrationTest.java", "diffHunk": "@@ -88,6 +91,24 @@ public void tearDown() {\n     }\n   }\n \n+  @Test\n+  public void startedLocatorDoesNotAttemptReconnect() throws IOException, InterruptedException {\n+    // start a locator that's not part of a cluster\n+    final boolean joinCluster = false;\n+    internalLocator = InternalLocator.startLocator(port, logFile, null,\n+        null, bindAddress, joinCluster,\n+        distributedSystemProperties, hostnameForClients, workingDirectory);\n+    port = internalLocator.getPort();\n+    // the locator shouldn't attempt a reconnect because it's not part of a cluster\n+    internalLocator.stoppedForReconnect = true;\n+    assertThat(internalLocator.attemptReconnect()).isFalse();\n+    String output = FileUtils.readFileToString(logFile, Charset.defaultCharset());\n+    assertThat(output).isNotEmpty();\n+    assertThat(output).contains(InternalLocator.IGNORING_RECONNECT_REQUEST);\n+  }", "originalCommit": "30d03d70b6bf160d882c5c5bf1b9493f8462f21c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}