{"pr_number": 4920, "pr_title": "GEODE-7852: SNI extension support", "pr_createdAt": "2020-04-07T21:46:42Z", "pr_url": "https://github.com/apache/geode/pull/4920", "timeline": [{"oid": "276582533c885092d8e1d076d426a4c9f2e0b908", "url": "https://github.com/apache/geode/commit/276582533c885092d8e1d076d426a4c9f2e0b908", "message": "GEODE-7852: SNI extension support\n\nModified SNISocketFactory so it can be used in cache.xml\nAdded a test for the new cache.xml element.\nUpdated docs for cache.xml and updated client configuration\ninstructions.", "committedDate": "2020-04-07T21:27:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNzk1MA==", "url": "https://github.com/apache/geode/pull/4920#discussion_r405137950", "bodyText": "It isn't obvious from reading this test class, where that foo/bar entry came from and why we expect it to be there. Of course it was added by geode-starter.gfsh, but that was incidental.", "author": "Bill", "createdAt": "2020-04-07T21:57:53Z", "path": "geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java", "diffHunk": "@@ -97,5 +97,6 @@ public void connectToSNIProxyDocker() {\n     region.destroy(\"hello\");\n     region.put(\"hello\", \"world\");\n     assertThat(region.get(\"hello\")).isEqualTo(\"world\");\n+    assertThat(region.get(\"foo\")).isEqualTo(\"bar\");", "originalCommit": "276582533c885092d8e1d076d426a4c9f2e0b908", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3NjQ1NQ==", "url": "https://github.com/apache/geode/pull/4920#discussion_r405576455", "bodyText": "I've added comments about the region \"jellyfish\" and the entry \"bar\" being created by the gfsh script", "author": "bschuchardt", "createdAt": "2020-04-08T14:40:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzNzk1MA=="}], "type": "inlineReview", "revised_code": {"commit": "1260318f02dfb5e84b8e85d744a133217b1abe9f", "chunk": "diff --git a/geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java b/geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java\nindex 4f47fd05a3..8c8f39792e 100644\n--- a/geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java\n+++ b/geode-assembly/src/acceptanceTest/java/org/apache/geode/client/sni/ClientSNIAcceptanceTest.java\n\n@@ -91,12 +91,17 @@ public class ClientSNIAcceptanceTest {\n         .setPoolSocketFactory(ProxySocketFactories.sni(\"localhost\",\n             proxyPort))\n         .create();\n+    // the geode-starter.gfsh script has created a Region named \"jellyfish\" on the\n+    // server sitting behind the haproxy gateway. Show that an empty client cache can\n+    // put something in that region and then retrieve it.\n     Region<String, String> region =\n         cache.<String, String>createClientRegionFactory(ClientRegionShortcut.PROXY)\n             .create(\"jellyfish\");\n     region.destroy(\"hello\");\n     region.put(\"hello\", \"world\");\n     assertThat(region.get(\"hello\")).isEqualTo(\"world\");\n+    // the geode-starter.gfsh script put an entry named \"foo\" into the region with the\n+    // value \"bar\"\n     assertThat(region.get(\"foo\")).isEqualTo(\"bar\");\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NjgyMQ==", "url": "https://github.com/apache/geode/pull/4920#discussion_r405146821", "bodyText": "ooh good catch!", "author": "Bill", "createdAt": "2020-04-07T22:19:18Z", "path": "geode-dunit/src/main/java/org/apache/geode/test/dunit/internal/ProcessManager.java", "diffHunk": "@@ -258,8 +258,10 @@ private String removeModuleFromGradlePath(String classpath, String module) {\n       // remove current-version product classes and resources from the classpath\n       dunitClasspath =\n           removeModulesFromPath(dunitClasspath, \"geode-common\", \"geode-core\", \"geode-cq\",\n-              \"geode-http-service\", \"geode-json\", \"geode-log4j\", \"geode-lucene\",\n-              \"geode-serialization\", \"geode-wan\", \"geode-gfsh\");\n+              \"geode-http-service\", \"geode-json\", \"geode-log4j\", \"geode-lucene\", \"geode-tcp-server\",\n+              \"geode-membership\", \"geode-management\", \"geode-logging\", \"geode-web\",\n+              \"geode-rebalancer\",\n+              \"geode-serialization\", \"geode-wan\", \"geode-gfsh\", \"geode-lucene\");", "originalCommit": "276582533c885092d8e1d076d426a4c9f2e0b908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47cc74f22714ae8d598c337f4ab92e72fe02d28e", "chunk": "diff --git a/geode-dunit/src/main/java/org/apache/geode/test/dunit/internal/ProcessManager.java b/geode-dunit/src/main/java/org/apache/geode/test/dunit/internal/ProcessManager.java\nindex 73af9ddabe..209c822c43 100755\n--- a/geode-dunit/src/main/java/org/apache/geode/test/dunit/internal/ProcessManager.java\n+++ b/geode-dunit/src/main/java/org/apache/geode/test/dunit/internal/ProcessManager.java\n\n@@ -257,11 +257,10 @@ class ProcessManager implements ChildVMLauncher {\n     } else {\n       // remove current-version product classes and resources from the classpath\n       dunitClasspath =\n-          removeModulesFromPath(dunitClasspath, \"geode-common\", \"geode-core\", \"geode-cq\",\n-              \"geode-http-service\", \"geode-json\", \"geode-log4j\", \"geode-lucene\", \"geode-tcp-server\",\n-              \"geode-membership\", \"geode-management\", \"geode-logging\", \"geode-web\",\n-              \"geode-rebalancer\",\n-              \"geode-serialization\", \"geode-wan\", \"geode-gfsh\", \"geode-lucene\");\n+          dunitClasspath =\n+              removeModulesFromPath(dunitClasspath, \"geode-common\", \"geode-core\", \"geode-cq\",\n+                  \"geode-http-service\", \"geode-json\", \"geode-log4j\", \"geode-lucene\",\n+                  \"geode-serialization\", \"geode-wan\", \"geode-gfsh\");\n       classPath = versionManager.getClasspath(version) + File.pathSeparator + dunitClasspath;\n     }\n \n"}}, {"oid": "1260318f02dfb5e84b8e85d744a133217b1abe9f", "url": "https://github.com/apache/geode/commit/1260318f02dfb5e84b8e85d744a133217b1abe9f", "message": "addressing reviews", "committedDate": "2020-04-08T14:37:54Z", "type": "commit"}, {"oid": "d301de9c6bd1d145285a4eb1435ece9e9d254820", "url": "https://github.com/apache/geode/commit/d301de9c6bd1d145285a4eb1435ece9e9d254820", "message": "addressing reviews", "committedDate": "2020-04-08T17:38:19Z", "type": "commit"}, {"oid": "381714eb08c454894fe442d1df21c23adad5bc4e", "url": "https://github.com/apache/geode/commit/381714eb08c454894fe442d1df21c23adad5bc4e", "message": "fixing new assertions in unit test and retriggering CI tasks", "committedDate": "2020-04-08T21:47:20Z", "type": "commit"}, {"oid": "47cc74f22714ae8d598c337f4ab92e72fe02d28e", "url": "https://github.com/apache/geode/commit/47cc74f22714ae8d598c337f4ab92e72fe02d28e", "message": "reverting ProcessManager changes - evidently the rolling upgrade test code needs some of this stuff", "committedDate": "2020-04-08T23:08:45Z", "type": "commit"}]}