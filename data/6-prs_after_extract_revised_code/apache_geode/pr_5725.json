{"pr_number": 5725, "pr_title": "GEODE-8664: Nest errors in DistributionImpl.start", "pr_createdAt": "2020-11-10T12:17:35Z", "pr_url": "https://github.com/apache/geode/pull/5725", "timeline": [{"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc", "url": "https://github.com/apache/geode/commit/d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc", "message": "GEODE-8664: Nest errors in DistributionImpl.start\n\n - If while calling DistributionImpl.start there was either a\n   MembershipConfigurationException or MemberStartupException exceptions, its\n   original cause was not propagated, therefore being unable to properly\n   tackling issues on startup.\n - This commit propagates the cause for both exceptions.\n - Also 2 JUint test were added to make sure this is working.", "committedDate": "2020-11-10T12:51:40Z", "type": "commit"}, {"oid": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc", "url": "https://github.com/apache/geode/commit/d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc", "message": "GEODE-8664: Nest errors in DistributionImpl.start\n\n - If while calling DistributionImpl.start there was either a\n   MembershipConfigurationException or MemberStartupException exceptions, its\n   original cause was not propagated, therefore being unable to properly\n   tackling issues on startup.\n - This commit propagates the cause for both exceptions.\n - Also 2 JUint test were added to make sure this is working.", "committedDate": "2020-11-10T12:51:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw==", "url": "https://github.com/apache/geode/pull/5725#discussion_r520744117", "bodyText": "JUnit has ExpectedException which I think works better than try catch statements.  There are some examples in the Geode code base if you want some inspiration", "author": "moleske", "createdAt": "2020-11-10T17:33:01Z", "path": "geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java", "diffHunk": "@@ -204,4 +207,30 @@ public void testSendToEmptyListIsRejected() throws Exception {\n     distribution.send(emptyList, m);\n     verify(membership, never()).send(any(), any());\n   }\n+\n+  @Test\n+  public void testExceptionNestedOnStartConfigError() throws Exception {\n+    Throwable cause = new RuntimeException(\"Exception cause\");\n+    Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n+    doThrow(exception).when(membership).start();\n+    try {", "originalCommit": "d44c71cd12cabb53ec07a4f77fd0eaddad5ceddc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NzI0Ng==", "url": "https://github.com/apache/geode/pull/5725#discussion_r520747246", "bodyText": "Thanks for the comment! TBH I\u2019ve never used JUnit or mockito before, so any comments are welcome!", "author": "gaussianrecurrence", "createdAt": "2020-11-10T17:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1MDMzNw==", "url": "https://github.com/apache/geode/pull/5725#discussion_r520750337", "bodyText": "Always glad to provide new learning opportunities for folks \ud83d\ude04\nPlus no time like the present to learn new things!", "author": "moleske", "createdAt": "2020-11-10T17:42:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg3MzYwMw==", "url": "https://github.com/apache/geode/pull/5725#discussion_r520873603", "bodyText": "AssertJ also has a very convenient assertThatThrownBy() which lets you assert on the type of exception thrown as well as specific messages, causes, etc. There are numerous examples throughout the test code.", "author": "jdeppe-pivotal", "createdAt": "2020-11-10T21:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5NjM0NQ==", "url": "https://github.com/apache/geode/pull/5725#discussion_r520896345", "bodyText": "Finally went for AssertJ choice. Now the test is more more clear. Thanks!", "author": "gaussianrecurrence", "createdAt": "2020-11-10T21:50:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NDExNw=="}], "type": "inlineReview", "revised_code": {"commit": "7bcccc932b678041a857bd4eb339cb016f36ccfe", "chunk": "diff --git a/geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java b/geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java\nindex 394ab742a0..e7734c3804 100644\n--- a/geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java\n+++ b/geode-core/src/test/java/org/apache/geode/distributed/internal/DistributionTest.java\n\n@@ -213,12 +214,10 @@ public class DistributionTest {\n     Throwable cause = new RuntimeException(\"Exception cause\");\n     Throwable exception = new MembershipConfigurationException(\"Test exception\", cause);\n     doThrow(exception).when(membership).start();\n-    try {\n-      distribution.start();\n-      fail(\"expected start to throw an exception\");\n-    } catch (GemFireConfigException e) {\n-      assertEquals(e.getCause(), cause);\n-    }\n+\n+    assertThatThrownBy(() -> distribution.start())\n+        .isInstanceOf(GemFireConfigException.class)\n+        .hasCauseInstanceOf(cause.getClass());\n   }\n \n   @Test\n"}}, {"oid": "7bcccc932b678041a857bd4eb339cb016f36ccfe", "url": "https://github.com/apache/geode/commit/7bcccc932b678041a857bd4eb339cb016f36ccfe", "message": "GEODE-8664: Revision 2\n\n - Replaced try/catch blocks by AssertJ semantics, leading to a much more clear\n   unit test.", "committedDate": "2020-11-10T21:48:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA==", "url": "https://github.com/apache/geode/pull/5725#discussion_r521485764", "bodyText": "You should just use the exception here instead of e.getCause() otherwise you're discarding one of the stack frames in the exception chain.", "author": "jdeppe-pivotal", "createdAt": "2020-11-11T16:35:19Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());", "originalCommit": "7bcccc932b678041a857bd4eb339cb016f36ccfe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MDExMQ==", "url": "https://github.com/apache/geode/pull/5725#discussion_r521490111", "bodyText": "Wouldn't the message then be duplicated? I am asking out of ignorance :S\nI mean probably it should be something like:\nthrow new GemFireConfigException(\"Configuration exception while starting up distribution\", e);\n?", "author": "gaussianrecurrence", "createdAt": "2020-11-11T16:41:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY3OTQ0Mw==", "url": "https://github.com/apache/geode/pull/5725#discussion_r521679443", "bodyText": "The actual message (string) would be duplicated, but that's OK. You wouldn't be losing part of the full stack trace however. It's not a big deal since you're typically only concerned with the root cause, but it's always better to leave information which may be helpful for debugging.\nAnd, yes your example throw is what I'd suggest. That's also what happens just a few lines higher up.", "author": "jdeppe-pivotal", "createdAt": "2020-11-11T22:35:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "9d3880c55948a2b3dfc322078b21471aa53b1615", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java b/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\nindex 78bcbcf10a..bc0ace36e1 100644\n--- a/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\n+++ b/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\n\n@@ -181,9 +181,9 @@ public class DistributionImpl implements Distribution {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage(), e.getCause());\n+      throw new GemFireConfigException(\"Problem configuring membership services\", e);\n     } catch (MemberStartupException e) {\n-      throw new SystemConnectException(e.getMessage(), e.getCause());\n+      throw new SystemConnectException(\"Problem starting up membership services\", e);\n     } catch (RuntimeException e) {\n       logger.error(\"Unexpected problem starting up membership services\", e);\n       throw new SystemConnectException(\"Problem starting up membership services: \" + e.getMessage()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ4NTg5Ng==", "url": "https://github.com/apache/geode/pull/5725#discussion_r521485896", "bodyText": "Ditto", "author": "jdeppe-pivotal", "createdAt": "2020-11-11T16:35:30Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java", "diffHunk": "@@ -181,9 +181,9 @@ public void start() {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage());\n+      throw new GemFireConfigException(e.getMessage(), e.getCause());\n     } catch (MemberStartupException e) {\n-      throw new SystemConnectException(e.getMessage());\n+      throw new SystemConnectException(e.getMessage(), e.getCause());", "originalCommit": "7bcccc932b678041a857bd4eb339cb016f36ccfe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9d3880c55948a2b3dfc322078b21471aa53b1615", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java b/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\nindex 78bcbcf10a..bc0ace36e1 100644\n--- a/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\n+++ b/geode-core/src/main/java/org/apache/geode/distributed/internal/DistributionImpl.java\n\n@@ -181,9 +181,9 @@ public class DistributionImpl implements Distribution {\n       throw new GemFireSecurityException(e.getMessage(),\n           e);\n     } catch (MembershipConfigurationException e) {\n-      throw new GemFireConfigException(e.getMessage(), e.getCause());\n+      throw new GemFireConfigException(\"Problem configuring membership services\", e);\n     } catch (MemberStartupException e) {\n-      throw new SystemConnectException(e.getMessage(), e.getCause());\n+      throw new SystemConnectException(\"Problem starting up membership services\", e);\n     } catch (RuntimeException e) {\n       logger.error(\"Unexpected problem starting up membership services\", e);\n       throw new SystemConnectException(\"Problem starting up membership services: \" + e.getMessage()\n"}}, {"oid": "9d3880c55948a2b3dfc322078b21471aa53b1615", "url": "https://github.com/apache/geode/commit/9d3880c55948a2b3dfc322078b21471aa53b1615", "message": "GEODE-8664: Revision 3\n\n - Changing exception nesting so the actual exception is propagated, rather than\n   its cause.\n - JUnit tests have been changed accordingly.", "committedDate": "2020-11-11T22:50:26Z", "type": "commit"}]}