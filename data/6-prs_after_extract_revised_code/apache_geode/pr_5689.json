{"pr_number": 5689, "pr_title": "GEODE-8667: Duplicate online Oplog compaction after offline Oplog compaction", "pr_createdAt": "2020-10-29T22:10:42Z", "pr_url": "https://github.com/apache/geode/pull/5689", "timeline": [{"oid": "f8a614ad045b1b0b6c6336b579a1f13c91c83af1", "url": "https://github.com/apache/geode/commit/f8a614ad045b1b0b6c6336b579a1f13c91c83af1", "message": "First attempt to fix the bug", "committedDate": "2020-10-29T22:08:45Z", "type": "commit"}, {"oid": "c54bb79dd9439fd83c19b4380e67190c1300b3ec", "url": "https://github.com/apache/geode/commit/c54bb79dd9439fd83c19b4380e67190c1300b3ec", "message": "WIP", "committedDate": "2020-11-04T02:57:20Z", "type": "commit"}, {"oid": "c696fce4411b2fc44cd9ef0bb5f77698bb225510", "url": "https://github.com/apache/geode/commit/c696fce4411b2fc44cd9ef0bb5f77698bb225510", "message": "Refactor the test", "committedDate": "2020-11-06T00:58:44Z", "type": "commit"}, {"oid": "fb77f01cc840e8aa70a834a99986842736d274c4", "url": "https://github.com/apache/geode/commit/fb77f01cc840e8aa70a834a99986842736d274c4", "message": "Fix a test bug", "committedDate": "2020-11-06T01:18:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw==", "url": "https://github.com/apache/geode/pull/5689#discussion_r519074167", "bodyText": "This fix is incorrect. It only caused the empty oplog (created by the offline compaction) is not deleted by the recovery's auto compaction.\nI modified the dunit test a little bit and proved it.\nUnfortunately, there's no flag or status to show that a compaction is just finished. Even we want to use the empty oplog created by offline compaction, we need to careful arrange the logic. Such as:\nchange  needsCompaction to return int. 1: need to compact, -1: no need to compact, 0: there's one empty file,  only need to delete it.\nBut maybe there's better ideas.", "author": "gesterzhou", "createdAt": "2020-11-07T01:07:47Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java", "diffHunk": "@@ -5789,9 +5789,8 @@ boolean needsCompaction() {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n-    } else {", "originalCommit": "fb77f01cc840e8aa70a834a99986842736d274c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4ODU0MQ==", "url": "https://github.com/apache/geode/pull/5689#discussion_r533588541", "bodyText": "The new fix is good.\nShould use \"} else if (hasNoLiveValues()) {\" instead.\nAnd it's better to add a few comments here.", "author": "gesterzhou", "createdAt": "2020-12-01T17:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyMjczMQ==", "url": "https://github.com/apache/geode/pull/5689#discussion_r533822731", "bodyText": "Darrel and I discussed again. We might need to re-fix it the other way:\nSince the trouble is caused by offline compaction wrote totalCount=0 into krf, there's a potential bug that we restart with totalCount=0, but totalLiveCount=1, then with your current code change this oplog will never get a chance to compact until the only live entry is destroyed.\nSo a better fix maybe: when restart and found totalCount=0, then update totalCount to be totalLiveCount. With this fix, you don't need to change needsCompaction() any more.", "author": "gesterzhou", "createdAt": "2020-12-02T00:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNDIyNg==", "url": "https://github.com/apache/geode/pull/5689#discussion_r535734226", "bodyText": "I have changed readKrf() function. So that at the end of this function, when totalCount and totalLiveCount is updated after reading krf file, it will check if totalCount is 0 and totalLiveCount is greater than 0, and update totalCount accordingly.", "author": "jchen21", "createdAt": "2020-12-03T23:57:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA3NDE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f45c746db001fc0b0c0371e3da3c8fb323da9ad2", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java b/geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java\nindex 20c87fb636..f6daa3a1d6 100755\n--- a/geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/Oplog.java\n\n@@ -5789,6 +5789,8 @@ public class Oplog implements CompactableOplog, Flushable {\n       if (((rv / (double) rvHWMtmp) * 100) <= parent.getCompactionThreshold()) {\n         return true;\n       }\n+    } else if (this.totalLiveCount.get() <= 0) {\n+      return true;\n     }\n \n     return false;\n"}}, {"oid": "f45c746db001fc0b0c0371e3da3c8fb323da9ad2", "url": "https://github.com/apache/geode/commit/f45c746db001fc0b0c0371e3da3c8fb323da9ad2", "message": "Add more condition check for needsCompaction\n\nAfter offline compaction, the Oplog totalCount is zero,\nand totalLiveCount is greater than zero, then there is no need for compaction.\n\nWhen totalCount is zero, and totalLiveCount is less than or equals to zero,\nwhich indicates an empty Oplog, then compaction is needed.", "committedDate": "2020-11-19T01:48:56Z", "type": "commit"}, {"oid": "ff18c46b45f927c7970f4e95a1e1b42197be49a8", "url": "https://github.com/apache/geode/commit/ff18c46b45f927c7970f4e95a1e1b42197be49a8", "message": "Update totalCount during recovery\n\nIf totalCount == 0 and totalLiveCount > 0, which indicates offline\ncompaction is done for this Oplog. Update totalCount to the value\nof totalLiveCount.", "committedDate": "2020-12-03T23:48:58Z", "type": "commit"}, {"oid": "f9658616a186dc3b8274083f77fcfdab6922084d", "url": "https://github.com/apache/geode/commit/f9658616a186dc3b8274083f77fcfdab6922084d", "message": "Minor change.", "committedDate": "2020-12-03T23:52:20Z", "type": "commit"}, {"oid": "8a6c8d3993303bfb310466e34ae0c2e0ea9191c6", "url": "https://github.com/apache/geode/commit/8a6c8d3993303bfb310466e34ae0c2e0ea9191c6", "message": "Use a local variable for the value of AtomicLong", "committedDate": "2020-12-04T00:04:22Z", "type": "commit"}, {"oid": "fc05c526d65b103004010a51941caa5e43cd18d4", "url": "https://github.com/apache/geode/commit/fc05c526d65b103004010a51941caa5e43cd18d4", "message": "Refactor the test", "committedDate": "2020-12-04T23:09:08Z", "type": "commit"}, {"oid": "02bcde5e45402154dcc15b25f72f839deccab496", "url": "https://github.com/apache/geode/commit/02bcde5e45402154dcc15b25f72f839deccab496", "message": "Minor refactoring", "committedDate": "2020-12-15T01:34:57Z", "type": "commit"}]}