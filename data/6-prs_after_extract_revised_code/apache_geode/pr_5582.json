{"pr_number": 5582, "pr_title": "GEODE-7864: Fix potential resource leak LGTM warnings", "pr_createdAt": "2020-10-01T00:11:11Z", "pr_url": "https://github.com/apache/geode/pull/5582", "timeline": [{"oid": "1f8fab8534cd67fd97f11e241e56728c3d08be54", "url": "https://github.com/apache/geode/commit/1f8fab8534cd67fd97f11e241e56728c3d08be54", "message": "Fix majority of other resourse leak warnings\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-02T21:27:41Z", "type": "forcePushed"}, {"oid": "12ba31be7ea11d260fdc1d614e1fc31402f19228", "url": "https://github.com/apache/geode/commit/12ba31be7ea11d260fdc1d614e1fc31402f19228", "message": "Revert more failing changes\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-05T02:29:47Z", "type": "forcePushed"}, {"oid": "883804fd154d4fe0c980299a86ff098f93849ddb", "url": "https://github.com/apache/geode/commit/883804fd154d4fe0c980299a86ff098f93849ddb", "message": "GEODE-7864: Fix potential resource leak LGTM warnings\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-12T19:24:39Z", "type": "forcePushed"}, {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "url": "https://github.com/apache/geode/commit/f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "message": "GEODE-7864: Fix potential resource leak LGTM warnings\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-12T19:37:22Z", "type": "commit"}, {"oid": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "url": "https://github.com/apache/geode/commit/f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "message": "GEODE-7864: Fix potential resource leak LGTM warnings\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-12T19:37:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5ODUzMQ==", "url": "https://github.com/apache/geode/pull/5582#discussion_r504198531", "bodyText": "Does this need to swallow IOExceptions?", "author": "upthewaterspout", "createdAt": "2020-10-13T19:19:29Z", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java", "diffHunk": "@@ -101,26 +101,36 @@ public ResultModel deploy(\n     for (DistributedMember member : targetMembers) {\n       List<RemoteInputStream> remoteStreams = new ArrayList<>();\n       List<String> jarNames = new ArrayList<>();\n-      for (String jarFullPath : jarFullPaths) {\n-        remoteStreams\n-            .add(exporter.export(new SimpleRemoteInputStream(new FileInputStream(jarFullPath))));\n-        jarNames.add(FilenameUtils.getName(jarFullPath));\n-      }\n-\n-      // this deploys the jars to all the matching servers\n-      ResultCollector<?, ?> resultCollector =\n-          executeFunction(this.deployFunction, new Object[] {jarNames, remoteStreams}, member);\n-\n-      @SuppressWarnings(\"unchecked\")\n-      final List<List<Object>> resultCollectorResult =\n-          (List<List<Object>>) resultCollector.getResult();\n-      results.add(resultCollectorResult.get(0));\n+      try {\n+        for (String jarFullPath : jarFullPaths) {\n+          FileInputStream fileInputStream = null;\n+          try {\n+            fileInputStream = new FileInputStream(jarFullPath);\n+            remoteStreams.add(exporter.export(new SimpleRemoteInputStream(fileInputStream)));\n+            jarNames.add(FilenameUtils.getName(jarFullPath));\n+          } catch (Exception ex) {\n+            if (fileInputStream != null) {\n+              fileInputStream.close();", "originalCommit": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzNjA0NQ==", "url": "https://github.com/apache/geode/pull/5582#discussion_r504836045", "bodyText": "Fixed", "author": "DonalEvans", "createdAt": "2020-10-14T17:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5ODUzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5e5e94d439930cfb44929228206e76f89d083d36", "chunk": "diff --git a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java\nindex d82f84d3f0..50ff83d20e 100644\n--- a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java\n+++ b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/DeployCommand.java\n\n@@ -110,7 +110,10 @@ public class DeployCommand extends GfshCommand {\n             jarNames.add(FilenameUtils.getName(jarFullPath));\n           } catch (Exception ex) {\n             if (fileInputStream != null) {\n-              fileInputStream.close();\n+              try {\n+                fileInputStream.close();\n+              } catch (IOException ignore) {\n+              }\n             }\n             throw ex;\n           }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMDEyMQ==", "url": "https://github.com/apache/geode/pull/5582#discussion_r504200121", "bodyText": "Could this have used a try-with-resources?", "author": "upthewaterspout", "createdAt": "2020-10-13T19:22:11Z", "path": "geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java", "diffHunk": "@@ -200,21 +200,28 @@ public Object requestToServer(HostAndPort addr, Object request, int timeout,\n       out.flush();\n \n       if (replyExpected) {\n-        DataInputStream in = new DataInputStream(sock.getInputStream());\n-        if (debugVersionMessage != null && logger.isDebugEnabled()) {\n-          logger.debug(debugVersionMessage);\n-        }\n-        in = new VersionedDataInputStream(in, serverVersion);\n+        DataInputStream in = null;\n         try {", "originalCommit": "f8fb3a4429869e0bba7f4bbd11f1eec5b31e40a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzNTk0Mw==", "url": "https://github.com/apache/geode/pull/5582#discussion_r504835943", "bodyText": "Good catch, thanks.", "author": "DonalEvans", "createdAt": "2020-10-14T17:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMDEyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "5e5e94d439930cfb44929228206e76f89d083d36", "chunk": "diff --git a/geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java b/geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java\nindex 81186c24d2..1e15121883 100644\n--- a/geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java\n+++ b/geode-tcp-server/src/main/java/org/apache/geode/distributed/internal/tcpserver/TcpClient.java\n\n@@ -200,15 +200,15 @@ public class TcpClient {\n       out.flush();\n \n       if (replyExpected) {\n-        DataInputStream in = null;\n-        try {\n-          in = new DataInputStream(sock.getInputStream());\n+\n+        try (DataInputStream dataInputStream = new DataInputStream(sock.getInputStream());\n+            VersionedDataInputStream versionedDataInputStream =\n+                new VersionedDataInputStream(dataInputStream, serverVersion)) {\n           if (debugVersionMessage != null && logger.isDebugEnabled()) {\n             logger.debug(debugVersionMessage);\n           }\n-          in = new VersionedDataInputStream(in, serverVersion);\n           try {\n-            Object response = objectDeserializer.readObject(in);\n+            Object response = objectDeserializer.readObject(versionedDataInputStream);\n             logger.debug(\"received response: {}\", response);\n             return response;\n           } catch (EOFException ex) {\n"}}, {"oid": "5e5e94d439930cfb44929228206e76f89d083d36", "url": "https://github.com/apache/geode/commit/5e5e94d439930cfb44929228206e76f89d083d36", "message": "Addressing review comments\n\nAuthored-by: Donal Evans <doevans@vmware.com>", "committedDate": "2020-10-14T17:03:24Z", "type": "commit"}]}