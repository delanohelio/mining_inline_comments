{"pr_number": 5288, "pr_title": "GEODE-8283: Provide REST interface for disk-store creation", "pr_createdAt": "2020-06-23T21:49:11Z", "pr_url": "https://github.com/apache/geode/pull/5288", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjEzOA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444622138", "bodyText": "Does it need both id and name? Are all the attributes necessary in the rest interface? Rest interface is supposed to be a more simplified/opinionated interface than the xml. It doesn't have to repeat everything that xml object has. Rather only focus on the attributes that users would need to configure most. If having it there would confuse users rather than help them, better not provide it in the rest interface.", "author": "jinmeiliao", "createdAt": "2020-06-24T03:19:29Z", "path": "geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.geode.management.configuration;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+import org.apache.geode.annotations.Experimental;\n+import org.apache.geode.management.runtime.DiskStoreInfo;\n+\n+@Experimental\n+public class DiskStore extends GroupableConfiguration<DiskStoreInfo> {\n+  public static final String DISK_STORE_CONFIG_ENDPOINT = \"/diskstores\";\n+\n+  @JsonIgnore\n+  private String id;", "originalCommit": "53e61e15456205343e597985d9e84cb59fe35900", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMTczMg==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444931732", "bodyText": "We weren't sure what would and would not be used often. If we have someone who can sound off on what to include I'm happy to trim the list of properties and revert to defaults where we don't have them.", "author": "jmelchio", "createdAt": "2020-06-24T14:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2MzgxMA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r445263810", "bodyText": "What's your use case for needing these rest api? For now I would suggest just expose those attributes that you needed.  It's always easy to add attributes to the config objects", "author": "jinmeiliao", "createdAt": "2020-06-25T01:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MjMwMg==", "url": "https://github.com/apache/geode/pull/5288#discussion_r445552302", "bodyText": "We need it for setting up disk-stores in k8s.", "author": "jmelchio", "createdAt": "2020-06-25T13:20:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjEzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5Mjk3Ng==", "url": "https://github.com/apache/geode/pull/5288#discussion_r445592976", "bodyText": "Do you need to configure all the attributes in k8s? I am asking because of what we did for Region config object, we only expose what's critical to configure the region to simplify user experience. I would hope Diskstore would do the same. Maybe talk to Gang to find out what are the most used attributes when configuring diskstore and what are the user's pain point given the current set of options in gfsh", "author": "jinmeiliao", "createdAt": "2020-06-25T14:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjEzOA=="}], "type": "inlineReview", "revised_code": {"commit": "97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "chunk": "diff --git a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\nindex cc9ff04e0d..4bc3e20972 100644\n--- a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\n+++ b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\n\n@@ -31,8 +31,6 @@ import org.apache.geode.management.runtime.DiskStoreInfo;\n public class DiskStore extends GroupableConfiguration<DiskStoreInfo> {\n   public static final String DISK_STORE_CONFIG_ENDPOINT = \"/diskstores\";\n \n-  @JsonIgnore\n-  private String id;\n   private String name;\n   private Integer compactionThreshold;\n   private Float diskUsageCriticalPercentage;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjI5Nw==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444622297", "bodyText": "would an int/long be better?", "author": "jinmeiliao", "createdAt": "2020-06-24T03:20:02Z", "path": "geode-management/src/main/java/org/apache/geode/management/configuration/DiskDir.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.geode.management.configuration;\n+\n+import java.io.Serializable;\n+\n+import org.apache.geode.management.api.JsonSerializable;\n+\n+public class DiskDir implements Serializable, JsonSerializable {\n+  private String name;\n+  private String dirSize;", "originalCommit": "53e61e15456205343e597985d9e84cb59fe35900", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMDY2NA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444930664", "bodyText": "Yes, probably better.", "author": "jmelchio", "createdAt": "2020-06-24T14:22:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMjI5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "02d1049455bb83758ef0c1d0872451b5c2e9e059", "chunk": "diff --git a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskDir.java b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskDir.java\nindex 0c125bb787..cb7367d6cc 100644\n--- a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskDir.java\n+++ b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskDir.java\n\n@@ -25,13 +25,13 @@ import org.apache.geode.management.api.JsonSerializable;\n \n public class DiskDir implements Serializable, JsonSerializable {\n   private String name;\n-  private String dirSize;\n+  private Integer dirSize;\n \n   public DiskDir() {\n \n   }\n \n-  public DiskDir(String name, String dirSize) {\n+  public DiskDir(String name, Integer dirSize) {\n     this.name = name;\n     this.dirSize = dirSize;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMzQzOA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444623438", "bodyText": "I don't think you need the check here. the pipeline should already make sure that there is no existing one that has the same id exists before it's calling this add", "author": "jinmeiliao", "createdAt": "2020-06-24T03:25:30Z", "path": "geode-core/src/main/java/org/apache/geode/management/internal/configuration/mutators/DiskStoreManager.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.geode.management.internal.configuration.mutators;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import org.apache.geode.cache.configuration.CacheConfig;\n+import org.apache.geode.cache.configuration.DiskStoreType;\n+import org.apache.geode.distributed.ConfigurationPersistenceService;\n+import org.apache.geode.management.configuration.DiskStore;\n+import org.apache.geode.management.internal.configuration.converters.DiskStoreConverter;\n+\n+public class DiskStoreManager extends CacheConfigurationManager<DiskStore> {\n+  private final DiskStoreConverter diskStoreConverter = new DiskStoreConverter();\n+\n+  public DiskStoreManager(ConfigurationPersistenceService service) {\n+    super(service);\n+  }\n+\n+  @Override\n+  public void add(DiskStore config, CacheConfig existing) {\n+    List<DiskStoreType> diskStoreTypes = existing.getDiskStores();\n+    if (diskStoreTypes.stream().noneMatch(diskStoreType -> diskStoreType.getName()", "originalCommit": "53e61e15456205343e597985d9e84cb59fe35900", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMDQ3OA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444930478", "bodyText": "Okay, we'll check if we can drop these checks without side effects.", "author": "jmelchio", "createdAt": "2020-06-24T14:21:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMzQzOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyMzU0Mw==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444623543", "bodyText": "same as add, no need to check", "author": "jinmeiliao", "createdAt": "2020-06-24T03:25:59Z", "path": "geode-core/src/main/java/org/apache/geode/management/internal/configuration/mutators/DiskStoreManager.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.geode.management.internal.configuration.mutators;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import org.apache.geode.cache.configuration.CacheConfig;\n+import org.apache.geode.cache.configuration.DiskStoreType;\n+import org.apache.geode.distributed.ConfigurationPersistenceService;\n+import org.apache.geode.management.configuration.DiskStore;\n+import org.apache.geode.management.internal.configuration.converters.DiskStoreConverter;\n+\n+public class DiskStoreManager extends CacheConfigurationManager<DiskStore> {\n+  private final DiskStoreConverter diskStoreConverter = new DiskStoreConverter();\n+\n+  public DiskStoreManager(ConfigurationPersistenceService service) {\n+    super(service);\n+  }\n+\n+  @Override\n+  public void add(DiskStore config, CacheConfig existing) {\n+    List<DiskStoreType> diskStoreTypes = existing.getDiskStores();\n+    if (diskStoreTypes.stream().noneMatch(diskStoreType -> diskStoreType.getName()\n+        .equals(config.getName()))) {\n+      diskStoreTypes.add(diskStoreConverter.fromConfigObject(config));\n+    }\n+  }\n+\n+  @Override\n+  public void update(DiskStore config, CacheConfig existing) {\n+    throw new IllegalStateException(\"Not implemented\");\n+  }\n+\n+  @Override\n+  public void delete(DiskStore config, CacheConfig existing) {\n+    existing.getDiskStores().stream()", "originalCommit": "53e61e15456205343e597985d9e84cb59fe35900", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444624786", "bodyText": "If DiskStoreInfo is an empty class (no runtime info to gather for this configuration object), then you can declare this DiskStore as public class DiskStore extends GroupableConfiguration<RuntimeInfo>. This way, for get/list, the cms will not even issue the functions to the servers to try to retrieve an empty object.", "author": "jinmeiliao", "createdAt": "2020-06-24T03:31:52Z", "path": "geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java", "diffHunk": "@@ -0,0 +1,166 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.geode.management.configuration;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+import org.apache.geode.annotations.Experimental;\n+import org.apache.geode.management.runtime.DiskStoreInfo;\n+\n+@Experimental\n+public class DiskStore extends GroupableConfiguration<DiskStoreInfo> {", "originalCommit": "53e61e15456205343e597985d9e84cb59fe35900", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkyODk3NA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444928974", "bodyText": "In its current configuration it does list the servers to which the DiskStore has been applied. I'll try and see if this continues when we roll it into the DiskStore class. If that is the case we can drop the DiskStoreInfo class.", "author": "jmelchio", "createdAt": "2020-06-24T14:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3MzcwMQ==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444973701", "bodyText": "It appears the DiskStoreRealizer needs a concrete implementation of RuntimeInfo.", "author": "jmelchio", "createdAt": "2020-06-24T15:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4OTg3MA==", "url": "https://github.com/apache/geode/pull/5288#discussion_r444989870", "bodyText": "If it returns null in the get method?", "author": "jinmeiliao", "createdAt": "2020-06-24T15:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0NTUyNg==", "url": "https://github.com/apache/geode/pull/5288#discussion_r445045526", "bodyText": "That would work but then we wouldn't even get a list of machines where the disk-stores live at run time.", "author": "jmelchio", "createdAt": "2020-06-24T17:09:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA2MzMwMg==", "url": "https://github.com/apache/geode/pull/5288#discussion_r445063302", "bodyText": "Ah, I see, you don't need further diskstore info on each server, but you do need the server id. I guess you can leave it as is.", "author": "jinmeiliao", "createdAt": "2020-06-24T17:41:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYyNDc4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "chunk": "diff --git a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\nindex cc9ff04e0d..4bc3e20972 100644\n--- a/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\n+++ b/geode-management/src/main/java/org/apache/geode/management/configuration/DiskStore.java\n\n@@ -31,8 +31,6 @@ import org.apache.geode.management.runtime.DiskStoreInfo;\n public class DiskStore extends GroupableConfiguration<DiskStoreInfo> {\n   public static final String DISK_STORE_CONFIG_ENDPOINT = \"/diskstores\";\n \n-  @JsonIgnore\n-  private String id;\n   private String name;\n   private Integer compactionThreshold;\n   private Float diskUsageCriticalPercentage;\n"}}, {"oid": "02d1049455bb83758ef0c1d0872451b5c2e9e059", "url": "https://github.com/apache/geode/commit/02d1049455bb83758ef0c1d0872451b5c2e9e059", "message": "Change DiskDir size to be Integer\n\n- spottless apply", "committedDate": "2020-06-25T01:13:23Z", "type": "forcePushed"}, {"oid": "180131002cdc93403e7274bd5323a448d6ed93c0", "url": "https://github.com/apache/geode/commit/180131002cdc93403e7274bd5323a448d6ed93c0", "message": "GEODE-8283: Provide REST interface for disk-store creation\n\n- Provides create, get, list and delete operations\n- Can create with locator only running\n\nCo-Authored-By: Jason Huynh <jhuynh@vmware.com>", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "2c25481c5a0f2be667f083fc51221feb1591aef0", "url": "https://github.com/apache/geode/commit/2c25481c5a0f2be667f083fc51221feb1591aef0", "message": "Fix spotless issues", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "a6646470857cc8d61453abae832f26e23cc88555", "url": "https://github.com/apache/geode/commit/a6646470857cc8d61453abae832f26e23cc88555", "message": "Add missing documentation files to assembly", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "5ea4e0d8f74ae22b1a9e2aba5bee68f8e1a77717", "url": "https://github.com/apache/geode/commit/5ea4e0d8f74ae22b1a9e2aba5bee68f8e1a77717", "message": "Updating assembly validation txt (#4)\n\n* Updating assembly validation txt\r\nTrying to remove disk store folders after test\r\n\r\n* Attempt to clear out disk dirs between runs\r\n\r\n* Added temporary folder and forced disk dirs to use the absolute path", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "7e5dc045e8effc180697ff64d7bcffabe0fe08ea", "url": "https://github.com/apache/geode/commit/7e5dc045e8effc180697ff64d7bcffabe0fe08ea", "message": "Fix jq issues", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "5f98828019b309f7e01ca77b44b9b99d6d7947a2", "url": "https://github.com/apache/geode/commit/5f98828019b309f7e01ca77b44b9b99d6d7947a2", "message": "Disk store rest api (#5)\n\n* Updating assembly validation txt\r\nTrying to remove disk store folders after test\r\n\r\n* Attempt to clear out disk dirs between runs\r\n\r\n* Added temporary folder and forced disk dirs to use the absolute path\r\n\r\n* Added tests for groups\r\nPrevent removal of disk store from specific groups to be consistent with region api", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "c68479d2f36dacdecbedb9980fb84cc9ece1771d", "url": "https://github.com/apache/geode/commit/c68479d2f36dacdecbedb9980fb84cc9ece1771d", "message": "Add JQ testing for disk-store controller", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "99d21ea77d880372c3fb22c1b974a9b503731595", "url": "https://github.com/apache/geode/commit/99d21ea77d880372c3fb22c1b974a9b503731595", "message": "Change DiskDir size to be Integer\n\n- spottless apply", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "9834ffabc0b5ca09a16409e4f5649a6ca1c5e8f6", "url": "https://github.com/apache/geode/commit/9834ffabc0b5ca09a16409e4f5649a6ca1c5e8f6", "message": "Fix serializables", "committedDate": "2020-06-25T19:57:11Z", "type": "commit"}, {"oid": "97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "url": "https://github.com/apache/geode/commit/97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "message": "Remove Id field from DiskStore\n\n- Rebase against develop", "committedDate": "2020-06-25T20:16:15Z", "type": "commit"}, {"oid": "97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "url": "https://github.com/apache/geode/commit/97ba5d0b0153840d1417f3c3b3ad4a8c217e9e6a", "message": "Remove Id field from DiskStore\n\n- Rebase against develop", "committedDate": "2020-06-25T20:16:15Z", "type": "forcePushed"}]}