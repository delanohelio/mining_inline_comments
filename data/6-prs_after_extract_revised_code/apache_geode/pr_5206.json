{"pr_number": 5206, "pr_title": "GEODE-8219: Apply RedisResponse to all redis string commands", "pr_createdAt": "2020-06-03T15:06:02Z", "pr_url": "https://github.com/apache/geode/pull/5206", "timeline": [{"oid": "f406e474c2362990a9eb664a3edf51aeaf45b16d", "url": "https://github.com/apache/geode/commit/f406e474c2362990a9eb664a3edf51aeaf45b16d", "message": "GEODE-8219: Apply RedisResponse to all redis string commands", "committedDate": "2020-06-03T15:00:07Z", "type": "commit"}, {"oid": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "url": "https://github.com/apache/geode/commit/72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "message": "Fix spotless and failing tests", "committedDate": "2020-06-03T20:46:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDg3NQ==", "url": "https://github.com/apache/geode/pull/5206#discussion_r435010875", "bodyText": "I think this setReponse call should have been deleted", "author": "dschneider-pivotal", "createdAt": "2020-06-04T06:03:41Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -81,31 +79,30 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       }\n       stringCommands.set(key, new ByteArrayWrapper(bytes), null);\n       command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));", "originalCommit": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMxMDMyOA==", "url": "https://github.com/apache/geode/pull/5206#discussion_r435310328", "bodyText": "Doh! Thanks.", "author": "jdeppe-pivotal", "createdAt": "2020-06-04T14:38:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMDg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\nindex ea06d46880..2710e79ce2 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\n\n@@ -78,7 +77,6 @@ public class SetBitExecutor extends StringExecutor {\n         bytes[byteIndex] = (byte) (0x80 >> offset);\n       }\n       stringCommands.set(key, new ByteArrayWrapper(bytes), null);\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), 0));\n       return RedisResponse.integer(0);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTE4Nw==", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011187", "bodyText": "Should this setResponse be removed?", "author": "dschneider-pivotal", "createdAt": "2020-06-04T06:04:41Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java", "diffHunk": "@@ -47,27 +48,17 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n       byte[] bitAr = commandElems.get(2);\n       bit = Coder.bytesToInt(bitAr);\n     } catch (NumberFormatException e) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_NOT_INT));\n-      return;\n+      return RedisResponse.error(ERROR_NOT_INT);\n     }\n \n     if (bit != 0 && bit != 1) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ERROR_BIT));\n-      return;\n+      return RedisResponse.error(ERROR_BIT);\n     }\n \n     if (string == null || string.length() == 0) {\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit)); // Redis\n-      // returns\n-      // 0 when\n-      // key\n-      // does\n-      // not\n-      // exists\n-      // for\n-      // this\n-      // command\n-      return;\n+      // Redis returns 0 when key does not exists for this command\n+      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit));", "originalCommit": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java\nindex 2467373bd6..33967ede8b 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/BitPosExecutor.java\n\n@@ -57,7 +57,6 @@ public class BitPosExecutor extends StringExecutor {\n \n     if (string == null || string.length() == 0) {\n       // Redis returns 0 when key does not exists for this command\n-      command.setResponse(Coder.getIntegerResponse(context.getByteBufAllocator(), -bit));\n       return RedisResponse.integer(-bit);\n     }\n     byte[] bytes = string.toBytes();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTYzNQ==", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011635", "bodyText": "remove this setResponse calls", "author": "dschneider-pivotal", "createdAt": "2020-06-04T06:06:02Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java", "diffHunk": "@@ -34,12 +35,13 @@\n       \"The offset is out of range, must be greater than or equal to 0  and at most 4294967295 (512MB)\";\n \n   @Override\n-  public void executeCommand(Command command, ExecutionHandlerContext context) {\n+  public RedisResponse executeCommandWithResponse(Command command,\n+      ExecutionHandlerContext context) {\n     List<byte[]> commandElems = command.getProcessedCommand();\n \n     if (commandElems.size() < 4) {\n       command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.SETBIT));\n-      return;\n+      return RedisResponse.error(ArityDef.SETBIT);", "originalCommit": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\nindex ea06d46880..2710e79ce2 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetBitExecutor.java\n\n@@ -40,7 +40,6 @@ public class SetBitExecutor extends StringExecutor {\n     List<byte[]> commandElems = command.getProcessedCommand();\n \n     if (commandElems.size() < 4) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ArityDef.SETBIT));\n       return RedisResponse.error(ArityDef.SETBIT);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxMTkyNA==", "url": "https://github.com/apache/geode/pull/5206#discussion_r435011924", "bodyText": "remove this setResponse call", "author": "dschneider-pivotal", "createdAt": "2020-06-04T06:06:56Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java", "diffHunk": "@@ -42,23 +44,24 @@ public void executeCommand(Command command, ExecutionHandlerContext context) {\n     try {\n       setOptions = parseCommandElems(commandElems);\n     } catch (IllegalArgumentException ex) {\n-      command.setResponse(Coder.getErrorResponse(context.getByteBufAllocator(), ex.getMessage()));\n-      return;\n+      return RedisResponse.error(ex.getMessage());\n     }\n \n-    doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n+    return doSet(command, context, keyToSet, valueToSet, redisStringCommands, setOptions);\n   }\n \n-  private void doSet(Command command, ExecutionHandlerContext context, ByteArrayWrapper key,\n+  private RedisResponse doSet(Command command, ExecutionHandlerContext context,\n+      ByteArrayWrapper key,\n       ByteArrayWrapper value, RedisStringCommands redisStringCommands, SetOptions setOptions) {\n \n     boolean result = redisStringCommands.set(key, value, setOptions);\n \n     if (result) {\n       command.setResponse(Coder.getSimpleStringResponse(context.getByteBufAllocator(), SUCCESS));\n-    } else {\n-      command.setResponse(Coder.getNilResponse(context.getByteBufAllocator()));\n+      return RedisResponse.string(SUCCESS);", "originalCommit": "72a3de6b1f4aacb4d79cbd13c09be35ca9735632", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java\nindex 00cf75bab1..6576f2ebdf 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/string/SetExecutor.java\n\n@@ -57,7 +57,6 @@ public class SetExecutor extends StringExecutor {\n     boolean result = redisStringCommands.set(key, value, setOptions);\n \n     if (result) {\n-      command.setResponse(Coder.getSimpleStringResponse(context.getByteBufAllocator(), SUCCESS));\n       return RedisResponse.string(SUCCESS);\n     }\n \n"}}, {"oid": "762d0a6d1f9c8747b85e52f77b34b45e6301df11", "url": "https://github.com/apache/geode/commit/762d0a6d1f9c8747b85e52f77b34b45e6301df11", "message": "Removed redundant lines", "committedDate": "2020-06-04T14:37:34Z", "type": "commit"}]}