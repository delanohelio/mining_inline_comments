{"pr_number": 5752, "pr_title": "GEODE-8714: return event to queue at stoping of gw sender", "pr_createdAt": "2020-11-14T18:08:34Z", "pr_url": "https://github.com/apache/geode/pull/5752", "timeline": [{"oid": "4f86020dec4107202d2dab33ac19a33e8ce08f2e", "url": "https://github.com/apache/geode/commit/4f86020dec4107202d2dab33ac19a33e8ce08f2e", "message": "GEODE-8714: return event to queue at stoping of gw sender", "committedDate": "2020-11-15T16:06:52Z", "type": "commit"}, {"oid": "4f86020dec4107202d2dab33ac19a33e8ce08f2e", "url": "https://github.com/apache/geode/commit/4f86020dec4107202d2dab33ac19a33e8ce08f2e", "message": "GEODE-8714: return event to queue at stoping of gw sender", "committedDate": "2020-11-15T16:06:52Z", "type": "forcePushed"}, {"oid": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "url": "https://github.com/apache/geode/commit/9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "message": "GEODE-8714: added test", "committedDate": "2020-11-16T13:59:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MDE4NQ==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525590185", "bodyText": "These casts to Integer are redundant and can be removed.", "author": "DonalEvans", "createdAt": "2020-11-17T23:19:46Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MDI4NQ==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525590285", "bodyText": "This commented out line should be removed.", "author": "DonalEvans", "createdAt": "2020-11-17T23:20:00Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5MDQ0NQ==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525590445", "bodyText": "These casts to String are redundant and can be removed.", "author": "DonalEvans", "createdAt": "2020-11-17T23:20:23Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5NDIwMg==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525594202", "bodyText": "LogWriterUtils and the getLogWriter() method are both deprecated. LogService#getLogger() should be used instead. This log message also seems redundant, since the same information is already logged as part of the createSenderWithDiskStore() method.", "author": "DonalEvans", "createdAt": "2020-11-17T23:29:46Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5NTk3MQ==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525595971", "bodyText": "LogWriterUtils and the getLogWriter() method are both deprecated. LogService#getLogger() should be used instead. However, for this log message, and the rest that appear in this test, a better approach would be to pass a name to the VM.invoke() method in addition to the lambda, which will result in that name being logged both at the start and end of lambda execution. This prevents the need to add logging throughout the test to know where the test has got to.\ne.g.\nvm4.invoke(\"Do puts to the region\", () -> WANTestBase.doPuts(getTestMethodName(), 10));\nwhich results in the following logging:\n[vm4] [info 2020/11/17 15:37:17.164 PST <RMI TCP Connection(1)-10.0.0.221> tid=0x13] Received method: org.apache.geode.test.dunit.internal.IdentifiableRunnable.run with 0 args on object: IdentifiableRunnable(0:Do puts to the region)\n...\n[vm4]  from org.apache.geode.test.dunit.internal.IdentifiableRunnable.run with 0 args on object: IdentifiableRunnable(0:Do puts to the region) (took 367 ms)", "author": "DonalEvans", "createdAt": "2020-11-17T23:34:32Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);\n+\n+    // create PR on remote site\n+    vm2.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+    vm3.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+\n+    // create PR on local site\n+    vm4.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+    // start the senders on local site\n+    startSenderInVMs(\"ln\", vm4, vm5);\n+\n+    // wait for senders to become running\n+    vm4.invoke(waitForSenderRunnable());\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    // start puts in region on local site\n+    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName(), 10));\n+    LogWriterUtils.getLogWriter().info(\"Completed puts in the region\");", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5ODUyMg==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525598522", "bodyText": "See above comment regarding deprecated logging and passing names to the invoke() method to avoid needing to log directly during the test.", "author": "DonalEvans", "createdAt": "2020-11-17T23:41:30Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);\n+\n+    // create PR on remote site\n+    vm2.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+    vm3.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+\n+    // create PR on local site\n+    vm4.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+    // start the senders on local site\n+    startSenderInVMs(\"ln\", vm4, vm5);\n+\n+    // wait for senders to become running\n+    vm4.invoke(waitForSenderRunnable());\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    // start puts in region on local site\n+    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName(), 10));\n+    LogWriterUtils.getLogWriter().info(\"Completed puts in the region\");\n+\n+    // --------------------close and rebuild local site\n+    // -------------------------------------------------\n+    // kill the sender in vm5\n+    vm5.invoke(killSenderRunnable());\n+\n+    LogWriterUtils.getLogWriter().info(\"Killed vm5 sender.\");", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5ODU2Nw==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525598567", "bodyText": "See above comment regarding deprecated logging and passing names to the invoke() method to avoid needing to log directly during the test.", "author": "DonalEvans", "createdAt": "2020-11-17T23:41:41Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);\n+\n+    // create PR on remote site\n+    vm2.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+    vm3.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+\n+    // create PR on local site\n+    vm4.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+    // start the senders on local site\n+    startSenderInVMs(\"ln\", vm4, vm5);\n+\n+    // wait for senders to become running\n+    vm4.invoke(waitForSenderRunnable());\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    // start puts in region on local site\n+    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName(), 10));\n+    LogWriterUtils.getLogWriter().info(\"Completed puts in the region\");\n+\n+    // --------------------close and rebuild local site\n+    // -------------------------------------------------\n+    // kill the sender in vm5\n+    vm5.invoke(killSenderRunnable());\n+\n+    LogWriterUtils.getLogWriter().info(\"Killed vm5 sender.\");\n+\n+    // restart the vm\n+    createCacheInVMs(lnPort, vm5);\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    LogWriterUtils.getLogWriter().info(\"Created back the cache\");", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5ODYwNg==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525598606", "bodyText": "See above comment regarding deprecated logging and passing names to the invoke() method to avoid needing to log directly during the test.", "author": "DonalEvans", "createdAt": "2020-11-17T23:41:49Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);\n+\n+    // create PR on remote site\n+    vm2.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+    vm3.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+\n+    // create PR on local site\n+    vm4.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+    // start the senders on local site\n+    startSenderInVMs(\"ln\", vm4, vm5);\n+\n+    // wait for senders to become running\n+    vm4.invoke(waitForSenderRunnable());\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    // start puts in region on local site\n+    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName(), 10));\n+    LogWriterUtils.getLogWriter().info(\"Completed puts in the region\");\n+\n+    // --------------------close and rebuild local site\n+    // -------------------------------------------------\n+    // kill the sender in vm5\n+    vm5.invoke(killSenderRunnable());\n+\n+    LogWriterUtils.getLogWriter().info(\"Killed vm5 sender.\");\n+\n+    // restart the vm\n+    createCacheInVMs(lnPort, vm5);\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    LogWriterUtils.getLogWriter().info(\"Created back the cache\");\n+\n+    // create senders with disk store\n+    vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2, true, 100, 10, false, true,\n+        null, diskStore2, false));\n+\n+    LogWriterUtils.getLogWriter().info(\"Created the senders back from the disk store.\");", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5ODY3Nw==", "url": "https://github.com/apache/geode/pull/5752#discussion_r525598677", "bodyText": "See above comment regarding deprecated logging and passing names to the invoke() method to avoid needing to log directly during the test.", "author": "DonalEvans", "createdAt": "2020-11-17T23:42:01Z", "path": "geode-wan/src/distributedTest/java/org/apache/geode/internal/cache/wan/parallel/ParallelWANPersistenceEnabledGatewaySenderDUnitTest.java", "diffHunk": "@@ -1897,6 +1897,106 @@ public void testpersistentWanGateway_restartSender_expectAllEventsReceived_scena\n     vm3.invoke(() -> WANTestBase.validateRegionSize(getTestMethodName(), 3000));\n   }\n \n+  /**\n+   * Enable persistence for PR and GatewaySender. Do some puts in local region. Restart 1 server,\n+   * then stop gateway sender, and stop server. After that create receiver on remote site.\n+   * Check if the remote site receives all the events.\n+   */\n+  @Test\n+  public void testPersistentPRWithGatewaySenderPersistenceEnabled_RestartAndStopServer() {\n+    // create locator on local site\n+    Integer lnPort = (Integer) vm0.invoke(() -> WANTestBase.createFirstLocatorWithDSId(1));\n+    // create locator on remote site\n+    Integer nyPort = (Integer) vm1.invoke(() -> WANTestBase.createFirstRemoteLocator(2, lnPort));\n+\n+    // create receiver on remote site\n+    createCacheInVMs(nyPort, vm2, vm3);\n+    // createReceiverInVMs(vm2, vm3);\n+\n+    // create cache in local site\n+    createCacheInVMs(lnPort, vm4, vm5);\n+    vm4.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    // create senders with disk store\n+    String diskStore1 = (String) vm4.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+    String diskStore2 = (String) vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2,\n+        true, 100, 10, false, true, null, null, true));\n+\n+    LogWriterUtils.getLogWriter()\n+        .info(\"The DS are: \" + diskStore1 + \",\" + diskStore2);\n+\n+    // create PR on remote site\n+    vm2.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+    vm3.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), null, 1,\n+        13, isOffHeap()));\n+\n+    // create PR on local site\n+    vm4.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+    // start the senders on local site\n+    startSenderInVMs(\"ln\", vm4, vm5);\n+\n+    // wait for senders to become running\n+    vm4.invoke(waitForSenderRunnable());\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    // start puts in region on local site\n+    vm4.invoke(() -> WANTestBase.doPuts(getTestMethodName(), 10));\n+    LogWriterUtils.getLogWriter().info(\"Completed puts in the region\");\n+\n+    // --------------------close and rebuild local site\n+    // -------------------------------------------------\n+    // kill the sender in vm5\n+    vm5.invoke(killSenderRunnable());\n+\n+    LogWriterUtils.getLogWriter().info(\"Killed vm5 sender.\");\n+\n+    // restart the vm\n+    createCacheInVMs(lnPort, vm5);\n+    vm5.invoke(() -> setNumDispatcherThreadsForTheRun(2));\n+\n+    LogWriterUtils.getLogWriter().info(\"Created back the cache\");\n+\n+    // create senders with disk store\n+    vm5.invoke(() -> WANTestBase.createSenderWithDiskStore(\"ln\", 2, true, 100, 10, false, true,\n+        null, diskStore2, false));\n+\n+    LogWriterUtils.getLogWriter().info(\"Created the senders back from the disk store.\");\n+    // create PR on local site\n+    vm5.invoke(() -> WANTestBase.createPersistentPartitionedRegion(getTestMethodName(), \"ln\", 1,\n+        13, isOffHeap()));\n+\n+\n+    LogWriterUtils.getLogWriter().info(\"Created back the partitioned regions\");\n+\n+    LogWriterUtils.getLogWriter().info(\"Waiting for senders running.\");\n+    // wait for senders running\n+    vm5.invoke(waitForSenderRunnable());\n+\n+    LogWriterUtils.getLogWriter().info(\"All the senders are now running...\");", "originalCommit": "9ec64bdd9fd9c2a4cd72a8068576e859d8861d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}