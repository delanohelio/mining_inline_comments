{"pr_number": 5503, "pr_title": "GEODE-8482: Concurrent access to ArrayList should be synchronized", "pr_createdAt": "2020-09-10T00:34:19Z", "pr_url": "https://github.com/apache/geode/pull/5503", "timeline": [{"oid": "e24f3f48191d5ac88a3d47466db356431e3afffb", "url": "https://github.com/apache/geode/commit/e24f3f48191d5ac88a3d47466db356431e3afffb", "message": "Initial unit test and fix", "committedDate": "2020-09-09T00:15:01Z", "type": "commit"}, {"oid": "008c5c8d3e485a8e01dae4b64710c96d3956bafc", "url": "https://github.com/apache/geode/commit/008c5c8d3e485a8e01dae4b64710c96d3956bafc", "message": "Add more reliable unit tests", "committedDate": "2020-09-10T00:32:28Z", "type": "commit"}, {"oid": "41e1a7291f40880d559e5e0a4894c80d62f8d065", "url": "https://github.com/apache/geode/commit/41e1a7291f40880d559e5e0a4894c80d62f8d065", "message": "spotlessApply", "committedDate": "2020-09-10T00:45:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDkzNw==", "url": "https://github.com/apache/geode/pull/5503#discussion_r487130937", "bodyText": "Can this be achieved by changing startupTasks to CopyOnWriteArrayList.", "author": "agingade", "createdAt": "2020-09-11T15:43:21Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/control/InternalResourceManager.java", "diffHunk": "@@ -637,7 +638,9 @@ private ThreadsMonitoring getThreadMonitorObj() {\n    */\n   public void addStartupTask(CompletableFuture<Void> startupTask) {\n     Objects.requireNonNull(startupTask);\n-    startupTasks.add(startupTask);\n+    synchronized (startupTasks) {", "originalCommit": "41e1a7291f40880d559e5e0a4894c80d62f8d065", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxODIxMw==", "url": "https://github.com/apache/geode/pull/5503#discussion_r487218213", "bodyText": "CopyOnWriteArrayList makes a fresh copy of the underlying array for every mutative operation such as add. This is too costly for this use case.", "author": "jchen21", "createdAt": "2020-09-11T18:29:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzMDkzNw=="}], "type": "inlineReview", "revised_code": null}]}