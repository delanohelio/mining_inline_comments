{"pr_number": 5526, "pr_title": "GEODE-8504: add info command", "pr_createdAt": "2020-09-18T17:43:09Z", "pr_url": "https://github.com/apache/geode/pull/5526", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3MjczNQ==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492072735", "bodyText": "Please name this class InfoNativeRedisAcceptanceTest to be consistent with the other native acceptance tests.", "author": "jdeppe-pivotal", "createdAt": "2020-09-21T14:07:01Z", "path": "geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoRedisAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import redis.clients.jedis.Jedis;\n+\n+import org.apache.geode.NativeRedisTestRule;\n+\n+public class InfoRedisAcceptanceTest extends InfoIntegrationTest {", "originalCommit": "1713ba9717670881366fba2c38d0993967eb288a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE1NzQ5NA==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492157494", "bodyText": "done, thanks", "author": "jhutchison", "createdAt": "2020-09-21T15:35:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA3MjczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "172623e4c651c6a653e2b7a48dbcb25edf2f2738", "chunk": "diff --git a/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoRedisAcceptanceTest.java b/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoNativeRedisAcceptanceTest.java\nsimilarity index 94%\nrename from geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoRedisAcceptanceTest.java\nrename to geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoNativeRedisAcceptanceTest.java\nindex 12efd6dba4..5227577b42 100644\n--- a/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoRedisAcceptanceTest.java\n+++ b/geode-redis/src/acceptanceTest/java/org/apache/geode/redis/internal/executor/server/InfoNativeRedisAcceptanceTest.java\n\n@@ -21,7 +21,7 @@ import redis.clients.jedis.Jedis;\n \n import org.apache.geode.NativeRedisTestRule;\n \n-public class InfoRedisAcceptanceTest extends InfoIntegrationTest {\n+public class InfoNativeRedisAcceptanceTest extends InfoIntegrationTest {\n \n   @ClassRule\n   public static NativeRedisTestRule redis = new NativeRedisTestRule();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4ODgyOQ==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492088829", "bodyText": "I think this can be replaced with a constraint in RedisCommandType.", "author": "jdeppe-pivotal", "createdAt": "2020-09-21T14:23:26Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/InfoExecutor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.redis.internal.executor.server;\n+\n+import java.util.List;\n+\n+import org.apache.geode.redis.internal.ParameterRequirements.RedisParametersMismatchException;\n+import org.apache.geode.redis.internal.RedisConstants;\n+import org.apache.geode.redis.internal.data.ByteArrayWrapper;\n+import org.apache.geode.redis.internal.executor.AbstractExecutor;\n+import org.apache.geode.redis.internal.executor.RedisResponse;\n+import org.apache.geode.redis.internal.netty.Command;\n+import org.apache.geode.redis.internal.netty.ExecutionHandlerContext;\n+\n+public class InfoExecutor extends AbstractExecutor {\n+\n+  @Override\n+  public RedisResponse executeCommand(Command command,\n+      ExecutionHandlerContext context) {\n+    String result;\n+    List<ByteArrayWrapper> commands =\n+        command.getProcessedCommandWrappers();\n+\n+    if (containsTooManyParameters(commands)) {", "originalCommit": "1713ba9717670881366fba2c38d0993967eb288a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE2MjI3NA==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492162274", "bodyText": "as per discussion-  will create a flavor of ParameterRequirements that allows for mesg parameter (the reason we did this to begin with)", "author": "jhutchison", "createdAt": "2020-09-21T15:42:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA4ODgyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "71ad9cacaa6a59b60e58b4ae4f36cf48758a392e", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/InfoExecutor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/InfoExecutor.java\nindex de7411d73c..03465935a3 100644\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/InfoExecutor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/executor/server/InfoExecutor.java\n\n@@ -15,11 +15,6 @@\n \n package org.apache.geode.redis.internal.executor.server;\n \n-import java.util.List;\n-\n-import org.apache.geode.redis.internal.ParameterRequirements.RedisParametersMismatchException;\n-import org.apache.geode.redis.internal.RedisConstants;\n-import org.apache.geode.redis.internal.data.ByteArrayWrapper;\n import org.apache.geode.redis.internal.executor.AbstractExecutor;\n import org.apache.geode.redis.internal.executor.RedisResponse;\n import org.apache.geode.redis.internal.netty.Command;\n"}}, {"oid": "71ad9cacaa6a59b60e58b4ae4f36cf48758a392e", "url": "https://github.com/apache/geode/commit/71ad9cacaa6a59b60e58b4ae4f36cf48758a392e", "message": "intial commit info command", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "0adc19b9dc8c5596c1540643bddef5b09e7073c3", "url": "https://github.com/apache/geode/commit/0adc19b9dc8c5596c1540643bddef5b09e7073c3", "message": "finish commands -need to verify app", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "1d39467e8a36b5e8c4cd6374e8ff157102ca6dd2", "url": "https://github.com/apache/geode/commit/1d39467e8a36b5e8c4cd6374e8ff157102ca6dd2", "message": "last minute refactors", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "a010c9782072de8042ee5408840de39442b4aed2", "url": "https://github.com/apache/geode/commit/a010c9782072de8042ee5408840de39442b4aed2", "message": "Refactor info executor", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "dea9a6433de0dcc3cb17a540e37cce5d69f2396a", "url": "https://github.com/apache/geode/commit/dea9a6433de0dcc3cb17a540e37cce5d69f2396a", "message": "another small refactor", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "1c44d3972db8b9164c8835921a78947557c96aba", "url": "https://github.com/apache/geode/commit/1c44d3972db8b9164c8835921a78947557c96aba", "message": "more refactoring of InfoExecutor code", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "172623e4c651c6a653e2b7a48dbcb25edf2f2738", "url": "https://github.com/apache/geode/commit/172623e4c651c6a653e2b7a48dbcb25edf2f2738", "message": "rename InfoRedisAcceptanceTest to InfoNativeRedisAcceptanceTest", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "a06099ab0f01bc345c4c2d9639ecc833f94f532e", "url": "https://github.com/apache/geode/commit/a06099ab0f01bc345c4c2d9639ecc833f94f532e", "message": "change command Class to return syntax error for wrong number of arguments", "committedDate": "2020-09-21T17:05:14Z", "type": "commit"}, {"oid": "a06099ab0f01bc345c4c2d9639ecc833f94f532e", "url": "https://github.com/apache/geode/commit/a06099ab0f01bc345c4c2d9639ecc833f94f532e", "message": "change command Class to return syntax error for wrong number of arguments", "committedDate": "2020-09-21T17:05:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0MzIwMw==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492343203", "bodyText": "Maybe a nit, but it feels like this is now hidden in a class that is unrelated to anything about parameters. I much preferred your previous idea about passing the 'special' error message in at the constraint level - i.e. in RedisCommandType. Perhaps too much refactoring, but also consider making ParameterRequirements abstract and pulling this method into that class. It feels like a more natural place for it.", "author": "jdeppe-pivotal", "createdAt": "2020-09-21T21:00:19Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/netty/Command.java", "diffHunk": "@@ -183,8 +184,16 @@ public boolean isOfType(RedisCommandType type) {\n   }\n \n   public String wrongNumberOfArgumentsError() {\n-    return String.format(\"wrong number of arguments for '%s' command\",\n-        getCommandType().toString().toLowerCase());\n+    String result;\n+\n+    if (getCommandType().equals(RedisCommandType.INFO)) {", "originalCommit": "a06099ab0f01bc345c4c2d9639ecc833f94f532e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMTUxMg==", "url": "https://github.com/apache/geode/pull/5526#discussion_r492821512", "bodyText": "yeah, we discussed that same thing.  I think we both saw this point but decided not to make the change because we had just finished doing it the other way.  Anyway, just pushed a commit that implements it the way we originally discussed (with the parameter being passed in when the command is declared in the RedisCommandTypes file).", "author": "jhutchison", "createdAt": "2020-09-22T15:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0MzIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "b54be45d292e19d242d63ae7781157cc9d8454e7", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/Command.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/Command.java\nindex 7705d5321f..a9295a31e7 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/Command.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/netty/Command.java\n\n@@ -183,16 +182,11 @@ public class Command {\n     return type == getCommandType();\n   }\n \n-  public String wrongNumberOfArgumentsError() {\n+  public String wrongNumberOfArgumentsErrorMessage() {\n     String result;\n-\n-    if (getCommandType().equals(RedisCommandType.INFO)) {\n-      result = RedisConstants.ERROR_SYNTAX;\n-    } else {\n       result = String.format(\n           \"wrong number of arguments for '%s' command\",\n           getCommandType().toString().toLowerCase());\n-    }\n     return result;\n   }\n \n"}}, {"oid": "b54be45d292e19d242d63ae7781157cc9d8454e7", "url": "https://github.com/apache/geode/commit/b54be45d292e19d242d63ae7781157cc9d8454e7", "message": "move logic for optional error mesg into MaximmumParamaterRequirement class", "committedDate": "2020-09-22T15:03:34Z", "type": "commit"}, {"oid": "225705402048d17ad0786e61631610ccc4da93f9", "url": "https://github.com/apache/geode/commit/225705402048d17ad0786e61631610ccc4da93f9", "message": "spotless", "committedDate": "2020-09-22T16:38:40Z", "type": "commit"}]}