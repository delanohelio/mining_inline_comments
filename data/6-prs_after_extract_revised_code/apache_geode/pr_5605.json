{"pr_number": 5605, "pr_title": "GEODE-8584: Message transmission fails with IllegalStateException in socket i/o code", "pr_createdAt": "2020-10-07T23:56:25Z", "pr_url": "https://github.com/apache/geode/pull/5605", "timeline": [{"oid": "46ee1568dc0b510ba03e98295c28d6ed87305fae", "url": "https://github.com/apache/geode/commit/46ee1568dc0b510ba03e98295c28d6ed87305fae", "message": "GEODE-8584: Message transmission fails with IllegalStateException in socket i/o code\n\nAdd appropriate synchronization when using ioFilter's buffers.\nto do: add testing\nto do: document the need for synchronization in the NioFilter interface.", "committedDate": "2020-10-07T23:53:36Z", "type": "commit"}, {"oid": "965ce7e278f1f331cbecfda5cb3d267bfcba861c", "url": "https://github.com/apache/geode/commit/965ce7e278f1f331cbecfda5cb3d267bfcba861c", "message": "revised synchronization across all uses of NioFilter, added test", "committedDate": "2020-10-08T15:29:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODQ2MQ==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501818461", "bodyText": "Is there anything that needs to be done, if write throws exception...Sorry I may be asking wrong question as I don't have much context here.", "author": "agingade", "createdAt": "2020-10-08T15:36:36Z", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -2588,17 +2592,20 @@ void writeFully(SocketChannel channel, ByteBuffer buffer, boolean forceAsync,\n           }\n           // fall through\n         }\n-        ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n-        while (wrappedBuffer.remaining() > 0) {\n-          int amtWritten = 0;\n-          long start = stats.startSocketWrite(true);\n-          try {\n-            amtWritten = channel.write(wrappedBuffer);\n-          } finally {\n-            stats.endSocketWrite(true, start, amtWritten, 0);\n+        // synchronize on the ioFilter while using its network buffer\n+        synchronized (ioFilter) {\n+          ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n+          while (wrappedBuffer.remaining() > 0) {\n+            int amtWritten = 0;\n+            long start = stats.startSocketWrite(true);\n+            try {\n+              amtWritten = channel.write(wrappedBuffer);", "originalCommit": "46ee1568dc0b510ba03e98295c28d6ed87305fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMzc4NA==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501833784", "bodyText": "handlers for declared exceptions are already in place", "author": "bschuchardt", "createdAt": "2020-10-08T15:58:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODQ2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "df9a1af73a187f857ed704dc5322d30e5f0ea33c", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\nindex 75ece647ff..1c9a45d388 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n\n@@ -2593,7 +2595,7 @@ public class Connection implements Runnable {\n           // fall through\n         }\n         // synchronize on the ioFilter while using its network buffer\n-        synchronized (ioFilter) {\n+        synchronized (ioFilter.getSynchObject()) {\n           ByteBuffer wrappedBuffer = ioFilter.wrap(buffer);\n           while (wrappedBuffer.remaining() > 0) {\n             int amtWritten = 0;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODg5MA==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501818890", "bodyText": "This should be info or debug level log? just checking...", "author": "agingade", "createdAt": "2020-10-08T15:37:08Z", "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -396,9 +402,17 @@ public synchronized void close(SocketChannel socketChannel) {\n     } catch (IOException e) {\n       throw new GemFireIOException(\"exception closing SSL session\", e);\n     } finally {\n-      bufferPool.releaseBuffer(TRACKED_SENDER, myNetData);\n-      bufferPool.releaseBuffer(TRACKED_RECEIVER, peerAppData);\n+      logger.info(\"NioSSLEngine releasing two buffers myNetData={}({}), peerAppData={}({})\",", "originalCommit": "46ee1568dc0b510ba03e98295c28d6ed87305fae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMzE0OQ==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501833149", "bodyText": "thanks for catching that Anil - that's debug output that I meant to delete", "author": "bschuchardt", "createdAt": "2020-10-08T15:57:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxODg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "df9a1af73a187f857ed704dc5322d30e5f0ea33c", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java b/geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java\nindex eeb6df1c06..e0a0ce6c31 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java\n\n@@ -402,11 +402,6 @@ public class NioSslEngine implements NioFilter {\n     } catch (IOException e) {\n       throw new GemFireIOException(\"exception closing SSL session\", e);\n     } finally {\n-      logger.info(\"NioSSLEngine releasing two buffers myNetData={}({}), peerAppData={}({})\",\n-          Integer.toHexString(System.identityHashCode(myNetData)),\n-          (myNetData.isDirect()? \"direct\":\"heap\"),\n-          Integer.toHexString(System.identityHashCode(peerAppData)),\n-          (myNetData.isDirect()? \"direct\":\"heap\"));\n       ByteBuffer netData = myNetData;\n       ByteBuffer appData = peerAppData;\n       myNetData = null;\n"}}, {"oid": "df9a1af73a187f857ed704dc5322d30e5f0ea33c", "url": "https://github.com/apache/geode/commit/df9a1af73a187f857ed704dc5322d30e5f0ea33c", "message": "remove dangling debug logging", "committedDate": "2020-10-08T15:58:44Z", "type": "commit"}, {"oid": "02b42ecebb1d28c54e5b5926242a222378ce7b15", "url": "https://github.com/apache/geode/commit/02b42ecebb1d28c54e5b5926242a222378ce7b15", "message": "fix pmd problem", "committedDate": "2020-10-08T16:20:21Z", "type": "commit"}, {"oid": "842888e320f5532c91bd6dfe42b1b02fa090986f", "url": "https://github.com/apache/geode/commit/842888e320f5532c91bd6dfe42b1b02fa090986f", "message": "fix pmd problem", "committedDate": "2020-10-08T17:08:36Z", "type": "commit"}, {"oid": "3c2037a8f55c20f157348d89c6a4d95bf51bf52f", "url": "https://github.com/apache/geode/commit/3c2037a8f55c20f157348d89c6a4d95bf51bf52f", "message": "remove unnecessary volatile modifier", "committedDate": "2020-10-08T17:13:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5OTkxMw==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501899913", "bodyText": "did you consider adding \".asReadOnlyBuffer()\" so that this would be immutable?", "author": "dschneider-pivotal", "createdAt": "2020-10-08T17:43:32Z", "path": "geode-core/src/main/java/org/apache/geode/internal/net/NioSslEngine.java", "diffHunk": "@@ -52,6 +53,11 @@\n public class NioSslEngine implements NioFilter {\n   private static final Logger logger = LogService.getLogger();\n \n+  // this variable requires the MakeImmutable annotation but the buffer is empty and\n+  // not really modifiable\n+  @MakeImmutable\n+  private static final ByteBuffer EMPTY_BUFFER = ByteBuffer.allocate(0);", "originalCommit": "3c2037a8f55c20f157348d89c6a4d95bf51bf52f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkyMjEyOA==", "url": "https://github.com/apache/geode/pull/5605#discussion_r501922128", "bodyText": "That won't satisfy PMD (since it returns a ByteBuffer which is not considered an immutable object by PMD) but it still might be valuable.", "author": "Bill", "createdAt": "2020-10-08T18:18:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5OTkxMw=="}], "type": "inlineReview", "revised_code": null}]}