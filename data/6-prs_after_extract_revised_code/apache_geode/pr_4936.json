{"pr_number": 4936, "pr_title": "GEODE-7851: Pulse Oauth Support", "pr_createdAt": "2020-04-09T21:07:54Z", "pr_url": "https://github.com/apache/geode/pull/4936", "timeline": [{"oid": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "url": "https://github.com/apache/geode/commit/354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "message": "GEODE-7851: Pulse Oauth Support\n\n- create an OauthSecurityConfig to configure spring using oauth\n- add PULSE as an oauth-enabled-component, and if pulse is set to use\n  oauth, set the OauthSecurityConfig as the active security profile\n- use pulse.properties in the locator's working dir to externalize pulse\n  authentication provider configuration\n\nCo-authored-by: Dale Emery <demery@pivotal.io>\nCo-authored-by: Joris Melchior <joris.melchior@gmail.com>", "committedDate": "2020-04-09T20:56:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzODQyNg==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407538426", "bodyText": "doesn't seem necessary to have this.", "author": "jinmeiliao", "createdAt": "2020-04-13T15:27:58Z", "path": "geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java", "diffHunk": "@@ -196,6 +196,7 @@ private void loadWebApplications() {\n       }\n     } else {\n       String pwFile = this.config.getJmxManagerPasswordFile();\n+      String springActiveProfile = \"spring.profiles.active\";", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYxNzMxOA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407617318", "bodyText": "I've removed it.", "author": "demery-pivotal", "createdAt": "2020-04-13T17:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzODQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "b8ee16efb4c0f85f8753fc51a307165a07463d73", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java b/geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java\nindex 1ae7ff609e..fc7ad22a38 100755\n--- a/geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java\n+++ b/geode-core/src/main/java/org/apache/geode/management/internal/ManagementAgent.java\n\n@@ -196,7 +196,6 @@ public class ManagementAgent {\n       }\n     } else {\n       String pwFile = this.config.getJmxManagerPasswordFile();\n-      String springActiveProfile = \"spring.profiles.active\";\n       if (securityService.isIntegratedSecurity()) {\n         String[] authTokenEnabledComponents = config.getSecurityAuthTokenEnabledComponents();\n         boolean pulseOauth = Arrays.stream(authTokenEnabledComponents)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407554822", "bodyText": "hard to associate clientName with providerName, maybe rename the property to \"clientName\"?", "author": "jinmeiliao", "createdAt": "2020-04-13T15:58:44Z", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java", "diffHunk": "@@ -84,16 +107,15 @@ public OAuth2AuthorizedClientRepository authorizedClientRepository(\n \n   private ClientRegistration clientRegistration() {\n     return ClientRegistration.withRegistrationId(providerId)\n-        .clientId(clientId)\n-        .clientSecret(clientSecret)\n         .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)\n         .redirectUriTemplate(\"{baseUrl}/login/oauth2/code/{registrationId}\")\n-        .scope(\"openid\", \"CLUSTER:READ\", \"CLUSTER:WRITE\", \"DATA:READ\", \"DATA:WRITE\")\n+        .clientId(clientId)\n+        .clientSecret(clientSecret)\n         .authorizationUri(authorizationUri)\n         .tokenUri(tokenUri)\n         .userInfoUri(userInfoUri)\n         .jwkSetUri(jwkSetUri)\n-        .clientName(\"Pulse\")\n+        .clientName(providerName)", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1MDQwMA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407650400", "bodyText": "Despite the name of the method clientName(), the value really, really, really does name the provider. If you look at the ClientRegistration code (line 561), you'll see that the default value for \"client name\" is registrationId (aka provider id).\nGiven that, we have some options:\n\nName the property pulse.oauth.clientName. I think this name is very confusing for whoever writes the properties file.\nName the property pulse.oauth.providerName. This name is clearer for whoever writes the properties file, and is a bit of a puzzle for a Geode developer reading the OAuthSecurityConfig code. We could add a comment explaining the puzzle.\nName the property pulse.oauth.providerName, but name the field clientName. Then this method call becomes clearer. But then a Geode developer may wonder why the field name differs from the property name. Again, we could explain with a comment.\n\nWhich do you prefer?", "author": "demery-pivotal", "createdAt": "2020-04-13T18:52:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2OTAzMQ==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407669031", "bodyText": "2 with a comment probably would be better.", "author": "jinmeiliao", "createdAt": "2020-04-13T19:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NDgyMg=="}], "type": "inlineReview", "revised_code": {"commit": "b8ee16efb4c0f85f8753fc51a307165a07463d73", "chunk": "diff --git a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java\nindex 4f484acff4..470c932bbd 100644\n--- a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java\n+++ b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/OAuthSecurityConfig.java\n\n@@ -115,6 +115,10 @@ public class OAuthSecurityConfig extends WebSecurityConfigurerAdapter {\n         .tokenUri(tokenUri)\n         .userInfoUri(userInfoUri)\n         .jwkSetUri(jwkSetUri)\n+        // When Spring shows the login page, it displays a link to the OAuth provider's\n+        // authorization URI. Spring uses the value passed to clientName() as the text for that\n+        // link. We pass the providerName property here, to let the user know which OAuth provider\n+        // they will be redirected to.\n         .clientName(providerName)\n         .userNameAttributeName(userNameAttributeName)\n         .build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407598319", "bodyText": "I believe you don't need to implement LogoutSuccessHandler since SimpleUrlLogoutSuccessHandler already implements that\nyou don't need to implement ContextAware either, Spring should take care of auto-wiring for you if you declare\n\n@Autowired\nprivate Repository repository;", "author": "jinmeiliao", "createdAt": "2020-04-13T17:18:40Z", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNjgzNA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407636834", "bodyText": "I've removed the unnecessary implements LogoutSuccessHandler.\nRemoving ContextAware is trickier. Unfortunately, simply autowiring the repository this way causes a circular dependency that Spring can't resolve.\nIn my logout spike, I have fixed this by untangling the circular dependency. So here are the options I can think of:\n\nMove the dependency-untangling code from my logout spike into this PR. This involves changes to 8 or 9 files.\nLeave LogoutHandler implementing ContextAware for now, and fix it in a later PR.\n\nWhich would you prefer?", "author": "demery-pivotal", "createdAt": "2020-04-13T18:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0NjI1OA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407646258", "bodyText": "we can leave it for now", "author": "jinmeiliao", "createdAt": "2020-04-13T18:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b8ee16efb4c0f85f8753fc51a307165a07463d73", "chunk": "diff --git a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\nindex e5a6bfbbf5..4ad4c08982 100644\n--- a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\n+++ b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\n\n@@ -26,7 +26,6 @@ import org.springframework.beans.BeansException;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ApplicationContextAware;\n import org.springframework.security.core.Authentication;\n-import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n import org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler;\n \n import org.apache.geode.tools.pulse.internal.data.Repository;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODU3MQ==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407598571", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private ApplicationContext applicationContext;\n          \n          \n            \n              @Autowired\n          \n          \n            \n              private Repository repository;", "author": "jinmeiliao", "createdAt": "2020-04-13T17:19:06Z", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java", "diffHunk": "@@ -30,24 +33,31 @@\n \n /**\n  * Handler is used to close jmx connection maintained at user-level\n- *\n  */\n-public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler {\n+public class LogoutHandler extends SimpleUrlLogoutSuccessHandler implements LogoutSuccessHandler,\n+    ApplicationContextAware {\n   private static final Logger logger = LogManager.getLogger();\n+  private ApplicationContext applicationContext;", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b8ee16efb4c0f85f8753fc51a307165a07463d73", "chunk": "diff --git a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\nindex e5a6bfbbf5..4ad4c08982 100644\n--- a/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\n+++ b/geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/security/LogoutHandler.java\n\n@@ -26,7 +26,6 @@ import org.springframework.beans.BeansException;\n import org.springframework.context.ApplicationContext;\n import org.springframework.context.ApplicationContextAware;\n import org.springframework.security.core.Authentication;\n-import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n import org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler;\n \n import org.apache.geode.tools.pulse.internal.data.Repository;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407599284", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final Repository repository;\n          \n          \n            \n              @Autowired\n          \n          \n            \n              private Repository repository;", "author": "jinmeiliao", "createdAt": "2020-04-13T17:20:24Z", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0MDcyNQ==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407640725", "bodyText": "How strongly do you feel about this? The general (strong) consensus is to avoid field injection. And we've found that constructor injection makes it way easier to write unit tests (if we ever get around to writing unit tests).", "author": "demery-pivotal", "createdAt": "2020-04-13T18:34:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0Njc1MA==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407646750", "bodyText": "I only prefer field injection because it's less code. If this makes testing easier, I am OK with it.", "author": "jinmeiliao", "createdAt": "2020-04-13T18:45:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTI4NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5OTgyNg==", "url": "https://github.com/apache/geode/pull/4936#discussion_r407599826", "bodyText": "no need for this constructor if Repository variable is declared as autowired already.\nSame should be the same for all the service classes.", "author": "jinmeiliao", "createdAt": "2020-04-13T17:21:24Z", "path": "geode-pulse/src/main/java/org/apache/geode/tools/pulse/internal/service/ClusterDetailsService.java", "diffHunk": "@@ -44,14 +45,20 @@\n public class ClusterDetailsService implements PulseService {\n \n   private final ObjectMapper mapper = new ObjectMapper();\n+  private final Repository repository;\n+\n+  @Autowired", "originalCommit": "354a068a3a3a13ce11a0c7de0098eecedb8cae0c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "b8ee16efb4c0f85f8753fc51a307165a07463d73", "url": "https://github.com/apache/geode/commit/b8ee16efb4c0f85f8753fc51a307165a07463d73", "message": "Add documentation and remove unnecessary code\n\n- Remove redundant 'implements LogoutSuccessHandler' from LogoutHandler.\n- Remove unused local variable in ManagementAgent.\n- Add comment in OAuthSecurityConfig explaining why we pass the the\n  OAuth provider name to ClientRegistration.clientName().\n\nAuthored-by: Dale Emery <demery@pivotal.io>", "committedDate": "2020-04-13T19:48:32Z", "type": "commit"}]}