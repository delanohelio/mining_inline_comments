{"pr_number": 5187, "pr_title": "GEODE-8179: gfsh query cmd returns incorrect results if '=' sign is missing", "pr_createdAt": "2020-05-29T23:41:37Z", "pr_url": "https://github.com/apache/geode/pull/5187", "timeline": [{"oid": "74b72d97fc793c5bd0b3d9a498333302336706d1", "url": "https://github.com/apache/geode/commit/74b72d97fc793c5bd0b3d9a498333302336706d1", "message": "GEODE-8179: gfsh query cmd returns incorrect results if '=' sign is missing", "committedDate": "2020-06-02T21:15:19Z", "type": "forcePushed"}, {"oid": "01012e65424fd9d6a66129bc9be20806d0a2bdb9", "url": "https://github.com/apache/geode/commit/01012e65424fd9d6a66129bc9be20806d0a2bdb9", "message": "GEODE-8179: gfsh query cmd returns incorrect results if '=' sign is missing", "committedDate": "2020-06-03T21:30:09Z", "type": "commit"}, {"oid": "01012e65424fd9d6a66129bc9be20806d0a2bdb9", "url": "https://github.com/apache/geode/commit/01012e65424fd9d6a66129bc9be20806d0a2bdb9", "message": "GEODE-8179: gfsh query cmd returns incorrect results if '=' sign is missing", "committedDate": "2020-06-03T21:30:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MTM4NQ==", "url": "https://github.com/apache/geode/pull/5187#discussion_r436991385", "bodyText": "anyway to not hardcode these two conditions? maybe based the decision on \"do not remove = sign if it's in the quotes\"?", "author": "jinmeiliao", "createdAt": "2020-06-08T20:47:48Z", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -122,21 +122,30 @@ else if (insideQuoteOf == c) {\n     List<String> splitWithWhiteSpaces = splitWithWhiteSpace(userInput);\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n+    boolean doNotRemoveEqualsInNextToken = false;\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n-      int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      if (doNotRemoveEqualsInNextToken) {\n         furtherSplitWithEquals.add(token);\n+        doNotRemoveEqualsInNextToken = false;\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        // if this token has equal sign, split around the first occurrence of it\n+        int indexOfFirstEqual = token.indexOf('=');\n+        if (indexOfFirstEqual < 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n+      if (token.equals(\"--query\") || token.equals(\"--J\")) {", "originalCommit": "01012e65424fd9d6a66129bc9be20806d0a2bdb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NTUzNg==", "url": "https://github.com/apache/geode/pull/5187#discussion_r437255536", "bodyText": "good point, I have changed the solution. Thanks!", "author": "alb3rtobr", "createdAt": "2020-06-09T09:07:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MTM4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "b034a50dfd3988eeb721836bb9abebe2e0431b9f", "chunk": "diff --git a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\nindex 225baf44c2..7b168f9576 100755\n--- a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\n+++ b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\n\n@@ -122,17 +122,18 @@ public class GfshParser extends SimpleParser {\n     List<String> splitWithWhiteSpaces = splitWithWhiteSpace(userInput);\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n-    boolean doNotRemoveEqualsInNextToken = false;\n     for (String token : splitWithWhiteSpaces) {\n-      if (doNotRemoveEqualsInNextToken) {\n+      int indexOfFirstEqual = token.indexOf('=');\n+      int indexOfFirstDoubleQuote = token.indexOf('\"');\n+      int indexOfFirstSingleQuote = token.indexOf('\\'');\n+      if (indexOfFirstEqual < 0 || token.startsWith(\"-D\")) {\n         furtherSplitWithEquals.add(token);\n-        doNotRemoveEqualsInNextToken = false;\n       } else {\n-        // if this token has equal sign, split around the first occurrence of it\n-        int indexOfFirstEqual = token.indexOf('=');\n-        if (indexOfFirstEqual < 0) {\n+        if (indexOfFirstDoubleQuote == 0 || indexOfFirstSingleQuote == 0) {\n           furtherSplitWithEquals.add(token);\n-        } else {\n+        } else if ((indexOfFirstDoubleQuote < 0 && indexOfFirstSingleQuote < 0)\n+            || (indexOfFirstEqual < indexOfFirstDoubleQuote)\n+            || (indexOfFirstEqual < indexOfFirstSingleQuote)) {\n           String left = token.substring(0, indexOfFirstEqual);\n           String right = token.substring(indexOfFirstEqual + 1);\n           if (left.length() > 0) {\n"}}, {"oid": "b034a50dfd3988eeb721836bb9abebe2e0431b9f", "url": "https://github.com/apache/geode/commit/b034a50dfd3988eeb721836bb9abebe2e0431b9f", "message": "GEODE-8179: Avoid to hardcode option names", "committedDate": "2020-06-09T09:01:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzIzNQ==", "url": "https://github.com/apache/geode/pull/5187#discussion_r439097235", "bodyText": "this entire for loop can be simplified to:\nfor (String token : splitWithWhiteSpaces) {\n      // do not split with \"=\" if this part starts with quotes or is part of -D\n      if(token.startsWith(\"'\") || token.startsWith(\"\\\"\") || token.startsWith(\"-D\")) {\n        furtherSplitWithEquals.add(token);\n        continue;\n      }\n      // if this token has equal sign, split around the first occurrence of it\n      int indexOfFirstEqual = token.indexOf('=');\n      if (indexOfFirstEqual < 0) {\n        furtherSplitWithEquals.add(token);\n        continue;\n      }\n      String left = token.substring(0, indexOfFirstEqual);\n      String right = token.substring(indexOfFirstEqual + 1);\n      if (left.length() > 0) {\n        furtherSplitWithEquals.add(left);\n      }\n      if (right.length() > 0) {\n        furtherSplitWithEquals.add(right);\n      }\n    }", "author": "jinmeiliao", "createdAt": "2020-06-11T22:04:22Z", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java", "diffHunk": "@@ -123,18 +123,25 @@ else if (insideQuoteOf == c) {\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n     for (String token : splitWithWhiteSpaces) {\n-      // if this token has equal sign, split around the first occurrence of it\n       int indexOfFirstEqual = token.indexOf('=');\n-      if (indexOfFirstEqual < 0) {\n+      int indexOfFirstDoubleQuote = token.indexOf('\"');\n+      int indexOfFirstSingleQuote = token.indexOf('\\'');\n+      if (indexOfFirstEqual < 0 || token.startsWith(\"-D\")) {\n         furtherSplitWithEquals.add(token);\n       } else {\n-        String left = token.substring(0, indexOfFirstEqual);\n-        String right = token.substring(indexOfFirstEqual + 1);\n-        if (left.length() > 0) {\n-          furtherSplitWithEquals.add(left);\n-        }\n-        if (right.length() > 0) {\n-          furtherSplitWithEquals.add(right);\n+        if (indexOfFirstDoubleQuote == 0 || indexOfFirstSingleQuote == 0) {\n+          furtherSplitWithEquals.add(token);\n+        } else if ((indexOfFirstDoubleQuote < 0 && indexOfFirstSingleQuote < 0)\n+            || (indexOfFirstEqual < indexOfFirstDoubleQuote)\n+            || (indexOfFirstEqual < indexOfFirstSingleQuote)) {\n+          String left = token.substring(0, indexOfFirstEqual);\n+          String right = token.substring(indexOfFirstEqual + 1);\n+          if (left.length() > 0) {\n+            furtherSplitWithEquals.add(left);\n+          }\n+          if (right.length() > 0) {\n+            furtherSplitWithEquals.add(right);\n+          }\n         }\n       }\n     }", "originalCommit": "b034a50dfd3988eeb721836bb9abebe2e0431b9f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5ODcwMw==", "url": "https://github.com/apache/geode/pull/5187#discussion_r439298703", "bodyText": "thanks!", "author": "alb3rtobr", "createdAt": "2020-06-12T09:02:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA5NzIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "59079ec03c8841d074b80e73bbf1010c28abc6d3", "chunk": "diff --git a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\nindex 7b168f9576..eed2695734 100755\n--- a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\n+++ b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/GfshParser.java\n\n@@ -123,26 +123,24 @@ public class GfshParser extends SimpleParser {\n \n     List<String> furtherSplitWithEquals = new ArrayList<>();\n     for (String token : splitWithWhiteSpaces) {\n+      // do not split with \"=\" if this part starts with quotes or is part of -D\n+      if (token.startsWith(\"'\") || token.startsWith(\"\\\"\") || token.startsWith(\"-D\")) {\n+        furtherSplitWithEquals.add(token);\n+        continue;\n+      }\n+      // if this token has equal sign, split around the first occurrence of it\n       int indexOfFirstEqual = token.indexOf('=');\n-      int indexOfFirstDoubleQuote = token.indexOf('\"');\n-      int indexOfFirstSingleQuote = token.indexOf('\\'');\n-      if (indexOfFirstEqual < 0 || token.startsWith(\"-D\")) {\n+      if (indexOfFirstEqual < 0) {\n         furtherSplitWithEquals.add(token);\n-      } else {\n-        if (indexOfFirstDoubleQuote == 0 || indexOfFirstSingleQuote == 0) {\n-          furtherSplitWithEquals.add(token);\n-        } else if ((indexOfFirstDoubleQuote < 0 && indexOfFirstSingleQuote < 0)\n-            || (indexOfFirstEqual < indexOfFirstDoubleQuote)\n-            || (indexOfFirstEqual < indexOfFirstSingleQuote)) {\n-          String left = token.substring(0, indexOfFirstEqual);\n-          String right = token.substring(indexOfFirstEqual + 1);\n-          if (left.length() > 0) {\n-            furtherSplitWithEquals.add(left);\n-          }\n-          if (right.length() > 0) {\n-            furtherSplitWithEquals.add(right);\n-          }\n-        }\n+        continue;\n+      }\n+      String left = token.substring(0, indexOfFirstEqual);\n+      String right = token.substring(indexOfFirstEqual + 1);\n+      if (left.length() > 0) {\n+        furtherSplitWithEquals.add(left);\n+      }\n+      if (right.length() > 0) {\n+        furtherSplitWithEquals.add(right);\n       }\n     }\n     return furtherSplitWithEquals;\n"}}, {"oid": "59079ec03c8841d074b80e73bbf1010c28abc6d3", "url": "https://github.com/apache/geode/commit/59079ec03c8841d074b80e73bbf1010c28abc6d3", "message": "GEODE-8179: Simplify loop after review", "committedDate": "2020-06-12T08:21:06Z", "type": "commit"}]}