{"pr_number": 5491, "pr_title": "GEODE-8473: Hang in ReplyProcessor21 when forced-disconnect does not establish a cancellation cause", "pr_createdAt": "2020-08-31T21:05:44Z", "pr_url": "https://github.com/apache/geode/pull/5491", "timeline": [{"oid": "0ffa5a21061197f1d7b5621a178a7a7848dae262", "url": "https://github.com/apache/geode/commit/0ffa5a21061197f1d7b5621a178a7a7848dae262", "message": "GEODE-8473: Hang in ReplyProcessor21 when forced-disconnect does not establish a cancellation cause\n\nEnsure that the cache is informed of a forced-disconnect in the\nDisconnectThread.  This is a follow-on commit to GEODE-8467, which\nensured that the DisconnectThread is launched in the presence of cache\nXML generation failure.  This commit adds a try/catch in\nGMSMembership.uncleanShutdown() to ensure that the up-stream\nClusterDistributionManager is informed of the failure so it can set the\n\"rootCause\" in its CancelCriterion.  ReplyProcessor21 and other objects\nthat poll for this \"rootCause\" will then be released from waiting for\nresponses to messages sent to other members of the cluster.", "committedDate": "2020-08-31T20:55:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MDc3NQ==", "url": "https://github.com/apache/geode/pull/5491#discussion_r486480775", "bodyText": "you tested it all!", "author": "Bill", "createdAt": "2020-09-10T16:34:12Z", "path": "geode-membership/src/integrationTest/java/org/apache/geode/distributed/internal/membership/gms/GMSMembershipJUnitTest.java", "diffHunk": "@@ -396,6 +399,18 @@ public void testMulticastAllowedWithNewVersionViewMember() {\n     assertThat(manager.getGMSManager().isMulticastAllowed()).isTrue();\n   }\n \n+  @Test\n+  public void membershipInvokesUpstreamListenerDuringForcedDisconnect() {\n+    // have an exception interrupt the shutdown process and ensure that a thread is\n+    // launched to inform the cache of shutdown\n+    IllegalStateException expectedException = new IllegalStateException();\n+    doThrow(expectedException).when(services).emergencyClose();\n+    assertThatThrownBy(() -> manager.uncleanShutdown(\"For testing\",\n+        new MemberDisconnectedException(\"For Testing\")))\n+            .isEqualTo(expectedException);\n+    verify(listener).membershipFailure(isA(String.class), isA(Throwable.class));\n+  }\n+", "originalCommit": "0ffa5a21061197f1d7b5621a178a7a7848dae262", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4MDk5MA==", "url": "https://github.com/apache/geode/pull/5491#discussion_r486480990", "bodyText": "solid", "author": "Bill", "createdAt": "2020-09-10T16:34:31Z", "path": "geode-membership/src/main/java/org/apache/geode/distributed/internal/membership/gms/GMSMembership.java", "diffHunk": "@@ -1267,25 +1267,27 @@ public void shutdown() {\n   public void uncleanShutdown(String reason, final Exception e) {\n     inhibitForcedDisconnectLogging(false);\n \n-    if (services.getShutdownCause() == null) {\n-      services.setShutdownCause(e);\n-    }\n-\n-    if (cleanupTimer != null && !cleanupTimer.isShutdown()) {\n-      cleanupTimer.shutdownNow();\n-    }\n+    try {\n+      if (services.getShutdownCause() == null) {\n+        services.setShutdownCause(e);\n+      }\n \n-    lifecycleListener.disconnect(e);\n+      if (cleanupTimer != null && !cleanupTimer.isShutdown()) {\n+        cleanupTimer.shutdownNow();\n+      }\n \n-    // first shut down communication so we don't do any more harm to other\n-    // members\n-    services.emergencyClose();\n+      lifecycleListener.disconnect(e);\n \n-    if (e != null) {\n-      try {\n-        listener.membershipFailure(reason, e);\n-      } catch (RuntimeException re) {\n-        logger.warn(\"Exception caught while shutting down\", re);\n+      // first shut down communication so we don't do any more harm to other\n+      // members\n+      services.emergencyClose();\n+    } finally {\n+      if (e != null) {\n+        try {\n+          listener.membershipFailure(reason, e);\n+        } catch (RuntimeException re) {\n+          logger.warn(\"Exception caught while shutting down\", re);\n+        }", "originalCommit": "0ffa5a21061197f1d7b5621a178a7a7848dae262", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}