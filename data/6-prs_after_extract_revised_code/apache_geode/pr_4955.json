{"pr_number": 4955, "pr_title": "GEODE-7980: update rebalance output on colocated region", "pr_createdAt": "2020-04-14T13:25:25Z", "pr_url": "https://github.com/apache/geode/pull/4955", "timeline": [{"oid": "f7e00927fab62879a1a5f8a027dd0f1fb071fbf2", "url": "https://github.com/apache/geode/commit/f7e00927fab62879a1a5f8a027dd0f1fb071fbf2", "message": "GEODE-7980: update rebalance output on colocated region", "committedDate": "2020-04-14T13:17:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MTE2NA==", "url": "https://github.com/apache/geode/pull/4955#discussion_r408341164", "bodyText": "It would be better to assert that the output for both regions is correct rather than just the first one that appears in the gfsh output. I think that the child region still reports 0 for the total members executed on, which is not correct.", "author": "DonalEvans", "createdAt": "2020-04-14T18:17:59Z", "path": "geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/RebalanceMembersColocationTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more contributor license\n+ * agreements. See the NOTICE file distributed with this work for additional information regarding\n+ * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n+ * copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n+ * or implied. See the License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package org.apache.geode.management.internal.cli.commands;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.IntStream;\n+\n+import junitparams.JUnitParamsRunner;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+\n+import org.apache.geode.cache.Region;\n+import org.apache.geode.cache.RegionShortcut;\n+import org.apache.geode.internal.cache.PartitionAttributesImpl;\n+import org.apache.geode.test.dunit.rules.ClusterStartupRule;\n+import org.apache.geode.test.dunit.rules.MemberVM;\n+import org.apache.geode.test.junit.categories.PersistenceTest;\n+import org.apache.geode.test.junit.rules.GfshCommandRule;\n+\n+\n+@Category(PersistenceTest.class)\n+@RunWith(JUnitParamsRunner.class)\n+public class RebalanceMembersColocationTest {\n+\n+  public static final String PARENT_REGION_NAME = \"parentRegion\";\n+  public static final String CHILD_REGION_NAME = \"childRegion\";\n+  @Rule\n+  public ClusterStartupRule cluster = new ClusterStartupRule();\n+\n+  @Rule\n+  public GfshCommandRule gfsh = new GfshCommandRule();\n+\n+  @Test\n+  public void testRebalanceResultOutputMemberCountWithColocatedRegions() throws Exception {\n+    MemberVM locator = cluster.startLocatorVM(0);\n+\n+    MemberVM server1 = cluster.startServerVM(1, locator.getPort());\n+    MemberVM server2 = cluster.startServerVM(2, locator.getPort());\n+\n+    server1.invoke(() -> {\n+      Region<Object, Object> parentRegion = Objects.requireNonNull(ClusterStartupRule.getCache())\n+          .createRegionFactory(RegionShortcut.PARTITION).create(PARENT_REGION_NAME);\n+\n+      IntStream.range(0, 500).forEach(i -> parentRegion.put(\"key\" + i, \"value\" + 1));\n+\n+      PartitionAttributesImpl attributes = new PartitionAttributesImpl();\n+      attributes.setColocatedWith(PARENT_REGION_NAME);\n+\n+      Region<Object, Object> childRegion = Objects.requireNonNull(ClusterStartupRule.getCache())\n+          .createRegionFactory(RegionShortcut.PARTITION).setPartitionAttributes(attributes)\n+          .create(CHILD_REGION_NAME);\n+\n+      IntStream.range(0, 500).forEach(i -> childRegion.put(\"key\" + i, \"value\" + 1));\n+    });\n+\n+    server2.invoke(() -> {\n+      Objects.requireNonNull(ClusterStartupRule.getCache())\n+          .createRegionFactory(RegionShortcut.PARTITION).create(PARENT_REGION_NAME);\n+\n+      PartitionAttributesImpl attributes = new PartitionAttributesImpl();\n+      attributes.setColocatedWith(PARENT_REGION_NAME);\n+\n+      Objects.requireNonNull(ClusterStartupRule.getCache())\n+          .createRegionFactory(RegionShortcut.PARTITION).setPartitionAttributes(attributes)\n+          .create(CHILD_REGION_NAME);\n+    });\n+\n+    locator.waitUntilRegionIsReadyOnExactlyThisManyServers(\"/\" + PARENT_REGION_NAME, 2);\n+    locator.waitUntilRegionIsReadyOnExactlyThisManyServers(\"/\" + CHILD_REGION_NAME, 2);\n+\n+    gfsh.connectAndVerify(locator);\n+\n+    Map<String, List<String>> rebalanceResult = gfsh.executeAndAssertThat(\"rebalance\")\n+        .statusIsSuccess().hasTableSection().getActual().getContent();\n+\n+    assertThat(rebalanceResult.get(\"Value\").get(9)).isEqualTo(\"2\");", "originalCommit": "f7e00927fab62879a1a5f8a027dd0f1fb071fbf2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyODUwNw==", "url": "https://github.com/apache/geode/pull/4955#discussion_r408428507", "bodyText": "I'm not sure but I think that it is normal to get zeros for colocated region as the whole rebalance is executed on parent region.\nAs I see when execute rebalance it add all results to parent region. It goes in this part of code\nfor (PartitionRebalanceInfo details : detailSet) {\n   results.addDetails(details);\n}\n\n\nIf it is not normal behaviour than this whole logic is wrong and should be changed.", "author": "mkevo", "createdAt": "2020-04-14T20:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxNjIyNA==", "url": "https://github.com/apache/geode/pull/4955#discussion_r408516224", "bodyText": "I think that it's incorrect for \"number of members rebalance was executed on\" to be zero for colocated regions, since the rebalance is being executed on members for those regions. The other details like buckets moved and primaries transferred aren't zero for colocated regions, so members executed on shouldn't be zero either.", "author": "DonalEvans", "createdAt": "2020-04-15T00:43:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1NjcyNQ==", "url": "https://github.com/apache/geode/pull/4955#discussion_r408756725", "bodyText": "Hi @DonalEvans,\nI tested this without changes due to adding \"number of members rebalance was executed on\" row and got the following output:\n\nCommand result for <rebalance>: \nRebalanced partition regions /parentRegion\n\n                                       Rebalanced Stats                                         | Value\n----------------------------------------------------------------------------------------------- | -----\nTotal bytes in all redundant bucket copies created during this rebalance                        | 0\nTotal time (in milliseconds) spent creating redundant bucket copies during this rebalance       | 0\nTotal number of redundant copies created during this rebalance                                  | 0\nTotal bytes in buckets moved during this rebalance                                              | 18426\nTotal time (in milliseconds) spent moving buckets during this rebalance                         | 4119\nTotal number of buckets moved during this rebalance                                             | 132\nTotal time (in milliseconds) spent switching the primary state of buckets during this rebalance | 0\nTotal primaries transferred during this rebalance                                               | 0\nTotal time (in milliseconds) for this rebalance                                                 | 8372\n\nRebalanced partition regions /childRegion\n\n                                       Rebalanced Stats                                         | Value\n----------------------------------------------------------------------------------------------- | -----\nTotal bytes in all redundant bucket copies created during this rebalance                        | 0\nTotal time (in milliseconds) spent creating redundant bucket copies during this rebalance       | 0\nTotal number of redundant copies created during this rebalance                                  | 0\nTotal bytes in buckets moved during this rebalance                                              | 0\nTotal time (in milliseconds) spent moving buckets during this rebalance                         | 0\nTotal number of buckets moved during this rebalance                                             | 0\nTotal time (in milliseconds) spent switching the primary state of buckets during this rebalance | 0\nTotal primaries transferred during this rebalance                                               | 0\nTotal time (in milliseconds) for this rebalance                                                 | 0\n\nFrom this it seems that all details are zero. Also what I saw is that stats for parentRegion is twice updated with stats from both regions, parentRegion and childRegion.\nBefore breaking Gfsh out into separate module it print result for both regions together, as it is below.\nCommand result for <rebalance>: \nRebalanced partition regions /parentRegion, /childRegion\n\n                                       Rebalanced Stats                                         | Value\n----------------------------------------------------------------------------------------------- | -----\nTotal bytes in all redundant bucket copies created during this rebalance                        | 0\nTotal time (in milliseconds) spent creating redundant bucket copies during this rebalance       | 0\nTotal number of redundant copies created during this rebalance                                  | 0\nTotal bytes in buckets moved during this rebalance                                              | 18426\nTotal time (in milliseconds) spent moving buckets during this rebalance                         | 4119\nTotal number of buckets moved during this rebalance                                             | 132\nTotal time (in milliseconds) spent switching the primary state of buckets during this rebalance | 0\nTotal primaries transferred during this rebalance                                               | 0\nTotal time (in milliseconds) for this rebalance                                                 | 8372\n\n\nFrom that I can see that it is normal that output for childRegion is all zeros or the whole logic is wrong and should be changed.\nIn case it is normal that result is all zeros than this change has a sense to get correct number of servers on which rebalance is executed.", "author": "mkevo", "createdAt": "2020-04-15T10:59:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MTE2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NjAwOQ==", "url": "https://github.com/apache/geode/pull/4955#discussion_r409186009", "bodyText": "Ah, I see, thanks for the clarification. In that case, yes, the output provided for \"members executed on\" is consistent with the output for the other stats, and I withdraw my request for additional changes.\nThat being said, it might be worth discussing on the dev list whether showing 0 for colocated regions is actually correct, and filing a new bug ticket if people think that we should output differently. Having a section with all the values 0 seems potentially misleading and confusion to me.", "author": "DonalEvans", "createdAt": "2020-04-15T23:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MTE2NA=="}], "type": "inlineReview", "revised_code": {"commit": "13376c6a8b448e93bab3cf4930f6beba6d152c93", "chunk": "diff --git a/geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/RebalanceMembersColocationTest.java b/geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/RebalanceMembersColocationTest.java\nindex 5ffa65796a..11ed7a897f 100644\n--- a/geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/RebalanceMembersColocationTest.java\n+++ b/geode-gfsh/src/distributedTest/java/org/apache/geode/management/internal/cli/commands/RebalanceMembersColocationTest.java\n\n@@ -89,8 +89,9 @@ public class RebalanceMembersColocationTest {\n \n     gfsh.connectAndVerify(locator);\n \n-    Map<String, List<String>> rebalanceResult = gfsh.executeAndAssertThat(\"rebalance\")\n-        .statusIsSuccess().hasTableSection().getActual().getContent();\n+    Map<String, List<String>> rebalanceResult =\n+        gfsh.executeAndAssertThat(\"rebalance --include-region=/\" + PARENT_REGION_NAME)\n+            .statusIsSuccess().hasTableSection().getActual().getContent();\n \n     assertThat(rebalanceResult.get(\"Value\").get(9)).isEqualTo(\"2\");\n   }\n"}}, {"oid": "8c8af9edecf059ba6abeceb111668ce75902c58d", "url": "https://github.com/apache/geode/commit/8c8af9edecf059ba6abeceb111668ce75902c58d", "message": "empty commit to re-launch CI", "committedDate": "2020-04-16T08:42:51Z", "type": "commit"}, {"oid": "13376c6a8b448e93bab3cf4930f6beba6d152c93", "url": "https://github.com/apache/geode/commit/13376c6a8b448e93bab3cf4930f6beba6d152c93", "message": "update test", "committedDate": "2020-04-16T10:48:23Z", "type": "commit"}]}