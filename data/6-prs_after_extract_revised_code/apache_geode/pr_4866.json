{"pr_number": 4866, "pr_title": "GEODE-7864: Overriding hashCode when equals is overridden.", "pr_createdAt": "2020-03-28T23:04:52Z", "pr_url": "https://github.com/apache/geode/pull/4866", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399727785", "bodyText": "I don\u2019t think there is even a reason this class implements equals. I\u2019d say just let them be default.", "author": "pivotal-jbarrett", "createdAt": "2020-03-29T00:44:26Z", "path": "geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java", "diffHunk": "@@ -146,6 +146,11 @@ public boolean equals(Object o) {\n       return false;\n     }", "originalCommit": "144c22c6138b49affa76775d81c48bd1b343e416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMDUzOA==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399730538", "bodyText": "This was implemented as a refactoring of the ConnectionManagerImpl as a part of improving performance.\nI believe that we cannot use the default implementation because it needs to store the first connection which was removed from the deque while executing  removeFirstOccurrence method in Deque.", "author": "nabarunnag", "createdAt": "2020-03-29T01:22:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMTM0OA==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399731348", "bodyText": "Oh yes, that is correct. I didn't notice this was that special inner class. Thanks!", "author": "pivotal-jbarrett", "createdAt": "2020-03-29T01:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzc4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5dd936ed71b45d2d960acdc8f2138634dd00e2bc", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java\nindex 437d444d53..b4972e0793 100644\n--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java\n+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/pooling/AvailableConnectionManager.java\n\n@@ -148,7 +148,7 @@ public class AvailableConnectionManager {\n \n     @Override\n     public int hashCode() {\n-      return AvailableConnectionManager.class.hashCode();\n+      return EqualsWithPredicate.class.hashCode();\n     }\n \n     public PooledConnection getConnectionThatMatched() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399727893", "bodyText": "This implementation seems to violate the general rules of hashcode. It would use the same members as equals to generate a hashcode.", "author": "pivotal-jbarrett", "createdAt": "2020-03-29T00:46:03Z", "path": "geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java", "diffHunk": "@@ -1032,6 +1032,11 @@ public boolean equals(Object obj) {\n     return this.props.equals(function.getConfig());\n   }\n \n+  @Override\n+  public int hashCode() {", "originalCommit": "144c22c6138b49affa76775d81c48bd1b343e416", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMDk0Nw==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399730947", "bodyText": "Fixed. We now depend on the hashcode of the properties map,  if they have the same properties then they are equal and will have the same hashcode.", "author": "nabarunnag", "createdAt": "2020-03-29T01:28:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMTM5Mw==", "url": "https://github.com/apache/geode/pull/4866#discussion_r399731393", "bodyText": "I think the same issue exists on the other hashcodes added in this commit.", "author": "pivotal-jbarrett", "createdAt": "2020-03-29T01:34:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNzg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5dd936ed71b45d2d960acdc8f2138634dd00e2bc", "chunk": "diff --git a/geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java b/geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java\nindex fa9eea9f7c..e674c52156 100755\n--- a/geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java\n+++ b/geode-dunit/src/main/java/org/apache/geode/internal/cache/functions/TestFunction.java\n\n@@ -1034,7 +1034,7 @@ public class TestFunction<T> implements Function<T>, Declarable2, DataSerializab\n \n   @Override\n   public int hashCode() {\n-    return TestFunction.class.hashCode();\n+    return this.props.hashCode();\n   }\n \n   @Override\n"}}, {"oid": "5dd936ed71b45d2d960acdc8f2138634dd00e2bc", "url": "https://github.com/apache/geode/commit/5dd936ed71b45d2d960acdc8f2138634dd00e2bc", "message": "GEODE-7864: Overriding hashCode when equals in overridden.", "committedDate": "2020-03-29T01:31:42Z", "type": "forcePushed"}, {"oid": "c635db0ae8536b1e01a7a18417b877228a3a8a29", "url": "https://github.com/apache/geode/commit/c635db0ae8536b1e01a7a18417b877228a3a8a29", "message": "GEODE-7864: Overriding hashCode when equals in overridden.", "committedDate": "2020-03-29T23:33:30Z", "type": "forcePushed"}, {"oid": "6a7507c4f21bf86036b903da18bf90bce216cc96", "url": "https://github.com/apache/geode/commit/6a7507c4f21bf86036b903da18bf90bce216cc96", "message": "GEODE-7864: Overriding hashCode when equals in overridden.", "committedDate": "2020-04-18T01:05:53Z", "type": "forcePushed"}, {"oid": "598d886b9c3beae173cc223167f2a0e9cdb70ca4", "url": "https://github.com/apache/geode/commit/598d886b9c3beae173cc223167f2a0e9cdb70ca4", "message": "GEODE-7864: Overriding hashCode when equals in overridden.", "committedDate": "2020-05-27T21:24:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5NTY4Mg==", "url": "https://github.com/apache/geode/pull/4866#discussion_r431995682", "bodyText": "Could this be formatted slightly neater? The following seems to make spotless happy on my machine:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int result =\n          \n          \n            \n                    Objects\n          \n          \n            \n                        .hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool, w_byte,\n          \n          \n            \n                            w_short,\n          \n          \n            \n                            w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list, c_set,\n          \n          \n            \n                            c_queue, c_deque, m_empByCity, day);\n          \n          \n            \n            int result = Objects.hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool,\n          \n          \n            \n                    w_byte, w_short, w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list,\n          \n          \n            \n                    c_set, c_queue, c_deque, m_empByCity, day);", "author": "DonalEvans", "createdAt": "2020-05-28T17:14:00Z", "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "diffHunk": "@@ -992,6 +993,34 @@ boolean compareMaps(Map m1, Map m2) {\n     return true;\n   }\n \n+  @Override\n+  public int hashCode() {\n+    int result =\n+        Objects\n+            .hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool, w_byte,\n+                w_short,\n+                w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list, c_set,\n+                c_queue, c_deque, m_empByCity, day);", "originalCommit": "598d886b9c3beae173cc223167f2a0e9cdb70ca4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10782d7b30554f86395811780bcdb73df20a4272", "chunk": "diff --git a/geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java b/geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java\nindex 5ebfaf1db0..576813f00e 100755\n--- a/geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java\n+++ b/geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java\n\n@@ -995,12 +995,9 @@ public class TestObjectForJSONFormatter implements PdxSerializable {\n \n   @Override\n   public int hashCode() {\n-    int result =\n-        Objects\n-            .hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool, w_byte,\n-                w_short,\n-                w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list, c_set,\n-                c_queue, c_deque, m_empByCity, day);\n+    int result = Objects.hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool,\n+        w_byte, w_short, w_int, w_long, w_bigInt, w_float, w_bigDec, w_double, w_string, c_list,\n+        c_set, c_queue, c_deque, m_empByCity, day);\n     result = 31 * result + Arrays.hashCode(p_boolArray);\n     result = 31 * result + Arrays.hashCode(p_byteArray);\n     result = 31 * result + Arrays.hashCode(p_shortArray);\n"}}, {"oid": "10782d7b30554f86395811780bcdb73df20a4272", "url": "https://github.com/apache/geode/commit/10782d7b30554f86395811780bcdb73df20a4272", "message": "GEODE-7864: Overriding hashCode when equals in overridden.\n\nCo-authored-by: Donal Evans <donalevans86@gmail.com>", "committedDate": "2020-05-28T22:06:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ3MTAxNw==", "url": "https://github.com/apache/geode/pull/4866#discussion_r433471017", "bodyText": "What about:\nreturn Arrays.deepHashCode(new Object[] {p_pool, p_poolArray, ...});", "author": "pivotal-jbarrett", "createdAt": "2020-06-01T20:27:48Z", "path": "geode-junit/src/main/java/org/apache/geode/pdx/TestObjectForJSONFormatter.java", "diffHunk": "@@ -992,6 +993,31 @@ boolean compareMaps(Map m1, Map m2) {\n     return true;\n   }\n \n+  @Override\n+  public int hashCode() {\n+    int result = Objects.hash(p_bool, p_byte, p_short, p_int, p_long, p_float, p_double, w_bool,", "originalCommit": "10782d7b30554f86395811780bcdb73df20a4272", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4b22b7ee8f0a56b61f1f6863e64570c6f3c301f3", "url": "https://github.com/apache/geode/commit/4b22b7ee8f0a56b61f1f6863e64570c6f3c301f3", "message": "GEODE-7864: Overriding hashCode when equals in overridden\n\nCo-authored-by: Donal Evans <donalevans86@gmail.com>", "committedDate": "2020-06-16T19:55:28Z", "type": "commit"}, {"oid": "4b22b7ee8f0a56b61f1f6863e64570c6f3c301f3", "url": "https://github.com/apache/geode/commit/4b22b7ee8f0a56b61f1f6863e64570c6f3c301f3", "message": "GEODE-7864: Overriding hashCode when equals in overridden\n\nCo-authored-by: Donal Evans <donalevans86@gmail.com>", "committedDate": "2020-06-16T19:55:28Z", "type": "forcePushed"}]}