{"pr_number": 5132, "pr_title": "GEODE-8131: reader thread blocked attempting to issue an alert", "pr_createdAt": "2020-05-19T15:47:25Z", "pr_url": "https://github.com/apache/geode/pull/5132", "timeline": [{"oid": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6", "url": "https://github.com/apache/geode/commit/3db5a4ca5c8086567fb3f63ba873b53eec375eb6", "message": "GEODE-8131: reader thread blocked attempting to issue an alert\n\nThis PR does not solve the problem of the alert system causing a P2P\nmessage reader to block but instead ensures that the reader thread will\nwrite deserialization information to the log before issuing a fatal\nalert.  If the alert level is set to \"info\" this won't help, but no-one\nwould set the alert level to that level.\n\nAlong the way I removed some duplicate strings.", "committedDate": "2020-05-19T15:43:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDEzMg==", "url": "https://github.com/apache/geode/pull/5132#discussion_r428154132", "bodyText": "Instead of repeating this code in three places, comment-and-all, it would be better to have the three sites call a new method e.g. logFatal(\u2026). The method could have a block comment telling about what it's contract is etc.", "author": "Bill", "createdAt": "2020-05-20T16:37:55Z", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -3054,7 +3058,9 @@ private void readMessage(ByteBuffer peerDataBuffer) {\n         failureMsg = \"Unexpected failure deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        logger.fatal(\"Unexpected failure deserializing message\", failureEx);\n+        // log at info level first in case fatal-level alert notification becomes blocked\n+        logger.info(failureMsg, failureEx);\n+        logger.fatal(failureMsg, failureEx);", "originalCommit": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd6d5d67c635754c6377ab80ac3eba341ce4f166", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\nindex 22a6719b9a..d307634bd2 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n\n@@ -3058,9 +3054,7 @@ public class Connection implements Runnable {\n         failureMsg = \"Unexpected failure deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        // log at info level first in case fatal-level alert notification becomes blocked\n-        logger.info(failureMsg, failureEx);\n-        logger.fatal(failureMsg, failureEx);\n+        logAtInfoAndFatal(failureMsg, failureEx);\n       } finally {\n         msgLength = md.size();\n         releaseMsgDestreamer(messageId, md);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDkzNw==", "url": "https://github.com/apache/geode/pull/5132#discussion_r428154937", "bodyText": "why is toString() called explicitly in this case but not in the other two?", "author": "Bill", "createdAt": "2020-05-20T16:38:48Z", "path": "geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java", "diffHunk": "@@ -3027,13 +3027,17 @@ private void readMessage(ByteBuffer peerDataBuffer) {\n         failureMsg = \"ClassNotFound deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        logger.fatal(\"ClassNotFound deserializing message: {}\", ex.toString());\n+        // log at info level first in case fatal-level alert notification becomes blocked\n+        logger.info(failureMsg, failureEx);\n+        logger.fatal(failureMsg, failureEx.toString());", "originalCommit": "3db5a4ca5c8086567fb3f63ba873b53eec375eb6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3NjkxMQ==", "url": "https://github.com/apache/geode/pull/5132#discussion_r428776911", "bodyText": "Beats me why the toString is there - I didn't add it.  I do want to see the full call stack when triaging a problem like this.  Maybe it has to do with alert listeners wanting one-liners?", "author": "bschuchardt", "createdAt": "2020-05-21T16:44:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NDkzNw=="}], "type": "inlineReview", "revised_code": {"commit": "cd6d5d67c635754c6377ab80ac3eba341ce4f166", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\nindex 22a6719b9a..d307634bd2 100644\n--- a/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n+++ b/geode-core/src/main/java/org/apache/geode/internal/tcp/Connection.java\n\n@@ -3027,17 +3027,13 @@ public class Connection implements Runnable {\n         failureMsg = \"ClassNotFound deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        // log at info level first in case fatal-level alert notification becomes blocked\n-        logger.info(failureMsg, failureEx);\n-        logger.fatal(failureMsg, failureEx.toString());\n+        logAtInfoAndFatal(failureMsg, failureEx);\n       } catch (IOException ex) {\n         owner.getConduit().getStats().decMessagesBeingReceived(md.size());\n         failureMsg = \"IOException deserializing message\";\n         failureEx = ex;\n         rpId = md.getRPid();\n-        // log at info level first in case fatal-level alert notification becomes blocked\n-        logger.info(failureMsg, failureEx);\n-        logger.fatal(failureMsg, failureEx);\n+        logAtInfoAndFatal(failureMsg, failureEx);\n       } catch (InterruptedException ex) {\n         interrupted = true;\n         owner.getConduit().getCancelCriterion().checkCancelInProgress(ex);\n"}}, {"oid": "cd6d5d67c635754c6377ab80ac3eba341ce4f166", "url": "https://github.com/apache/geode/commit/cd6d5d67c635754c6377ab80ac3eba341ce4f166", "message": "removing duplicate code & logging toString of exceptions at fatal-level", "committedDate": "2020-05-21T17:03:32Z", "type": "commit"}]}