{"pr_number": 5142, "pr_title": "GEODE-8138: Improve semantics of the redis-port option", "pr_createdAt": "2020-05-20T22:00:48Z", "pr_url": "https://github.com/apache/geode/pull/5142", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDg5MA==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428390890", "bodyText": "Is the default now 6379? Also I think you want a \".\" at the end of the sentence.", "author": "dschneider-pivotal", "createdAt": "2020-05-21T01:05:17Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java", "diffHunk": "@@ -1312,11 +1313,13 @@ static Class _getAttributeType(String attName) {\n     m.put(MEMCACHED_BIND_ADDRESS,\n         \"The address the GemFireMemcachedServer will listen on for remote connections. Default is \\\"\\\" which causes the GemFireMemcachedServer to listen on the host's default address. This property is ignored if memcached-port is \\\"0\\\".\");\n     m.put(REDIS_PORT,\n-        \"The port GeodeRedisServer will listen on. Default is 0. Set to zero to disable GeodeRedisServer.\");\n+        \"The port Redis API for Geode will listen on. Default is 0\");", "originalCommit": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzMjczNg==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428632736", "bodyText": "Yes. Thank you for finding this!", "author": "sabbey37", "createdAt": "2020-05-21T12:53:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDg5MA=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java b/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java\nindex 262d9950a7..1a8a1efe39 100644\n--- a/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java\n+++ b/geode-core/src/main/java/org/apache/geode/distributed/internal/AbstractDistributionConfig.java\n\n@@ -1313,13 +1313,13 @@ public abstract class AbstractDistributionConfig extends AbstractConfig\n     m.put(MEMCACHED_BIND_ADDRESS,\n         \"The address the GemFireMemcachedServer will listen on for remote connections. Default is \\\"\\\" which causes the GemFireMemcachedServer to listen on the host's default address. This property is ignored if memcached-port is \\\"0\\\".\");\n     m.put(REDIS_PORT,\n-        \"The port Redis API for Geode will listen on. Default is 0\");\n+        \"Specifies the port on which the server listens for Redis API for Geode connections. A value of 0 selects a random port.  Default is 6379.\");\n     m.put(REDIS_BIND_ADDRESS,\n-        \"The address the Redis API for Geode will listen on for remote connections. Default is \\\"\\\" which causes the  Redis API for Geode to listen on the host's default address.\");\n+        \"Specifies the address on which the Redis API for Geode is listening. If set to the empty string or this property is not specified, localhost is requested from the operating system.\");\n     m.put(REDIS_PASSWORD,\n-        \"The password which client of Redis API for Geode must use to authenticate themselves. The default is none and no authentication will be required.\");\n-    m.put(REDIS_SERVICE_ENABLED,\n-        \"Determines whether to start a Redis API for Geode server. The default is false.\");\n+        \"Specifies the password that the server uses when a client attempts to authenticate. The default is none and no authentication will be required.\");\n+    m.put(REDIS_ENABLED,\n+        \"When the default value of false, the Redis API for Geode is not available.  Set to true to enable the Redis API for Geode.\");\n     m.put(ENABLE_CLUSTER_CONFIGURATION,\n         \"Enables cluster configuration support in dedicated locators.  This allows the locator to share configuration information amongst members and save configuration changes made using GFSH.\");\n     m.put(ENABLE_MANAGEMENT_REST_SERVICE,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTY3Mw==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428391673", "bodyText": "For gfsh start server I thought the default would be 6379", "author": "dschneider-pivotal", "createdAt": "2020-05-21T01:08:47Z", "path": "geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java", "diffHunk": "@@ -2557,14 +2557,14 @@\n       \"The gemfire.properties file for configuring the Cache Server's distributed system. The file's path can be absolute or relative to the gfsh working directory.\";\n   public static final String START_SERVER__REDIS_PORT = ConfigurationProperties.REDIS_PORT;\n   public static final String START_SERVER__REDIS_PORT__HELP =\n-      \"Sets the port that the Geode Redis service listens on for Redis clients.\";\n+      \"Sets the port that the Redis API for Geode server listens on for Redis clients. The default is an ephemeral port\";", "originalCommit": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNTgyMQ==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428635821", "bodyText": "Yes!", "author": "sabbey37", "createdAt": "2020-05-21T12:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MTY3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java b/geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java\nindex fa548d1bc9..25c6b206e4 100644\n--- a/geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java\n+++ b/geode-core/src/main/java/org/apache/geode/management/internal/i18n/CliStrings.java\n\n@@ -2557,14 +2563,14 @@ public class CliStrings {\n       \"The gemfire.properties file for configuring the Cache Server's distributed system. The file's path can be absolute or relative to the gfsh working directory.\";\n   public static final String START_SERVER__REDIS_PORT = ConfigurationProperties.REDIS_PORT;\n   public static final String START_SERVER__REDIS_PORT__HELP =\n-      \"Sets the port that the Redis API for Geode server listens on for Redis clients. The default is an ephemeral port\";\n+      \"Specifies the port on which the server listens for Redis API for Geode connections. A value of 0 selects a random port.  Default is 6379.\";\n   public static final String START_SERVER__REDIS_BIND_ADDRESS =\n       ConfigurationProperties.REDIS_BIND_ADDRESS;\n   public static final String START_SERVER__REDIS_BIND_ADDRESS__HELP =\n-      \"Sets the IP address the Redis API for Geode server listens on for Redis clients. The default is to bind to the first non-loopback address for this machine.\";\n+      \"Specifies the address on which the Redis API for Geode is listening. If set to the empty string or this property is not specified, localhost is requested from the operating system.\";\n   public static final String START_SERVER__REDIS_PASSWORD = ConfigurationProperties.REDIS_PASSWORD;\n   public static final String START_SERVER__REDIS_PASSWORD__HELP =\n-      \"Sets the authentication password for the Redis API for Geode server. The default is no password.\";\n+      \"Specifies the password that the server uses when a client attempts to authenticate. The default is none and no authentication will be required.\";\n   public static final String START_SERVER__SECURITY_PROPERTIES = \"security-properties-file\";\n   public static final String START_SERVER__SECURITY_PROPERTIES__HELP =\n       \"The gfsecurity.properties file for configuring the Server's security configuration in the distributed system. The file's path can be absolute or relative to gfsh directory.\";\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428392240", "bodyText": "I see this checking the password and bindAddress setting. But shouldn't it also be checking the redisPort? The comment says port and bind-address. Perhaps any redis option (including password) should enable redis.", "author": "dschneider-pivotal", "createdAt": "2020-05-21T01:11:01Z", "path": "geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java", "diffHunk": "@@ -301,6 +301,13 @@ ResultModel doStartServer(String memberName, Boolean assignBuckets, String bindA\n         ConfigurationProperties.HTTP_SERVICE_PORT, httpServicePort);\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n+\n+    // if redis-port or redis-bind-address are specified in the command line,\n+    // REDIS_SERVICE_ENABLED should be set to true\n+    if (StringUtils.isNotBlank(redisPassword) || StringUtils.isNotBlank(redisBindAddress)) {", "originalCommit": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzNzcxMA==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428637710", "bodyText": "You are right. What do you think? Maybe it would make sense to enable it if any redis option is specified?", "author": "sabbey37", "createdAt": "2020-05-21T13:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1Mzg4Mg==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428653882", "bodyText": "Updated it!", "author": "sabbey37", "createdAt": "2020-05-21T13:34:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MjI0MA=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java\nindex 90e1d49ff3..44fcad9fe1 100644\n--- a/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java\n+++ b/geode-gfsh/src/main/java/org/apache/geode/management/internal/cli/commands/StartServerCommand.java\n\n@@ -302,10 +302,14 @@ public class StartServerCommand extends OfflineGfshCommand {\n     StartMemberUtils.setPropertyIfNotNull(gemfireProperties,\n         ConfigurationProperties.HTTP_SERVICE_BIND_ADDRESS, httpServiceBindAddress);\n \n-    // if redis-port or redis-bind-address are specified in the command line,\n-    // REDIS_SERVICE_ENABLED should be set to true\n-    if (StringUtils.isNotBlank(redisPassword) || StringUtils.isNotBlank(redisBindAddress)) {\n-      gemfireProperties.setProperty(ConfigurationProperties.REDIS_SERVICE_ENABLED, \"true\");\n+    // if redis-port, redis-bind-address. or redis-password are specified in the command line,\n+    // REDIS_ENABLED should be set to true\n+    String stringRedisPort;\n+    stringRedisPort = redisPort == null ? \"\" : redisPort.toString();\n+\n+    if (StringUtils.isNotBlank(stringRedisPort) || StringUtils.isNotBlank(redisPassword)\n+        || StringUtils.isNotBlank(redisBindAddress)) {\n+      gemfireProperties.setProperty(ConfigurationProperties.REDIS_ENABLED, \"true\");\n     }\n \n     // if username is specified in the command line, it will overwrite what's set in the\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5Mjc2OQ==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428392769", "bodyText": "Should this use RANDOM_PORT_INDICATOR instead of 0?", "author": "dschneider-pivotal", "createdAt": "2020-05-21T01:13:21Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -241,7 +241,7 @@ private int setNumWorkerThreads() {\n    * to the first non-loopback address\n    */\n   public GeodeRedisServer() {\n-    this(null, -1, null);\n+    this(null, 0, null);", "originalCommit": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYzOTg5OQ==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428639899", "bodyText": "Definitely.", "author": "sabbey37", "createdAt": "2020-05-21T13:08:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5Mjc2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\nindex 1e0bdede53..35269bc52f 100644\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\n\n@@ -241,7 +241,7 @@ public class GeodeRedisServer {\n    * to the first non-loopback address\n    */\n   public GeodeRedisServer() {\n-    this(null, 0, null);\n+    this(null, RANDOM_PORT_INDICATOR, null);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzM3NQ==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428393375", "bodyText": "Is it correct that if it is < RANDOM_PORT_INDICATOR it will use the default? I couldn't find the code that made that happen but it seems odd if I say -33456 it will listen on 6379. I think I'd prefer an IllegalArgumentException", "author": "dschneider-pivotal", "createdAt": "2020-05-21T01:15:53Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java", "diffHunk": "@@ -275,7 +275,8 @@ public GeodeRedisServer(String bindAddress, int port) {\n    *\n    * @param bindAddress The address to which the server will attempt to bind to\n    * @param port The port the server will bind to, will use {@value #DEFAULT_REDIS_SERVER_PORT}\n-   *        by default if argument is less than -1. If the port is {@value #RANDOM_PORT_INDICATOR}\n+   *        by default if argument is less than {@value #RANDOM_PORT_INDICATOR}. If the port is", "originalCommit": "1b7ecd8bc2594452ade73a4f1c957dc5937b4ba2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY0MDUxNg==", "url": "https://github.com/apache/geode/pull/5142#discussion_r428640516", "bodyText": "That is currently what happens. I like what you're suggesting though.", "author": "sabbey37", "createdAt": "2020-05-21T13:09:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MzM3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\nindex 1e0bdede53..35269bc52f 100644\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/GeodeRedisServer.java\n\n@@ -274,14 +274,16 @@ public class GeodeRedisServer {\n    * effect.\n    *\n    * @param bindAddress The address to which the server will attempt to bind to\n-   * @param port The port the server will bind to, will use {@value #DEFAULT_REDIS_SERVER_PORT}\n-   *        by default if argument is less than {@value #RANDOM_PORT_INDICATOR}. If the port is\n-   *        {@value #RANDOM_PORT_INDICATOR}\n-   *        a random port is assigned.\n+   * @param port The port the server will bind to, will throw an IllegalArgumentException if\n+   *        argument is less than {@value #RANDOM_PORT_INDICATOR}. If the port is\n+   *        {@value #RANDOM_PORT_INDICATOR} a random port is assigned.\n    * @param logLevel The logging level to be used by GemFire\n    */\n   public GeodeRedisServer(String bindAddress, int port, String logLevel) {\n-    serverPort = port < RANDOM_PORT_INDICATOR ? DEFAULT_REDIS_SERVER_PORT : port;\n+    if (port < RANDOM_PORT_INDICATOR) {\n+      throw new IllegalArgumentException(\"Redis port cannot be less than 0\");\n+    }\n+    serverPort = port;\n     this.bindAddress = bindAddress;\n     this.logLevel = logLevel;\n     numWorkerThreads = setNumWorkerThreads();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNzA1MA==", "url": "https://github.com/apache/geode/pull/5142#discussion_r429007050", "bodyText": "Why add in the word \"service\" here? Why not just \"redis-enabled\". None of the other redis properties use the word \"service\". I think consistent naming conventions are really important to avoid confusion.", "author": "pivotal-jbarrett", "createdAt": "2020-05-22T02:10:08Z", "path": "geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java", "diffHunk": "@@ -1943,6 +1931,36 @@\n    * <U>Default</U>: \"\"\n    */\n   String REDIS_PASSWORD = \"redis-password\";\n+  /**\n+   * The static String definition of the <i>\"redis-port\"</i> property <a name=\"redis-port\"/a>\n+   * </p>\n+   * <U>Description</U>: Specifies the port used by Redis API for Geode which enables Redis\n+   * clients to connect and store data in GemFire distributed system. A value of 0 will select a\n+   * random port.\n+   * </p>\n+   * <U>Default</U>: \"6379\"\n+   * </p>\n+   * <U>Allowed values</U>: 0..65535\n+   */\n+  String REDIS_PORT = \"redis-port\";\n+  /**\n+   * The static String definition of the <i>\"redis-service-enabled\"</i> property <a\n+   * name=\"redis-service-enabled\"/a>\n+   * </p>\n+   * <U>Description</U>: When the default value of false, the Redis API for Geode is not available.\n+   * Set to true to enable the Redis API for Geode.</td>\n+   * </p>\n+   * <U>Default</U>: false\n+   * <td>redis-service-enabled</td>\n+   * <td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.\n+   * Set\n+   * to true to enable the Redis API for <%=vars.product_name%>.</td>\n+   * <td>S</td>\n+   * <td>false</td>\n+   * </tr>\n+   * </p>\n+   */\n+  String REDIS_SERVICE_ENABLED = \"redis-service-enabled\";", "originalCommit": "e9538c719bf89c6033b02e4e9d1258e9548cf95a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NTIyMQ==", "url": "https://github.com/apache/geode/pull/5142#discussion_r429255221", "bodyText": "Yeah, we can make it redis-enabled", "author": "sabbey37", "createdAt": "2020-05-22T13:45:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAwNzA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "55abf986dc4db4448fde92974fc6f215ae30534f", "chunk": "diff --git a/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java b/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java\nindex 04e963729d..d56ca53422 100644\n--- a/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java\n+++ b/geode-core/src/main/java/org/apache/geode/distributed/ConfigurationProperties.java\n\n@@ -1926,32 +1939,21 @@ public interface ConfigurationProperties {\n    * The static String definition of the <i>\"redis-password\"</i> property <a\n    * name=\"redis-password\"/a>\n    * </p>\n-   * <U>Description</U>: Specifies the password to authenticate a client of Redis API for Geode\n+   * <U>Description</U>: Specifies the password that the server uses when a client attempts to\n+   * authenticate.\n    * </p>\n-   * <U>Default</U>: \"\"\n+   * <U>Default</U>: no password set\n    */\n   String REDIS_PASSWORD = \"redis-password\";\n   /**\n-   * The static String definition of the <i>\"redis-port\"</i> property <a name=\"redis-port\"/a>\n-   * </p>\n-   * <U>Description</U>: Specifies the port used by Redis API for Geode which enables Redis\n-   * clients to connect and store data in GemFire distributed system. A value of 0 will select a\n-   * random port.\n-   * </p>\n-   * <U>Default</U>: \"6379\"\n-   * </p>\n-   * <U>Allowed values</U>: 0..65535\n-   */\n-  String REDIS_PORT = \"redis-port\";\n-  /**\n-   * The static String definition of the <i>\"redis-service-enabled\"</i> property <a\n-   * name=\"redis-service-enabled\"/a>\n+   * The static String definition of the <i>\"redis-enabled\"</i> property <a\n+   * name=\"redis-enabled\"/a>\n    * </p>\n    * <U>Description</U>: When the default value of false, the Redis API for Geode is not available.\n    * Set to true to enable the Redis API for Geode.</td>\n    * </p>\n    * <U>Default</U>: false\n-   * <td>redis-service-enabled</td>\n+   * <td>redis-enabled</td>\n    * <td>When the default value of false, the Redis API for <%=vars.product_name%> is not available.\n    * Set\n    * to true to enable the Redis API for <%=vars.product_name%>.</td>\n"}}, {"oid": "55abf986dc4db4448fde92974fc6f215ae30534f", "url": "https://github.com/apache/geode/commit/55abf986dc4db4448fde92974fc6f215ae30534f", "message": "GEODE-8138: Improve semantics of the redis-port option", "committedDate": "2020-05-22T14:26:34Z", "type": "commit"}, {"oid": "55abf986dc4db4448fde92974fc6f215ae30534f", "url": "https://github.com/apache/geode/commit/55abf986dc4db4448fde92974fc6f215ae30534f", "message": "GEODE-8138: Improve semantics of the redis-port option", "committedDate": "2020-05-22T14:26:34Z", "type": "forcePushed"}, {"oid": "5cf90de85a973ba8a54f286b0e683c38df3eaccd", "url": "https://github.com/apache/geode/commit/5cf90de85a973ba8a54f286b0e683c38df3eaccd", "message": "Updates property order", "committedDate": "2020-05-22T14:31:27Z", "type": "commit"}, {"oid": "29dd9db84c38cf582ae6830b4c331b6cbc3e2224", "url": "https://github.com/apache/geode/commit/29dd9db84c38cf582ae6830b4c331b6cbc3e2224", "message": "more formatting changes", "committedDate": "2020-05-22T14:40:48Z", "type": "commit"}, {"oid": "51b9a7a8322637139b12a19c49a49a5fc4c8a821", "url": "https://github.com/apache/geode/commit/51b9a7a8322637139b12a19c49a49a5fc4c8a821", "message": "ci trigger", "committedDate": "2020-05-22T16:41:35Z", "type": "commit"}]}