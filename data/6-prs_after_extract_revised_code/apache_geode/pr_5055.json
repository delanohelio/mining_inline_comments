{"pr_number": 5055, "pr_title": "GEODE-8073: Fix NPE after FetchKeysMessage failed.", "pr_createdAt": "2020-05-05T19:09:42Z", "pr_url": "https://github.com/apache/geode/pull/5055", "timeline": [{"oid": "d61bae66de48625dfbff45cf159b9fcb54529828", "url": "https://github.com/apache/geode/commit/d61bae66de48625dfbff45cf159b9fcb54529828", "message": "GEODE-8073: Fix NPE after FetchKeysMessage failed.", "committedDate": "2020-05-05T19:00:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MDM1NQ==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420360355", "bodyText": "The exception isn't ignored, so it shouldn't be called \"ignore.\"", "author": "DonalEvans", "createdAt": "2020-05-05T19:40:52Z", "path": "geode-core/src/main/java/org/apache/geode/internal/cache/PartitionedRegion.java", "diffHunk": "@@ -4593,39 +4593,58 @@ void updateNodeToBucketMap(\n         buckets = bucketKeys.keySet();\n       }\n \n-      for (Integer bucket : buckets) {\n-        Set keys = null;\n-        if (bucketKeys == null) {\n-          try {\n-            FetchKeysResponse fkr = FetchKeysMessage.send(member, this, bucket, true);\n-            keys = fkr.waitForKeys();\n-          } catch (ForceReattemptException ignore) {\n-            failures.add(bucket);\n-          }\n-        } else {\n-          keys = bucketKeys.get(bucket);\n+      fetchKeysAndValues(values, servConn, failures, member, bucketKeys, buckets);\n+    }\n+    return failures;\n+  }\n+\n+  void fetchKeysAndValues(VersionedObjectList values, ServerConnection servConn,\n+      Set<Integer> failures, InternalDistributedMember member,\n+      HashMap<Integer, HashSet> bucketKeys, Set<Integer> buckets)\n+      throws IOException {\n+    for (Integer bucket : buckets) {\n+      Set keys = null;\n+      if (bucketKeys == null) {\n+        try {\n+          FetchKeysResponse fetchKeysResponse = getFetchKeysResponse(member, bucket);\n+          keys = fetchKeysResponse.waitForKeys();\n+        } catch (ForceReattemptException ignore) {", "originalCommit": "d61bae66de48625dfbff45cf159b9fcb54529828", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNjIyNw==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420416227", "bodyText": "The exception was caught here, but the exception is itself being ignored. Seems that this was particularly changed to ignore in a previous checkin. Does this needs to change back definitely?", "author": "pivotal-eshu", "createdAt": "2020-05-05T21:26:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MDM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ1NzcxNQ==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420457715", "bodyText": "Ah, I see. We may catch the exception, but we don't actually do anything with it, even though we do something if we catch it. This name is fine as it is.", "author": "DonalEvans", "createdAt": "2020-05-05T23:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2MDM1NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2NTg1NA==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420365854", "bodyText": "Here you should use a real Set instead of a mock.", "author": "DonalEvans", "createdAt": "2020-05-05T19:50:57Z", "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    doThrow(new ForceReattemptException(\"\")).when(spyPartitionedRegion).getFetchKeysResponse(member,\n+        1);\n+\n+    spyPartitionedRegion.fetchKeysAndValues(values, serverConnection, failures, member, null,\n+        buckets);\n+\n+    verify(failures).add(1);\n+    verify(spyPartitionedRegion, never()).getValuesForKeys(values, serverConnection, null);\n+  }\n+\n+  @Test\n+  public void fetchKeysAndValuesInvokesGetValuesForKeys() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    FetchKeysMessage.FetchKeysResponse fetchKeysResponse =\n+        mock(FetchKeysMessage.FetchKeysResponse.class);\n+    doReturn(fetchKeysResponse).when(spyPartitionedRegion).getFetchKeysResponse(member, 1);\n+    Set keys = mock(Set.class);", "originalCommit": "d61bae66de48625dfbff45cf159b9fcb54529828", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxOTI4NQ==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420419285", "bodyText": "I'd like to know the reason why this has to be a real Set.", "author": "pivotal-eshu", "createdAt": "2020-05-05T21:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2NTg1NA=="}], "type": "inlineReview", "revised_code": {"commit": "694e7ff4a14c7d5852acf014484ccaa205ec39f0", "chunk": "diff --git a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\nindex 4881979988..ae580e3297 100644\n--- a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n+++ b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n\n@@ -584,7 +584,7 @@ public class PartitionedRegionTest {\n \n     VersionedObjectList values = mock(VersionedObjectList.class);\n     ServerConnection serverConnection = mock(ServerConnection.class);\n-    Set<Integer> failures = mock(Set.class);\n+    Set<Integer> failures = new HashSet<>();\n     InternalDistributedMember member = mock(InternalDistributedMember.class);\n     Set<Integer> buckets = new HashSet<>();\n     buckets.add(1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODQ3Ng==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420368476", "bodyText": "It's best not to mock Collections. It's fine to just use an actual Set here.", "author": "DonalEvans", "createdAt": "2020-05-05T19:55:44Z", "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);", "originalCommit": "d61bae66de48625dfbff45cf159b9fcb54529828", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNzUxNw==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420417517", "bodyText": "The mocked failures as a set is used later to verify whether a method is invoked on the set. Otherwise it would be hard to verify.", "author": "pivotal-eshu", "createdAt": "2020-05-05T21:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ1Nzc4OA==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420457788", "bodyText": "Instead of verifying the method call on the mocked set, you can verify the contents of the real set, which should contain one item, which is the Integer 1.", "author": "DonalEvans", "createdAt": "2020-05-05T23:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODQ3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "694e7ff4a14c7d5852acf014484ccaa205ec39f0", "chunk": "diff --git a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\nindex 4881979988..ae580e3297 100644\n--- a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n+++ b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n\n@@ -584,7 +584,7 @@ public class PartitionedRegionTest {\n \n     VersionedObjectList values = mock(VersionedObjectList.class);\n     ServerConnection serverConnection = mock(ServerConnection.class);\n-    Set<Integer> failures = mock(Set.class);\n+    Set<Integer> failures = new HashSet<>();\n     InternalDistributedMember member = mock(InternalDistributedMember.class);\n     Set<Integer> buckets = new HashSet<>();\n     buckets.add(1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODkzOQ==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420368939", "bodyText": "Here you should use a real Set instead of a mock.", "author": "DonalEvans", "createdAt": "2020-05-05T19:56:35Z", "path": "geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java", "diffHunk": "@@ -573,6 +578,50 @@ public void transactionThrowsTransactionDataRebalancedExceptionIfIsAForceReattem\n         .hasMessage(PartitionedRegion.DATA_MOVED_BY_REBALANCE).hasCause(exception);\n   }\n \n+  @Test\n+  public void failuresSavedIfFetchKeysThrows() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);\n+    InternalDistributedMember member = mock(InternalDistributedMember.class);\n+    Set<Integer> buckets = new HashSet<>();\n+    buckets.add(1);\n+    doThrow(new ForceReattemptException(\"\")).when(spyPartitionedRegion).getFetchKeysResponse(member,\n+        1);\n+\n+    spyPartitionedRegion.fetchKeysAndValues(values, serverConnection, failures, member, null,\n+        buckets);\n+\n+    verify(failures).add(1);\n+    verify(spyPartitionedRegion, never()).getValuesForKeys(values, serverConnection, null);\n+  }\n+\n+  @Test\n+  public void fetchKeysAndValuesInvokesGetValuesForKeys() throws Exception {\n+    PartitionedRegion spyPartitionedRegion = spy(partitionedRegion);\n+\n+    VersionedObjectList values = mock(VersionedObjectList.class);\n+    ServerConnection serverConnection = mock(ServerConnection.class);\n+    Set<Integer> failures = mock(Set.class);", "originalCommit": "d61bae66de48625dfbff45cf159b9fcb54529828", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxODg0Ng==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420418846", "bodyText": "Is that a particular reason set should not be mocked? It is not being iterated through, just used as a placeholder. I would like to know the reason for the requested change so that I may gain some new knowledge.", "author": "pivotal-eshu", "createdAt": "2020-05-05T21:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ1NzgwNg==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420457806", "bodyText": "It's part of the \"don't mock what you don't own\" principle in TDD, explained here and here. Also, as discussed here, if you can avoid mocking a class, as in this case, then that's probably a good thing.", "author": "DonalEvans", "createdAt": "2020-05-05T23:02:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2NzI4OQ==", "url": "https://github.com/apache/geode/pull/5055#discussion_r420467289", "bodyText": "Thanks for the explanation. Change has been made.", "author": "pivotal-eshu", "createdAt": "2020-05-05T23:29:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODkzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "694e7ff4a14c7d5852acf014484ccaa205ec39f0", "chunk": "diff --git a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\nindex 4881979988..ae580e3297 100644\n--- a/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n+++ b/geode-core/src/test/java/org/apache/geode/internal/cache/PartitionedRegionTest.java\n\n@@ -584,7 +584,7 @@ public class PartitionedRegionTest {\n \n     VersionedObjectList values = mock(VersionedObjectList.class);\n     ServerConnection serverConnection = mock(ServerConnection.class);\n-    Set<Integer> failures = mock(Set.class);\n+    Set<Integer> failures = new HashSet<>();\n     InternalDistributedMember member = mock(InternalDistributedMember.class);\n     Set<Integer> buckets = new HashSet<>();\n     buckets.add(1);\n"}}, {"oid": "694e7ff4a14c7d5852acf014484ccaa205ec39f0", "url": "https://github.com/apache/geode/commit/694e7ff4a14c7d5852acf014484ccaa205ec39f0", "message": "fix review comments.", "committedDate": "2020-05-05T23:27:56Z", "type": "commit"}]}