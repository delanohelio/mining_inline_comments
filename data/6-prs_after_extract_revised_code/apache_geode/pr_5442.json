{"pr_number": 5442, "pr_title": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter", "pr_createdAt": "2020-08-11T00:24:19Z", "pr_url": "https://github.com/apache/geode/pull/5442", "timeline": [{"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "url": "https://github.com/apache/geode/commit/05eda7e496c0f908fa22fd4dcc90787616bf00ea", "message": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter", "committedDate": "2020-08-11T05:34:01Z", "type": "commit"}, {"oid": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "url": "https://github.com/apache/geode/commit/05eda7e496c0f908fa22fd4dcc90787616bf00ea", "message": "GEODE-8420: Throws SQLException when SQLException occurs in JdbcWriter", "committedDate": "2020-08-11T05:34:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk0ODMzOA==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474948338", "bodyText": "This log output could be a little more descriptive. Possibly something like \"Got SQL string:{} with key:{} value:{}\"?", "author": "DonalEvans", "createdAt": "2020-08-21T20:37:38Z", "path": "geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java", "diffHunk": "@@ -255,6 +265,10 @@ private PreparedStatement getPreparedStatement(Connection connection,\n       TableMetaDataView tableMetaData, EntryColumnData entryColumnData, Operation operation)\n       throws SQLException {\n     String sqlStr = getSqlString(tableMetaData, entryColumnData, operation);\n+    if (logger.isDebugEnabled()) {\n+      logger.debug(\"SQL:{} key:{} value:{}\", sqlStr, entryColumnData.getEntryKeyColumnData(),", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java b/geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java\nindex 8d5f7e112b..5125d32b75 100644\n--- a/geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java\n+++ b/geode-connectors/src/main/java/org/apache/geode/connectors/jdbc/internal/SqlHandler.java\n\n@@ -266,7 +266,8 @@ public class SqlHandler {\n       throws SQLException {\n     String sqlStr = getSqlString(tableMetaData, entryColumnData, operation);\n     if (logger.isDebugEnabled()) {\n-      logger.debug(\"SQL:{} key:{} value:{}\", sqlStr, entryColumnData.getEntryKeyColumnData(),\n+      logger.debug(\"Got SQL string:{} with key:{} value:{}\", sqlStr,\n+          entryColumnData.getEntryKeyColumnData(),\n           entryColumnData.getEntryValueColumnData());\n     }\n     return connection.prepareStatement(sqlStr);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODIxOA==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958218", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:49:24Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -158,8 +181,21 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\nindex 8e3e9ae779..a27d2401ea 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n\n@@ -182,7 +182,7 @@ public abstract class JdbcAsyncWriterIntegrationTest {\n   }\n \n   @Test\n-  public void putInstanceFieldLengthOversTableColumnLengthFails()\n+  public void putInstanceFieldLengthGreaterThanTableColumnLengthFails()\n       throws SQLException, RegionMappingExistsException {\n     createTable();\n     setupRegion(\"id\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1ODYyNg==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474958626", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:49:56Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -274,8 +315,28 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\nindex 8e3e9ae779..a27d2401ea 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n\n@@ -316,7 +316,7 @@ public abstract class JdbcAsyncWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateInstanceFieldLengthOversTableColumnLengthFails()\n+  public void updateInstanceFieldLengthGreaterThanTableColumnLengthFails()\n       throws SQLException, RegionMappingExistsException {\n     createTable();\n     setupRegion(\"id\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk1OTgzNQ==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474959835", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:51:25Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\nindex 8e3e9ae779..a27d2401ea 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n\n@@ -373,7 +373,7 @@ public abstract class JdbcAsyncWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+  public void updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails() throws Exception {\n     createTable();\n     setupRegion(\"id\");\n     employees.put(\"1\", pdxEmployee1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MDM0Nw==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474960347", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:52:00Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java", "diffHunk": "@@ -310,6 +372,55 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdxEmployee1);\n+    awaitUntil(() -> assertThat(jdbcWriter.getSuccessfulEvents()).isEqualTo(1));\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    employees.put(\"1\", illegalPdxEmployee);\n+\n+    awaitUntil(() -> assertThat(jdbcWriter.getFailedEvents()).isEqualTo(1));\n+    awaitUntil(() -> assertThat(jdbcWriter.getTotalEvents()).isEqualTo(2));\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\nindex 8e3e9ae779..a27d2401ea 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcAsyncWriterIntegrationTest.java\n\n@@ -373,7 +373,7 @@ public abstract class JdbcAsyncWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+  public void updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails() throws Exception {\n     createTable();\n     setupRegion(\"id\");\n     employees.put(\"1\", pdxEmployee1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTI5Mw==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961293", "bodyText": "This might be better named \"putInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:53:09Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -268,6 +283,18 @@ public void putNonPdxInstanceThatIsPdxSerializable()\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void putInstanceFieldLengthOversTableColumnLengthFails()", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\nindex 57a83a506b..7a02b9d14f 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n\n@@ -284,7 +284,7 @@ public abstract class JdbcWriterIntegrationTest {\n   }\n \n   @Test\n-  public void putInstanceFieldLengthOversTableColumnLengthFails()\n+  public void putInstanceFieldLengthGreaterThanTableColumnLengthFails()\n       throws SQLException, RegionMappingExistsException {\n     createTable();\n     setupRegion(\"id\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTU2NA==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961564", "bodyText": "This might be better named \"updateInstanceFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:53:30Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -370,6 +397,24 @@ public void canUpdateTableWithCompositeKey() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateInstanceFieldLengthOversTableColumnLengthFails()", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\nindex 57a83a506b..7a02b9d14f 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n\n@@ -398,7 +398,7 @@ public abstract class JdbcWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateInstanceFieldLengthOversTableColumnLengthFails()\n+  public void updateInstanceFieldLengthGreaterThanTableColumnLengthFails()\n       throws SQLException, RegionMappingExistsException {\n     createTable();\n     setupRegion(\"id\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MTc4OA==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474961788", "bodyText": "This might be better named \"updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:53:47Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\nindex 57a83a506b..7a02b9d14f 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n\n@@ -448,7 +448,7 @@ public abstract class JdbcWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+  public void updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails() throws Exception {\n     createTable();\n     setupRegion(\"id\");\n     employees.put(\"1\", pdx1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk2MjAzOQ==", "url": "https://github.com/apache/geode/pull/5442#discussion_r474962039", "bodyText": "This might be better named \"insertBecomeUpdateFieldLengthGreaterThanTableColumnLengthFails\"", "author": "DonalEvans", "createdAt": "2020-08-21T20:54:06Z", "path": "geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java", "diffHunk": "@@ -402,6 +447,53 @@ public void canInsertBecomeUpdate() throws Exception {\n     assertThat(resultSet.next()).isFalse();\n   }\n \n+  @Test\n+  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+    createTable();\n+    setupRegion(\"id\");\n+    employees.put(\"1\", pdx1);\n+\n+    statement.execute(\"delete from \" + REGION_TABLE_NAME + \" where id = '1'\");\n+    validateTableRowCount(0);\n+\n+    Throwable thrown = catchThrowable(() -> employees.put(\"1\", illegalPdx));\n+\n+    assertThat(thrown).isInstanceOf(JdbcConnectorException.class);\n+    assertThat(thrown.getMessage()).startsWith(getDataTooLongSqlErrorMessage());\n+  }\n+\n+  @Test\n+  public void insertBecomeUpdateFieldLengthOversTableColumnLengthFails() throws Exception {", "originalCommit": "05eda7e496c0f908fa22fd4dcc90787616bf00ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "850ebbd127bbc275684cc3912c7d098e67f51864", "chunk": "diff --git a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\nindex 57a83a506b..7a02b9d14f 100644\n--- a/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n+++ b/geode-connectors/src/acceptanceTest/java/org/apache/geode/connectors/jdbc/JdbcWriterIntegrationTest.java\n\n@@ -448,7 +448,7 @@ public abstract class JdbcWriterIntegrationTest {\n   }\n \n   @Test\n-  public void updateBecomeInsertFieldLengthOversTableColumnLengthFails() throws Exception {\n+  public void updateBecomeInsertFieldLengthGreaterThanTableColumnLengthFails() throws Exception {\n     createTable();\n     setupRegion(\"id\");\n     employees.put(\"1\", pdx1);\n"}}, {"oid": "850ebbd127bbc275684cc3912c7d098e67f51864", "url": "https://github.com/apache/geode/commit/850ebbd127bbc275684cc3912c7d098e67f51864", "message": "Improve the sql log output & improve the test method name", "committedDate": "2020-08-22T10:36:36Z", "type": "commit"}]}