{"pr_number": 5114, "pr_title": "Introduce RedisResponse to SET executors", "pr_createdAt": "2020-05-13T22:29:56Z", "pr_url": "https://github.com/apache/geode/pull/5114", "timeline": [{"oid": "06dd871b1114ffde234fcaaa62af7f922237169b", "url": "https://github.com/apache/geode/commit/06dd871b1114ffde234fcaaa62af7f922237169b", "message": "Fix rat and compile issue", "committedDate": "2020-05-14T04:12:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzAwMA==", "url": "https://github.com/apache/geode/pull/5114#discussion_r424897000", "bodyText": "Could you change \"Executor\" to have \"executeCommandsWithResponse\"? For all the old executors we have not converted yet, executeCommandsWithResponse could just call executeCommand and then return null.\nThat would get rid of this instanceof check.", "author": "dschneider-pivotal", "createdAt": "2020-05-14T06:25:45Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java", "diffHunk": "@@ -349,9 +350,17 @@ private RedisCommandType(Executor executor, ParameterRequirements parameterRequi\n     this.parameterRequirements = parameterRequirements;\n   }\n \n-  public void executeCommand(Command command, ExecutionHandlerContext executionHandlerContext) {\n+  public RedisResponse executeCommand(Command command,\n+      ExecutionHandlerContext executionHandlerContext) {\n     parameterRequirements.checkParameters(command, executionHandlerContext);\n+\n+    if (executor instanceof ResponseExecutor) {", "originalCommit": "f3fc64184eb6d50678fdcffdf3f073b2b979f9ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEyMTE1MQ==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425121151", "bodyText": "Excellent! Good call.", "author": "jdeppe-pivotal", "createdAt": "2020-05-14T13:06:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzAwMA=="}], "type": "inlineReview", "revised_code": {"commit": "cbe123f86fb72829bc129e0f9a717dff251dd203", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java\nindex ea8c43656a..49eca2d9b7 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/RedisCommandType.java\n\n@@ -341,11 +340,11 @@ public enum RedisCommandType {\n   private final Executor executor;\n   private final ParameterRequirements parameterRequirements;\n \n-  private RedisCommandType(Executor executor) {\n+  RedisCommandType(Executor executor) {\n     this(executor, new UnspecifiedParameterRequirements());\n   }\n \n-  private RedisCommandType(Executor executor, ParameterRequirements parameterRequirements) {\n+  RedisCommandType(Executor executor, ParameterRequirements parameterRequirements) {\n     this.executor = executor;\n     this.parameterRequirements = parameterRequirements;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MjAzNA==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425272034", "bodyText": "It seems like this if expression should use \"!command.isOfType(RedisCommandType.PUBLISH)\".\nYou could get this down to a single \"writeToChannel\" call like so:\nif (response == null && !command.isOfType(PUBLISH) {\nresponse = command.getResponse();\n}\nif (response != null) {\nwriteToChannel(response);\n}", "author": "dschneider-pivotal", "createdAt": "2020-05-14T16:29:01Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -203,43 +205,42 @@ public void channelInactive(ChannelHandlerContext ctx) {\n   }\n \n   private void executeCommand(ChannelHandlerContext ctx, Command command) throws Exception {\n+    RedisResponse response;\n     if (isAuthenticated) {\n       if (command.isOfType(RedisCommandType.SHUTDOWN)) {\n         this.server.shutdown();\n         return;\n       }\n \n       if (hasTransaction() && !command.isTransactional()) {\n-        executeWithTransaction(ctx, command);\n+        response = executeWithTransaction(ctx, command);\n       } else {\n-        executeWithoutTransaction(command);\n+        response = executeWithoutTransaction(command);\n       }\n \n       if (hasTransaction() && command.isOfType(RedisCommandType.MULTI)) {\n-        writeToChannel(\n-            Coder.getSimpleStringResponse(this.byteBufAllocator, RedisConstants.COMMAND_QUEUED));\n-      } else {\n-        // PUBLISH responses are always deferred\n-        if (command.getCommandType() != RedisCommandType.PUBLISH) {\n-          ByteBuf response = command.getResponse();\n-          writeToChannel(response);\n-        }\n+        response = RedisResponse.string(RedisConstants.COMMAND_QUEUED);\n       }\n-    } else if (command.isOfType(RedisCommandType.QUIT)) {\n-      command.execute(this);\n-      ByteBuf response = command.getResponse();\n-      writeToChannel(response);\n-      channelInactive(ctx);\n     } else if (command.isOfType(RedisCommandType.AUTH)) {\n-      command.execute(this);\n-      ByteBuf response = command.getResponse();\n+      response = command.execute(this);\n+    } else {\n+      response = RedisResponse.error(RedisConstants.ERROR_NOT_AUTH);\n+    }\n+\n+    if (response != null) {\n       writeToChannel(response);\n     } else {\n-      ByteBuf r = Coder.getNoAuthResponse(this.byteBufAllocator, RedisConstants.ERROR_NOT_AUTH);\n-      writeToChannel(r);\n+      // PUBLISH responses are always deferred\n+      if (command.getCommandType() != RedisCommandType.PUBLISH) {", "originalCommit": "12964f882a8de49e11543c72baf5189601de94ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzQ3NQ==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425347475", "bodyText": "I made some small updates and I think it's better - YMMV :)", "author": "jdeppe-pivotal", "createdAt": "2020-05-14T18:30:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MjAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "cbe123f86fb72829bc129e0f9a717dff251dd203", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\nindex a4d0603036..146befa7c4 100644\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\n\n@@ -218,6 +221,8 @@ public class ExecutionHandlerContext extends ChannelInboundHandlerAdapter {\n         response = executeWithoutTransaction(command);\n       }\n \n+      logResponse(command);\n+\n       if (hasTransaction() && command.isOfType(RedisCommandType.MULTI)) {\n         response = RedisResponse.string(RedisConstants.COMMAND_QUEUED);\n       }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NDM2Ng==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425274366", "bodyText": "It looks like these two default impls call each other. executeCommand calls executeCommandWithResponse and then it calls back to executeCommand. Seems like it would do an infinite recursion until the stack overflows.", "author": "dschneider-pivotal", "createdAt": "2020-05-14T16:32:30Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java", "diffHunk": "@@ -27,9 +27,13 @@\n    * @param command The command to be executed\n    * @param context The execution context by which this command is to be executed\n    */\n-  void executeCommand(Command command, ExecutionHandlerContext context);\n+  default void executeCommand(Command command, ExecutionHandlerContext context) {\n+    executeCommandWithResponse(command, context);", "originalCommit": "12964f882a8de49e11543c72baf5189601de94ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0Nzc5OA==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425347798", "bodyText": "Yes, that is a danger. Once all commands are converted we can fix this.", "author": "jdeppe-pivotal", "createdAt": "2020-05-14T18:30:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NDM2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "cbe123f86fb72829bc129e0f9a717dff251dd203", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\nindex 8102f4419d..8a2fe846da 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\n\n@@ -31,6 +31,11 @@ public interface Executor {\n     executeCommandWithResponse(command, context);\n   }\n \n+  /**\n+   * Interim method to transition to returning a {@link RedisResponse}\n+   *\n+   * TODO: Once all commands are transitioned, one of these methods needs to be removed.\n+   */\n   default RedisResponse executeCommandWithResponse(Command command,\n       ExecutionHandlerContext context) {\n     executeCommand(command, context);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTY4Mg==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425275682", "bodyText": "One other idea. I think the plan is to eventually have every executeCommand have a non-null response. But if we are going to continue to have some return \"null\" could they instead return an instance of RedisResponse to represents null?", "author": "dschneider-pivotal", "createdAt": "2020-05-14T16:34:31Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java", "diffHunk": "@@ -27,9 +27,13 @@\n    * @param command The command to be executed\n    * @param context The execution context by which this command is to be executed\n    */\n-  void executeCommand(Command command, ExecutionHandlerContext context);\n+  default void executeCommand(Command command, ExecutionHandlerContext context) {\n+    executeCommandWithResponse(command, context);\n+  }\n \n-  default void execute(Command command, ExecutionHandlerContext context) {\n+  default RedisResponse executeCommandWithResponse(Command command,\n+      ExecutionHandlerContext context) {\n     executeCommand(command, context);\n+    return null;", "originalCommit": "12964f882a8de49e11543c72baf5189601de94ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODcyNg==", "url": "https://github.com/apache/geode/pull/5114#discussion_r425348726", "bodyText": "Will do once we switch the PUBLISH command which is the only one (I can think of) that would return null.", "author": "jdeppe-pivotal", "createdAt": "2020-05-14T18:32:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTY4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "cbe123f86fb72829bc129e0f9a717dff251dd203", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\nindex 8102f4419d..8a2fe846da 100755\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/Executor.java\n\n@@ -31,6 +31,11 @@ public interface Executor {\n     executeCommandWithResponse(command, context);\n   }\n \n+  /**\n+   * Interim method to transition to returning a {@link RedisResponse}\n+   *\n+   * TODO: Once all commands are transitioned, one of these methods needs to be removed.\n+   */\n   default RedisResponse executeCommandWithResponse(Command command,\n       ExecutionHandlerContext context) {\n     executeCommand(command, context);\n"}}, {"oid": "cbe123f86fb72829bc129e0f9a717dff251dd203", "url": "https://github.com/apache/geode/commit/cbe123f86fb72829bc129e0f9a717dff251dd203", "message": "Review updates", "committedDate": "2020-05-15T16:06:19Z", "type": "forcePushed"}, {"oid": "47e39a86164739c5bfc13517ef8df8d514a94a1d", "url": "https://github.com/apache/geode/commit/47e39a86164739c5bfc13517ef8df8d514a94a1d", "message": "Introduce RedisResponse to SET executors", "committedDate": "2020-05-15T17:03:50Z", "type": "commit"}, {"oid": "7361e6146f3ee9d0853eec5a60950c974c9a5ebc", "url": "https://github.com/apache/geode/commit/7361e6146f3ee9d0853eec5a60950c974c9a5ebc", "message": "Fix rat and compile issue", "committedDate": "2020-05-15T17:03:53Z", "type": "commit"}, {"oid": "257504bc9ffad8baf7a5ca421b89b99c474da4f6", "url": "https://github.com/apache/geode/commit/257504bc9ffad8baf7a5ca421b89b99c474da4f6", "message": "Review updates - No need for ResponseExecutor", "committedDate": "2020-05-15T17:05:25Z", "type": "commit"}, {"oid": "76ab4dd6d27984d6b86150a6a9d0ad97e4f92464", "url": "https://github.com/apache/geode/commit/76ab4dd6d27984d6b86150a6a9d0ad97e4f92464", "message": "Spotless", "committedDate": "2020-05-15T17:05:25Z", "type": "commit"}, {"oid": "5d01b2f0d624871f1f87e9de812414135c50e5df", "url": "https://github.com/apache/geode/commit/5d01b2f0d624871f1f87e9de812414135c50e5df", "message": "Review updates", "committedDate": "2020-05-15T17:05:25Z", "type": "commit"}, {"oid": "5d01b2f0d624871f1f87e9de812414135c50e5df", "url": "https://github.com/apache/geode/commit/5d01b2f0d624871f1f87e9de812414135c50e5df", "message": "Review updates", "committedDate": "2020-05-15T17:05:25Z", "type": "forcePushed"}, {"oid": "e2777eefeb4bfa91ceaded8d141067f389d60c92", "url": "https://github.com/apache/geode/commit/e2777eefeb4bfa91ceaded8d141067f389d60c92", "message": "Spotless...How do I love thee? Let me count the ways...", "committedDate": "2020-05-15T17:24:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxNTc1Mw==", "url": "https://github.com/apache/geode/pull/5114#discussion_r427415753", "bodyText": "can you fix this comment? I have seen this show up before. The comment does not even describe this constant. I would vote for just getting rid of the comment.", "author": "dschneider-pivotal", "createdAt": "2020-05-19T15:58:47Z", "path": "geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java", "diffHunk": "@@ -56,7 +58,7 @@\n   private static final Logger logger = LogService.getLogger();\n   private static final int WAIT_REGION_DSTRYD_MILLIS = 100;\n   private static final int MAXIMUM_NUM_RETRIES = (1000 * 60) / WAIT_REGION_DSTRYD_MILLIS; // 60", "originalCommit": "e2777eefeb4bfa91ceaded8d141067f389d60c92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4Mzg3Mw==", "url": "https://github.com/apache/geode/pull/5114#discussion_r427483873", "bodyText": "Done", "author": "jdeppe-pivotal", "createdAt": "2020-05-19T17:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxNTc1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ae3fc96f3ef663b8b4e8a0cb57021c549eb02935", "chunk": "diff --git a/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java b/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\nindex da7047df50..471dde2c95 100644\n--- a/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\n+++ b/geode-redis/src/main/java/org/apache/geode/redis/internal/ExecutionHandlerContext.java\n\n@@ -57,8 +57,8 @@ public class ExecutionHandlerContext extends ChannelInboundHandlerAdapter {\n \n   private static final Logger logger = LogService.getLogger();\n   private static final int WAIT_REGION_DSTRYD_MILLIS = 100;\n-  private static final int MAXIMUM_NUM_RETRIES = (1000 * 60) / WAIT_REGION_DSTRYD_MILLIS; // 60\n-                                                                                          // seconds\n+  private static final int MAXIMUM_NUM_RETRIES = (1000 * 60) / WAIT_REGION_DSTRYD_MILLIS;\n+\n   private final RedisLockService lockService;\n \n   private final Cache cache;\n"}}, {"oid": "ae3fc96f3ef663b8b4e8a0cb57021c549eb02935", "url": "https://github.com/apache/geode/commit/ae3fc96f3ef663b8b4e8a0cb57021c549eb02935", "message": "Remove incorrect comment", "committedDate": "2020-05-19T17:42:00Z", "type": "commit"}]}