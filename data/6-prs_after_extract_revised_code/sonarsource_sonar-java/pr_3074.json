{"pr_number": 3074, "pr_title": "SONARJAVA-3413 RSPEC-5842 Regex repetition pattern's body should not match the empty String", "pr_createdAt": "2020-07-01T16:04:46Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3074", "timeline": [{"oid": "e313e695eac0e4fbd617280b8a26e42f39621077", "url": "https://github.com/SonarSource/sonar-java/commit/e313e695eac0e4fbd617280b8a26e42f39621077", "message": "SONARJAVA-3413 RSPEC-5842 Regex repetition pattern's body should not match the empty String", "committedDate": "2020-07-02T12:34:08Z", "type": "commit"}, {"oid": "e9f0c73dcb6f717b8081be3dea8303ebf5d5a9da", "url": "https://github.com/SonarSource/sonar-java/commit/e9f0c73dcb6f717b8081be3dea8303ebf5d5a9da", "message": "Continue implementation", "committedDate": "2020-07-02T12:34:08Z", "type": "commit"}, {"oid": "e9f0c73dcb6f717b8081be3dea8303ebf5d5a9da", "url": "https://github.com/SonarSource/sonar-java/commit/e9f0c73dcb6f717b8081be3dea8303ebf5d5a9da", "message": "Continue implementation", "committedDate": "2020-07-02T12:34:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk3NzM5NQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3074#discussion_r448977395", "bodyText": "The issue should either be reported on tree.getElement() instead of tree or the message should be changed. The way it is now, the message would imply that in (x*)* the whole expression should be changed to not match the empty string when in fact only the inner part ((x*)) should be changed to not match the empty string.", "author": "sebastian-hungerecker-sonarsource", "createdAt": "2020-07-02T12:50:56Z", "path": "java-checks/src/main/java/org/sonar/java/checks/regex/EmptyStringRepetitionCheck.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.regex;\n+\n+import java.util.Collections;\n+import org.sonar.check.Rule;\n+import org.sonar.java.regex.RegexParseResult;\n+import org.sonar.java.regex.ast.DisjunctionTree;\n+import org.sonar.java.regex.ast.GroupTree;\n+import org.sonar.java.regex.ast.RegexBaseVisitor;\n+import org.sonar.java.regex.ast.RegexTree;\n+import org.sonar.java.regex.ast.RepetitionTree;\n+import org.sonar.java.regex.ast.SequenceTree;\n+import org.sonar.plugins.java.api.tree.MethodInvocationTree;\n+\n+@Rule(key = \"S5842\")\n+public class EmptyStringRepetitionCheck extends AbstractRegexCheck {\n+\n+  private static final String MESSAGE = \"Rework this part of the regex to not match the empty string.\";\n+\n+  @Override\n+  public void checkRegex(RegexParseResult regex, MethodInvocationTree mit) {\n+    new Visitor().visit(regex);\n+  }\n+\n+  private class Visitor extends RegexBaseVisitor {\n+\n+    @Override\n+    public void visitRepetition(RepetitionTree tree) {\n+      if (matchEmptyString(tree.getElement())) {\n+        reportIssue(tree, MESSAGE, null, Collections.emptyList());", "originalCommit": "e9f0c73dcb6f717b8081be3dea8303ebf5d5a9da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "883000eff5c0ca84c1406321c881da1f37e9a4f2", "chunk": "diff --git a/java-checks/src/main/java/org/sonar/java/checks/regex/EmptyStringRepetitionCheck.java b/java-checks/src/main/java/org/sonar/java/checks/regex/EmptyStringRepetitionCheck.java\nindex f28ed1697..c87d675af 100644\n--- a/java-checks/src/main/java/org/sonar/java/checks/regex/EmptyStringRepetitionCheck.java\n+++ b/java-checks/src/main/java/org/sonar/java/checks/regex/EmptyStringRepetitionCheck.java\n\n@@ -44,8 +44,9 @@ public class EmptyStringRepetitionCheck extends AbstractRegexCheck {\n \n     @Override\n     public void visitRepetition(RepetitionTree tree) {\n-      if (matchEmptyString(tree.getElement())) {\n-        reportIssue(tree, MESSAGE, null, Collections.emptyList());\n+      RegexTree element = tree.getElement();\n+      if (matchEmptyString(element)) {\n+        reportIssue(element, MESSAGE, null, Collections.emptyList());\n       }\n     }\n \n"}}, {"oid": "883000eff5c0ca84c1406321c881da1f37e9a4f2", "url": "https://github.com/SonarSource/sonar-java/commit/883000eff5c0ca84c1406321c881da1f37e9a4f2", "message": "Change report location to repetition element", "committedDate": "2020-07-02T13:44:29Z", "type": "commit"}]}