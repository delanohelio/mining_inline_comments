{"pr_number": 2937, "pr_title": "SONARJAVA-3367 use JUnit5 instead of JUnit4 annotations", "pr_createdAt": "2020-05-05T10:16:39Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2937", "timeline": [{"oid": "0ded4e3497c967249d3bf1dfb424f12297cc30fc", "url": "https://github.com/SonarSource/sonar-java/commit/0ded4e3497c967249d3bf1dfb424f12297cc30fc", "message": "SONARJAVA-3367 Added check for JUnit4 annotations, suggesting the corresponding JUnit5 annotation instead.", "committedDate": "2020-05-05T08:34:47Z", "type": "commit"}, {"oid": "f7bb1026b92a5f4ac8cb70c6308e8110d035b51a", "url": "https://github.com/SonarSource/sonar-java/commit/f7bb1026b92a5f4ac8cb70c6308e8110d035b51a", "message": "SONARJAVA-3367 Added expected test results, improved test.", "committedDate": "2020-05-05T10:15:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Njc5Nw==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420066797", "bodyText": "It needs to be clearly discussed and clarified at one point, but the case where the semantic is missing should never happen, we already removed this check for many rules. I believe you can also remove this one (and the corresponding test).", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-05-05T12:22:57Z", "path": "java-checks/src/main/java/org/sonar/java/checks/JUnit4AnnotationsCheck.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks;\n+\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import org.sonar.check.Rule;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.tree.AnnotationTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+@Rule(key = \"S5793\")\n+public class JUnit4AnnotationsCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final Map<String, String> OLD_NEW_ANNOTATIONS_MAP = new ImmutableMap.Builder<String, String>()\n+    .put(\"org.junit.Test\", \"org.junit.jupiter.api.Test\")\n+    .put(\"org.junit.Before\", \"org.junit.jupiter.api.BeforeEach\")\n+    .put(\"org.junit.After\", \"org.junit.jupiter.api.AfterEach\")\n+    .put(\"org.junit.BeforeClass\", \"org.junit.jupiter.api.BeforeAll\")\n+    .put(\"org.junit.AfterClass\", \"org.junit.jupiter.api.AfterAll\")\n+    .put(\"org.junit.Ignore\", \"org.junit.jupiter.api.Disabled\")\n+    .put(\"org.junit.experimental.categories.Category\", \"org.junit.jupiter.api.Tag\")\n+    .put(\"org.junit.Rule\", \"org.junit.jupiter.api.extension.ExtendWith\")\n+    .put(\"org.junit.ClassRule\", \"org.junit.jupiter.api.extension.RegisterExtension\")\n+    .put(\"org.junit.runner.RunWith\", \"org.junit.jupiter.api.extension.ExtendWith\")\n+    .build();\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Collections.singletonList(Tree.Kind.ANNOTATION);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    if (!hasSemantic()) {\n+      return;\n+    }", "originalCommit": "f7bb1026b92a5f4ac8cb70c6308e8110d035b51a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NDYwMw==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420094603", "bodyText": "Okay, good then I'll leave it out entirely in future. My latest understanding was that it can happen for some rules and not for others - far nicer if it doesn't need to be included everywhere!", "author": "johann-beleites-sonarsource", "createdAt": "2020-05-05T13:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Njc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NzI5Mg==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420097292", "bodyText": "To clarify - do we generally still need the test with .withoutSemantic() in that case?", "author": "johann-beleites-sonarsource", "createdAt": "2020-05-05T13:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Njc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwOTg4NA==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420109884", "bodyText": "No, we don't need it anymore.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-05-05T13:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Njc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1e367c42e88756fb7426b6236ea749e292029d81", "chunk": "diff --git a/java-checks/src/main/java/org/sonar/java/checks/JUnit4AnnotationsCheck.java b/java-checks/src/main/java/org/sonar/java/checks/JUnit4AnnotationsCheck.java\nindex 544d77b70..9e7218f98 100644\n--- a/java-checks/src/main/java/org/sonar/java/checks/JUnit4AnnotationsCheck.java\n+++ b/java-checks/src/main/java/org/sonar/java/checks/JUnit4AnnotationsCheck.java\n\n@@ -51,10 +51,6 @@ public class JUnit4AnnotationsCheck extends IssuableSubscriptionVisitor {\n \n   @Override\n   public void visitNode(Tree tree) {\n-    if (!hasSemantic()) {\n-      return;\n-    }\n-\n     String qualifiedName = ((AnnotationTree) tree).annotationType().symbolType().fullyQualifiedName();\n     if (OLD_NEW_ANNOTATIONS_MAP.containsKey(qualifiedName)) {\n       reportIssue(tree, String.format(\"Change this JUnit4 %s to the equivalent JUnit5 %s annotation.\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDMzMw==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420070333", "bodyText": "\ud83d\ude2e", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-05-05T12:29:07Z", "path": "java-checks/src/test/java/org/sonar/java/checks/JUnit4AnnotationsCheckTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks;\n+\n+import org.junit.jupiter.api.Test;\n+import org.sonar.java.checks.verifier.JavaCheckVerifier;\n+\n+import static org.sonar.java.CheckTestUtils.testSourcesPath;\n+\n+public class JUnit4AnnotationsCheckTest {", "originalCommit": "f7bb1026b92a5f4ac8cb70c6308e8110d035b51a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwMDk3Ng==", "url": "https://github.com/SonarSource/sonar-java/pull/2937#discussion_r420100976", "bodyText": "Oops, I hang my head in shame", "author": "johann-beleites-sonarsource", "createdAt": "2020-05-05T13:18:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "1e367c42e88756fb7426b6236ea749e292029d81", "chunk": "diff --git a/java-checks/src/test/java/org/sonar/java/checks/JUnit4AnnotationsCheckTest.java b/java-checks/src/test/java/org/sonar/java/checks/JUnit4AnnotationsCheckTest.java\nindex 9df164dc4..b9aaf19a1 100644\n--- a/java-checks/src/test/java/org/sonar/java/checks/JUnit4AnnotationsCheckTest.java\n+++ b/java-checks/src/test/java/org/sonar/java/checks/JUnit4AnnotationsCheckTest.java\n\n@@ -24,7 +24,7 @@ import org.sonar.java.checks.verifier.JavaCheckVerifier;\n \n import static org.sonar.java.CheckTestUtils.testSourcesPath;\n \n-public class JUnit4AnnotationsCheckTest {\n+class JUnit4AnnotationsCheckTest {\n   @Test\n   void test() {\n     JavaCheckVerifier.newVerifier()\n"}}, {"oid": "1e367c42e88756fb7426b6236ea749e292029d81", "url": "https://github.com/SonarSource/sonar-java/commit/1e367c42e88756fb7426b6236ea749e292029d81", "message": "Fixed a couple of code smells", "committedDate": "2020-05-05T13:20:36Z", "type": "commit"}]}