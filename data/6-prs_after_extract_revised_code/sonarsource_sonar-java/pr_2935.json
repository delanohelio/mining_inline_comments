{"pr_number": 2935, "pr_title": "SONARJAVA-3373 Rule S5810: JUnit5 test classes and methods should not have private visibility", "pr_createdAt": "2020-05-05T06:49:44Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2935", "timeline": [{"oid": "52acc6725c0733b6123267a02bdf27f7453aba87", "url": "https://github.com/SonarSource/sonar-java/commit/52acc6725c0733b6123267a02bdf27f7453aba87", "message": "SONARJAVA-3373 Rule S5810: JUnit5 test classes and methods should not have private visibility", "committedDate": "2020-05-05T05:01:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNzA5OA==", "url": "https://github.com/SonarSource/sonar-java/pull/2935#discussion_r420007098", "bodyText": "Do we have some standardized way of constructing strings? I've previously seen a lot of String.format as well - is that choice up to personal preference?", "author": "johann-beleites-sonarsource", "createdAt": "2020-05-05T10:23:36Z", "path": "java-checks/src/main/java/org/sonar/java/checks/AbstractJUnit5NotCompliantModifierChecker.java", "diffHunk": "@@ -55,18 +51,18 @@ public void visitNode(Tree tree) {\n       .filter(UnitTestUtils::hasJUnit5TestAnnotation)\n       .collect(Collectors.toList());\n \n-    testMethods.stream().map(MethodTree::modifiers).forEach(this::raiseIssueOnPresentAccessModifiers);\n+    testMethods.stream().map(MethodTree::modifiers).forEach(this::raiseIssueOnNotCompliantModifiers);\n \n     if (!testMethods.isEmpty()) {\n-      raiseIssueOnPresentAccessModifiers(classTree.modifiers());\n+      raiseIssueOnNotCompliantModifiers(classTree.modifiers());\n     }\n   }\n \n-  private void raiseIssueOnPresentAccessModifiers(ModifiersTree modifierTree) {\n+  private void raiseIssueOnNotCompliantModifiers(ModifiersTree modifierTree) {\n     modifierTree.modifiers().stream()\n-      .filter(modifierKeyword -> NON_COMPLIANT_MODIFIERS.contains(modifierKeyword.modifier()))\n-      .map(modifierKeywordTree -> (Tree) modifierKeywordTree)\n+      .filter(modifier -> isNotCompliant(modifier.modifier()))\n       .findFirst()\n-      .ifPresent(modifierKeyword -> reportIssue(modifierKeyword, \"Remove this access modifier\"));\n+      .ifPresent(modifier -> reportIssue(modifier, \"Remove this '\" + modifier.keyword().text() + \"' modifier.\"));", "originalCommit": "52acc6725c0733b6123267a02bdf27f7453aba87", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDExODQ2OQ==", "url": "https://github.com/SonarSource/sonar-java/pull/2935#discussion_r420118469", "bodyText": "I didn't see any standard between + and String.format in our checks. A quick grep report 170 reportIssue with a + and 105 String.format. Personally, I use String.format when I want to share the message at several locations or because I want a specific format like %04X.", "author": "alban-auzeill", "createdAt": "2020-05-05T13:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAwNzA5OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "94952297db98c6c3e7a8ca3570208c0001eba1ca", "url": "https://github.com/SonarSource/sonar-java/commit/94952297db98c6c3e7a8ca3570208c0001eba1ca", "message": "Merge branch 'master' into alban/SONARJAVA-3373", "committedDate": "2020-05-06T06:40:40Z", "type": "commit"}]}