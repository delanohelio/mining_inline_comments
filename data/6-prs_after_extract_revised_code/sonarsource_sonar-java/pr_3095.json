{"pr_number": 3095, "pr_title": "SONARJAVA-3237 S1142 should be ignored in equals methods", "pr_createdAt": "2020-07-07T16:12:19Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3095", "timeline": [{"oid": "194337005cd9773375fd678c1e7e0e31628d6a37", "url": "https://github.com/SonarSource/sonar-java/commit/194337005cd9773375fd678c1e7e0e31628d6a37", "message": "SONARJAVA-3237 S1142 should be ignored in equals methods", "committedDate": "2020-07-07T16:10:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyNjU3NA==", "url": "https://github.com/SonarSource/sonar-java/pull/3095#discussion_r451326574", "bodyText": "You should use MethodTreeUtils.isEqualsMethod here", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-07-08T07:05:34Z", "path": "java-checks/src/main/java/org/sonar/java/checks/MethodWithExcessiveReturnsCheck.java", "diffHunk": "@@ -68,7 +69,13 @@ public void visitNode(Tree tree) {\n   public void leaveNode(Tree tree) {\n     Tree reportTree = null;\n     if (tree.is(Tree.Kind.METHOD)) {\n-      reportTree = ((MethodTree) tree).simpleName();\n+      IdentifierTree methodName = ((MethodTree) tree).simpleName();\n+      if (\"equals\".equals(methodName.name())) {", "originalCommit": "194337005cd9773375fd678c1e7e0e31628d6a37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec7aa75b14caabc558f4010743936ce291587cd4", "chunk": "diff --git a/java-checks/src/main/java/org/sonar/java/checks/MethodWithExcessiveReturnsCheck.java b/java-checks/src/main/java/org/sonar/java/checks/MethodWithExcessiveReturnsCheck.java\nindex 9435d3a3c..2dc88f377 100644\n--- a/java-checks/src/main/java/org/sonar/java/checks/MethodWithExcessiveReturnsCheck.java\n+++ b/java-checks/src/main/java/org/sonar/java/checks/MethodWithExcessiveReturnsCheck.java\n\n@@ -69,11 +70,11 @@ public class MethodWithExcessiveReturnsCheck extends IssuableSubscriptionVisitor\n   public void leaveNode(Tree tree) {\n     Tree reportTree = null;\n     if (tree.is(Tree.Kind.METHOD)) {\n-      IdentifierTree methodName = ((MethodTree) tree).simpleName();\n-      if (\"equals\".equals(methodName.name())) {\n+      MethodTree method = (MethodTree) tree;\n+      if (MethodTreeUtils.isEqualsMethod(method)) {\n         methods.pop();\n       } else {\n-        reportTree = methodName;\n+        reportTree = method.simpleName();\n       }\n \n     } else if (tree.is(Tree.Kind.LAMBDA_EXPRESSION)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzMDc0NQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3095#discussion_r451330745", "bodyText": "We should also consider moving test files related to the new compiled module.", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-07-08T07:14:24Z", "path": "java-checks/src/test/files/checks/MethodWithExcessiveReturnsCheck.java", "diffHunk": "@@ -46,6 +46,23 @@ public void g() { // Compliant\n     return;\n     return;\n   }\n+", "originalCommit": "194337005cd9773375fd678c1e7e0e31628d6a37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ec7aa75b14caabc558f4010743936ce291587cd4", "chunk": "diff --git a/java-checks/src/test/files/checks/MethodWithExcessiveReturnsCheck.java b/java-checks/src/test/files/checks/MethodWithExcessiveReturnsCheck.java\nindex a9b32713f..d9633d7df 100644\n--- a/java-checks/src/test/files/checks/MethodWithExcessiveReturnsCheck.java\n+++ b/java-checks/src/test/files/checks/MethodWithExcessiveReturnsCheck.java\n\n@@ -63,6 +63,20 @@ class A {\n     A other = (A) obj;\n     return intMember == other.intMember && Objects.equals(stringMember, other.stringMember);\n   }\n+\n+  public boolean equals(A other) { // Noncompliant because this is not a proper equals method\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (obj == null) {\n+      return false;\n+    }\n+    if (getClass() != obj.getClass()) {\n+      return false;\n+    }\n+    A other = (A) obj;\n+    return intMember == other.intMember && Objects.equals(stringMember, other.stringMember);\n+  }\n }\n interface B {\n   default void method() { // Noncompliant {{Reduce the number of returns of this method 5, down to the maximum allowed 3.}}\n"}}, {"oid": "ec7aa75b14caabc558f4010743936ce291587cd4", "url": "https://github.com/SonarSource/sonar-java/commit/ec7aa75b14caabc558f4010743936ce291587cd4", "message": "Use MethodTreeUtils.isEqualsMethod", "committedDate": "2020-07-08T10:56:25Z", "type": "commit"}, {"oid": "3122c1a7cb7604264a90cc1cd4c2a0bd6eabca47", "url": "https://github.com/SonarSource/sonar-java/commit/3122c1a7cb7604264a90cc1cd4c2a0bd6eabca47", "message": "Adjust expected issues for integration tests", "committedDate": "2020-07-08T11:14:41Z", "type": "commit"}, {"oid": "259952192dad1964f467980014abfa6f4c241adb", "url": "https://github.com/SonarSource/sonar-java/commit/259952192dad1964f467980014abfa6f4c241adb", "message": "Move test code to compiled module", "committedDate": "2020-07-08T11:46:17Z", "type": "commit"}, {"oid": "7f60edae1340f7d33742e709bb4d2f74ce9ecc1e", "url": "https://github.com/SonarSource/sonar-java/commit/7f60edae1340f7d33742e709bb4d2f74ce9ecc1e", "message": "Remove unused import", "committedDate": "2020-07-08T11:57:54Z", "type": "commit"}, {"oid": "651a03a719502d33355a8fea96678734cc3dee72", "url": "https://github.com/SonarSource/sonar-java/commit/651a03a719502d33355a8fea96678734cc3dee72", "message": "Adjust expected again", "committedDate": "2020-07-08T13:46:43Z", "type": "commit"}]}