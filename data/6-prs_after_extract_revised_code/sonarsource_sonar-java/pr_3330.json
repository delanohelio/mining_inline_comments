{"pr_number": 3330, "pr_title": "SONARJAVA-3567 Fix FPs on full matches", "pr_createdAt": "2020-12-07T15:35:07Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3330", "timeline": [{"oid": "5f3bbc2b26fe0045f3467372beaf7536e5a83cfb", "url": "https://github.com/SonarSource/sonar-java/commit/5f3bbc2b26fe0045f3467372beaf7536e5a83cfb", "message": "SONARJAVA-3567 Fix FPs on full matches", "committedDate": "2020-12-07T15:54:09Z", "type": "commit"}, {"oid": "5f3bbc2b26fe0045f3467372beaf7536e5a83cfb", "url": "https://github.com/SonarSource/sonar-java/commit/5f3bbc2b26fe0045f3467372beaf7536e5a83cfb", "message": "SONARJAVA-3567 Fix FPs on full matches", "committedDate": "2020-12-07T15:54:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzODMwMQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3330#discussion_r537638301", "bodyText": "Why not return onlyMatchesEmptySuffix(start.continuation(), visited);?", "author": "alban-auzeill", "createdAt": "2020-12-07T16:21:14Z", "path": "java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java", "diffHunk": "@@ -253,4 +253,28 @@ public static boolean isEndBoundary(AutomatonState state) {\n     }\n   }\n \n+  public static boolean onlyMatchesEmptySuffix(AutomatonState start) {\n+    return onlyMatchesEmptySuffix(start, new HashSet<>());\n+  }\n+\n+  private static boolean onlyMatchesEmptySuffix(AutomatonState start, Set<AutomatonState> visited) {\n+    if (start instanceof FinalState || visited.contains(start)) {\n+      return true;\n+    }\n+    visited.add(start);\n+    if (start instanceof LookAroundTree) {\n+      return onlyMatchesEmptySuffix(start.continuation());", "originalCommit": "5f3bbc2b26fe0045f3467372beaf7536e5a83cfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY0NTg1NQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3330#discussion_r537645855", "bodyText": "That was a mistake, good catch.", "author": "sebastian-hungerecker-sonarsource", "createdAt": "2020-12-07T16:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYzODMwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "a3c80c93474149cf48d0499dbe93f8b1a90fed5d", "chunk": "diff --git a/java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java b/java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java\nindex c6b00849c..74fe3c3f7 100644\n--- a/java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java\n+++ b/java-checks/src/main/java/org/sonar/java/checks/helpers/RegexTreeHelper.java\n\n@@ -263,7 +263,7 @@ public class RegexTreeHelper {\n     }\n     visited.add(start);\n     if (start instanceof LookAroundTree) {\n-      return onlyMatchesEmptySuffix(start.continuation());\n+      return onlyMatchesEmptySuffix(start.continuation(), visited);\n     }\n     if (start.incomingTransitionType() != EPSILON) {\n       return false;\n"}}, {"oid": "a3c80c93474149cf48d0499dbe93f8b1a90fed5d", "url": "https://github.com/SonarSource/sonar-java/commit/a3c80c93474149cf48d0499dbe93f8b1a90fed5d", "message": "Fix from review", "committedDate": "2020-12-07T16:32:56Z", "type": "commit"}]}