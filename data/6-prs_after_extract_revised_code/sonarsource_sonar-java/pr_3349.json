{"pr_number": 3349, "pr_title": "SONARJAVA-3637 add new property 'sonar.java.jdkHome'", "pr_createdAt": "2020-12-14T11:12:11Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3349", "timeline": [{"oid": "804bda58cb5998382dfcfd8e9e4d50a3d79284c5", "url": "https://github.com/SonarSource/sonar-java/commit/804bda58cb5998382dfcfd8e9e4d50a3d79284c5", "message": "Enable Junit5 in ITs", "committedDate": "2020-12-14T13:39:29Z", "type": "forcePushed"}, {"oid": "b330c4b36170d7b487754c88fb50fc9ce656b9ad", "url": "https://github.com/SonarSource/sonar-java/commit/b330c4b36170d7b487754c88fb50fc9ce656b9ad", "message": "SONARJAVA-3576 Add jdk jars from 'sonar.java.jdkHome' in classpath before analysis", "committedDate": "2020-12-14T13:39:29Z", "type": "forcePushed"}, {"oid": "fe423d3c751b8511fa2a6a596fc14ca27e503f75", "url": "https://github.com/SonarSource/sonar-java/commit/fe423d3c751b8511fa2a6a596fc14ca27e503f75", "message": "SONARJAVA-3576 Add jdk jars from 'sonar.java.jdkHome' in classpath before analysis", "committedDate": "2020-12-15T09:14:17Z", "type": "forcePushed"}, {"oid": "8fe7159918f5f100451b1cbe6fad711bdda94638", "url": "https://github.com/SonarSource/sonar-java/commit/8fe7159918f5f100451b1cbe6fad711bdda94638", "message": "SONARJAVA-3637 setup classpath ITs to use new property 'sonar.java.jdkHome'", "committedDate": "2020-12-15T12:03:15Z", "type": "forcePushed"}, {"oid": "410cc177a91f312b78733e357179b298ee5345d6", "url": "https://github.com/SonarSource/sonar-java/commit/410cc177a91f312b78733e357179b298ee5345d6", "message": "SONARJAVA-3637 setup classpath ITs to use new property 'sonar.java.jdkHome'", "committedDate": "2020-12-16T09:38:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NTQzMQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544155431", "bodyText": "Unrelated, but would be great to declare those properties as multi-valued", "author": "henryju", "createdAt": "2020-12-16T09:46:20Z", "path": "java-frontend/src/main/java/org/sonar/java/classpath/ClasspathProperties.java", "diffHunk": "@@ -37,25 +38,30 @@ private ClasspathProperties() {\n \n   public static List<PropertyDefinition> getProperties() {\n     List<PropertyDefinition> extensions = new ArrayList<>();\n+    extensions.add(PropertyDefinition.builder(SONAR_JAVA_JDK_HOME)\n+      .description(\"Path to jdk directory used by the project under analysis.\")\n+      .hidden()\n+      .build()\n+    );\n     extensions.add(PropertyDefinition.builder(SONAR_JAVA_BINARIES)\n-            .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")\n-            .hidden()\n-            .build()\n+      .description(\"Comma-separated paths to directories containing the binary files (directories with class files).\")", "originalCommit": "1e0f2bb94e35ebc9ffac52903e015899d8027ea0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE3NDA2MQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544174061", "bodyText": "since they are hidden anyway, i'm not sure it would change things, but indeed.", "author": "m-g-sonar", "createdAt": "2020-12-16T10:13:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NTQzMQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NzE1Ng==", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544157156", "bodyText": "Maybe also check if this is a directory", "author": "henryju", "createdAt": "2020-12-16T09:48:45Z", "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "diffHunk": "@@ -62,18 +63,38 @@\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected List<File> binaries;\n-  protected List<File> elements;\n+  protected final List<File> binaries;\n+  protected final List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n   protected AbstractClasspath(Configuration settings, FileSystem fs, InputFile.Type fileType) {\n     this.settings = settings;\n     this.fs = fs;\n     this.fileType = fileType;\n+    this.binaries = new ArrayList<>();\n+    this.elements = new ArrayList<>();\n     initialized = false;\n   }\n \n+  protected List<File> getJdkJars() {\n+    return settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n+      .flatMap(AbstractClasspath::fileOrLog)\n+      .map(File::toPath)\n+      .map(JavaSdkUtil::getJdkClassesRoots)\n+      .orElse(Collections.emptyList());\n+  }\n+\n+  private static Optional<File> fileOrLog(String path) {\n+    File file = new File(path);\n+    if (!file.exists()) {", "originalCommit": "b2a857ea26dc118f7fe6a80dd220730b693df08d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82a3273d2121f7b0c6b30ba8ddc967417337284b", "chunk": "diff --git a/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java b/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\nindex 7dbaf0ae0..e9c0b8c53 100644\n--- a/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\n+++ b/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\n\n@@ -63,8 +62,8 @@ public abstract class AbstractClasspath {\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected final List<File> binaries;\n-  protected final List<File> elements;\n+  protected List<File> binaries;\n+  protected List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1ODA1MQ==", "url": "https://github.com/SonarSource/sonar-java/pull/3349#discussion_r544158051", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static Optional<File> fileOrLog(String path) {\n          \n          \n            \n              private static Optional<File> existingDirectoryOrLog(String path) {", "author": "henryju", "createdAt": "2020-12-16T09:50:03Z", "path": "java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java", "diffHunk": "@@ -62,18 +63,38 @@\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected List<File> binaries;\n-  protected List<File> elements;\n+  protected final List<File> binaries;\n+  protected final List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n   protected AbstractClasspath(Configuration settings, FileSystem fs, InputFile.Type fileType) {\n     this.settings = settings;\n     this.fs = fs;\n     this.fileType = fileType;\n+    this.binaries = new ArrayList<>();\n+    this.elements = new ArrayList<>();\n     initialized = false;\n   }\n \n+  protected List<File> getJdkJars() {\n+    return settings.get(ClasspathProperties.SONAR_JAVA_JDK_HOME)\n+      .flatMap(AbstractClasspath::fileOrLog)\n+      .map(File::toPath)\n+      .map(JavaSdkUtil::getJdkClassesRoots)\n+      .orElse(Collections.emptyList());\n+  }\n+\n+  private static Optional<File> fileOrLog(String path) {", "originalCommit": "b2a857ea26dc118f7fe6a80dd220730b693df08d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "82a3273d2121f7b0c6b30ba8ddc967417337284b", "chunk": "diff --git a/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java b/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\nindex 7dbaf0ae0..e9c0b8c53 100644\n--- a/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\n+++ b/java-frontend/src/main/java/org/sonar/java/classpath/AbstractClasspath.java\n\n@@ -63,8 +62,8 @@ public abstract class AbstractClasspath {\n   private final InputFile.Type fileType;\n   private static final Path[] STANDARD_CLASSES_DIRS = {Paths.get(\"target\", \"classes\"), Paths.get(\"target\", \"test-classes\")};\n \n-  protected final List<File> binaries;\n-  protected final List<File> elements;\n+  protected List<File> binaries;\n+  protected List<File> elements;\n   protected boolean validateLibraries;\n   protected boolean initialized;\n \n"}}, {"oid": "82a3273d2121f7b0c6b30ba8ddc967417337284b", "url": "https://github.com/SonarSource/sonar-java/commit/82a3273d2121f7b0c6b30ba8ddc967417337284b", "message": "SONARJAVA-3637 Add new property 'sonar.java.jdkHome'", "committedDate": "2020-12-16T10:15:27Z", "type": "commit"}, {"oid": "d9284e327f5a8de06d850d0e3004d3fb9b922718", "url": "https://github.com/SonarSource/sonar-java/commit/d9284e327f5a8de06d850d0e3004d3fb9b922718", "message": "SONARJAVA-3637 Add jdk jars from 'sonar.java.jdkHome' in classpath before analysis", "committedDate": "2020-12-16T10:28:16Z", "type": "commit"}, {"oid": "38895973401805b06b396c5d0c6ff1f1a7032172", "url": "https://github.com/SonarSource/sonar-java/commit/38895973401805b06b396c5d0c6ff1f1a7032172", "message": "SONARJAVA-3637 Setup classpath ITs to use new property 'sonar.java.jdkHome'", "committedDate": "2020-12-16T10:28:16Z", "type": "commit"}, {"oid": "38895973401805b06b396c5d0c6ff1f1a7032172", "url": "https://github.com/SonarSource/sonar-java/commit/38895973401805b06b396c5d0c6ff1f1a7032172", "message": "SONARJAVA-3637 Setup classpath ITs to use new property 'sonar.java.jdkHome'", "committedDate": "2020-12-16T10:28:16Z", "type": "forcePushed"}]}