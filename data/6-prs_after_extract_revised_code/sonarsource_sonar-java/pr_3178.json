{"pr_number": 3178, "pr_title": "SONARJAVA-3524 Rule S5973: Tests should be stable", "pr_createdAt": "2020-09-14T15:39:45Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3178", "timeline": [{"oid": "1db54b4ea96b07e7173bfeb8cc41fa662538b0e8", "url": "https://github.com/SonarSource/sonar-java/commit/1db54b4ea96b07e7173bfeb8cc41fa662538b0e8", "message": "Implementation", "committedDate": "2020-09-14T19:47:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ4NTUwOA==", "url": "https://github.com/SonarSource/sonar-java/pull/3178#discussion_r488485508", "bodyText": "Can be replaced by\n.filter(annotationTree -> annotationTree.symbolType().is(ANNOTATION))", "author": "alban-auzeill", "createdAt": "2020-09-15T08:31:47Z", "path": "java-checks/src/main/java/org/sonar/java/checks/tests/TestsStabilityCheck.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.checks.tests;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+import org.sonar.check.Rule;\n+import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n+import org.sonar.plugins.java.api.tree.AnnotationTree;\n+import org.sonar.plugins.java.api.tree.Arguments;\n+import org.sonar.plugins.java.api.tree.AssignmentExpressionTree;\n+import org.sonar.plugins.java.api.tree.ExpressionTree;\n+import org.sonar.plugins.java.api.tree.IdentifierTree;\n+import org.sonar.plugins.java.api.tree.MethodTree;\n+import org.sonar.plugins.java.api.tree.Tree;\n+\n+@Rule(key = \"S5973\")\n+public class TestsStabilityCheck extends IssuableSubscriptionVisitor {\n+\n+  private static final String ANNOTATION = \"org.testng.annotations.Test\";\n+  private static final String SUCCESS_PERCENTAGE_NAME = \"successPercentage\";\n+\n+  @Override\n+  public List<Tree.Kind> nodesToVisit() {\n+    return Arrays.asList(Tree.Kind.METHOD, Tree.Kind.CONSTRUCTOR);\n+  }\n+\n+  @Override\n+  public void visitNode(Tree tree) {\n+    MethodTree methodTree = (MethodTree) tree;\n+\n+    List<AnnotationTree> annotations = methodTree.modifiers().annotations();\n+    Optional<Arguments> arguments = annotations.stream()\n+      .filter(annotationTree -> annotationTree.symbolType().fullyQualifiedName().equals(ANNOTATION))", "originalCommit": "1db54b4ea96b07e7173bfeb8cc41fa662538b0e8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8704d914cf623cde7042d6ada09924a7849d149c", "chunk": "diff --git a/java-checks/src/main/java/org/sonar/java/checks/tests/TestsStabilityCheck.java b/java-checks/src/main/java/org/sonar/java/checks/tests/TestsStabilityCheck.java\ndeleted file mode 100644\nindex c9351d750..000000000\n--- a/java-checks/src/main/java/org/sonar/java/checks/tests/TestsStabilityCheck.java\n+++ /dev/null\n\n@@ -1,68 +0,0 @@\n-/*\n- * SonarQube Java\n- * Copyright (C) 2012-2020 SonarSource SA\n- * mailto:info AT sonarsource DOT com\n- *\n- * This program is free software; you can redistribute it and/or\n- * modify it under the terms of the GNU Lesser General Public\n- * License as published by the Free Software Foundation; either\n- * version 3 of the License, or (at your option) any later version.\n- *\n- * This program is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public License\n- * along with this program; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n- */\n-package org.sonar.java.checks.tests;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Optional;\n-import org.sonar.check.Rule;\n-import org.sonar.plugins.java.api.IssuableSubscriptionVisitor;\n-import org.sonar.plugins.java.api.tree.AnnotationTree;\n-import org.sonar.plugins.java.api.tree.Arguments;\n-import org.sonar.plugins.java.api.tree.AssignmentExpressionTree;\n-import org.sonar.plugins.java.api.tree.ExpressionTree;\n-import org.sonar.plugins.java.api.tree.IdentifierTree;\n-import org.sonar.plugins.java.api.tree.MethodTree;\n-import org.sonar.plugins.java.api.tree.Tree;\n-\n-@Rule(key = \"S5973\")\n-public class TestsStabilityCheck extends IssuableSubscriptionVisitor {\n-\n-  private static final String ANNOTATION = \"org.testng.annotations.Test\";\n-  private static final String SUCCESS_PERCENTAGE_NAME = \"successPercentage\";\n-\n-  @Override\n-  public List<Tree.Kind> nodesToVisit() {\n-    return Arrays.asList(Tree.Kind.METHOD, Tree.Kind.CONSTRUCTOR);\n-  }\n-\n-  @Override\n-  public void visitNode(Tree tree) {\n-    MethodTree methodTree = (MethodTree) tree;\n-\n-    List<AnnotationTree> annotations = methodTree.modifiers().annotations();\n-    Optional<Arguments> arguments = annotations.stream()\n-      .filter(annotationTree -> annotationTree.symbolType().fullyQualifiedName().equals(ANNOTATION))\n-      .map(AnnotationTree::arguments)\n-      .findFirst();\n-\n-    if (arguments.isPresent()) {\n-      for (ExpressionTree argument : arguments.get()) {\n-        if (argument.is(Tree.Kind.ASSIGNMENT)) {\n-          AssignmentExpressionTree assignmentTree = (AssignmentExpressionTree) argument;\n-          IdentifierTree nameTree = (IdentifierTree) assignmentTree.variable();\n-          if (nameTree.name().equals(SUCCESS_PERCENTAGE_NAME) ) {\n-            reportIssue(argument, \"Make this test stable and remove this \\\"successPercentage\\\" argument.\");\n-          }\n-        }\n-      }\n-    }\n-  }\n-}\n"}}, {"oid": "8704d914cf623cde7042d6ada09924a7849d149c", "url": "https://github.com/SonarSource/sonar-java/commit/8704d914cf623cde7042d6ada09924a7849d149c", "message": "Initial commit", "committedDate": "2020-09-15T12:59:00Z", "type": "commit"}, {"oid": "a7e5950fbc2c16371fb02ac19ca9cd11caf91fc4", "url": "https://github.com/SonarSource/sonar-java/commit/a7e5950fbc2c16371fb02ac19ca9cd11caf91fc4", "message": "Implementation", "committedDate": "2020-09-15T13:00:21Z", "type": "commit"}, {"oid": "a7e5950fbc2c16371fb02ac19ca9cd11caf91fc4", "url": "https://github.com/SonarSource/sonar-java/commit/a7e5950fbc2c16371fb02ac19ca9cd11caf91fc4", "message": "Implementation", "committedDate": "2020-09-15T13:00:21Z", "type": "forcePushed"}]}