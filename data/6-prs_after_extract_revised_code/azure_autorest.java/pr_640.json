{"pr_number": 640, "pr_title": "v4 fix optional paramter of wiretype", "pr_createdAt": "2020-06-22T06:16:33Z", "pr_url": "https://github.com/Azure/autorest.java/pull/640", "timeline": [{"oid": "c8e6e7a0fe129116e24f22bead37a722f15062a0", "url": "https://github.com/Azure/autorest.java/commit/c8e6e7a0fe129116e24f22bead37a722f15062a0", "message": "init optional parameter even if clienttype != wiretype", "committedDate": "2020-06-22T06:04:38Z", "type": "commit"}, {"oid": "312cef6953ae1fd4eed3df659f83f0d655c0f7d7", "url": "https://github.com/Azure/autorest.java/commit/312cef6953ae1fd4eed3df659f83f0d655c0f7d7", "message": "fix code bug, happen on body-file", "committedDate": "2020-06-22T06:11:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzNzcwNQ==", "url": "https://github.com/Azure/autorest.java/pull/640#discussion_r443337705", "bodyText": "So far, it is safe to do this in 2 steps: 1. set the parameter to null e.g. in listAsync, 2. convert the client type to wire type e.g. in listSinglePageAsync.\nThis relates to my decision of not overload the base method type (PagingAsyncSinglePage, SimpleAsyncRestResponse) with regard to optional parameters. Hence the init of optional parameter need to happen in other client method types.\nI think v3 does it in single step, in ConvertClientTypesToWireTypes method.\nChecked that following will all convert null to null, as intended.\nBase64Util.encodeToString\nBase64Url.encode\nJacksonAdapter.createDefaultSerializerAdapter().serializeList", "author": "weidongxu-microsoft", "createdAt": "2020-06-22T06:18:51Z", "path": "javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java", "diffHunk": "@@ -87,7 +87,10 @@ protected static void AddOptionalAndConstantVariables(JavaBlock function, Client\n                     (parameterClientType instanceof ArrayType || parameterClientType instanceof ListType)) {\n                 parameterWireType = ClassType.String;\n             }\n-            boolean alwaysNull = parameterWireType != parameterClientType && clientMethod.getOnlyRequiredParameters() && !parameter.getIsRequired();\n+            // \"addConstant\" clause is a hack here.\n+            // For SimpleAsyncRestResponse and PagingAsyncSinglePage, \"alwaysNull\" is set to true, to let \"ConvertClientTypesToWireTypes\" method set the optional parameter.\n+            // For other ClientMethodType (which would have addConstant=false), optional parameter need to be initialized for calling method with full parameters.\n+            boolean alwaysNull = addConstant && parameterWireType != parameterClientType && clientMethod.getOnlyRequiredParameters() && !parameter.getIsRequired();", "originalCommit": "312cef6953ae1fd4eed3df659f83f0d655c0f7d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0MzM3Mg==", "url": "https://github.com/Azure/autorest.java/pull/640#discussion_r443343372", "bodyText": "I am not sure what addConstant is used for in other places but taking a dependency on this field to determine whether to init the optional param might cause issues when the semantics of addConstant change. Is there a more reliable way to determine whether optional param should be initialized or not?", "author": "srnagar", "createdAt": "2020-06-22T06:35:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzNzcwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM0Njg2Mw==", "url": "https://github.com/Azure/autorest.java/pull/640#discussion_r443346863", "bodyText": "OK. Added ignoreParameterNeedConvert for this purpose.", "author": "weidongxu-microsoft", "createdAt": "2020-06-22T06:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzNzcwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3d9cfbbc0ae8a22e3cc8c513a51dd77d9913d22f", "chunk": "diff --git a/javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java b/javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java\nindex 7451dc36..16b216fc 100644\n--- a/javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java\n+++ b/javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java\n\n@@ -87,10 +98,7 @@ public class ClientMethodTemplate implements IJavaTemplate<ClientMethod, JavaTyp\n                     (parameterClientType instanceof ArrayType || parameterClientType instanceof ListType)) {\n                 parameterWireType = ClassType.String;\n             }\n-            // \"addConstant\" clause is a hack here.\n-            // For SimpleAsyncRestResponse and PagingAsyncSinglePage, \"alwaysNull\" is set to true, to let \"ConvertClientTypesToWireTypes\" method set the optional parameter.\n-            // For other ClientMethodType (which would have addConstant=false), optional parameter need to be initialized for calling method with full parameters.\n-            boolean alwaysNull = addConstant && parameterWireType != parameterClientType && clientMethod.getOnlyRequiredParameters() && !parameter.getIsRequired();\n+            boolean alwaysNull = ignoreParameterNeedConvert && parameterWireType != parameterClientType && clientMethod.getOnlyRequiredParameters() && !parameter.getIsRequired();\n \n             if (!parameter.getFromClient() && !alwaysNull && ((addOptional && clientMethod.getOnlyRequiredParameters() && !parameter.getIsRequired()) || (addConstant && parameter.getIsConstant()))) {\n                 String defaultValue = parameterClientType.defaultValueExpression(parameter.getDefaultValue());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzODE5OA==", "url": "https://github.com/Azure/autorest.java/pull/640#discussion_r443338198", "bodyText": "bug fix.\nFormatter.formatSourceAndFixImports will fail on invalid java code. It then fails the generate script on that autorest call, but not triggering error.", "author": "weidongxu-microsoft", "createdAt": "2020-06-22T06:20:22Z", "path": "javagen/src/main/java/com/azure/autorest/template/ClientMethodTemplate.java", "diffHunk": "@@ -374,7 +377,7 @@ public final void write(ClientMethod clientMethod, JavaType typeBlock) {\n                 typeBlock.publicMethod(clientMethod.getDeclaration(), function -> {\n                     AddOptionalVariables(function, clientMethod, restAPIMethod.getParameters(), settings);\n                     if (clientMethod.getReturnValue().getType() == ClassType.InputStream) {\n-                        function.line(\"Iterator<ByteBufferBackedInputStream> iterator = %s(%S).map(ByteBufferBackedInputStream::new).toStream().iterator()\",\n+                        function.line(\"Iterator<ByteBufferBackedInputStream> iterator = %s(%S).map(ByteBufferBackedInputStream::new).toStream().iterator();\",", "originalCommit": "312cef6953ae1fd4eed3df659f83f0d655c0f7d7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "3d9cfbbc0ae8a22e3cc8c513a51dd77d9913d22f", "url": "https://github.com/Azure/autorest.java/commit/3d9cfbbc0ae8a22e3cc8c513a51dd77d9913d22f", "message": "add ignoreParameterNeedConvert", "committedDate": "2020-06-22T06:45:13Z", "type": "commit"}]}