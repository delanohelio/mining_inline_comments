{"pr_number": 804, "pr_title": "Support customization code in README", "pr_createdAt": "2020-11-19T07:59:38Z", "pr_url": "https://github.com/Azure/autorest.java/pull/804", "timeline": [{"oid": "8f21c2e5d31b77df921ad084d49786ba277bb739", "url": "https://github.com/Azure/autorest.java/commit/8f21c2e5d31b77df921ad084d49786ba277bb739", "message": "Support customization code in README", "committedDate": "2020-11-19T07:57:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg0NjM0MQ==", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r526846341", "bodyText": "Could there be a security risk if jarUrl can be loaded from remote?", "author": "weidongxu-microsoft", "createdAt": "2020-11-19T12:37:33Z", "path": "postprocessor/src/main/java/com/azure/autorest/postprocessor/Postprocessor.java", "diffHunk": "@@ -26,16 +40,25 @@ public Postprocessor(Connection connection, String plugin, String sessionId) {\n     super(connection, plugin, sessionId);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public boolean processInternal() {\n     List<String> files = listInputs();\n     Map<String, String> fileContents = files.stream().collect(Collectors.toMap(f -> f, this::readFile));\n \n+    String jarPath = JavaSettings.getInstance().getCustomizationJarPath();\n+    String className = JavaSettings.getInstance().getCustomizationClass();\n+    Map.Entry<String, String> readme = getReadme();\n+\n+    if (className == null || (jarPath == null && readme == null)) {\n+      logger.warn(\"Must provide a JAR path or a README.md config containing the customization class {}\", className);\n+      return false;\n+    }\n+\n     try {\n       //Step 1: post process\n-      String jarPath = JavaSettings.getInstance().getCustomizationJarPath();\n-      String className = JavaSettings.getInstance().getCustomizationClass();\n-      if (jarPath != null && className != null) {\n+      Class<? extends Customization> customizationClass;\n+      if (jarPath != null) {", "originalCommit": "8f21c2e5d31b77df921ad084d49786ba277bb739", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzMyNjQ4NQ==", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r527326485", "bodyText": "Can you elaborate on the risk here? It can be loaded from anywhere over the Internet, but it's passed in by the user and it's the user's responsibility to make sure they don't load random jars from untrusted sources.", "author": "jianghaolu", "createdAt": "2020-11-20T00:58:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg0NjM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI5NjkxNQ==", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r528296915", "bodyText": "Actually, I do not exactly know. Theoretically someone can modify the url hiding it among other changes in a submitted PR (to a lib that uses autorest.java), trick dev to test the PR and hence run the jar, and the jar would grab env and pass file from local disk, upload them to remote site. Will it happen? No idea. The risk probably is not significant at this stage. Does it worth some mitigation e.g. SecurityManager, or just disable remote jar? Not sure.", "author": "weidongxu-microsoft", "createdAt": "2020-11-22T07:47:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg0NjM0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1ODI4Mw==", "url": "https://github.com/Azure/autorest.java/pull/804#discussion_r552258283", "bodyText": "I think we should phase out passing in a separate jar - and use either the readme or a central location in the repo. So I'll not do too much here", "author": "jianghaolu", "createdAt": "2021-01-05T23:24:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg0NjM0MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "7537740ca74b7da622b49244816a13c4d8cb9d96", "url": "https://github.com/Azure/autorest.java/commit/7537740ca74b7da622b49244816a13c4d8cb9d96", "message": "Merge branch 'v4' of github.com:Azure/autorest.java into customizationreadme", "committedDate": "2021-01-05T23:35:08Z", "type": "commit"}]}