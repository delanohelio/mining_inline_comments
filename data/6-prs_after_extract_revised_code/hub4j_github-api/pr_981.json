{"pr_number": 981, "pr_title": "Add affiliation filter for collaborators", "pr_createdAt": "2020-11-19T20:38:51Z", "pr_url": "https://github.com/hub4j/github-api/pull/981", "timeline": [{"oid": "7fee1fcc74346aa91c8c8ddba761b8de1b2e203d", "url": "https://github.com/hub4j/github-api/commit/7fee1fcc74346aa91c8c8ddba761b8de1b2e203d", "message": "Add affiliation filter for collaborators", "committedDate": "2020-11-19T01:58:51Z", "type": "commit"}, {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee", "url": "https://github.com/hub4j/github-api/commit/3c56f1f076248b56f9512274a510d836c52d4aee", "message": "Merge branch 'master' into AffiliationFilter", "committedDate": "2020-11-19T23:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529644799", "bodyText": "Wow, the built in formatter doesn't protect against this?  Ouch.", "author": "bitwiseman", "createdAt": "2020-11-24T15:35:08Z", "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -75,7 +75,7 @@ private GitHubRequest(@Nonnull List<Entry> args,\n \n     /**\n      * Create a new {@link Builder}.\n-     * \n+     *", "originalCommit": "3c56f1f076248b56f9512274a510d836c52d4aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2ODYxMw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529868613", "bodyText": "Ugh. My editor is supposed to be configured to remove trailing whitespace. Will clean this stuff up.", "author": "Irialad", "createdAt": "2020-11-24T20:49:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAzMDk4Nw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530030987", "bodyText": "Oh! I see. My editor did remove it. Hah, now I understand.", "author": "Irialad", "createdAt": "2020-11-25T00:29:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwODM3Ng==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530408376", "bodyText": "Yeah, it's the autoformatter in the build that failed to catch these earlier. \ud83d\ude22", "author": "bitwiseman", "createdAt": "2020-11-25T14:20:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529650293", "bodyText": "affiliation is not a required parameter.  We shouldn't force it to be added. Maybe add a DEFAULT to the enum?\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#list-repository-collaborators", "author": "bitwiseman", "createdAt": "2020-11-24T15:38:54Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);", "originalCommit": "3c56f1f076248b56f9512274a510d836c52d4aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2OTM1Ng==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529869356", "bodyText": "I see your point, I won't force it. I think the enum should map directly to the values in the SDK though, and I'd expect if default behavior is desired, they'd simply call the method with no args. What do you think?", "author": "Irialad", "createdAt": "2020-11-24T20:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NDEwMA==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529884100", "bodyText": "they'd simply call the method with no args\n\nExactly, but your change forces the addition of the affiliation to the API call (line 858 below).  So, your call how you want to do it, but this method call should result in a web api call that doesn't have affiliation arg.", "author": "bitwiseman", "createdAt": "2020-11-24T21:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex 6d7ed95f2..c6a535aac 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -841,7 +845,7 @@ public class GHRepository extends GHObject {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listCollaborators(CollaboratorAffiliation.ALL);\n+        return listUsers(\"collaborators\");\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529655076", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    args.put(\"affiliation\", affiliation.toString().toLowerCase());\n          \n          \n            \n                    args.with(\"affiliation\", affiliation);\n          \n      \n    \n    \n  \n\nLowercasing is done automatically for enums inside the request builder.", "author": "bitwiseman", "createdAt": "2020-11-24T15:42:09Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());", "originalCommit": "3c56f1f076248b56f9512274a510d836c52d4aee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2OTYyNA==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529869624", "bodyText": "Oh! Lovely. I'll remove the superfluous calls.", "author": "Irialad", "createdAt": "2020-11-24T20:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MTU1Nw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529891557", "bodyText": "Oh, wait, sorry.  This doesn't work.  The request builder with(String, Enum) is what does the toLowercase for you.   You're passing a Map.  Maybe switch to passing  a request builder?  It's okay if you want to keep this as is.", "author": "bitwiseman", "createdAt": "2020-11-24T21:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex 6d7ed95f2..c6a535aac 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -841,7 +845,7 @@ public class GHRepository extends GHObject {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listCollaborators(CollaboratorAffiliation.ALL);\n+        return listUsers(\"collaborators\");\n     }\n \n     /**\n"}}, {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "url": "https://github.com/hub4j/github-api/commit/3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "message": "Merge branch 'master' into AffiliationFilter", "committedDate": "2020-11-24T20:52:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529888156", "bodyText": "This probably also use listUsers(...) right?", "author": "bitwiseman", "createdAt": "2020-11-24T21:26:01Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -873,10 +895,25 @@ public boolean hasAssignee(GHUser u) throws IOException {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n+        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n+     * but it works a lot faster than {@link #getCollaborators()}.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return the collaborator names\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public Set<String> getCollaboratorNames(CollaboratorAffiliation affiliation) throws IOException {\n         Set<String> r = new HashSet<>();\n         // no initializer - we just want to the logins\n         PagedIterable<GHUser> users = root.createRequest()", "originalCommit": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxODg0Nw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529918847", "bodyText": "listUsers does a few extra things, so that would negatively impact the speed of what is ostensibly the \"fast\" alternative. If that's a desirable change, I'm happy to make it.", "author": "Irialad", "createdAt": "2020-11-24T22:06:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTY0OA==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530415648", "bodyText": "This isn't the fast alternative, just a convenient one. Go ahead and change it.", "author": "bitwiseman", "createdAt": "2020-11-25T14:30:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg2NDI1Mw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533864253", "bodyText": "Is the javadoc in error and I should update that while I'm in here?\n    /**\n     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n     * but it works a lot faster than {@link #getCollaborators()}.\n     *\n     * @return the collaborator names\n     * @throws IOException\n     *             the io exception\n     */\n    public Set<String> getCollaboratorNames() throws IOException```", "author": "Irialad", "createdAt": "2020-12-02T03:01:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex b34dca6a4..c6a535aac 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -895,7 +899,15 @@ public class GHRepository extends GHObject {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n-        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+        Set<String> r = new HashSet<>();\n+        // no initializer - we just want to the logins\n+        PagedIterable<GHUser> users = root.createRequest()\n+                .withUrlPath(getApiTailUrl(\"collaborators\"))\n+                .toIterable(GHUser[].class, null);\n+        for (GHUser u : users.toArray()) {\n+            r.add(u.login);\n+        }\n+        return r;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529890435", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {\n          \n          \n            \n                private PagedIterable<GHUser> listUsers(final String suffix, GitHubRequest.Builder request) {\n          \n      \n    \n    \n  \n\nInstead of passing args, maybe pass the request builder?", "author": "bitwiseman", "createdAt": "2020-11-24T21:30:39Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2088,8 +2125,14 @@ public GHLabel createLabel(String name, String color, String description) throws\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n+        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n+        return listUsers(suffix, defaultArgs);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {", "originalCommit": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyMjMwMg==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529922302", "bodyText": "I'll play around with that, and see if that leads to a more elegant result.", "author": "Irialad", "createdAt": "2020-11-24T22:09:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxMDEyNw==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530410127", "bodyText": "I like the with(...) method addition.", "author": "bitwiseman", "createdAt": "2020-11-25T14:23:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3MDk5MA==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533870990", "bodyText": "Ok, I think I have a slightly nicer way of passing things around. I think I'll shortly be done addressing feedback, and I'll record for the test and update the PR.", "author": "Irialad", "createdAt": "2020-12-02T03:24:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex b34dca6a4..c6a535aac 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -2125,15 +2137,15 @@ public class GHRepository extends GHObject {\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n-        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n-        return listUsers(suffix, defaultArgs);\n+        return listUsers(root.createRequest(), suffix);\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {\n-        return root.createRequest()\n-                .withUrlPath(getApiTailUrl(suffix))\n-                .with(args)\n-                .toIterable(GHUser[].class, item -> item.wrapUp(root));\n+        return listUsers(root.createRequest().with(args), suffix);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(Requester requester, final String suffix) {\n+        return requester.withUrlPath(getApiTailUrl(suffix)).toIterable(GHUser[].class, item -> item.wrapUp(root));\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwODkzOQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530408939", "bodyText": "Good addition.", "author": "bitwiseman", "createdAt": "2020-11-25T14:21:28Z", "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -437,6 +437,21 @@ public B withPreview(String name) {\n             return withHeader(\"Accept\", name);\n         }\n \n+        /**\n+         * With requester.\n+         *\n+         * @param Map\n+         *            map of key value pairs to add\n+         * @return the request builder\n+         */\n+        public B with(Map<String, Object> map) {", "originalCommit": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwOTI2OQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530409269", "bodyText": "Still need to add test recording, of course.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Ignore(\"Data not cached\")", "author": "bitwiseman", "createdAt": "2020-11-25T14:21:54Z", "path": "src/test/java/org/kohsuke/github/GHRepositoryTest.java", "diffHunk": "@@ -645,6 +646,16 @@ public void listCollaborators() throws Exception {\n         assertThat(collaborators.size(), greaterThan(10));\n     }\n \n+    @Test\n+    @Ignore(\"Data not cached\")", "originalCommit": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/test/java/org/kohsuke/github/GHRepositoryTest.java b/src/test/java/org/kohsuke/github/GHRepositoryTest.java\nindex 5eb0038ea..d211239d9 100644\n--- a/src/test/java/org/kohsuke/github/GHRepositoryTest.java\n+++ b/src/test/java/org/kohsuke/github/GHRepositoryTest.java\n\n@@ -647,13 +646,12 @@ public class GHRepositoryTest extends AbstractGitHubWireMockTest {\n     }\n \n     @Test\n-    @Ignore(\"Data not cached\")\n     public void listCollaboratorsFiltered() throws Exception {\n         GHRepository repo = getRepository();\n         List<GHUser> allCollaborators = repo.listCollaborators().toList();\n         List<GHUser> filteredCollaborators = repo.listCollaborators(GHRepository.CollaboratorAffiliation.OUTSIDE)\n                 .toList();\n-        assertThat(allCollaborators.size(), greaterThan(filteredCollaborators.size()));\n+        assertThat(filteredCollaborators.size(), lessThan(allCollaborators.size()));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTI0MQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530415241", "bodyText": "Does this work?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return listUsers(\"collaborators\", args);\n          \n          \n            \n                    return listUsers(\"collaborators\", \n          \n          \n            \n                        Collections.singletonMap(\"affiliation\", affiliation);", "author": "bitwiseman", "createdAt": "2020-11-25T14:30:16Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());\n+        return listUsers(\"collaborators\", args);", "originalCommit": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4NDQ1OQ==", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533884459", "bodyText": "Take a look at how I've streamlined things now and tell me what you think.", "author": "Irialad", "createdAt": "2020-12-02T04:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTI0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c3869bee31ceab48a62426966ebcdfbf05810813", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex b34dca6a4..c6a535aac 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -841,7 +845,7 @@ public class GHRepository extends GHObject {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listCollaborators(CollaboratorAffiliation.ALL);\n+        return listUsers(\"collaborators\");\n     }\n \n     /**\n"}}, {"oid": "17af78f2bba00c7bbb44fe3e4e7500ab863ca6e8", "url": "https://github.com/hub4j/github-api/commit/17af78f2bba00c7bbb44fe3e4e7500ab863ca6e8", "message": "Merge branch 'master' into AffiliationFilter", "committedDate": "2020-11-25T21:10:09Z", "type": "commit"}, {"oid": "c3869bee31ceab48a62426966ebcdfbf05810813", "url": "https://github.com/hub4j/github-api/commit/c3869bee31ceab48a62426966ebcdfbf05810813", "message": "Reverted changes which added filter unnecessarily, cleanup, add test cache, enable test", "committedDate": "2020-12-02T03:50:24Z", "type": "commit"}, {"oid": "f55a39eb90aabc074fdf6e549c563b25c97fc8f5", "url": "https://github.com/hub4j/github-api/commit/f55a39eb90aabc074fdf6e549c563b25c97fc8f5", "message": "Merge branch 'master' into AffiliationFilter", "committedDate": "2020-12-02T04:08:54Z", "type": "commit"}, {"oid": "ad40d7071e14a3798714c0381e946d691b342995", "url": "https://github.com/hub4j/github-api/commit/ad40d7071e14a3798714c0381e946d691b342995", "message": "Streamline per feedback", "committedDate": "2020-12-02T19:41:13Z", "type": "commit"}]}