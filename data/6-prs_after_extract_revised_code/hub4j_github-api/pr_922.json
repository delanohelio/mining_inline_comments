{"pr_number": 922, "pr_title": " methods for listing PRs where the commit is head & listing branches which contain the commit", "pr_createdAt": "2020-08-11T23:00:45Z", "pr_url": "https://github.com/hub4j/github-api/pull/922", "timeline": [{"oid": "2b0060402113a86885aa3833b6b4dc1f9c6a2d3c", "url": "https://github.com/hub4j/github-api/commit/2b0060402113a86885aa3833b6b4dc1f9c6a2d3c", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-08-11T23:09:53Z", "type": "forcePushed"}, {"oid": "e71365495351afe643ddfd8cf28643133397b5e7", "url": "https://github.com/hub4j/github-api/commit/e71365495351afe643ddfd8cf28643133397b5e7", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-08-11T23:10:45Z", "type": "forcePushed"}, {"oid": "3355272b0bdd9260be5376915bb159526418eff9", "url": "https://github.com/hub4j/github-api/commit/3355272b0bdd9260be5376915bb159526418eff9", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-08-11T23:14:09Z", "type": "forcePushed"}, {"oid": "a4efc7137f671cda09f53bc9f5cc763ebb563eb0", "url": "https://github.com/hub4j/github-api/commit/a4efc7137f671cda09f53bc9f5cc763ebb563eb0", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-08-11T23:19:40Z", "type": "forcePushed"}, {"oid": "1559fc9de09dffd28a652160da74d979d9026d3e", "url": "https://github.com/hub4j/github-api/commit/1559fc9de09dffd28a652160da74d979d9026d3e", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-08-11T23:34:05Z", "type": "forcePushed"}, {"oid": "6ee78e961bd7f3e1560774b39ed4876ae8540760", "url": "https://github.com/hub4j/github-api/commit/6ee78e961bd7f3e1560774b39ed4876ae8540760", "message": "add GHCommit tests", "committedDate": "2020-08-13T08:39:16Z", "type": "forcePushed"}, {"oid": "555fa69ae1589bc150ab1c92b17e1c0a9c7875e9", "url": "https://github.com/hub4j/github-api/commit/555fa69ae1589bc150ab1c92b17e1c0a9c7875e9", "message": "add GHCommit tests", "committedDate": "2020-08-13T08:55:18Z", "type": "forcePushed"}, {"oid": "70343c5eb8174a8090b347e43737704191adcecf", "url": "https://github.com/hub4j/github-api/commit/70343c5eb8174a8090b347e43737704191adcecf", "message": "add GHCommit tests", "committedDate": "2020-08-13T12:33:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4NzE0Nw==", "url": "https://github.com/hub4j/github-api/pull/922#discussion_r470087147", "bodyText": "Rather than querying this, choose some commits manually and pass specific string SHA1 values.  These are never going to change, so getting the list of commits just inflates the test data files.", "author": "bitwiseman", "createdAt": "2020-08-13T16:46:51Z", "path": "src/test/java/org/kohsuke/github/CommitTest.java", "diffHunk": "@@ -25,6 +25,44 @@ public void listFiles() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void listPullRequests() throws Exception {\n+        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n+\n+        int[] prsToTest = { 909, 898, 893 };\n+\n+        for (Integer prNumber : prsToTest) {\n+            GHPullRequest pullRequest = repo.getPullRequest(prNumber);\n+\n+            GHCommit commit = repo\n+                    .getCommit(pullRequest.listCommits().toList().stream().findFirst().map(it -> it.sha).orElse(\"\"));", "originalCommit": "70343c5eb8174a8090b347e43737704191adcecf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzMTM1MQ==", "url": "https://github.com/hub4j/github-api/pull/922#discussion_r483231351", "bodyText": "Reworked the test.", "author": "tginiotis-at-work", "createdAt": "2020-09-03T20:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA4NzE0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "def2f0b37d4ea1e33fd0e80e4675749726985b21", "chunk": "diff --git a/src/test/java/org/kohsuke/github/CommitTest.java b/src/test/java/org/kohsuke/github/CommitTest.java\nindex 07a8b4078..6ed5f6cdf 100644\n--- a/src/test/java/org/kohsuke/github/CommitTest.java\n+++ b/src/test/java/org/kohsuke/github/CommitTest.java\n\n@@ -25,44 +25,6 @@ public class CommitTest extends AbstractGitHubWireMockTest {\n         }\n     }\n \n-    @Test\n-    public void listPullRequests() throws Exception {\n-        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n-\n-        int[] prsToTest = { 909, 898, 893 };\n-\n-        for (Integer prNumber : prsToTest) {\n-            GHPullRequest pullRequest = repo.getPullRequest(prNumber);\n-\n-            GHCommit commit = repo\n-                    .getCommit(pullRequest.listCommits().toList().stream().findFirst().map(it -> it.sha).orElse(\"\"));\n-\n-            assertTrue(\"Pull request \" + pullRequest.number + \" not found by searching from commit.\",\n-                    commit.listPullRequests()\n-                            .toList()\n-                            .stream()\n-                            .findFirst()\n-                            .filter(it -> it.getNumber() == pullRequest.number)\n-                            .isPresent());\n-        }\n-    }\n-\n-    @Test\n-    public void listBranchesWhereHead() throws Exception {\n-        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n-\n-        GHBranch branch = repo.getBranch(\"master\");\n-        GHCommit commit = repo.getCommit(branch.getSHA1());\n-\n-        assertTrue(\"Commit which was supposed to be HEAD in the \" + branch.getName() + \" branch was not found.\",\n-                commit.listBranchesWhereHead()\n-                        .toList()\n-                        .stream()\n-                        .findFirst()\n-                        .filter(it -> it.getName().equals(branch.getName()))\n-                        .isPresent());\n-    }\n-\n     @Test // issue 737\n     public void commitSignatureVerification() throws Exception {\n         GHRepository repo = gitHub.getRepository(\"stapler/stapler\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5MjM3Mw==", "url": "https://github.com/hub4j/github-api/pull/922#discussion_r470092373", "bodyText": "Use assertThat methods instead.\nVerify the size the list that should be returned.", "author": "bitwiseman", "createdAt": "2020-08-13T16:55:39Z", "path": "src/test/java/org/kohsuke/github/CommitTest.java", "diffHunk": "@@ -25,6 +25,44 @@ public void listFiles() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void listPullRequests() throws Exception {\n+        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n+\n+        int[] prsToTest = { 909, 898, 893 };\n+\n+        for (Integer prNumber : prsToTest) {\n+            GHPullRequest pullRequest = repo.getPullRequest(prNumber);\n+\n+            GHCommit commit = repo\n+                    .getCommit(pullRequest.listCommits().toList().stream().findFirst().map(it -> it.sha).orElse(\"\"));\n+\n+            assertTrue(\"Pull request \" + pullRequest.number + \" not found by searching from commit.\",", "originalCommit": "70343c5eb8174a8090b347e43737704191adcecf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzMTYwOA==", "url": "https://github.com/hub4j/github-api/pull/922#discussion_r483231608", "bodyText": "Implemented the suggestions.", "author": "tginiotis-at-work", "createdAt": "2020-09-03T20:19:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5MjM3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "def2f0b37d4ea1e33fd0e80e4675749726985b21", "chunk": "diff --git a/src/test/java/org/kohsuke/github/CommitTest.java b/src/test/java/org/kohsuke/github/CommitTest.java\nindex 07a8b4078..6ed5f6cdf 100644\n--- a/src/test/java/org/kohsuke/github/CommitTest.java\n+++ b/src/test/java/org/kohsuke/github/CommitTest.java\n\n@@ -25,44 +25,6 @@ public class CommitTest extends AbstractGitHubWireMockTest {\n         }\n     }\n \n-    @Test\n-    public void listPullRequests() throws Exception {\n-        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n-\n-        int[] prsToTest = { 909, 898, 893 };\n-\n-        for (Integer prNumber : prsToTest) {\n-            GHPullRequest pullRequest = repo.getPullRequest(prNumber);\n-\n-            GHCommit commit = repo\n-                    .getCommit(pullRequest.listCommits().toList().stream().findFirst().map(it -> it.sha).orElse(\"\"));\n-\n-            assertTrue(\"Pull request \" + pullRequest.number + \" not found by searching from commit.\",\n-                    commit.listPullRequests()\n-                            .toList()\n-                            .stream()\n-                            .findFirst()\n-                            .filter(it -> it.getNumber() == pullRequest.number)\n-                            .isPresent());\n-        }\n-    }\n-\n-    @Test\n-    public void listBranchesWhereHead() throws Exception {\n-        GHRepository repo = gitHub.getRepository(\"hub4j/github-api\");\n-\n-        GHBranch branch = repo.getBranch(\"master\");\n-        GHCommit commit = repo.getCommit(branch.getSHA1());\n-\n-        assertTrue(\"Commit which was supposed to be HEAD in the \" + branch.getName() + \" branch was not found.\",\n-                commit.listBranchesWhereHead()\n-                        .toList()\n-                        .stream()\n-                        .findFirst()\n-                        .filter(it -> it.getName().equals(branch.getName()))\n-                        .isPresent());\n-    }\n-\n     @Test // issue 737\n     public void commitSignatureVerification() throws Exception {\n         GHRepository repo = gitHub.getRepository(\"stapler/stapler\");\n"}}, {"oid": "def2f0b37d4ea1e33fd0e80e4675749726985b21", "url": "https://github.com/hub4j/github-api/commit/def2f0b37d4ea1e33fd0e80e4675749726985b21", "message": "methods for listing PRs where the commit is head & listing branches which contain the commit", "committedDate": "2020-09-03T20:16:31Z", "type": "commit"}, {"oid": "8b2a3e1221bdd89e34d775e25b60f0d633dcfc90", "url": "https://github.com/hub4j/github-api/commit/8b2a3e1221bdd89e34d775e25b60f0d633dcfc90", "message": "add GHCommit tests", "committedDate": "2020-09-03T20:17:39Z", "type": "commit"}, {"oid": "8b2a3e1221bdd89e34d775e25b60f0d633dcfc90", "url": "https://github.com/hub4j/github-api/commit/8b2a3e1221bdd89e34d775e25b60f0d633dcfc90", "message": "add GHCommit tests", "committedDate": "2020-09-03T20:17:39Z", "type": "forcePushed"}]}