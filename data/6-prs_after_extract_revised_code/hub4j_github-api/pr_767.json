{"pr_number": 767, "pr_title": "Installation repository event", "pr_createdAt": "2020-04-01T09:40:10Z", "pr_url": "https://github.com/hub4j/github-api/pull/767", "timeline": [{"oid": "f919346f8fa73a074e59b8f2a44d88d903407631", "url": "https://github.com/hub4j/github-api/commit/f919346f8fa73a074e59b8f2a44d88d903407631", "message": "Add installation and installtion repositories event", "committedDate": "2020-04-01T08:08:21Z", "type": "commit"}, {"oid": "32ff315b6bb60aa4dd7b4f7d653622fe796a7e7a", "url": "https://github.com/hub4j/github-api/commit/32ff315b6bb60aa4dd7b4f7d653622fe796a7e7a", "message": "Resolve spotbugs and format code", "committedDate": "2020-04-01T08:58:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxODc0Mg==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r401518742", "bodyText": "Construct a new object to represent the repository since the payload only contains a small part of GHRepository; it would to safer to use. But not so sure where we should put it.", "author": "XiongKezhi", "createdAt": "2020-04-01T10:37:01Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -207,6 +208,164 @@ void wrapUp(GitHub root) {\n         }\n     }\n \n+    /**\n+     * Represents a repository object specifically for {@link Installation} and {@link InstallationRepositories}.\n+     */\n+    @SuppressFBWarnings(value = { \"UWF_UNWRITTEN_FIELD\" }, justification = \"JSON API\")\n+    public static class InstallationRepository {", "originalCommit": "32ff315b6bb60aa4dd7b4f7d653622fe796a7e7a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1Njk1Mw==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r401756953", "bodyText": "@XiongKezhi\nThe pattern has been to reuse existing classes.  Then there are two options:\n\neagerly populate()/refresh() all the items during wrapup()/lateBind() - this results in a multiple api requests up front but returns stable fully populated objects\nonly populate()/refresh() each item when user requests data that is missing from partial - can save a ton of requests but adds complexity to target class (missing fields need to be guarded with checks for partial state.\n\nIn this case, the partial is so thin you should probably go with option 1.", "author": "bitwiseman", "createdAt": "2020-04-01T16:42:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4MjUwNA==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r401882504", "bodyText": "@XiongKezhi\nHm, but is it possible to get an event for a Repository what the repository is private and can't be populated using the current credentials?", "author": "bitwiseman", "createdAt": "2020-04-01T20:15:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxODc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1ODY5MA==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r402758690", "bodyText": "@XiongKezhi\nHm, but is it possible to get an event for a Repository what the repository is private and can't be populated using the current credentials?\n\nThe repository installation events will be sent to the APP with at least metadata read-only permission to that repository, so shouldn't it be the users' responsibility if they use a client without the proper credentials instead of a client with the APP's JWT token?", "author": "XiongKezhi", "createdAt": "2020-04-03T06:19:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUxODc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHEventPayload.java b/src/main/java/org/kohsuke/github/GHEventPayload.java\nindex 82d5762f3..dba232d7b 100644\n--- a/src/main/java/org/kohsuke/github/GHEventPayload.java\n+++ b/src/main/java/org/kohsuke/github/GHEventPayload.java\n\n@@ -275,7 +277,7 @@ public abstract class GHEventPayload {\n     public static class Installation extends GHEventPayload {\n         private String action;\n         private GHAppInstallation installation;\n-        private List<InstallationRepository> repositories;\n+        private List<GHRepository> repositories;\n \n         /**\n          * Gets action\n"}}, {"oid": "7fc68f29695ce793c92109025432c67793a4e83c", "url": "https://github.com/hub4j/github-api/commit/7fc68f29695ce793c92109025432c67793a4e83c", "message": "Merge branch 'master' into installation-repository-event", "committedDate": "2020-04-01T19:29:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4MzAxOQ==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r401883019", "bodyText": "@XiongKezhi  You'll want to add an override for wrapUp(root) to bind GHAppInstallation", "author": "bitwiseman", "createdAt": "2020-04-01T20:16:26Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -207,6 +208,164 @@ void wrapUp(GitHub root) {\n         }\n     }\n \n+    /**\n+     * Represents a repository object specifically for {@link Installation} and {@link InstallationRepositories}.\n+     */\n+    @SuppressFBWarnings(value = { \"UWF_UNWRITTEN_FIELD\" }, justification = \"JSON API\")\n+    public static class InstallationRepository {\n+        private long id;\n+        private String nodeId;\n+        private String name;\n+        private String fullName;\n+        @JsonProperty(\"private\")\n+        private boolean _private;\n+\n+        /**\n+         * Gets id\n+         *\n+         * @return the id\n+         */\n+        public long getId() {\n+            return id;\n+        }\n+\n+        /**\n+         * Gets node id\n+         *\n+         * @return the node id\n+         */\n+        public String getNodeId() {\n+            return nodeId;\n+        }\n+\n+        /**\n+         * Gets name\n+         *\n+         * @return the name\n+         */\n+        public String getName() {\n+            return name;\n+        }\n+\n+        /**\n+         * Gets full name\n+         *\n+         * @return the full name\n+         */\n+        public String getFullName() {\n+            return fullName;\n+        }\n+\n+        /**\n+         * Is private boolean.\n+         *\n+         * @return the boolean\n+         */\n+        public boolean isPrivate() {\n+            return _private;\n+        }\n+    }\n+\n+    /**\n+     * An installation has been installed, uninstalled, or its permissions have been changed.\n+     *\n+     * @see <a href=\"https://developer.github.com/v3/activity/events/types/#installationevent\">authoritative source</a>\n+     */\n+    @SuppressFBWarnings(value = { \"UWF_UNWRITTEN_FIELD\" }, justification = \"JSON API\")\n+    public static class Installation extends GHEventPayload {\n+        private String action;\n+        private GHAppInstallation installation;\n+        private List<InstallationRepository> repositories;\n+\n+        /**\n+         * Gets action\n+         *\n+         * @return the action\n+         */\n+        public String getAction() {\n+            return action;\n+        }\n+\n+        /**\n+         * Gets installation\n+         *\n+         * @return the installation\n+         */\n+        public GHAppInstallation getInstallation() {\n+            return installation;\n+        }\n+\n+        /**\n+         * Gets repositories\n+         *\n+         * @return the repositories\n+         */\n+        public List<InstallationRepository> getRepositories() {\n+            return repositories;\n+        };\n+    }", "originalCommit": "7fc68f29695ce793c92109025432c67793a4e83c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHEventPayload.java b/src/main/java/org/kohsuke/github/GHEventPayload.java\nindex 82d5762f3..dba232d7b 100644\n--- a/src/main/java/org/kohsuke/github/GHEventPayload.java\n+++ b/src/main/java/org/kohsuke/github/GHEventPayload.java\n\n@@ -275,7 +277,7 @@ public abstract class GHEventPayload {\n     public static class Installation extends GHEventPayload {\n         private String action;\n         private GHAppInstallation installation;\n-        private List<InstallationRepository> repositories;\n+        private List<GHRepository> repositories;\n \n         /**\n          * Gets action\n"}}, {"oid": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "url": "https://github.com/hub4j/github-api/commit/4ff0870df865b3cfed4764c0da57461bebd95e3d", "message": "Refresh repositories while warp up installation event", "committedDate": "2020-04-04T14:30:05Z", "type": "commit"}, {"oid": "ed85d06d697a59b7053eb86d7d808e5f04ca7078", "url": "https://github.com/hub4j/github-api/commit/ed85d06d697a59b7053eb86d7d808e5f04ca7078", "message": "Merge branch 'master' into installation-repository-event", "committedDate": "2020-04-04T14:33:18Z", "type": "commit"}, {"oid": "263de140c5503388dbd33c5c0ac5026adb8fb2be", "url": "https://github.com/hub4j/github-api/commit/263de140c5503388dbd33c5c0ac5026adb8fb2be", "message": "Removed InstallationRepository", "committedDate": "2020-04-04T14:49:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDg1NA==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r403644854", "bodyText": "For now let's make this package private and call it populate:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void refresh() throws IOException {\n          \n          \n            \n                void populate() throws IOException {", "author": "bitwiseman", "createdAt": "2020-04-05T03:49:52Z", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2792,4 +2792,17 @@ public GHTagObject createTag(String tag, String message, String object, String t\n                 .fetch(GHTagObject.class)\n                 .wrap(this);\n     }\n+\n+    /**\n+     * Repopulates this object.\n+     *\n+     * @throws java.io.IOException\n+     *             The IO exception\n+     */\n+    public void refresh() throws IOException {", "originalCommit": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "955690b124bcb0b05594200049a96f27b96ee63d", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHRepository.java b/src/main/java/org/kohsuke/github/GHRepository.java\nindex d65304f85..c75ea85ed 100644\n--- a/src/main/java/org/kohsuke/github/GHRepository.java\n+++ b/src/main/java/org/kohsuke/github/GHRepository.java\n\n@@ -2794,12 +2803,12 @@ public class GHRepository extends GHObject {\n     }\n \n     /**\n-     * Repopulates this object.\n+     * Populate this object.\n      *\n      * @throws java.io.IOException\n      *             The IO exception\n      */\n-    public void refresh() throws IOException {\n+    void populate() throws IOException {\n         if (root.isOffline())\n             return; // can't populate if the root is offline\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDkxMg==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r403644912", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    singleRepo.refresh();\n          \n          \n            \n                                    singleRepo.populate();", "author": "bitwiseman", "createdAt": "2020-04-05T03:50:23Z", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -300,9 +302,30 @@ public GHAppInstallation getInstallation() {\n          *\n          * @return the repositories\n          */\n-        public List<InstallationRepository> getRepositories() {\n+        public List<GHRepository> getRepositories() {\n             return repositories;\n         };\n+\n+        @Override\n+        void wrapUp(GitHub root) {\n+            super.wrapUp(root);\n+            if (installation == null)\n+                throw new IllegalStateException(\n+                        \"Expected check_suite payload, but got something else. Maybe we've got another type of event?\");\n+            else\n+                installation.wrapUp(root);\n+\n+            if (repositories != null && !repositories.isEmpty()) {\n+                try {\n+                    for (GHRepository singleRepo : repositories) { // warp each of the repository\n+                        singleRepo.wrap(root);\n+                        singleRepo.refresh();", "originalCommit": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "955690b124bcb0b05594200049a96f27b96ee63d", "chunk": "diff --git a/src/main/java/org/kohsuke/github/GHEventPayload.java b/src/main/java/org/kohsuke/github/GHEventPayload.java\nindex dba232d7b..b522f24ad 100644\n--- a/src/main/java/org/kohsuke/github/GHEventPayload.java\n+++ b/src/main/java/org/kohsuke/github/GHEventPayload.java\n\n@@ -319,7 +259,7 @@ public abstract class GHEventPayload {\n                 try {\n                     for (GHRepository singleRepo : repositories) { // warp each of the repository\n                         singleRepo.wrap(root);\n-                        singleRepo.refresh();\n+                        singleRepo.populate();\n                     }\n                 } catch (IOException e) {\n                     throw new GHException(\"Failed to refresh repositories\", e);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDk0MA==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r403644940", "bodyText": "Why remove these?", "author": "bitwiseman", "createdAt": "2020-04-05T03:50:55Z", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -405,7 +405,6 @@ public void InstallationRepositoriesEvent() throws Exception {\n         assertThat(event.getRepositorySelection(), is(\"selected\"));\n \n         assertThat(event.getRepositoriesAdded().get(0).getId(), is(186853007L));\n-        assertThat(event.getRepositoriesAdded().get(0).getNodeId(), is(\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDc=\"));", "originalCommit": "4ff0870df865b3cfed4764c0da57461bebd95e3d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4NjU5OQ==", "url": "https://github.com/hub4j/github-api/pull/767#discussion_r403686599", "bodyText": "The previous GHRepository didn't have node_id property. Now I added it.", "author": "XiongKezhi", "createdAt": "2020-04-05T11:14:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0NDk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "955690b124bcb0b05594200049a96f27b96ee63d", "chunk": "diff --git a/src/test/java/org/kohsuke/github/GHEventPayloadTest.java b/src/test/java/org/kohsuke/github/GHEventPayloadTest.java\nindex 84cda6a36..3194dc3b2 100644\n--- a/src/test/java/org/kohsuke/github/GHEventPayloadTest.java\n+++ b/src/test/java/org/kohsuke/github/GHEventPayloadTest.java\n\n@@ -405,6 +405,7 @@ public class GHEventPayloadTest {\n         assertThat(event.getRepositorySelection(), is(\"selected\"));\n \n         assertThat(event.getRepositoriesAdded().get(0).getId(), is(186853007L));\n+        assertThat(event.getRepositoriesAdded().get(0).getNodeId(), is(\"MDEwOlJlcG9zaXRvcnkxODY4NTMwMDc=\"));\n         assertThat(event.getRepositoriesAdded().get(0).getName(), is(\"Space\"));\n         assertThat(event.getRepositoriesAdded().get(0).getFullName(), is(\"Codertocat/Space\"));\n         assertThat(event.getRepositoriesAdded().get(0).isPrivate(), is(false));\n"}}, {"oid": "955690b124bcb0b05594200049a96f27b96ee63d", "url": "https://github.com/hub4j/github-api/commit/955690b124bcb0b05594200049a96f27b96ee63d", "message": "Rename refreash to populate and add node_id for GHRepository", "committedDate": "2020-04-05T11:09:02Z", "type": "commit"}]}