{"pr_number": 876, "pr_title": "Add minimal symlink support via GHContent.getTarget()", "pr_createdAt": "2020-07-02T16:20:17Z", "pr_url": "https://github.com/hub4j/github-api/pull/876", "timeline": [{"oid": "44b72ed647a1dbd8ffbb7b61e6e091fb0212d308", "url": "https://github.com/hub4j/github-api/commit/44b72ed647a1dbd8ffbb7b61e6e091fb0212d308", "message": "Add initial symlink support.\n\nthis adds rudimentary symlink support (just enough to get a symlink).\n\nstill todo, howto handle GHRepository.getFileContent where the path\ncontains a symlink within the repository", "committedDate": "2020-07-02T16:18:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDU2Nw==", "url": "https://github.com/hub4j/github-api/pull/876#discussion_r449274567", "bodyText": "There are ways to do this but they are inefficient/costly.", "author": "bitwiseman", "createdAt": "2020-07-02T21:29:42Z", "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -170,4 +171,25 @@ public void testGetFileContentWithNonAsciiPath() throws Exception {\n         final GHContent fileContent2 = repo.getFileContent(fileContent.getPath());\n         assertThat(IOUtils.readLines(fileContent2.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n     }\n+\n+    @Test\n+    public void testGetFileContentWithSymlink() throws Exception {\n+        final GHRepository repo = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\");\n+\n+        final GHContent fileContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-file\");\n+        // for whatever reason GH says this is a file :-o\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"thanks for reading me\\n\"));\n+\n+        final GHContent dirContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir\");\n+        // but symlinks to directories are symlinks!\n+        assertThat(dirContent, allOf(hasProperty(\"target\", is(\"a-dir-with-3-entries\")),\n+                                     hasProperty(\"type\", is(\"symlink\"))));\n+        \n+        // TODO somehow\n+        /*\n+        final GHContent fileContent2 = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir/entry-one\");\n+        // this needs special handling and will 404 from GitHub\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"\"));\n+        */", "originalCommit": "44b72ed647a1dbd8ffbb7b61e6e091fb0212d308", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwMDU2NA==", "url": "https://github.com/hub4j/github-api/pull/876#discussion_r449500564", "bodyText": "agreed,  the API does not seem to support this, so given this is a mapping of the API to java I am not sure we should either.\nThat said, I was looking for this in order to solve https://issues.jenkins-ci.org/browse/JENKINS-62922 and if someone wants to acheive this I am not sure that making all users of the API handle it themselves is the correct approach.", "author": "jtnord", "createdAt": "2020-07-03T10:07:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDU2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "0d3ba9d7f0f9119b61ab2b1dd6888f3f67f1bb5f", "chunk": "diff --git a/src/test/java/org/kohsuke/github/GHContentIntegrationTest.java b/src/test/java/org/kohsuke/github/GHContentIntegrationTest.java\nindex c8de921d8..dd11e90ec 100644\n--- a/src/test/java/org/kohsuke/github/GHContentIntegrationTest.java\n+++ b/src/test/java/org/kohsuke/github/GHContentIntegrationTest.java\n\n@@ -182,14 +182,13 @@ public class GHContentIntegrationTest extends AbstractGitHubWireMockTest {\n \n         final GHContent dirContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir\");\n         // but symlinks to directories are symlinks!\n-        assertThat(dirContent, allOf(hasProperty(\"target\", is(\"a-dir-with-3-entries\")),\n-                                     hasProperty(\"type\", is(\"symlink\"))));\n-        \n-        // TODO somehow\n-        /*\n-        final GHContent fileContent2 = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir/entry-one\");\n+        assertThat(dirContent,\n+                allOf(hasProperty(\"target\", is(\"a-dir-with-3-entries\")), hasProperty(\"type\", is(\"symlink\"))));\n+\n+        // future somehow...\n+\n+        // final GHContent fileContent2 = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir/entry-one\");\n         // this needs special handling and will 404 from GitHub\n-        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"\"));\n-        */\n+        // assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"\"));\n     }\n }\n"}}, {"oid": "0d3ba9d7f0f9119b61ab2b1dd6888f3f67f1bb5f", "url": "https://github.com/hub4j/github-api/commit/0d3ba9d7f0f9119b61ab2b1dd6888f3f67f1bb5f", "message": "formatting fixes", "committedDate": "2020-07-07T12:29:33Z", "type": "commit"}, {"oid": "a284eca147d584169135c2080e0283cf15eb7900", "url": "https://github.com/hub4j/github-api/commit/a284eca147d584169135c2080e0283cf15eb7900", "message": "Shorten file paths for windows", "committedDate": "2020-07-07T16:48:31Z", "type": "commit"}, {"oid": "cacc3e6edd895e15400042366e6f19bc0ac17eee", "url": "https://github.com/hub4j/github-api/commit/cacc3e6edd895e15400042366e6f19bc0ac17eee", "message": "Update formatter cache directory", "committedDate": "2020-07-07T17:15:00Z", "type": "commit"}, {"oid": "147e8d5d1204e514467e1124eb30d11630cb4d97", "url": "https://github.com/hub4j/github-api/commit/147e8d5d1204e514467e1124eb30d11630cb4d97", "message": "Merge branch 'master' into symlink-support", "committedDate": "2020-07-07T18:38:14Z", "type": "commit"}]}