{"pr_number": 9742, "pr_title": "MULE-19005: XML SDK: extension model doesn't have the error models set", "pr_createdAt": "2020-11-17T22:08:25Z", "pr_url": "https://github.com/mulesoft/mule/pull/9742", "timeline": [{"oid": "1e1fefba47c85b0038cc6c398e89810875ac563f", "url": "https://github.com/mulesoft/mule/commit/1e1fefba47c85b0038cc6c398e89810875ac563f", "message": "MULE-19005: XML SDK: extension model doesn't have the error models set", "committedDate": "2020-11-17T21:52:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2MTA5NA==", "url": "https://github.com/mulesoft/mule/pull/9742#discussion_r526061094", "bodyText": "duplicated \";\"", "author": "mlischetti", "createdAt": "2020-11-18T12:49:57Z", "path": "modules/extensions-xml-support/src/main/java/org/mule/runtime/extension/internal/loader/XmlExtensionLoaderDelegate.java", "diffHunk": "@@ -1106,28 +1114,65 @@ private MetadataType extractType(String receivedType) {\n     return metadataType.get();\n   }\n \n-  private void declareErrorModels(OperationDeclarer operationDeclarer, XmlDslModel xmlDslModel, String operationName,\n+  private void declareErrorModels(Optional<ExtensionDeclarer> extensionDeclarer,\n+                                  OperationDeclarer operationDeclarer, XmlDslModel xmlDslModel, String operationName,\n                                   ComponentAst operationModel) {\n-    Optional<ComponentAst> optionalParametersComponentModel = operationModel.directChildrenStream()\n+    Optional<ComponentAst> optionalErrorsComponentModel = operationModel.directChildrenStream()\n         .filter(child -> child.getIdentifier().equals(OPERATION_ERRORS_IDENTIFIER)).findAny();\n-    optionalParametersComponentModel.ifPresent(componentModel -> componentModel.directChildrenStream()\n+    optionalErrorsComponentModel.ifPresent(componentModel -> componentModel.directChildrenStream()\n         .filter(child -> child.getIdentifier().equals(OPERATION_ERROR_IDENTIFIER))\n         .forEach(param -> {\n           final String namespace = xmlDslModel.getPrefix().toUpperCase();\n-          param.getRawParameterValue(ERROR_TYPE_ATTRIBUTE)\n-              .map(tn -> {\n-                if (tn.contains(NAMESPACE_SEPARATOR)) {\n-                  throw new IllegalModelDefinitionException(format(\"The operation [%s] cannot have an <error> [%s] that contains a reserved character [%s]\",\n-                                                                   operationName, tn,\n-                                                                   NAMESPACE_SEPARATOR));\n-                }\n-                return operationDeclarer.withErrorModel(ErrorModelBuilder.newError(tn, namespace)\n-                    .withParent(ErrorModelBuilder.newError(ANY).build())\n-                    .build());\n-              })\n-              .orElseThrow(() -> new IllegalModelDefinitionException(format(\"The operation [%s] cannot have an <error> with an empty 'type' attribute\",\n-                                                                            operationName)));\n+          final String errorType = (String) param.getParameter(ERROR_TYPE_ATTRIBUTE).getValue().getRight();;", "originalCommit": "1e1fefba47c85b0038cc6c398e89810875ac563f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a10f1b9c516e3da7145774fc457a1dc236f52135", "chunk": "diff --git a/modules/extensions-xml-support/src/main/java/org/mule/runtime/extension/internal/loader/XmlExtensionLoaderDelegate.java b/modules/extensions-xml-support/src/main/java/org/mule/runtime/extension/internal/loader/XmlExtensionLoaderDelegate.java\nindex dc6f42d04c5..f149f94f913 100644\n--- a/modules/extensions-xml-support/src/main/java/org/mule/runtime/extension/internal/loader/XmlExtensionLoaderDelegate.java\n+++ b/modules/extensions-xml-support/src/main/java/org/mule/runtime/extension/internal/loader/XmlExtensionLoaderDelegate.java\n\n@@ -1123,7 +1123,7 @@ public final class XmlExtensionLoaderDelegate {\n         .filter(child -> child.getIdentifier().equals(OPERATION_ERROR_IDENTIFIER))\n         .forEach(param -> {\n           final String namespace = xmlDslModel.getPrefix().toUpperCase();\n-          final String errorType = (String) param.getParameter(ERROR_TYPE_ATTRIBUTE).getValue().getRight();;\n+          final String errorType = (String) param.getParameter(ERROR_TYPE_ATTRIBUTE).getValue().getRight();\n \n           if (errorType.contains(NAMESPACE_SEPARATOR)) {\n             throw new IllegalModelDefinitionException(format(\"The operation [%s] cannot have an <error> [%s] that contains a reserved character [%s]\",\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA2MjcyNw==", "url": "https://github.com/mulesoft/mule/pull/9742#discussion_r526062727", "bodyText": "use static import", "author": "mlischetti", "createdAt": "2020-11-18T12:52:43Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/EnrichedErrorMappingsFactoryBean.java", "diffHunk": "@@ -21,11 +23,18 @@\n import org.mule.runtime.core.internal.exception.EnrichedErrorMapping;\n import org.mule.runtime.dsl.api.component.AbstractComponentFactory;\n \n+import java.util.Optional;\n+\n import javax.inject.Inject;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n \n public class EnrichedErrorMappingsFactoryBean extends AbstractComponentFactory<EnrichedErrorMapping> {\n \n+  private static final Logger LOGGER = LoggerFactory.getLogger(EnrichedErrorMappingsFactoryBean.class);", "originalCommit": "1e1fefba47c85b0038cc6c398e89810875ac563f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a10f1b9c516e3da7145774fc457a1dc236f52135", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/EnrichedErrorMappingsFactoryBean.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/EnrichedErrorMappingsFactoryBean.java\nindex fffa2c296d4..4b3c37858c4 100644\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/EnrichedErrorMappingsFactoryBean.java\n+++ b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/EnrichedErrorMappingsFactoryBean.java\n\n@@ -28,12 +29,11 @@ import java.util.Optional;\n import javax.inject.Inject;\n \n import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n \n \n public class EnrichedErrorMappingsFactoryBean extends AbstractComponentFactory<EnrichedErrorMapping> {\n \n-  private static final Logger LOGGER = LoggerFactory.getLogger(EnrichedErrorMappingsFactoryBean.class);\n+  private static final Logger LOGGER = getLogger(EnrichedErrorMappingsFactoryBean.class);\n \n   public static final String CORE_ERROR_NS = CORE_PREFIX.toUpperCase();\n \n"}}, {"oid": "a10f1b9c516e3da7145774fc457a1dc236f52135", "url": "https://github.com/mulesoft/mule/commit/a10f1b9c516e3da7145774fc457a1dc236f52135", "message": "review", "committedDate": "2020-11-18T13:11:34Z", "type": "commit"}]}