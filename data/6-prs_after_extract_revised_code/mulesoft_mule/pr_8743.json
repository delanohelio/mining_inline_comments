{"pr_number": 8743, "pr_title": "MULE-18203: Memory leak on FlowProcessMEdiator error handling", "pr_createdAt": "2020-03-19T13:23:52Z", "pr_url": "https://github.com/mulesoft/mule/pull/8743", "timeline": [{"oid": "1dbc4b4fa9b257ea304d0c7ab93e9664492a7397", "url": "https://github.com/mulesoft/mule/commit/1dbc4b4fa9b257ea304d0c7ab93e9664492a7397", "message": "MULE-XXXXX: Memory leak on FlowProcessMEdiator error handling", "committedDate": "2020-03-19T13:22:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA5Nzc2Mg==", "url": "https://github.com/mulesoft/mule/pull/8743#discussion_r395097762", "bodyText": "remove", "author": "marianogonzalez", "createdAt": "2020-03-19T15:07:22Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/execution/FlowProcessMediatorTestCase.java", "diffHunk": "@@ -161,8 +163,8 @@ public void before() throws Exception {\n         .thenReturn(flowErrorHandlerRouter);\n \n     when(((AbstractFlowConstruct) flow).getExceptionListener()).thenReturn(exceptionHandler);\n-    when(exceptionHandler.apply(any()))\n-        .thenAnswer(invocationOnMock -> error((MessagingException) invocationOnMock.getArgument(0)));\n+    // when(exceptionHandler.apply(any()))", "originalCommit": "1dbc4b4fa9b257ea304d0c7ab93e9664492a7397", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c40524f9e14be87dac82850f5cb5510e56e73cca", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/execution/FlowProcessMediatorTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/execution/FlowProcessMediatorTestCase.java\nindex 92aa4974bd0..204b28b8d93 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/execution/FlowProcessMediatorTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/execution/FlowProcessMediatorTestCase.java\n\n@@ -163,8 +163,6 @@ public class FlowProcessMediatorTestCase extends AbstractMuleContextTestCase {\n         .thenReturn(flowErrorHandlerRouter);\n \n     when(((AbstractFlowConstruct) flow).getExceptionListener()).thenReturn(exceptionHandler);\n-    // when(exceptionHandler.apply(any()))\n-    // .thenAnswer(invocationOnMock -> error((MessagingException) invocationOnMock.getArgument(0)));\n     when(flow.getMuleContext()).thenReturn(muleContext);\n \n     context = mock(MessageProcessContext.class);\n"}}, {"oid": "c40524f9e14be87dac82850f5cb5510e56e73cca", "url": "https://github.com/mulesoft/mule/commit/c40524f9e14be87dac82850f5cb5510e56e73cca", "message": "review", "committedDate": "2020-03-19T15:09:33Z", "type": "commit"}, {"oid": "7ebcb7a0aee489f84ff77fd40d5f0563f0ebd358", "url": "https://github.com/mulesoft/mule/commit/7ebcb7a0aee489f84ff77fd40d5f0563f0ebd358", "message": "more review", "committedDate": "2020-03-19T15:23:49Z", "type": "commit"}]}