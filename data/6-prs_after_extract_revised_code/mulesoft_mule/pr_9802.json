{"pr_number": 9802, "pr_title": "MULE-18873: Scatter-Gather routes are dropping events during Flow-Ref processing", "pr_createdAt": "2020-11-27T17:52:45Z", "pr_url": "https://github.com/mulesoft/mule/pull/9802", "timeline": [{"oid": "1e7b3b436612c9ca15ee236d4e14cc042fa93217", "url": "https://github.com/mulesoft/mule/commit/1e7b3b436612c9ca15ee236d4e14cc042fa93217", "message": "MULE-18873: Temporary change in order to look for the existence of a test", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "063490bc2987b114912c5d0e7f89eae9cdd8a0d7", "url": "https://github.com/mulesoft/mule/commit/063490bc2987b114912c5d0e7f89eae9cdd8a0d7", "message": "Trying to fix using subscriberContext (not sure about \"main\" flow also switching to non scheduled completion)", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "9ce8adbde9fe3a48e95e9fe7e690c43d07c9e847", "url": "https://github.com/mulesoft/mule/commit/9ce8adbde9fe3a48e95e9fe7e690c43d07c9e847", "message": "MULE-18873: Per suscriber logic in order to prevent event drops when Mono instances are present in the upstream", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "579d96f10feea907cbdd3b6091e01ae62dc58e62", "url": "https://github.com/mulesoft/mule/commit/579d96f10feea907cbdd3b6091e01ae62dc58e62", "message": "MULE-18873: Fixing an issue: Downstream was not completed if a BaseEventContext.success() was called in response of a Mono emmitting the event", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "752a643b20f8a50e0b034fa86f9d7a24f5b0ca20", "url": "https://github.com/mulesoft/mule/commit/752a643b20f8a50e0b034fa86f9d7a24f5b0ca20", "message": "MULE-18873: Fixing error in chain build", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "d9863677b3fddac635a0b955b019f626aa8c08b9", "url": "https://github.com/mulesoft/mule/commit/d9863677b3fddac635a0b955b019f626aa8c08b9", "message": "MULE-18873: Reverting unwanted modifications", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "97b673323378cdaf3371f4475ff596f2c870890d", "url": "https://github.com/mulesoft/mule/commit/97b673323378cdaf3371f4475ff596f2c870890d", "message": "MULE-18873: Removing unwanted modifications", "committedDate": "2020-11-27T17:39:16Z", "type": "commit"}, {"oid": "061c97654598eb218064688631f332568a2e2e5e", "url": "https://github.com/mulesoft/mule/commit/061c97654598eb218064688631f332568a2e2e5e", "message": "MULE-18873: Removing unwanted modifications", "committedDate": "2020-11-27T17:51:42Z", "type": "commit"}, {"oid": "893f226b167505b054f466c1eebb59372afbc8d4", "url": "https://github.com/mulesoft/mule/commit/893f226b167505b054f466c1eebb59372afbc8d4", "message": "MULE-18873", "committedDate": "2020-12-01T18:33:38Z", "type": "commit"}, {"oid": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "url": "https://github.com/mulesoft/mule/commit/43b7516b5fbd2c6b8f865dd88bed10d143f87473", "message": "MULE-18873: Removing unused imports", "committedDate": "2020-12-02T14:10:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MTA2NA==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534371064", "bodyText": "static import", "author": "eze210", "createdAt": "2020-12-02T17:59:44Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java", "diffHunk": "@@ -147,6 +157,11 @@ protected AbstractFlowConstruct getStoppedFlowConstruct() throws Exception {\n     return stoppedFlow;\n   }\n \n+  @Before\n+  public void before() {\n+    executor = Executors.newSingleThreadExecutor();", "originalCommit": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\nindex 8d221fed809..0a409eb1e42 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n\n@@ -157,11 +151,6 @@ public class DefaultFlowTestCase extends AbstractFlowConstructTestCase {\n     return stoppedFlow;\n   }\n \n-  @Before\n-  public void before() {\n-    executor = Executors.newSingleThreadExecutor();\n-  }\n-\n   @After\n   public void after() throws MuleException {\n     if (flow.isStarted()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MjE1MQ==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534372151", "bodyText": "remove extra blanks", "author": "eze210", "createdAt": "2020-12-02T18:01:22Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java", "diffHunk": "@@ -503,7 +520,30 @@ public void doNotExecuteOnErrorContinueDefinedOutsideTheFlow() throws MuleExcept\n     assertThat(nonExpectedError.get(), is(false));\n   }\n \n-  private void startFlow() throws InitialisationException, MuleException {\n+  @Test\n+  @Issue(\"MULE-18873\")\n+  public void flowInsideProcessWithChildContextMustNotDropEvents()\n+      throws MuleException, ExecutionException, InterruptedException {\n+    CoreEvent testEvent = testEvent();\n+    flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n+        .source(flow.getSource())\n+        .processors(singletonList(new BlockMessageProcessor()))\n+        .processingStrategyFactory(new ProactorStreamEmitterProcessingStrategyFactory())\n+        .build();\n+    startFlow();\n+    Flux<CoreEvent> flowProcessing = Flux\n+        .from(MessageProcessors.processWithChildContext(testEvent, flow, Optional.of(from(FLOW_NAME))));\n+    Future validation = executor.submit(() -> StepVerifier.create(flowProcessing)\n+        .expectNext(testEvent)\n+        .expectComplete()\n+        .verifyThenAssertThat()\n+        .hasNotDroppedElements());\n+    validation.get();\n+  }\n+", "originalCommit": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\nindex 8d221fed809..0a409eb1e42 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n\n@@ -523,7 +510,7 @@ public class DefaultFlowTestCase extends AbstractFlowConstructTestCase {\n   @Test\n   @Issue(\"MULE-18873\")\n   public void flowInsideProcessWithChildContextMustNotDropEvents()\n-      throws MuleException, ExecutionException, InterruptedException {\n+      throws MuleException {\n     CoreEvent testEvent = testEvent();\n     flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n         .source(flow.getSource())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3Mjc2Mg==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534372762", "bodyText": "Isn't it possible to use a Latch?", "author": "eze210", "createdAt": "2020-12-02T18:02:22Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java", "diffHunk": "@@ -524,4 +564,18 @@ public CoreEvent process(CoreEvent event) throws MuleException {\n           });\n     }\n   }\n+\n+  public static class BlockMessageProcessor extends AbstractComponent implements Processor {\n+\n+    @Override\n+    public CoreEvent process(CoreEvent event) throws MuleException {\n+      return sleepFor(event, muleContext.getConfiguration().getShutdownTimeout() * 2);", "originalCommit": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxODc2Mw==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534518763", "bodyText": "Discussed offline, but short answer is that a latch has no use for this test case (we just couldn't know when such latch should be released)", "author": "IvanAndresFritzler", "createdAt": "2020-12-02T22:16:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3Mjc2Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MzY5Nw==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534373697", "bodyText": "static import", "author": "eze210", "createdAt": "2020-12-02T18:03:57Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java", "diffHunk": "@@ -503,7 +520,30 @@ public void doNotExecuteOnErrorContinueDefinedOutsideTheFlow() throws MuleExcept\n     assertThat(nonExpectedError.get(), is(false));\n   }\n \n-  private void startFlow() throws InitialisationException, MuleException {\n+  @Test\n+  @Issue(\"MULE-18873\")\n+  public void flowInsideProcessWithChildContextMustNotDropEvents()\n+      throws MuleException, ExecutionException, InterruptedException {\n+    CoreEvent testEvent = testEvent();\n+    flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n+        .source(flow.getSource())\n+        .processors(singletonList(new BlockMessageProcessor()))\n+        .processingStrategyFactory(new ProactorStreamEmitterProcessingStrategyFactory())\n+        .build();\n+    startFlow();\n+    Flux<CoreEvent> flowProcessing = Flux\n+        .from(MessageProcessors.processWithChildContext(testEvent, flow, Optional.of(from(FLOW_NAME))));", "originalCommit": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\nindex 8d221fed809..0a409eb1e42 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n\n@@ -523,7 +510,7 @@ public class DefaultFlowTestCase extends AbstractFlowConstructTestCase {\n   @Test\n   @Issue(\"MULE-18873\")\n   public void flowInsideProcessWithChildContextMustNotDropEvents()\n-      throws MuleException, ExecutionException, InterruptedException {\n+      throws MuleException {\n     CoreEvent testEvent = testEvent();\n     flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n         .source(flow.getSource())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3NDg3OQ==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534374879", "bodyText": "Is the executor needed? What do you think about directly this?\nStepVerifier.create(flowProcessing)\n        .expectNext(testEvent)\n        .expectComplete()\n        .verifyThenAssertThat()\n        .hasNotDroppedElements();", "author": "eze210", "createdAt": "2020-12-02T18:05:51Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java", "diffHunk": "@@ -503,7 +520,30 @@ public void doNotExecuteOnErrorContinueDefinedOutsideTheFlow() throws MuleExcept\n     assertThat(nonExpectedError.get(), is(false));\n   }\n \n-  private void startFlow() throws InitialisationException, MuleException {\n+  @Test\n+  @Issue(\"MULE-18873\")\n+  public void flowInsideProcessWithChildContextMustNotDropEvents()\n+      throws MuleException, ExecutionException, InterruptedException {\n+    CoreEvent testEvent = testEvent();\n+    flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n+        .source(flow.getSource())\n+        .processors(singletonList(new BlockMessageProcessor()))\n+        .processingStrategyFactory(new ProactorStreamEmitterProcessingStrategyFactory())\n+        .build();\n+    startFlow();\n+    Flux<CoreEvent> flowProcessing = Flux\n+        .from(MessageProcessors.processWithChildContext(testEvent, flow, Optional.of(from(FLOW_NAME))));\n+    Future validation = executor.submit(() -> StepVerifier.create(flowProcessing)", "originalCommit": "43b7516b5fbd2c6b8f865dd88bed10d143f87473", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTYzMA==", "url": "https://github.com/mulesoft/mule/pull/9802#discussion_r534519630", "bodyText": "No needed at all (was a residue of trying to see if a latch could be used)", "author": "IvanAndresFritzler", "createdAt": "2020-12-02T22:18:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3NDg3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\nindex 8d221fed809..0a409eb1e42 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/construct/DefaultFlowTestCase.java\n\n@@ -523,7 +510,7 @@ public class DefaultFlowTestCase extends AbstractFlowConstructTestCase {\n   @Test\n   @Issue(\"MULE-18873\")\n   public void flowInsideProcessWithChildContextMustNotDropEvents()\n-      throws MuleException, ExecutionException, InterruptedException {\n+      throws MuleException {\n     CoreEvent testEvent = testEvent();\n     flow = (DefaultFlow) Flow.builder(FLOW_NAME, muleContext)\n         .source(flow.getSource())\n"}}, {"oid": "84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "url": "https://github.com/mulesoft/mule/commit/84b6ccc99eb3199d9ee85cd7fbe75c4b9c43d467", "message": "MULE-18873: Code review changes", "committedDate": "2020-12-03T03:25:20Z", "type": "commit"}]}