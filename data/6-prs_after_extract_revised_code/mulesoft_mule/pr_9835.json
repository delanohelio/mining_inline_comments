{"pr_number": 9835, "pr_title": "CMTS-99: Support default values for DeclarationServices", "pr_createdAt": "2020-12-09T15:26:22Z", "pr_url": "https://github.com/mulesoft/mule/pull/9835", "timeline": [{"oid": "4d5666005d53c6d873c2565f52f60644426d6bdd", "url": "https://github.com/mulesoft/mule/commit/4d5666005d53c6d873c2565f52f60644426d6bdd", "message": "CMTS-99: Support default values for DeclarationServices", "committedDate": "2020-12-09T15:05:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5Nzk2NQ==", "url": "https://github.com/mulesoft/mule/pull/9835#discussion_r540197965", "bodyText": "static import", "author": "lucianoRM", "createdAt": "2020-12-10T14:10:11Z", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "diffHunk": "@@ -43,20 +50,34 @@\n  */\n public class MetadataKeyDeclarationResolver {\n \n+  private static final Logger LOGGER = LoggerFactory.getLogger(MetadataKeyDeclarationResolver.class);", "originalCommit": "4d5666005d53c6d873c2565f52f60644426d6bdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71e860c8a8406655c620afd200820567b0060c83", "chunk": "diff --git a/modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java b/modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java\nindex 54b9480aebc..9c954264970 100644\n--- a/modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java\n+++ b/modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java\n\n@@ -50,7 +50,7 @@ import org.slf4j.LoggerFactory;\n  */\n public class MetadataKeyDeclarationResolver {\n \n-  private static final Logger LOGGER = LoggerFactory.getLogger(MetadataKeyDeclarationResolver.class);\n+  private static final Logger LOGGER = getLogger(MetadataKeyDeclarationResolver.class);\n \n   private ComponentModel componentModel;\n   private ComponentElementDeclaration componentElementDeclaration;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5OTcwMA==", "url": "https://github.com/mulesoft/mule/pull/9835#discussion_r540199700", "bodyText": "why this validation? When is the expressionManager going to be null? and why shouldn't we fail if that is the case?", "author": "lucianoRM", "createdAt": "2020-12-10T14:12:27Z", "path": "modules/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/artifact/metadata/MetadataKeyDeclarationResolver.java", "diffHunk": "@@ -68,15 +89,31 @@ public MetadataKeyResult resolveKeyResult() {\n     Map<String, String> keyPartValues =\n         getMetadataKeyPartsValuesFromComponentDeclaration(componentElementDeclaration, componentModel);\n     for (MetadataKeyInfo keyInfo : keyPartModelsInfo) {\n-      String id;\n+      String id = null;\n+      boolean isNullValue = false;\n       if (keyPartValues.containsKey(keyInfo.parameterModel.getName())) {\n         id = keyPartValues.get(keyInfo.parameterModel.getName());\n+        isNullValue = id == null;\n+      } else if (!partialKey && keyInfo.parameterModel.getDefaultValue() != null) {\n+        String defaultValue = keyInfo.parameterModel.getDefaultValue().toString();\n+        if (expressionManager != null && isExpression(defaultValue)) {", "originalCommit": "4d5666005d53c6d873c2565f52f60644426d6bdd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIwMTg2OQ==", "url": "https://github.com/mulesoft/mule/pull/9835#discussion_r540201869", "bodyText": "We use this resolver from MTS to validate that the key is \"complete\" before calling Runtime. So, on that scenario we won't need to resolve the expression.", "author": "gsfernandes", "createdAt": "2020-12-10T14:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5OTcwMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "71e860c8a8406655c620afd200820567b0060c83", "url": "https://github.com/mulesoft/mule/commit/71e860c8a8406655c620afd200820567b0060c83", "message": "PR feedback", "committedDate": "2020-12-10T16:52:24Z", "type": "commit"}]}