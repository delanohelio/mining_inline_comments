{"pr_number": 8930, "pr_title": "MULE-18431: async's backpressure handling is blocking expecting resolutions", "pr_createdAt": "2020-06-16T21:01:18Z", "pr_url": "https://github.com/mulesoft/mule/pull/8930", "timeline": [{"oid": "467a7e7e1d2eecd25709d7ae59c356fe9049cb80", "url": "https://github.com/mulesoft/mule/commit/467a7e7e1d2eecd25709d7ae59c356fe9049cb80", "message": "MULE-18431: async's backpressure is blocking expecting resolutions", "committedDate": "2020-06-16T20:52:08Z", "type": "commit"}, {"oid": "dd56b6755b6a70164699dff563c3e3930f1dbe44", "url": "https://github.com/mulesoft/mule/commit/dd56b6755b6a70164699dff563c3e3930f1dbe44", "message": "formatter", "committedDate": "2020-06-16T21:00:21Z", "type": "commit"}, {"oid": "8cd5ea3d51cc8af3297f1bc6f0e138ba3330c284", "url": "https://github.com/mulesoft/mule/commit/8cd5ea3d51cc8af3297f1bc6f0e138ba3330c284", "message": "imports", "committedDate": "2020-06-16T21:02:26Z", "type": "commit"}, {"oid": "43e963f55055740c82cd60ef3ae259a536a3b4f1", "url": "https://github.com/mulesoft/mule/commit/43e963f55055740c82cd60ef3ae259a536a3b4f1", "message": "more imports", "committedDate": "2020-06-16T21:02:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDc1NQ==", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441144755", "bodyText": "add story annotation", "author": "elrodro83", "createdAt": "2020-06-16T21:11:43Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.processor;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.mock;\n+import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n+import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n+\n+import io.qameta.allure.Issue;\n+import org.mule.runtime.api.scheduler.Scheduler;\n+import org.mule.runtime.api.scheduler.SchedulerConfig;\n+import org.mule.runtime.core.api.construct.FlowConstruct;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.ReactiveProcessor;\n+import org.mule.runtime.core.api.processor.Sink;\n+import org.mule.runtime.core.api.processor.strategy.ProcessingStrategy;\n+import org.mule.runtime.core.internal.construct.FromFlowRejectedExecutionException;\n+import org.mule.runtime.core.internal.processor.strategy.StreamPerEventSink;\n+import org.mule.tck.SimpleUnitTestSupportSchedulerService;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+\n+@Issue(\"MULE-18431\")\n+public class AsyncDelegateMessageProcessorBackPressureTestCase extends AbstractAsyncDelegateMessageProcessorTestCase {", "originalCommit": "43e963f55055740c82cd60ef3ae259a536a3b4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\nindex aec160136cb..fff80ea9563 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\n\n@@ -6,13 +6,18 @@\n  */\n package org.mule.runtime.core.internal.processor;\n \n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.CoreMatchers.is;\n import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.Mockito.doAnswer;\n-import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.*;\n import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n \n import io.qameta.allure.Issue;\n+import org.junit.Assert;\n+import org.junit.Test;\n import org.mule.runtime.api.scheduler.Scheduler;\n import org.mule.runtime.api.scheduler.SchedulerConfig;\n import org.mule.runtime.core.api.construct.FlowConstruct;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NTU1Mw==", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441145553", "bodyText": "if you override createAsyncDelegateMessageProcessor and move this line and 39 there, you can move this doSetUp back to the superclass", "author": "elrodro83", "createdAt": "2020-06-16T21:13:24Z", "path": "core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.processor;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doAnswer;\n+import static org.mockito.Mockito.mock;\n+import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n+import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n+\n+import io.qameta.allure.Issue;\n+import org.mule.runtime.api.scheduler.Scheduler;\n+import org.mule.runtime.api.scheduler.SchedulerConfig;\n+import org.mule.runtime.core.api.construct.FlowConstruct;\n+import org.mule.runtime.core.api.event.CoreEvent;\n+import org.mule.runtime.core.api.processor.ReactiveProcessor;\n+import org.mule.runtime.core.api.processor.Sink;\n+import org.mule.runtime.core.api.processor.strategy.ProcessingStrategy;\n+import org.mule.runtime.core.internal.construct.FromFlowRejectedExecutionException;\n+import org.mule.runtime.core.internal.processor.strategy.StreamPerEventSink;\n+import org.mule.tck.SimpleUnitTestSupportSchedulerService;\n+\n+import java.util.concurrent.RejectedExecutionException;\n+\n+@Issue(\"MULE-18431\")\n+public class AsyncDelegateMessageProcessorBackPressureTestCase extends AbstractAsyncDelegateMessageProcessorTestCase {\n+\n+  public AsyncDelegateMessageProcessorBackPressureTestCase(Mode mode) {\n+    super(mode);\n+  }\n+\n+  @Override\n+  protected void doSetUp() throws Exception {\n+    super.doSetUp();\n+    BackPressureGeneratorProcessingStrategy strategy = new BackPressureGeneratorProcessingStrategy();\n+    flow = createAndRegisterFlow(muleContext, APPLE_FLOW, componentLocator, (ctx, n) -> strategy);\n+    async = createAsyncDelegateMessageProcessor(target, flow);\n+    async.setSchedulerService(new FixingBackPressureSchedulerService(strategy));", "originalCommit": "43e963f55055740c82cd60ef3ae259a536a3b4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "chunk": "diff --git a/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java b/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\nindex aec160136cb..fff80ea9563 100644\n--- a/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\n+++ b/core-tests/src/test/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessorBackPressureTestCase.java\n\n@@ -6,13 +6,18 @@\n  */\n package org.mule.runtime.core.internal.processor;\n \n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.CoreMatchers.is;\n import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.Mockito.doAnswer;\n-import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.*;\n import static org.mule.tck.MuleTestUtils.APPLE_FLOW;\n import static org.mule.tck.MuleTestUtils.createAndRegisterFlow;\n \n import io.qameta.allure.Issue;\n+import org.junit.Assert;\n+import org.junit.Test;\n import org.mule.runtime.api.scheduler.Scheduler;\n import org.mule.runtime.api.scheduler.SchedulerConfig;\n import org.mule.runtime.core.api.construct.FlowConstruct;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NjE1Mg==", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441146152", "bodyText": "this doesn't belong here", "author": "elrodro83", "createdAt": "2020-06-16T21:14:40Z", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -365,4 +368,10 @@ public void stop() {\n       asyncQueue.clear();\n     }\n   }\n+\n+  public void setSchedulerService(SchedulerService schedulerService) throws InitialisationException {\n+    this.schedulerService = schedulerService;\n+    initialise();", "originalCommit": "43e963f55055740c82cd60ef3ae259a536a3b4f1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "chunk": "diff --git a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\nindex f61219d3f67..ecec83294e3 100644\n--- a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n+++ b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n\n@@ -361,6 +355,23 @@ public class AsyncDelegateMessageProcessor extends AbstractMessageProcessorOwner\n       });\n     }\n \n+    public void handleBackpressure(CoreEvent event) {\n+      asyncQueue.offer(event);\n+\n+      synchronized (asyncQueue) {\n+        asyncQueue.notify();\n+      }\n+\n+      synchronized (executing) {\n+        if (executing.get() != null) {\n+          if (!executing.get().isDone()) {\n+            return;\n+          }\n+        }\n+        executing.set(dispatchTask());\n+      }\n+    }\n+\n     @Override\n     public void stop() {\n       queueDispatcherScheduler.ifComputed(Scheduler::stop);\n"}}, {"oid": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "url": "https://github.com/mulesoft/mule/commit/c01b9512829dc3bc5a15ad00d11438ee643c84a9", "message": "review -> change in the way the delegation is done", "committedDate": "2020-06-17T16:23:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MjcyNw==", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441672727", "bodyText": "&&?", "author": "elrodro83", "createdAt": "2020-06-17T16:27:02Z", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -358,11 +355,34 @@ public void handleBackpressure(CoreEvent event) {\n       });\n     }\n \n+    public void handleBackpressure(CoreEvent event) {\n+      asyncQueue.offer(event);\n+\n+      synchronized (asyncQueue) {\n+        asyncQueue.notify();\n+      }\n+\n+      synchronized (executing) {\n+        if (executing.get() != null) {\n+          if (!executing.get().isDone()) {", "originalCommit": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bddfa7a14227bec8d468a4a9be984c7dcc3b920", "chunk": "diff --git a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\nindex ecec83294e3..67368585378 100644\n--- a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n+++ b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n\n@@ -380,9 +380,8 @@ public class AsyncDelegateMessageProcessor extends AbstractMessageProcessorOwner\n     }\n   }\n \n-  public void setSchedulerService(SchedulerService schedulerService) throws InitialisationException {\n+  void setSchedulerService(SchedulerService schedulerService) {\n     this.schedulerService = schedulerService;\n-    initialise();\n   }\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MzE1OA==", "url": "https://github.com/mulesoft/mule/pull/8930#discussion_r441673158", "bodyText": "negate the if above and put this inside", "author": "elrodro83", "createdAt": "2020-06-17T16:27:42Z", "path": "core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java", "diffHunk": "@@ -358,11 +355,34 @@ public void handleBackpressure(CoreEvent event) {\n       });\n     }\n \n+    public void handleBackpressure(CoreEvent event) {\n+      asyncQueue.offer(event);\n+\n+      synchronized (asyncQueue) {\n+        asyncQueue.notify();\n+      }\n+\n+      synchronized (executing) {\n+        if (executing.get() != null) {\n+          if (!executing.get().isDone()) {\n+            return;\n+          }\n+        }\n+        executing.set(dispatchTask());", "originalCommit": "c01b9512829dc3bc5a15ad00d11438ee643c84a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bddfa7a14227bec8d468a4a9be984c7dcc3b920", "chunk": "diff --git a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\nindex ecec83294e3..67368585378 100644\n--- a/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n+++ b/core/src/main/java/org/mule/runtime/core/internal/processor/AsyncDelegateMessageProcessor.java\n\n@@ -380,9 +380,8 @@ public class AsyncDelegateMessageProcessor extends AbstractMessageProcessorOwner\n     }\n   }\n \n-  public void setSchedulerService(SchedulerService schedulerService) throws InitialisationException {\n+  void setSchedulerService(SchedulerService schedulerService) {\n     this.schedulerService = schedulerService;\n-    initialise();\n   }\n \n }\n"}}, {"oid": "9bddfa7a14227bec8d468a4a9be984c7dcc3b920", "url": "https://github.com/mulesoft/mule/commit/9bddfa7a14227bec8d468a4a9be984c7dcc3b920", "message": "setter", "committedDate": "2020-06-17T16:33:41Z", "type": "commit"}, {"oid": "7455bc27ec6b66791e1328463034748fe1a2c545", "url": "https://github.com/mulesoft/mule/commit/7455bc27ec6b66791e1328463034748fe1a2c545", "message": "condition / indentation", "committedDate": "2020-06-17T16:37:56Z", "type": "commit"}, {"oid": "b78f8674309ed15624d3d67bec189358dc1b2ea1", "url": "https://github.com/mulesoft/mule/commit/b78f8674309ed15624d3d67bec189358dc1b2ea1", "message": "allure", "committedDate": "2020-06-17T16:40:18Z", "type": "commit"}, {"oid": "b67c0dbe8fda5fb2f8a5e6d37388088423a5f403", "url": "https://github.com/mulesoft/mule/commit/b67c0dbe8fda5fb2f8a5e6d37388088423a5f403", "message": "refactor", "committedDate": "2020-06-17T18:08:54Z", "type": "commit"}]}