{"pr_number": 8980, "pr_title": "MULE-18374: Allow to iterate an ArtifactAst/ComponentAst bottom-up", "pr_createdAt": "2020-06-24T15:26:42Z", "pr_url": "https://github.com/mulesoft/mule/pull/8980", "timeline": [{"oid": "cc633083541ea6cea9b364249e92e8759336c2d4", "url": "https://github.com/mulesoft/mule/commit/cc633083541ea6cea9b364249e92e8759336c2d4", "message": "MULE-18374", "committedDate": "2020-06-24T16:10:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMTA0NA==", "url": "https://github.com/mulesoft/mule/pull/8980#discussion_r445111044", "bodyText": "This should be AstTraversalDirection directly instead of having a separate factory.", "author": "elrodro83", "createdAt": "2020-06-24T19:08:30Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/ComponentAstSpliteratorStrategyFactory.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.internal.factories;\n+\n+import static org.mule.runtime.ast.api.util.AstTraversalDirection.BOTTOM_UP;\n+import static org.mule.runtime.ast.api.util.AstTraversalDirection.TOP_DOWN;\n+\n+import org.mule.runtime.ast.api.ComponentAst;\n+import org.mule.runtime.ast.api.util.AstTraversalDirection;\n+import org.mule.runtime.config.internal.model.iterator.BottomUpComponentAstSpliteratorTraversal;\n+import org.mule.runtime.config.internal.model.iterator.TopDownComponentAstSpliteratorTraversal;\n+\n+import java.util.Spliterator;\n+\n+/**\n+ * Factory that knows how to create a {@link Spliterator<ComponentAst>} to navigates the whole AST.\n+ *\n+ * @since 4.4.0\n+ */\n+public class ComponentAstSpliteratorStrategyFactory {", "originalCommit": "cc633083541ea6cea9b364249e92e8759336c2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc581799008764344a157933c6545378c53b92c", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/ComponentAstSpliteratorStrategyFactory.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/ComponentAstSpliteratorStrategyFactory.java\ndeleted file mode 100644\nindex 6d3a616cce0..00000000000\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/factories/ComponentAstSpliteratorStrategyFactory.java\n+++ /dev/null\n\n@@ -1,65 +0,0 @@\n-/*\n- * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n- * The software in this package is published under the terms of the CPAL v1.0\n- * license, a copy of which has been included with this distribution in the\n- * LICENSE.txt file.\n- */\n-package org.mule.runtime.config.internal.factories;\n-\n-import static org.mule.runtime.ast.api.util.AstTraversalDirection.BOTTOM_UP;\n-import static org.mule.runtime.ast.api.util.AstTraversalDirection.TOP_DOWN;\n-\n-import org.mule.runtime.ast.api.ComponentAst;\n-import org.mule.runtime.ast.api.util.AstTraversalDirection;\n-import org.mule.runtime.config.internal.model.iterator.BottomUpComponentAstSpliteratorTraversal;\n-import org.mule.runtime.config.internal.model.iterator.TopDownComponentAstSpliteratorTraversal;\n-\n-import java.util.Spliterator;\n-\n-/**\n- * Factory that knows how to create a {@link Spliterator<ComponentAst>} to navigates the whole AST.\n- *\n- * @since 4.4.0\n- */\n-public class ComponentAstSpliteratorStrategyFactory {\n-\n-  private ComponentAstSpliteratorStrategyFactory() {}\n-\n-  /**\n-   * Create a {@link Spliterator} that navigate the whole AST top down.\n-   *\n-   * @param componentAst the {@link ComponentAst} to navigate\n-   * @return a {@link Spliterator} that navigates the whole {@code componentAst} using {@link TOP_DOWN} direction.\n-   */\n-  public static Spliterator<ComponentAst> topDownTraversalStrategy(ComponentAst componentAst) {\n-    return traversalStrategy(componentAst, TOP_DOWN);\n-  }\n-\n-  /**\n-   *  Create a {@link Spliterator} that navigate the whole AST bottom up.\n-   *\n-   * @param componentAst the {@link ComponentAst} to navigate\n-   * @return a {@link Spliterator} that navigates the whole {@code componentAst} using {@link BOTTOM_UP} direction.\n-   */\n-  public static Spliterator<ComponentAst> bottomUpTraversalStrategy(ComponentAst componentAst) {\n-    return traversalStrategy(componentAst, BOTTOM_UP);\n-  }\n-\n-  /**\n-   *  Create a {@link Spliterator} that navigate the whole AST using {@link AstTraversalDirection} direction.\n-   *\n-   * @param componentAst the {@link ComponentAst} to navigate\n-   * @param direction the {@link AstTraversalDirection} used to navigate the whole AST.\n-   * @return a {@link Spliterator} that navigates the whole {@code componentAst} using the given {@code direction}.\n-   */\n-  public static Spliterator<ComponentAst> traversalStrategy(ComponentAst componentAst, AstTraversalDirection direction) {\n-    switch (direction) {\n-      case TOP_DOWN:\n-        return new TopDownComponentAstSpliteratorTraversal(componentAst);\n-      case BOTTOM_UP:\n-        return new BottomUpComponentAstSpliteratorTraversal(componentAst);\n-      default:\n-        throw new IllegalArgumentException(\"Unknown direction: \" + direction);\n-    }\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMTM5OA==", "url": "https://github.com/mulesoft/mule/pull/8980#discussion_r445111398", "bodyText": "Thsi implementation should be on the enum itself", "author": "elrodro83", "createdAt": "2020-06-24T19:09:14Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/BottomUpComponentAstSpliteratorTraversal.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.internal.model.iterator;\n+\n+import static org.mule.runtime.ast.api.util.AstTraversalDirection.BOTTOM_UP;\n+\n+import org.mule.runtime.ast.api.ComponentAst;\n+\n+import java.util.function.Consumer;\n+\n+/**\n+ * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using {@link BOTTOM_UP} direction.\n+ *\n+ * @since 4.4.0\n+ */\n+public class BottomUpComponentAstSpliteratorTraversal extends ComponentAstSpliteratorStrategy {", "originalCommit": "cc633083541ea6cea9b364249e92e8759336c2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc581799008764344a157933c6545378c53b92c", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/BottomUpComponentAstSpliteratorTraversal.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/BottomUpComponentAstSpliteratorTraversal.java\ndeleted file mode 100644\nindex 25c3bb51cc9..00000000000\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/BottomUpComponentAstSpliteratorTraversal.java\n+++ /dev/null\n\n@@ -1,35 +0,0 @@\n-/*\n- * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n- * The software in this package is published under the terms of the CPAL v1.0\n- * license, a copy of which has been included with this distribution in the\n- * LICENSE.txt file.\n- */\n-package org.mule.runtime.config.internal.model.iterator;\n-\n-import static org.mule.runtime.ast.api.util.AstTraversalDirection.BOTTOM_UP;\n-\n-import org.mule.runtime.ast.api.ComponentAst;\n-\n-import java.util.function.Consumer;\n-\n-/**\n- * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using {@link BOTTOM_UP} direction.\n- *\n- * @since 4.4.0\n- */\n-public class BottomUpComponentAstSpliteratorTraversal extends ComponentAstSpliteratorStrategy {\n-\n-  public BottomUpComponentAstSpliteratorTraversal(ComponentAst componentAst) {\n-    super(componentAst, BOTTOM_UP);\n-  }\n-\n-  @Override\n-  protected boolean tryAdvanceBeforeChildrenConsumed(Consumer<? super ComponentAst> action) {\n-    return false;\n-  }\n-\n-  @Override\n-  protected boolean tryAdvanceAfterChildrenConsumed(Consumer<? super ComponentAst> action) {\n-    return tryAdvanceOverComponentAst(action);\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMTU2Mg==", "url": "https://github.com/mulesoft/mule/pull/8980#discussion_r445111562", "bodyText": "this implementation should be in the enum itself", "author": "elrodro83", "createdAt": "2020-06-24T19:09:32Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/TopDownComponentAstSpliteratorTraversal.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.internal.model.iterator;\n+\n+import static org.mule.runtime.ast.api.util.AstTraversalDirection.TOP_DOWN;\n+\n+import org.mule.runtime.ast.api.ComponentAst;\n+\n+import java.util.function.Consumer;\n+\n+/**\n+ * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using {@link TOP_DOWN} direction.\n+ *\n+ * @since 4.4.0\n+ */\n+public class TopDownComponentAstSpliteratorTraversal extends ComponentAstSpliteratorStrategy {", "originalCommit": "cc633083541ea6cea9b364249e92e8759336c2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc581799008764344a157933c6545378c53b92c", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/TopDownComponentAstSpliteratorTraversal.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/TopDownComponentAstSpliteratorTraversal.java\ndeleted file mode 100644\nindex f0755c77ee0..00000000000\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/TopDownComponentAstSpliteratorTraversal.java\n+++ /dev/null\n\n@@ -1,35 +0,0 @@\n-/*\n- * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n- * The software in this package is published under the terms of the CPAL v1.0\n- * license, a copy of which has been included with this distribution in the\n- * LICENSE.txt file.\n- */\n-package org.mule.runtime.config.internal.model.iterator;\n-\n-import static org.mule.runtime.ast.api.util.AstTraversalDirection.TOP_DOWN;\n-\n-import org.mule.runtime.ast.api.ComponentAst;\n-\n-import java.util.function.Consumer;\n-\n-/**\n- * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using {@link TOP_DOWN} direction.\n- *\n- * @since 4.4.0\n- */\n-public class TopDownComponentAstSpliteratorTraversal extends ComponentAstSpliteratorStrategy {\n-\n-  public TopDownComponentAstSpliteratorTraversal(ComponentAst componentAst) {\n-    super(componentAst, TOP_DOWN);\n-  }\n-\n-  @Override\n-  protected boolean tryAdvanceBeforeChildrenConsumed(Consumer<? super ComponentAst> action) {\n-    return tryAdvanceOverComponentAst(action);\n-  }\n-\n-  @Override\n-  protected boolean tryAdvanceAfterChildrenConsumed(Consumer<? super ComponentAst> action) {\n-    return false;\n-  }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMTY4Ng==", "url": "https://github.com/mulesoft/mule/pull/8980#discussion_r445111686", "bodyText": "move this to the ast project", "author": "elrodro83", "createdAt": "2020-06-24T19:09:46Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/ComponentAstSpliteratorStrategy.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.config.internal.model.iterator;\n+\n+import org.mule.runtime.ast.api.ComponentAst;\n+import org.mule.runtime.ast.api.util.AstTraversalDirection;\n+\n+import java.util.Spliterator;\n+import java.util.function.Consumer;\n+\n+/**\n+ * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using a {@link AstTraversalDirection} direction.\n+ *\n+ * @since 4.4.0\n+ */\n+public abstract class ComponentAstSpliteratorStrategy implements Spliterator<ComponentAst> {", "originalCommit": "cc633083541ea6cea9b364249e92e8759336c2d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0fc581799008764344a157933c6545378c53b92c", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/ComponentAstSpliteratorStrategy.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/ComponentAstSpliteratorStrategy.java\ndeleted file mode 100644\nindex ec74a18c835..00000000000\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/iterator/ComponentAstSpliteratorStrategy.java\n+++ /dev/null\n\n@@ -1,92 +0,0 @@\n-/*\n- * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n- * The software in this package is published under the terms of the CPAL v1.0\n- * license, a copy of which has been included with this distribution in the\n- * LICENSE.txt file.\n- */\n-package org.mule.runtime.config.internal.model.iterator;\n-\n-import org.mule.runtime.ast.api.ComponentAst;\n-import org.mule.runtime.ast.api.util.AstTraversalDirection;\n-\n-import java.util.Spliterator;\n-import java.util.function.Consumer;\n-\n-/**\n- * A {@link ComponentAstSpliteratorStrategy} that navigates the whole AST using a {@link AstTraversalDirection} direction.\n- *\n- * @since 4.4.0\n- */\n-public abstract class ComponentAstSpliteratorStrategy implements Spliterator<ComponentAst> {\n-\n-  private final ComponentAst componentAst;\n-  private final AstTraversalDirection direction;\n-\n-  private boolean rootProcessed = false;\n-  private Spliterator<ComponentAst> childrenSpliterator;\n-  private Spliterator<ComponentAst> currentChildSpliterator;\n-\n-  public ComponentAstSpliteratorStrategy(ComponentAst componentAst, AstTraversalDirection direction) {\n-    this.componentAst = componentAst;\n-    this.direction = direction;\n-  }\n-\n-  protected abstract boolean tryAdvanceBeforeChildrenConsumed(Consumer<? super ComponentAst> action);\n-\n-  protected abstract boolean tryAdvanceAfterChildrenConsumed(Consumer<? super ComponentAst> action);\n-\n-  protected boolean tryAdvanceOverComponentAst(Consumer<? super ComponentAst> action) {\n-    if (!rootProcessed) {\n-      rootProcessed = true;\n-      action.accept(componentAst);\n-      return true;\n-    }\n-    return false;\n-  }\n-\n-  @Override\n-  public boolean tryAdvance(Consumer<? super ComponentAst> action) {\n-    if (tryAdvanceBeforeChildrenConsumed(action)) {\n-      return true;\n-    }\n-\n-    trySplit();\n-\n-    if (currentChildSpliterator != null) {\n-      if (currentChildSpliterator.tryAdvance(action)) {\n-        return true;\n-      } else {\n-        currentChildSpliterator = null;\n-        return tryAdvance(action);\n-      }\n-    } else {\n-      if (childrenSpliterator\n-          .tryAdvance(componentAst -> currentChildSpliterator = componentAst.recursiveSpliterator(direction))) {\n-        return tryAdvance(action);\n-      } else {\n-        return tryAdvanceAfterChildrenConsumed(action);\n-      }\n-    }\n-  }\n-\n-  @Override\n-  public Spliterator<ComponentAst> trySplit() {\n-    if (childrenSpliterator == null) {\n-      childrenSpliterator = componentAst.directChildrenStream().spliterator();\n-    }\n-    return null;\n-  }\n-\n-  @Override\n-  public long estimateSize() {\n-    return 1 + componentAst.directChildrenStream()\n-        .mapToLong(inner -> inner.recursiveSpliterator(direction).estimateSize())\n-        .sum();\n-  }\n-\n-  @Override\n-  public int characteristics() {\n-    return ORDERED | DISTINCT | SIZED | NONNULL | IMMUTABLE | SUBSIZED;\n-  }\n-\n-}\n"}}, {"oid": "1e1c7c23e790c63e734011a8e6ca47837233db42", "url": "https://github.com/mulesoft/mule/commit/1e1c7c23e790c63e734011a8e6ca47837233db42", "message": "MULE-18374: Allow to iterate an ArtifactAst/ComponentAst bottom-up", "committedDate": "2020-06-25T15:56:30Z", "type": "commit"}, {"oid": "a37b6c0362effc7f00430a5660640e2e08e6a8cf", "url": "https://github.com/mulesoft/mule/commit/a37b6c0362effc7f00430a5660640e2e08e6a8cf", "message": "MULE-18374", "committedDate": "2020-06-25T15:56:30Z", "type": "commit"}, {"oid": "0fc581799008764344a157933c6545378c53b92c", "url": "https://github.com/mulesoft/mule/commit/0fc581799008764344a157933c6545378c53b92c", "message": "MULE-18374: review", "committedDate": "2020-06-25T15:56:30Z", "type": "commit"}, {"oid": "0fc581799008764344a157933c6545378c53b92c", "url": "https://github.com/mulesoft/mule/commit/0fc581799008764344a157933c6545378c53b92c", "message": "MULE-18374: review", "committedDate": "2020-06-25T15:56:30Z", "type": "forcePushed"}]}