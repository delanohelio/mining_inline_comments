{"pr_number": 8710, "pr_title": "MULE-18148: Memory leak on transactional try with error handlers", "pr_createdAt": "2020-03-05T18:34:09Z", "pr_url": "https://github.com/mulesoft/mule/pull/8710", "timeline": [{"oid": "f8a682b173f99b07bd5072dc071c3a39ca6fedd9", "url": "https://github.com/mulesoft/mule/commit/f8a682b173f99b07bd5072dc071c3a39ca6fedd9", "message": "MULE-18148: Memory leak on transactional try with error handlers", "committedDate": "2020-03-05T18:33:32Z", "type": "commit"}, {"oid": "532dfb7bb593c17cac7952fa275060a16ccace31", "url": "https://github.com/mulesoft/mule/commit/532dfb7bb593c17cac7952fa275060a16ccace31", "message": "fix", "committedDate": "2020-03-05T19:03:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxNjUyOQ==", "url": "https://github.com/mulesoft/mule/pull/8710#discussion_r388516529", "bodyText": "Is this method being overridden because of clarity?", "author": "fsgonz", "createdAt": "2020-03-05T19:34:21Z", "path": "core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.core.internal.exception;\n+\n+import org.mule.runtime.api.lifecycle.Disposable;\n+import org.mule.runtime.core.api.exception.FlowExceptionHandler;\n+\n+import java.util.function.Consumer;\n+\n+/**\n+ * Refer to {@link FlowExceptionHandler#router(java.util.function.Function, Consumer, Consumer)}.\n+ *\n+ * @since 4.3\n+ */\n+public interface ExceptionRouter extends Consumer<Exception>, Disposable {\n+\n+  @Override\n+  void accept(Exception t);\n+\n+  @Override\n+  void dispose();", "originalCommit": "532dfb7bb593c17cac7952fa275060a16ccace31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUyNDU0NA==", "url": "https://github.com/mulesoft/mule/pull/8710#discussion_r388524544", "bodyText": "yeah, i will remove both methods, since they are inherited", "author": "elrodro83", "createdAt": "2020-03-05T19:48:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxNjUyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "857ef0b49e36833508ce01914f90fb3d7f8cd10f", "chunk": "diff --git a/core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java b/core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java\nindex b456adf4af9..9ba03fb797e 100644\n--- a/core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java\n+++ b/core/src/main/java/org/mule/runtime/core/internal/exception/ExceptionRouter.java\n\n@@ -13,14 +13,11 @@ import java.util.function.Consumer;\n \n /**\n  * Refer to {@link FlowExceptionHandler#router(java.util.function.Function, Consumer, Consumer)}.\n+ * <p>\n+ * Also implements {@link Disposable} to allow shutdown of any child objects.\n  *\n  * @since 4.3\n  */\n public interface ExceptionRouter extends Consumer<Exception>, Disposable {\n \n-  @Override\n-  void accept(Exception t);\n-\n-  @Override\n-  void dispose();\n }\n"}}, {"oid": "857ef0b49e36833508ce01914f90fb3d7f8cd10f", "url": "https://github.com/mulesoft/mule/commit/857ef0b49e36833508ce01914f90fb3d7f8cd10f", "message": "review", "committedDate": "2020-03-05T19:49:50Z", "type": "commit"}]}