{"pr_number": 9209, "pr_title": "CMTS-53: Avoid runtime metatdata types resolution when key values are\u2026", "pr_createdAt": "2020-08-13T20:30:12Z", "pr_url": "https://github.com/mulesoft/mule/pull/9209", "timeline": [{"oid": "30c09634e72d9f4b88c500ceb4b00089d7526921", "url": "https://github.com/mulesoft/mule/commit/30c09634e72d9f4b88c500ceb4b00089d7526921", "message": "CMTS-53: Avoid runtime metatdata types resolution when key values are missing", "committedDate": "2020-08-13T21:26:04Z", "type": "forcePushed"}, {"oid": "61eb01f66c8349b11f762863cd5bba3cea2fef9f", "url": "https://github.com/mulesoft/mule/commit/61eb01f66c8349b11f762863cd5bba3cea2fef9f", "message": "CMTS-53: Avoid runtime metatdata types resolution when key values are missing", "committedDate": "2020-08-18T12:28:52Z", "type": "commit"}, {"oid": "61eb01f66c8349b11f762863cd5bba3cea2fef9f", "url": "https://github.com/mulesoft/mule/commit/61eb01f66c8349b11f762863cd5bba3cea2fef9f", "message": "CMTS-53: Avoid runtime metatdata types resolution when key values are missing", "committedDate": "2020-08-18T12:28:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIxNzQ5MQ==", "url": "https://github.com/mulesoft/mule/pull/9209#discussion_r472217491", "bodyText": "Revert this as we need to understand why this error has changed.", "author": "gsfernandes", "createdAt": "2020-08-18T13:57:47Z", "path": "modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java", "diffHunk": "@@ -155,7 +155,8 @@ public void getValuesWithWrongDeclaration() {\n                 .getDeclaration())\n             .getDeclaration();\n     validateValuesFailure(session, operationElementDeclaration, \"anyParameter\",\n-                          \"There is no extensionModel for extension: WrongExtension\", UNKNOWN);\n+                          \"Unknown error while resolving values for parameter: 'anyParameter'. MuleRuntimeException: There is no extensionModel for extension: WrongExtension\",", "originalCommit": "61eb01f66c8349b11f762863cd5bba3cea2fef9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "11a0d20252c66e8d74907311a06c5c8e05aa8d4c", "chunk": "diff --git a/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java b/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java\nindex c6795229d6d..7e0f735768a 100644\n--- a/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java\n+++ b/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/ComponentValueProviderTestCase.java\n\n@@ -155,8 +155,7 @@ public class ComponentValueProviderTestCase extends DeclarationSessionTestCase {\n                 .getDeclaration())\n             .getDeclaration();\n     validateValuesFailure(session, operationElementDeclaration, \"anyParameter\",\n-                          \"Unknown error while resolving values for parameter: 'anyParameter'. MuleRuntimeException: There is no extensionModel for extension: WrongExtension\",\n-                          UNKNOWN);\n+                          \"There is no extensionModel for extension: WrongExtension\", UNKNOWN);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIxNzg3Nw==", "url": "https://github.com/mulesoft/mule/pull/9209#discussion_r472217877", "bodyText": "Create a ticket for this as we have discussed and add the Jira ticket id here.", "author": "gsfernandes", "createdAt": "2020-08-18T13:58:17Z", "path": "modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/MetadataTypesTestCase.java", "diffHunk": "@@ -86,6 +87,7 @@ public void operationDynamicTypes() {\n                    \"}\"));\n   }\n \n+  // TODO BUG Optional levels are required for multi-level keys!", "originalCommit": "61eb01f66c8349b11f762863cd5bba3cea2fef9f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "11a0d20252c66e8d74907311a06c5c8e05aa8d4c", "chunk": "diff --git a/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/MetadataTypesTestCase.java b/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/MetadataTypesTestCase.java\nindex f824bad694a..623b7f53f56 100644\n--- a/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/MetadataTypesTestCase.java\n+++ b/modules/tooling-support-parent/functional-tests/src/test/java/org/mule/runtime/module/tooling/MetadataTypesTestCase.java\n\n@@ -87,24 +88,27 @@ public class MetadataTypesTestCase extends DeclarationSessionTestCase {\n                    \"}\"));\n   }\n \n-  // TODO BUG Optional levels are required for multi-level keys!\n+  // TODO MULE-18680: Optional levels are required for multi-level keys!\n   @Test\n   public void operationDynamicTypesPartialKey() {\n     OperationElementDeclaration operationElementDeclaration = multiLevelOPDeclaration(CONFIG_NAME, \"America\", \"USA\");\n     MetadataResult<ComponentMetadataTypesDescriptor> containerTypeMetadataResult =\n         session.resolveComponentMetadata(operationElementDeclaration);\n     assertThat(containerTypeMetadataResult.isSuccess(), is(false));\n-    assertThat(containerTypeMetadataResult.getFailures(), hasSize(2));\n+    assertThat(containerTypeMetadataResult.getFailures(), hasSize(1));\n+    assertThat(containerTypeMetadataResult.getFailures().get(0).getMessage(), containsString(\"Missing levels: [city]\"));\n   }\n \n-  // TODO BUG Optional levels are required for multi-level keys!\n+  // TODO MULE-18680 Optional levels are required for multi-level keys!\n   @Test\n   public void operationDynamicTypesNoKey() {\n     OperationElementDeclaration operationElementDeclaration = multiLevelOPDeclaration(CONFIG_NAME, null, null);\n     MetadataResult<ComponentMetadataTypesDescriptor> containerTypeMetadataResult =\n         session.resolveComponentMetadata(operationElementDeclaration);\n     assertThat(containerTypeMetadataResult.isSuccess(), is(false));\n-    assertThat(containerTypeMetadataResult.getFailures(), hasSize(2));\n+    assertThat(containerTypeMetadataResult.getFailures(), hasSize(1));\n+    assertThat(containerTypeMetadataResult.getFailures().get(0).getMessage(),\n+               containsString(\"Missing levels: [continent, country, city]\"));\n   }\n \n   @Test\n"}}, {"oid": "11a0d20252c66e8d74907311a06c5c8e05aa8d4c", "url": "https://github.com/mulesoft/mule/commit/11a0d20252c66e8d74907311a06c5c8e05aa8d4c", "message": "PR comments", "committedDate": "2020-08-18T15:46:41Z", "type": "commit"}]}