{"pr_number": 9177, "pr_title": "CMTS-28: Support fetching values by using metadata key resolver", "pr_createdAt": "2020-08-07T20:50:32Z", "pr_url": "https://github.com/mulesoft/mule/pull/9177", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzUwNw==", "url": "https://github.com/mulesoft/mule/pull/9177#discussion_r467267507", "bodyText": "We have already a reflectionCache as an instance field. We could use that one.", "author": "gsfernandes", "createdAt": "2020-08-07T21:03:00Z", "path": "modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java", "diffHunk": "@@ -135,6 +140,24 @@ public ValueResult getValues(ParameterizedElementDeclaration component, String p\n     }\n   }\n \n+  @Override\n+  public MetadataResult<MetadataKeysContainer> getMetadataKeys(ComponentElementDeclaration component) {\n+    return artifactHelper()\n+        .findComponentModel(component)\n+        .map(cm -> {\n+          Optional<ConfigurationInstance> configurationInstance =\n+              ofNullable(component.getConfigRef()).flatMap(name -> artifactHelper().getConfigurationInstance(name));\n+          MetadataKey metadataKey = buildMetadataKey(cm, component);\n+          ClassLoader extensionClassLoader = getClassLoader(artifactHelper().getExtensionModel(component));\n+          return withContextClassLoader(extensionClassLoader, () -> {\n+            DefaultMetadataContext metadataContext = createMetadataContext(configurationInstance, extensionClassLoader);\n+            return new MetadataMediator<>(cm).getMetadataKeys(metadataContext, metadataKey, new ReflectionCache());", "originalCommit": "d91b686334be8a823b1ebefe02954b7ea689b654", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78e7c3460b2a0d114b294e39f0182675d4f875e6", "chunk": "diff --git a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\nindex e66499f2faa..1d39cc5e000 100644\n--- a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n+++ b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n\n@@ -159,7 +159,7 @@ public class InternalDeclarationSession implements DeclarationSession {\n   }\n \n   @Override\n-  public MetadataResult<ComponentMetadataTypes> getMetadataTypes(ComponentElementDeclaration component) {\n+  public MetadataResult<ComponentMetadataTypesDescriptor> resolveComponentMetadata(ComponentElementDeclaration component) {\n     return artifactHelper()\n         .findComponentModel(component)\n         .map(cm -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzkxNQ==", "url": "https://github.com/mulesoft/mule/pull/9177#discussion_r467267915", "bodyText": "I would say that in this case it should be a failure as the only case for this orElse is if the componentModel is not present or found for the declaration. It would mean that they were trying to resolve keys for a component that is not defined in any of the extension models declared for the session :S", "author": "gsfernandes", "createdAt": "2020-08-07T21:04:10Z", "path": "modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java", "diffHunk": "@@ -135,6 +140,24 @@ public ValueResult getValues(ParameterizedElementDeclaration component, String p\n     }\n   }\n \n+  @Override\n+  public MetadataResult<MetadataKeysContainer> getMetadataKeys(ComponentElementDeclaration component) {\n+    return artifactHelper()\n+        .findComponentModel(component)\n+        .map(cm -> {\n+          Optional<ConfigurationInstance> configurationInstance =\n+              ofNullable(component.getConfigRef()).flatMap(name -> artifactHelper().getConfigurationInstance(name));\n+          MetadataKey metadataKey = buildMetadataKey(cm, component);\n+          ClassLoader extensionClassLoader = getClassLoader(artifactHelper().getExtensionModel(component));\n+          return withContextClassLoader(extensionClassLoader, () -> {\n+            DefaultMetadataContext metadataContext = createMetadataContext(configurationInstance, extensionClassLoader);\n+            return new MetadataMediator<>(cm).getMetadataKeys(metadataContext, metadataKey, new ReflectionCache());\n+          });\n+        })\n+        .orElseGet(() -> MetadataResult.success(MetadataKeysContainerBuilder.getInstance()", "originalCommit": "d91b686334be8a823b1ebefe02954b7ea689b654", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI5ODc5Mw==", "url": "https://github.com/mulesoft/mule/pull/9177#discussion_r467298793", "bodyText": "Please review the same case for types. It should fail if component is not found", "author": "gsfernandes", "createdAt": "2020-08-07T21:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "78e7c3460b2a0d114b294e39f0182675d4f875e6", "chunk": "diff --git a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\nindex e66499f2faa..1d39cc5e000 100644\n--- a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n+++ b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n\n@@ -159,7 +159,7 @@ public class InternalDeclarationSession implements DeclarationSession {\n   }\n \n   @Override\n-  public MetadataResult<ComponentMetadataTypes> getMetadataTypes(ComponentElementDeclaration component) {\n+  public MetadataResult<ComponentMetadataTypesDescriptor> resolveComponentMetadata(ComponentElementDeclaration component) {\n     return artifactHelper()\n         .findComponentModel(component)\n         .map(cm -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU1MTQ5OQ==", "url": "https://github.com/mulesoft/mule/pull/9177#discussion_r468551499", "bodyText": "getMetadataKeyPartsValuesFromComponentDeclaration?", "author": "gsfernandes", "createdAt": "2020-08-11T12:45:45Z", "path": "modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java", "diffHunk": "@@ -259,15 +273,13 @@ private MetadataKey buildMetadataKey(ComponentModel componentModel, ComponentEle\n         .collect(toList());\n   }\n \n-  private <T extends ComponentModel> Map<String, Object> getComponentElementDeclarationParameters(ComponentElementDeclaration componentElementDeclaration,\n-                                                                                                  T model) {\n-    Map<String, Object> parametersMap = new HashMap<>();\n+  private <T extends ComponentModel> Map<String, String> getParameterValues(ComponentElementDeclaration componentElementDeclaration,", "originalCommit": "314066a77fbb8ec757c9eace61044dac1ef411dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "78e7c3460b2a0d114b294e39f0182675d4f875e6", "chunk": "diff --git a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\nindex 05caa011724..1d39cc5e000 100644\n--- a/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n+++ b/modules/tooling-support-parent/tooling-support/src/main/java/org/mule/runtime/module/tooling/internal/config/InternalDeclarationSession.java\n\n@@ -273,13 +259,15 @@ public class InternalDeclarationSession implements DeclarationSession {\n         .collect(toList());\n   }\n \n-  private <T extends ComponentModel> Map<String, String> getParameterValues(ComponentElementDeclaration componentElementDeclaration,\n-                                                                            T model) {\n-    Map<String, String> parametersMap = new HashMap<>();\n+  private <T extends ComponentModel> Map<String, Object> getComponentElementDeclarationParameters(ComponentElementDeclaration componentElementDeclaration,\n+                                                                                                  T model) {\n+    Map<String, Object> parametersMap = new HashMap<>();\n \n     Map<String, ParameterGroupModel> parameterGroups =\n         model.getParameterGroupModels().stream().collect(toMap(NamedObject::getName, identity()));\n \n+    List<String> parameterGroupsResolved = new ArrayList<>();\n+\n     for (ParameterGroupElementDeclaration parameterGroupElement : componentElementDeclaration.getParameterGroups()) {\n       final String parameterGroupName = parameterGroupElement.getName();\n       final ParameterGroupModel parameterGroupModel = parameterGroups.get(parameterGroupName);\n"}}, {"oid": "78e7c3460b2a0d114b294e39f0182675d4f875e6", "url": "https://github.com/mulesoft/mule/commit/78e7c3460b2a0d114b294e39f0182675d4f875e6", "message": "CMTS-28: Support fetching values by using metadata key resolver", "committedDate": "2020-08-11T15:10:53Z", "type": "commit"}, {"oid": "b374eb2684510f75b0ed43a64ff89cff1761ba7a", "url": "https://github.com/mulesoft/mule/commit/b374eb2684510f75b0ed43a64ff89cff1761ba7a", "message": "PR comments", "committedDate": "2020-08-11T15:24:54Z", "type": "commit"}, {"oid": "8b546966028ea93d113b47744b334f864d229f31", "url": "https://github.com/mulesoft/mule/commit/8b546966028ea93d113b47744b334f864d229f31", "message": "comments", "committedDate": "2020-08-11T15:25:03Z", "type": "commit"}, {"oid": "8837f4f4d817a67a05d175a1bc360aaf050c8872", "url": "https://github.com/mulesoft/mule/commit/8837f4f4d817a67a05d175a1bc360aaf050c8872", "message": "merge fixes", "committedDate": "2020-08-11T16:00:08Z", "type": "commit"}, {"oid": "8837f4f4d817a67a05d175a1bc360aaf050c8872", "url": "https://github.com/mulesoft/mule/commit/8837f4f4d817a67a05d175a1bc360aaf050c8872", "message": "merge fixes", "committedDate": "2020-08-11T16:00:08Z", "type": "forcePushed"}]}