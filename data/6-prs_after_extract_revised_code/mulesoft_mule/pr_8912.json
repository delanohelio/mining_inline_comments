{"pr_number": 8912, "pr_title": "MULE-18454: Cannot serialize artifact declaration using the managed oAuth connection provider", "pr_createdAt": "2020-06-10T18:46:30Z", "pr_url": "https://github.com/mulesoft/mule/pull/8912", "timeline": [{"oid": "42ec2e92bfa80f3be54a8949b734997ae5ff9490", "url": "https://github.com/mulesoft/mule/commit/42ec2e92bfa80f3be54a8949b734997ae5ff9490", "message": "added test case", "committedDate": "2020-06-10T18:41:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODgyNQ==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r438368825", "bodyText": "Same comment as in mulesoft/mule-integration-tests#1007 regarding the way the property is set.", "author": "ndinu", "createdAt": "2020-06-10T19:47:57Z", "path": "modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.resources;\n+\n+import static java.lang.String.format;\n+import static java.util.Arrays.asList;\n+import static java.util.stream.Collectors.toList;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n+import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.core.api.registry.ServiceRegistry;\n+import org.mule.runtime.extension.api.loader.DeclarationEnricher;\n+import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n+import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n+import org.mule.runtime.module.extension.internal.loader.enricher.JavaXmlDeclarationEnricher;\n+import org.mule.test.oauth.TestOAuthExtension;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.BiFunction;\n+\n+import org.junit.AfterClass;\n+import org.junit.runners.Parameterized;\n+\n+public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n+\n+  static final Map<String, ExtensionModel> extensionModels = new HashMap<>();\n+\n+  private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n+\n+  @Parameterized.Parameters(name = \"{1}\")\n+  public static Collection<Object[]> data() {\n+    System.setProperty(OCS_ENABLED, \"true\");", "originalCommit": "42ec2e92bfa80f3be54a8949b734997ae5ff9490", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4b264d62b455e8bd700ff2e6a5d18ebeba61b58", "chunk": "diff --git a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\nindex 4fc16027a90..8054fda6762 100644\n--- a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n+++ b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n\n@@ -6,67 +6,32 @@\n  */\n package org.mule.runtime.module.extension.internal.resources;\n \n-import static java.lang.String.format;\n-import static java.util.Arrays.asList;\n-import static java.util.stream.Collectors.toList;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n \n-import org.mule.runtime.api.meta.model.ExtensionModel;\n-import org.mule.runtime.core.api.registry.ServiceRegistry;\n-import org.mule.runtime.extension.api.loader.DeclarationEnricher;\n import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n-import org.mule.runtime.module.extension.internal.loader.enricher.JavaXmlDeclarationEnricher;\n+import org.mule.tck.junit4.rule.SystemProperty;\n import org.mule.test.oauth.TestOAuthExtension;\n \n import java.util.Collection;\n-import java.util.HashMap;\n+import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n-import java.util.function.BiFunction;\n \n-import org.junit.AfterClass;\n import org.junit.runners.Parameterized;\n \n public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n \n-  static final Map<String, ExtensionModel> extensionModels = new HashMap<>();\n-\n   private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n \n   @Parameterized.Parameters(name = \"{1}\")\n   public static Collection<Object[]> data() {\n-    System.setProperty(OCS_ENABLED, \"true\");\n-    final ClassLoader classLoader = ExtensionModelJsonGeneratorTestCase.class.getClassLoader();\n-    final ServiceRegistry serviceRegistry = mock(ServiceRegistry.class);\n-    when(serviceRegistry.lookupProviders(DeclarationEnricher.class, classLoader))\n-        .thenReturn(asList(new JavaXmlDeclarationEnricher()));\n-\n-    List<ExtensionJsonGeneratorTestUnit> extensions;\n-    extensions = asList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n-\n-    BiFunction<Class<?>, ExtensionModelLoader, ExtensionModel> createExtensionModel = (extension, loader) -> {\n-      ExtensionModel model = loadExtension(extension, loader);\n-\n-      if (extensionModels.put(model.getName(), model) != null) {\n-        throw new IllegalArgumentException(format(\"Extension names must be unique. Name [%s] for extension [%s] was already used\",\n-                                                  model.getName(), extension.getName()));\n-      }\n-\n-      return model;\n-    };\n-\n-    return extensions.stream()\n-        .map(e -> e.toTestParams(createExtensionModel))\n-        .collect(toList());\n-  }\n-\n-  @AfterClass\n-  public static void afterClass() {\n-    System.clearProperty(OCS_ENABLED);\n+    List<ExtensionJsonGeneratorTestUnit> extensions =\n+        Collections.singletonList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n+    try {\n+      return SystemProperty.runWithProperty(OCS_ENABLED, \"true\", () -> createExtensionModels(extensions));\n+    } catch (Throwable throwable) {\n+      return null;\n+    }\n   }\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MDI3OQ==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r438370279", "bodyText": "Avoid code duplication with parent class.", "author": "ndinu", "createdAt": "2020-06-10T19:50:42Z", "path": "modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.resources;\n+\n+import static java.lang.String.format;\n+import static java.util.Arrays.asList;\n+import static java.util.stream.Collectors.toList;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n+import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.core.api.registry.ServiceRegistry;\n+import org.mule.runtime.extension.api.loader.DeclarationEnricher;\n+import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n+import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n+import org.mule.runtime.module.extension.internal.loader.enricher.JavaXmlDeclarationEnricher;\n+import org.mule.test.oauth.TestOAuthExtension;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.BiFunction;\n+\n+import org.junit.AfterClass;\n+import org.junit.runners.Parameterized;\n+\n+public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n+\n+  static final Map<String, ExtensionModel> extensionModels = new HashMap<>();\n+\n+  private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n+\n+  @Parameterized.Parameters(name = \"{1}\")\n+  public static Collection<Object[]> data() {", "originalCommit": "42ec2e92bfa80f3be54a8949b734997ae5ff9490", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a4b264d62b455e8bd700ff2e6a5d18ebeba61b58", "chunk": "diff --git a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\nindex 4fc16027a90..8054fda6762 100644\n--- a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n+++ b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n\n@@ -6,67 +6,32 @@\n  */\n package org.mule.runtime.module.extension.internal.resources;\n \n-import static java.lang.String.format;\n-import static java.util.Arrays.asList;\n-import static java.util.stream.Collectors.toList;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n \n-import org.mule.runtime.api.meta.model.ExtensionModel;\n-import org.mule.runtime.core.api.registry.ServiceRegistry;\n-import org.mule.runtime.extension.api.loader.DeclarationEnricher;\n import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n-import org.mule.runtime.module.extension.internal.loader.enricher.JavaXmlDeclarationEnricher;\n+import org.mule.tck.junit4.rule.SystemProperty;\n import org.mule.test.oauth.TestOAuthExtension;\n \n import java.util.Collection;\n-import java.util.HashMap;\n+import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n-import java.util.function.BiFunction;\n \n-import org.junit.AfterClass;\n import org.junit.runners.Parameterized;\n \n public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n \n-  static final Map<String, ExtensionModel> extensionModels = new HashMap<>();\n-\n   private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n \n   @Parameterized.Parameters(name = \"{1}\")\n   public static Collection<Object[]> data() {\n-    System.setProperty(OCS_ENABLED, \"true\");\n-    final ClassLoader classLoader = ExtensionModelJsonGeneratorTestCase.class.getClassLoader();\n-    final ServiceRegistry serviceRegistry = mock(ServiceRegistry.class);\n-    when(serviceRegistry.lookupProviders(DeclarationEnricher.class, classLoader))\n-        .thenReturn(asList(new JavaXmlDeclarationEnricher()));\n-\n-    List<ExtensionJsonGeneratorTestUnit> extensions;\n-    extensions = asList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n-\n-    BiFunction<Class<?>, ExtensionModelLoader, ExtensionModel> createExtensionModel = (extension, loader) -> {\n-      ExtensionModel model = loadExtension(extension, loader);\n-\n-      if (extensionModels.put(model.getName(), model) != null) {\n-        throw new IllegalArgumentException(format(\"Extension names must be unique. Name [%s] for extension [%s] was already used\",\n-                                                  model.getName(), extension.getName()));\n-      }\n-\n-      return model;\n-    };\n-\n-    return extensions.stream()\n-        .map(e -> e.toTestParams(createExtensionModel))\n-        .collect(toList());\n-  }\n-\n-  @AfterClass\n-  public static void afterClass() {\n-    System.clearProperty(OCS_ENABLED);\n+    List<ExtensionJsonGeneratorTestUnit> extensions =\n+        Collections.singletonList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n+    try {\n+      return SystemProperty.runWithProperty(OCS_ENABLED, \"true\", () -> createExtensionModels(extensions));\n+    } catch (Throwable throwable) {\n+      return null;\n+    }\n   }\n-\n }\n"}}, {"oid": "a4b264d62b455e8bd700ff2e6a5d18ebeba61b58", "url": "https://github.com/mulesoft/mule/commit/a4b264d62b455e8bd700ff2e6a5d18ebeba61b58", "message": "PR changes", "committedDate": "2020-06-12T19:55:21Z", "type": "commit"}, {"oid": "8ca5942bbe6086edb961b1caf56455dbd64f3e08", "url": "https://github.com/mulesoft/mule/commit/8ca5942bbe6086edb961b1caf56455dbd64f3e08", "message": "ensure after() is called", "committedDate": "2020-06-12T21:19:51Z", "type": "commit"}, {"oid": "3f3ee7ca72682122adce14d69f0bff046debd738", "url": "https://github.com/mulesoft/mule/commit/3f3ee7ca72682122adce14d69f0bff046debd738", "message": "chagned jdoc", "committedDate": "2020-06-14T20:49:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MTQyNg==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r440481426", "bodyText": "The property needs to also be present for the deserialization test.", "author": "ndinu", "createdAt": "2020-06-15T22:27:32Z", "path": "modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.resources;\n+\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n+import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+\n+import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n+import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n+import org.mule.tck.junit4.rule.SystemProperty;\n+import org.mule.test.oauth.TestOAuthExtension;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.runners.Parameterized;\n+\n+public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n+", "originalCommit": "3f3ee7ca72682122adce14d69f0bff046debd738", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MjcxNg==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r441542716", "bodyText": "What do you mean?", "author": "SebaElizalde", "createdAt": "2020-06-17T13:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MTQyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0OTA2NA==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r441549064", "bodyText": "Ignore this comment. I was wrong, I meant the load test, but it is not necessary.", "author": "ndinu", "createdAt": "2020-06-17T13:34:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MTQyNg=="}], "type": "inlineReview", "revised_code": {"commit": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "chunk": "diff --git a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\nindex 8054fda6762..7b545d51600 100644\n--- a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n+++ b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n\n@@ -8,10 +8,10 @@ package org.mule.runtime.module.extension.internal.resources;\n \n import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+import static org.mule.tck.junit4.rule.SystemProperty.callWithProperty;\n \n import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n-import org.mule.tck.junit4.rule.SystemProperty;\n import org.mule.test.oauth.TestOAuthExtension;\n \n import java.util.Collection;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MTU3OQ==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r440481579", "bodyText": "Use static import.", "author": "ndinu", "createdAt": "2020-06-15T22:27:59Z", "path": "modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.resources;\n+\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n+import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+\n+import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n+import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n+import org.mule.tck.junit4.rule.SystemProperty;\n+import org.mule.test.oauth.TestOAuthExtension;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.runners.Parameterized;\n+\n+public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n+\n+  private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n+\n+  @Parameterized.Parameters(name = \"{1}\")\n+  public static Collection<Object[]> data() {\n+    List<ExtensionJsonGeneratorTestUnit> extensions =\n+        Collections.singletonList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n+    try {\n+      return SystemProperty.runWithProperty(OCS_ENABLED, \"true\", () -> createExtensionModels(extensions));", "originalCommit": "3f3ee7ca72682122adce14d69f0bff046debd738", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "chunk": "diff --git a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\nindex 8054fda6762..7b545d51600 100644\n--- a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n+++ b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n\n@@ -8,10 +8,10 @@ package org.mule.runtime.module.extension.internal.resources;\n \n import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+import static org.mule.tck.junit4.rule.SystemProperty.callWithProperty;\n \n import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n-import org.mule.tck.junit4.rule.SystemProperty;\n import org.mule.test.oauth.TestOAuthExtension;\n \n import java.util.Collection;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MjcxMA==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r440482710", "bodyText": "If you need a Callable, rename variable and rename the method.", "author": "ndinu", "createdAt": "2020-06-15T22:31:03Z", "path": "tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java", "diffHunk": "@@ -6,13 +6,33 @@\n  */\n package org.mule.tck.junit4.rule;\n \n+import java.util.concurrent.Callable;\n+\n import org.junit.rules.ExternalResource;\n \n /**\n  * Sets up a system property before a test and guarantees to tear it down afterward.\n  */\n public class SystemProperty extends ExternalResource {\n \n+  /**\n+   * Utility method to execute a callable with a system property and restoring the property's original value afterwards.\n+   *\n+   * @return the return value of the callable, or null if an exception was found during its execution.\n+   */\n+  public static <V> V runWithProperty(String name, String value, Callable<V> runnable) throws Throwable {", "originalCommit": "3f3ee7ca72682122adce14d69f0bff046debd738", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "chunk": "diff --git a/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java b/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\nindex 39e00b56346..9b369bb976a 100644\n--- a/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\n+++ b/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\n\n@@ -18,19 +18,18 @@ public class SystemProperty extends ExternalResource {\n   /**\n    * Utility method to execute a callable with a system property and restoring the property's original value afterwards.\n    *\n-   * @return the return value of the callable, or null if an exception was found during its execution.\n+   * @return the return value of the callable.\n    */\n-  public static <V> V runWithProperty(String name, String value, Callable<V> runnable) throws Throwable {\n-    V callableValue;\n+  public static <V> V callWithProperty(String name, String value, Callable<V> callable) throws Throwable {\n     SystemProperty property = new SystemProperty(name, value);\n     property.before();\n     try {\n-      callableValue = runnable.call();\n+      return callable.call();\n     } catch (Exception e) {\n-      callableValue = null;\n+      throw new Exception(\"Callable threw an exception during its execution.\", e);\n+    } finally {\n+      property.after();\n     }\n-    property.after();\n-    return callableValue;\n   }\n \n   protected boolean initialized;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ4MzI4NA==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r440483284", "bodyText": "I would call the after method in a finally block, and throw and exception if one arises.", "author": "ndinu", "createdAt": "2020-06-15T22:32:43Z", "path": "tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java", "diffHunk": "@@ -6,13 +6,33 @@\n  */\n package org.mule.tck.junit4.rule;\n \n+import java.util.concurrent.Callable;\n+\n import org.junit.rules.ExternalResource;\n \n /**\n  * Sets up a system property before a test and guarantees to tear it down afterward.\n  */\n public class SystemProperty extends ExternalResource {\n \n+  /**\n+   * Utility method to execute a callable with a system property and restoring the property's original value afterwards.\n+   *\n+   * @return the return value of the callable, or null if an exception was found during its execution.\n+   */\n+  public static <V> V runWithProperty(String name, String value, Callable<V> runnable) throws Throwable {\n+    V callableValue;\n+    SystemProperty property = new SystemProperty(name, value);\n+    property.before();\n+    try {\n+      callableValue = runnable.call();\n+    } catch (Exception e) {\n+      callableValue = null;\n+    }\n+    property.after();", "originalCommit": "3f3ee7ca72682122adce14d69f0bff046debd738", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "chunk": "diff --git a/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java b/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\nindex 39e00b56346..9b369bb976a 100644\n--- a/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\n+++ b/tests/unit/src/main/java/org/mule/tck/junit4/rule/SystemProperty.java\n\n@@ -18,19 +18,18 @@ public class SystemProperty extends ExternalResource {\n   /**\n    * Utility method to execute a callable with a system property and restoring the property's original value afterwards.\n    *\n-   * @return the return value of the callable, or null if an exception was found during its execution.\n+   * @return the return value of the callable.\n    */\n-  public static <V> V runWithProperty(String name, String value, Callable<V> runnable) throws Throwable {\n-    V callableValue;\n+  public static <V> V callWithProperty(String name, String value, Callable<V> callable) throws Throwable {\n     SystemProperty property = new SystemProperty(name, value);\n     property.before();\n     try {\n-      callableValue = runnable.call();\n+      return callable.call();\n     } catch (Exception e) {\n-      callableValue = null;\n+      throw new Exception(\"Callable threw an exception during its execution.\", e);\n+    } finally {\n+      property.after();\n     }\n-    property.after();\n-    return callableValue;\n   }\n \n   protected boolean initialized;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1MDA4NA==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r441550084", "bodyText": "Fail if this happens.", "author": "ndinu", "createdAt": "2020-06-17T13:36:19Z", "path": "modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.resources;\n+\n+import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n+import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+\n+import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n+import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n+import org.mule.tck.junit4.rule.SystemProperty;\n+import org.mule.test.oauth.TestOAuthExtension;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.junit.runners.Parameterized;\n+\n+public class OCSExtensionModelJsonGeneratorTestCase extends ExtensionModelJsonGeneratorTestCase {\n+\n+  private static ExtensionModelLoader javaLoader = new DefaultJavaExtensionModelLoader();\n+\n+  @Parameterized.Parameters(name = \"{1}\")\n+  public static Collection<Object[]> data() {\n+    List<ExtensionJsonGeneratorTestUnit> extensions =\n+        Collections.singletonList(newTestUnit(javaLoader, TestOAuthExtension.class, \"test-oauth-ocs.json\"));\n+    try {\n+      return SystemProperty.runWithProperty(OCS_ENABLED, \"true\", () -> createExtensionModels(extensions));\n+    } catch (Throwable throwable) {\n+      return null;", "originalCommit": "3f3ee7ca72682122adce14d69f0bff046debd738", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MTkzMg==", "url": "https://github.com/mulesoft/mule/pull/8912#discussion_r441561932", "bodyText": "Actually, cannot fail here", "author": "SebaElizalde", "createdAt": "2020-06-17T13:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU1MDA4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "chunk": "diff --git a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\nindex 8054fda6762..7b545d51600 100644\n--- a/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n+++ b/modules/extensions-spring-support/src/test/java/org/mule/runtime/module/extension/internal/resources/OCSExtensionModelJsonGeneratorTestCase.java\n\n@@ -8,10 +8,10 @@ package org.mule.runtime.module.extension.internal.resources;\n \n import static org.mule.runtime.extension.internal.ocs.OCSConstants.OCS_ENABLED;\n import static org.mule.runtime.module.extension.internal.resources.ExtensionModelJsonGeneratorTestCase.ExtensionJsonGeneratorTestUnit.newTestUnit;\n+import static org.mule.tck.junit4.rule.SystemProperty.callWithProperty;\n \n import org.mule.runtime.extension.api.loader.ExtensionModelLoader;\n import org.mule.runtime.module.extension.api.loader.java.DefaultJavaExtensionModelLoader;\n-import org.mule.tck.junit4.rule.SystemProperty;\n import org.mule.test.oauth.TestOAuthExtension;\n \n import java.util.Collection;\n"}}, {"oid": "ab34bba5410a0abca85afdda20c2ed6ec465a561", "url": "https://github.com/mulesoft/mule/commit/ab34bba5410a0abca85afdda20c2ed6ec465a561", "message": "pr changes", "committedDate": "2020-06-17T14:49:00Z", "type": "commit"}, {"oid": "f2a2a009ea21d5976fa9c08b5408b243877abdf1", "url": "https://github.com/mulesoft/mule/commit/f2a2a009ea21d5976fa9c08b5408b243877abdf1", "message": "removed unused import", "committedDate": "2020-06-17T14:51:14Z", "type": "commit"}, {"oid": "932015f7c500617f4750049f7a0edf24546f88ac", "url": "https://github.com/mulesoft/mule/commit/932015f7c500617f4750049f7a0edf24546f88ac", "message": "add exception cause", "committedDate": "2020-06-17T18:42:01Z", "type": "commit"}, {"oid": "078654e537342049003686a022905d2940f0d14f", "url": "https://github.com/mulesoft/mule/commit/078654e537342049003686a022905d2940f0d14f", "message": "fixed test init error", "committedDate": "2020-06-17T22:29:27Z", "type": "commit"}, {"oid": "8949841e5146169b329bd0e2fc86f7f299c1c713", "url": "https://github.com/mulesoft/mule/commit/8949841e5146169b329bd0e2fc86f7f299c1c713", "message": "take 2", "committedDate": "2020-06-17T23:22:54Z", "type": "commit"}]}