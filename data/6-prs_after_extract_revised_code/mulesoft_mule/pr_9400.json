{"pr_number": 9400, "pr_title": "MULE-18753: Add live Sample Data fetching capabilities", "pr_createdAt": "2020-09-11T15:08:10Z", "pr_url": "https://github.com/mulesoft/mule/pull/9400", "timeline": [{"oid": "a028aae03449cca1829803cd615d8c4d551534fc", "url": "https://github.com/mulesoft/mule/commit/a028aae03449cca1829803cd615d8c4d551534fc", "message": "model checkpoint", "committedDate": "2020-09-10T19:48:54Z", "type": "commit"}, {"oid": "2dbc5b5a292dc8428df256a540a3566328ef9979", "url": "https://github.com/mulesoft/mule/commit/2dbc5b5a292dc8428df256a540a3566328ef9979", "message": "model checkpoint", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "42b07e07b9ab942cd917d8269620d6a5f8d9784b", "url": "https://github.com/mulesoft/mule/commit/42b07e07b9ab942cd917d8269620d6a5f8d9784b", "message": "need result support", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "0c2d3db8d97f97cf2b12d9c0e4e4780c2bd740e1", "url": "https://github.com/mulesoft/mule/commit/0c2d3db8d97f97cf2b12d9c0e4e4780c2bd740e1", "message": "need result support", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "e71fa88e5f379971b4e13d4cbb7cc7541a2f8a0d", "url": "https://github.com/mulesoft/mule/commit/e71fa88e5f379971b4e13d4cbb7cc7541a2f8a0d", "message": "cleanup", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "1ac0f1c840ff3f11be9c8643d2100391da8cf3e0", "url": "https://github.com/mulesoft/mule/commit/1ac0f1c840ff3f11be9c8643d2100391da8cf3e0", "message": "going full circle", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "fe458219ef9dddaf1ca15aacfded053109fea5da", "url": "https://github.com/mulesoft/mule/commit/fe458219ef9dddaf1ca15aacfded053109fea5da", "message": "details", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "0a778de5cfc84495fda8bfac219c8a6a4d4db5ef", "url": "https://github.com/mulesoft/mule/commit/0a778de5cfc84495fda8bfac219c8a6a4d4db5ef", "message": "validator", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "7784e4d20be98855229bcf942c6dfc99a3393fb5", "url": "https://github.com/mulesoft/mule/commit/7784e4d20be98855229bcf942c6dfc99a3393fb5", "message": "tests", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "06e5e8cb4efff8db4e93a3c222dbc97459e65f56", "url": "https://github.com/mulesoft/mule/commit/06e5e8cb4efff8db4e93a3c222dbc97459e65f56", "message": "catch forward issue", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "fd1f5985b472af126d7f6bbcb20ec779ba41afe6", "url": "https://github.com/mulesoft/mule/commit/fd1f5985b472af126d7f6bbcb20ec779ba41afe6", "message": "success", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "60c0c77353f27e856d2a1388b7fff906b8734d09", "url": "https://github.com/mulesoft/mule/commit/60c0c77353f27e856d2a1388b7fff906b8734d09", "message": "location tests all green", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "d7da71a6c9ca7aa44563a6045742ad0540b69eec", "url": "https://github.com/mulesoft/mule/commit/d7da71a6c9ca7aa44563a6045742ad0540b69eec", "message": "location tests all green", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "771ac4ed2f7ad535c48afbdcfda4798ca5f6bf59", "url": "https://github.com/mulesoft/mule/commit/771ac4ed2f7ad535c48afbdcfda4798ca5f6bf59", "message": "more tests and allure", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "c392063469c6fd659cd5d858c9380828ca0850b6", "url": "https://github.com/mulesoft/mule/commit/c392063469c6fd659cd5d858c9380828ca0850b6", "message": "api tests", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "4da68ef5ef20fdf74d28aff70340c8f47dccd469", "url": "https://github.com/mulesoft/mule/commit/4da68ef5ef20fdf74d28aff70340c8f47dccd469", "message": "api resolution tests", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "5cac7184c59c19ad55fee3e0111db35285d53f6d", "url": "https://github.com/mulesoft/mule/commit/5cac7184c59c19ad55fee3e0111db35285d53f6d", "message": "source tests", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "30a551ceb71c2584cf2e33901a0e9793b81360bb", "url": "https://github.com/mulesoft/mule/commit/30a551ceb71c2584cf2e33901a0e9793b81360bb", "message": "model json test", "committedDate": "2020-09-10T19:48:55Z", "type": "commit"}, {"oid": "ed82fdee26d1977a5d8e2f0a658e6cc660b310e0", "url": "https://github.com/mulesoft/mule/commit/ed82fdee26d1977a5d8e2f0a658e6cc660b310e0", "message": "revert", "committedDate": "2020-09-10T21:02:05Z", "type": "commit"}, {"oid": "d53c53f88c008cd2ae415739ca28266f67122ff7", "url": "https://github.com/mulesoft/mule/commit/d53c53f88c008cd2ae415739ca28266f67122ff7", "message": "self review", "committedDate": "2020-09-11T15:07:28Z", "type": "commit"}, {"oid": "9751391a95444fe1084921bd61d9c2b6d1b74220", "url": "https://github.com/mulesoft/mule/commit/9751391a95444fe1084921bd61d9c2b6d1b74220", "message": "fix test", "committedDate": "2020-09-11T18:31:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxMjU1OA==", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487212558", "bodyText": "Should we take this into account? only operation and sources locations are valid here.", "author": "ndinu", "createdAt": "2020-09-11T18:18:21Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java", "diffHunk": "@@ -0,0 +1,191 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static org.mule.runtime.api.util.Preconditions.checkArgument;\n+import static org.mule.runtime.core.api.util.StringUtils.isBlank;\n+import static org.mule.runtime.core.internal.util.LocationUtils.deleteLastPartFromLocation;\n+import static org.mule.runtime.core.internal.util.LocationUtils.isConnection;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.getImplementingName;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_LOCATION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_TARGET_EXTENSION;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NO_DATA_AVAILABLE;\n+\n+import org.mule.runtime.api.component.AbstractComponent;\n+import org.mule.runtime.api.component.location.ComponentLocation;\n+import org.mule.runtime.api.component.location.ConfigurationComponentLocator;\n+import org.mule.runtime.api.component.location.Location;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.connector.ConnectionManager;\n+import org.mule.runtime.core.api.data.sample.SampleDataService;\n+import org.mule.runtime.core.api.extension.ExtensionManager;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.core.api.util.func.CheckedSupplier;\n+import org.mule.runtime.dsl.api.component.config.DefaultComponentLocation;\n+import org.mule.runtime.extension.api.data.sample.ComponentSampleDataProvider;\n+import org.mule.runtime.extension.api.runtime.config.ConfigurationInstance;\n+import org.mule.runtime.module.extension.internal.ExtensionResolvingContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.StaticParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+\n+/**\n+ * Default implementation of {@link SampleDataService}\n+ *\n+ * @since 4.4.0\n+ */\n+public class MuleSampleDataService implements SampleDataService {\n+\n+  private ConfigurationComponentLocator componentLocator;\n+  private ExtensionManager extensionManager;\n+  private MuleContext muleContext;\n+  private StreamingManager streamingManager;\n+  private ConnectionManager connectionManager;\n+\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public Message getSampleData(Location location) throws SampleDataException {\n+    boolean isConnection = isConnection(location);", "originalCommit": "d53c53f88c008cd2ae415739ca28266f67122ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "chunk": "diff --git a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java\nindex 44626a14e83..319375bc39b 100644\n--- a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java\n+++ b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/MuleSampleDataService.java\n\n@@ -9,8 +9,6 @@ package org.mule.runtime.module.extension.internal.data.sample;\n import static java.lang.String.format;\n import static org.mule.runtime.api.util.Preconditions.checkArgument;\n import static org.mule.runtime.core.api.util.StringUtils.isBlank;\n-import static org.mule.runtime.core.internal.util.LocationUtils.deleteLastPartFromLocation;\n-import static org.mule.runtime.core.internal.util.LocationUtils.isConnection;\n import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.getImplementingName;\n import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_LOCATION;\n import static org.mule.sdk.api.data.sample.SampleDataException.INVALID_TARGET_EXTENSION;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNDYyMQ==", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487214621", "bodyText": "injectSampleDataProviderFields?", "author": "ndinu", "createdAt": "2020-09-11T18:22:37Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static org.mule.runtime.core.api.lifecycle.LifecycleUtils.initialiseIfNeeded;\n+import static org.mule.runtime.core.api.util.ClassUtils.instantiateClass;\n+import static org.mule.runtime.module.extension.internal.util.IntrospectionUtils.setValueIntoField;\n+import static org.mule.sdk.api.data.sample.SampleDataException.CONNECTION_FAILURE;\n+import static org.mule.sdk.api.data.sample.SampleDataException.MISSING_REQUIRED_PARAMETERS;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+import static org.slf4j.LoggerFactory.getLogger;\n+\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.module.extension.internal.loader.java.property.InjectableParameterInfo;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.ValueResolvingException;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+\n+/**\n+ * Provides instances of {@link SampleDataProvider}\n+ *\n+ * @since 4.4.0\n+ */\n+public class SampleDataProviderFactory {\n+\n+  private static final Logger LOGGER = getLogger(SampleDataProviderFactory.class);\n+\n+  private final SampleDataProviderFactoryModelProperty factoryModelProperty;\n+  private final ParameterValueResolver parameterValueResolver;\n+  private final Supplier<Object> connectionSupplier;\n+  private final Supplier<Object> configurationSupplier;\n+  private final Field connectionField;\n+  private final Field configField;\n+  private final ReflectionCache reflectionCache;\n+  private final MuleContext muleContext;\n+\n+  public SampleDataProviderFactory(SampleDataProviderFactoryModelProperty factoryModelProperty,\n+                                   ParameterValueResolver parameterValueResolver,\n+                                   Supplier<Object> connectionSupplier,\n+                                   Supplier<Object> configurationSupplier,\n+                                   Field connectionField,\n+                                   Field configField,\n+                                   ReflectionCache reflectionCache,\n+                                   MuleContext muleContext) {\n+    this.factoryModelProperty = factoryModelProperty;\n+    this.parameterValueResolver = parameterValueResolver;\n+    this.connectionSupplier = connectionSupplier;\n+    this.configurationSupplier = configurationSupplier;\n+    this.connectionField = connectionField;\n+    this.configField = configField;\n+    this.reflectionCache = reflectionCache;\n+    this.muleContext = muleContext;\n+  }\n+\n+  <T, A> SampleDataProvider<T, A> createSampleDataProvider() throws SampleDataException {\n+    Class<? extends SampleDataProvider<T, A>> providerClass = factoryModelProperty.getSampleDataProviderClass();\n+\n+    try {\n+      SampleDataProvider<T, A> resolver = instantiateClass(providerClass);\n+      initialiseIfNeeded(resolver, true, muleContext);\n+\n+      injectValueProviderFields(resolver);", "originalCommit": "d53c53f88c008cd2ae415739ca28266f67122ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "chunk": "diff --git a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java\nindex 8a3e077836e..a04e3525629 100644\n--- a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java\n+++ b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderFactory.java\n\n@@ -73,7 +73,7 @@ public class SampleDataProviderFactory {\n       SampleDataProvider<T, A> resolver = instantiateClass(providerClass);\n       initialiseIfNeeded(resolver, true, muleContext);\n \n-      injectValueProviderFields(resolver);\n+      injectProviderFields(resolver);\n \n       if (factoryModelProperty.usesConnection()) {\n         Object connection;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxNTAwMw==", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487215003", "bodyText": "delete SampleDataDeclarationEnricher", "author": "ndinu", "createdAt": "2020-09-11T18:23:28Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import static java.lang.String.format;\n+import static java.util.Collections.emptyMap;\n+import static java.util.Optional.empty;\n+import static java.util.Optional.ofNullable;\n+import static org.mule.runtime.core.internal.event.NullEventFactory.getNullEvent;\n+import static org.mule.runtime.core.internal.management.stats.NoOpCursorComponentDecoratorFactory.NO_OP_INSTANCE;\n+import static org.mule.runtime.core.internal.util.rx.ImmediateScheduler.IMMEDIATE_SCHEDULER;\n+import static org.mule.sdk.api.data.sample.SampleDataException.NOT_SUPPORTED;\n+import static org.mule.sdk.api.data.sample.SampleDataException.UNKNOWN;\n+\n+import org.mule.runtime.api.component.Component;\n+import org.mule.runtime.api.message.Message;\n+import org.mule.runtime.api.meta.model.ComponentModel;\n+import org.mule.runtime.api.meta.model.EnrichableModel;\n+import org.mule.runtime.api.meta.model.ExtensionModel;\n+import org.mule.runtime.api.meta.model.parameter.ParameterizedModel;\n+import org.mule.runtime.core.api.MuleContext;\n+import org.mule.runtime.core.api.retry.policy.NoRetryPolicyTemplate;\n+import org.mule.runtime.core.api.streaming.CursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.NullCursorProviderFactory;\n+import org.mule.runtime.core.api.streaming.StreamingManager;\n+import org.mule.runtime.module.extension.api.runtime.privileged.ExecutionContextAdapter;\n+import org.mule.runtime.module.extension.internal.loader.java.property.SampleDataProviderFactoryModelProperty;\n+import org.mule.runtime.module.extension.internal.runtime.DefaultExecutionContext;\n+import org.mule.runtime.module.extension.internal.runtime.resolver.ParameterValueResolver;\n+import org.mule.runtime.module.extension.internal.runtime.result.ReturnDelegate;\n+import org.mule.runtime.module.extension.internal.runtime.result.ValueReturnDelegate;\n+import org.mule.runtime.module.extension.internal.util.ReflectionCache;\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+import org.mule.sdk.api.runtime.operation.Result;\n+\n+import java.util.function.Supplier;\n+\n+/**\n+ * Coordinates all the moving parts necessary to provision and execute a {@link SampleDataProvider},\n+ * handling possible errors and transforming the output into a {@link Message}\n+ *\n+ * @since 4.4.0SampleDataDeclarationEnricher", "originalCommit": "d53c53f88c008cd2ae415739ca28266f67122ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "chunk": "diff --git a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\nindex a08313d698f..aa92ee171c4 100644\n--- a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n+++ b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n\n@@ -44,7 +44,7 @@ import java.util.function.Supplier;\n  * Coordinates all the moving parts necessary to provision and execute a {@link SampleDataProvider},\n  * handling possible errors and transforming the output into a {@link Message}\n  *\n- * @since 4.4.0SampleDataDeclarationEnricher\n+ * @since 4.4.0\n  */\n public class SampleDataProviderMediator {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNDgyMQ==", "url": "https://github.com/mulesoft/mule/pull/9400#discussion_r487224821", "bodyText": "Creates", "author": "ndinu", "createdAt": "2020-09-11T18:43:59Z", "path": "modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com\n+ * The software in this package is published under the terms of the CPAL v1.0\n+ * license, a copy of which has been included with this distribution in the\n+ * LICENSE.txt file.\n+ */\n+package org.mule.runtime.module.extension.internal.data.sample;\n+\n+import org.mule.sdk.api.data.sample.SampleDataException;\n+import org.mule.sdk.api.data.sample.SampleDataProvider;\n+\n+import org.hamcrest.BaseMatcher;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+\n+/**\n+ * Utilities for testing {@link SampleDataProvider} functionalities\n+ *\n+ * @since 4.4.0\n+ */\n+public final class SampleDataTestUtils {\n+\n+  private SampleDataTestUtils() {}\n+\n+  /**\n+   * Creaes a matcher that tests that a {@link SampleDataException} has the given {@code failureCode}", "originalCommit": "d53c53f88c008cd2ae415739ca28266f67122ff7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "chunk": "diff --git a/modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java b/modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java\nindex c29fc051efd..d7b3a2ba000 100644\n--- a/modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java\n+++ b/modules/extensions-support/src/test/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataTestUtils.java\n\n@@ -23,7 +23,7 @@ public final class SampleDataTestUtils {\n   private SampleDataTestUtils() {}\n \n   /**\n-   * Creaes a matcher that tests that a {@link SampleDataException} has the given {@code failureCode}\n+   * Creates a matcher that tests that a {@link SampleDataException} has the given {@code failureCode}\n    *\n    * @param failureCode the expected failure code\n    * @return a {@link Matcher}\n"}}, {"oid": "bc8d5406a6264a5bfa4a792b202984c3cb19c798", "url": "https://github.com/mulesoft/mule/commit/bc8d5406a6264a5bfa4a792b202984c3cb19c798", "message": "feedback", "committedDate": "2020-09-11T19:37:41Z", "type": "commit"}, {"oid": "9efc0944b69d7feafc2d42e582469f77b7472753", "url": "https://github.com/mulesoft/mule/commit/9efc0944b69d7feafc2d42e582469f77b7472753", "message": "revert", "committedDate": "2020-09-11T19:43:37Z", "type": "commit"}]}