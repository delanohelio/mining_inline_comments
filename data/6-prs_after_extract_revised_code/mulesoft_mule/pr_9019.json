{"pr_number": 9019, "pr_title": "MULE-18548: In memory object store used in cache should be able to be expired in secondary node", "pr_createdAt": "2020-07-02T18:40:21Z", "pr_url": "https://github.com/mulesoft/mule/pull/9019", "timeline": [{"oid": "b0fae4085bbe6ebc380e2b3ce1cdf909acc65dc0", "url": "https://github.com/mulesoft/mule/commit/b0fae4085bbe6ebc380e2b3ce1cdf909acc65dc0", "message": "MULE-18548: In memory object store used in cache should be able to be expired in secondary node", "committedDate": "2020-07-02T18:39:15Z", "type": "commit"}, {"oid": "b0c4fa4df59ca8bb9a2938475aa22d3db4d79754", "url": "https://github.com/mulesoft/mule/commit/b0c4fa4df59ca8bb9a2938475aa22d3db4d79754", "message": "unit test", "committedDate": "2020-07-02T19:00:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxNzA5OA==", "url": "https://github.com/mulesoft/mule/pull/9019#discussion_r449617098", "bodyText": "poller", "author": "elrodro83", "createdAt": "2020-07-03T14:43:54Z", "path": "core/src/test/java/org/mule/util/store/InMemoryStoreTestCase.java", "diffHunk": "@@ -47,6 +50,28 @@ public void testSimpleTimedExpiry() throws Exception\n         assertObjectsExpired(\"1\", \"2\", \"3\");\n     }\n \n+    @Test\n+    public void testSimpleTimedExpiryInSecondaryNode() throws Exception\n+    {\n+        int entryTTL = 3000;\n+        createTimedObjectStore(entryTTL);\n+        MuleContext context = mock(MuleContext.class);\n+        when(context.isPrimaryPollingInstance()).thenReturn(false);\n+        store.setMuleContext(context);\n+\n+        // store entries in quick succession\n+        storeObjects(\"1\", \"2\", \"3\");\n+\n+        // they should still be alive at this point\n+        assertObjectsInStore(\"1\", \"2\", \"3\");\n+\n+        // wait until the entry TTL has been exceeded\n+        Thread.sleep(entryTTL + 1000);", "originalCommit": "b0c4fa4df59ca8bb9a2938475aa22d3db4d79754", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "22c17336b35b85ed5fbffd5c308ad572e2a2f6b4", "chunk": "diff --git a/core/src/test/java/org/mule/util/store/InMemoryStoreTestCase.java b/core/src/test/java/org/mule/util/store/InMemoryStoreTestCase.java\nindex b5a1b58a0fd..1e30296ec05 100644\n--- a/core/src/test/java/org/mule/util/store/InMemoryStoreTestCase.java\n+++ b/core/src/test/java/org/mule/util/store/InMemoryStoreTestCase.java\n\n@@ -60,16 +63,31 @@ public class InMemoryStoreTestCase extends AbstractMuleTestCase\n         store.setMuleContext(context);\n \n         // store entries in quick succession\n-        storeObjects(\"1\", \"2\", \"3\");\n+        storeObjects(\"1\");\n \n         // they should still be alive at this point\n-        assertObjectsInStore(\"1\", \"2\", \"3\");\n+        assertObjectsInStore(\"1\");\n \n         // wait until the entry TTL has been exceeded\n-        Thread.sleep(entryTTL + 1000);\n+        PollingProber prober = new PollingProber(entryTTL + 1000, 500);\n+        prober.check(new Probe()\n+        {\n+            @Override\n+            public boolean isSatisfied()\n+            {\n+                try {\n+                    return store.contains(\"1\");\n+                } catch (ObjectStoreException e) {\n+                    return false;\n+                }\n+            }\n \n-        // make sure all values are gone\n-        assertObjectsExpired(\"1\", \"2\", \"3\");\n+            @Override\n+            public String describeFailure()\n+            {\n+                return \"Expected entry to have expired\";\n+            }\n+        });\n     }\n \n     @Test\n"}}, {"oid": "22c17336b35b85ed5fbffd5c308ad572e2a2f6b4", "url": "https://github.com/mulesoft/mule/commit/22c17336b35b85ed5fbffd5c308ad572e2a2f6b4", "message": "review", "committedDate": "2020-07-03T16:26:47Z", "type": "commit"}]}