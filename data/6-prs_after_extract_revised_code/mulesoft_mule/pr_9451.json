{"pr_number": 9451, "pr_title": "MULE-18778: Sample Data resolution must take into account oauth token refresh", "pr_createdAt": "2020-09-23T04:29:48Z", "pr_url": "https://github.com/mulesoft/mule/pull/9451", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTAwMQ==", "url": "https://github.com/mulesoft/mule/pull/9451#discussion_r494369001", "bodyText": "you're already providing the config. You should expose this in the API", "author": "marianogonzalez", "createdAt": "2020-09-24T14:32:43Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "diffHunk": "@@ -96,6 +98,28 @@ public Message getSampleData(ParameterValueResolver parameterValueResolver,\n                                Supplier<Object> connectionSupplier,\n                                Supplier<Object> configurationSupplier)\n       throws SampleDataException {\n+    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, null);\n+  }\n+\n+  /**\n+   * Resolves the sample data\n+   *\n+   * @param parameterValueResolver  parameter resolver required if the associated {@link SampleDataProvider} requires\n+   *                                the value of parameters from the same parameter container.\n+   * @param connectionSupplier      supplier of connection instances related to the container and used, if necessary,\n+   *                                by the {@link SampleDataProvider}\n+   * @param configurationSupplier   supplier of connection instances related to the container and used, if necessary,\n+   *                                by the  {@link SampleDataProvider}\n+   * @param connectionProvider      the connection provider in charge of providing the connection given by the connection supplier.\n+   *\n+   * @return a {@link Message} carrying the sample data\n+   * @throws SampleDataException if an error occurs resolving the sample data\n+   */\n+  public Message getSampleData(ParameterValueResolver parameterValueResolver,\n+                               Supplier<Object> connectionSupplier,\n+                               Supplier<Object> configurationSupplier,\n+                               ConnectionProvider connectionProvider)", "originalCommit": "d64e0faf6ae8f039eb3dd8ec662c7bd346019f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxNDE4OA==", "url": "https://github.com/mulesoft/mule/pull/9451#discussion_r494414188", "bodyText": "I did not understand this comment, could you rephrase?", "author": "ndinu", "createdAt": "2020-09-24T15:31:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQzODg5NA==", "url": "https://github.com/mulesoft/mule/pull/9451#discussion_r494438894", "bodyText": "In order to give me the connection provider, the caller needed to create the configuration. What I can do is to receive a Supplier and only do it only if necessary.\nThe util method that makes the refresh of the token will also need to receive the Supplier instead of the provider directly.", "author": "ndinu", "createdAt": "2020-09-24T16:06:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c5a114545986872242cf7d69b77d66071e1cd83f", "chunk": "diff --git a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\nindex a4a0010f8e4..a74d6de22f2 100644\n--- a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n+++ b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n\n@@ -98,19 +98,20 @@ public class SampleDataProviderMediator {\n                                Supplier<Object> connectionSupplier,\n                                Supplier<Object> configurationSupplier)\n       throws SampleDataException {\n-    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, null);\n+    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, () -> null);\n   }\n \n   /**\n    * Resolves the sample data\n    *\n-   * @param parameterValueResolver  parameter resolver required if the associated {@link SampleDataProvider} requires\n-   *                                the value of parameters from the same parameter container.\n-   * @param connectionSupplier      supplier of connection instances related to the container and used, if necessary,\n-   *                                by the {@link SampleDataProvider}\n-   * @param configurationSupplier   supplier of connection instances related to the container and used, if necessary,\n-   *                                by the  {@link SampleDataProvider}\n-   * @param connectionProvider      the connection provider in charge of providing the connection given by the connection supplier.\n+   * @param parameterValueResolver       parameter resolver required if the associated {@link SampleDataProvider} requires\n+   *                                     the value of parameters from the same parameter container.\n+   * @param connectionSupplier           supplier of connection instances related to the container and used, if necessary,\n+   *                                     by the {@link SampleDataProvider}\n+   * @param configurationSupplier        supplier of configuration instance related to the container and used, if necessary,\n+   *                                     by the  {@link SampleDataProvider}\n+   * @param connectionProviderSupplier   the connection provider in charge of providing the connection given by the\n+   *                                     connection supplier.\n    *\n    * @return a {@link Message} carrying the sample data\n    * @throws SampleDataException if an error occurs resolving the sample data\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MjE3NQ==", "url": "https://github.com/mulesoft/mule/pull/9451#discussion_r494592175", "bodyText": "typo, should say supplier of configurations instances", "author": "SebaElizalde", "createdAt": "2020-09-24T20:30:05Z", "path": "modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java", "diffHunk": "@@ -96,6 +98,28 @@ public Message getSampleData(ParameterValueResolver parameterValueResolver,\n                                Supplier<Object> connectionSupplier,\n                                Supplier<Object> configurationSupplier)\n       throws SampleDataException {\n+    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, null);\n+  }\n+\n+  /**\n+   * Resolves the sample data\n+   *\n+   * @param parameterValueResolver  parameter resolver required if the associated {@link SampleDataProvider} requires\n+   *                                the value of parameters from the same parameter container.\n+   * @param connectionSupplier      supplier of connection instances related to the container and used, if necessary,\n+   *                                by the {@link SampleDataProvider}\n+   * @param configurationSupplier   supplier of connection instances related to the container and used, if necessary,", "originalCommit": "d64e0faf6ae8f039eb3dd8ec662c7bd346019f6e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c5a114545986872242cf7d69b77d66071e1cd83f", "chunk": "diff --git a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\nindex a4a0010f8e4..a74d6de22f2 100644\n--- a/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n+++ b/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/data/sample/SampleDataProviderMediator.java\n\n@@ -98,19 +98,20 @@ public class SampleDataProviderMediator {\n                                Supplier<Object> connectionSupplier,\n                                Supplier<Object> configurationSupplier)\n       throws SampleDataException {\n-    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, null);\n+    return getSampleData(parameterValueResolver, connectionSupplier, configurationSupplier, () -> null);\n   }\n \n   /**\n    * Resolves the sample data\n    *\n-   * @param parameterValueResolver  parameter resolver required if the associated {@link SampleDataProvider} requires\n-   *                                the value of parameters from the same parameter container.\n-   * @param connectionSupplier      supplier of connection instances related to the container and used, if necessary,\n-   *                                by the {@link SampleDataProvider}\n-   * @param configurationSupplier   supplier of connection instances related to the container and used, if necessary,\n-   *                                by the  {@link SampleDataProvider}\n-   * @param connectionProvider      the connection provider in charge of providing the connection given by the connection supplier.\n+   * @param parameterValueResolver       parameter resolver required if the associated {@link SampleDataProvider} requires\n+   *                                     the value of parameters from the same parameter container.\n+   * @param connectionSupplier           supplier of connection instances related to the container and used, if necessary,\n+   *                                     by the {@link SampleDataProvider}\n+   * @param configurationSupplier        supplier of configuration instance related to the container and used, if necessary,\n+   *                                     by the  {@link SampleDataProvider}\n+   * @param connectionProviderSupplier   the connection provider in charge of providing the connection given by the\n+   *                                     connection supplier.\n    *\n    * @return a {@link Message} carrying the sample data\n    * @throws SampleDataException if an error occurs resolving the sample data\n"}}, {"oid": "e17c97d71cebccec6f3b118b6801799d21020466", "url": "https://github.com/mulesoft/mule/commit/e17c97d71cebccec6f3b118b6801799d21020466", "message": "MULE-18778: Sample Data resolution must take into account oauth token refresh", "committedDate": "2020-10-05T14:26:06Z", "type": "commit"}, {"oid": "c5a114545986872242cf7d69b77d66071e1cd83f", "url": "https://github.com/mulesoft/mule/commit/c5a114545986872242cf7d69b77d66071e1cd83f", "message": "Adds requested changes", "committedDate": "2020-10-05T14:26:06Z", "type": "commit"}, {"oid": "c5a114545986872242cf7d69b77d66071e1cd83f", "url": "https://github.com/mulesoft/mule/commit/c5a114545986872242cf7d69b77d66071e1cd83f", "message": "Adds requested changes", "committedDate": "2020-10-05T14:26:06Z", "type": "forcePushed"}]}