{"pr_number": 8608, "pr_title": "MULE-18006: ClassLoader leak in mule 3 leads to undeployment error in Windows for mule 3.9.x", "pr_createdAt": "2020-01-27T21:03:04Z", "pr_url": "https://github.com/mulesoft/mule/pull/8608", "timeline": [{"oid": "f63ebcab8b16b7484adb72f8950c6751e4be4567", "url": "https://github.com/mulesoft/mule/commit/f63ebcab8b16b7484adb72f8950c6751e4be4567", "message": "Fix", "committedDate": "2020-01-27T19:49:53Z", "type": "commit"}, {"oid": "ecad1e9ad844b0df8d627bf0e87f3d400cb16782", "url": "https://github.com/mulesoft/mule/commit/ecad1e9ad844b0df8d627bf0e87f3d400cb16782", "message": "test", "committedDate": "2020-01-27T20:59:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwNTg4MA==", "url": "https://github.com/mulesoft/mule/pull/8608#discussion_r371805880", "bodyText": "add a comment to clarify why we have to hook this up", "author": "gsfernandes", "createdAt": "2020-01-28T13:38:35Z", "path": "modules/launcher/src/main/java/org/mule/module/launcher/application/MuleApplicationClassLoaderFactory.java", "diffHunk": "@@ -48,19 +49,27 @@ public ArtifactClassLoader create(ApplicationDescriptor descriptor)\n             parent = domainClassLoaderRepository.getDomainClassLoader(domain).getClassLoader();\n         }\n         final Set<PluginDescriptor> plugins = descriptor.getPlugins();\n-        if (!plugins.isEmpty())\n+        if (plugins.isEmpty())\n         {\n-            // Re-assigns parent if there are shared plugin libraries\n-            URL[] pluginLibs = descriptor.getSharedPluginLibs();\n-            if (pluginLibs != null && pluginLibs.length != 0)\n-            {\n-                parent = new GoodCitizenClassLoader(pluginLibs, parent);\n-            }\n-\n-            // re-assign parent ref if any plugins deployed, will be used by the MuleAppCL\n-            parent = new MulePluginsClassLoader(parent, plugins);\n+            return new MuleApplicationClassLoader(descriptor.getName(), parent,\n+                    descriptor.getLoaderOverride(), nativeLibraryFinderFactory.create(descriptor.getName()));\n         }\n-\n-        return new MuleApplicationClassLoader(descriptor.getName(), parent, descriptor.getLoaderOverride(), nativeLibraryFinderFactory.create(descriptor.getName()));\n+        // Re-assigns parent if there are shared plugin libraries\n+        URL[] pluginLibs = descriptor.getSharedPluginLibs();\n+        if (pluginLibs != null && pluginLibs.length != 0)\n+        {\n+            parent = new GoodCitizenClassLoader(pluginLibs, parent);\n+        }\n+        // re-assign parent ref if any plugins deployed, will be used by the MuleAppCL\n+        final MulePluginsClassLoader parentPluginsClassLoader = new MulePluginsClassLoader(parent, plugins);\n+        MuleApplicationClassLoader appClassLoader =  new MuleApplicationClassLoader(descriptor.getName(), parentPluginsClassLoader,\n+                descriptor.getLoaderOverride(), nativeLibraryFinderFactory.create(descriptor.getName()));\n+        appClassLoader.addShutdownListener(new ShutdownListener() {", "originalCommit": "ecad1e9ad844b0df8d627bf0e87f3d400cb16782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "431610a78f37e876b6242b4cd6bd454ea1dec82c", "chunk": "diff --git a/modules/launcher/src/main/java/org/mule/module/launcher/application/MuleApplicationClassLoaderFactory.java b/modules/launcher/src/main/java/org/mule/module/launcher/application/MuleApplicationClassLoaderFactory.java\nindex 0fae44a0d64..a3343227737 100644\n--- a/modules/launcher/src/main/java/org/mule/module/launcher/application/MuleApplicationClassLoaderFactory.java\n+++ b/modules/launcher/src/main/java/org/mule/module/launcher/application/MuleApplicationClassLoaderFactory.java\n\n@@ -64,6 +64,9 @@ public class MuleApplicationClassLoaderFactory implements ApplicationClassLoader\n         final MulePluginsClassLoader parentPluginsClassLoader = new MulePluginsClassLoader(parent, plugins);\n         MuleApplicationClassLoader appClassLoader =  new MuleApplicationClassLoader(descriptor.getName(), parentPluginsClassLoader,\n                 descriptor.getLoaderOverride(), nativeLibraryFinderFactory.create(descriptor.getName()));\n+\n+        // Adding shutdown listener to dispose the parent class loader created above.\n+        // Without this, the plugins class loader would leak (see MULE-18006)\n         appClassLoader.addShutdownListener(new ShutdownListener() {\n             @Override\n             public void execute() {\n"}}, {"oid": "431610a78f37e876b6242b4cd6bd454ea1dec82c", "url": "https://github.com/mulesoft/mule/commit/431610a78f37e876b6242b4cd6bd454ea1dec82c", "message": "review", "committedDate": "2020-01-28T13:58:59Z", "type": "commit"}]}