{"pr_number": 8833, "pr_title": "MULE-18363: Decouple spring bean definition from ComponentAst", "pr_createdAt": "2020-05-04T13:19:41Z", "pr_url": "https://github.com/mulesoft/mule/pull/8833", "timeline": [{"oid": "b0a828a34e0038f465284d10e3c2bfac27b66257", "url": "https://github.com/mulesoft/mule/commit/b0a828a34e0038f465284d10e3c2bfac27b66257", "message": "MULE-18363: Decouple spring bean definition from ComponentAst", "committedDate": "2020-05-04T13:18:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNzAwMg==", "url": "https://github.com/mulesoft/mule/pull/8833#discussion_r419437002", "bodyText": "Remove this code if not needed.", "author": "gsfernandes", "createdAt": "2020-05-04T13:30:50Z", "path": "modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java", "diffHunk": "@@ -586,10 +592,24 @@ public void resolveComponentTypes() {\n         Optional<ComponentBuildingDefinition<?>> buildingDefinition =\n             buildingDefinitionRegistry.getBuildingDefinition(componentModel.getIdentifier());\n         buildingDefinition.map(definition -> {\n-          ObjectTypeVisitor typeDefinitionVisitor = new ObjectTypeVisitor((ComponentModel) componentModel);\n+          ObjectTypeVisitor typeDefinitionVisitor = new ObjectTypeVisitor(componentModel);\n           definition.getTypeDefinition().visit(typeDefinitionVisitor);\n           // We still have components without extension models\n-          ((ComponentModel) componentModel).setType(typeDefinitionVisitor.getType());\n+          final Class<?> type = typeDefinitionVisitor.getType();\n+          ((ComponentModel) componentModel).setType(type);\n+\n+          if (ComponentLocationVisitor.BATCH_JOB_COMPONENT_IDENTIFIER.equals(componentModel.getIdentifier())\n+              || ComponentLocationVisitor.BATCH_PROCESSS_RECORDS_COMPONENT_IDENTIFIER.equals(componentModel.getIdentifier())) {\n+            ((ComponentModel) componentModel).setComponentType(ROUTER);\n+          } else\n+\n+          // if (areMatchingTypes(ErrorHandler.class, type)) {", "originalCommit": "b0a828a34e0038f465284d10e3c2bfac27b66257", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c1325567c04b7182e060ad31c2bd21f16051dd84", "chunk": "diff --git a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java\nindex 7ddcdf37c84..423bdaf2834 100644\n--- a/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java\n+++ b/modules/spring-config/src/main/java/org/mule/runtime/config/internal/model/ApplicationModel.java\n\n@@ -603,8 +603,6 @@ public class ApplicationModel implements ArtifactAst {\n             ((ComponentModel) componentModel).setComponentType(ROUTER);\n           } else\n \n-          // if (areMatchingTypes(ErrorHandler.class, type)) {\n-          // ((ComponentModel) componentModel).setComponentType(ERROR_HANDLER);\n           if (CommonBeanDefinitionCreator.areMatchingTypes(MessageSource.class, type)) {\n             ((ComponentModel) componentModel).setComponentType(SOURCE);\n           } else if (CommonBeanDefinitionCreator.areMatchingTypes(Processor.class, type)) {\n"}}, {"oid": "c1325567c04b7182e060ad31c2bd21f16051dd84", "url": "https://github.com/mulesoft/mule/commit/c1325567c04b7182e060ad31c2bd21f16051dd84", "message": "review", "committedDate": "2020-05-04T13:35:32Z", "type": "commit"}, {"oid": "9d5e251aec27780f6bd31108b6206ceeaa6dc290", "url": "https://github.com/mulesoft/mule/commit/9d5e251aec27780f6bd31108b6206ceeaa6dc290", "message": "sonar", "committedDate": "2020-05-04T17:06:04Z", "type": "commit"}, {"oid": "45fe19ed07d4093576e44fb41819a194b7ac56bf", "url": "https://github.com/mulesoft/mule/commit/45fe19ed07d4093576e44fb41819a194b7ac56bf", "message": "more sonar", "committedDate": "2020-05-04T19:01:31Z", "type": "commit"}]}