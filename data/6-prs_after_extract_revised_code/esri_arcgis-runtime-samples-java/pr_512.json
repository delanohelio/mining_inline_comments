{"pr_number": 512, "pr_title": "New Sample: Identify raster cell", "pr_createdAt": "2020-05-11T09:01:07Z", "pr_url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512", "timeline": [{"oid": "7eebce510294b017e0b4ccedcef98ba354ef216e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7eebce510294b017e0b4ccedcef98ba354ef216e", "message": "add sample", "committedDate": "2020-05-04T09:14:15Z", "type": "commit"}, {"oid": "7501893edfc01a9bc882411748bb2ec330e14991", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7501893edfc01a9bc882411748bb2ec330e14991", "message": "add readme template", "committedDate": "2020-05-04T09:23:50Z", "type": "commit"}, {"oid": "1379775648c73836b572d272c89cefc5fa01fbfe", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1379775648c73836b572d272c89cefc5fa01fbfe", "message": "update with identifying on the fly", "committedDate": "2020-05-05T10:42:18Z", "type": "commit"}, {"oid": "433c24bc4a2a0b6c592dd936f1331b71906c2a08", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/433c24bc4a2a0b6c592dd936f1331b71906c2a08", "message": "better error displaying", "committedDate": "2020-05-05T10:45:16Z", "type": "commit"}, {"oid": "8d2ced95c3034ade2261464f62d2dd77c02b8957", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8d2ced95c3034ade2261464f62d2dd77c02b8957", "message": "update data source and README.md", "committedDate": "2020-05-11T08:51:31Z", "type": "commit"}, {"oid": "cb18eaa72504b01123c88e68b78827493e6d61c5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cb18eaa72504b01123c88e68b78827493e6d61c5", "message": "clean up comments", "committedDate": "2020-05-11T08:55:43Z", "type": "commit"}, {"oid": "6587295e904d4662334b3b953b7ad59e4213f257", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6587295e904d4662334b3b953b7ad59e4213f257", "message": "set runtime version to 100.8", "committedDate": "2020-05-11T08:59:23Z", "type": "commit"}, {"oid": "6e1fcb482ef2c88e15640887eb49728ada87f396", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6e1fcb482ef2c88e15640887eb49728ada87f396", "message": "remove unnecessary guard", "committedDate": "2020-05-11T09:03:22Z", "type": "commit"}, {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/750e2910237e9de735eb9be5133f24cfd04563c9", "message": "restore changes", "committedDate": "2020-05-11T09:04:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzAwOA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425023008", "bodyText": "since the raster layer extents are being used to set the map viewpoint once it's loaded, they are overriding the settings here. I think we should have the level of detail a little closer, but with the raster layer changing the map viewpoint, we should handle that change there rather than here (since this is overwritten).  For here we can just do:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n          \n          \n            \n                        ArcGISMap map = new ArcGISMap(Basemap.createOceans());", "author": "Rachael-E", "createdAt": "2020-05-14T10:08:30Z", "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);", "originalCommit": "750e2910237e9de735eb9be5133f24cfd04563c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "chunk": "diff --git a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\nindex 73296d63..bc7170ea 100644\n--- a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n+++ b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n\n@@ -67,7 +67,7 @@ public class IdentifyRasterCellSample extends Application {\n             mapView = new MapView();\n \n             // create a Map with an oceans basemap\n-            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+            ArcGISMap map = new ArcGISMap(Basemap.createOceans());\n \n             // add the map to a map view\n             mapView.setMap(map);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzQ5OQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425023499", "bodyText": "I found the map was too far zoomed out: the focus and majority of the map should be on the raster layer. I suggest a little closer using a padding of 50 instead of 150.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n          \n          \n            \n                                mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 50);", "author": "Rachael-E", "createdAt": "2020-05-14T10:09:19Z", "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);", "originalCommit": "750e2910237e9de735eb9be5133f24cfd04563c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "chunk": "diff --git a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\nindex 73296d63..bc7170ea 100644\n--- a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n+++ b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n\n@@ -67,7 +67,7 @@ public class IdentifyRasterCellSample extends Application {\n             mapView = new MapView();\n \n             // create a Map with an oceans basemap\n-            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+            ArcGISMap map = new ArcGISMap(Basemap.createOceans());\n \n             // add the map to a map view\n             mapView.setMap(map);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MDk2MA==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425050960", "bodyText": "I'm not too sure what this line of code does? I was expecting the mouse arrow icon to become transparent or for something to become to transparent but when I comment out the code I see no change?", "author": "Rachael-E", "createdAt": "2020-05-14T10:59:44Z", "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n+                } else {\n+                    Alert alert = new Alert(Alert.AlertType.ERROR, \"Raster Layer Failed to Load!\");\n+                    alert.show();\n+                }\n+            });\n+\n+            // get a handle on the callout\n+            callout = mapView.getCallout();\n+            callout.setMouseTransparent(true);", "originalCommit": "750e2910237e9de735eb9be5133f24cfd04563c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3Njc5Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425076792", "bodyText": "It basically means that hovering over the callout makes the app act as if we're hovering over the map. In other words, the callout is transparent to the mouse interaction.\nWhat it does is basically allow the on-the-fly identification to keep working if we move the mouse over the callout. Without it the app would stop identifying because we're technically hovering on the callout, and not on the map.\nI'll add a better comment!", "author": "JonLavi", "createdAt": "2020-05-14T11:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MDk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI1NDYzMQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425254631", "bodyText": "ahhh ok I get it now, thanks for explaining!", "author": "Rachael-E", "createdAt": "2020-05-14T16:06:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MDk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY0ODc2Mg==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425648762", "bodyText": "I've added a comment that hopefully explains this now. Let me know what you think?", "author": "JonLavi", "createdAt": "2020-05-15T08:32:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MDk2MA=="}], "type": "inlineReview", "revised_code": {"commit": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "chunk": "diff --git a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\nindex 73296d63..bc7170ea 100644\n--- a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n+++ b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n\n@@ -67,7 +67,7 @@ public class IdentifyRasterCellSample extends Application {\n             mapView = new MapView();\n \n             // create a Map with an oceans basemap\n-            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+            ArcGISMap map = new ArcGISMap(Basemap.createOceans());\n \n             // add the map to a map view\n             mapView.setMap(map);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MjQ0NQ==", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425052445", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // get the read only list of geo-elements (they contain RasterCell's)\n          \n          \n            \n                            // get the read only list of geo-elements (they contain RasterCells)", "author": "Rachael-E", "createdAt": "2020-05-14T11:02:39Z", "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n+                } else {\n+                    Alert alert = new Alert(Alert.AlertType.ERROR, \"Raster Layer Failed to Load!\");\n+                    alert.show();\n+                }\n+            });\n+\n+            // get a handle on the callout\n+            callout = mapView.getCallout();\n+            callout.setMouseTransparent(true);\n+\n+            // start identifying on-the-fly if the mouse enters the map view, and the callout is not locked\n+            mapView.setOnMouseEntered(mouseEvent -> {\n+                if (!calloutLocked) {\n+                    mapView.setOnMouseMoved(this::identifyRasterCell);\n+                }\n+            });\n+\n+            // stop identifying on-the-fly when the mouse leaves the map view\n+            mapView.setOnMouseExited(null);\n+\n+            // on click, either lock the callout in place if raster cells are identified on-the-fly,\n+            // or release the callout again and start identifying on-the-fly\n+            mapView.setOnMouseClicked(mouseEvent -> {\n+                if (mouseEvent.getButton() == MouseButton.PRIMARY && mouseEvent.isStillSincePress()) {\n+\n+                    if (!calloutLocked) {\n+                        // stop identifying on the fly\n+                        mapView.setOnMouseMoved(null);\n+                        // lock the callout in place\n+                        calloutLocked = true;\n+\n+                    } else {\n+                        // dismiss the callout\n+                        callout.dismiss();\n+                        // unlock the callout\n+                        calloutLocked = false;\n+                        // show a new callout at the clicked location\n+                        identifyRasterCell(mouseEvent);\n+                        // start identifying on-the-fly\n+                        mapView.setOnMouseMoved(this::identifyRasterCell);\n+                    }\n+                }\n+            });\n+\n+            // add the map view to stack pane\n+            stackPane.getChildren().addAll(mapView);\n+\n+        } catch (Exception e) {\n+            // on any error, display the stack trace\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    /**\n+     * Identifies the raster cell at the mouse event's location and displays a callout at that location.\n+     *\n+     * @param mouseEvent the mouse event used to identify the raster cell and show the callout\n+     */\n+    private void identifyRasterCell(MouseEvent mouseEvent) {\n+\n+        // get the map point where the user clicked\n+        Point2D point = new Point2D(mouseEvent.getX(), mouseEvent.getY());\n+        Point mapPoint = mapView.screenToLocation(point);\n+\n+        // identify the layers at the clicked location\n+        ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture\n+                = mapView.identifyLayerAsync(rasterLayer, point, 10, false, 1);\n+\n+        identifyLayerResultFuture.addDoneListener(() -> {\n+            try {\n+                // get the result of the query\n+                IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n+\n+                // get the read only list of geo-elements (they contain RasterCell's)", "originalCommit": "750e2910237e9de735eb9be5133f24cfd04563c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "chunk": "diff --git a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\nindex 73296d63..bc7170ea 100644\n--- a/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n+++ b/raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java\n\n@@ -67,7 +67,7 @@ public class IdentifyRasterCellSample extends Application {\n             mapView = new MapView();\n \n             // create a Map with an oceans basemap\n-            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+            ArcGISMap map = new ArcGISMap(Basemap.createOceans());\n \n             // add the map to a map view\n             mapView.setMap(map);\n"}}, {"oid": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "message": "Apply suggestions from code review\n\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>", "committedDate": "2020-05-15T08:30:41Z", "type": "commit"}, {"oid": "c8e7c0d52ac9a4623d1d54dc1bf34e025998d1f6", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c8e7c0d52ac9a4623d1d54dc1bf34e025998d1f6", "message": "add comment for callout mouse transparency", "committedDate": "2020-05-15T08:31:57Z", "type": "commit"}, {"oid": "9ebd4c82921cac283a13f4664b0d86d60e2d1daf", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9ebd4c82921cac283a13f4664b0d86d60e2d1daf", "message": "update callout title", "committedDate": "2020-05-15T16:07:33Z", "type": "commit"}, {"oid": "b3e2a64c16e3b2b74c278b873ec00065f497d1ec", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b3e2a64c16e3b2b74c278b873ec00065f497d1ec", "message": "Update raster/identify-raster-cell/README.metadata.json\n\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>", "committedDate": "2020-05-20T10:27:38Z", "type": "commit"}, {"oid": "8d477d0a29e1c53ebd65b24f4d52b5f77348fc53", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8d477d0a29e1c53ebd65b24f4d52b5f77348fc53", "message": "update JavaFX version and add all modules", "committedDate": "2020-07-14T08:27:05Z", "type": "commit"}, {"oid": "648343b649a78116beb75063cf5f26dab559111a", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/648343b649a78116beb75063cf5f26dab559111a", "message": "keep only relevant javafx modules", "committedDate": "2020-07-16T10:10:48Z", "type": "commit"}, {"oid": "270f5e2927d079dd78af26a2ed214c70af5ab416", "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/270f5e2927d079dd78af26a2ed214c70af5ab416", "message": "add screenshot", "committedDate": "2020-07-16T10:17:52Z", "type": "commit"}]}