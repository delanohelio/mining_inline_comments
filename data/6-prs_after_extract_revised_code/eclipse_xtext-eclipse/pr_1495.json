{"pr_number": 1495, "pr_title": "[#1494] fixed race condition on loading the Xtext index from multiple threads", "pr_createdAt": "2020-07-28T12:16:09Z", "pr_url": "https://github.com/eclipse/xtext-eclipse/pull/1495", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5MzYwOA==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1495#discussion_r461593608", "bodyText": "If I'm not mistake, the lock should be aquired before the try block. Otherwise we'll try to release something in the finally block, if the acquisition failed from some reason.", "author": "szarnekow", "createdAt": "2020-07-28T13:48:19Z", "path": "org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java", "diffHunk": "@@ -68,17 +70,26 @@\n \tprivate WorkspaceLockAccess workspaceLockAccess;\n \n \tprivate volatile boolean isLoaded = false;\n+\t\n+\tfinal ILock lock = Job.getJobManager().newLock();\n \n \tpublic void load() {\n \t\tif (!isLoaded) {\n \t\t\tIWorkspaceRunnable runnable = new IWorkspaceRunnable() {\n \t\t\t\t@Override\n \t\t\t\tpublic void run(IProgressMonitor monitor) throws CoreException {\n \t\t\t\t\tif (!isLoaded) {\n-\t\t\t\t\t\tresourceDescriptionData = new ResourceDescriptionsData(persister.load());\n-\t\t\t\t\t\tif(storage2UriMapper instanceof IStorage2UriMapperExtension)\n-\t\t\t\t\t\t\t((IStorage2UriMapperExtension) storage2UriMapper).initializeCache();\n-\t\t\t\t\t\tisLoaded = true;\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tlock.acquire();", "originalCommit": "1f35f9fd1e4aec38e42834104d3ca31c3ff60a66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5NDIwMg==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1495#discussion_r461594202", "bodyText": "Hmm weird, the documentation for ILock has an example that states otherwise...", "author": "szarnekow", "createdAt": "2020-07-28T13:49:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5MzYwOA=="}], "type": "inlineReview", "revised_code": {"commit": "a9499419fb7d1c26a3d8b496a7cc3b235fe3079d", "chunk": "diff --git a/org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java b/org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java\nindex bbbc094b1..800eedc67 100644\n--- a/org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java\n+++ b/org.eclipse.xtext.builder/src/org/eclipse/xtext/builder/builderState/AbstractBuilderState.java\n\n@@ -71,7 +71,7 @@ public abstract class AbstractBuilderState extends AbstractResourceDescriptionCh\n \n \tprivate volatile boolean isLoaded = false;\n \t\n-\tfinal ILock lock = Job.getJobManager().newLock();\n+\tfinal ILock loadLock = Job.getJobManager().newLock();\n \n \tpublic void load() {\n \t\tif (!isLoaded) {\n"}}, {"oid": "a9499419fb7d1c26a3d8b496a7cc3b235fe3079d", "url": "https://github.com/eclipse/xtext-eclipse/commit/a9499419fb7d1c26a3d8b496a7cc3b235fe3079d", "message": "[#1494] fixed race condition on loading the Xtext index from multiple threads\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-07-29T05:05:04Z", "type": "commit"}, {"oid": "a9499419fb7d1c26a3d8b496a7cc3b235fe3079d", "url": "https://github.com/eclipse/xtext-eclipse/commit/a9499419fb7d1c26a3d8b496a7cc3b235fe3079d", "message": "[#1494] fixed race condition on loading the Xtext index from multiple threads\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>", "committedDate": "2020-07-29T05:05:04Z", "type": "forcePushed"}]}