{"pr_number": 1486, "pr_title": "[#1447] Add AbstractMultiQuickfixTest.testMultiQuickfix API method.", "pr_createdAt": "2020-07-05T06:10:14Z", "pr_url": "https://github.com/eclipse/xtext-eclipse/pull/1486", "timeline": [{"oid": "0a3082de2449f1ae7f51c70345c5fbb21c082cbd", "url": "https://github.com/eclipse/xtext-eclipse/commit/0a3082de2449f1ae7f51c70345c5fbb21c082cbd", "message": "[#1447] Add AbstractMultiQuickfixTest.testMultiQuickfix API method.\n\n- Add a testMultiQuickfix() API method to the AbstractMultiQuickfixTest\nclass to provide an easy and compact way to test multi-quickfixes.\n\nSigned-off-by: Tamas Miklossy <miklossy@itemis.de>", "committedDate": "2020-07-05T06:09:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDU2MQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450000561", "bodyText": "misses @since annotation", "author": "cdietrich", "createdAt": "2020-07-06T06:06:24Z", "path": "org.eclipse.xtext.ui.testing/src/org/eclipse/xtext/ui/testing/AbstractMultiQuickfixTest.java", "diffHunk": "@@ -65,6 +65,29 @@ public static void afterClass() throws Exception {\n \t\tIResourcesSetupUtil.setAutobuild(WAS_AUTOBUILD);\n \t}\n \n+\t/**\n+\t * Test that the multi-quickfixes work as expected.\n+\t * \n+\t * @param initialText\n+\t *            the initial DSL text.\n+\t * @param initialTextWithMarkers\n+\t *            the initial DSL text enhanced by the recognized marker information.\n+\t * @param resultTextWithMarkers\n+\t *            the result DSL text enhanced by the recognized marker information after applying all the quickfixes.\n+\t */", "originalCommit": "0a3082de2449f1ae7f51c70345c5fbb21c082cbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxNDkzOQ==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450014939", "bodyText": "The entire AbstractMultiQuickfixTest class is marked with the @since 2.23 , so there is no need to add the since tag to the method.", "author": "miklossy", "createdAt": "2020-07-06T06:47:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDU2MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450000870", "bodyText": "wonder why there need to be two initalText params", "author": "cdietrich", "createdAt": "2020-07-06T06:07:25Z", "path": "org.eclipse.xtext.ui.testing/src/org/eclipse/xtext/ui/testing/AbstractMultiQuickfixTest.java", "diffHunk": "@@ -65,6 +65,29 @@ public static void afterClass() throws Exception {\n \t\tIResourcesSetupUtil.setAutobuild(WAS_AUTOBUILD);\n \t}\n \n+\t/**\n+\t * Test that the multi-quickfixes work as expected.\n+\t * \n+\t * @param initialText", "originalCommit": "0a3082de2449f1ae7f51c70345c5fbb21c082cbd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxNjQ4Nw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450016487", "bodyText": "The first parameter is for the DSL text, while the second one is for the DSL text enhanced by the recognized marker information. Such a call invocation could look like for example:\n\t@Test def test001() {\n\t\t'''\n\t\t\tpackage foo\n\t\t\tclass Foo {\n\t\t\t\tdef m() {\n\t\t\t\t\tval a = new Object\n\t\t\t\t\tval b = new Object\n\t\t\t\t\t\n\t\t\t\t\tif (a == null) {}\n\t\t\t\t\tif (b != null) {}\n\t\t\t\t}\n\t\t\t}\n\t\t'''.testMultiQuickfix('''\n\t\t\tpackage foo\n\t\t\tclass Foo {\n\t\t\t\tdef m() {\n\t\t\t\t\tval a = new Object\n\t\t\t\t\tval b = new Object\n\t\t\t\t\t\n\t\t\t\t\tif (a <0<==>0> null) {}\n\t\t\t\t\tif (b <1<!=>1> null) {}\n\t\t\t\t}\n\t\t\t}\n\t\t\t-------------------------------\n\t\t\t0: message=The operator '==' should be replaced by '===' when null is one of the arguments.\n\t\t\t1: message=The operator '!=' should be replaced by '!==' when null is one of the arguments.\n\t\t''', '''\n\t\t\tpackage foo\n\t\t\tclass Foo {\n\t\t\t\tdef m() {\n\t\t\t\t\tval a = new Object\n\t\t\t\t\tval b = new Object\n\t\t\t\t\t\n\t\t\t\t\tif (a === null) {}\n\t\t\t\t\tif (b !== null) {}\n\t\t\t\t}\n\t\t\t}\n\t\t\t--------------------------\n\t\t\t(no markers found)\n\t\t''')\n\t}", "author": "miklossy", "createdAt": "2020-07-06T06:51:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxODI2Nw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450018267", "bodyText": "but how is the marker information extracted from then? isnt it sufficient to have the second parameter only?", "author": "cdietrich", "createdAt": "2020-07-06T06:55:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMTQxMw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450021413", "bodyText": "If you have only the second parameter, than the additional marker information has to be removed from it to get the initial DSL text. That is really difficult in case of complex dsls, I think.", "author": "miklossy", "createdAt": "2020-07-06T07:03:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI2NTE2Ng==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450265166", "bodyText": "i still dont like this. at other places we remove markers too", "author": "cdietrich", "createdAt": "2020-07-06T14:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1NjU1Nw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450356557", "bodyText": "Is the -------------------------- separator a static constant, or variable? I am getting...\nexpected:<...--------------------[]\n0: message=The oper...> but was:<...--------------------[---------------------------------------]\n0: message=The oper...>\n\n...when I attempted to consume this API.", "author": "drkstr101", "createdAt": "2020-07-06T16:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1ODEzMw==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r450358133", "bodyText": "It is dynamically calculated and have the same length as the longest line in the dsl.", "author": "miklossy", "createdAt": "2020-07-06T16:58:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3OTM0OA==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r451879348", "bodyText": "What are everyone's thoughts on an API that works more like...?\nval initialText = '''\n    package foo\n    class Foo {\n        def m(Object a, Object b, Object c) {\n            if(a == null || b != null || c === null) 0 else 1\n        }\n    }\n'''\nval expectedText = '''\n    package foo\n    class Foo {\n        def m(Object a, Object b, Object c) {\n            if(a === null || b !== null || c === null) 0 else 1\n        }\n    }\n'''\nval markerText = '''\n    0: message=The operator '==' should be replaced by '===' when null is one of the arguments.\n    1: message=The operator '!=' should be replaced by '!==' when null is one of the arguments.\n'''\n\n\ntestMultiQuickfix(initialText, expectedText, markerText)\n\nPerhaps making the markerText value optional.", "author": "drkstr101", "createdAt": "2020-07-08T23:27:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1OTY0Ng==", "url": "https://github.com/eclipse/xtext-eclipse/pull/1486#discussion_r451959646", "bodyText": "Good idea! I was also thinking about providing more overloaded versions of the testMultiQuickfix method.\n@cdietrich @szarnekow @kthoms @ArneDeutsch What do you think?", "author": "miklossy", "createdAt": "2020-07-09T04:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwMDg3MA=="}], "type": "inlineReview", "revised_code": null}]}