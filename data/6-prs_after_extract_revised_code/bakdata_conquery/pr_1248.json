{"pr_number": 1248, "pr_title": "Add tag as tag to metrics and Dataset in reported Id", "pr_createdAt": "2020-07-01T09:38:30Z", "pr_url": "https://github.com/bakdata/conquery/pull/1248", "timeline": [{"oid": "d88678d3761dc31593c42a50bfbefa8477f4429e", "url": "https://github.com/bakdata/conquery/commit/d88678d3761dc31593c42a50bfbefa8477f4429e", "message": "add tag as tag to metrics", "committedDate": "2020-07-01T09:37:42Z", "type": "commit"}, {"oid": "3d3a4b8d6f8d713f3fbb41821b22dacf09ee4cf0", "url": "https://github.com/bakdata/conquery/commit/3d3a4b8d6f8d713f3fbb41821b22dacf09ee4cf0", "message": "Merge branch 'develop' into feature/dataset-in-concept", "committedDate": "2020-07-01T12:48:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2OTk2MA==", "url": "https://github.com/bakdata/conquery/pull/1248#discussion_r448869960", "bodyText": "Soll der Tag wirklich tag hei\u00dfen?\nDie Methoden-Signature sollte doch eigentlich so aussehen\nprotected static String nameWithTag(String metricName, Map<String,String> tags)", "author": "thoniTUB", "createdAt": "2020-07-02T09:25:06Z", "path": "backend/src/main/java/com/bakdata/conquery/metrics/ExecutionMetrics.java", "diffHunk": "@@ -37,19 +37,25 @@\n \tprivate static final String TIME = \"time\";\n \n \tpublic static Counter getRunningQueriesCounter(String tag) {\n-\t\treturn SharedMetricRegistries.getDefault().counter(MetricRegistry.name(QUERIES, RUNNING, tag));\n+\t\treturn SharedMetricRegistries.getDefault().counter(nameWithTag(MetricRegistry.name(QUERIES, RUNNING), tag));\n+\t}\n+\n+\tprotected static String nameWithTag(String name, String tag) {\n+\t\treturn name + String.format(\";tag=%s\", tag);", "originalCommit": "3d3a4b8d6f8d713f3fbb41821b22dacf09ee4cf0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3MTkyNw==", "url": "https://github.com/bakdata/conquery/pull/1248#discussion_r448871927", "bodyText": "Graphite hat dieses Beispiel f\u00fcr Tags\ndisk.used;datacenter=dc1;rack=a1;server=web01\ndisk.used;datacenter=dc1;rack=b2;server=web02\ndisk.used;datacenter=dc2;rack=c3;server=web01\ndisk.used;datacenter=dc2;rack=d4;server=web02", "author": "thoniTUB", "createdAt": "2020-07-02T09:28:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2OTk2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk4MzA1MA==", "url": "https://github.com/bakdata/conquery/pull/1248#discussion_r448983050", "bodyText": "ich habs mal upgedated damit das besser kommuniziert ist was ich erreichen wollte", "author": "awildturtok", "createdAt": "2020-07-02T12:59:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2OTk2MA=="}], "type": "inlineReview", "revised_code": {"commit": "c2e473626c5cd6fa3ef33ee2d7d6ea76ce8457c8", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/metrics/ExecutionMetrics.java b/backend/src/main/java/com/bakdata/conquery/metrics/ExecutionMetrics.java\nindex 1a3754fbd..2fe6d40c6 100644\n--- a/backend/src/main/java/com/bakdata/conquery/metrics/ExecutionMetrics.java\n+++ b/backend/src/main/java/com/bakdata/conquery/metrics/ExecutionMetrics.java\n\n@@ -36,56 +36,61 @@ public class ExecutionMetrics {\n \tprivate static final String STATE = \"state\";\n \tprivate static final String TIME = \"time\";\n \n-\tpublic static Counter getRunningQueriesCounter(String tag) {\n-\t\treturn SharedMetricRegistries.getDefault().counter(nameWithTag(MetricRegistry.name(QUERIES, RUNNING), tag));\n+\t/**\n+\t *\n+\t */\n+\tprivate static String nameWithGroupTag(String name, String group) {\n+\t\treturn name + String.format(\";group=%s\", group);\n \t}\n \n-\tprotected static String nameWithTag(String name, String tag) {\n-\t\treturn name + String.format(\";tag=%s\", tag);\n+\tpublic static Counter getRunningQueriesCounter(String group) {\n+\t\treturn SharedMetricRegistries.getDefault().counter(nameWithGroupTag(MetricRegistry.name(QUERIES, RUNNING), group));\n \t}\n \n-\tpublic static Histogram getQueriesTimeHistogram(String tag) {\n-\t\treturn SharedMetricRegistries.getDefault().histogram(nameWithTag(MetricRegistry.name(QUERIES, TIME), tag));\n+\n+\n+\tpublic static Histogram getQueriesTimeHistogram(String group) {\n+\t\treturn SharedMetricRegistries.getDefault().histogram(nameWithGroupTag(MetricRegistry.name(QUERIES, TIME), group));\n \t}\n \n-\tpublic static Counter getQueryStateCounter(ExecutionState state, String tag) {\n-\t\treturn SharedMetricRegistries.getDefault().counter(nameWithTag(MetricRegistry.name(QUERIES, STATE, state.toString()), tag));\n+\tpublic static Counter getQueryStateCounter(ExecutionState state, String group) {\n+\t\treturn SharedMetricRegistries.getDefault().counter(nameWithGroupTag(MetricRegistry.name(QUERIES, STATE, state.toString()), group));\n \t}\n \n-\tpublic static void reportQueryClassUsage(Class<? extends QueryDescription> clazz, String tag) {\n+\tpublic static void reportQueryClassUsage(Class<? extends QueryDescription> clazz, String group) {\n \t\tSharedMetricRegistries.getDefault()\n-\t\t\t\t\t\t\t  .counter(nameWithTag(MetricRegistry.name(QUERIES, CLASSES, clazz.getSimpleName()), tag))\n+\t\t\t\t\t\t\t  .counter(nameWithGroupTag(MetricRegistry.name(QUERIES, CLASSES, clazz.getSimpleName()), group))\n \t\t\t\t\t\t\t  .inc(); // Count usages of different types of Queries\n \t}\n \n \t/**\n \t * Report all NamespacedIds to the metrics registry.\n \t */\n-\tpublic static void reportNamespacedIds(Collection<NamespacedId> foundIds, String tag) {\n+\tpublic static void reportNamespacedIds(Collection<NamespacedId> foundIds, String group) {\n \t\tfinal Set<ConceptId> reportedIds = new HashSet<>(foundIds.size());\n \n \t\tfor (NamespacedId id : foundIds) {\n \t\t\t// We don't want to report the whole tree, as that would be spammy and potentially wrong.\n \n-\t\t\tif (id instanceof ConceptElementId) {\n-\t\t\t\treportedIds.add(((ConceptElementId<?>) id).findConcept());\n-\t\t\t}\n-\t\t\telse if (id instanceof ConnectorId) {\n-\t\t\t\treportedIds.add(((ConnectorId) id).getConcept());\n-\t\t\t}\n-\t\t\telse if (id instanceof ConceptId) {\n+\t\t\tif (id instanceof ConceptId) {\n \t\t\t\treportedIds.add(((ConceptId) id));\n \t\t\t}\n \t\t\telse if (id instanceof ConceptTreeChildId) {\n \t\t\t\treportedIds.add(((ConceptTreeChildId) id).findConcept());\n \t\t\t}\n+\t\t\telse if (id instanceof ConceptElementId) {\n+\t\t\t\treportedIds.add(((ConceptElementId<?>) id).findConcept());\n+\t\t\t}\n+\t\t\telse if (id instanceof ConnectorId) {\n+\t\t\t\treportedIds.add(((ConnectorId) id).getConcept());\n+\t\t\t}\n \t\t\telse if (id instanceof SelectId) {\n \t\t\t\treportedIds.add(((SelectId) id).findConcept());\n \t\t\t}\n \t\t}\n \n \t\tfor (ConceptId id : reportedIds) {\n-\t\t\tSharedMetricRegistries.getDefault().counter(nameWithTag(MetricRegistry.name(QUERIES, CONCEPTS, id.toString()), tag)).inc();\n+\t\t\tSharedMetricRegistries.getDefault().counter(nameWithGroupTag(MetricRegistry.name(QUERIES, CONCEPTS, id.toString()), group)).inc();\n \t\t}\n \t}\n \n"}}, {"oid": "c2e473626c5cd6fa3ef33ee2d7d6ea76ce8457c8", "url": "https://github.com/bakdata/conquery/commit/c2e473626c5cd6fa3ef33ee2d7d6ea76ce8457c8", "message": "- Change naming of tag to group\n- Change order of class instance checks as the first check caught subsequent checks", "committedDate": "2020-07-02T12:56:19Z", "type": "commit"}]}