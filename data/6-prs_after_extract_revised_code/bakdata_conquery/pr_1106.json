{"pr_number": 1106, "pr_title": "Delete concept cache", "pr_createdAt": "2020-03-20T14:15:23Z", "pr_url": "https://github.com/bakdata/conquery/pull/1106", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MDI1MQ==", "url": "https://github.com/bakdata/conquery/pull/1106#discussion_r396260251", "bodyText": "Kannst du hier nicht die eigentliche Util-Funktion benutzen?", "author": "thoniTUB", "createdAt": "2020-03-23T07:48:34Z", "path": "backend/src/test/java/com/bakdata/conquery/integration/tests/deletion/ImportDeletionTest.java", "diffHunk": "@@ -153,12 +160,46 @@ public void execute(String name, TestConquery testConquery) throws Exception {\n \n \t\tconquery.waitUntilWorkDone();\n \n-\t\t// Load the same import into the same table, with only the deleted import/table\n+\n+\t\t// Load more data under the same name into the same table, with only the deleted import/table\n \t\t{\n \t\t\t// only import the deleted import/table\n-\t\t\tIntegrationUtils.importTableContents(conquery, Arrays.stream(test.getContent().getTables())\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .filter(table -> table.getName().equalsIgnoreCase(importId.getTable().getTable()))\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .collect(Collectors.toList()), conquery.getDataset());\n+\t\t\tfinal RequiredTable import2Table = Arrays.stream(test.getContent().getTables())", "originalCommit": "d877db14b1d48d3b46f828642a60e6f976f87d66", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI3MTIxOQ==", "url": "https://github.com/bakdata/conquery/pull/1106#discussion_r396271219", "bodyText": "Ne weil ich hier ja ne andere CSV laden muss als urspr\u00fcnglich.", "author": "awildturtok", "createdAt": "2020-03-23T08:13:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2MDI1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "e5086533b7c38100e22a7d082ad76923f054c2b9", "chunk": "diff --git a/backend/src/test/java/com/bakdata/conquery/integration/tests/deletion/ImportDeletionTest.java b/backend/src/test/java/com/bakdata/conquery/integration/tests/deletion/ImportDeletionTest.java\nindex 3731bbc55..3843d5e47 100644\n--- a/backend/src/test/java/com/bakdata/conquery/integration/tests/deletion/ImportDeletionTest.java\n+++ b/backend/src/test/java/com/bakdata/conquery/integration/tests/deletion/ImportDeletionTest.java\n\n@@ -160,46 +153,12 @@ public class ImportDeletionTest implements ProgrammaticIntegrationTest {\n \n \t\tconquery.waitUntilWorkDone();\n \n-\n-\t\t// Load more data under the same name into the same table, with only the deleted import/table\n+\t\t// Load the same import into the same table, with only the deleted import/table\n \t\t{\n \t\t\t// only import the deleted import/table\n-\t\t\tfinal RequiredTable import2Table = Arrays.stream(test.getContent().getTables())\n-\t\t\t\t\t\t\t\t\t\t\t\t\t .filter(table -> table.getName().equalsIgnoreCase(importId.getTable().getTable()))\n-\t\t\t\t\t\t\t\t\t\t\t\t\t .findFirst()\n-\t\t\t\t\t\t\t\t\t\t\t\t\t .orElseThrow();\n-\n-\n-\t\t\tfinal String path = import2Table.getCsv().getPath();\n-\n-\t\t\t//copy csv to tmp folder\n-\t\t\t// Content 2.2 contains an extra entry of a value that hasn't been seen before.\n-\t\t\tFileUtils.copyInputStreamToFile(In.resource(path.substring(0, path.lastIndexOf(\"/\")) + \"/\" + \"content2.2.csv\")\n-\t\t\t\t\t\t\t\t\t\t\t  .asStream(), new File(conquery.getTmpDir(), import2Table.getCsv().getName()));\n-\n-\t\t\t//create import descriptor\n-\t\t\tInputFile inputFile = InputFile.fromName(conquery.getConfig().getPreprocessor().getDirectories()[0], importId.getTag());\n-\t\t\tImportDescriptor desc = new ImportDescriptor();\n-\t\t\tdesc.setInputFile(inputFile);\n-\t\t\tdesc.setName(import2Table.getName() + \"_import\");\n-\t\t\tdesc.setTable(import2Table.getName());\n-\t\t\tInput input = new Input();\n-\t\t\t{\n-\t\t\t\tinput.setPrimary(IntegrationUtils.copyOutput(0, import2Table.getPrimaryColumn()));\n-\t\t\t\tinput.setSourceFile(new File(inputFile.getCsvDirectory(), import2Table.getCsv().getName()));\n-\t\t\t\tinput.setOutput(new Output[import2Table.getColumns().length]);\n-\t\t\t\tfor (int i = 0; i < import2Table.getColumns().length; i++) {\n-\t\t\t\t\tinput.getOutput()[i] = IntegrationUtils.copyOutput(i + 1, import2Table.getColumns()[i]);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tdesc.setInputs(new Input[]{input});\n-\t\t\tJackson.MAPPER.writeValue(inputFile.getDescriptionFile(), desc);\n-\n-\t\t\t//preprocess\n-\t\t\tconquery.preprocessTmp();\n-\n-\t\t\t//import preprocessedFiles\n-\t\t\tconquery.getDatasetsProcessor().addImport(conquery.getDataset(), inputFile.getPreprocessedFile());\n+\t\t\tIntegrationUtils.importTableContents(conquery, Arrays.stream(test.getContent().getTables())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .filter(table -> table.getName().equalsIgnoreCase(importId.getTable().getTable()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t .collect(Collectors.toList()), conquery.getDataset());\n \t\t\tconquery.waitUntilWorkDone();\n \t\t}\n \n"}}, {"oid": "666111364bc1b80eed1a1629b7864bf16c03ddb6", "url": "https://github.com/bakdata/conquery/commit/666111364bc1b80eed1a1629b7864bf16c03ddb6", "message": "Fixed ImportDeletionTest, to also test for new values in new imports", "committedDate": "2020-03-23T08:48:08Z", "type": "forcePushed"}, {"oid": "e5086533b7c38100e22a7d082ad76923f054c2b9", "url": "https://github.com/bakdata/conquery/commit/e5086533b7c38100e22a7d082ad76923f054c2b9", "message": "Fixed not removing TreeConcept cache when removing Import.", "committedDate": "2020-03-23T08:58:23Z", "type": "commit"}, {"oid": "f1c0807b2455f490c3ba1b385f6ce5de5a9e0605", "url": "https://github.com/bakdata/conquery/commit/f1c0807b2455f490c3ba1b385f6ce5de5a9e0605", "message": "Fixed ImportDeletionTest, to also test for new values in new imports", "committedDate": "2020-03-23T08:58:23Z", "type": "commit"}, {"oid": "f1c0807b2455f490c3ba1b385f6ce5de5a9e0605", "url": "https://github.com/bakdata/conquery/commit/f1c0807b2455f490c3ba1b385f6ce5de5a9e0605", "message": "Fixed ImportDeletionTest, to also test for new values in new imports", "committedDate": "2020-03-23T08:58:23Z", "type": "forcePushed"}]}