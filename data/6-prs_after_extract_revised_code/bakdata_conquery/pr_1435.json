{"pr_number": 1435, "pr_title": "use default validity date column if none provided", "pr_createdAt": "2020-11-18T16:31:17Z", "pr_url": "https://github.com/bakdata/conquery/pull/1435", "timeline": [{"oid": "0a95ff58176263cead0815bcbb97794c8732357a", "url": "https://github.com/bakdata/conquery/commit/0a95ff58176263cead0815bcbb97794c8732357a", "message": "use default validity date column if none provided", "committedDate": "2020-11-18T16:30:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3MTE3Mg==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r527771172", "bodyText": "Achtung ValidityDates kann leer sein!\nEs gibt Konzepte ohne ValidityDate", "author": "thoniTUB", "createdAt": "2020-11-20T15:33:15Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java", "diffHunk": "@@ -69,13 +69,24 @@ public TableExportQueryPlan createQueryPlan(QueryPlanContext context) {\n \t\t\ttry {\n \t\t\t\tConcept<?> concept = context.getCentralRegistry().resolve(table.getId().getConcept());\n \t\t\t\tConnector connector = concept.getConnectorByName(table.getId().getConnector());\n-\t\t\t\tresolvedConnectors.add(\n-\t\t\t\t\t\tnew TableExportDescription(\n-\t\t\t\t\t\t\t\tconnector.getTable(),\n-\t\t\t\t\t\t\t\tconnector.getValidityDateColumn(table.getDateColumn().getValue()),\n-\t\t\t\t\t\t\t\ttotalColumns\n-\t\t\t\t\t\t)\n+\t\t\t\tfinal Column validityDateColumn;\n+\n+\t\t\t\t// if no dateColumn is provided, we use the default instead which is always the first one.\n+\t\t\t\tif (table.getDateColumn() != null) {\n+\t\t\t\t\tvalidityDateColumn = connector.getValidityDateColumn(table.getDateColumn().getValue());\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tvalidityDateColumn = connector.getValidityDates().get(0).getColumn();", "originalCommit": "0a95ff58176263cead0815bcbb97794c8732357a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0a595f8d2cb69a9ff6c5ed3eb3a11bee623980ed", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java b/backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java\nindex 3735d874c..faa50df09 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java\n\n@@ -75,8 +75,10 @@ public class TableExportQuery extends IQuery {\n \t\t\t\tif (table.getDateColumn() != null) {\n \t\t\t\t\tvalidityDateColumn = connector.getValidityDateColumn(table.getDateColumn().getValue());\n \t\t\t\t}\n-\t\t\t\telse {\n+\t\t\t\telse if(!connector.getValidityDates().isEmpty()){\n \t\t\t\t\tvalidityDateColumn = connector.getValidityDates().get(0).getColumn();\n+\t\t\t\t}else {\n+\t\t\t\t\tvalidityDateColumn = null;\n \t\t\t\t}\n \n \t\t\t\tfinal TableExportDescription exportDescription = new TableExportDescription(\n"}}, {"oid": "0a595f8d2cb69a9ff6c5ed3eb3a11bee623980ed", "url": "https://github.com/bakdata/conquery/commit/0a595f8d2cb69a9ff6c5ed3eb3a11bee623980ed", "message": "add handling of Connectors without Validity-Dates", "committedDate": "2020-11-23T10:09:31Z", "type": "commit"}, {"oid": "27ef88b590d531f96308278daf86ec0ac1be358d", "url": "https://github.com/bakdata/conquery/commit/27ef88b590d531f96308278daf86ec0ac1be358d", "message": "add documentaion", "committedDate": "2020-11-23T11:21:56Z", "type": "commit"}, {"oid": "6c34857f9ce72ec1fef86a8d4a5aac4ff8917217", "url": "https://github.com/bakdata/conquery/commit/6c34857f9ce72ec1fef86a8d4a5aac4ff8917217", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-11-23T16:31:36Z", "type": "commit"}, {"oid": "dfc83e20b63d098c4d343ef9c27df8461f96de70", "url": "https://github.com/bakdata/conquery/commit/dfc83e20b63d098c4d343ef9c27df8461f96de70", "message": "Merge branch 'feature/table-export-default-validity-dates' of https://github.com/bakdata/conquery into feature/table-export-default-validity-dates", "committedDate": "2020-12-01T09:47:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0NTU1MQ==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r533245551", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tif (exportDescription.getValidityDateColumn() == null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n          \n          \n            \n            \t\t\t\t\tif (exportDescription.getValidityDateColumn() != null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {", "author": "awildturtok", "createdAt": "2020-12-01T09:50:06Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "diffHunk": "@@ -67,7 +69,8 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \n \t\t\t\tfor(int event = start; event < end ; event++) {\n \n-\t\t\t\t\tif (!bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n+\t\t\t\t\t// Export Full-table if it has no validity date.\n+\t\t\t\t\tif (exportDescription.getValidityDateColumn() == null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {", "originalCommit": "dfc83e20b63d098c4d343ef9c27df8461f96de70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ef779a5a22f3317691e884bd3a25bdb18fa063a1", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java b/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java\nindex 13d620796..a5230886a 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java\n\n@@ -70,7 +70,7 @@ public class TableExportQueryPlan implements QueryPlan {\n \t\t\t\tfor(int event = start; event < end ; event++) {\n \n \t\t\t\t\t// Export Full-table if it has no validity date.\n-\t\t\t\t\tif (exportDescription.getValidityDateColumn() == null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n+\t\t\t\t\tif (exportDescription.getValidityDateColumn() != null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \n"}}, {"oid": "ef779a5a22f3317691e884bd3a25bdb18fa063a1", "url": "https://github.com/bakdata/conquery/commit/ef779a5a22f3317691e884bd3a25bdb18fa063a1", "message": "Update backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "committedDate": "2020-12-01T09:51:08Z", "type": "commit"}, {"oid": "fffa2534935afaf65328959ef4488ae09738d032", "url": "https://github.com/bakdata/conquery/commit/fffa2534935afaf65328959ef4488ae09738d032", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-03T11:49:46Z", "type": "commit"}, {"oid": "b79f2ef608df14b64b49a1236500a7fa0aca0edb", "url": "https://github.com/bakdata/conquery/commit/b79f2ef608df14b64b49a1236500a7fa0aca0edb", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-04T10:44:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxODc0NA==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r536018744", "bodyText": "Zieht das @NotNull bei abstrakten Methoden? Ich glaube nicht das Lombok klassen\u00fcbergreifend Code erzeugen kann", "author": "thoniTUB", "createdAt": "2020-12-04T11:04:27Z", "path": "backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java", "diffHunk": "@@ -146,47 +146,47 @@ public void serialize(JsonGenerator gen, SerializerProvider serializers) throws\n \t}\n \n \n-\tpublic boolean has(int event, Column column) {\n+\tpublic boolean has(int event, @NotNull Column column) {\n \t\treturn has(event, column.getPosition());\n \t}\n \n \tpublic abstract boolean has(int event, int columnPosition);\n \n-\tpublic abstract int getString(int event, Column column);\n+\tpublic abstract int getString(int event, @NotNull Column column);", "originalCommit": "b79f2ef608df14b64b49a1236500a7fa0aca0edb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAyMDIwNg==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r536020206", "bodyText": "Leider nein :(", "author": "awildturtok", "createdAt": "2020-12-04T11:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxODc0NA=="}], "type": "inlineReview", "revised_code": {"commit": "c554835c7ada1bf0ceafa1d58cb91939aa10534d", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java b/backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java\nindex 32712b9e9..2fd90c1a1 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java\n\n@@ -182,10 +182,11 @@ public abstract class Bucket extends IdentifiableImpl<BucketId> implements Itera\n \n \tpublic abstract boolean eventIsContainedIn(int event, @NotNull Column column, CDateRange dateRange);\n \n-\tpublic boolean eventIsContainedIn(int event, @NotNull Column column, BitMapCDateSet dateRanges) {\n+\tpublic boolean eventIsContainedIn(int event, @NotNull Column column, CDateSet dateRanges) {\n \t\treturn dateRanges.intersects(getAsDateRange(event, column));\n \t}\n \n+\n \tpublic abstract CDateRange getAsDateRange(int event, @NotNull Column currentColumn);\n \n \t@Override\n"}}, {"oid": "c554835c7ada1bf0ceafa1d58cb91939aa10534d", "url": "https://github.com/bakdata/conquery/commit/c554835c7ada1bf0ceafa1d58cb91939aa10534d", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-07T08:45:56Z", "type": "commit"}]}