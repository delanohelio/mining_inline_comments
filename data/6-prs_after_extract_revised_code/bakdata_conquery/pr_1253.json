{"pr_number": 1253, "pr_title": "Summarising booleans operators", "pr_createdAt": "2020-07-02T15:02:47Z", "pr_url": "https://github.com/bakdata/conquery/pull/1253", "timeline": [{"oid": "56468aaf648174cf2843ef2374a28b341f309216", "url": "https://github.com/bakdata/conquery/commit/56468aaf648174cf2843ef2374a28b341f309216", "message": "Deserialize Worker Messages in Namespace", "committedDate": "2020-10-19T13:46:02Z", "type": "commit"}, {"oid": "ae7ada9eb9752690d99ed82f9cd44180f31acc91", "url": "https://github.com/bakdata/conquery/commit/ae7ada9eb9752690d99ed82f9cd44180f31acc91", "message": "wip sketch outlining how Or-Nodes create aggregators of underlying exists-Selects", "committedDate": "2020-10-19T14:58:03Z", "type": "commit"}, {"oid": "0015d770e788b34112017b3a6d71448d927f0af4", "url": "https://github.com/bakdata/conquery/commit/0015d770e788b34112017b3a6d71448d927f0af4", "message": "automatic update to docs", "committedDate": "2020-10-19T14:58:03Z", "type": "commit"}, {"oid": "679ce32be5429bdb1fb8044edb734ce087a9ca3d", "url": "https://github.com/bakdata/conquery/commit/679ce32be5429bdb1fb8044edb734ce087a9ca3d", "message": "Add test for AND/OR injecting ExistsSelects", "committedDate": "2020-10-19T15:19:29Z", "type": "commit"}, {"oid": "679ce32be5429bdb1fb8044edb734ce087a9ca3d", "url": "https://github.com/bakdata/conquery/commit/679ce32be5429bdb1fb8044edb734ce087a9ca3d", "message": "Add test for AND/OR injecting ExistsSelects", "committedDate": "2020-10-19T15:19:29Z", "type": "forcePushed"}, {"oid": "5222cef26ce25e557cbeb819954e1bc3058410ea", "url": "https://github.com/bakdata/conquery/commit/5222cef26ce25e557cbeb819954e1bc3058410ea", "message": "automatic update to docs", "committedDate": "2020-10-19T15:22:39Z", "type": "commit"}, {"oid": "b22e9c3a17c1af84142ed088656e7bb900fdfde3", "url": "https://github.com/bakdata/conquery/commit/b22e9c3a17c1af84142ed088656e7bb900fdfde3", "message": "Revert \"Deserialize Worker Messages in Namespace\"\n\nThis reverts commit 56468aaf", "committedDate": "2020-10-19T15:23:36Z", "type": "commit"}, {"oid": "02fdaeb88936f6387c6c1338622961f1ff6a61a8", "url": "https://github.com/bakdata/conquery/commit/02fdaeb88936f6387c6c1338622961f1ff6a61a8", "message": "migrate CQElement to abstract class", "committedDate": "2020-10-20T08:55:58Z", "type": "commit"}, {"oid": "2e4d69de60ea1fc579382e0f807a26016fc5ddde", "url": "https://github.com/bakdata/conquery/commit/2e4d69de60ea1fc579382e0f807a26016fc5ddde", "message": "Set default Label to CPSTypeAnno and get Label for AND/OR injected ExistsSelect", "committedDate": "2020-10-20T09:07:08Z", "type": "commit"}, {"oid": "f334e4ef796fe5d267f95e2e070c9c4e8fcd60a0", "url": "https://github.com/bakdata/conquery/commit/f334e4ef796fe5d267f95e2e070c9c4e8fcd60a0", "message": "change name of field to create aggregator.\nAdd test for CQAnd#createExists", "committedDate": "2020-10-20T09:15:51Z", "type": "commit"}, {"oid": "ef329b163f9eedbf2681f8b9a751ed41b493a440", "url": "https://github.com/bakdata/conquery/commit/ef329b163f9eedbf2681f8b9a751ed41b493a440", "message": "automatic update to docs", "committedDate": "2020-10-20T09:18:11Z", "type": "commit"}, {"oid": "c1a1940e4f06e08439c93fb2dcdb4990c61c7dd1", "url": "https://github.com/bakdata/conquery/commit/c1a1940e4f06e08439c93fb2dcdb4990c61c7dd1", "message": "Merge remote-tracking branch 'origin/develop' into feature/summarising-booleans-operators", "committedDate": "2020-10-20T13:21:53Z", "type": "commit"}, {"oid": "1ded2a5f08f63804dd14dcf95febb423d2a3a6a4", "url": "https://github.com/bakdata/conquery/commit/1ded2a5f08f63804dd14dcf95febb423d2a3a6a4", "message": "unset default names", "committedDate": "2020-10-20T13:31:18Z", "type": "commit"}, {"oid": "920f13ce978f0de02786957c7309893bb46c80f4", "url": "https://github.com/bakdata/conquery/commit/920f13ce978f0de02786957c7309893bb46c80f4", "message": "automatic update to docs", "committedDate": "2020-10-20T13:33:50Z", "type": "commit"}, {"oid": "83bd5accc3774529b1899b4daebc56e58b4b182c", "url": "https://github.com/bakdata/conquery/commit/83bd5accc3774529b1899b4daebc56e58b4b182c", "message": "fix naming confusion", "committedDate": "2020-10-20T14:38:30Z", "type": "commit"}, {"oid": "c35b06a2c07058d243d4a140d4f29f5d00930adc", "url": "https://github.com/bakdata/conquery/commit/c35b06a2c07058d243d4a140d4f29f5d00930adc", "message": "Merge branch 'develop' into feature/summarising-booleans-operators", "committedDate": "2020-10-20T15:21:40Z", "type": "commit"}, {"oid": "70388208402b5330b4d8f46f06c9d7ddc520e833", "url": "https://github.com/bakdata/conquery/commit/70388208402b5330b4d8f46f06c9d7ddc520e833", "message": "automatic update to docs", "committedDate": "2020-10-20T15:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA0MzA0MQ==", "url": "https://github.com/bakdata/conquery/pull/1253#discussion_r509043041", "bodyText": "Oben f\u00fcgst du den Aggregator als letztes zum QueryPlan, dann m\u00fcsstest du die Resultinfo auch hier als letztes anf\u00fcgen.", "author": "thoniTUB", "createdAt": "2020-10-21T07:18:06Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java", "diffHunk": "@@ -2,63 +2,87 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.function.Consumer;\n \n import javax.validation.Valid;\n import javax.validation.constraints.NotEmpty;\n \n import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.externalservice.ResultType;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.QueryPlanContext;\n import com.bakdata.conquery.models.query.QueryResolveContext;\n import com.bakdata.conquery.models.query.Visitable;\n import com.bakdata.conquery.models.query.concept.CQElement;\n import com.bakdata.conquery.models.query.queryplan.ConceptQueryPlan;\n import com.bakdata.conquery.models.query.queryplan.QPNode;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.specific.ExistsAggregator;\n import com.bakdata.conquery.models.query.queryplan.specific.AndNode;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n+import com.bakdata.conquery.models.query.resultinfo.SimpleResultInfo;\n import lombok.Getter;\n import lombok.Setter;\n \n-@CPSType(id=\"AND\", base=CQElement.class)\n-public class CQAnd implements CQElement {\n-\t@Getter @Setter @NotEmpty @Valid\n+@CPSType(id = \"AND\", base = CQElement.class)\n+public class CQAnd extends CQElement {\n+\t@Getter\n+\t@Setter\n+\t@NotEmpty\n+\t@Valid\n \tprivate List<CQElement> children;\n \n+\t@Getter @Setter\n+\tboolean createExists = false;\n+\n \t@Override\n \tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n-\t\tQPNode[] aggs = new QPNode[children.size()];\n-\t\tfor(int i=0;i<aggs.length;i++) {\n-\t\t\taggs[i] = children.get(i).createQueryPlan(context, plan);\n+\t\tQPNode[] nodes = new QPNode[children.size()];\n+\t\tfor (int i = 0; i < nodes.length; i++) {\n+\t\t\tnodes[i] = children.get(i).createQueryPlan(context, plan);\n+\t\t}\n+\n+\t\tfinal QPNode node = AndNode.of(Arrays.asList(nodes));\n+\n+\t\tif (createExists) {\n+\t\t\tfinal ExistsAggregator existsAggregator = new ExistsAggregator(node.collectRequiredTables());\n+\t\t\texistsAggregator.setReference(node);\n+\t\t\tplan.addAggregator(existsAggregator);\n \t\t}\n-\t\treturn new AndNode(Arrays.asList(aggs));\n+\n+\n+\t\treturn node;\n \t}\n-\t\n+\n \t@Override\n \tpublic void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n-\t\tfor(CQElement c:children) {\n+\t\tfor (CQElement c : children) {\n \t\t\tc.collectRequiredQueries(requiredQueries);\n \t\t}\n \t}\n \n \t@Override\n \tpublic CQElement resolve(QueryResolveContext context) {\n-\t\tchildren.replaceAll(c->c.resolve(context));\n+\t\tchildren.replaceAll(c -> c.resolve(context));\n \t\treturn this;\n \t}\n-\t\n+\n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tfor(CQElement c:children) {\n+\t\tif(createExists){\n+\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"AND\"), ResultType.BOOLEAN));\n+\t\t}", "originalCommit": "70388208402b5330b4d8f46f06c9d7ddc520e833", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c37e2e876e922f145a991a3f6f04177be7e71f94", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java b/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java\nindex 597ec087b..d3ee9c88b 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java\n\n@@ -70,13 +70,13 @@ public class CQAnd extends CQElement {\n \n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tif(createExists){\n-\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"AND\"), ResultType.BOOLEAN));\n-\t\t}\n-\n \t\tfor (CQElement c : children) {\n \t\t\tc.collectResultInfos(collector);\n \t\t}\n+\n+\t\tif(createExists){\n+\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"AND\"), ResultType.BOOLEAN));\n+\t\t}\n \t}\n \n \t@Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA0MzcxMg==", "url": "https://github.com/bakdata/conquery/pull/1253#discussion_r509043712", "bodyText": "Hier das gleiche", "author": "thoniTUB", "createdAt": "2020-10-21T07:19:18Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java", "diffHunk": "@@ -3,67 +3,93 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.Objects;\n import java.util.Set;\n import java.util.function.Consumer;\n \n import javax.validation.Valid;\n import javax.validation.constraints.NotEmpty;\n \n import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.externalservice.ResultType;\n import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n import com.bakdata.conquery.models.query.QueryPlanContext;\n import com.bakdata.conquery.models.query.QueryResolveContext;\n import com.bakdata.conquery.models.query.Visitable;\n import com.bakdata.conquery.models.query.concept.CQElement;\n import com.bakdata.conquery.models.query.queryplan.ConceptQueryPlan;\n import com.bakdata.conquery.models.query.queryplan.QPNode;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.specific.ExistsAggregator;\n import com.bakdata.conquery.models.query.queryplan.specific.OrNode;\n import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n+import com.bakdata.conquery.models.query.resultinfo.SimpleResultInfo;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.NoArgsConstructor;\n import lombok.Setter;\n \n-@NoArgsConstructor @AllArgsConstructor\n-@CPSType(id=\"OR\", base=CQElement.class)\n-public class CQOr implements CQElement {\n-\t@Getter @Setter @NotEmpty @Valid\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@CPSType(id = \"OR\", base = CQElement.class)\n+public class CQOr extends CQElement {\n+\t@Getter\n+\t@Setter\n+\t@NotEmpty\n+\t@Valid\n \tprivate List<CQElement> children;\n-\t\n+\n+\t@Getter\n+\t@Setter\n+\tprivate boolean createExists = false;\n+\n \t@Override\n \tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n-\t\tQPNode[] aggs = new QPNode[children.size()];\n-\t\tfor(int i=0;i<aggs.length;i++) {\n-\t\t\taggs[i] = children.get(i).createQueryPlan(context, plan);\n+\t\tQPNode[] nodes = new QPNode[children.size()];\n+\n+\t\tfor (int i = 0; i < nodes.length; i++) {\n+\t\t\tnodes[i] = children.get(i).createQueryPlan(context, plan);\n+\t\t}\n+\n+\t\tfinal QPNode or = OrNode.of(Arrays.asList(nodes));\n+\n+\t\tif (createExists) {\n+\t\t\tfinal ExistsAggregator existsAggregator = new ExistsAggregator(or.collectRequiredTables());\n+\t\t\texistsAggregator.setReference(or);\n+\t\t\tplan.addAggregator(existsAggregator);\n \t\t}\n-\t\treturn OrNode.of(Arrays.asList(aggs));\n+\n+\t\treturn or;\n \t}\n-\t\n+\n \t@Override\n \tpublic void collectRequiredQueries(Set<ManagedExecutionId> requiredQueries) {\n-\t\tfor(CQElement c:children) {\n+\t\tfor (CQElement c : children) {\n \t\t\tc.collectRequiredQueries(requiredQueries);\n \t\t}\n \t}\n \n \t@Override\n \tpublic CQElement resolve(QueryResolveContext context) {\n \t\tvar copy = new ArrayList<>(children);\n-\t\tcopy.replaceAll(c->c.resolve(context));\n-\t\treturn new CQOr(copy);\n+\t\tcopy.replaceAll(c -> c.resolve(context));\n+\t\treturn new CQOr(copy, isCreateExists());\n \t}\n-\t\n+\n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tfor(CQElement c:children) {\n+\t\tif (createExists) {\n+\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"OR\"), ResultType.BOOLEAN));\n+\t\t}\n+", "originalCommit": "70388208402b5330b4d8f46f06c9d7ddc520e833", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c37e2e876e922f145a991a3f6f04177be7e71f94", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java b/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java\nindex 500738756..04cf87c5e 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java\n\n@@ -77,13 +77,13 @@ public class CQOr extends CQElement {\n \n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tif (createExists) {\n-\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"OR\"), ResultType.BOOLEAN));\n-\t\t}\n-\n \t\tfor (CQElement c : children) {\n \t\t\tc.collectResultInfos(collector);\n \t\t}\n+\n+\t\tif (createExists) {\n+\t\t\tcollector.add(new SimpleResultInfo(Objects.requireNonNullElse(getLabel(), \"OR\"), ResultType.BOOLEAN));\n+\t\t}\n \t}\n \n \t@Override\n"}}, {"oid": "c37e2e876e922f145a991a3f6f04177be7e71f94", "url": "https://github.com/bakdata/conquery/commit/c37e2e876e922f145a991a3f6f04177be7e71f94", "message": "fix order of resultInfo creation", "committedDate": "2020-10-21T07:38:28Z", "type": "commit"}, {"oid": "1b0870f9989cc1387fe63875fa706d785c8dea3a", "url": "https://github.com/bakdata/conquery/commit/1b0870f9989cc1387fe63875fa706d785c8dea3a", "message": "create sub directory for logical tests", "committedDate": "2020-10-21T08:27:51Z", "type": "commit"}, {"oid": "490f9fa91a46aa7ed93d406d402ab174e0b2e23a", "url": "https://github.com/bakdata/conquery/commit/490f9fa91a46aa7ed93d406d402ab174e0b2e23a", "message": "move old files", "committedDate": "2020-10-21T08:47:59Z", "type": "commit"}, {"oid": "9c62e9b30e7b3a5e3fb130e62f4d4766e1ed9561", "url": "https://github.com/bakdata/conquery/commit/9c62e9b30e7b3a5e3fb130e62f4d4766e1ed9561", "message": "test for aggregators injected by OR/AND", "committedDate": "2020-10-21T08:59:00Z", "type": "commit"}, {"oid": "343f31ce4d560bd16f9d44ad8ca98174e14ddc4f", "url": "https://github.com/bakdata/conquery/commit/343f31ce4d560bd16f9d44ad8ca98174e14ddc4f", "message": "rework AND/NEGATION test to be clearer", "committedDate": "2020-10-21T09:15:48Z", "type": "commit"}, {"oid": "d3bdbe02513203bb4ea569426522ffd4d0fd725a", "url": "https://github.com/bakdata/conquery/commit/d3bdbe02513203bb4ea569426522ffd4d0fd725a", "message": "Merge remote-tracking branch 'origin/develop' into feature/summarising-booleans-operators\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/CQElement.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQAnd.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQExternalResolved.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQOr.java\n#\tdocs/REST API JSONs.md", "committedDate": "2020-11-26T11:24:51Z", "type": "commit"}, {"oid": "4dc497ae8f6130d3eccb977a48a5199a10266476", "url": "https://github.com/bakdata/conquery/commit/4dc497ae8f6130d3eccb977a48a5199a10266476", "message": "automatic update to docs", "committedDate": "2020-11-26T11:27:32Z", "type": "commit"}]}