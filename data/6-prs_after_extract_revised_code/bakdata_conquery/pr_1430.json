{"pr_number": 1430, "pr_title": "call a private method instead of creating a lambda", "pr_createdAt": "2020-11-10T10:14:21Z", "pr_url": "https://github.com/bakdata/conquery/pull/1430", "timeline": [{"oid": "b27b7ec8283dc6db2c098b16aab51ec0e24dce36", "url": "https://github.com/bakdata/conquery/commit/b27b7ec8283dc6db2c098b16aab51ec0e24dce36", "message": "call a private method instead of creating a lambda", "committedDate": "2020-11-10T10:12:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjA3OA==", "url": "https://github.com/bakdata/conquery/pull/1430#discussion_r520482078", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate int parseNewValue(String value) {\n          \n          \n            \n            \tprivate int processNewValue(String value) {", "author": "awildturtok", "createdAt": "2020-11-10T11:12:38Z", "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "diffHunk": "@@ -49,19 +49,20 @@\n \tpublic StringParser(ParserConfig config) {\n \n \t}\n+\t\n+\tprivate int parseNewValue(String value) {", "originalCommit": "b27b7ec8283dc6db2c098b16aab51ec0e24dce36", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fe0a6253a6302f90b697785f3bb273152cb7f68", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java b/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\nindex 000a88dc5..6bb1d6d7e 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n\n@@ -50,7 +50,7 @@ public class StringParser extends Parser<Integer> {\n \n \t}\n \t\n-\tprivate int parseNewValue(String value) {\n+\tprivate int processNewValue(String value) {\n \n \t\t//set longest common prefix and suffix\n \t\tprefix = Strings.commonPrefix(value, Objects.requireNonNullElse(prefix, value));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjE4Mg==", "url": "https://github.com/bakdata/conquery/pull/1430#discussion_r520482182", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn strings.computeIfAbsent(value, this::parseNewValue);\n          \n          \n            \n            \t\treturn strings.computeIfAbsent(value, this::processNewValue);", "author": "awildturtok", "createdAt": "2020-11-10T11:12:48Z", "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "diffHunk": "@@ -49,19 +49,20 @@\n \tpublic StringParser(ParserConfig config) {\n \n \t}\n+\t\n+\tprivate int parseNewValue(String value) {\n \n-\t@Override\n-\tprotected Integer parseValue(String value) throws ParsingException {\n-\t\treturn strings.computeIfAbsent(value, v-> {\n-\t\t\t//new values\n+\t\t//set longest common prefix and suffix\n+\t\tprefix = Strings.commonPrefix(value, Objects.requireNonNullElse(prefix, value));\n+\t\tsuffix = Strings.commonSuffix(value, Objects.requireNonNullElse(suffix, value));\n \n-\t\t\t//set longest common prefix and suffix\n-\t\t\tprefix = Strings.commonPrefix(v, Objects.requireNonNullElse(prefix, v));\n-\t\t\tsuffix = Strings.commonSuffix(v, Objects.requireNonNullElse(suffix, v));\n+\t\t//return next id\n+\t\treturn strings.size();\n+\t}\n \n-\t\t\t//return next id\n-\t\t\treturn strings.size();\n-\t\t});\n+\t@Override\n+\tprotected Integer parseValue(String value) throws ParsingException {\n+\t\treturn strings.computeIfAbsent(value, this::parseNewValue);", "originalCommit": "b27b7ec8283dc6db2c098b16aab51ec0e24dce36", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fe0a6253a6302f90b697785f3bb273152cb7f68", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java b/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\nindex 000a88dc5..6bb1d6d7e 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n\n@@ -50,7 +50,7 @@ public class StringParser extends Parser<Integer> {\n \n \t}\n \t\n-\tprivate int parseNewValue(String value) {\n+\tprivate int processNewValue(String value) {\n \n \t\t//set longest common prefix and suffix\n \t\tprefix = Strings.commonPrefix(value, Objects.requireNonNullElse(prefix, value));\n"}}, {"oid": "2fe0a6253a6302f90b697785f3bb273152cb7f68", "url": "https://github.com/bakdata/conquery/commit/2fe0a6253a6302f90b697785f3bb273152cb7f68", "message": "Update backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n\nCo-authored-by: awildturtok <1553491+awildturtok@users.noreply.github.com>", "committedDate": "2020-11-10T13:31:38Z", "type": "commit"}, {"oid": "a0e2440113ef1cc39d4103ca9d33a0d7d58d3b7c", "url": "https://github.com/bakdata/conquery/commit/a0e2440113ef1cc39d4103ca9d33a0d7d58d3b7c", "message": "Update backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java\n\nCo-authored-by: awildturtok <1553491+awildturtok@users.noreply.github.com>", "committedDate": "2020-11-10T13:31:45Z", "type": "commit"}]}