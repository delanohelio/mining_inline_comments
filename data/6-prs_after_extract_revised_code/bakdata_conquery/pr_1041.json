{"pr_number": 1041, "pr_title": "Realm checks if crediential list is not null", "pr_createdAt": "2020-02-17T16:41:00Z", "pr_url": "https://github.com/bakdata/conquery/pull/1041", "timeline": [{"oid": "6d841fd147d6c5b3a676e7cbcca51f86053c01c9", "url": "https://github.com/bakdata/conquery/commit/6d841fd147d6c5b3a676e7cbcca51f86053c01c9", "message": "Realm checks if crediential list is not null", "committedDate": "2020-02-17T16:40:14Z", "type": "commit"}, {"oid": "d7ba54e75aaba3891e314710f5853aafe919842e", "url": "https://github.com/bakdata/conquery/commit/d7ba54e75aaba3891e314710f5853aafe919842e", "message": "improve exceptions thrown", "committedDate": "2020-02-18T16:16:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MTI5NA==", "url": "https://github.com/bakdata/conquery/pull/1041#discussion_r380791294", "bodyText": "Doku bitte", "author": "awildturtok", "createdAt": "2020-02-18T16:35:44Z", "path": "backend/src/main/java/com/bakdata/conquery/apiv1/auth/PasswordCredential.java", "diffHunk": "@@ -17,5 +18,6 @@\n @AllArgsConstructor\n public class PasswordCredential implements CredentialType {\n \n+\t@NotEmpty", "originalCommit": "d7ba54e75aaba3891e314710f5853aafe919842e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "461267797a11728ba2cb9473d3332f1f56309695", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/apiv1/auth/PasswordCredential.java b/backend/src/main/java/com/bakdata/conquery/apiv1/auth/PasswordCredential.java\nindex 61d99c362..c6c7e8a93 100644\n--- a/backend/src/main/java/com/bakdata/conquery/apiv1/auth/PasswordCredential.java\n+++ b/backend/src/main/java/com/bakdata/conquery/apiv1/auth/PasswordCredential.java\n\n@@ -10,7 +11,7 @@ import org.hibernate.validator.constraints.NotEmpty;\n \n /**\n  * Container for holding a password. This credential type is used by the\n- * {@link LocalAuthenticationRealm}.\n+ * {@link LocalAuthenticationRealm} and can be used in the {@link AuthorizationConfig}. \n  */\n @CPSType(base = CredentialType.class, id = \"PASSWORD\")\n @Data\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwMDcyMQ==", "url": "https://github.com/bakdata/conquery/pull/1041#discussion_r380800721", "bodyText": "kein token loggen bitte", "author": "awildturtok", "createdAt": "2020-02-18T16:50:28Z", "path": "backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java", "diffHunk": "@@ -70,8 +70,9 @@ public void filter(final ContainerRequestContext requestContext) throws IOExcept\n \t\t\t// Success an extracted token could be authenticated\n \t\t\tlog.trace(\"Authentication was successfull for token type {}\", token.getClass().getName());\n \t\t\treturn;\n+\n \t\t}\n-\t\tlog.warn(\"Non of the configured realms was able to successfully authenticate the following token(s).\");\n+\t\tlog.warn(\"Non of the configured realms was able to successfully authenticate the extracted token(s).\");\n \t\tlog.trace(\"The failing tokens were: {}\", failedTokens);", "originalCommit": "d7ba54e75aaba3891e314710f5853aafe919842e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "461267797a11728ba2cb9473d3332f1f56309695", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java b/backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java\nindex 81508bb28..f9056a797 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java\n\n@@ -58,13 +58,13 @@ public class DefaultAuthFilter extends AuthFilter<AuthenticationToken, User> {\n \t\t\tthrow new NotAuthorizedException(\"Failed to authenticate request. The cause has been logged.\");\n \t\t}\n \n-\t\tList<AuthenticationToken> failedTokens = new ArrayList<>();\n+\t\tint failedTokens = 0; \n \n \t\t// The authentication process\n \t\tfor (AuthenticationToken token : tokens) {\n \t\t\t// Submit the token to dropwizard which forwards it to Shiro\n \t\t\tif (!authenticate(requestContext, token, SecurityContext.BASIC_AUTH)) {\n-\t\t\t\tfailedTokens.add(token);\n+\t\t\t\tfailedTokens++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\t// Success an extracted token could be authenticated\n"}}, {"oid": "461267797a11728ba2cb9473d3332f1f56309695", "url": "https://github.com/bakdata/conquery/commit/461267797a11728ba2cb9473d3332f1f56309695", "message": "review changes", "committedDate": "2020-02-20T10:14:39Z", "type": "commit"}, {"oid": "790577415fdd9ffa1e9627b34d68d9da5f880729", "url": "https://github.com/bakdata/conquery/commit/790577415fdd9ffa1e9627b34d68d9da5f880729", "message": "fix token extraction for default realm", "committedDate": "2020-02-20T10:15:07Z", "type": "commit"}]}