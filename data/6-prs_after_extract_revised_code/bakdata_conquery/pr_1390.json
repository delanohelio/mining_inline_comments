{"pr_number": 1390, "pr_title": "Feature/fix processing of emtpy imports", "pr_createdAt": "2020-10-13T12:49:35Z", "pr_url": "https://github.com/bakdata/conquery/pull/1390", "timeline": [{"oid": "7b4a3645f9dab983a3768934b0ab6f37bed1a44d", "url": "https://github.com/bakdata/conquery/commit/7b4a3645f9dab983a3768934b0ab6f37bed1a44d", "message": "check if there are any groups to be imported", "committedDate": "2020-10-13T11:57:50Z", "type": "commit"}, {"oid": "5a299f4319faf30613f76402969a25c636985c9b", "url": "https://github.com/bakdata/conquery/commit/5a299f4319faf30613f76402969a25c636985c9b", "message": "cleanup progress reporter", "committedDate": "2020-10-13T12:48:16Z", "type": "commit"}, {"oid": "c9c2bac9d8c306ef13fec7dc98da00c6b395ac2b", "url": "https://github.com/bakdata/conquery/commit/c9c2bac9d8c306ef13fec7dc98da00c6b395ac2b", "message": "fix wrong member usage in getAbsoluteMax(), make estimation more resilent", "committedDate": "2020-10-13T13:53:02Z", "type": "commit"}, {"oid": "8e8a81b8acd40e0527df204a7fe9a4fd13ca07a0", "url": "https://github.com/bakdata/conquery/commit/8e8a81b8acd40e0527df204a7fe9a4fd13ca07a0", "message": "remove unused function", "committedDate": "2020-10-14T07:17:43Z", "type": "commit"}, {"oid": "1c41a0839a833b351ded8c8b1cf3202b2014e3ca", "url": "https://github.com/bakdata/conquery/commit/1c41a0839a833b351ded8c8b1cf3202b2014e3ca", "message": "fix self deletion of included buckets", "committedDate": "2020-10-14T08:05:18Z", "type": "commit"}, {"oid": "f0023ba9c50b98235199c35036386000bbc49c1e", "url": "https://github.com/bakdata/conquery/commit/f0023ba9c50b98235199c35036386000bbc49c1e", "message": "remove bucket test, because the bucket number was missinterpreted", "committedDate": "2020-10-14T10:35:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1OTczNQ==", "url": "https://github.com/bakdata/conquery/pull/1390#discussion_r506259735", "bodyText": "Warum klonst du die hier? Du bearbeitest sie gar nicht", "author": "awildturtok", "createdAt": "2020-10-16T10:17:53Z", "path": "backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java", "diffHunk": "@@ -63,20 +63,14 @@ public static BucketManager create(Worker worker, WorkerStorage storage) {\n \t\tInt2ObjectMap<Entity> entities = new Int2ObjectAVLTreeMap<>();\n \t\tMap<ConnectorId, Int2ObjectMap<List<CBlock>>> connectorCBlocks = new HashMap<>(150);\n \t\t\n-\t\tIntArraySet requiredBuckets = worker.getInfo().getIncludedBuckets();\n-\t\tlog.trace(\"Trying to load these buckets: {}\", requiredBuckets);\n+\t\tIntArraySet assignedBucketNumbers = worker.getInfo().getIncludedBuckets().clone();", "originalCommit": "f0023ba9c50b98235199c35036386000bbc49c1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3MjYwMQ==", "url": "https://github.com/bakdata/conquery/pull/1390#discussion_r507672601", "bodyText": "Das war noch von meinem vorherigen Ansatz, Das l\u00f6sche ich", "author": "thoniTUB", "createdAt": "2020-10-19T11:29:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI1OTczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e13f96bd92ac00ea620f97d2b781ddf5cad71862", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java b/backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java\nindex 1c5bf8571..3bc8ed484 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java\n\n@@ -63,7 +63,7 @@ public class BucketManager {\n \t\tInt2ObjectMap<Entity> entities = new Int2ObjectAVLTreeMap<>();\n \t\tMap<ConnectorId, Int2ObjectMap<List<CBlock>>> connectorCBlocks = new HashMap<>(150);\n \t\t\n-\t\tIntArraySet assignedBucketNumbers = worker.getInfo().getIncludedBuckets().clone();\n+\t\tIntArraySet assignedBucketNumbers = worker.getInfo().getIncludedBuckets();\n \t\tlog.trace(\"Trying to load these buckets that map to: {}\", assignedBucketNumbers);\n \t\tfor (Bucket bucket : storage.getAllBuckets()) {\n \t\t\tif(!assignedBucketNumbers.contains(bucket.getBucket())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2MDk3Ng==", "url": "https://github.com/bakdata/conquery/pull/1390#discussion_r506260976", "bodyText": "nice!", "author": "awildturtok", "createdAt": "2020-10-16T10:19:27Z", "path": "backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterImpl.java", "diffHunk": "@@ -104,29 +118,25 @@ public void setMax(long max) {\n \n \t@Override\n \tpublic void done() {\n+\t\tif(end > -1) {\n+\t\t\tlog.warn(\"Done was called again for {}\", this);\n+\t\t\treturn;\n+\t\t}\n \t\tend = System.currentTimeMillis();\n \n-\t\tfor (ChildProgressReporter child : children) {\n+\t\tfor (ProgressReporter child : children) {\n \t\t\tif (!child.isDone()) {\n-\t\t\t\tthrow new IllegalStateException(\"One or more Children are not done yet\");\n+\t\t\t\tlog.warn(\"One or more Children are not done yet\");\n \t\t\t}\n \t\t}\n-\n-\t\t// Some numerical error is acceptable here.\n-\t\tfinal double progress = getProgress();\n-\t\tif (DoubleMath.fuzzyEquals(progress,1,0.1d)) {\n-\t\t\tlog.warn(\"ProgressReporter is done but Progress is just {}\", progress);\n+\t\t\n+\t\tif(getAbsoluteProgress()<max) {\n+\t\t\tlog.trace(\"Done was called before all steps were been reported. There might be missing reporting steps in the code.\");\n \t\t}\n \n \t\tinnerProgress = max - reservedForChildren;\n \t}\n \n-", "originalCommit": "f0023ba9c50b98235199c35036386000bbc49c1e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c1ee13e73edc77d478abe1bed95ebdacbf932c92", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterImpl.java b/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterImpl.java\nindex 509b65511..7b56045bf 100644\n--- a/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterImpl.java\n+++ b/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterImpl.java\n\n@@ -118,11 +120,11 @@ public class ProgressReporterImpl implements ProgressReporter {\n \n \t@Override\n \tpublic void done() {\n-\t\tif(end > -1) {\n+\t\tif(endTimeMillis > -1) {\n \t\t\tlog.warn(\"Done was called again for {}\", this);\n \t\t\treturn;\n \t\t}\n-\t\tend = System.currentTimeMillis();\n+\t\tendTimeMillis = System.currentTimeMillis();\n \n \t\tfor (ProgressReporter child : children) {\n \t\t\tif (!child.isDone()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2MjM0Ng==", "url": "https://github.com/bakdata/conquery/pull/1390#discussion_r506262346", "bodyText": "Wie kann es hier zu einer Exception kommen und kannst du das nicht selber abfangen?", "author": "awildturtok", "createdAt": "2020-10-16T10:21:02Z", "path": "backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterUtil.java", "diffHunk": "@@ -24,8 +26,17 @@\n \t\tif (done) {\n \t\t\treturn ProgressReporterUtil.MAX_PROGRESS;\n \t\t}\n+\t\t\n+\t\tboolean canEstimate = true;\n+\t\tlong estimateMillis = 0;\n+\t\ttry {\t\t\t\n+\t\t\testimateMillis = DoubleMath.roundToLong(elapsedMillis / progress - elapsedMillis, RoundingMode.HALF_UP);", "originalCommit": "f0023ba9c50b98235199c35036386000bbc49c1e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3NDE5MQ==", "url": "https://github.com/bakdata/conquery/pull/1390#discussion_r507674191", "bodyText": "Ich wusste zu dem zeitpunkt nur, dass eine ArithmeticException geworfen wurde, Aber nicht den Grund daf\u00fcr. Jetzt wei\u00df ich, dass progress==0 ist und kann es mir nochmal anschauen.", "author": "thoniTUB", "createdAt": "2020-10-19T11:32:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI2MjM0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "c1ee13e73edc77d478abe1bed95ebdacbf932c92", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterUtil.java b/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterUtil.java\nindex 35d5bf5b0..2a92670fd 100644\n--- a/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterUtil.java\n+++ b/backend/src/main/java/com/bakdata/conquery/util/progressreporter/ProgressReporterUtil.java\n\n@@ -22,21 +22,13 @@ public class ProgressReporterUtil {\n \t/* package */ final static String UNKNOWN = \"unknown     \";\n \t/* package */ final static String MAX_PROGRESS = \"done\";\n \n-\t/* package */ String buildProgressReportString(boolean done, double progress, long elapsedMillis, long waitedMillis) {\n+\t/* package */ String buildProgressReportString(boolean done, long progress, long maxProgress, long elapsedMillis, long waitedMillis) {\n \t\tif (done) {\n \t\t\treturn ProgressReporterUtil.MAX_PROGRESS;\n \t\t}\n \t\t\n-\t\tboolean canEstimate = true;\n-\t\tlong estimateMillis = 0;\n-\t\ttry {\t\t\t\n-\t\t\testimateMillis = DoubleMath.roundToLong(elapsedMillis / progress - elapsedMillis, RoundingMode.HALF_UP);\n-\t\t}catch (Exception e) {\n-\t\t\tlog.warn(\"Could not estimate the progress for the current state: done({}), progress({}), elapsedMillis({}), waitedMillis({})\", done, progress, elapsedMillis, waitedMillis,e);\n-\t\t\tcanEstimate = false;\n-\t\t}\n-\n-\t\tif (progress == 0 || !canEstimate) {\n+\t\tif (progress == 0 || maxProgress == 0) {\n+\t\t\t// When no estimate can be calculated\n \t\t\treturn String.format(\n \t\t\t\t\t\"waited %s - %3d%% - est. %s\",\n \t\t\t\t\tProgressReporterUtil.TIME_FORMATTER.format(LocalTime.MIDNIGHT.plus(Duration.ofMillis(waitedMillis))),\n"}}, {"oid": "6a53ef1fc74f830e13312a55189a9b49659f6195", "url": "https://github.com/bakdata/conquery/commit/6a53ef1fc74f830e13312a55189a9b49659f6195", "message": "Bump javaparser-symbol-solver-core from 3.16.1 to 3.16.2\n\nBumps [javaparser-symbol-solver-core](https://github.com/javaparser/javaparser) from 3.16.1 to 3.16.2.\n- [Release notes](https://github.com/javaparser/javaparser/releases)\n- [Changelog](https://github.com/javaparser/javaparser/blob/master/changelog.md)\n- [Commits](https://github.com/javaparser/javaparser/compare/javaparser-parent-3.16.1...javaparser-parent-3.16.2)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>", "committedDate": "2020-10-19T13:07:48Z", "type": "commit"}, {"oid": "9cfc555130a573edfbf1e3f5e279f1ddd6de2988", "url": "https://github.com/bakdata/conquery/commit/9cfc555130a573edfbf1e3f5e279f1ddd6de2988", "message": "use concept tree child labels in column name", "committedDate": "2020-10-19T13:07:49Z", "type": "commit"}, {"oid": "c55cc5bfdca52f7ba0de8e0dbba66d0d211d5061", "url": "https://github.com/bakdata/conquery/commit/c55cc5bfdca52f7ba0de8e0dbba66d0d211d5061", "message": "fixes test-env: remove column name from printsettings in form test", "committedDate": "2020-10-19T13:07:49Z", "type": "commit"}, {"oid": "8c5f34027550220311fa655e4814c2dade8ae88b", "url": "https://github.com/bakdata/conquery/commit/8c5f34027550220311fa655e4814c2dade8ae88b", "message": "rebase fixes", "committedDate": "2020-10-19T13:07:50Z", "type": "commit"}, {"oid": "c512116ee6bd1437fd6d32c94f3873d16106a736", "url": "https://github.com/bakdata/conquery/commit/c512116ee6bd1437fd6d32c94f3873d16106a736", "message": "adds test", "committedDate": "2020-10-19T13:07:50Z", "type": "commit"}, {"oid": "2b5641ed458cb446c6918fe284118eefe3745d60", "url": "https://github.com/bakdata/conquery/commit/2b5641ed458cb446c6918fe284118eefe3745d60", "message": "changes prettyprint for form tests back to true", "committedDate": "2020-10-19T13:07:50Z", "type": "commit"}, {"oid": "e13f96bd92ac00ea620f97d2b781ddf5cad71862", "url": "https://github.com/bakdata/conquery/commit/e13f96bd92ac00ea620f97d2b781ddf5cad71862", "message": "remove cloning of struct that is not mutated", "committedDate": "2020-10-19T13:07:50Z", "type": "commit"}, {"oid": "c1ee13e73edc77d478abe1bed95ebdacbf932c92", "url": "https://github.com/bakdata/conquery/commit/c1ee13e73edc77d478abe1bed95ebdacbf932c92", "message": "use absolute progress and millis everywhere", "committedDate": "2020-10-19T13:07:50Z", "type": "commit"}, {"oid": "7ab4c10175de469ab3621a05bab93616e1a178aa", "url": "https://github.com/bakdata/conquery/commit/7ab4c10175de469ab3621a05bab93616e1a178aa", "message": "progress reporter serialization", "committedDate": "2020-10-19T13:30:59Z", "type": "commit"}]}