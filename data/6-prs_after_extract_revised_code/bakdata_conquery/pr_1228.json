{"pr_number": 1228, "pr_title": "also send query description in status from query-endpoint", "pr_createdAt": "2020-06-17T12:19:07Z", "pr_url": "https://github.com/bakdata/conquery/pull/1228", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNDE5OQ==", "url": "https://github.com/bakdata/conquery/pull/1228#discussion_r444124199", "bodyText": "kannst auch ein enumSet machen statt with$Boolean", "author": "awildturtok", "createdAt": "2020-06-23T10:29:48Z", "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -204,25 +203,27 @@ protected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url,\n \t */\n \tprotected abstract URL getDownloadURL(URLBuilder url);\n \n-\tpublic ExecutionStatus buildStatus(@NonNull MasterMetaStorage storage, URLBuilder url, User user) {\n+\tpublic ExecutionStatus buildStatus(@NonNull MasterMetaStorage storage, URLBuilder url, User user, boolean withColumnDescription, boolean withSource) {", "originalCommit": "5982f751788a30cfeb98c531114aba9b3427676f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17b8444b237547eca16c25b6397b152b0bf08512", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java b/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\nindex d9babd08e..bbed021b4 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\n\n@@ -229,9 +222,10 @@ public abstract class ManagedExecution<R extends ShardResult> extends Identifiab\n \t\tquery.visit(namespacesIdCollector);\n \t\tList<Permission> permissions = new ArrayList<>();\n \t\tQueryUtils.generateConceptReadPermissions(namespacesIdCollector, permissions);\n-\t\t\n+\n \t\tboolean canExpand = user.isPermittedAll(permissions);\n \n+\n \t\tstatus.setCanExpand(canExpand);\n \t\tstatus.setQuery(canExpand ? getSubmitted() : null);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNTIzMg==", "url": "https://github.com/bakdata/conquery/pull/1228#discussion_r444125232", "bodyText": "abstract?", "author": "awildturtok", "createdAt": "2020-06-23T10:31:50Z", "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -204,25 +203,27 @@ protected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url,\n \t */\n \tprotected abstract URL getDownloadURL(URLBuilder url);\n \n-\tpublic ExecutionStatus buildStatus(@NonNull MasterMetaStorage storage, URLBuilder url, User user) {\n+\tpublic ExecutionStatus buildStatus(@NonNull MasterMetaStorage storage, URLBuilder url, User user, boolean withColumnDescription, boolean withSource) {\n \t\tExecutionStatus status = new ExecutionStatus();\n-\t\tsetStatusBase(storage, url, user, status);\n+\t\tsetStatusBase(storage, url, user, status, withColumnDescription);\n+\t\tif(withColumnDescription) {\n+\t\t\tsetAdditionalFieldsForStatusWithColumnDescription(storage, url, user, status);\n+\t\t}\n+\t\tif(withSource) {\t\t\t\n+\t\t\tsetAdditionalFieldsForStatusWithSource(storage, url, user, status);\n+\t\t}\n \t\treturn status;\n \t\t\n-\t\t\n \t}\n-\t\n-\tpublic ExecutionStatus buildStatusWithSource(@NonNull MasterMetaStorage storage, URLBuilder url, User user) {\n-\t\tExecutionStatus.WithSingleQuery status = new ExecutionStatus.WithSingleQuery();\n-\t\tsetStatusBase(storage, url, user, status);\n-\t\tsetAdditionalFieldsForStatusWithSource(storage, url, user, status);\n-\t\treturn status;\n+\n+\tprotected void setAdditionalFieldsForStatusWithColumnDescription(@NonNull MasterMetaStorage storage, URLBuilder url, User user, ExecutionStatus status) {", "originalCommit": "5982f751788a30cfeb98c531114aba9b3427676f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDcwNzQzNg==", "url": "https://github.com/bakdata/conquery/pull/1228#discussion_r444707436", "bodyText": "Dann m\u00fcssten alle das implementieren, aber momentan wird es nur von der ManagedQuery gebraucht", "author": "thoniTUB", "createdAt": "2020-06-24T07:47:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNTIzMg=="}], "type": "inlineReview", "revised_code": {"commit": "17b8444b237547eca16c25b6397b152b0bf08512", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java b/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\nindex d9babd08e..bbed021b4 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\n\n@@ -229,9 +222,10 @@ public abstract class ManagedExecution<R extends ShardResult> extends Identifiab\n \t\tquery.visit(namespacesIdCollector);\n \t\tList<Permission> permissions = new ArrayList<>();\n \t\tQueryUtils.generateConceptReadPermissions(namespacesIdCollector, permissions);\n-\t\t\n+\n \t\tboolean canExpand = user.isPermittedAll(permissions);\n \n+\n \t\tstatus.setCanExpand(canExpand);\n \t\tstatus.setQuery(canExpand ? getSubmitted() : null);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNTYyMQ==", "url": "https://github.com/bakdata/conquery/pull/1228#discussion_r444125621", "bodyText": "die methode ist hier eh schon zuende oder fehlt heir was?", "author": "awildturtok", "createdAt": "2020-06-23T10:32:33Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java", "diffHunk": "@@ -141,23 +140,21 @@ public ResultInfoCollector collectResultInfos() {\n \t}\n \t\n \t@Override\n-\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull  User user, @NonNull ExecutionStatus status) {\n-\n-\t\tsuper.setStatusBase(storage, url, user, status);\n+\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull User user, @NonNull ExecutionStatus status, boolean withColumnDescription) {\n+\t\tsuper.setStatusBase(storage, url, user, status, withColumnDescription);\n \t\tstatus.setNumberOfResults(lastResultCount);\n+\t\tif(!withColumnDescription) {\n+\t\t\treturn;\n+\t\t}", "originalCommit": "5982f751788a30cfeb98c531114aba9b3427676f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7eaf3230d54df04cf91b47b12c9e9d2e0145ab02", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java b/backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java\nindex 30f3977ed..26a6a3267 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java\n\n@@ -140,12 +142,9 @@ public class ManagedQuery extends ManagedExecution<ShardResult> {\n \t}\n \t\n \t@Override\n-\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull User user, @NonNull ExecutionStatus status, boolean withColumnDescription) {\n-\t\tsuper.setStatusBase(storage, url, user, status, withColumnDescription);\n+\tprotected void setStatusBase(@NonNull MasterMetaStorage storage, URLBuilder url, @NonNull User user, @NonNull ExecutionStatus status) {\n+\t\tsuper.setStatusBase(storage, url, user, status);\n \t\tstatus.setNumberOfResults(lastResultCount);\n-\t\tif(!withColumnDescription) {\n-\t\t\treturn;\n-\t\t}\n \t}\n \t\n \t@Override\n"}}, {"oid": "17b8444b237547eca16c25b6397b152b0bf08512", "url": "https://github.com/bakdata/conquery/commit/17b8444b237547eca16c25b6397b152b0bf08512", "message": "also send query description in status from query-endpoint", "committedDate": "2020-06-24T07:41:42Z", "type": "commit"}, {"oid": "5dd2bc55379057cd2973adf6f2eba9b052423c04", "url": "https://github.com/bakdata/conquery/commit/5dd2bc55379057cd2973adf6f2eba9b052423c04", "message": "automatic update to docs", "committedDate": "2020-06-24T07:41:42Z", "type": "commit"}, {"oid": "7eaf3230d54df04cf91b47b12c9e9d2e0145ab02", "url": "https://github.com/bakdata/conquery/commit/7eaf3230d54df04cf91b47b12c9e9d2e0145ab02", "message": "uses an enumset for flagging instead of booleans", "committedDate": "2020-06-24T07:41:42Z", "type": "commit"}, {"oid": "7eaf3230d54df04cf91b47b12c9e9d2e0145ab02", "url": "https://github.com/bakdata/conquery/commit/7eaf3230d54df04cf91b47b12c9e9d2e0145ab02", "message": "uses an enumset for flagging instead of booleans", "committedDate": "2020-06-24T07:41:42Z", "type": "forcePushed"}, {"oid": "c9b8326a9580601f11ae9a6e5f0fedead706bdef", "url": "https://github.com/bakdata/conquery/commit/c9b8326a9580601f11ae9a6e5f0fedead706bdef", "message": "configures CSV parser to detect line seperator automatically, so that there is no confilct during required header matching between windows and linux ending", "committedDate": "2020-06-24T11:37:05Z", "type": "commit"}]}