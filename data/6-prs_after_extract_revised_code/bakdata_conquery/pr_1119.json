{"pr_number": 1119, "pr_title": "capture error due to form query creation", "pr_createdAt": "2020-03-24T11:20:36Z", "pr_url": "https://github.com/bakdata/conquery/pull/1119", "timeline": [{"oid": "983be4bf21dd4366929ff8005090c100981ba5fd", "url": "https://github.com/bakdata/conquery/commit/983be4bf21dd4366929ff8005090c100981ba5fd", "message": "capture error due to form query creation", "committedDate": "2020-03-24T11:15:52Z", "type": "commit"}, {"oid": "f92d6faaebcbe4a17d5183d5e9e0ca947a54ff89", "url": "https://github.com/bakdata/conquery/commit/f92d6faaebcbe4a17d5183d5e9e0ca947a54ff89", "message": "adds more error messages", "committedDate": "2020-03-24T11:29:28Z", "type": "commit"}, {"oid": "886eefcb865e88bb32f8a0b085a9ae24a25d18dc", "url": "https://github.com/bakdata/conquery/commit/886eefcb865e88bb32f8a0b085a9ae24a25d18dc", "message": "use a static validator", "committedDate": "2020-03-24T14:08:47Z", "type": "commit"}, {"oid": "5a227c48e0f61beb2f2fd7439b74472c295e22eb", "url": "https://github.com/bakdata/conquery/commit/5a227c48e0f61beb2f2fd7439b74472c295e22eb", "message": "fix race condition on query state", "committedDate": "2020-03-24T14:09:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4NjQzMA==", "url": "https://github.com/bakdata/conquery/pull/1119#discussion_r397186430", "bodyText": "MultiException und dann ordentlich als cause einf\u00fcgen?", "author": "awildturtok", "createdAt": "2020-03-24T14:17:30Z", "path": "backend/src/main/java/com/bakdata/conquery/models/forms/managed/ManagedForm.java", "diffHunk": "@@ -139,7 +140,18 @@ public ExecutionStatus buildStatus(@NonNull MasterMetaStorage storage, URLBuilde\n \t */\n \t@Override\n \tpublic void addResult(@NonNull MasterMetaStorage storage, FormSharedResult result) {\n-\t\tManagedQuery subQuery = flatSubQueries.get(result.getSubqueryId());\n+\t\tManagedExecutionId subquery = result.getSubqueryId();\n+\t\tif( subquery == null ) {\n+\t\t\tfail(storage);\n+\t\t\tlog.warn(\"Form failed in query plan creation due to: \" + result.getResults().stream()", "originalCommit": "5a227c48e0f61beb2f2fd7439b74472c295e22eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01471c813bf740dab5c8e29667335a6726d1e9c7", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/forms/managed/ManagedForm.java b/backend/src/main/java/com/bakdata/conquery/models/forms/managed/ManagedForm.java\nindex 852969de4..a5c8fc1a5 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/forms/managed/ManagedForm.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/forms/managed/ManagedForm.java\n\n@@ -141,14 +142,15 @@ public class ManagedForm extends ManagedExecution<FormSharedResult> {\n \t@Override\n \tpublic void addResult(@NonNull MasterMetaStorage storage, FormSharedResult result) {\n \t\tManagedExecutionId subquery = result.getSubqueryId();\n-\t\tif( subquery == null ) {\n+\t\tif (subquery == null) {\n \t\t\tfail(storage);\n-\t\t\tlog.warn(\"Form failed in query plan creation due to: \" + result.getResults().stream()\n-\t\t\t\t.filter(r -> (r instanceof FailedEntityResult))\n-\t\t\t\t.map(FailedEntityResult.class::cast)\n-\t\t\t\t.map(FailedEntityResult::getExceptionStackTrace)\n-\t\t\t\t.reduce(\"Encountered errors\", (a,b) -> String.join(\"\\n\", a, b))\n-\t\t\t\t);\n+\t\t\tlog.warn(\n+\t\t\t\t\"Form failed in query plan creation. \",\n+\t\t\t\tnew MultiException(result.getResults().stream()\n+\t\t\t\t\t.filter(r -> (r instanceof FailedEntityResult))\n+\t\t\t\t\t.map(FailedEntityResult.class::cast)\n+\t\t\t\t\t.map(FailedEntityResult::getThrowable)\n+\t\t\t\t\t.collect(Collectors.toList())));\n \t\t\treturn;\n \t\t}\n \t\tManagedQuery subQuery = flatSubQueries.get(subquery);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4NjY5Nw==", "url": "https://github.com/bakdata/conquery/pull/1119#discussion_r397186697", "bodyText": "Cause \u00fcber SLF4J laufen lassen", "author": "awildturtok", "createdAt": "2020-03-24T14:17:51Z", "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java", "diffHunk": "@@ -41,6 +43,7 @@ public void react(Worker context) throws Exception {\n \t\ttry {\n \t\t\tplans = execution.createQueryPlans(new QueryPlanContext(context)).entrySet();\t\t\n \t\t} catch (Exception e) {\n+\t\t\tlog.error(\"Failed to create query plans for \" + execution.getId() + \". Cause: \"+ e );", "originalCommit": "5a227c48e0f61beb2f2fd7439b74472c295e22eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "01471c813bf740dab5c8e29667335a6726d1e9c7", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java b/backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java\nindex 249ae734c..24a1be006 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java\n\n@@ -43,7 +43,7 @@ public class ExecuteQuery extends WorkerMessage {\n \t\ttry {\n \t\t\tplans = execution.createQueryPlans(new QueryPlanContext(context)).entrySet();\t\t\n \t\t} catch (Exception e) {\n-\t\t\tlog.error(\"Failed to create query plans for \" + execution.getId() + \". Cause: \"+ e );\n+\t\t\tlog.error(\"Failed to create query plans for \" + execution.getId(), e );\n \t\t\t// If one of the plans can not be created (maybe due to a Id that references a non existing concept) fail the whole job.\n \t\t\tsendFailureToMaster(execution.getInitializedShardResult(null), execution, context, e);\n \t\t\treturn;\n"}}, {"oid": "01471c813bf740dab5c8e29667335a6726d1e9c7", "url": "https://github.com/bakdata/conquery/commit/01471c813bf740dab5c8e29667335a6726d1e9c7", "message": "review changes", "committedDate": "2020-03-24T15:24:17Z", "type": "commit"}, {"oid": "a1b4b2542cbf53fed91af529b4f0f545e512b470", "url": "https://github.com/bakdata/conquery/commit/a1b4b2542cbf53fed91af529b4f0f545e512b470", "message": "correct compiler errors", "committedDate": "2020-03-24T15:46:37Z", "type": "commit"}]}