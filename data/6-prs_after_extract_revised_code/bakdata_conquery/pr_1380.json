{"pr_number": 1380, "pr_title": "cleanup CalculateCBlocks method signature", "pr_createdAt": "2020-10-05T20:01:22Z", "pr_url": "https://github.com/bakdata/conquery/pull/1380", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA0NzY2NA==", "url": "https://github.com/bakdata/conquery/pull/1380#discussion_r500047664", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal Import _import = bucket.getImp();\n          \n          \n            \n            \t\tfinal Import imp = bucket.getImp();", "author": "awildturtok", "createdAt": "2020-10-06T07:01:50Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/tree/ConceptTreeConnector.java", "diffHunk": "@@ -72,20 +72,21 @@ public TreeConcept getConcept() {\n \t}\n \n \t@Override\n-\tpublic void calculateCBlock(CBlock cBlock, Bucket bucket, Import imp) {\n+\tpublic void calculateCBlock(CBlock cBlock, Bucket bucket) {\n \n \t\tfinal Column column = getColumn();\n \n \t\tfinal TreeConcept treeConcept = getConcept();\n \n-\t\tfinal ImportId importId = imp.getId();\n+\t\tfinal Import _import = bucket.getImp();", "originalCommit": "719cff0363d88b8ca4f36ad48c6c812fa1c32f9c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4fe7fc46ad21dc8221572c8d2d57b0ee6fb9775d", "chunk": "diff --git a/backend/src/main/java/com/bakdata/conquery/models/concepts/tree/ConceptTreeConnector.java b/backend/src/main/java/com/bakdata/conquery/models/concepts/tree/ConceptTreeConnector.java\nindex 4a140b566..6e68b4b45 100644\n--- a/backend/src/main/java/com/bakdata/conquery/models/concepts/tree/ConceptTreeConnector.java\n+++ b/backend/src/main/java/com/bakdata/conquery/models/concepts/tree/ConceptTreeConnector.java\n\n@@ -78,15 +78,15 @@ public class ConceptTreeConnector extends Connector {\n \n \t\tfinal TreeConcept treeConcept = getConcept();\n \n-\t\tfinal Import _import = bucket.getImp();\n-\t\tfinal ImportId importId = _import.getId();\n+\t\tfinal Import imp = bucket.getImp();\n+\t\tfinal ImportId importId = imp.getId();\n \n \t\tfinal AStringType<?> stringType;\n \n \t\t// If we have a column and it is of string-type, we create indices and caches.\n-\t\tif (column != null && _import.getColumns()[column.getPosition()].getType() instanceof AStringType) {\n+\t\tif (column != null && imp.getColumns()[column.getPosition()].getType() instanceof AStringType) {\n \n-\t\t\tCType<?, ?> cType = _import.getColumns()[column.getPosition()].getType();\n+\t\t\tCType<?, ?> cType = imp.getColumns()[column.getPosition()].getType();\n \n \t\t\tstringType = (AStringType<?>) cType;\n \n"}}, {"oid": "f2672ec84fe3122792370602d91d9d5206e12f84", "url": "https://github.com/bakdata/conquery/commit/f2672ec84fe3122792370602d91d9d5206e12f84", "message": "removes import from function declaration, because its already in the bucket", "committedDate": "2020-10-07T06:47:27Z", "type": "commit"}, {"oid": "4fe7fc46ad21dc8221572c8d2d57b0ee6fb9775d", "url": "https://github.com/bakdata/conquery/commit/4fe7fc46ad21dc8221572c8d2d57b0ee6fb9775d", "message": "renames variable", "committedDate": "2020-10-07T06:47:27Z", "type": "commit"}, {"oid": "4fe7fc46ad21dc8221572c8d2d57b0ee6fb9775d", "url": "https://github.com/bakdata/conquery/commit/4fe7fc46ad21dc8221572c8d2d57b0ee6fb9775d", "message": "renames variable", "committedDate": "2020-10-07T06:47:27Z", "type": "forcePushed"}, {"oid": "8ec8bf94efb7cacd76612349da2764bde51973ee", "url": "https://github.com/bakdata/conquery/commit/8ec8bf94efb7cacd76612349da2764bde51973ee", "message": "Merge branch 'develop' into feature/cleanup-calculateCBlocks-parameters", "committedDate": "2020-10-07T16:01:30Z", "type": "commit"}]}