{"pr_number": 7941, "pr_title": "KAFKA-9181; Maintain clean separation between local and group subscriptions in consumer's SubscriptionState", "pr_createdAt": "2020-01-12T16:51:09Z", "pr_url": "https://github.com/apache/kafka/pull/7941", "timeline": [{"oid": "63aa4e38d29862618e934a49a5671dee3ad2463d", "url": "https://github.com/apache/kafka/commit/63aa4e38d29862618e934a49a5671dee3ad2463d", "message": "KAFKA-9181; Ensure SubscriptionState.groupSubscription is updated even if onJoinPrepare not invoked after subscribe", "committedDate": "2020-01-22T12:44:18Z", "type": "commit"}, {"oid": "4384fbce029ab8431d82263bfb1c6079e69e6a81", "url": "https://github.com/apache/kafka/commit/4384fbce029ab8431d82263bfb1c6079e69e6a81", "message": "Address review comment", "committedDate": "2020-01-22T12:44:18Z", "type": "commit"}, {"oid": "797aa7c527de1ea635fa045aec4ea53693e38792", "url": "https://github.com/apache/kafka/commit/797aa7c527de1ea635fa045aec4ea53693e38792", "message": "Address review comment", "committedDate": "2020-01-22T14:43:45Z", "type": "commit"}, {"oid": "6f574eaaa40d40b530808a50ced0f328012ade99", "url": "https://github.com/apache/kafka/commit/6f574eaaa40d40b530808a50ced0f328012ade99", "message": "Don't include subscription topics in `groupSubscription`", "committedDate": "2020-01-22T15:12:46Z", "type": "commit"}, {"oid": "6f574eaaa40d40b530808a50ced0f328012ade99", "url": "https://github.com/apache/kafka/commit/6f574eaaa40d40b530808a50ced0f328012ade99", "message": "Don't include subscription topics in `groupSubscription`", "committedDate": "2020-01-22T15:12:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDkwMQ==", "url": "https://github.com/apache/kafka/pull/7941#discussion_r369734901", "bodyText": "It might borderline overkill, but I'm considering if we could avoid the copy here with logic like the following:\nif (!groupSubscription.isEmpty())\n  return groupSubscription;\nelse\n  return subscription;\n\nBasically relying on the the group subscription being a superset of the local subscription when it is defined.", "author": "hachikuji", "createdAt": "2020-01-22T18:41:28Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java", "diffHunk": "@@ -335,22 +329,24 @@ synchronized boolean matchesSubscribedPattern(String topic) {\n     }\n \n     /**\n-     * Get the subscription for the group. For the leader, this will include the union of the\n-     * subscriptions of all group members. For followers, it is just that member's subscription.\n-     * This is used when querying topic metadata to detect the metadata changes which would\n+     * Get the subcription topics for which metadata is required . For the leader, this will include\n+     * the union of the subscriptions of all group members. For followers, it is just that member's\n+     * subscription. This is used when querying topic metadata to detect the metadata changes which would\n      * require rebalancing. The leader fetches metadata for all topics in the group so that it\n      * can do the partition assignment (which requires at least partition counts for all topics\n      * to be assigned).\n      *\n      * @return The union of all subscribed topics in the group if this member is the leader\n      *   of the current generation; otherwise it returns the same set as {@link #subscription()}\n      */\n-    synchronized Set<String> groupSubscription() {\n-        return this.groupSubscription;\n+    synchronized Set<String> metadataTopics() {\n+        Set<String> topics = new HashSet<>(groupSubscription);", "originalCommit": "6f574eaaa40d40b530808a50ced0f328012ade99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc4ODc1MQ==", "url": "https://github.com/apache/kafka/pull/7941#discussion_r369788751", "bodyText": "@hachikuji Thanks for the review, updated. I had to update one unit test since it wasn't using a superset for group subscription, but think that is ok.", "author": "rajinisivaram", "createdAt": "2020-01-22T20:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDkwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "57765e11ecfa34b51048e1f1c361ecf1ab63dbd2", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java\nindex 7ed8614d21..ec7c376ffc 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java\n\n@@ -340,9 +340,7 @@ public class SubscriptionState {\n      *   of the current generation; otherwise it returns the same set as {@link #subscription()}\n      */\n     synchronized Set<String> metadataTopics() {\n-        Set<String> topics = new HashSet<>(groupSubscription);\n-        topics.addAll(subscription);\n-        return topics;\n+        return groupSubscription.isEmpty() ? subscription : groupSubscription;\n     }\n \n     synchronized boolean needsMetadata(String topic) {\n"}}, {"oid": "57765e11ecfa34b51048e1f1c361ecf1ab63dbd2", "url": "https://github.com/apache/kafka/commit/57765e11ecfa34b51048e1f1c361ecf1ab63dbd2", "message": "Address review comment", "committedDate": "2020-01-22T20:28:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxOTI3OQ==", "url": "https://github.com/apache/kafka/pull/7941#discussion_r370219279", "bodyText": "I guess we could restore this location with the change to the group subscription maintenance? I don't feel too strongly since the new location works also.", "author": "hachikuji", "createdAt": "2020-01-23T16:22:43Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java", "diffHunk": "@@ -689,7 +690,6 @@ protected void onJoinPrepare(int generation, String memberId) {\n         }\n \n         isLeader = false;\n-        subscriptions.resetGroupSubscription();", "originalCommit": "57765e11ecfa34b51048e1f1c361ecf1ab63dbd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODgxNg==", "url": "https://github.com/apache/kafka/pull/7941#discussion_r370228816", "bodyText": "@hachikuji Thanks for the review. Restored this so that the only change from this PR is the clean separation of group and local subscriptions", "author": "rajinisivaram", "createdAt": "2020-01-23T16:38:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxOTI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "18a4917904d5aa779ec590d682afeb5d746f03a0", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java\nindex 353cb190a0..6610bfb025 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java\n\n@@ -690,6 +689,7 @@ public final class ConsumerCoordinator extends AbstractCoordinator {\n         }\n \n         isLeader = false;\n+        subscriptions.resetGroupSubscription();\n \n         if (exception != null) {\n             throw new KafkaException(\"User rebalance callback throws an error\", exception);\n"}}, {"oid": "18a4917904d5aa779ec590d682afeb5d746f03a0", "url": "https://github.com/apache/kafka/commit/18a4917904d5aa779ec590d682afeb5d746f03a0", "message": "Address review comment", "committedDate": "2020-01-23T16:35:22Z", "type": "commit"}]}