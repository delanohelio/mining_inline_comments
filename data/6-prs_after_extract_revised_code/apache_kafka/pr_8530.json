{"pr_number": 8530, "pr_title": "KAFKA-9388: Refactor integration tests to always use different application ids", "pr_createdAt": "2020-04-22T06:25:27Z", "pr_url": "https://github.com/apache/kafka/pull/8530", "timeline": [{"oid": "afcdae1ad0d73a9864f654f4f8f5d06625b848e6", "url": "https://github.com/apache/kafka/commit/afcdae1ad0d73a9864f654f4f8f5d06625b848e6", "message": "refactor integration tests", "committedDate": "2020-04-22T05:53:23Z", "type": "commit"}, {"oid": "863ea2921cdada0102b627f6b5b9811be6f77378", "url": "https://github.com/apache/kafka/commit/863ea2921cdada0102b627f6b5b9811be6f77378", "message": "use test name", "committedDate": "2020-04-22T06:25:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk1OTY5Mw==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r412959693", "bodyText": "the following app id should be changed as well. (I can't add comment to the line for this PR)\n    private void setCommittedOffset(final String topic, final int limitDelta) {\n        final Properties consumerConfig = new Properties();\t        final Properties consumerConfig = new Properties();\n        consumerConfig.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\t        consumerConfig.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerConfig.put(ConsumerConfig.GROUP_ID_CONFIG, APPID);\t        consumerConfig.put(ConsumerConfig.GROUP_ID_CONFIG, APPID);", "author": "chia7712", "createdAt": "2020-04-22T12:59:19Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -119,7 +124,7 @@ public void shouldRestoreStateFromSourceTopic() throws Exception {\n         final AtomicInteger numReceived = new AtomicInteger(0);\n         final StreamsBuilder builder = new StreamsBuilder();\n \n-        final Properties props = props(APPID);\n+        final Properties props = props(APPID + name.getMethodName());", "originalCommit": "863ea2921cdada0102b627f6b5b9811be6f77378", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04a2e125e9fc5ae8e0094687da87633c222c5580", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\nindex 7586205d3f..9cb0b85c2f 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\n\n@@ -124,7 +121,7 @@ public class RestoreIntegrationTest {\n         final AtomicInteger numReceived = new AtomicInteger(0);\n         final StreamsBuilder builder = new StreamsBuilder();\n \n-        final Properties props = props(APPID + name.getMethodName());\n+        final Properties props = props(APPID);\n         props.put(StreamsConfig.TOPOLOGY_OPTIMIZATION, StreamsConfig.OPTIMIZE);\n \n         // restoring from 1000 to 4000 (committed), and then process from 4000 to 5000 on each of the two partitions\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2MTQ1NQ==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r412961455", "bodyText": "the changelog topics are created by BeforeClass so it seems we need to add Before to create changelog for different method name.", "author": "chia7712", "createdAt": "2020-04-22T13:01:41Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -107,6 +109,9 @@ private Properties props(final String applicationId) {\n         return streamsConfiguration;\n     }\n \n+    @Rule\n+    public TestName name = new TestName();", "originalCommit": "863ea2921cdada0102b627f6b5b9811be6f77378", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04a2e125e9fc5ae8e0094687da87633c222c5580", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\nindex 7586205d3f..9cb0b85c2f 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java\n\n@@ -106,12 +104,11 @@ public class RestoreIntegrationTest {\n         streamsConfiguration.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         streamsConfiguration.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n         streamsConfiguration.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n+        streamsConfiguration.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, 1000);\n+        streamsConfiguration.put(ConsumerConfig.HEARTBEAT_INTERVAL_MS_CONFIG, 300);\n         return streamsConfiguration;\n     }\n \n-    @Rule\n-    public TestName name = new TestName();\n-\n     @After\n     public void shutdown() {\n         if (kafkaStreams != null) {\n"}}, {"oid": "04a2e125e9fc5ae8e0094687da87633c222c5580", "url": "https://github.com/apache/kafka/commit/04a2e125e9fc5ae8e0094687da87633c222c5580", "message": "minor fixes", "committedDate": "2020-04-22T17:04:21Z", "type": "commit"}, {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "url": "https://github.com/apache/kafka/commit/1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "message": "remove unused imports", "committedDate": "2020-04-22T17:16:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2ODk3Ng==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413168976", "bodyText": "I moved this test into the non-integration unit tests.", "author": "guozhangwang", "createdAt": "2020-04-22T17:18:38Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinPseudoTopicTest.java", "diffHunk": "@@ -1,138 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.kafka.streams.integration;\n-\n-import org.apache.kafka.common.serialization.Serdes;\n-import org.apache.kafka.common.serialization.StringSerializer;\n-import org.apache.kafka.streams.StreamsBuilder;\n-import org.apache.kafka.streams.StreamsConfig;\n-import org.apache.kafka.streams.TestInputTopic;\n-import org.apache.kafka.streams.Topology;\n-import org.apache.kafka.streams.TopologyTestDriver;\n-import org.apache.kafka.streams.kstream.Consumed;\n-import org.apache.kafka.streams.kstream.KTable;\n-import org.apache.kafka.streams.kstream.Materialized;\n-import org.apache.kafka.streams.utils.UniqueTopicSerdeScope;\n-import org.apache.kafka.test.TestUtils;\n-import org.junit.Test;\n-\n-import java.util.Collection;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Properties;\n-\n-import static org.apache.kafka.common.utils.Utils.mkEntry;\n-import static org.apache.kafka.common.utils.Utils.mkMap;\n-import static org.apache.kafka.common.utils.Utils.mkProperties;\n-import static org.apache.kafka.common.utils.Utils.mkSet;\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-\n-\n-public class KTableKTableForeignKeyJoinPseudoTopicTest {", "originalCommit": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2OTUyOQ==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413169529", "bodyText": "I merged this test with another as a non-integration test, since it uses TTD and does not really creates a cluster :)", "author": "guozhangwang", "createdAt": "2020-04-22T17:19:26Z", "path": "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableForeignKeyJoinScenarioTest.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.kafka.streams.integration;", "originalCommit": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDE2NA==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413170164", "bodyText": "For this test, we did need to reuse the created topics and hence I reduced the session / heartbeat timeout so that their rebalance timeout could be much smaller.", "author": "guozhangwang", "createdAt": "2020-04-22T17:20:23Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -80,14 +83,18 @@ public static void setUpBeforeAllTests() throws Exception {\n         STREAMS_CONFIG.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n         STREAMS_CONFIG.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 5);\n         STREAMS_CONFIG.put(StreamsConfig.DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_CONFIG, WallclockTimestampExtractor.class);\n+        STREAMS_CONFIG.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, 1000);", "originalCommit": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDU4NA==", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413170584", "bodyText": "Similar here, for this test I reduced the session / heartbeat timeout so that their rebalance timeout could be much smaller. I think it is simpler than changing a bunch of changelogs / source / sink / and app ids.", "author": "guozhangwang", "createdAt": "2020-04-22T17:21:00Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -104,6 +104,8 @@ private Properties props(final String applicationId) {\n         streamsConfiguration.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         streamsConfiguration.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n         streamsConfiguration.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n+        streamsConfiguration.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, 1000);", "originalCommit": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}