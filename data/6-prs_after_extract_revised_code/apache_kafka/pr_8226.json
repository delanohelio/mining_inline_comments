{"pr_number": 8226, "pr_title": "KAFKA-9651: Fix ArithmeticException (\u00f7 by 0) in Partitioner impls", "pr_createdAt": "2020-03-05T11:42:51Z", "pr_url": "https://github.com/apache/kafka/pull/8226", "timeline": [{"oid": "22352511ce90f654806875c22a41a82d2d5159a9", "url": "https://github.com/apache/kafka/commit/22352511ce90f654806875c22a41a82d2d5159a9", "message": "KAFKA-9651: Fix ArithmeticException (\u00f7 by 0) in Partitioner impls\n\nThis PR fixes KAKFA-9651 by using the number of partitions from the\nStreamsMetadataState, rather then from the Cluster.", "committedDate": "2020-03-06T14:20:28Z", "type": "commit"}, {"oid": "22352511ce90f654806875c22a41a82d2d5159a9", "url": "https://github.com/apache/kafka/commit/22352511ce90f654806875c22a41a82d2d5159a9", "message": "KAFKA-9651: Fix ArithmeticException (\u00f7 by 0) in Partitioner impls\n\nThis PR fixes KAKFA-9651 by using the number of partitions from the\nStreamsMetadataState, rather then from the Cluster.", "committedDate": "2020-03-06T14:20:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE2Mjg1NQ==", "url": "https://github.com/apache/kafka/pull/8226#discussion_r396162855", "bodyText": "minor: we can just calculate the numPartitions in this overload, and then in the other which has numPartitions passed in always blindly use that one.", "author": "guozhangwang", "createdAt": "2020-03-22T23:56:00Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java", "diffHunk": "@@ -50,11 +48,29 @@ public void configure(Map<String, ?> configs) {}\n      * @param cluster The current cluster metadata\n      */\n     public int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster) {\n+        return partition(topic, key, keyBytes, value, valueBytes, cluster, 0);", "originalCommit": "22352511ce90f654806875c22a41a82d2d5159a9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a0cf09d70caa30726d7695a242a5ddc8b4bc164", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java b/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java\nindex 2ee4bb638b..cf765d1eee 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java\n\n@@ -48,15 +48,14 @@ public class DefaultPartitioner implements Partitioner {\n      * @param cluster The current cluster metadata\n      */\n     public int partition(String topic, Object key, byte[] keyBytes, Object value, byte[] valueBytes, Cluster cluster) {\n-        return partition(topic, key, keyBytes, value, valueBytes, cluster, 0);\n+        return partition(topic, key, keyBytes, value, valueBytes, cluster, cluster.partitionsForTopic(topic).size());\n     }\n \n     /**\n      * Compute the partition for the given record.\n      *\n      * @param topic The topic name\n-     * @param numPartitions The number of partitions of the given {@code topic}, or 0 to obtain this from\n-     *                      the given {@code cluster}\n+     * @param numPartitions The number of partitions of the given {@code topic}\n      * @param key The key to partition on (or null if no key)\n      * @param keyBytes serialized key to partition on (or null if no key)\n      * @param value The value to partition on or null\n"}}, {"oid": "3a0cf09d70caa30726d7695a242a5ddc8b4bc164", "url": "https://github.com/apache/kafka/commit/3a0cf09d70caa30726d7695a242a5ddc8b4bc164", "message": "Fix review comment", "committedDate": "2020-03-23T09:37:49Z", "type": "commit"}]}