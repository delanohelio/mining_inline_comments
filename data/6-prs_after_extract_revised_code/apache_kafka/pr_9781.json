{"pr_number": 9781, "pr_title": "MINOR: Use top-level error in `UpdateFeaturesRequest.getErrorResponse`", "pr_createdAt": "2020-12-22T22:55:45Z", "pr_url": "https://github.com/apache/kafka/pull/9781", "timeline": [{"oid": "60938dce8295725b8dd13750cb33f3b6f9e7c9f3", "url": "https://github.com/apache/kafka/commit/60938dce8295725b8dd13750cb33f3b6f9e7c9f3", "message": "MINOR: Use top-level error in `UpdateFeaturesRequest.getErrorResponse`", "committedDate": "2020-12-22T22:54:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NzQ1Mg==", "url": "https://github.com/apache/kafka/pull/9781#discussion_r547557452", "bodyText": "You could inline ApiError.fromThrowable(e) here, and eliminate the apiError local variable.", "author": "kowshik", "createdAt": "2020-12-22T23:34:49Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "diffHunk": "@@ -57,18 +55,11 @@ public UpdateFeaturesRequest(UpdateFeaturesRequestData data, short version) {\n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n         final ApiError apiError = ApiError.fromThrowable(e);\n-        final UpdatableFeatureResultCollection results = new UpdatableFeatureResultCollection();\n-        for (FeatureUpdateKey update : this.data.featureUpdates().valuesSet()) {\n-            final UpdatableFeatureResult result = new UpdatableFeatureResult()\n-                .setFeature(update.feature())\n-                .setErrorCode(apiError.error().code())\n-                .setErrorMessage(apiError.message());\n-            results.add(result);\n-        }\n-        final UpdateFeaturesResponseData responseData = new UpdateFeaturesResponseData()\n-            .setThrottleTimeMs(throttleTimeMs)\n-            .setResults(results);\n-        return new UpdateFeaturesResponse(responseData);\n+        return UpdateFeaturesResponse.createWithErrors(\n+            apiError,", "originalCommit": "60938dce8295725b8dd13750cb33f3b6f9e7c9f3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fea71bff1da68894cbcd743788888b925b83d75a", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\nindex 451c50f635..2daae989ce 100644\n--- a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\n+++ b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\n\n@@ -54,9 +54,8 @@ public class UpdateFeaturesRequest extends AbstractRequest {\n \n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n-        final ApiError apiError = ApiError.fromThrowable(e);\n         return UpdateFeaturesResponse.createWithErrors(\n-            apiError,\n+            ApiError.fromThrowable(e),\n             Collections.emptyMap(),\n             throttleTimeMs\n         );\n"}}, {"oid": "fea71bff1da68894cbcd743788888b925b83d75a", "url": "https://github.com/apache/kafka/commit/fea71bff1da68894cbcd743788888b925b83d75a", "message": "Remove unneeded local variable", "committedDate": "2020-12-23T00:55:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTIwNw==", "url": "https://github.com/apache/kafka/pull/9781#discussion_r547605207", "bodyText": "If we want set only top-level error, we have to make UpdateFeaturesResponse#errors use top-level error as well. Otherwise, the top-level error can't be propagated correctly.\nsee https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java#L48", "author": "chia7712", "createdAt": "2020-12-23T02:29:05Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "diffHunk": "@@ -56,19 +54,11 @@ public UpdateFeaturesRequest(UpdateFeaturesRequestData data, short version) {\n \n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n-        final ApiError apiError = ApiError.fromThrowable(e);\n-        final UpdatableFeatureResultCollection results = new UpdatableFeatureResultCollection();\n-        for (FeatureUpdateKey update : this.data.featureUpdates().valuesSet()) {\n-            final UpdatableFeatureResult result = new UpdatableFeatureResult()\n-                .setFeature(update.feature())\n-                .setErrorCode(apiError.error().code())\n-                .setErrorMessage(apiError.message());\n-            results.add(result);\n-        }\n-        final UpdateFeaturesResponseData responseData = new UpdateFeaturesResponseData()\n-            .setThrottleTimeMs(throttleTimeMs)\n-            .setResults(results);\n-        return new UpdateFeaturesResponse(responseData);\n+        return UpdateFeaturesResponse.createWithErrors(\n+            ApiError.fromThrowable(e),\n+            Collections.emptyMap(),", "originalCommit": "fea71bff1da68894cbcd743788888b925b83d75a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQyNjg5Ng==", "url": "https://github.com/apache/kafka/pull/9781#discussion_r549426896", "bodyText": "@chia7712 Good catch. Pushed an update with some test cases.", "author": "hachikuji", "createdAt": "2020-12-28T17:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTIwNw=="}], "type": "inlineReview", "revised_code": {"commit": "fc3677dd91e66a1dfa63316cf9203a63e7565679", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\nindex 2daae989ce..7a6bf66cd9 100644\n--- a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\n+++ b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java\n\n@@ -53,7 +53,7 @@ public class UpdateFeaturesRequest extends AbstractRequest {\n     }\n \n     @Override\n-    public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n+    public UpdateFeaturesResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n         return UpdateFeaturesResponse.createWithErrors(\n             ApiError.fromThrowable(e),\n             Collections.emptyMap(),\n"}}, {"oid": "fc3677dd91e66a1dfa63316cf9203a63e7565679", "url": "https://github.com/apache/kafka/commit/fc3677dd91e66a1dfa63316cf9203a63e7565679", "message": "Response error counts should include top level error", "committedDate": "2020-12-28T17:35:07Z", "type": "commit"}, {"oid": "fcb75d73407a5099c2314baf0ec0f006b79a7e7e", "url": "https://github.com/apache/kafka/commit/fcb75d73407a5099c2314baf0ec0f006b79a7e7e", "message": "Remove unused `errors` method", "committedDate": "2020-12-28T17:41:49Z", "type": "commit"}, {"oid": "7626f3275d899e2290b1a9353ac7a2d2811d17a7", "url": "https://github.com/apache/kafka/commit/7626f3275d899e2290b1a9353ac7a2d2811d17a7", "message": "Add newlines at end of tests", "committedDate": "2020-12-28T17:43:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU4MDk4Nw==", "url": "https://github.com/apache/kafka/pull/9781#discussion_r549580987", "bodyText": "Is valuesSet necessary?", "author": "chia7712", "createdAt": "2020-12-29T06:12:44Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java", "diffHunk": "@@ -45,16 +44,18 @@ public UpdateFeaturesResponse(UpdateFeaturesResponseData data) {\n         this.data = data;\n     }\n \n-    public Map<String, ApiError> errors() {\n-        return data.results().valuesSet().stream().collect(\n-            Collectors.toMap(\n-                result -> result.feature(),\n-                result -> new ApiError(Errors.forCode(result.errorCode()), result.errorMessage())));\n+    public ApiError topLevelError() {\n+        return new ApiError(Errors.forCode(data.errorCode()), data.errorMessage());\n     }\n \n     @Override\n     public Map<Errors, Integer> errorCounts() {\n-        return apiErrorCounts(errors());\n+        Map<Errors, Integer> errorCounts = new HashMap<>();\n+        updateErrorCounts(errorCounts, Errors.forCode(data.errorCode()));\n+        for (UpdatableFeatureResult result : data.results().valuesSet()) {", "originalCommit": "7626f3275d899e2290b1a9353ac7a2d2811d17a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fe23e26408a4d83324b037562186ef97b868750", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java\nindex 30fd056627..26825a0c24 100644\n--- a/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java\n+++ b/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java\n\n@@ -52,7 +52,7 @@ public class UpdateFeaturesResponse extends AbstractResponse {\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> errorCounts = new HashMap<>();\n         updateErrorCounts(errorCounts, Errors.forCode(data.errorCode()));\n-        for (UpdatableFeatureResult result : data.results().valuesSet()) {\n+        for (UpdatableFeatureResult result : data.results()) {\n             updateErrorCounts(errorCounts, Errors.forCode(result.errorCode()));\n         }\n         return errorCounts;\n"}}, {"oid": "2fe23e26408a4d83324b037562186ef97b868750", "url": "https://github.com/apache/kafka/commit/2fe23e26408a4d83324b037562186ef97b868750", "message": "Remove unnecessary `valueSet` in loop", "committedDate": "2020-12-29T18:28:47Z", "type": "commit"}]}