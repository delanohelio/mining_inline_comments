{"pr_number": 9543, "pr_title": "KAFKA-10500: Makes the Stream thread list resizable", "pr_createdAt": "2020-11-02T23:39:54Z", "pr_url": "https://github.com/apache/kafka/pull/9543", "timeline": [{"oid": "5276beee632c2e1333b6f6402587ad80970b10d5", "url": "https://github.com/apache/kafka/commit/5276beee632c2e1333b6f6402587ad80970b10d5", "message": "makes the Stream thread list resizable", "committedDate": "2020-11-02T23:39:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNjkxMQ==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517426911", "bodyText": "I would prefer to use List instead of ArrayList to be more generic.", "author": "cadonna", "createdAt": "2020-11-04T15:27:54Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -145,7 +145,7 @@\n     private final String clientId;\n     private final Metrics metrics;\n     private final StreamsConfig config;\n-    protected final StreamThread[] threads;\n+    protected final ArrayList<StreamThread> threads;", "originalCommit": "5276beee632c2e1333b6f6402587ad80970b10d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "46066694bb07509f79f34db52797033bd6558168", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex 836c447508..ea225118bb 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -145,7 +145,7 @@ public class KafkaStreams implements AutoCloseable {\n     private final String clientId;\n     private final Metrics metrics;\n     private final StreamsConfig config;\n-    protected final ArrayList<StreamThread> threads;\n+    protected final List<StreamThread> threads;\n     private final StateDirectory stateDirectory;\n     private final StreamsMetadataState streamsMetadataState;\n     private final ScheduledExecutorService stateDirCleaner;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyODEwNA==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517428104", "bodyText": "I think, it is better to keep the default initial capacity of an ArrayList. Otherwise, the first time a stream thread is added, we immediately run into a memory allocation. Since we do not know how many stream thread we might expect, let's use the default.\nWe could also consider using a LinkedList since we never access by index in production code.", "author": "cadonna", "createdAt": "2020-11-04T15:29:32Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -719,8 +718,7 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new StreamThread[numStreamThreads];\n-\n+        threads = new ArrayList<>(numStreamThreads);", "originalCommit": "5276beee632c2e1333b6f6402587ad80970b10d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUxNjU4MA==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517516580", "bodyText": "That is fair", "author": "wcarlson5", "createdAt": "2020-11-04T17:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyODEwNA=="}], "type": "inlineReview", "revised_code": {"commit": "46066694bb07509f79f34db52797033bd6558168", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex 836c447508..ea225118bb 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -718,7 +718,7 @@ public class KafkaStreams implements AutoCloseable {\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new ArrayList<>(numStreamThreads);\n+        threads = new LinkedList<>();\n         globalTaskTopology = internalTopologyBuilder.buildGlobalStateTopology();\n         final boolean hasGlobalTopology = globalTaskTopology != null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQzNTI5Nw==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517435297", "bodyText": "You can simplify to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        threads.add(i, streamThread);\n          \n          \n            \n                        threadState.put(threads.get(i).getId(), threads.get(i).state());\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n          \n          \n            \n                        threads.add(streamThread);\n          \n          \n            \n                        threadState.put(streamThread.getId(), streamThread.state());\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(streamThread));", "author": "cadonna", "createdAt": "2020-11-04T15:39:21Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));", "originalCommit": "5276beee632c2e1333b6f6402587ad80970b10d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "46066694bb07509f79f34db52797033bd6558168", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex 836c447508..ea225118bb 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -782,12 +782,12 @@ public class KafkaStreams implements AutoCloseable {\n                 delegatingStateRestoreListener,\n                 i + 1);\n             threads.add(i, streamThread);\n-            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            threadState.put(streamThread.getId(), streamThread.state());\n             storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n-            Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));\n+            Math.toIntExact(threads.stream().filter(thread -> thread.state().isAlive()).count()));\n \n         final StreamStateListener streamStateListener = new StreamStateListener(threadState, globalThreadState);\n         if (hasGlobalTopology) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0MDMxNQ==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517440315", "bodyText": "Please simplify to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));\n          \n          \n            \n                        Math.toIntExact(threads.stream().filter(thread -> thread.state().isAlive()).count()));", "author": "cadonna", "createdAt": "2020-11-04T15:45:57Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n-            Math.toIntExact(Arrays.stream(threads).filter(thread -> thread.state().isAlive()).count()));\n+            Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));", "originalCommit": "5276beee632c2e1333b6f6402587ad80970b10d5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "46066694bb07509f79f34db52797033bd6558168", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex 836c447508..ea225118bb 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -782,12 +782,12 @@ public class KafkaStreams implements AutoCloseable {\n                 delegatingStateRestoreListener,\n                 i + 1);\n             threads.add(i, streamThread);\n-            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            threadState.put(streamThread.getId(), streamThread.state());\n             storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n-            Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));\n+            Math.toIntExact(threads.stream().filter(thread -> thread.state().isAlive()).count()));\n \n         final StreamStateListener streamStateListener = new StreamStateListener(threadState, globalThreadState);\n         if (hasGlobalTopology) {\n"}}, {"oid": "46066694bb07509f79f34db52797033bd6558168", "url": "https://github.com/apache/kafka/commit/46066694bb07509f79f34db52797033bd6558168", "message": "change to List", "committedDate": "2020-11-04T17:51:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzOTQzMg==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517539432", "bodyText": "Should this collection be threadsafe? (or are all accesses inside synchronized blocks anyway?)", "author": "vvcephei", "createdAt": "2020-11-04T18:14:36Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -719,8 +718,7 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new StreamThread[numStreamThreads];\n-\n+        threads = new LinkedList<>();", "originalCommit": "46066694bb07509f79f34db52797033bd6558168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyOTk2MQ==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517629961", "bodyText": "They are not all in synchronized blocks so I think it probably should be thread safe", "author": "wcarlson5", "createdAt": "2020-11-04T21:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzOTQzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzI3Mg==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r518057272", "bodyText": "Currently only the constructor adds elements to the list. All other accesses afterwards are read-only. So, we would not need a synchronized list as far as I see. When we implement the add and remove streams thread APIs, we probably need synchronization. My proposal is to leave it a synchronized list now just in case we forget to think about it afterwards and then to reconsider how we synchronize the accesses.", "author": "cadonna", "createdAt": "2020-11-05T13:40:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzOTQzMg=="}], "type": "inlineReview", "revised_code": {"commit": "188884c84f35d7a6c1bf569bb508726cbe413c53", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex ea225118bb..9c47125d4b 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -718,7 +718,7 @@ public class KafkaStreams implements AutoCloseable {\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new LinkedList<>();\n+        threads = Collections.synchronizedList(new LinkedList<>());\n         globalTaskTopology = internalTopologyBuilder.buildGlobalStateTopology();\n         final boolean hasGlobalTopology = globalTaskTopology != null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDA3NA==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517540074", "bodyText": "A bit of a nitpick, but this operation is O(n) for LinkedList. Better to just add(streamThread) if you want to use LinkedList.", "author": "vvcephei", "createdAt": "2020-11-04T18:15:47Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);", "originalCommit": "46066694bb07509f79f34db52797033bd6558168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYzMDE5NA==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517630194", "bodyText": "yep, should have changed that when I moved from ArrayList", "author": "wcarlson5", "createdAt": "2020-11-04T21:04:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDA3NA=="}], "type": "inlineReview", "revised_code": {"commit": "188884c84f35d7a6c1bf569bb508726cbe413c53", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex ea225118bb..9c47125d4b 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -781,9 +781,9 @@ public class KafkaStreams implements AutoCloseable {\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threads.add(i, streamThread);\n+            threads.add(streamThread);\n             threadState.put(streamThread.getId(), streamThread.state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n+            storeProviders.add(new StreamThreadStateStoreProvider(streamThread));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDg2Ng==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517540866", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(streamThread));\n          \n      \n    \n    \n  \n\nget(i) is also O(n) for a linked list. Again, this is admittedly a nit, since the list is small.", "author": "vvcephei", "createdAt": "2020-11-04T18:17:09Z", "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(streamThread.getId(), streamThread.state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));", "originalCommit": "46066694bb07509f79f34db52797033bd6558168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYzMDMyMA==", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517630320", "bodyText": "Good catch", "author": "wcarlson5", "createdAt": "2020-11-04T21:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDg2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "188884c84f35d7a6c1bf569bb508726cbe413c53", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\nindex ea225118bb..9c47125d4b 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java\n\n@@ -781,9 +781,9 @@ public class KafkaStreams implements AutoCloseable {\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threads.add(i, streamThread);\n+            threads.add(streamThread);\n             threadState.put(streamThread.getId(), streamThread.state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n+            storeProviders.add(new StreamThreadStateStoreProvider(streamThread));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n"}}, {"oid": "188884c84f35d7a6c1bf569bb508726cbe413c53", "url": "https://github.com/apache/kafka/commit/188884c84f35d7a6c1bf569bb508726cbe413c53", "message": "List access improvements", "committedDate": "2020-11-04T21:12:32Z", "type": "commit"}]}