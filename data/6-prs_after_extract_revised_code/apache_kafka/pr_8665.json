{"pr_number": 8665, "pr_title": "KAFKA-9984 Should fail the subscription when pattern is empty", "pr_createdAt": "2020-05-14T05:55:04Z", "pr_url": "https://github.com/apache/kafka/pull/8665", "timeline": [{"oid": "61edcec2ea8553a5c5e0c0fdccc102a003f0bfa2", "url": "https://github.com/apache/kafka/commit/61edcec2ea8553a5c5e0c0fdccc102a003f0bfa2", "message": "KAFKA-9984 Should fail the subscription when pattern is empty", "committedDate": "2020-05-14T05:49:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAwMTg2MQ==", "url": "https://github.com/apache/kafka/pull/8665#discussion_r425001861", "bodyText": "the condition is always false if you don't add brackets.\nthrow new IllegalArgumentException(\"Topic pattern to subscribe to cannot be \" + (pattern == null ? \"null\" : \"empty\"));", "author": "chia7712", "createdAt": "2020-05-14T09:34:15Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java", "diffHunk": "@@ -1015,8 +1015,8 @@ public void subscribe(Collection<String> topics) {\n     @Override\n     public void subscribe(Pattern pattern, ConsumerRebalanceListener listener) {\n         maybeThrowInvalidGroupIdException();\n-        if (pattern == null)\n-            throw new IllegalArgumentException(\"Topic pattern to subscribe to cannot be null\");\n+        if (pattern == null || pattern.toString().equals(\"\"))\n+            throw new IllegalArgumentException(\"Topic pattern to subscribe to cannot be \" + pattern == null ? \"null\" : \"empty\");", "originalCommit": "61edcec2ea8553a5c5e0c0fdccc102a003f0bfa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5Nzc0Nw==", "url": "https://github.com/apache/kafka/pull/8665#discussion_r425097747", "bodyText": "Thanks. I have fixed this issue. Could you continue to review it.", "author": "zhaohaidao", "createdAt": "2020-05-14T12:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAwMTg2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4004c4ba804607911c8742d69be62028b4fa8e01", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java b/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java\nindex a131e0057e..81d286ff8d 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java\n\n@@ -1016,7 +1016,8 @@ public class KafkaConsumer<K, V> implements Consumer<K, V> {\n     public void subscribe(Pattern pattern, ConsumerRebalanceListener listener) {\n         maybeThrowInvalidGroupIdException();\n         if (pattern == null || pattern.toString().equals(\"\"))\n-            throw new IllegalArgumentException(\"Topic pattern to subscribe to cannot be \" + pattern == null ? \"null\" : \"empty\");\n+            throw new IllegalArgumentException(\"Topic pattern to subscribe to cannot be \" + (pattern == null ?\n+                    \"null\" : \"empty\"));\n \n         acquireAndEnsureOpen();\n         try {\n"}}, {"oid": "4004c4ba804607911c8742d69be62028b4fa8e01", "url": "https://github.com/apache/kafka/commit/4004c4ba804607911c8742d69be62028b4fa8e01", "message": "Address comments", "committedDate": "2020-05-14T12:28:29Z", "type": "commit"}]}