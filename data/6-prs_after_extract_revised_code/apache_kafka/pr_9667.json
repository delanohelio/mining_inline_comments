{"pr_number": 9667, "pr_title": "MINOR: Do not print log4j for memberId required", "pr_createdAt": "2020-12-01T18:49:26Z", "pr_url": "https://github.com/apache/kafka/pull/9667", "timeline": [{"oid": "f8887d3e2c335841a7c8a9533bedbee0b8d28db6", "url": "https://github.com/apache/kafka/commit/f8887d3e2c335841a7c8a9533bedbee0b8d28db6", "message": "do not print log4j for memberId required", "committedDate": "2020-12-01T18:48:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng==", "url": "https://github.com/apache/kafka/pull/9667#discussion_r535899086", "bodyText": "Is JoinGroupResponseHandler a better place to log error? For example, the error UNKNOWN_MEMBER_ID is log twice.\n(https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java#L605)", "author": "chia7712", "createdAt": "2020-12-04T07:48:18Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -465,7 +465,11 @@ boolean joinGroupIfNeeded(final Timer timer) {\n                 }\n             } else {\n                 final RuntimeException exception = future.exception();\n-                log.info(\"Rebalance failed.\", exception);\n+\n+                if (!(exception instanceof MemberIdRequiredException)) {", "originalCommit": "f8887d3e2c335841a7c8a9533bedbee0b8d28db6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMDE2MQ==", "url": "https://github.com/apache/kafka/pull/9667#discussion_r535900161", "bodyText": "For another, does it need some comment to explain why MemberIdRequiredException is excluded.", "author": "chia7712", "createdAt": "2020-12-04T07:50:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI4MjU1MA==", "url": "https://github.com/apache/kafka/pull/9667#discussion_r536282550", "bodyText": "I think I agree with you: it is a bit redundant. I think originally it is because this future may contain the error that is either from join-response or from sync-response, but at the moment both errors are logged inside the Join/SyncGroupHandler anyways. Just to maintain compatibility in case some trouble shooting scenarios are dependent on this summary entry for now.", "author": "guozhangwang", "createdAt": "2020-12-04T18:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "51dcab57ea74a07df1b6cd7937e2fb2bbf0c1380", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\nindex 10dbb8181e..4ca71bb626 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n\n@@ -466,6 +466,8 @@ public abstract class AbstractCoordinator implements Closeable {\n             } else {\n                 final RuntimeException exception = future.exception();\n \n+                // we do not need to log error for memberId required,\n+                // since it is not really an error and is transient\n                 if (!(exception instanceof MemberIdRequiredException)) {\n                     log.info(\"Rebalance failed.\", exception);\n                 }\n"}}, {"oid": "51dcab57ea74a07df1b6cd7937e2fb2bbf0c1380", "url": "https://github.com/apache/kafka/commit/51dcab57ea74a07df1b6cd7937e2fb2bbf0c1380", "message": "github comments", "committedDate": "2020-12-04T18:07:50Z", "type": "commit"}]}