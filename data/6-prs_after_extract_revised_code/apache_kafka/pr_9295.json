{"pr_number": 9295, "pr_title": "MINOR: standardize rebalance related logging for easy discovery & debugging", "pr_createdAt": "2020-09-16T23:57:59Z", "pr_url": "https://github.com/apache/kafka/pull/9295", "timeline": [{"oid": "b913c9723c2b1d0d45479491f2bc36857fde34ec", "url": "https://github.com/apache/kafka/commit/b913c9723c2b1d0d45479491f2bc36857fde34ec", "message": "logging improvements/coordination", "committedDate": "2020-09-18T22:27:29Z", "type": "commit"}, {"oid": "d827a95392a8c408753e1e64607953558ce1293f", "url": "https://github.com/apache/kafka/commit/d827a95392a8c408753e1e64607953558ce1293f", "message": "minor followup rebalance log rearrangement", "committedDate": "2020-09-18T22:27:29Z", "type": "commit"}, {"oid": "d827a95392a8c408753e1e64607953558ce1293f", "url": "https://github.com/apache/kafka/commit/d827a95392a8c408753e1e64607953558ce1293f", "message": "minor followup rebalance log rearrangement", "committedDate": "2020-09-18T22:27:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ4NDcyMQ==", "url": "https://github.com/apache/kafka/pull/9295#discussion_r491484721", "bodyText": "Why promote it from debug to info while leaving others debug?", "author": "guozhangwang", "createdAt": "2020-09-19T19:17:19Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -598,11 +598,12 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n                     }\n                 }\n             } else if (error == Errors.COORDINATOR_LOAD_IN_PROGRESS) {\n-                log.debug(\"Attempt to join group rejected since coordinator {} is loading the group.\", coordinator());\n+                log.debug(\"JoinGroup failed: Coordinator {} is loading the group.\", coordinator());\n                 // backoff and retry\n                 future.raise(error);\n             } else if (error == Errors.UNKNOWN_MEMBER_ID) {\n-                log.debug(\"Attempt to join group failed due to unknown member id with {}.\", sentGeneration);\n+                log.info(\"JoinGroup failed: {} Need to re-join the group. Sent generation was {}\",", "originalCommit": "d827a95392a8c408753e1e64607953558ce1293f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccfc1950c203ed31b2dbae1e0c9f2da448efefa9", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\nindex 2d97b9ec3b..b021c91e73 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n\n@@ -598,7 +598,7 @@ public abstract class AbstractCoordinator implements Closeable {\n                     }\n                 }\n             } else if (error == Errors.COORDINATOR_LOAD_IN_PROGRESS) {\n-                log.debug(\"JoinGroup failed: Coordinator {} is loading the group.\", coordinator());\n+                log.info(\"JoinGroup failed: Coordinator {} is loading the group.\", coordinator());\n                 // backoff and retry\n                 future.raise(error);\n             } else if (error == Errors.UNKNOWN_MEMBER_ID) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ4NTE3NA==", "url": "https://github.com/apache/kafka/pull/9295#discussion_r491485174", "bodyText": "Ditto here, if we think we should pay attention to any errors excluding things like coordinator loading in progress let's just make them all info.", "author": "guozhangwang", "createdAt": "2020-09-19T19:23:18Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -769,24 +771,27 @@ public void handle(SyncGroupResponse syncResponse,\n                 if (error == Errors.GROUP_AUTHORIZATION_FAILED) {\n                     future.raise(GroupAuthorizationException.forGroupId(rebalanceConfig.groupId));\n                 } else if (error == Errors.REBALANCE_IN_PROGRESS) {\n-                    log.debug(\"SyncGroup failed because the group began another rebalance\");\n+                    log.info(\"SyncGroup failed: The group began another rebalance. Need to re-join the group. \" +\n+                                 \"Sent generation was {}\", sentGeneration);\n                     future.raise(error);\n                 } else if (error == Errors.FENCED_INSTANCE_ID) {\n                     // for sync-group request, even if the generation has changed we would not expect the instance id\n                     // gets fenced, and hence we always treat this as a fatal error\n-                    log.error(\"SyncGroup with {} failed because the group instance id {} has been fenced by another instance\",\n-                        sentGeneration, rebalanceConfig.groupInstanceId);\n+                    log.error(\"SyncGroup failed: The group instance id {} has been fenced by another instance. \" +\n+                        \"Sent generation was {}\", rebalanceConfig.groupInstanceId, sentGeneration);\n                     future.raise(error);\n                 } else if (error == Errors.UNKNOWN_MEMBER_ID\n                         || error == Errors.ILLEGAL_GENERATION) {\n-                    log.info(\"SyncGroup with {} failed: {}, would request re-join\", sentGeneration, error.message());\n+                    log.info(\"SyncGroup failed: {} Need to re-join the group. Sent generation was {}\",\n+                            error.message(), sentGeneration);\n                     if (generationUnchanged())\n                         resetGenerationOnResponseError(ApiKeys.SYNC_GROUP, error);\n \n                     future.raise(error);\n                 } else if (error == Errors.COORDINATOR_NOT_AVAILABLE\n                         || error == Errors.NOT_COORDINATOR) {\n-                    log.debug(\"SyncGroup failed: {}, marking coordinator unknown\", error.message());\n+                    log.debug(\"SyncGroup failed: {} Marking coordinator unknown. Sent generation was {}\",", "originalCommit": "d827a95392a8c408753e1e64607953558ce1293f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5Mjg5Mw==", "url": "https://github.com/apache/kafka/pull/9295#discussion_r495292893", "bodyText": "Sounds good", "author": "ableegoldman", "createdAt": "2020-09-25T22:46:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ4NTE3NA=="}], "type": "inlineReview", "revised_code": {"commit": "ccfc1950c203ed31b2dbae1e0c9f2da448efefa9", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\nindex 2d97b9ec3b..b021c91e73 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n\n@@ -790,7 +791,7 @@ public abstract class AbstractCoordinator implements Closeable {\n                     future.raise(error);\n                 } else if (error == Errors.COORDINATOR_NOT_AVAILABLE\n                         || error == Errors.NOT_COORDINATOR) {\n-                    log.debug(\"SyncGroup failed: {} Marking coordinator unknown. Sent generation was {}\",\n+                    log.info(\"SyncGroup failed: {} Marking coordinator unknown. Sent generation was {}\",\n                              error.message(), sentGeneration);\n                     markCoordinatorUnknown();\n                     future.raise(error);\n"}}, {"oid": "ccfc1950c203ed31b2dbae1e0c9f2da448efefa9", "url": "https://github.com/apache/kafka/commit/ccfc1950c203ed31b2dbae1e0c9f2da448efefa9", "message": "bump all to info, standardize", "committedDate": "2020-09-25T22:50:47Z", "type": "commit"}]}