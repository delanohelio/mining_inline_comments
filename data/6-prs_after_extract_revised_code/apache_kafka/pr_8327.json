{"pr_number": 8327, "pr_title": "KAFKA-9743: Catch commit offset exception to eventually close dirty tasks", "pr_createdAt": "2020-03-22T07:02:29Z", "pr_url": "https://github.com/apache/kafka/pull/8327", "timeline": [{"oid": "424e1d2f7e842be5554273b24b97cdc4094a1f1e", "url": "https://github.com/apache/kafka/commit/424e1d2f7e842be5554273b24b97cdc4094a1f1e", "message": "Fix commit offsets exception", "committedDate": "2020-03-23T23:47:01Z", "type": "commit"}, {"oid": "3fb96faafd32a800852de21ec10333987d3c6ee4", "url": "https://github.com/apache/kafka/commit/3fb96faafd32a800852de21ec10333987d3c6ee4", "message": "unit test", "committedDate": "2020-03-23T23:47:01Z", "type": "commit"}, {"oid": "f7ec12ebd0d113e0f25563e88543401c0a5e884b", "url": "https://github.com/apache/kafka/commit/f7ec12ebd0d113e0f25563e88543401c0a5e884b", "message": "rebase", "committedDate": "2020-03-23T23:47:01Z", "type": "commit"}, {"oid": "f7ec12ebd0d113e0f25563e88543401c0a5e884b", "url": "https://github.com/apache/kafka/commit/f7ec12ebd0d113e0f25563e88543401c0a5e884b", "message": "rebase", "committedDate": "2020-03-23T23:47:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzI4OQ==", "url": "https://github.com/apache/kafka/pull/8327#discussion_r396837289", "bodyText": "nit: why use Task for task00 but StateMachineTask for task01 ? Can you unify this (it a little confusing)?", "author": "mjsax", "createdAt": "2020-03-24T00:27:29Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java", "diffHunk": "@@ -1198,6 +1198,48 @@ public void shouldCloseActiveTasksAndPropagateThreadProducerExceptionsOnCleanShu\n         verify(activeTaskCreator, changeLogReader);\n     }\n \n+    @Test\n+    public void shouldCloseActiveTasksDirtyAndPropagateCommitException() {\n+        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(\n+            new Metrics(), \"clientId\", StreamsConfig.METRICS_LATEST);\n+        taskManager = new TaskManager(\n+            changeLogReader,\n+            UUID.randomUUID(),\n+            \"taskManagerTest\",\n+            streamsMetrics,\n+            activeTaskCreator,\n+            standbyTaskCreator,\n+            topologyBuilder,\n+            adminClient,\n+            stateDirectory,\n+            StreamThread.ProcessingMode.EXACTLY_ONCE_ALPHA\n+        );\n+        taskManager.setMainConsumer(consumer);\n+\n+        final Task task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n+        final StateMachineTask task01 = new StateMachineTask(taskId01, taskId01Partitions, true);", "originalCommit": "f7ec12ebd0d113e0f25563e88543401c0a5e884b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NTg3Ng==", "url": "https://github.com/apache/kafka/pull/8327#discussion_r396865876", "bodyText": "Because we don't have setCommitNeeded for Task I guess?", "author": "abbccdda", "createdAt": "2020-03-24T02:17:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzI4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "3de186888785fdd16bc40ad29cd7f94de997b336", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java b/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\nindex 08ae98cfbd..0c3046b949 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\n\n@@ -1217,16 +1218,30 @@ public class TaskManagerTest {\n         taskManager.setMainConsumer(consumer);\n \n         final Task task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n+\n         final StateMachineTask task01 = new StateMachineTask(taskId01, taskId01Partitions, true);\n-        final Map<TopicPartition, OffsetAndMetadata> offsets = singletonMap(t1p1, new OffsetAndMetadata(0L, null));\n-        task01.setCommittableOffsetsAndMetadata(offsets);\n+        task01.setCommittableOffsetsAndMetadata(singletonMap(t1p1, new OffsetAndMetadata(0L, null)));\n         task01.setCommitNeeded();\n+\n+\n+        final StateMachineTask task02 = new StateMachineTask(taskId02, taskId02Partitions, true);\n+        final Map<TopicPartition, OffsetAndMetadata> offsetsT02 = singletonMap(t1p2, new OffsetAndMetadata(1L, null));\n+\n+        task02.setCommittableOffsetsAndMetadata(offsetsT02);\n+        task02.setCommitNeeded();\n+\n         taskManager.tasks().put(taskId00, task00);\n         taskManager.tasks().put(taskId01, task01);\n+        taskManager.tasks().put(taskId02, task02);\n \n         expect(activeTaskCreator.streamsProducerForTask(taskId01)).andThrow(new RuntimeException(\"task 0_1 producer boom!\"));\n-        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(eq(taskId01));\n-        EasyMock.expectLastCall();\n+\n+        checkOrder(activeTaskCreator, false);\n+        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(taskId01);\n+        expectLastCall();\n+\n+        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(taskId02);\n+        expectLastCall();\n \n         replay(activeTaskCreator);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzODEyNw==", "url": "https://github.com/apache/kafka/pull/8327#discussion_r396838127", "bodyText": "To make sure we close all tasks (not just the task that causes the error), we should add one more task, that we also close and ensure that it state goes to CLOSED?", "author": "mjsax", "createdAt": "2020-03-24T00:30:33Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java", "diffHunk": "@@ -1198,6 +1198,48 @@ public void shouldCloseActiveTasksAndPropagateThreadProducerExceptionsOnCleanShu\n         verify(activeTaskCreator, changeLogReader);\n     }\n \n+    @Test\n+    public void shouldCloseActiveTasksDirtyAndPropagateCommitException() {\n+        final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(\n+            new Metrics(), \"clientId\", StreamsConfig.METRICS_LATEST);\n+        taskManager = new TaskManager(\n+            changeLogReader,\n+            UUID.randomUUID(),\n+            \"taskManagerTest\",\n+            streamsMetrics,\n+            activeTaskCreator,\n+            standbyTaskCreator,\n+            topologyBuilder,\n+            adminClient,\n+            stateDirectory,\n+            StreamThread.ProcessingMode.EXACTLY_ONCE_ALPHA\n+        );\n+        taskManager.setMainConsumer(consumer);\n+\n+        final Task task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n+        final StateMachineTask task01 = new StateMachineTask(taskId01, taskId01Partitions, true);\n+        final Map<TopicPartition, OffsetAndMetadata> offsets = singletonMap(t1p1, new OffsetAndMetadata(0L, null));\n+        task01.setCommittableOffsetsAndMetadata(offsets);\n+        task01.setCommitNeeded();\n+        taskManager.tasks().put(taskId00, task00);\n+        taskManager.tasks().put(taskId01, task01);\n+\n+        expect(activeTaskCreator.streamsProducerForTask(taskId01)).andThrow(new RuntimeException(\"task 0_1 producer boom!\"));\n+        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(eq(taskId01));\n+        EasyMock.expectLastCall();\n+\n+        replay(activeTaskCreator);\n+\n+        final RuntimeException thrown = assertThrows(RuntimeException.class,\n+            () -> taskManager.handleAssignment(mkMap(mkEntry(taskId00, taskId00Partitions)), Collections.emptyMap()));\n+        assertThat(thrown.getCause().getMessage(), is(\"task 0_1 producer boom!\"));\n+\n+        assertThat(task00.state(), is(Task.State.CREATED));\n+        assertThat(task01.state(), is(Task.State.CLOSED));", "originalCommit": "f7ec12ebd0d113e0f25563e88543401c0a5e884b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3de186888785fdd16bc40ad29cd7f94de997b336", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java b/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\nindex 08ae98cfbd..0c3046b949 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java\n\n@@ -1217,16 +1218,30 @@ public class TaskManagerTest {\n         taskManager.setMainConsumer(consumer);\n \n         final Task task00 = new StateMachineTask(taskId00, taskId00Partitions, true);\n+\n         final StateMachineTask task01 = new StateMachineTask(taskId01, taskId01Partitions, true);\n-        final Map<TopicPartition, OffsetAndMetadata> offsets = singletonMap(t1p1, new OffsetAndMetadata(0L, null));\n-        task01.setCommittableOffsetsAndMetadata(offsets);\n+        task01.setCommittableOffsetsAndMetadata(singletonMap(t1p1, new OffsetAndMetadata(0L, null)));\n         task01.setCommitNeeded();\n+\n+\n+        final StateMachineTask task02 = new StateMachineTask(taskId02, taskId02Partitions, true);\n+        final Map<TopicPartition, OffsetAndMetadata> offsetsT02 = singletonMap(t1p2, new OffsetAndMetadata(1L, null));\n+\n+        task02.setCommittableOffsetsAndMetadata(offsetsT02);\n+        task02.setCommitNeeded();\n+\n         taskManager.tasks().put(taskId00, task00);\n         taskManager.tasks().put(taskId01, task01);\n+        taskManager.tasks().put(taskId02, task02);\n \n         expect(activeTaskCreator.streamsProducerForTask(taskId01)).andThrow(new RuntimeException(\"task 0_1 producer boom!\"));\n-        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(eq(taskId01));\n-        EasyMock.expectLastCall();\n+\n+        checkOrder(activeTaskCreator, false);\n+        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(taskId01);\n+        expectLastCall();\n+\n+        activeTaskCreator.closeAndRemoveTaskProducerIfNeeded(taskId02);\n+        expectLastCall();\n \n         replay(activeTaskCreator);\n \n"}}, {"oid": "3de186888785fdd16bc40ad29cd7f94de997b336", "url": "https://github.com/apache/kafka/commit/3de186888785fdd16bc40ad29cd7f94de997b336", "message": "address comments", "committedDate": "2020-03-24T03:46:21Z", "type": "commit"}]}