{"pr_number": 9606, "pr_title": "[KAFKA-10722] doc: Improve JavaDoc for KGroupedStream.aggregate and other similar methods", "pr_createdAt": "2020-11-17T21:13:47Z", "pr_url": "https://github.com/apache/kafka/pull/9606", "timeline": [{"oid": "f353f285f34564c35145083a0005593df5de086f", "url": "https://github.com/apache/kafka/commit/f353f285f34564c35145083a0005593df5de086f", "message": "doc: Improve JavaDoc for aggregate\n\nTell that the store used internally is always a timestamped one.", "committedDate": "2020-11-17T21:11:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDM0Mw==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r525580343", "bodyText": "Should apply the same improvement to reduce() and count() overloads? Also for CogroupedKStream#aggregate()?\nWhat about TimeWindowedKStream and TimeWindowedCogroupedKStream ?\nAlso StreamsBuilder#table() (and #globalTable()) might need an update?", "author": "mjsax", "createdAt": "2020-11-17T22:55:52Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java", "diffHunk": "@@ -381,7 +381,8 @@\n      * {@link StreamsConfig#COMMIT_INTERVAL_MS_CONFIG commit intervall}.\n      *\n      * <p>\n-     * For failure and recovery the store will be backed by an internal changelog topic that will be created in Kafka.\n+     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore}) will be backed by\n+     * an internal changelog topic that will be created in Kafka.", "originalCommit": "f353f285f34564c35145083a0005593df5de086f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3MzUxMQ==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r525873511", "bodyText": "Yes, this should be probably done. But since I don't know how they work and what to write there, I'd prefer to do it in another PR (or someone else should do it).", "author": "fml2", "createdAt": "2020-11-18T07:48:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5NjY4NA==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r532996684", "bodyText": "reduce() and count() are similar to aggregate(): reduce only does not allow you to change the value type (ie, output type == input type) and count, well implements an aggregate() that counts :)\nAnd they all work the same for KGroupedStream, CogroupedKStream, TimeWindowedKStream and TimeWindowedCoGroupedKStream.\ntable() and globalTable() just read a topic and upsert the data into a state store / table.\nSo it would be great to do them all in one PR?", "author": "mjsax", "createdAt": "2020-12-01T00:40:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ3NjgyNQ==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r534476825", "bodyText": "I'd prefer to commit this chages and create an issue referring to this PR. What do you think?", "author": "fml2", "createdAt": "2020-12-02T20:58:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDM0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMyODI0Mg==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r536328242", "bodyText": "We can still do multiple PRs -- feel free to open them in parallel reusing the existing JIRA ticket.\nWill hold off to merge this because if we can detect other things we need to change in the other PRs, we can keep the applied changes in-sync more easily.", "author": "mjsax", "createdAt": "2020-12-04T19:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDM0Mw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDY0Mg==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r525580642", "bodyText": "{@materialized} is not valid markup as far as I know. Should we {@code materialized}? (same below)", "author": "mjsax", "createdAt": "2020-11-17T22:56:31Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java", "diffHunk": "@@ -438,7 +439,8 @@\n      * query the value of the key on a parallel running instance of your Kafka Streams application.\n      *\n      * <p>\n-     * For failure and recovery the store will be backed by an internal changelog topic that will be created in Kafka.\n+     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore} -- regardless of what\n+     * is specified in the parameter {@materialized}) will be backed by an internal changelog topic that will be created in Kafka.", "originalCommit": "f353f285f34564c35145083a0005593df5de086f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3MzgzMQ==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r525873831", "bodyText": "Yes, actually, I wanted to write this but somehow... I will correct it. Shoudl I then squash the commits?", "author": "fml2", "createdAt": "2020-11-18T07:49:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg4MjM5OQ==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r525882399", "bodyText": "Done", "author": "fml2", "createdAt": "2020-11-18T08:06:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDY0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5NjkwMQ==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r532996901", "bodyText": "No need to squash commits. We squash them automatically when merging.", "author": "mjsax", "createdAt": "2020-12-01T00:40:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MDY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ee57ec5ce1939e2b2c6c3f6a904e864b39e2baec", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java b/streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java\nindex dc04af6e44..0ec416e6b0 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java\n\n@@ -440,7 +440,7 @@ public interface KGroupedStream<K, V> {\n      *\n      * <p>\n      * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore} -- regardless of what\n-     * is specified in the parameter {@materialized}) will be backed by an internal changelog topic that will be created in Kafka.\n+     * is specified in the parameter {@code materialized}) will be backed by an internal changelog topic that will be created in Kafka.\n      * Therefore, the store name defined by the Materialized instance must be a valid Kafka topic name and cannot contain characters other than ASCII\n      * alphanumerics, '.', '_' and '-'.\n      * The changelog topic will be named \"${applicationId}-${storeName}-changelog\", where \"applicationId\" is\n"}}, {"oid": "ee57ec5ce1939e2b2c6c3f6a904e864b39e2baec", "url": "https://github.com/apache/kafka/commit/ee57ec5ce1939e2b2c6c3f6a904e864b39e2baec", "message": "doc: Fixed {@code} syntax", "committedDate": "2020-11-18T08:05:02Z", "type": "commit"}, {"oid": "d075d7d880bdc899bdd9531ba5e43da87d8103f4", "url": "https://github.com/apache/kafka/commit/d075d7d880bdc899bdd9531ba5e43da87d8103f4", "message": "docs: Store type in JavaDoc", "committedDate": "2020-12-08T21:34:33Z", "type": "commit"}, {"oid": "161b62bfc4560c42a2b800ebc36594f98742b6b1", "url": "https://github.com/apache/kafka/commit/161b62bfc4560c42a2b800ebc36594f98742b6b1", "message": "docs: Store type in JavaDoc", "committedDate": "2020-12-08T21:36:52Z", "type": "commit"}, {"oid": "30c0ba990937488d2b1d4dc704387529b960c040", "url": "https://github.com/apache/kafka/commit/30c0ba990937488d2b1d4dc704387529b960c040", "message": "doc: StoreType in JavaDoc", "committedDate": "2020-12-08T21:40:35Z", "type": "commit"}, {"oid": "bbf0ecaff26572b416beffeab6d12dc85a1e8f4b", "url": "https://github.com/apache/kafka/commit/bbf0ecaff26572b416beffeab6d12dc85a1e8f4b", "message": "doc: StoreType in JavaDoc", "committedDate": "2020-12-08T21:42:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4MDM2NA==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r548180364", "bodyText": "For time-windows, it would be a TimestampedWindowStore (not tkv-store). (same below for the other method of this class)\nNote the signature of Materialized<K, V, WindowStore<Bytes, byte[]>> that uses WindowStore, not KeyValueStore.", "author": "mjsax", "createdAt": "2020-12-23T19:48:47Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java", "diffHunk": "@@ -77,7 +77,8 @@\n      * {@link StreamsConfig#CACHE_MAX_BYTES_BUFFERING_CONFIG cache size}, and\n      * {@link StreamsConfig#COMMIT_INTERVAL_MS_CONFIG commit intervall}.\n      * <p>\n-     * For failure and recovery the store will be backed by an internal changelog topic that will be created in Kafka.\n+     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore}) will be backed by", "originalCommit": "bbf0ecaff26572b416beffeab6d12dc85a1e8f4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4MDU4OA==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r548280588", "bodyText": "Updated", "author": "fml2", "createdAt": "2020-12-23T22:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4MDM2NA=="}], "type": "inlineReview", "revised_code": {"commit": "527ef1cb1982e68534390998375664e243811537", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java\nindex e232be59c4..3b59f7a703 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java\n\n@@ -77,7 +77,7 @@ public interface TimeWindowedCogroupedKStream<K, V> {\n      * {@link StreamsConfig#CACHE_MAX_BYTES_BUFFERING_CONFIG cache size}, and\n      * {@link StreamsConfig#COMMIT_INTERVAL_MS_CONFIG commit intervall}.\n      * <p>\n-     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore}) will be backed by\n+     * For failure and recovery the store (which always will be of type {@link TimestampedWindowStore}) will be backed by\n      * an internal changelog topic that will be created in Kafka.\n      * The changelog topic will be named \"${applicationId}-${internalStoreName}-changelog\", where \"applicationId\" is\n      * user-specified in {@link StreamsConfig} via parameter\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4MTIxOA==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r548181218", "bodyText": "As above. Should we TimestampedWindowStore for this class.", "author": "mjsax", "createdAt": "2020-12-23T19:49:46Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java", "diffHunk": "@@ -67,7 +67,8 @@\n      * {@link StreamsConfig#CACHE_MAX_BYTES_BUFFERING_CONFIG cache size}, and\n      * {@link StreamsConfig#COMMIT_INTERVAL_MS_CONFIG commit intervall}.\n      * <p>\n-     * For failure and recovery the store will be backed by an internal changelog topic that will be created in Kafka.\n+     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore}) will be backed by", "originalCommit": "bbf0ecaff26572b416beffeab6d12dc85a1e8f4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4MDcwMg==", "url": "https://github.com/apache/kafka/pull/9606#discussion_r548280702", "bodyText": "Updated", "author": "fml2", "createdAt": "2020-12-23T22:06:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4MTIxOA=="}], "type": "inlineReview", "revised_code": {"commit": "e88a1bad1bddcfdf5ee2f76f49c3dbffebd32ecb", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java\nindex 4d6177ed83..f9121b04fb 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java\n\n@@ -67,7 +67,7 @@ public interface TimeWindowedKStream<K, V> {\n      * {@link StreamsConfig#CACHE_MAX_BYTES_BUFFERING_CONFIG cache size}, and\n      * {@link StreamsConfig#COMMIT_INTERVAL_MS_CONFIG commit intervall}.\n      * <p>\n-     * For failure and recovery the store (which always will be of type {@link TimestampedKeyValueStore}) will be backed by\n+     * For failure and recovery the store (which always will be of type {@link TimestampedWindowStore}) will be backed by\n      * an internal changelog topic that will be created in Kafka.\n      * The changelog topic will be named \"${applicationId}-${internalStoreName}-changelog\", where \"applicationId\" is\n      * user-specified in {@link StreamsConfig StreamsConfig} via parameter\n"}}, {"oid": "527ef1cb1982e68534390998375664e243811537", "url": "https://github.com/apache/kafka/commit/527ef1cb1982e68534390998375664e243811537", "message": "doc: Fixed store type in the JavaDco comment", "committedDate": "2020-12-23T21:59:51Z", "type": "commit"}, {"oid": "e88a1bad1bddcfdf5ee2f76f49c3dbffebd32ecb", "url": "https://github.com/apache/kafka/commit/e88a1bad1bddcfdf5ee2f76f49c3dbffebd32ecb", "message": "doc: Fixed store type in the JavaDoc comment", "committedDate": "2020-12-23T22:04:32Z", "type": "commit"}]}