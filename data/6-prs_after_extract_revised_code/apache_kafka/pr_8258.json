{"pr_number": 8258, "pr_title": "HOTFIX: Task#dirtyClose should not throw", "pr_createdAt": "2020-03-09T20:40:48Z", "pr_url": "https://github.com/apache/kafka/pull/8258", "timeline": [{"oid": "c41da77451ed74a1ec9551090d91080a2392447e", "url": "https://github.com/apache/kafka/commit/c41da77451ed74a1ec9551090d91080a2392447e", "message": "catch all exceptions in dirty close", "committedDate": "2020-03-09T20:31:34Z", "type": "commit"}, {"oid": "d855b3781367745350585f5767a7523314ccc0fe", "url": "https://github.com/apache/kafka/commit/d855b3781367745350585f5767a7523314ccc0fe", "message": "should swallow in state manager close as well", "committedDate": "2020-03-09T21:09:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389965280", "bodyText": "Pulled this up into AbstractTask so we can log in the executeAndMaybeSwallow method I also extracted", "author": "ableegoldman", "createdAt": "2020-03-09T21:13:56Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -17,18 +17,24 @@\n package org.apache.kafka.streams.processor.internals;\n \n import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.LogContext;\n import org.apache.kafka.streams.processor.StateStore;\n import org.apache.kafka.streams.processor.TaskId;\n \n import java.util.Collection;\n import java.util.Set;\n+import org.slf4j.Logger;\n \n+import static java.lang.String.format;\n import static org.apache.kafka.streams.processor.internals.Task.State.CLOSED;\n import static org.apache.kafka.streams.processor.internals.Task.State.CREATED;\n \n public abstract class AbstractTask implements Task {\n     private Task.State state = CREATED;\n \n+    protected final Logger log;", "originalCommit": "d855b3781367745350585f5767a7523314ccc0fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMDc4Mg==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390010782", "bodyText": "Hmmm... Seems to not align with OO principles to pass in the task type... maybe better pass the Logger into executeAndMaybeSwallow ?", "author": "mjsax", "createdAt": "2020-03-09T23:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMTQwNQ==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390021405", "bodyText": "Ack", "author": "ableegoldman", "createdAt": "2020-03-09T23:46:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA=="}], "type": "inlineReview", "revised_code": {"commit": "f39f9761a399e38eec949bb698a8843defd79bbc", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\nindex 053f0d77c4..7866f84195 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\n\n@@ -32,9 +32,6 @@ import static org.apache.kafka.streams.processor.internals.Task.State.CREATED;\n public abstract class AbstractTask implements Task {\n     private Task.State state = CREATED;\n \n-    protected final Logger log;\n-    protected final LogContext logContext;\n-    protected final String logPrefix;\n     protected final TaskId id;\n     protected final ProcessorTopology topology;\n     protected final StateDirectory stateDirectory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTQ4NA==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389965484", "bodyText": "Not sure how this slipped by checkstyle?", "author": "ableegoldman", "createdAt": "2020-03-09T21:14:24Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "diffHunk": "@@ -172,15 +169,18 @@ private void close(final boolean clean) {\n             transitionTo(State.CLOSING);\n         } else {\n             if (state() == State.RUNNING) {\n-                if (clean)", "originalCommit": "d855b3781367745350585f5767a7523314ccc0fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMTE0OQ==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390011149", "bodyText": "I think checkstyle does not enforce it... Even if I think it should...", "author": "mjsax", "createdAt": "2020-03-09T23:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e135628aa9194e05f5bf3d04f2ccf9b2ac691310", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\nindex ea1338aaf3..870836fea1 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\n\n@@ -178,9 +178,9 @@ public class StandbyTask extends AbstractTask implements Task {\n \n             if (state() == State.CLOSING) {\n                 executeAndMaybeSwallow(clean, () -> {\n-                StateManagerUtil.closeStateManager(log, logPrefix, clean,\n-                    false, stateMgr, stateDirectory, TaskType.STANDBY);\n-                }, \"state manager close\");\n+                    StateManagerUtil.closeStateManager(log, logPrefix, clean,\n+                        false, stateMgr, stateDirectory, TaskType.STANDBY);\n+                    }, \"state manager close\");\n \n                 // TODO: if EOS is enabled, we should wipe out the state stores like we did for StreamTask too\n             } else {\n"}}, {"oid": "e135628aa9194e05f5bf3d04f2ccf9b2ac691310", "url": "https://github.com/apache/kafka/commit/e135628aa9194e05f5bf3d04f2ccf9b2ac691310", "message": "match spacing", "committedDate": "2020-03-09T21:14:58Z", "type": "commit"}, {"oid": "8e49b4aaf14f741daa0216ca2a87f808c94bef44", "url": "https://github.com/apache/kafka/commit/8e49b4aaf14f741daa0216ca2a87f808c94bef44", "message": "checkstyle", "committedDate": "2020-03-09T21:17:29Z", "type": "commit"}, {"oid": "46892f0a81a6a738304722b650d5eaa0bd58c7cf", "url": "https://github.com/apache/kafka/commit/46892f0a81a6a738304722b650d5eaa0bd58c7cf", "message": "compile test", "committedDate": "2020-03-09T21:18:31Z", "type": "commit"}, {"oid": "6561f8874e7974c9ee080905088600973b44e5be", "url": "https://github.com/apache/kafka/commit/6561f8874e7974c9ee080905088600973b44e5be", "message": "fix tests", "committedDate": "2020-03-09T21:28:21Z", "type": "commit"}, {"oid": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706", "url": "https://github.com/apache/kafka/commit/718e64a26f1e5d309e1cbbfd1b67503b9c9c4706", "message": "fix streamtask string", "committedDate": "2020-03-09T21:30:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NTEzNQ==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389985135", "bodyText": "What exception is possibly thrown from this close(false) call?", "author": "guozhangwang", "createdAt": "2020-03-09T21:58:36Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "diffHunk": "@@ -154,7 +145,11 @@ public void closeClean() {\n \n     @Override\n     public void closeDirty() {\n-        close(false);\n+        try {\n+            close(false);\n+        } catch (final RuntimeException e) {\n+            log.warn(String.format(\"Ignoring uncaught error in unclean close of standby task %s\", id), e);", "originalCommit": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f39f9761a399e38eec949bb698a8843defd79bbc", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\nindex 8dff1c5e9d..b9da58fe01 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java\n\n@@ -145,11 +156,7 @@ public class StandbyTask extends AbstractTask implements Task {\n \n     @Override\n     public void closeDirty() {\n-        try {\n-            close(false);\n-        } catch (final RuntimeException e) {\n-            log.warn(String.format(\"Ignoring uncaught error in unclean close of standby task %s\", id), e);\n-        }\n+        close(false);\n \n         log.info(\"Closed dirty\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NzAyNQ==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389987025", "bodyText": "Ditto here, if we have swallowed all possible exception inside close, then it is unnecessary to have another swallow here.", "author": "guozhangwang", "createdAt": "2020-03-09T22:03:09Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -389,7 +380,11 @@ public void closeClean() {\n \n     @Override\n     public void closeDirty() {\n-        close(false);\n+        try {\n+            close(false);", "originalCommit": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f39f9761a399e38eec949bb698a8843defd79bbc", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java\nindex b01245cd96..4d0fa45a1a 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java\n\n@@ -380,11 +389,7 @@ public class StreamTask extends AbstractTask implements ProcessorNodePunctuator,\n \n     @Override\n     public void closeDirty() {\n-        try {\n-            close(false);\n-        } catch (final RuntimeException e) {\n-            log.warn(String.format(\"Ignoring uncaught error in unclean close of active task %s\", id), e);\n-        }\n+        close(false);\n \n         log.info(\"Closed dirty\");\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMDg4NA==", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390010884", "bodyText": "Seems this method could be static?", "author": "mjsax", "createdAt": "2020-03-09T23:11:59Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -100,4 +112,16 @@ final void transitionTo(final Task.State newState) {\n             throw new IllegalStateException(\"Invalid transition from \" + oldState + \" to \" + newState);\n         }\n     }\n+\n+    void executeAndMaybeSwallow(final boolean clean, final Runnable runnable, final String name) {", "originalCommit": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f39f9761a399e38eec949bb698a8843defd79bbc", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\nindex 053f0d77c4..7866f84195 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java\n\n@@ -113,7 +104,10 @@ public abstract class AbstractTask implements Task {\n         }\n     }\n \n-    void executeAndMaybeSwallow(final boolean clean, final Runnable runnable, final String name) {\n+    static void executeAndMaybeSwallow(final boolean clean,\n+                                       final Runnable runnable,\n+                                       final String name,\n+                                       final Logger log) {\n         try {\n             runnable.run();\n         } catch (final RuntimeException e) {\n"}}, {"oid": "f39f9761a399e38eec949bb698a8843defd79bbc", "url": "https://github.com/apache/kafka/commit/f39f9761a399e38eec949bb698a8843defd79bbc", "message": "handle exceptions in caller", "committedDate": "2020-03-10T00:09:12Z", "type": "commit"}, {"oid": "1817b93c6ae29a10036a151c2f38b556f2f4e49e", "url": "https://github.com/apache/kafka/commit/1817b93c6ae29a10036a151c2f38b556f2f4e49e", "message": "revert test changes", "committedDate": "2020-03-10T00:10:24Z", "type": "commit"}, {"oid": "ec84654907be83f23d8001121848a6aa2938b954", "url": "https://github.com/apache/kafka/commit/ec84654907be83f23d8001121848a6aa2938b954", "message": "checkstyle", "committedDate": "2020-03-10T00:13:22Z", "type": "commit"}, {"oid": "7067f4766208bfded607295360998b41977ef16d", "url": "https://github.com/apache/kafka/commit/7067f4766208bfded607295360998b41977ef16d", "message": "revert handling", "committedDate": "2020-03-10T00:54:07Z", "type": "commit"}, {"oid": "7067f4766208bfded607295360998b41977ef16d", "url": "https://github.com/apache/kafka/commit/7067f4766208bfded607295360998b41977ef16d", "message": "revert handling", "committedDate": "2020-03-10T00:54:07Z", "type": "forcePushed"}, {"oid": "9da7d1d0c4daf2011e4d1d64cbe18670515a0585", "url": "https://github.com/apache/kafka/commit/9da7d1d0c4daf2011e4d1d64cbe18670515a0585", "message": "fixup", "committedDate": "2020-03-10T00:57:11Z", "type": "commit"}, {"oid": "86b98132441a4ecf1db5b2ab8908c1190768ace9", "url": "https://github.com/apache/kafka/commit/86b98132441a4ecf1db5b2ab8908c1190768ace9", "message": "add unit test", "committedDate": "2020-03-10T01:05:07Z", "type": "commit"}]}