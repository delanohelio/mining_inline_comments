{"pr_number": 8847, "pr_title": "KAFKA-7833: Add missing test", "pr_createdAt": "2020-06-11T00:42:45Z", "pr_url": "https://github.com/apache/kafka/pull/8847", "timeline": [{"oid": "42013326fa75068f0452813e072729d9f0a0ab19", "url": "https://github.com/apache/kafka/commit/42013326fa75068f0452813e072729d9f0a0ab19", "message": "KAFKA-7833: Add missing test", "committedDate": "2020-06-11T00:40:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MTkzMg==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438481932", "bodyText": "Minor improvement for the error message", "author": "mjsax", "createdAt": "2020-06-11T00:43:09Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -680,8 +680,11 @@ private void validateGlobalStoreArguments(final String sourceName,\n         if (nodeFactories.containsKey(processorName)) {\n             throw new TopologyException(\"Processor \" + processorName + \" is already added.\");\n         }\n-        if (stateFactories.containsKey(storeName) || globalStateBuilders.containsKey(storeName)) {\n-            throw new TopologyException(\"StateStore \" + storeName + \" is already added.\");\n+        if (stateFactories.containsKey(storeName)) {\n+            throw new TopologyException(\"A different StateStore has already been added with the name \" + storeName);\n+        }\n+        if (globalStateBuilders.containsKey(storeName)) {\n+            throw new TopologyException(\"A different GlobalStateStore has already been added with the name \" + storeName);\n         }", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjAyNA==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438482024", "bodyText": "Just renaming the store to make the error message in the tests easier to read.", "author": "mjsax", "createdAt": "2020-06-11T00:43:32Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java", "diffHunk": "@@ -62,7 +63,7 @@\n \n     private final Serde<String> stringSerde = Serdes.String();\n     private final InternalTopologyBuilder builder = new InternalTopologyBuilder();\n-    private final StoreBuilder<?> storeBuilder = new MockKeyValueStoreBuilder(\"store\", false);\n+    private final StoreBuilder<?> storeBuilder = new MockKeyValueStoreBuilder(\"testStore\", false);", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjE4OA==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438482188", "bodyText": "Just refactoring:\n\nadd missing generic types\nuse assertThrows\nadd check for error message", "author": "mjsax", "createdAt": "2020-06-11T00:44:18Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java", "diffHunk": "@@ -372,48 +373,112 @@ public void testAddStateStoreWithSink() {\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameName() {\n+        final StoreBuilder<KeyValueStore<Object, Object>> otherBuilder =", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjIzMg==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438482232", "bodyText": "As above", "author": "mjsax", "createdAt": "2020-06-11T00:44:30Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java", "diffHunk": "@@ -372,48 +373,112 @@ public void testAddStateStoreWithSink() {\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameName() {\n+        final StoreBuilder<KeyValueStore<Object, Object>> otherBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false);\n+\n         builder.addStateStore(storeBuilder);\n-        final StoreBuilder otherBuilder = new MockKeyValueStoreBuilder(\"store\", false);\n-        try {\n-            builder.addStateStore(otherBuilder);\n-            fail(\"Should throw TopologyException with store name conflict\");\n-        } catch (final TopologyException expected) { /* ok */ }\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addStateStore(otherBuilder)\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different StateStore has already been added with the name testStore\")\n+        );\n     }\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameNameWhenFirstStoreIsGlobal() {\n-        final StoreBuilder storeBuilder = new MockKeyValueStoreBuilder(\"store\", false).withLoggingDisabled();", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjQxNQ==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438482415", "bodyText": "As above (the diff is just weird... this is an existing test; cf. below)", "author": "mjsax", "createdAt": "2020-06-11T00:45:08Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java", "diffHunk": "@@ -372,48 +373,112 @@ public void testAddStateStoreWithSink() {\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameName() {\n+        final StoreBuilder<KeyValueStore<Object, Object>> otherBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false);\n+\n         builder.addStateStore(storeBuilder);\n-        final StoreBuilder otherBuilder = new MockKeyValueStoreBuilder(\"store\", false);\n-        try {\n-            builder.addStateStore(otherBuilder);\n-            fail(\"Should throw TopologyException with store name conflict\");\n-        } catch (final TopologyException expected) { /* ok */ }\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addStateStore(otherBuilder)\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different StateStore has already been added with the name testStore\")\n+        );\n     }\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameNameWhenFirstStoreIsGlobal() {\n-        final StoreBuilder storeBuilder = new MockKeyValueStoreBuilder(\"store\", false).withLoggingDisabled();\n+        final StoreBuilder<KeyValueStore<Object, Object>> globalBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false).withLoggingDisabled();\n+\n         builder.addGlobalStore(\n-                storeBuilder,\n+            globalBuilder,\n+            \"global-store\",\n+            null,\n+            null,\n+            null,\n+            \"global-topic\",\n+            \"global-processor\",\n+            new MockProcessorSupplier<>()\n+        );\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addStateStore(storeBuilder)\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different GlobalStateStore has already been added with the name testStore\")\n+        );\n+    }\n+\n+    @Test\n+    public void shouldNotAllowToAddStoresWithSameNameWhenSecondStoreIsGlobal() {", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ4MjUxMg==", "url": "https://github.com/apache/kafka/pull/8847#discussion_r438482512", "bodyText": "This is the missing test case.", "author": "mjsax", "createdAt": "2020-06-11T00:45:28Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java", "diffHunk": "@@ -372,48 +373,112 @@ public void testAddStateStoreWithSink() {\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameName() {\n+        final StoreBuilder<KeyValueStore<Object, Object>> otherBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false);\n+\n         builder.addStateStore(storeBuilder);\n-        final StoreBuilder otherBuilder = new MockKeyValueStoreBuilder(\"store\", false);\n-        try {\n-            builder.addStateStore(otherBuilder);\n-            fail(\"Should throw TopologyException with store name conflict\");\n-        } catch (final TopologyException expected) { /* ok */ }\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addStateStore(otherBuilder)\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different StateStore has already been added with the name testStore\")\n+        );\n     }\n \n     @Test\n     public void shouldNotAllowToAddStoresWithSameNameWhenFirstStoreIsGlobal() {\n-        final StoreBuilder storeBuilder = new MockKeyValueStoreBuilder(\"store\", false).withLoggingDisabled();\n+        final StoreBuilder<KeyValueStore<Object, Object>> globalBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false).withLoggingDisabled();\n+\n         builder.addGlobalStore(\n-                storeBuilder,\n+            globalBuilder,\n+            \"global-store\",\n+            null,\n+            null,\n+            null,\n+            \"global-topic\",\n+            \"global-processor\",\n+            new MockProcessorSupplier<>()\n+        );\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addStateStore(storeBuilder)\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different GlobalStateStore has already been added with the name testStore\")\n+        );\n+    }\n+\n+    @Test\n+    public void shouldNotAllowToAddStoresWithSameNameWhenSecondStoreIsGlobal() {\n+        final StoreBuilder<KeyValueStore<Object, Object>> globalBuilder =\n+            new MockKeyValueStoreBuilder(\"testStore\", false).withLoggingDisabled();\n+\n+        builder.addStateStore(storeBuilder);\n+\n+        final TopologyException exception = assertThrows(\n+            TopologyException.class,\n+            () -> builder.addGlobalStore(\n+                globalBuilder,\n                 \"global-store\",\n                 null,\n                 null,\n                 null,\n                 \"global-topic\",\n                 \"global-processor\",\n-                new MockProcessorSupplier<>());\n-        try {\n-            builder.addStateStore(storeBuilder);\n-            fail(\"Should throw TopologyException with store name conflict\");\n-        } catch (final TopologyException expected) { /* ok */ }\n+                new MockProcessorSupplier<>()\n+            )\n+        );\n+\n+        assertThat(\n+            exception.getMessage(),\n+            equalTo(\"Invalid topology: A different StateStore has already been added with the name testStore\")\n+        );\n     }\n \n     @Test\n-    public void shouldNotAllowToAddStoresWithSameNameWhenSecondStoreIsGlobal() {\n-        final StoreBuilder storeBuilder = new MockKeyValueStoreBuilder(\"store\", false).withLoggingDisabled();\n-        builder.addStateStore(storeBuilder);\n-        try {\n-            builder.addGlobalStore(\n-                    storeBuilder,\n-                    \"global-store\",\n-                    null,\n-                    null,\n-                    null,\n-                    \"global-topic\",\n-                    \"global-processor\",\n-                    new MockProcessorSupplier<>());\n-            fail(\"Should throw TopologyException with store name conflict\");\n-        } catch (final TopologyException expected) { /* ok */ }\n+    public void shouldNotAllowToAddGlobalStoresWithSameName() {", "originalCommit": "42013326fa75068f0452813e072729d9f0a0ab19", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}