{"pr_number": 9384, "pr_title": "MINOR: remove explicit passing of AdminClient into StreamsPartitionAssignor", "pr_createdAt": "2020-10-06T20:23:11Z", "pr_url": "https://github.com/apache/kafka/pull/9384", "timeline": [{"oid": "9f81e48021e0978e90abcceee5400a1fe826ca58", "url": "https://github.com/apache/kafka/commit/9f81e48021e0978e90abcceee5400a1fe826ca58", "message": "MINOR: remove explicit passing of AdminClient into StreamsPartitionAssignoer", "committedDate": "2020-10-06T19:35:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3NDEyNw==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r500574127", "bodyText": "Instead of passing the Admin as parameter, we could call taskManager#adminClient() in the next line, however, this requires to make the method public (it's package-private atm) thus I opted to for parameter-passing instead.", "author": "mjsax", "createdAt": "2020-10-06T20:24:53Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java", "diffHunk": "@@ -291,11 +271,7 @@ public String userEndPoint() {\n         }\n     }\n \n-    public Admin adminClient() {\n-        return adminClient;\n-    }\n-\n-    public InternalTopicManager internalTopicManager() {\n+    public InternalTopicManager internalTopicManager(final Admin adminClient) {", "originalCommit": "9f81e48021e0978e90abcceee5400a1fe826ca58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java\nindex 43ff169ba8..c092d252da 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java\n\n@@ -271,8 +258,16 @@ public final class AssignorConfiguration {\n         }\n     }\n \n-    public InternalTopicManager internalTopicManager(final Admin adminClient) {\n-        return new InternalTopicManager(time(), adminClient, streamsConfig);\n+    public Consumer<byte[], byte[]> mainConsumer() {\n+        return Objects.requireNonNull(referenceContainer.mainConsumer, \"Main consumer was not specified\");\n+    }\n+\n+    public Admin adminClient() {\n+        return Objects.requireNonNull(referenceContainer.adminClient, \"Admin client was not specified\");\n+    }\n+\n+    public InternalTopicManager internalTopicManager() {\n+        return new InternalTopicManager(time(), referenceContainer.adminClient, streamsConfig);\n     }\n \n     public CopartitionedTopicsEnforcer copartitionedTopicsEnforcer() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3NDY0NQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r500574645", "bodyText": "We need to setup the mocks before calling partitionAssignor.configure() now, as we call taskManager#adminClient() in this method (similar elsewhere)", "author": "mjsax", "createdAt": "2020-10-06T20:25:54Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java", "diffHunk": "@@ -131,12 +130,13 @@\n \n     // Make sure to complete setting up any mocks (such as TaskManager or AdminClient) before configuring the assignor\n     private void configurePartitionAssignorWith(final Map<String, Object> props) {\n+        EasyMock.replay(taskManager, adminClient);\n+\n         final Map<String, Object> configMap = configProps();\n         configMap.putAll(props);\n \n         streamsConfig = new StreamsConfig(configMap);\n         partitionAssignor.configure(configMap);\n-        EasyMock.replay(taskManager, adminClient);", "originalCommit": "9f81e48021e0978e90abcceee5400a1fe826ca58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java b/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\nindex 28b0068ef8..dac46b5aa1 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\n\n@@ -130,13 +136,12 @@ public class HighAvailabilityStreamsPartitionAssignorTest {\n \n     // Make sure to complete setting up any mocks (such as TaskManager or AdminClient) before configuring the assignor\n     private void configurePartitionAssignorWith(final Map<String, Object> props) {\n-        EasyMock.replay(taskManager, adminClient);\n-\n         final Map<String, Object> configMap = configProps();\n         configMap.putAll(props);\n \n         streamsConfig = new StreamsConfig(configMap);\n         partitionAssignor.configure(configMap);\n+        EasyMock.replay(taskManager, adminClient);\n \n         overwriteInternalTopicManagerWithMock();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3NDg5NA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r500574894", "bodyText": "We need to setup the admin mock before the TM mock now (similar elsewhere)", "author": "mjsax", "createdAt": "2020-10-06T20:26:21Z", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java", "diffHunk": "@@ -203,8 +204,8 @@ public void shouldReturnAllActiveTasksToPreviousOwnerRegardlessOfBalanceAndTrigg\n         builder.addStateStore(new MockKeyValueStoreBuilder(\"store1\", false), \"processor1\");\n         final Set<TaskId> allTasks = mkSet(TASK_0_0, TASK_0_1, TASK_0_2);\n \n-        createMockTaskManager(allTasks);\n         adminClient = EasyMock.createMock(AdminClient.class);\n+        createMockTaskManager(allTasks);", "originalCommit": "9f81e48021e0978e90abcceee5400a1fe826ca58", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java b/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\nindex 28b0068ef8..dac46b5aa1 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java\n\n@@ -204,8 +208,8 @@ public class HighAvailabilityStreamsPartitionAssignorTest {\n         builder.addStateStore(new MockKeyValueStoreBuilder(\"store1\", false), \"processor1\");\n         final Set<TaskId> allTasks = mkSet(TASK_0_0, TASK_0_1, TASK_0_2);\n \n-        adminClient = EasyMock.createMock(AdminClient.class);\n         createMockTaskManager(allTasks);\n+        adminClient = EasyMock.createMock(AdminClient.class);\n         expect(adminClient.listOffsets(anyObject())).andThrow(new StreamsException(\"Should be handled\"));\n         configurePartitionAssignorWith(singletonMap(StreamsConfig.PROBING_REBALANCE_INTERVAL_MS_CONFIG, rebalanceInterval));\n \n"}}, {"oid": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "url": "https://github.com/apache/kafka/commit/077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "message": "Introduce `ReferenceContainter` to decouple TaskManager from StreamPartitionAssingnor", "committedDate": "2020-10-09T21:40:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQxOA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r502683418", "bodyText": "Remove unused method", "author": "mjsax", "createdAt": "2020-10-09T21:42:32Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -1091,8 +1096,4 @@ ConsumerRebalanceListener rebalanceListener() {\n     Admin adminClient() {\n         return adminClient;\n     }\n-\n-    InternalTopologyBuilder internalTopologyBuilder() {", "originalCommit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNzU1Mg==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504137552", "bodyText": "Thanks!", "author": "vvcephei", "createdAt": "2020-10-13T17:35:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzQxOA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r502683615", "bodyText": "we need to keep a reference as we cannot get the mainConsumer at this point, as it will be set after this method finished", "author": "mjsax", "createdAt": "2020-10-09T21:43:21Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -192,12 +191,11 @@ public String toString() {\n      */\n     @Override\n     public void configure(final Map<String, ?> configs) {\n-        final AssignorConfiguration assignorConfiguration = new AssignorConfiguration(configs);\n+        assignorConfiguration = new AssignorConfiguration(configs);", "originalCommit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0MTM1MA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504141350", "bodyText": "Thanks. Should we instead make referenceContainer a field and access its members to get the references? The purpose of AssignorConfiguration is to parse the configs, not to be a general container for the configured values. Otherwise, we wouldn't need to assign any of the other fields here.", "author": "vvcephei", "createdAt": "2020-10-13T17:42:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4MzczNA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504183734", "bodyText": "Sure.", "author": "mjsax", "createdAt": "2020-10-13T18:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NTg1OA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504775858", "bodyText": "Thanks for the update! Are you still planning to drop the assignorConfiguration field in favor of a referenceContainer field?", "author": "vvcephei", "createdAt": "2020-10-14T15:34:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkwOTY3Ng==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504909676", "bodyText": "I never intended to drop it. Maybe I miss understand your comment?\nWe could replace the field StreamsParttionAssignor#taskManager etc with StreamsPartitionAssigner#referenceContainer but it just make the code lines longer each time we need to access the TM (etc). Thus, it seems to make the code more readable if we just \"extract\" those field from the reference container once?", "author": "mjsax", "createdAt": "2020-10-14T19:09:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MzYxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "59a921654808daad6c0e458a6369d5c6ec094297", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\nindex 52bca35702..dec214b548 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\n\n@@ -196,11 +198,13 @@ public class StreamsPartitionAssignor implements ConsumerPartitionAssignor, Conf\n         logPrefix = assignorConfiguration.logPrefix();\n         log = new LogContext(logPrefix).logger(getClass());\n         usedSubscriptionMetadataVersion = assignorConfiguration.configuredMetadataVersion(usedSubscriptionMetadataVersion);\n-        taskManager = assignorConfiguration.taskManager();\n-        streamsMetadataState = assignorConfiguration.streamsMetadataState();\n+\n+        final ReferenceContainer referenceContainer = assignorConfiguration.referenceContainer();\n+        taskManager = Objects.requireNonNull(referenceContainer.taskManager, \"TaskManager was not specified\");\n+        streamsMetadataState = Objects.requireNonNull(referenceContainer.streamsMetadataState, \"StreamsMetadataState was not specified\");\n+        time = Objects.requireNonNull(referenceContainer.time, \"Time was not specified\");\n         assignmentErrorCode = assignorConfiguration.assignmentErrorCode();\n         nextScheduledRebalanceMs = assignorConfiguration.nextScheduledRebalanceMs();\n-        time = assignorConfiguration.time();\n         assignmentConfigs = assignorConfiguration.assignmentConfigs();\n         partitionGrouper = assignorConfiguration.partitionGrouper();\n         userEndPoint = assignorConfiguration.userEndPoint();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4Mzc0OQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r502683749", "bodyText": "Only used at a single place, just removing the variable.", "author": "mjsax", "createdAt": "2020-10-09T21:43:53Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -206,7 +204,6 @@ public void configure(final Map<String, ?> configs) {\n         assignmentConfigs = assignorConfiguration.assignmentConfigs();\n         partitionGrouper = assignorConfiguration.partitionGrouper();\n         userEndPoint = assignorConfiguration.userEndPoint();\n-        adminClient = assignorConfiguration.adminClient();", "originalCommit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59a921654808daad6c0e458a6369d5c6ec094297", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\nindex 52bca35702..dec214b548 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java\n\n@@ -196,11 +198,13 @@ public class StreamsPartitionAssignor implements ConsumerPartitionAssignor, Conf\n         logPrefix = assignorConfiguration.logPrefix();\n         log = new LogContext(logPrefix).logger(getClass());\n         usedSubscriptionMetadataVersion = assignorConfiguration.configuredMetadataVersion(usedSubscriptionMetadataVersion);\n-        taskManager = assignorConfiguration.taskManager();\n-        streamsMetadataState = assignorConfiguration.streamsMetadataState();\n+\n+        final ReferenceContainer referenceContainer = assignorConfiguration.referenceContainer();\n+        taskManager = Objects.requireNonNull(referenceContainer.taskManager, \"TaskManager was not specified\");\n+        streamsMetadataState = Objects.requireNonNull(referenceContainer.streamsMetadataState, \"StreamsMetadataState was not specified\");\n+        time = Objects.requireNonNull(referenceContainer.time, \"Time was not specified\");\n         assignmentErrorCode = assignorConfiguration.assignmentErrorCode();\n         nextScheduledRebalanceMs = assignorConfiguration.nextScheduledRebalanceMs();\n-        time = assignorConfiguration.time();\n         assignmentConfigs = assignorConfiguration.assignmentConfigs();\n         partitionGrouper = assignorConfiguration.partitionGrouper();\n         userEndPoint = assignorConfiguration.userEndPoint();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4Mzg5Mw==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r502683893", "bodyText": "Decouple TM from StreamPartitionAssignor now and not \"miss-use\" it to get the consumer any longer.", "author": "mjsax", "createdAt": "2020-10-09T21:44:35Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -120,10 +120,6 @@ void setMainConsumer(final Consumer<byte[], byte[]> mainConsumer) {\n         this.mainConsumer = mainConsumer;\n     }\n \n-    Consumer<byte[], byte[]> mainConsumer() {", "originalCommit": "077b8d59f058ae20f5ed5c044a1fe8cc782b504d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzODM5OQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504138399", "bodyText": "Thanks!", "author": "vvcephei", "createdAt": "2020-10-13T17:37:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4Mzg5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a18b74975f5e45f6f446ff4f35c4e9fc2672f3da", "url": "https://github.com/apache/kafka/commit/a18b74975f5e45f6f446ff4f35c4e9fc2672f3da", "message": "Revert unnecessary changes", "committedDate": "2020-10-09T21:51:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNjczNQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504136735", "bodyText": "Should these be in the reference container as well?", "author": "vvcephei", "createdAt": "2020-10-13T17:34:16Z", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -900,9 +900,7 @@\n \n         // These are not settable in the main Streams config; they are set by the StreamThread to pass internal\n         // state into the assignor.\n-        public static final String TASK_MANAGER_FOR_PARTITION_ASSIGNOR = \"__task.manager.instance__\";\n-        public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n-        public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n+        public static final String REFERENCE_CONTAINER_PARTITION_ASSIGNOR = \"__reference.container.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n         public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n         public static final String TIME = \"__time__\";", "originalCommit": "a18b74975f5e45f6f446ff4f35c4e9fc2672f3da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MDYzOA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504190638", "bodyText": "Ack", "author": "mjsax", "createdAt": "2020-10-13T19:04:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNjczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2Mzk2OA==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504763968", "bodyText": "Sorry, @mjsax , I was referring to all three of \"assignment error code\", \"next scheduled rebalance ms\", and \"time\".", "author": "vvcephei", "createdAt": "2020-10-14T15:18:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNjczNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDkxMDI2MQ==", "url": "https://github.com/apache/kafka/pull/9384#discussion_r504910261", "bodyText": "Ah. Ack.", "author": "mjsax", "createdAt": "2020-10-14T19:10:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNjczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "59a921654808daad6c0e458a6369d5c6ec094297", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java b/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\nindex 6a45511dde..60aa54360f 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java\n\n@@ -903,7 +903,6 @@ public class StreamsConfig extends AbstractConfig {\n         public static final String REFERENCE_CONTAINER_PARTITION_ASSIGNOR = \"__reference.container.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n         public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n-        public static final String TIME = \"__time__\";\n \n         // This is settable in the main Streams config, but it's a private API for testing\n         public static final String ASSIGNMENT_LISTENER = \"__assignment.listener__\";\n"}}, {"oid": "59a921654808daad6c0e458a6369d5c6ec094297", "url": "https://github.com/apache/kafka/commit/59a921654808daad6c0e458a6369d5c6ec094297", "message": "Github comments", "committedDate": "2020-10-13T19:31:17Z", "type": "commit"}, {"oid": "21630d29afeb8f9789b35be96c1f110dba4b01c5", "url": "https://github.com/apache/kafka/commit/21630d29afeb8f9789b35be96c1f110dba4b01c5", "message": "Github comments", "committedDate": "2020-10-14T21:46:55Z", "type": "commit"}, {"oid": "b9b79e0b29ddbdb4d06f992eaf9036bd5756ff5a", "url": "https://github.com/apache/kafka/commit/b9b79e0b29ddbdb4d06f992eaf9036bd5756ff5a", "message": "More cleanup", "committedDate": "2020-10-14T22:41:48Z", "type": "commit"}]}