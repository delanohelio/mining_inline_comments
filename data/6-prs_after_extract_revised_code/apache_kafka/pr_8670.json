{"pr_number": 8670, "pr_title": "KAFKA-10001: Should trigger store specific callback if it is also a listener", "pr_createdAt": "2020-05-15T00:43:47Z", "pr_url": "https://github.com/apache/kafka/pull/8670", "timeline": [{"oid": "3e082c423f40e96b352916b775003011d616072c", "url": "https://github.com/apache/kafka/commit/3e082c423f40e96b352916b775003011d616072c", "message": "should trigger store specific callback if it is also a listener", "committedDate": "2020-05-15T00:42:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxMzk2Mw==", "url": "https://github.com/apache/kafka/pull/8670#discussion_r425513963", "bodyText": "Nit: we get storeMetadata above already (similar below) also the if is redundant  -- should we unify it?", "author": "mjsax", "createdAt": "2020-05-15T01:17:17Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -522,6 +523,12 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             // do not trigger restore listener if we are processing standby tasks\n             if (changelogMetadata.stateManager.taskType() == Task.TaskType.ACTIVE) {\n                 try {\n+                    // first trigger the store's specific listener if its registered callback is also an lister,\n+                    // then trigger the user registered global listener\n+                    final StateRestoreCallback restoreCallback = changelogMetadata.storeMetadata.restoreCallback();", "originalCommit": "3e082c423f40e96b352916b775003011d616072c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5f42343c58c188f70a2cb95ea6aa2d69238220a", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\nindex 0232393b73..aed6c546bc 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\n\n@@ -525,9 +525,10 @@ public class StoreChangelogReader implements ChangelogReader {\n                 try {\n                     // first trigger the store's specific listener if its registered callback is also an lister,\n                     // then trigger the user registered global listener\n-                    final StateRestoreCallback restoreCallback = changelogMetadata.storeMetadata.restoreCallback();\n-                    if (restoreCallback instanceof StateRestoreListener)\n+                    final StateRestoreCallback restoreCallback = storeMetadata.restoreCallback();\n+                    if (restoreCallback instanceof StateRestoreListener) {\n                         ((StateRestoreListener) restoreCallback).onBatchRestored(partition, storeName, currentOffset, numRecords);\n+                    }\n \n                     stateRestoreListener.onBatchRestored(partition, storeName, currentOffset, numRecords);\n                 } catch (final Exception e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxNDAxMw==", "url": "https://github.com/apache/kafka/pull/8670#discussion_r425514013", "bodyText": "Nit: opening/closing { } are missing", "author": "mjsax", "createdAt": "2020-05-15T01:17:25Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -522,6 +523,12 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             // do not trigger restore listener if we are processing standby tasks\n             if (changelogMetadata.stateManager.taskType() == Task.TaskType.ACTIVE) {\n                 try {\n+                    // first trigger the store's specific listener if its registered callback is also an lister,\n+                    // then trigger the user registered global listener\n+                    final StateRestoreCallback restoreCallback = changelogMetadata.storeMetadata.restoreCallback();\n+                    if (restoreCallback instanceof StateRestoreListener)", "originalCommit": "3e082c423f40e96b352916b775003011d616072c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5f42343c58c188f70a2cb95ea6aa2d69238220a", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\nindex 0232393b73..aed6c546bc 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java\n\n@@ -525,9 +525,10 @@ public class StoreChangelogReader implements ChangelogReader {\n                 try {\n                     // first trigger the store's specific listener if its registered callback is also an lister,\n                     // then trigger the user registered global listener\n-                    final StateRestoreCallback restoreCallback = changelogMetadata.storeMetadata.restoreCallback();\n-                    if (restoreCallback instanceof StateRestoreListener)\n+                    final StateRestoreCallback restoreCallback = storeMetadata.restoreCallback();\n+                    if (restoreCallback instanceof StateRestoreListener) {\n                         ((StateRestoreListener) restoreCallback).onBatchRestored(partition, storeName, currentOffset, numRecords);\n+                    }\n \n                     stateRestoreListener.onBatchRestored(partition, storeName, currentOffset, numRecords);\n                 } catch (final Exception e) {\n"}}, {"oid": "b5f42343c58c188f70a2cb95ea6aa2d69238220a", "url": "https://github.com/apache/kafka/commit/b5f42343c58c188f70a2cb95ea6aa2d69238220a", "message": "add unit tests; address comments", "committedDate": "2020-05-15T18:12:37Z", "type": "commit"}, {"oid": "d42af10be0a1f3686d340c74b8c5a39e4fc7a1b3", "url": "https://github.com/apache/kafka/commit/d42af10be0a1f3686d340c74b8c5a39e4fc7a1b3", "message": "remove unused imports", "committedDate": "2020-05-15T18:20:11Z", "type": "commit"}]}