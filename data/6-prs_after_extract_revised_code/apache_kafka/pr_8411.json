{"pr_number": 8411, "pr_title": "KAFKA-9812: fix infinite loop in test code", "pr_createdAt": "2020-04-03T02:54:13Z", "pr_url": "https://github.com/apache/kafka/pull/8411", "timeline": [{"oid": "b2403ad99d3725ae021251f0ebee5d8afbafc401", "url": "https://github.com/apache/kafka/commit/b2403ad99d3725ae021251f0ebee5d8afbafc401", "message": "KAFKA-9812: fix infinite loop in test code", "committedDate": "2020-04-03T02:45:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxMDc3OQ==", "url": "https://github.com/apache/kafka/pull/8411#discussion_r402710779", "bodyText": "In KafkaStreams.close, we don't interrupt the StreamThreads but set them to state:=PENDING_SHUTDOWN. I'm checking both here, though, because the thread might be interrupted for other reasons, though, and it's generally polite to make sure you haven't been interrupted if you're blocking.", "author": "vvcephei", "createdAt": "2020-04-03T03:02:05Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosIntegrationTest.java", "diffHunk": "@@ -654,6 +655,10 @@ public void init(final ProcessorContext context) {\n                     public KeyValue<Long, Long> transform(final Long key, final Long value) {\n                         if (gcInjected.compareAndSet(true, false)) {\n                             while (doGC) {\n+                                final StreamThread thread = (StreamThread) Thread.currentThread();\n+                                if (thread.isInterrupted() || !thread.isRunning()) {", "originalCommit": "b2403ad99d3725ae021251f0ebee5d8afbafc401", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}