{"pr_number": 8375, "pr_title": "KAFKA-9776: Downgrade TxnCommit API v3 when broker doesn't support", "pr_createdAt": "2020-03-27T20:10:31Z", "pr_url": "https://github.com/apache/kafka/pull/8375", "timeline": [{"oid": "283d71aae14af024c663f9b7ffc96433953d8264", "url": "https://github.com/apache/kafka/commit/283d71aae14af024c663f9b7ffc96433953d8264", "message": "Fallback group metadata", "committedDate": "2020-03-31T01:24:42Z", "type": "commit"}, {"oid": "3f6e9a6d655461399f51a16947fc7f9197564874", "url": "https://github.com/apache/kafka/commit/3f6e9a6d655461399f51a16947fc7f9197564874", "message": "address comment", "committedDate": "2020-03-31T01:24:42Z", "type": "commit"}, {"oid": "7d7673b03e9dd70749c849fcb26e74b60e7c2909", "url": "https://github.com/apache/kafka/commit/7d7673b03e9dd70749c849fcb26e74b60e7c2909", "message": "reenable system test", "committedDate": "2020-03-31T01:33:50Z", "type": "commit"}, {"oid": "315bd5489fb6e0118011decab3d97d26bc9b4a72", "url": "https://github.com/apache/kafka/commit/315bd5489fb6e0118011decab3d97d26bc9b4a72", "message": "add internal flag for txn commit downgrade", "committedDate": "2020-03-31T03:44:02Z", "type": "commit"}, {"oid": "ad71a05bd31b3983977ea0cff174fd828996f8d4", "url": "https://github.com/apache/kafka/commit/ad71a05bd31b3983977ea0cff174fd828996f8d4", "message": "partially done", "committedDate": "2020-03-31T05:01:24Z", "type": "commit"}, {"oid": "d62d08f05031d391b35d4a216b4751b4f8fe35e1", "url": "https://github.com/apache/kafka/commit/d62d08f05031d391b35d4a216b4751b4f8fe35e1", "message": "replacement", "committedDate": "2020-03-31T05:29:55Z", "type": "commit"}, {"oid": "13311b522f4ef6a38f7f0e5bd327d81bbaac462d", "url": "https://github.com/apache/kafka/commit/13311b522f4ef6a38f7f0e5bd327d81bbaac462d", "message": "fix txn producer test", "committedDate": "2020-03-31T05:41:54Z", "type": "commit"}, {"oid": "13311b522f4ef6a38f7f0e5bd327d81bbaac462d", "url": "https://github.com/apache/kafka/commit/13311b522f4ef6a38f7f0e5bd327d81bbaac462d", "message": "fix txn producer test", "committedDate": "2020-03-31T05:41:54Z", "type": "forcePushed"}, {"oid": "a81cdc482bb8068dd2dd04cb70b2e54d32315d8e", "url": "https://github.com/apache/kafka/commit/a81cdc482bb8068dd2dd04cb70b2e54d32315d8e", "message": "comment revers", "committedDate": "2020-03-31T05:49:37Z", "type": "commit"}, {"oid": "098111e82755fa30e1a987a51805a760da011db3", "url": "https://github.com/apache/kafka/commit/098111e82755fa30e1a987a51805a760da011db3", "message": "fix tests", "committedDate": "2020-03-31T15:33:32Z", "type": "commit"}, {"oid": "098111e82755fa30e1a987a51805a760da011db3", "url": "https://github.com/apache/kafka/commit/098111e82755fa30e1a987a51805a760da011db3", "message": "fix tests", "committedDate": "2020-03-31T15:33:32Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4NTE2Nw==", "url": "https://github.com/apache/kafka/pull/8375#discussion_r401285167", "bodyText": "nit: move logContext to its own line", "author": "mjsax", "createdAt": "2020-04-01T00:10:08Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -510,18 +510,24 @@ private TransactionManager configureTransactionState(ProducerConfig config,\n \n         TransactionManager transactionManager = null;\n \n-        boolean userConfiguredIdempotence = config.originals().containsKey(ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG);\n-        boolean userConfiguredTransactions = config.originals().containsKey(ProducerConfig.TRANSACTIONAL_ID_CONFIG);\n+        final boolean userConfiguredIdempotence = config.originals().containsKey(ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG);\n+        final boolean userConfiguredTransactions = config.originals().containsKey(ProducerConfig.TRANSACTIONAL_ID_CONFIG);\n         if (userConfiguredTransactions && !userConfiguredIdempotence)\n             log.info(\"Overriding the default {} to true since {} is specified.\", ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG,\n                     ProducerConfig.TRANSACTIONAL_ID_CONFIG);\n \n         if (config.idempotenceEnabled()) {\n-            String transactionalId = config.getString(ProducerConfig.TRANSACTIONAL_ID_CONFIG);\n-            int transactionTimeoutMs = config.getInt(ProducerConfig.TRANSACTION_TIMEOUT_CONFIG);\n-            long retryBackoffMs = config.getLong(ProducerConfig.RETRY_BACKOFF_MS_CONFIG);\n-            transactionManager = new TransactionManager(logContext, transactionalId, transactionTimeoutMs,\n-                    retryBackoffMs, apiVersions);\n+            final String transactionalId = config.getString(ProducerConfig.TRANSACTIONAL_ID_CONFIG);\n+            final int transactionTimeoutMs = config.getInt(ProducerConfig.TRANSACTION_TIMEOUT_CONFIG);\n+            final long retryBackoffMs = config.getLong(ProducerConfig.RETRY_BACKOFF_MS_CONFIG);\n+            final boolean autoDowngradeTxnCommit = config.getBoolean(ProducerConfig.AUTO_DOWNGRADE_TXN_COMMIT);\n+            transactionManager = new TransactionManager(logContext,", "originalCommit": "098111e82755fa30e1a987a51805a760da011db3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0a4a0a2bf7f08a6f1fb7c1221118246f9180a36", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java b/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java\nindex fefc068367..9c35e78bff 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java\n\n@@ -521,7 +521,8 @@ public class KafkaProducer<K, V> implements Producer<K, V> {\n             final int transactionTimeoutMs = config.getInt(ProducerConfig.TRANSACTION_TIMEOUT_CONFIG);\n             final long retryBackoffMs = config.getLong(ProducerConfig.RETRY_BACKOFF_MS_CONFIG);\n             final boolean autoDowngradeTxnCommit = config.getBoolean(ProducerConfig.AUTO_DOWNGRADE_TXN_COMMIT);\n-            transactionManager = new TransactionManager(logContext,\n+            transactionManager = new TransactionManager(\n+                logContext,\n                 transactionalId,\n                 transactionTimeoutMs,\n                 retryBackoffMs,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4NTU4Mg==", "url": "https://github.com/apache/kafka/pull/8375#discussion_r401285582", "bodyText": "is [not] supported", "author": "mjsax", "createdAt": "2020-04-01T00:11:38Z", "path": "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java", "diffHunk": "@@ -258,6 +258,21 @@\n     public static final String SECURITY_PROVIDERS_CONFIG = SecurityConfig.SECURITY_PROVIDERS_CONFIG;\n     private static final String SECURITY_PROVIDERS_DOC = SecurityConfig.SECURITY_PROVIDERS_DOC;\n \n+    /**\n+     * <code>internal.auto.downgrade.txn.commit</code>\n+     * Whether or not the producer should automatically downgrade the transactional commit request when the new group metadata\n+     * feature is supported by the broker.", "originalCommit": "098111e82755fa30e1a987a51805a760da011db3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b0a4a0a2bf7f08a6f1fb7c1221118246f9180a36", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java b/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java\nindex 5b165a0073..cb74ede077 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java\n\n@@ -261,7 +261,7 @@ public class ProducerConfig extends AbstractConfig {\n     /**\n      * <code>internal.auto.downgrade.txn.commit</code>\n      * Whether or not the producer should automatically downgrade the transactional commit request when the new group metadata\n-     * feature is supported by the broker.\n+     * feature is not supported by the broker.\n      * <p>\n      * The purpose of this flag is to make Kafka Streams being capable of working with old brokers when applying this new API.\n      * Non Kafka Streams users who are building their own EOS applications should be careful playing around\n"}}, {"oid": "b0a4a0a2bf7f08a6f1fb7c1221118246f9180a36", "url": "https://github.com/apache/kafka/commit/b0a4a0a2bf7f08a6f1fb7c1221118246f9180a36", "message": "address comments", "committedDate": "2020-04-01T01:44:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU0Nzk0MA==", "url": "https://github.com/apache/kafka/pull/8375#discussion_r402547940", "bodyText": "groupInstanceId field should never be null, I think we should check against Optional.empty().", "author": "guozhangwang", "createdAt": "2020-04-02T19:08:21Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitRequest.java", "diffHunk": "@@ -78,13 +88,36 @@ public Builder(final String transactionalId,\n                             .setMemberId(memberId)\n                             .setGenerationId(generationId)\n                             .setGroupInstanceId(groupInstanceId.orElse(null));\n+            this.autoDowngrade = autoDowngrade;\n         }\n \n         @Override\n         public TxnOffsetCommitRequest build(short version) {\n+            if (version < 3 && groupMetadataSet()) {\n+                if (autoDowngrade) {\n+                    log.trace(\"Downgrade the request by resetting group metadata fields: \" +\n+                                  \"[member.id:{}, generation.id:{}, group.instance.id:{}], because broker \" +\n+                                  \"only supports TxnOffsetCommit version {}. Need \" +\n+                                  \"v3 or newer to enable this feature\",\n+                        data.memberId(), data.generationId(), data.groupInstanceId(), version);\n+\n+                    data.setGenerationId(JoinGroupRequest.UNKNOWN_GENERATION_ID)\n+                        .setMemberId(JoinGroupRequest.UNKNOWN_MEMBER_ID)\n+                        .setGroupInstanceId(null);\n+                } else {\n+                    throw new UnsupportedVersionException(\"Broker unexpectedly \" +\n+                        \"doesn't support group metadata commit API on version \" + version);\n+                }\n+            }\n             return new TxnOffsetCommitRequest(data, version);\n         }\n \n+        private boolean groupMetadataSet() {\n+            return !data.memberId().equals(JoinGroupRequest.UNKNOWN_MEMBER_ID) ||\n+                       data.generationId() != JoinGroupRequest.UNKNOWN_GENERATION_ID ||\n+                       data.groupInstanceId() != null;", "originalCommit": "098111e82755fa30e1a987a51805a760da011db3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}