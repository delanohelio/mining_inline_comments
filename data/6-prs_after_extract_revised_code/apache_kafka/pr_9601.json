{"pr_number": 9601, "pr_title": " KAFKA-10729: Bump remaining RPC's to use tagged fields.", "pr_createdAt": "2020-11-16T19:52:21Z", "pr_url": "https://github.com/apache/kafka/pull/9601", "timeline": [{"oid": "fb11509b1843999a53cfe653b6d80200315bdaf9", "url": "https://github.com/apache/kafka/commit/fb11509b1843999a53cfe653b6d80200315bdaf9", "message": "KAFKA-10729: Bump remaining RPC's to use tagged fields.\n\nAs a follow-up from KIP-482, this PR bumps the version for several\nRPC's to enable tagged fields via the flexible versioning mechanism.\n\nAdditionally, a new IBP version `KAFKA_2_7_IV3` is introduced to\nallow replication to take advantage of these new RPC versions for\nOffsetForLeaderEpoch and ListOffset.", "committedDate": "2020-11-17T01:08:53Z", "type": "commit"}, {"oid": "fb11509b1843999a53cfe653b6d80200315bdaf9", "url": "https://github.com/apache/kafka/commit/fb11509b1843999a53cfe653b6d80200315bdaf9", "message": "KAFKA-10729: Bump remaining RPC's to use tagged fields.\n\nAs a follow-up from KIP-482, this PR bumps the version for several\nRPC's to enable tagged fields via the flexible versioning mechanism.\n\nAdditionally, a new IBP version `KAFKA_2_7_IV3` is introduced to\nallow replication to take advantage of these new RPC versions for\nOffsetForLeaderEpoch and ListOffset.", "committedDate": "2020-11-17T01:08:53Z", "type": "forcePushed"}, {"oid": "b836a3d80d0156769a43f0d43d08b9564d0febf5", "url": "https://github.com/apache/kafka/commit/b836a3d80d0156769a43f0d43d08b9564d0febf5", "message": "Revert using flexibleVersions for non-generated RPC's\n\nOffsetForLeaderEpoch and Produce are not yet generated RPCs, but will be once #9401 and #9547 are merged.", "committedDate": "2020-11-18T18:59:22Z", "type": "commit"}, {"oid": "b836a3d80d0156769a43f0d43d08b9564d0febf5", "url": "https://github.com/apache/kafka/commit/b836a3d80d0156769a43f0d43d08b9564d0febf5", "message": "Revert using flexibleVersions for non-generated RPC's\n\nOffsetForLeaderEpoch and Produce are not yet generated RPCs, but will be once #9401 and #9547 are merged.", "committedDate": "2020-11-18T18:59:22Z", "type": "forcePushed"}, {"oid": "27c5b779148132bfb1896e6ce8f2dfeb02f20884", "url": "https://github.com/apache/kafka/commit/27c5b779148132bfb1896e6ce8f2dfeb02f20884", "message": "Merge branch 'trunk' of github.com:apache/kafka into list-offset-flex-versions", "committedDate": "2020-11-19T13:39:50Z", "type": "commit"}, {"oid": "38f27474b831bc3bfb0c8b35ec13ba7aea05551f", "url": "https://github.com/apache/kafka/commit/38f27474b831bc3bfb0c8b35ec13ba7aea05551f", "message": "Revert \"Revert using flexibleVersions for non-generated RPC's\"\n\nThis reverts commit b836a3d80d0156769a43f0d43d08b9564d0febf5.", "committedDate": "2020-11-19T14:35:12Z", "type": "commit"}, {"oid": "0dfa059abdb853f9770db6ceceee77fd64d15a48", "url": "https://github.com/apache/kafka/commit/0dfa059abdb853f9770db6ceceee77fd64d15a48", "message": "- Use KAFKA_2_8_IV0 for ListOffsets, WriteTxnMarkers and OffsetsForLeaderEpoch.\n\n- Allow using RecordBatch v2 for ProduceRequestV9.", "committedDate": "2020-11-20T19:06:50Z", "type": "commit"}, {"oid": "ccc6345b0326b3e72e11978b9e930bfc6d10f61e", "url": "https://github.com/apache/kafka/commit/ccc6345b0326b3e72e11978b9e930bfc6d10f61e", "message": "Fix the EdgeCaseRequestTest to take into account flexible versions.", "committedDate": "2020-11-20T21:14:51Z", "type": "commit"}, {"oid": "7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "url": "https://github.com/apache/kafka/commit/7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "message": "Fix tests and AlterReplicasLogDirsResponse.\n\n- NetworkClientTest.testThrottlingNotEnabledForConnectionToOlderBroker was relying on the\n  latest PRODUCE version being unchanged from version 5. Fix this by supplying the version\n  when constructing the throttled produce response.\n- Fixed AlterReplicaLogDirsResponse to take the version in the constructor instead of offering\n  an override which assumes that the most recent version is in use. This fixes the NetworkClientTest.\n- Fixed ReplicaFetcherThreadTest.shouldFetchLeaderEpochSecondTimeIfLeaderRepliesWithEpochNotKnownToFollower\n  to check that the lastUsedOffsetForLeaderEpochVersion is >= 3 instead of == 3. It seems this check is mostly\n  in place to ensure that a OffsetForLeaderEpoch response was sent.", "committedDate": "2020-11-29T21:27:17Z", "type": "commit"}, {"oid": "7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "url": "https://github.com/apache/kafka/commit/7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "message": "Fix tests and AlterReplicasLogDirsResponse.\n\n- NetworkClientTest.testThrottlingNotEnabledForConnectionToOlderBroker was relying on the\n  latest PRODUCE version being unchanged from version 5. Fix this by supplying the version\n  when constructing the throttled produce response.\n- Fixed AlterReplicaLogDirsResponse to take the version in the constructor instead of offering\n  an override which assumes that the most recent version is in use. This fixes the NetworkClientTest.\n- Fixed ReplicaFetcherThreadTest.shouldFetchLeaderEpochSecondTimeIfLeaderRepliesWithEpochNotKnownToFollower\n  to check that the lastUsedOffsetForLeaderEpochVersion is >= 3 instead of == 3. It seems this check is mostly\n  in place to ensure that a OffsetForLeaderEpoch response was sent.", "committedDate": "2020-11-29T21:27:17Z", "type": "forcePushed"}, {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76", "url": "https://github.com/apache/kafka/commit/6f0ed0421c676368e0238152a58ea2a29ca4fd76", "message": "Merge branch 'trunk' of github.com:apache/kafka into list-offset-flex-versions", "committedDate": "2020-11-30T21:40:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMjY0Ng==", "url": "https://github.com/apache/kafka/pull/9601#discussion_r533032646", "bodyText": "I wonder if we may as well make this the default case. Not sure we're getting much by forcing ourselves to update this logic after each bump. Maybe the range validation is still useful, but that could be done by using oldestVersion and latestVersion.", "author": "hachikuji", "createdAt": "2020-12-01T02:30:34Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java", "diffHunk": "@@ -286,6 +286,7 @@ public static byte requiredMagicForVersion(short produceRequestVersion) {\n             case 6:\n             case 7:\n             case 8:\n+            case 9:", "originalCommit": "6f0ed0421c676368e0238152a58ea2a29ca4fd76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java b/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java\nindex 791be51a95..bf1a38f9df 100644\n--- a/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java\n+++ b/clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java\n\n@@ -280,22 +284,8 @@ public class ProduceRequest extends AbstractRequest {\n             case 2:\n                 return RecordBatch.MAGIC_VALUE_V1;\n \n-            case 3:\n-            case 4:\n-            case 5:\n-            case 6:\n-            case 7:\n-            case 8:\n-            case 9:\n-                return RecordBatch.MAGIC_VALUE_V2;\n-\n             default:\n-                // raise an exception if the version has not been explicitly added to this method.\n-                // this ensures that we cannot accidentally use the wrong magic value if we forget\n-                // to update this method on a bump to the produce request version.\n-                throw new IllegalArgumentException(\"Magic value to use for produce request version \" +\n-                        produceRequestVersion + \" is not known\");\n+                return RecordBatch.MAGIC_VALUE_V2;\n         }\n     }\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMzkyNw==", "url": "https://github.com/apache/kafka/pull/9601#discussion_r533033927", "bodyText": "I think this is probably ok, but it is a little inconsistent with how we handle the versions for other inter-broker RPCs. Since we rely on the IBP, we always set the version explicitly in the caller, which means there is exactly one allowable version for the builder to use. See for example LeaderAndIsrRequest.Builder.", "author": "hachikuji", "createdAt": "2020-12-01T02:35:04Z", "path": "clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java", "diffHunk": "@@ -105,8 +105,8 @@ public int hashCode() {\n \n         public final WriteTxnMarkersRequestData data;\n \n-        public Builder(final List<TxnMarkerEntry> markers) {\n-            super(ApiKeys.WRITE_TXN_MARKERS);\n+        public Builder(final List<TxnMarkerEntry> markers, short latestAllowedVersion) {\n+            super(ApiKeys.WRITE_TXN_MARKERS, ApiKeys.WRITE_TXN_MARKERS.oldestVersion(), latestAllowedVersion);", "originalCommit": "6f0ed0421c676368e0238152a58ea2a29ca4fd76", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java b/clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java\nindex cbb75811b7..88bde08dc4 100644\n--- a/clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java\n+++ b/clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java\n\n@@ -105,8 +105,8 @@ public class WriteTxnMarkersRequest extends AbstractRequest {\n \n         public final WriteTxnMarkersRequestData data;\n \n-        public Builder(final List<TxnMarkerEntry> markers, short latestAllowedVersion) {\n-            super(ApiKeys.WRITE_TXN_MARKERS, ApiKeys.WRITE_TXN_MARKERS.oldestVersion(), latestAllowedVersion);\n+        public Builder(short version, final List<TxnMarkerEntry> markers) {\n+            super(ApiKeys.WRITE_TXN_MARKERS, version);\n             List<WritableTxnMarker> dataMarkers = new ArrayList<>();\n             for (TxnMarkerEntry marker : markers) {\n                 final Map<String, WritableTxnMarkerTopic> topicMap = new HashMap<>();\n"}}, {"oid": "1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "url": "https://github.com/apache/kafka/commit/1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "message": "Address PR comments:\n- Make the most recent record batch version the default case when selecting a\n  record batch version. Check that the version is within the existing version bounds.\n- Force a specific version in the WriteTxnMarkersRequest constructor to match other\n  requests which utilize the IBP like LeaderAndISR.", "committedDate": "2020-12-01T17:42:48Z", "type": "commit"}, {"oid": "fb9fbe898ab08315c6e328c215c72da868badab4", "url": "https://github.com/apache/kafka/commit/fb9fbe898ab08315c6e328c215c72da868badab4", "message": "Use LIST_OFFSET.lastestVersion() instead of hardcoding the latest version in\nthe RequestResponseTest", "committedDate": "2020-12-01T20:27:21Z", "type": "commit"}]}