{"pr_number": 8730, "pr_title": "KAFKA-10048: Possible data gap for a consumer after a failover when u\u2026", "pr_createdAt": "2020-05-27T06:58:08Z", "pr_url": "https://github.com/apache/kafka/pull/8730", "timeline": [{"oid": "17f67504bd3a6773d2c266f1755c6c4993222f1d", "url": "https://github.com/apache/kafka/commit/17f67504bd3a6773d2c266f1755c6c4993222f1d", "message": "KAFKA-10048: Possible data gap for a consumer after a failover when using MM2\n\nEnsure that the MM2 checkpoint mirror task replicates consumer offsets even when they are\nzero to avoid issues with consumers after failovers.\n\nAuthor: Andre Araujo <asdaraujo@gmail.com>", "committedDate": "2020-05-29T21:55:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNDExMQ==", "url": "https://github.com/apache/kafka/pull/8730#discussion_r435424111", "bodyText": "Can downstream offset be negative?", "author": "heritamas", "createdAt": "2020-06-04T17:24:07Z", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java", "diffHunk": "@@ -132,7 +132,7 @@ public String version() {\n             return listConsumerGroupOffsets(group).entrySet().stream()\n                 .filter(x -> shouldCheckpointTopic(x.getKey().topic()))\n                 .map(x -> checkpoint(group, x.getKey(), x.getValue()))\n-                .filter(x -> x.downstreamOffset() > 0)  // ignore offsets we cannot translate accurately\n+                .filter(x -> x.downstreamOffset() >= 0)  // ignore offsets we cannot translate accurately", "originalCommit": "17f67504bd3a6773d2c266f1755c6c4993222f1d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2OTMxMQ==", "url": "https://github.com/apache/kafka/pull/8730#discussion_r447769311", "bodyText": "nope, that's not possible", "author": "ryannedolan", "createdAt": "2020-06-30T15:21:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNDExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ0MDUxMQ==", "url": "https://github.com/apache/kafka/pull/8730#discussion_r449440511", "bodyText": "Then, this filter matches everything, doesn't it?", "author": "heritamas", "createdAt": "2020-07-03T08:07:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNDExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUzNjMxOA==", "url": "https://github.com/apache/kafka/pull/8730#discussion_r459536318", "bodyText": "@ryannedolan @heritamas If you guys think this is safe enough I can remove that filter. But it doesn't hurt to leave it there just in case a rogue negative offset comes through for whatever reason/bug... Please let me know what you think.", "author": "asdaraujo", "createdAt": "2020-07-23T15:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNDExMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5NzAwNw==", "url": "https://github.com/apache/kafka/pull/8730#discussion_r460197007", "bodyText": "Yes, does not hurt to leave it. Just for sure.", "author": "heritamas", "createdAt": "2020-07-24T17:40:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNDExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9e73f16151a7901e7af853b698cb3b7df67ab4f5", "chunk": "diff --git a/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java b/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java\nindex f913384786..8e9e764e30 100644\n--- a/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java\n+++ b/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java\n\n@@ -126,13 +149,13 @@ public class MirrorCheckpointTask extends SourceTask {\n         }\n     }\n \n-    private List<SourceRecord> checkpointsForGroup(String group) throws InterruptedException {\n+\n+    private List<SourceRecord> sourceRecordsForGroup(String group) throws InterruptedException {\n         try {\n             long timestamp = System.currentTimeMillis();\n-            return listConsumerGroupOffsets(group).entrySet().stream()\n-                .filter(x -> shouldCheckpointTopic(x.getKey().topic()))\n-                .map(x -> checkpoint(group, x.getKey(), x.getValue()))\n-                .filter(x -> x.downstreamOffset() >= 0)  // ignore offsets we cannot translate accurately\n+            List<Checkpoint> checkpoints = checkpointsForGroup(group);\n+            checkpointsPerConsumerGroup.put(group, checkpoints);\n+            return checkpoints.stream()\n                 .map(x -> checkpointRecord(x, timestamp))\n                 .collect(Collectors.toList());\n         } catch (ExecutionException e) {\n"}}, {"oid": "9e73f16151a7901e7af853b698cb3b7df67ab4f5", "url": "https://github.com/apache/kafka/commit/9e73f16151a7901e7af853b698cb3b7df67ab4f5", "message": "KAFKA-10048: Possible data gap for a consumer after a failover when using MM2\n\nEnsure that the MM2 checkpoint mirror task replicates consumer offsets even when they are\nzero to avoid issues with consumers after failovers.\n\nAuthor: Andre Araujo <asdaraujo@gmail.com>", "committedDate": "2020-10-01T17:18:55Z", "type": "commit"}, {"oid": "9e73f16151a7901e7af853b698cb3b7df67ab4f5", "url": "https://github.com/apache/kafka/commit/9e73f16151a7901e7af853b698cb3b7df67ab4f5", "message": "KAFKA-10048: Possible data gap for a consumer after a failover when using MM2\n\nEnsure that the MM2 checkpoint mirror task replicates consumer offsets even when they are\nzero to avoid issues with consumers after failovers.\n\nAuthor: Andre Araujo <asdaraujo@gmail.com>", "committedDate": "2020-10-01T17:18:55Z", "type": "forcePushed"}]}