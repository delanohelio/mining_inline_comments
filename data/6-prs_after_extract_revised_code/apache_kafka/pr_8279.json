{"pr_number": 8279, "pr_title": "KAFKA-9706: Handle null keys/values in Flatten transformation", "pr_createdAt": "2020-03-11T21:26:46Z", "pr_url": "https://github.com/apache/kafka/pull/8279", "timeline": [{"oid": "58d05834aefccc8b22d1e4eec82937c4b17b5950", "url": "https://github.com/apache/kafka/commit/58d05834aefccc8b22d1e4eec82937c4b17b5950", "message": "KAFKA-9706: Handle null keys/values in Flatten transformation\n\n* Fix DataException thrown when handling tombstone events with null value\n* Passes through original record when finding a tombstone record\n* Add tests for schema and schemaless data\n\nSigned-off-by: Greg Harris <gregh@confluent.io>", "committedDate": "2020-03-11T21:25:33Z", "type": "commit"}, {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "url": "https://github.com/apache/kafka/commit/94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "message": "Inline misleadingly named isTombstoneRecord function\n\nSigned-off-by: Greg Harris <gregh@confluent.io>", "committedDate": "2020-03-25T19:48:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDA2MQ==", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370061", "bodyText": "nit: remove blank line", "author": "kkonstantine", "createdAt": "2020-03-30T17:33:18Z", "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+", "originalCommit": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM5MTA5OA==", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400391098", "bodyText": "Leaving some blank lines to highlight semantic grouping between code blocks is reasonable, but 1 empty line per line of code might be excessive.", "author": "kkonstantine", "createdAt": "2020-03-30T18:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "chunk": "diff --git a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\nindex fbb4d9bc31..d044338f5e 100644\n--- a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n+++ b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n\n@@ -303,8 +303,7 @@ public class FlattenTest {\n         xformValue.configure(Collections.<String, String>emptyMap());\n \n         final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n-            null, null);\n-\n+                null, null);\n         final SourceRecord transformedRecord = xformValue.apply(record);\n \n         assertEquals(null, transformedRecord.value());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDEzNg==", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370136", "bodyText": "nit: remove blank line", "author": "kkonstantine", "createdAt": "2020-03-30T17:33:23Z", "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+\n+        final SourceRecord transformedRecord = xformValue.apply(record);\n+\n+        assertEquals(null, transformedRecord.value());\n+        assertEquals(null, transformedRecord.valueSchema());\n+    }\n+\n+    @Test\n+    public void tombstoneEventWithSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final Schema simpleStructSchema = SchemaBuilder.struct().name(\"name\").version(1).doc(\"doc\").field(\"magic\", Schema.OPTIONAL_INT64_SCHEMA).build();\n+", "originalCommit": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "chunk": "diff --git a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\nindex fbb4d9bc31..d044338f5e 100644\n--- a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n+++ b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n\n@@ -303,8 +303,7 @@ public class FlattenTest {\n         xformValue.configure(Collections.<String, String>emptyMap());\n \n         final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n-            null, null);\n-\n+                null, null);\n         final SourceRecord transformedRecord = xformValue.apply(record);\n \n         assertEquals(null, transformedRecord.value());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDE5MQ==", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370191", "bodyText": "nit: remove blank line", "author": "kkonstantine", "createdAt": "2020-03-30T17:33:27Z", "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+\n+        final SourceRecord transformedRecord = xformValue.apply(record);\n+\n+        assertEquals(null, transformedRecord.value());\n+        assertEquals(null, transformedRecord.valueSchema());\n+    }\n+\n+    @Test\n+    public void tombstoneEventWithSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final Schema simpleStructSchema = SchemaBuilder.struct().name(\"name\").version(1).doc(\"doc\").field(\"magic\", Schema.OPTIONAL_INT64_SCHEMA).build();\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            simpleStructSchema, null);\n+", "originalCommit": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "chunk": "diff --git a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\nindex fbb4d9bc31..d044338f5e 100644\n--- a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n+++ b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n\n@@ -303,8 +303,7 @@ public class FlattenTest {\n         xformValue.configure(Collections.<String, String>emptyMap());\n \n         final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n-            null, null);\n-\n+                null, null);\n         final SourceRecord transformedRecord = xformValue.apply(record);\n \n         assertEquals(null, transformedRecord.value());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTI5MQ==", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400389291", "bodyText": "in AK tab space is equal to 4 single spaces. We need two tabs here. Checkstyle might not complain because it's tests. But line 139 has an example of correct indentation.", "author": "kkonstantine", "createdAt": "2020-03-30T18:03:47Z", "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);", "originalCommit": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "chunk": "diff --git a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\nindex fbb4d9bc31..d044338f5e 100644\n--- a/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n+++ b/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java\n\n@@ -303,8 +303,7 @@ public class FlattenTest {\n         xformValue.configure(Collections.<String, String>emptyMap());\n \n         final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n-            null, null);\n-\n+                null, null);\n         final SourceRecord transformedRecord = xformValue.apply(record);\n \n         assertEquals(null, transformedRecord.value());\n"}}, {"oid": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "url": "https://github.com/apache/kafka/commit/a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "message": "Fix whitespace and indentation\n\nSigned-off-by: Greg Harris <gregh@confluent.io>", "committedDate": "2020-03-30T18:47:00Z", "type": "commit"}]}