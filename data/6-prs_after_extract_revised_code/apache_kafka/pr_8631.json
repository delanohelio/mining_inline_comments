{"pr_number": 8631, "pr_title": "MINOR: improve tests for TopologyTestDriver", "pr_createdAt": "2020-05-08T04:57:14Z", "pr_url": "https://github.com/apache/kafka/pull/8631", "timeline": [{"oid": "b1cb090c181718a48f502d66a54f5378e4ce5702", "url": "https://github.com/apache/kafka/commit/b1cb090c181718a48f502d66a54f5378e4ce5702", "message": "MINOR: improve tests for TopologyTestDriver", "committedDate": "2020-05-08T04:55:01Z", "type": "commit"}, {"oid": "b94b59e26b27c4290ebb44f67f0034cd8f52db71", "url": "https://github.com/apache/kafka/commit/b94b59e26b27c4290ebb44f67f0034cd8f52db71", "message": "minor", "committedDate": "2020-05-08T05:04:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjMyNg==", "url": "https://github.com/apache/kafka/pull/8631#discussion_r423586326", "bodyText": "Would this test still pass, even without the global table?", "author": "big-andy-coates", "createdAt": "2020-05-12T09:16:11Z", "path": "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java", "diffHunk": "@@ -467,23 +471,62 @@ public void shouldThrowForUnknownTopicDeprecated() {\n     }\n \n     @Test\n-    public void shouldGetSinkTopicNames() {\n+    public void shouldCaptureSinkTopicNamesIfWrittenInto() {\n         testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n \n-        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n+        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n         assertThat(testDriver.producedTopicNames(), hasItem(SINK_TOPIC_1));\n     }\n \n     @Test\n-    public void shouldGetInternalTopicNames() {\n-        testDriver = new TopologyTestDriver(setupTopologyWithInternalTopic(), config);\n+    public void shouldCaptureInternalTopicNamesIfWrittenInto() {\n+        testDriver = new TopologyTestDriver(\n+            setupTopologyWithInternalTopic(\"table1\", \"table2\", \"join\"),\n+            config\n+        );\n+\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n         pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\"\n+            ))\n+        );\n+\n+        pipeRecord(SOURCE_TOPIC_2, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table2-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-registration-topic\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-store-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-response-topic\"\n+            ))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldCaptureGlobalTopicNameIfWrittenInto() {", "originalCommit": "b94b59e26b27c4290ebb44f67f0034cd8f52db71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2MjQ4MQ==", "url": "https://github.com/apache/kafka/pull/8631#discussion_r424062481", "bodyText": "Yes, the SOURCE_TOPCI_1 should be added to the set of produced topics in any case. It's more like a \"reverse\" check, i.e., that it does not fail with a to() operation that reuses the \"global topic name\".\nI was not 100% sure if this test is strictly necessary, but thought it can't hurt either.", "author": "mjsax", "createdAt": "2020-05-12T22:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjMyNg=="}], "type": "inlineReview", "revised_code": null}]}