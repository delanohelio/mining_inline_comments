{"pr_number": 8190, "pr_title": "KAFKA-9623: Keep polling until the task manager is no longer rebalancing in progress", "pr_createdAt": "2020-02-28T01:32:39Z", "pr_url": "https://github.com/apache/kafka/pull/8190", "timeline": [{"oid": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc", "url": "https://github.com/apache/kafka/commit/fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc", "message": "add unit test", "committedDate": "2020-02-28T01:28:24Z", "type": "commit"}, {"oid": "84791c9a2da624b9d0c9dcffef2d0a4eb5e6d560", "url": "https://github.com/apache/kafka/commit/84791c9a2da624b9d0c9dcffef2d0a4eb5e6d560", "message": "revert changes", "committedDate": "2020-02-28T01:33:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng==", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385465166", "bodyText": "This is the actual fix.", "author": "guozhangwang", "createdAt": "2020-02-28T01:32:51Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -744,7 +744,9 @@ public void run() {\n     private void runLoop() {\n         subscribeConsumer();\n \n-        while (isRunning()) {\n+        // if the thread is still in the middle of a rebalance, we should keep polling\n+        // until the rebalance is completed before we close and commit the tasks\n+        while (isRunning() || taskManager.isRebalanceInProgress()) {", "originalCommit": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNjM2NA==", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385516364", "bodyText": "We need to avoid adding these new records to the PartitionGroup down on line 825 or else they'll be included in the offsets committed", "author": "ableegoldman", "createdAt": "2020-02-28T05:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNjg1Nw==", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385516857", "bodyText": "If we need to poll more than once to complete the rebalance for example", "author": "ableegoldman", "createdAt": "2020-02-28T05:43:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTMyNQ==", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385465325", "bodyText": "We need to put this out of the loop since if we get an error code, we should still set the flag so that thread can complete shutdown.", "author": "guozhangwang", "createdAt": "2020-02-28T01:33:19Z", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -50,10 +50,10 @@ public void onPartitionsAssigned(final Collection<TopicPartition> partitions) {\n             log.error(\"Received error code {} - shutdown\", streamThread.getAssignmentErrorCode());\n             streamThread.shutdown();\n         } else {\n-            taskManager.handleRebalanceComplete();\n-\n             streamThread.setState(State.PARTITIONS_ASSIGNED);\n         }\n+\n+        taskManager.handleRebalanceComplete();", "originalCommit": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}