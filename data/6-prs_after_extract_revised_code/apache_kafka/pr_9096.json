{"pr_number": 9096, "pr_title": "MINOR: Add comments to constrainedAssign and generalAssign method", "pr_createdAt": "2020-07-29T06:53:30Z", "pr_url": "https://github.com/apache/kafka/pull/9096", "timeline": [{"oid": "f0e974c55208774e31a8fe3e9ddd8c15d3edf6b6", "url": "https://github.com/apache/kafka/commit/f0e974c55208774e31a8fe3e9ddd8c15d3edf6b6", "message": "add generalAssign and constrainedAssign algorithm description and high level executing steps", "committedDate": "2020-06-04T07:23:01Z", "type": "commit"}, {"oid": "741df127fc0795878814fcc0244e590c724acea6", "url": "https://github.com/apache/kafka/commit/741df127fc0795878814fcc0244e590c724acea6", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into addCommentsToAssign", "committedDate": "2020-07-29T03:41:44Z", "type": "commit"}, {"oid": "1140f60ce0ba602281a69a43cf1d2c74007d7bc7", "url": "https://github.com/apache/kafka/commit/1140f60ce0ba602281a69a43cf1d2c74007d7bc7", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into addCommentsToAssign", "committedDate": "2020-07-30T06:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDg3OA==", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463260878", "bodyText": "nit: I don't think we need steps here, which makes it hard to squeeze in more comments later.", "author": "abbccdda", "createdAt": "2020-07-30T20:45:42Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "diffHunk": "@@ -163,6 +183,7 @@ private boolean allSubscriptionsEqual(Set<String> allTopics,\n         Map<String, List<TopicPartition>> assignment = new HashMap<>(\n             consumerToOwnedPartitions.keySet().stream().collect(Collectors.toMap(c -> c, c -> new ArrayList<>(minQuota))));\n \n+        // step 1: Reassign as many previously owned partitions as possible", "originalCommit": "741df127fc0795878814fcc0244e590c724acea6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM3MTk3OQ==", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463371979", "bodyText": "Updated. Thanks @abbccdda .", "author": "showuon", "createdAt": "2020-07-31T02:24:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDg3OA=="}], "type": "inlineReview", "revised_code": {"commit": "005d64c45a4f42b14f3e3f66d7fdfd1d886732fe", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\nindex cc46e1b7f2..2da63807bc 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\n\n@@ -183,7 +183,7 @@ public abstract class AbstractStickyAssignor extends AbstractPartitionAssignor {\n         Map<String, List<TopicPartition>> assignment = new HashMap<>(\n             consumerToOwnedPartitions.keySet().stream().collect(Collectors.toMap(c -> c, c -> new ArrayList<>(minQuota))));\n \n-        // step 1: Reassign as many previously owned partitions as possible\n+        // Reassign as many previously owned partitions as possible\n         for (Map.Entry<String, List<TopicPartition>> consumerEntry : consumerToOwnedPartitions.entrySet()) {\n             String consumer = consumerEntry.getKey();\n             List<TopicPartition> ownedPartitions = consumerEntry.getValue();\n"}}, {"oid": "005d64c45a4f42b14f3e3f66d7fdfd1d886732fe", "url": "https://github.com/apache/kafka/commit/005d64c45a4f42b14f3e3f66d7fdfd1d886732fe", "message": "address reviewer's conmment to remove step word", "committedDate": "2020-07-31T02:23:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MjEzOQ==", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463752139", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * 1. Reassign as many previously owned partitions as possible\n          \n          \n            \n                 * 1. Reassign as many previously owned partitions as possible, up to the maxQuota", "author": "ableegoldman", "createdAt": "2020-07-31T17:58:44Z", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "diffHunk": "@@ -144,15 +144,35 @@ private boolean allSubscriptionsEqual(Set<String> allTopics,\n         return true;\n     }\n \n+\n+    /**\n+     * This constrainedAssign optimizes the assignment algorithm when all consumers were subscribed to same set of topics.\n+     * The method includes the following steps:\n+     *\n+     * 1. Reassign as many previously owned partitions as possible", "originalCommit": "005d64c45a4f42b14f3e3f66d7fdfd1d886732fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d4d5d7281cb59f441a507ecce1d777910c645809", "chunk": "diff --git a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\nindex 2da63807bc..7e42e44a7d 100644\n--- a/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\n+++ b/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java\n\n@@ -149,7 +149,7 @@ public abstract class AbstractStickyAssignor extends AbstractPartitionAssignor {\n      * This constrainedAssign optimizes the assignment algorithm when all consumers were subscribed to same set of topics.\n      * The method includes the following steps:\n      *\n-     * 1. Reassign as many previously owned partitions as possible\n+     * 1. Reassign as many previously owned partitions as possible, up to the maxQuota\n      * 2. Fill remaining members up to minQuota\n      * 3. If we ran out of unassigned partitions before filling all consumers, we need to start stealing partitions\n      *    from the over-full consumers at max capacity\n"}}, {"oid": "d4d5d7281cb59f441a507ecce1d777910c645809", "url": "https://github.com/apache/kafka/commit/d4d5d7281cb59f441a507ecce1d777910c645809", "message": "address reviewer's comments\n\nCo-authored-by: A. Sophie Blee-Goldman <ableegoldman@gmail.com>", "committedDate": "2020-08-03T03:28:59Z", "type": "commit"}]}