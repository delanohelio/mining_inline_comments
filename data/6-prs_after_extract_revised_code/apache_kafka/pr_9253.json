{"pr_number": 9253, "pr_title": "KAFKA-10366 & KAFKA-9649: Implement KIP-659 to allow TimeWindowedDeserializer and TimeWindowedSerde to handle window size", "pr_createdAt": "2020-09-04T18:44:38Z", "pr_url": "https://github.com/apache/kafka/pull/9253", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA1NjAwMA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562056000", "bodyText": "The console consumer made this check necessary - if there's a simpler way to do this lmk", "author": "lct45", "createdAt": "2021-01-21T17:16:13Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -61,6 +61,21 @@ public Long getWindowSize() {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void configure(final Map<String, ?> configs, final boolean isKey) {\n+        //check if the config is set and the window size is already set from the constructor\n+        final Long configWindowSize;\n+        if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {", "originalCommit": "2f91dafc47c61e5688a727ec9bc55cb16557dc84", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b367798b2a111a065632113eb82dfae5f02e00e", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\nindex a2b812ea3f..92e666560f 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\n\n@@ -61,7 +61,7 @@ public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void configure(final Map<String, ?> configs, final boolean isKey) {\n-        //check if the config is set and the window size is already set from the constructor\n+        //check to see if the window size config is set and the window size is already set from the constructor\n         final Long configWindowSize;\n         if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {\n             configWindowSize = Long.parseLong((String) configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG));\n"}}, {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e", "url": "https://github.com/apache/kafka/commit/2b367798b2a111a065632113eb82dfae5f02e00e", "message": "adding more testing", "committedDate": "2021-01-21T17:19:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562146785", "bodyText": "Do you want to change this from Long.MAX_VALUE as well?", "author": "wcarlson5", "createdAt": "2021-01-21T19:36:03Z", "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -33,22 +33,22 @@\n  */\n public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n \n-    private final Long windowSize;\n+    private Long windowSize;\n     private boolean isChangelogTopic;\n \n     private Deserializer<T> inner;\n-    \n+\n     // Default constructor needed by Kafka\n     public TimeWindowedDeserializer() {\n-        this(null, Long.MAX_VALUE);\n+        this(null, null);\n     }\n \n-    // TODO: fix this part as last bits of KAFKA-4468\n+    @Deprecated\n     public TimeWindowedDeserializer(final Deserializer<T> inner) {\n         this(inner, Long.MAX_VALUE);", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1NjAxOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562156019", "bodyText": "I thought about it but figured since it's deprecated anyway and we want to keep backwards compatibility I would leave it. WDYT?", "author": "lct45", "createdAt": "2021-01-21T19:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMzY5OA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562823698", "bodyText": "You are probably right since we are deprecating it. But I don't have a strong opinion on this either way", "author": "wcarlson5", "createdAt": "2021-01-22T18:23:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "chunk": "diff --git a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\nindex 92e666560f..c6ae2ec54e 100644\n--- a/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\n+++ b/streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java\n\n@@ -37,18 +37,18 @@ public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n     private boolean isChangelogTopic;\n \n     private Deserializer<T> inner;\n-\n+    \n     // Default constructor needed by Kafka\n     public TimeWindowedDeserializer() {\n-        this(null, null);\n+        this(null, Long.MAX_VALUE);\n     }\n \n-    @Deprecated\n+    // TODO: fix this part as last bits of KAFKA-4468\n     public TimeWindowedDeserializer(final Deserializer<T> inner) {\n         this(inner, Long.MAX_VALUE);\n     }\n \n-    public TimeWindowedDeserializer(final Deserializer<T> inner, final Long windowSize) {\n+    public TimeWindowedDeserializer(final Deserializer<T> inner, final long windowSize) {\n         this.inner = inner;\n         this.windowSize = windowSize;\n         this.isChangelogTopic = false;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562149217", "bodyText": "I don't think we should get rid of the generics unless we have to", "author": "wcarlson5", "createdAt": "2021-01-21T19:40:25Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -327,7 +329,7 @@ public void shouldAggregateWindowed() throws Exception {\n         startStreams();\n \n         final List<KeyValueTimestamp<Windowed<String>, Integer>> windowedMessages = receiveMessagesWithTimestamp(\n-            new TimeWindowedDeserializer<>(),", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY5ODczMA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562698730", "bodyText": "The window size has to be set either in the constructor or in the configs so if we use the generics we have to use the configs, but the general idea was to push users to do the constructor over the configs. Also in this scenario, I wanted to confirm that it would work fine without configs", "author": "lct45", "createdAt": "2021-01-22T15:13:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMjcwOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562822709", "bodyText": "That is fine. but I think It should be like new TimeWindowedDeserializer<String>(windowedSerde.deserializer(), 500L) if that complies. We want to keep the type checking", "author": "wcarlson5", "createdAt": "2021-01-22T18:21:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\nindex 2a6e580775..0ba773f2b7 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\n\n@@ -329,7 +332,7 @@ public class KStreamAggregationIntegrationTest {\n         startStreams();\n \n         final List<KeyValueTimestamp<Windowed<String>, Integer>> windowedMessages = receiveMessagesWithTimestamp(\n-            new TimeWindowedDeserializer(windowedSerde.deserializer(), 500L),\n+            new TimeWindowedDeserializer<>(),\n             new IntegerDeserializer(),\n             String.class,\n             15);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150019", "bodyText": "Why don't you use timeDifference like you did below?", "author": "wcarlson5", "createdAt": "2021-01-21T19:41:58Z", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -235,25 +235,27 @@ public void shouldReduceWindowed() throws Exception {\n                 .thenComparing(KeyValueTimestamp::value);\n \n         windowedOutput.sort(comparator);\n-        final long firstBatchWindow = firstBatchTimestamp / 500 * 500;\n-        final long secondBatchWindow = secondBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowStart = firstBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowEnd = firstBatchWindowStart + 500;", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjY5OTkzOQ==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562699939", "bodyText": "These are time windows so it would be windowSize, but I didn't write this test, just updated it to fit with the updated deserializer. I can switch it out to windowSize if you think it would help with readability, WYDT?", "author": "lct45", "createdAt": "2021-01-22T15:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMTE3NA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562821174", "bodyText": "It would probably be better practice but it's not necessary to fix. So if you feel like it", "author": "wcarlson5", "createdAt": "2021-01-22T18:18:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java b/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\nindex 2a6e580775..0ba773f2b7 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java\n\n@@ -240,6 +242,7 @@ public class KStreamAggregationIntegrationTest {\n         final long secondBatchWindowStart = secondBatchTimestamp / 500 * 500;\n         final long secondBatchWindowEnd = secondBatchWindowStart + 500;\n \n+\n         final List<KeyValueTimestamp<Windowed<String>, String>> expectResult = Arrays.asList(\n                 new KeyValueTimestamp<>(new Windowed<>(\"A\", new TimeWindow(firstBatchWindowStart, firstBatchWindowEnd)), \"A\", firstBatchTimestamp),\n                 new KeyValueTimestamp<>(new Windowed<>(\"A\", new TimeWindow(secondBatchWindowStart, secondBatchWindowEnd)), \"A\", secondBatchTimestamp),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDc0Mg==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150742", "bodyText": "Is there some sort of check you can verify here?", "author": "wcarlson5", "createdAt": "2021-01-21T19:43:18Z", "path": "streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java", "diffHunk": "@@ -56,4 +57,23 @@ public void testWindowedValueDeserializerNoArgConstructors() {\n         assertNotNull(\"Inner deserializer should be not null\", inner);\n         assertTrue(\"Inner deserializer type should be ByteArrayDeserializer\", inner instanceof ByteArrayDeserializer);\n     }\n+\n+    @Test\n+    public void setWindowSizeThroughConfigs() {\n+        props.put(StreamsConfig.WINDOW_SIZE_MS_CONFIG, \"500\");\n+        final TimeWindowedDeserializer<?> deserializer = new TimeWindowedDeserializer<>();\n+        deserializer.configure(props, false);", "originalCommit": "2b367798b2a111a065632113eb82dfae5f02e00e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjcwOTE4NA==", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562709184", "bodyText": "Ah yeah, good catch", "author": "lct45", "createdAt": "2021-01-22T15:27:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "chunk": "diff --git a/streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java b/streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java\nindex 8afd3d0bed..9eaa5209e6 100644\n--- a/streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java\n+++ b/streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java\n\n@@ -57,23 +56,4 @@ public class TimeWindowedDeserializerTest {\n         assertNotNull(\"Inner deserializer should be not null\", inner);\n         assertTrue(\"Inner deserializer type should be ByteArrayDeserializer\", inner instanceof ByteArrayDeserializer);\n     }\n-\n-    @Test\n-    public void setWindowSizeThroughConfigs() {\n-        props.put(StreamsConfig.WINDOW_SIZE_MS_CONFIG, \"500\");\n-        final TimeWindowedDeserializer<?> deserializer = new TimeWindowedDeserializer<>();\n-        deserializer.configure(props, false);\n-    }\n-\n-    @Test\n-    public void shouldThrowErrorIfWindowSizeSetInConfigsAndConstructor() {\n-        props.put(StreamsConfig.WINDOW_SIZE_MS_CONFIG, \"500\");\n-        assertThrows(IllegalArgumentException.class, () -> timeWindowedDeserializer.configure(props, false));\n-    }\n-\n-    @Test\n-    public void shouldThrowErrorIfWindowSizeIsNotSet() {\n-        final TimeWindowedDeserializer<?> deserializer = new TimeWindowedDeserializer<>();\n-        assertThrows(IllegalArgumentException.class, () -> deserializer.configure(props, false));\n-    }\n }\n"}}, {"oid": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "url": "https://github.com/apache/kafka/commit/ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "message": "update deserializer for windows", "committedDate": "2021-01-26T21:11:42Z", "type": "commit"}, {"oid": "eaf0557593888894c0ef2d27253b9f1889f03604", "url": "https://github.com/apache/kafka/commit/eaf0557593888894c0ef2d27253b9f1889f03604", "message": "streamlined added configs", "committedDate": "2021-01-26T21:11:42Z", "type": "commit"}, {"oid": "4798fa101012e040d6ac6bcb0072a66a20753233", "url": "https://github.com/apache/kafka/commit/4798fa101012e040d6ac6bcb0072a66a20753233", "message": "KIP discussion updates", "committedDate": "2021-01-26T21:11:43Z", "type": "commit"}, {"oid": "82902cdb3662df4b236fedc025e24c59cfa7982b", "url": "https://github.com/apache/kafka/commit/82902cdb3662df4b236fedc025e24c59cfa7982b", "message": "semantic clean up", "committedDate": "2021-01-26T21:12:29Z", "type": "commit"}, {"oid": "3b8591a4993f5ca420b3a12736324de31b471946", "url": "https://github.com/apache/kafka/commit/3b8591a4993f5ca420b3a12736324de31b471946", "message": "semantic clean up", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "f95603bb9c8691f335f7f1e73ece49fecbffbbda", "url": "https://github.com/apache/kafka/commit/f95603bb9c8691f335f7f1e73ece49fecbffbbda", "message": "Scala updates for configs", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "4a67527fc4fafa0e420b24073e56e2711705a600", "url": "https://github.com/apache/kafka/commit/4a67527fc4fafa0e420b24073e56e2711705a600", "message": "Updated implementation", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "ad47398cbe82a0da81b27016226dd2fb8045774a", "url": "https://github.com/apache/kafka/commit/ad47398cbe82a0da81b27016226dd2fb8045774a", "message": "adding more testing", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "93b4564bbfac04a014568eed45cf5e8ad17c27ef", "url": "https://github.com/apache/kafka/commit/93b4564bbfac04a014568eed45cf5e8ad17c27ef", "message": "walkers comments", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "711315ad40e3fb5d379a19a11de90815af7b900f", "url": "https://github.com/apache/kafka/commit/711315ad40e3fb5d379a19a11de90815af7b900f", "message": "scala fixes", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "dfa9b0b6a136297f5ba675d24994b85db5a4a521", "url": "https://github.com/apache/kafka/commit/dfa9b0b6a136297f5ba675d24994b85db5a4a521", "message": "tetsting fix", "committedDate": "2021-01-26T21:12:30Z", "type": "commit"}, {"oid": "a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "url": "https://github.com/apache/kafka/commit/a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "message": "scala fix", "committedDate": "2021-01-26T22:06:19Z", "type": "forcePushed"}, {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "message": "scala fix", "committedDate": "2021-01-26T22:07:57Z", "type": "commit"}, {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "message": "scala fix", "committedDate": "2021-01-26T22:07:57Z", "type": "forcePushed"}, {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "message": "running scala test", "committedDate": "2021-01-26T23:07:29Z", "type": "commit"}, {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "message": "running scala test", "committedDate": "2021-01-26T23:07:29Z", "type": "forcePushed"}, {"oid": "1d7ce1befa505301accad739b8e91c7213700f9d", "url": "https://github.com/apache/kafka/commit/1d7ce1befa505301accad739b8e91c7213700f9d", "message": "Deleting scala test", "committedDate": "2021-01-29T16:53:46Z", "type": "commit"}, {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "message": "removing scala", "committedDate": "2021-02-01T19:13:51Z", "type": "commit"}, {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "message": "removing scala", "committedDate": "2021-02-01T19:13:51Z", "type": "forcePushed"}, {"oid": "dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "url": "https://github.com/apache/kafka/commit/dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "message": "Merge branch 'trunk' into windowsconfig", "committedDate": "2021-02-01T19:15:35Z", "type": "commit"}]}