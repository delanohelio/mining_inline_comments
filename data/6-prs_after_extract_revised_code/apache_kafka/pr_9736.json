{"pr_number": 9736, "pr_title": "Add configurable workloads and E2E latency tracking to Trogdor.", "pr_createdAt": "2020-12-11T19:53:16Z", "pr_url": "https://github.com/apache/kafka/pull/9736", "timeline": [{"oid": "8ead2ceab7218dd47dd447498ad3601264b4c537", "url": "https://github.com/apache/kafka/commit/8ead2ceab7218dd47dd447498ad3601264b4c537", "message": "Add a Timestamp Payload Generator and Record Processor.", "committedDate": "2020-12-11T19:52:19Z", "type": "commit"}, {"oid": "bca4ee1dabce1b90760e6a3ca1204960623d1b4b", "url": "https://github.com/apache/kafka/commit/bca4ee1dabce1b90760e6a3ca1204960623d1b4b", "message": "Fix spotbugsMain output.", "committedDate": "2020-12-11T20:39:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM3OTA5OA==", "url": "https://github.com/apache/kafka/pull/9736#discussion_r541379098", "bodyText": "it would be good to have a default for timestampBytes, I think.  Basically if this gets set to 0, set it to 8 instead?\nAlso, when would we want to change the number of timestamp bytes?", "author": "cmccabe", "createdAt": "2020-12-11T22:45:06Z", "path": "tools/src/main/java/org/apache/kafka/trogdor/workload/GaussianTimestampRandomPayloadGenerator.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.kafka.trogdor.workload;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import org.apache.kafka.common.utils.Time;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Random;\n+\n+/**\n+ * This class behaves identically to TimestampRandomPayloadGenerator, except the message size follows a gaussian\n+ * distribution.\n+ *\n+ * This should be used in conjunction with TimestampRecordProcessor in the Consumer to measure true end-to-end latency\n+ * of a system.\n+ *\n+ * `messageSizeAverage` - The average size in bytes of each message.\n+ * `messageSizeDeviation` - The standard deviation to use when calculating message size.\n+ * `timestampBytes` - The amount of bytes to use for the timestamp.  Usually 8.\n+ * `messagesUntilSizeChange` - The number of messages to keep at the same size.\n+ * `seed` - Used to initialize Random() to remove some non-determinism.\n+ *\n+ * Here is an example spec:\n+ *\n+ * {\n+ *    \"type\": \"gaussianTimestampRandom\",\n+ *    \"messageSizeAverage\": 512,\n+ *    \"messageSizeDeviation\": 100,\n+ *    \"timestampBytes\": 8,\n+ *    \"messagesUntilSizeChange\": 100\n+ * }\n+ *\n+ * This will generate messages on a gaussian distribution with an average size each 512-bytes and the first 8 bytes\n+ * encoded with the timestamp.  The message sizes will have a standard deviation of 100 bytes, and the size will only\n+ * change every 100 messages.  The distribution of messages will be as follows:\n+ *\n+ *    The average size of the messages are 512 bytes.\n+ *    ~68% of the messages are between 412 and 612 bytes\n+ *    ~95% of the messages are between 312 and 712 bytes\n+ *    ~99% of the messages are between 212 and 812 bytes\n+ */\n+\n+public class GaussianTimestampRandomPayloadGenerator implements PayloadGenerator {\n+    private final int messageSizeAverage;\n+    private final int messageSizeDeviation;\n+    private final int timestampBytes;\n+    private final int messagesUntilSizeChange;\n+    private final long seed;\n+\n+    private final Random random = new Random();\n+    private final ByteBuffer buffer;\n+\n+    private int messageTracker = 0;\n+    private int messageSize = 0;\n+\n+    @JsonCreator\n+    public GaussianTimestampRandomPayloadGenerator(@JsonProperty(\"messageSizeAverage\") int messageSizeAverage,\n+                                                   @JsonProperty(\"messageSizeDeviation\") int messageSizeDeviation,\n+                                                   @JsonProperty(\"timestampBytes\") int timestampBytes,", "originalCommit": "bca4ee1dabce1b90760e6a3ca1204960623d1b4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzQ2NQ==", "url": "https://github.com/apache/kafka/pull/9736#discussion_r544547465", "bodyText": "Removed timestampBytes.", "author": "scott-hendricks", "createdAt": "2020-12-16T19:00:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM3OTA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "6591c2284acd31fde73e774c4269f278c7d5d0cc", "chunk": "diff --git a/tools/src/main/java/org/apache/kafka/trogdor/workload/GaussianTimestampRandomPayloadGenerator.java b/tools/src/main/java/org/apache/kafka/trogdor/workload/GaussianTimestampRandomPayloadGenerator.java\nindex 3a780a2876..90fe279d43 100644\n--- a/tools/src/main/java/org/apache/kafka/trogdor/workload/GaussianTimestampRandomPayloadGenerator.java\n+++ b/tools/src/main/java/org/apache/kafka/trogdor/workload/GaussianTimestampRandomPayloadGenerator.java\n\n@@ -34,7 +34,6 @@ import java.util.Random;\n  *\n  * `messageSizeAverage` - The average size in bytes of each message.\n  * `messageSizeDeviation` - The standard deviation to use when calculating message size.\n- * `timestampBytes` - The amount of bytes to use for the timestamp.  Usually 8.\n  * `messagesUntilSizeChange` - The number of messages to keep at the same size.\n  * `seed` - Used to initialize Random() to remove some non-determinism.\n  *\n"}}, {"oid": "6591c2284acd31fde73e774c4269f278c7d5d0cc", "url": "https://github.com/apache/kafka/commit/6591c2284acd31fde73e774c4269f278c7d5d0cc", "message": "Remove timestampBytes from E2E Latency Tests.", "committedDate": "2020-12-14T19:29:53Z", "type": "commit"}]}