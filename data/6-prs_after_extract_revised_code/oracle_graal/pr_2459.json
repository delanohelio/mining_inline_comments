{"pr_number": 2459, "pr_title": "Debug info test", "pr_createdAt": "2020-05-14T14:51:24Z", "pr_url": "https://github.com/oracle/graal/pull/2459", "timeline": [{"oid": "30f558658563ffe58df42a92883690a32065142e", "url": "https://github.com/oracle/graal/commit/30f558658563ffe58df42a92883690a32065142e", "message": "script error", "committedDate": "2020-05-17T21:41:00Z", "type": "forcePushed"}, {"oid": "df530554538a5cd0db8ebc2aab4c0514f027c027", "url": "https://github.com/oracle/graal/commit/df530554538a5cd0db8ebc2aab4c0514f027c027", "message": "use format", "committedDate": "2020-05-18T08:02:46Z", "type": "forcePushed"}, {"oid": "04e247c940c0552bf4739d1cd049d55679021371", "url": "https://github.com/oracle/graal/commit/04e247c940c0552bf4739d1cd049d55679021371", "message": "correct info rexp to cater for variant output", "committedDate": "2020-05-19T20:30:26Z", "type": "forcePushed"}, {"oid": "4152d5cc64a1e2718f2e074d6953a40077882f95", "url": "https://github.com/oracle/graal/commit/4152d5cc64a1e2718f2e074d6953a40077882f95", "message": "locate jdk src.zip correctly on 1.8", "committedDate": "2020-05-20T09:00:18Z", "type": "commit"}, {"oid": "c599e19d72cd9abaf246d4dbcb9337af30ed7935", "url": "https://github.com/oracle/graal/commit/c599e19d72cd9abaf246d4dbcb9337af30ed7935", "message": "add DebugInfoSourceCacheRoot option to allow debug sources cache location to be specified", "committedDate": "2020-05-20T09:01:21Z", "type": "commit"}, {"oid": "a21f51aef1705ea06ec50aeb126f67851abafe06", "url": "https://github.com/oracle/graal/commit/a21f51aef1705ea06ec50aeb126f67851abafe06", "message": "hook debuginfotest into gate", "committedDate": "2020-05-20T09:05:49Z", "type": "forcePushed"}, {"oid": "e6dac22ef5a20ae211708c07804236ebc80c9a48", "url": "https://github.com/oracle/graal/commit/e6dac22ef5a20ae211708c07804236ebc80c9a48", "message": "add mx debuginfotest command and link into _run_gate", "committedDate": "2020-05-20T10:24:40Z", "type": "commit"}, {"oid": "bc3cb87f363410e674f12280a0ea59ddf0d1b2bc", "url": "https://github.com/oracle/graal/commit/bc3cb87f363410e674f12280a0ea59ddf0d1b2bc", "message": "hook debuginfotest into gate", "committedDate": "2020-05-20T10:25:11Z", "type": "commit"}, {"oid": "bc3cb87f363410e674f12280a0ea59ddf0d1b2bc", "url": "https://github.com/oracle/graal/commit/bc3cb87f363410e674f12280a0ea59ddf0d1b2bc", "message": "hook debuginfotest into gate", "committedDate": "2020-05-20T10:25:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNTUxMA==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430205510", "bodyText": "It's better to issue an error message here instead of silently fixing a users bad option argument. Otherwise we are breeding such command line invocations.", "author": "olpaw", "createdAt": "2020-05-26T07:22:14Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "diffHunk": "@@ -469,4 +469,14 @@ protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, Integer o\n     @Option(help = \"Search path for source files for Application or GraalVM classes (list of comma-separated directories or jar files)\")//\n     public static final HostedOptionKey<String[]> DebugInfoSourceSearchPath = new HostedOptionKey<String[]>(null) {\n     };\n+    @Option(help = \"Directory under which to create source file cache for Application or GraalVM classes\")//\n+    public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\") {\n+        @Override\n+        protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, String oldValue, String newValue) {\n+            // disallow null or empty string\n+            if (newValue == null || newValue.length() == 0) {", "originalCommit": "bc3cb87f363410e674f12280a0ea59ddf0d1b2bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMzOTc1NQ==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430339755", "bodyText": "Ok. What would be the appropriate way to make the user aware of the error? Do I throw an exception to stop the native image run? Should Can log an error message and force an exit? Or do I log a warning message, reset the value to the default and carry on. Is there a standard API to implement the latter actions?", "author": "adinn", "createdAt": "2020-05-26T11:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNTUxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM1OTI3MA==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430359270", "bodyText": "See e.g. NativeImageOptions.getCStandard() on how we usually do this.", "author": "olpaw", "createdAt": "2020-05-26T12:01:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNTUxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjc3Mg==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430382772", "bodyText": "Ok, thanks. Got it.", "author": "adinn", "createdAt": "2020-05-26T12:44:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNTUxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkzMTQwNQ==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430931405", "bodyText": "done", "author": "adinn", "createdAt": "2020-05-27T08:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNTUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "95d13ac97cca5a472097bf636c553fa1982f0699", "chunk": "diff --git a/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java b/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\nindex c16d1ef758b..43fb9a4063f 100644\n--- a/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\n+++ b/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\n\n@@ -470,13 +472,13 @@ public class SubstrateOptions {\n     public static final HostedOptionKey<String[]> DebugInfoSourceSearchPath = new HostedOptionKey<String[]>(null) {\n     };\n     @Option(help = \"Directory under which to create source file cache for Application or GraalVM classes\")//\n-    public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\") {\n-        @Override\n-        protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, String oldValue, String newValue) {\n-            // disallow null or empty string\n-            if (newValue == null || newValue.length() == 0) {\n-                DebugInfoSourceCacheRoot.update(values, oldValue);\n-            }\n+    public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\");\n+\n+    public static String getDebugInfoSourceCacheRoot() {\n+        String sourceRoot = DebugInfoSourceCacheRoot.getValue();\n+        if (sourceRoot == null || sourceRoot.length() == 0) {\n+            throw UserError.abort(\"DebugInfoSourceCacheRoot must be set to a non-empty string\");\n         }\n-    };\n+        return sourceRoot;\n+    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwMzg3MQ==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430903871", "bodyText": "Now that you have that abstraction in-between you could take the checking one level further by returning a Path here and react on InvalidPathException during construction (Paths.get) with a sensible UserError.abort message.", "author": "olpaw", "createdAt": "2020-05-27T07:14:41Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java", "diffHunk": "@@ -470,13 +472,13 @@ protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, Integer o\n     public static final HostedOptionKey<String[]> DebugInfoSourceSearchPath = new HostedOptionKey<String[]>(null) {\n     };\n     @Option(help = \"Directory under which to create source file cache for Application or GraalVM classes\")//\n-    public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\") {\n-        @Override\n-        protected void onValueUpdate(EconomicMap<OptionKey<?>, Object> values, String oldValue, String newValue) {\n-            // disallow null or empty string\n-            if (newValue == null || newValue.length() == 0) {\n-                DebugInfoSourceCacheRoot.update(values, oldValue);\n-            }\n+    public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\");\n+\n+    public static String getDebugInfoSourceCacheRoot() {", "originalCommit": "006f2a8e822e29611cd6b054d4a1cb5fe0059f5e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1MTE1MQ==", "url": "https://github.com/oracle/graal/pull/2459#discussion_r430951151", "bodyText": "done", "author": "adinn", "createdAt": "2020-05-27T08:38:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwMzg3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "2cd73a953d273fd68e3dfecb934273e666a483b9", "chunk": "diff --git a/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java b/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\nindex 43fb9a4063f..cd6f9318074 100644\n--- a/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\n+++ b/substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/SubstrateOptions.java\n\n@@ -474,11 +476,12 @@ public class SubstrateOptions {\n     @Option(help = \"Directory under which to create source file cache for Application or GraalVM classes\")//\n     public static final HostedOptionKey<String> DebugInfoSourceCacheRoot = new HostedOptionKey<String>(\"sources\");\n \n-    public static String getDebugInfoSourceCacheRoot() {\n-        String sourceRoot = DebugInfoSourceCacheRoot.getValue();\n-        if (sourceRoot == null || sourceRoot.length() == 0) {\n-            throw UserError.abort(\"DebugInfoSourceCacheRoot must be set to a non-empty string\");\n+    public static Path getDebugInfoSourceCacheRoot() {\n+        try {\n+            Path sourceRoot = Paths.get(DebugInfoSourceCacheRoot.getValue());\n+            return sourceRoot;\n+        } catch (InvalidPathException ipe) {\n+            throw UserError.abort(\"Invalid path provided for option DebugInfoSourceCacheRoot \" + DebugInfoSourceCacheRoot.getValue());\n         }\n-        return sourceRoot;\n     }\n }\n"}}, {"oid": "95d13ac97cca5a472097bf636c553fa1982f0699", "url": "https://github.com/oracle/graal/commit/95d13ac97cca5a472097bf636c553fa1982f0699", "message": "fixes for review comments", "committedDate": "2020-05-27T08:03:03Z", "type": "forcePushed"}, {"oid": "2cd73a953d273fd68e3dfecb934273e666a483b9", "url": "https://github.com/oracle/graal/commit/2cd73a953d273fd68e3dfecb934273e666a483b9", "message": "fixes for review comments", "committedDate": "2020-05-27T08:36:56Z", "type": "commit"}, {"oid": "2cd73a953d273fd68e3dfecb934273e666a483b9", "url": "https://github.com/oracle/graal/commit/2cd73a953d273fd68e3dfecb934273e666a483b9", "message": "fixes for review comments", "committedDate": "2020-05-27T08:36:56Z", "type": "forcePushed"}, {"oid": "904859e2c24375fd010bb81336fd8ec1f0404de1", "url": "https://github.com/oracle/graal/commit/904859e2c24375fd010bb81336fd8ec1f0404de1", "message": "Style fix", "committedDate": "2020-05-27T09:26:47Z", "type": "commit"}, {"oid": "7cf361f6996d6b74c50b3ed7987c80c1e62dd5f9", "url": "https://github.com/oracle/graal/commit/7cf361f6996d6b74c50b3ed7987c80c1e62dd5f9", "message": "Fix checkstyle issues", "committedDate": "2020-05-27T10:05:09Z", "type": "commit"}, {"oid": "93dabb297aaae737380d811c5eeb9ebe31d4607b", "url": "https://github.com/oracle/graal/commit/93dabb297aaae737380d811c5eeb9ebe31d4607b", "message": "Add missing copyright header", "committedDate": "2020-05-27T13:02:33Z", "type": "commit"}, {"oid": "92337dfada77f57874e53115ad986404a9855358", "url": "https://github.com/oracle/graal/commit/92337dfada77f57874e53115ad986404a9855358", "message": "Fix FindBugs warning about possible NPE", "committedDate": "2020-05-27T13:21:56Z", "type": "commit"}, {"oid": "52174b008a7e152d9f32c0517374036a07297620", "url": "https://github.com/oracle/graal/commit/52174b008a7e152d9f32c0517374036a07297620", "message": "Prevent SubstrateOptions.getDebugInfoSourceCacheRoot() at SourceCache.<clinit> time\n\nAt the time of SourceCache clinit HostedOptionValues Singleton in not\nyet available thus DebugInfoSourceCacheRoot.getValue() cannot be used at\nSourceCache clinit time.", "committedDate": "2020-05-27T14:38:44Z", "type": "commit"}]}