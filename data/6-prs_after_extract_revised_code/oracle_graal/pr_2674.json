{"pr_number": 2674, "pr_title": "CAP cache improvements", "pr_createdAt": "2020-07-14T19:12:40Z", "pr_url": "https://github.com/oracle/graal/pull/2674", "timeline": [{"oid": "a9ee525f1ecbe793d3139122059dd9a1bd7ea04d", "url": "https://github.com/oracle/graal/commit/a9ee525f1ecbe793d3139122059dd9a1bd7ea04d", "message": "Add `DontRunCAPQueryCode` native-image argument\n\n\nAdd `CAPQueryCodeDir` native-image argument\n\n\nSplit query code function and main\n\n\n.\n\n\n.", "committedDate": "2020-07-14T21:31:20Z", "type": "forcePushed"}, {"oid": "b69bf25fcb069a561be36b0266841b086915ae40", "url": "https://github.com/oracle/graal/commit/b69bf25fcb069a561be36b0266841b086915ae40", "message": "Add `DontRunCAPQueryCode` native-image argument\n\n\nAdd `CAPQueryCodeDir` native-image argument\n\n\nSplit query code function and main\n\n\n.\n\n\n.", "committedDate": "2020-07-15T12:26:02Z", "type": "forcePushed"}, {"oid": "84477a2bf18845c0952c33d28f77508c5db83bad", "url": "https://github.com/oracle/graal/commit/84477a2bf18845c0952c33d28f77508c5db83bad", "message": "Add `DontRunCAPQueryCode` native-image argument\n\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix", "committedDate": "2020-07-15T14:54:56Z", "type": "forcePushed"}, {"oid": "5bca02906d6e12e736ab816420158ab672430939", "url": "https://github.com/oracle/graal/commit/5bca02906d6e12e736ab816420158ab672430939", "message": "Add `DontRunCAPQueryCode` native-image argument\n\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate", "committedDate": "2020-07-15T16:51:43Z", "type": "forcePushed"}, {"oid": "4047b6bde20846004541b091678f63e96bc77836", "url": "https://github.com/oracle/graal/commit/4047b6bde20846004541b091678f63e96bc77836", "message": "Add `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate", "committedDate": "2020-07-15T16:57:39Z", "type": "forcePushed"}, {"oid": "866826b6fcb77a43a10c77272a27562c09fcc5bd", "url": "https://github.com/oracle/graal/commit/866826b6fcb77a43a10c77272a27562c09fcc5bd", "message": "Add `DontRunCAPQueryCode` native-image argument\n\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate", "committedDate": "2020-07-15T16:51:20Z", "type": "forcePushed"}, {"oid": "adbb09d0ccaaf134df01948d47c08ed74083f59d", "url": "https://github.com/oracle/graal/commit/adbb09d0ccaaf134df01948d47c08ed74083f59d", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate", "committedDate": "2020-07-15T16:58:17Z", "type": "forcePushed"}, {"oid": "7e5bb82c72bf15c8be5646afe2a34ed97f499ed0", "url": "https://github.com/oracle/graal/commit/7e5bb82c72bf15c8be5646afe2a34ed97f499ed0", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate\nstylegate", "committedDate": "2020-07-15T17:43:57Z", "type": "forcePushed"}, {"oid": "55baad590d34cbd969efc1689ca227272ee61cc1", "url": "https://github.com/oracle/graal/commit/55baad590d34cbd969efc1689ca227272ee61cc1", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate\nstylegate", "committedDate": "2020-07-16T15:17:23Z", "type": "forcePushed"}, {"oid": "a064f3f10da5be1a5fd2268400c59362e5efc586", "url": "https://github.com/oracle/graal/commit/a064f3f10da5be1a5fd2268400c59362e5efc586", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate\nstylegate", "committedDate": "2020-07-17T14:15:48Z", "type": "forcePushed"}, {"oid": "b17b809b6993b8f28b5bceb06c8c6b70c55f043b", "url": "https://github.com/oracle/graal/commit/b17b809b6993b8f28b5bceb06c8c6b70c55f043b", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate\nstylegate", "committedDate": "2020-07-20T12:55:54Z", "type": "forcePushed"}, {"oid": "a97cf1f4ae35dba6e91f75821a3dfe33f9f36034", "url": "https://github.com/oracle/graal/commit/a97cf1f4ae35dba6e91f75821a3dfe33f9f36034", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\njdk8 fix\nStyle gate\nstylegate", "committedDate": "2020-07-21T10:50:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTA5MQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458029091", "bodyText": "can queryCodeDir be null ?\nBetter to use isEmpty()", "author": "johanvos", "createdAt": "2020-07-21T11:34:12Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n+        if (!queryCodeDir.equals(\"\")) {", "originalCommit": "a97cf1f4ae35dba6e91f75821a3dfe33f9f36034", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMzYwNA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458133604", "bodyText": "Good idea, changed!", "author": "lazar-mitrovic", "createdAt": "2020-07-21T14:19:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyOTA5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\nindex b2085cb59bc..144e27adbe2 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n\n@@ -76,7 +76,7 @@ public class CAnnotationProcessor {\n         this.queryCodeDirectory = compilerInvoker.tempDirectory;\n \n         String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n-        if (!queryCodeDir.equals(\"\")) {\n+        if (!queryCodeDir.isEmpty()) {\n             this.queryCodeDirectory = FileSystems.getDefault().getPath(queryCodeDir).toAbsolutePath();\n         }\n     }\n"}}, {"oid": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "url": "https://github.com/oracle/graal/commit/9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter", "committedDate": "2020-07-21T14:17:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458158492", "bodyText": "We could check if it has been set and fail if the user specified a bad path:\nif (CAnnotationProcessorCache.Options.CAPQueryCodeDir.hasBeenSet()) {\n    String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n    if (!File.exists(queryCodeDir)) {\n        // create the directory\n    } else if (!File.isDirectory(queryCodeDir)) {\n        // we can throw UserError.abort here\n    }\n    this.queryCodeDirectory = queryCodeDir;\n}", "author": "gradinac", "createdAt": "2020-07-21T14:50:54Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -71,6 +73,12 @@ public CAnnotationProcessor(NativeLibraries nativeLibs, NativeCodeContext codeCt\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n+        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n+\n+        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();", "originalCommit": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1OTA3MQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458359071", "bodyText": "This is already checked here :)", "author": "lazar-mitrovic", "createdAt": "2020-07-21T20:11:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3MzAwNw==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458373007", "bodyText": "Ah, my bad! :) That's a good point - can we then turn it into:\nif (CAnnotationProcessorCache.Options.CAPQueryCodeDir.hasBeenSet()) {\n    this.queryCodeDirectory = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n} else {\n    this.queryCodeDirectory = compilerInvoker.tempDirectory;\n}", "author": "gradinac", "createdAt": "2020-07-21T20:37:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1ODQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3640040e54f40377d00c4281e191ce009302619a", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\nindex 144e27adbe2..9436620c228 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n\n@@ -73,11 +73,12 @@ public class CAnnotationProcessor {\n         }\n         this.compilerInvoker = ImageSingletons.lookup(CCompilerInvoker.class);\n         this.tempDirectory = compilerInvoker.tempDirectory;\n-        this.queryCodeDirectory = compilerInvoker.tempDirectory;\n-\n-        String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n-        if (!queryCodeDir.isEmpty()) {\n+        \n+        if (CAnnotationProcessorCache.Options.CAPQueryCodeDir.hasBeenSet()) {\n+            String queryCodeDir = CAnnotationProcessorCache.Options.CAPQueryCodeDir.getValue();\n             this.queryCodeDirectory = FileSystems.getDefault().getPath(queryCodeDir).toAbsolutePath();\n+        } else {\n+            this.queryCodeDirectory = compilerInvoker.tempDirectory;\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNDM0OQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458234349", "bodyText": "mx eclipseformat can sometimes bug up :) Put the comment above this line between /* and */ - I think that wouldn't cause it to break into 3 lines", "author": "gradinac", "createdAt": "2020-07-21T16:35:22Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java", "diffHunk": "@@ -87,13 +95,19 @@ public NativeCodeInfo process(CAnnotationProcessorCache cache) {\n              * Generate C source file (the \"Query\") that will produce the information needed (e.g.,\n              * size of struct/union and offsets to their fields, value of enum/macros etc.).\n              */\n-            writer = new QueryCodeWriter(tempDirectory);\n+            writer = new QueryCodeWriter(queryCodeDirectory);\n             Path queryFile = writer.write(codeInfo);\n             if (nativeLibs.getErrors().size() > 0) {\n                 return codeInfo;\n             }\n             assert Files.exists(queryFile);\n \n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) { // Only output", "originalCommit": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MjUxNw==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458362517", "bodyText": "Should be fixed now :)", "author": "lazar-mitrovic", "createdAt": "2020-07-21T20:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNDM0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "30dbbd74ae55506cd9d220f1017ffaaafc4b3bc8", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\nindex 144e27adbe2..35ab8cb56a3 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessor.java\n\n@@ -102,9 +102,8 @@ public class CAnnotationProcessor {\n             }\n             assert Files.exists(queryFile);\n \n-            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) { // Only output\n-                                                                                    // query code\n-                                                                                    // and exit\n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n+                // Only output query code and exit\n                 return codeInfo;\n             }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTEwNA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458235104", "bodyText": "We can also check if CAPQueryCodeDir is set here with Options.CAPQueryCodeDir.hasBeenSet()", "author": "gradinac", "createdAt": "2020-07-21T16:36:37Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -102,6 +109,20 @@ public CAnnotationProcessorCache() {\n                 clearCache();\n             }\n         }\n+\n+        if (Options.CAPQueryCodeDir.getValue() != null) {", "originalCommit": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM2MjYxNQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458362615", "bodyText": "Done", "author": "lazar-mitrovic", "createdAt": "2020-07-21T20:18:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTEwNA=="}], "type": "inlineReview", "revised_code": {"commit": "30dbbd74ae55506cd9d220f1017ffaaafc4b3bc8", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\nindex 8930e5500d5..07cca38be4d 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n\n@@ -110,7 +110,7 @@ public final class CAnnotationProcessorCache {\n             }\n         }\n \n-        if (Options.CAPQueryCodeDir.getValue() != null) {\n+        if (Options.CAPQueryCodeDir.hasBeenSet()) {\n             Path queryPath = FileSystems.getDefault().getPath(Options.CAPQueryCodeDir.getValue()).toAbsolutePath();\n             query = queryPath.toFile();\n             if (!query.exists()) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIzNTQ5Mg==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r458235492", "bodyText": "Neat!", "author": "gradinac", "createdAt": "2020-07-21T16:37:13Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/codegen/QueryCodeWriter.java", "diffHunk": "@@ -123,13 +123,21 @@ protected void visitNativeCodeInfo(NativeCodeInfo nativeCodeInfo) {\n         writer.appendln(\"#define IS_CONST_UNSIGNED(a) (a>=0 ? 1 : 0)\");\n \n         /* Write the main function with all the outputs for the children. */\n+        String functionName = nativeCodeInfo.getName().replaceAll(\"\\\\W\", \"_\");", "originalCommit": "9c2ba0c3f890d2171cb4eb03f1d2e5b6bb6c5db9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "30dbbd74ae55506cd9d220f1017ffaaafc4b3bc8", "url": "https://github.com/oracle/graal/commit/30dbbd74ae55506cd9d220f1017ffaaafc4b3bc8", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes", "committedDate": "2020-07-21T20:14:33Z", "type": "forcePushed"}, {"oid": "3640040e54f40377d00c4281e191ce009302619a", "url": "https://github.com/oracle/graal/commit/3640040e54f40377d00c4281e191ce009302619a", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.", "committedDate": "2020-07-22T11:30:45Z", "type": "forcePushed"}, {"oid": "9d91dc9807db38eff0c635e55c4185acb547a104", "url": "https://github.com/oracle/graal/commit/9d91dc9807db38eff0c635e55c4185acb547a104", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-22T15:43:18Z", "type": "forcePushed"}, {"oid": "18ad364bd3f00d3217ccb33e6e8229118db71016", "url": "https://github.com/oracle/graal/commit/18ad364bd3f00d3217ccb33e6e8229118db71016", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-22T17:42:43Z", "type": "forcePushed"}, {"oid": "b8c83dfe8a10a2af8d48347c2d2f8b54663aefdf", "url": "https://github.com/oracle/graal/commit/b8c83dfe8a10a2af8d48347c2d2f8b54663aefdf", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-22T23:33:47Z", "type": "forcePushed"}, {"oid": "b28895abd24825f272a54a79fd0506a5094cc407", "url": "https://github.com/oracle/graal/commit/b28895abd24825f272a54a79fd0506a5094cc407", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-22T23:59:53Z", "type": "forcePushed"}, {"oid": "f0877ca2a719fabecad1eca6f4e257716027c3e8", "url": "https://github.com/oracle/graal/commit/f0877ca2a719fabecad1eca6f4e257716027c3e8", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-25T17:14:42Z", "type": "forcePushed"}, {"oid": "5e23a8e2134d32328eaa3403b2cd0a0cae804b76", "url": "https://github.com/oracle/graal/commit/5e23a8e2134d32328eaa3403b2cd0a0cae804b76", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-27T16:39:47Z", "type": "forcePushed"}, {"oid": "ff7ef59ec22ff0f7dac7dd424db941f9984a5602", "url": "https://github.com/oracle/graal/commit/ff7ef59ec22ff0f7dac7dd424db941f9984a5602", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-30T15:53:55Z", "type": "forcePushed"}, {"oid": "de6aad79605d3dcdec2fc999aed810a1653a8ffb", "url": "https://github.com/oracle/graal/commit/de6aad79605d3dcdec2fc999aed810a1653a8ffb", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-07-31T16:38:44Z", "type": "forcePushed"}, {"oid": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "url": "https://github.com/oracle/graal/commit/9478272484f173be8de5b29cc5c73ccc24ac9e3b", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-08-03T12:40:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5MDkzOA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464490938", "bodyText": "Please call this option ExitAfterQueryCodeGeneration", "author": "olpaw", "createdAt": "2020-08-03T15:32:32Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);", "originalCommit": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTI1Mg==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341252", "bodyText": "Done", "author": "lazar-mitrovic", "createdAt": "2020-08-04T21:29:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5MDkzOA=="}], "type": "inlineReview", "revised_code": {"commit": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\nindex 07cca38be4d..7244c0fc508 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n\n@@ -78,10 +78,10 @@ public final class CAnnotationProcessorCache {\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n \n         @Option(help = \"Output query code for target platform without executing it\")//\n-        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);\n+        public static final HostedOptionKey<Boolean> ExitAfterQueryCodeGeneration = new HostedOptionKey<>(false);\n \n         @Option(help = \"Directory where query code for target platform should be output\")//\n-        public static final HostedOptionKey<String> CAPQueryCodeDir = new HostedOptionKey<>(\"\");\n+        public static final HostedOptionKey<String> QueryCodeDir = new HostedOptionKey<>(\"\");\n     }\n \n     private File cache;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5Mjc3OA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464492778", "bodyText": "Please move this above\nif (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {", "author": "olpaw", "createdAt": "2020-08-03T15:35:40Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -1042,6 +1044,9 @@ private NativeLibraries setupNativeLibraries(String imageName, ConstantReflectio\n             if (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {\n                 throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.ExitAfterCAPCache, \"+\"));\n             }\n+            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {", "originalCommit": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTM0NA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341344", "bodyText": "Done", "author": "lazar-mitrovic", "createdAt": "2020-08-04T21:29:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5Mjc3OA=="}], "type": "inlineReview", "revised_code": {"commit": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\nindex ad017948659..7c6e224b01e 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n\n@@ -1041,12 +1042,14 @@ public class NativeImageGenerator {\n             ImageSingletons.add(OffsetOf.Support.class, new OffsetOfSupportImpl(nativeLibs, aMetaAccess));\n             ImageSingletons.add(CConstantValueSupport.class, new CConstantValueSupportImpl(nativeLibs, aMetaAccess));\n \n+            if (CAnnotationProcessorCache.Options.ExitAfterQueryCodeGeneration.getValue()) {\n+                throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.ExitAfterQueryCodeGeneration, \"+\"));\n+            }\n+\n             if (CAnnotationProcessorCache.Options.ExitAfterCAPCache.getValue()) {\n                 throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.ExitAfterCAPCache, \"+\"));\n             }\n-            if (CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n-                throw new InterruptImageBuilding(\"Exiting image generation because of \" + SubstrateOptionsParser.commandArgument(CAnnotationProcessorCache.Options.DontRunCAPQueryCode, \"+\"));\n-            }\n+\n             return nativeLibs;\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwMjcwNQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464502705", "bodyText": "Maybe\nboolean withoutCompilerInvoker = ExitAfterQueryCodeGeneration.getValue() ||\n                                 (UseCAPCache.getValue() && ExitAfterRelocatableImageWrite.getValue());\nif (!withoutCompilerInvoker) {\n    ...\nfor better readability.", "author": "olpaw", "createdAt": "2020-08-03T15:52:07Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -861,7 +861,9 @@ private void setupNativeImage(String imageName, OptionValues options, Map<Method\n \n                 if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {", "originalCommit": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\nindex ad017948659..7c6e224b01e 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n\n@@ -859,11 +859,12 @@ public class NativeImageGenerator {\n                 WordTypes aWordTypes = new SubstrateWordTypes(aMetaAccess, FrameAccess.getWordKind());\n                 HostedSnippetReflectionProvider aSnippetReflection = new HostedSnippetReflectionProvider((SVMHost) aUniverse.hostVM(), aWordTypes);\n \n-                if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {\n+                boolean withoutCompilerInvoker = CAnnotationProcessorCache.Options.ExitAfterQueryCodeGeneration.getValue() ||\n+                                (NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue());\n+\n+                if (!withoutCompilerInvoker) {\n                     CCompilerInvoker compilerInvoker = CCompilerInvoker.create(ImageSingletons.lookup(TemporaryBuildDirectoryProvider.class).getTemporaryBuildDirectory());\n-                    if (!CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n-                        compilerInvoker.verifyCompiler();\n-                    }\n+                    compilerInvoker.verifyCompiler();\n                     ImageSingletons.add(CCompilerInvoker.class, compilerInvoker);\n                 }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwNDM4OA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464504388", "bodyText": "If you don't run the compiler driver because you exit after right QueryCode generation you should not even need to register the singleton. See https://github.com/oracle/graal/pull/2674/files#r464502705", "author": "olpaw", "createdAt": "2020-08-03T15:54:52Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java", "diffHunk": "@@ -861,7 +861,9 @@ private void setupNativeImage(String imageName, OptionValues options, Map<Method\n \n                 if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {\n                     CCompilerInvoker compilerInvoker = CCompilerInvoker.create(ImageSingletons.lookup(TemporaryBuildDirectoryProvider.class).getTemporaryBuildDirectory());\n-                    compilerInvoker.verifyCompiler();\n+                    if (!CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n+                        compilerInvoker.verifyCompiler();\n+                    }\n                     ImageSingletons.add(CCompilerInvoker.class, compilerInvoker);", "originalCommit": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTUxOA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341518", "bodyText": "Changed", "author": "lazar-mitrovic", "createdAt": "2020-08-04T21:30:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwNDM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\nindex ad017948659..7c6e224b01e 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/NativeImageGenerator.java\n\n@@ -859,11 +859,12 @@ public class NativeImageGenerator {\n                 WordTypes aWordTypes = new SubstrateWordTypes(aMetaAccess, FrameAccess.getWordKind());\n                 HostedSnippetReflectionProvider aSnippetReflection = new HostedSnippetReflectionProvider((SVMHost) aUniverse.hostVM(), aWordTypes);\n \n-                if (!(NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue())) {\n+                boolean withoutCompilerInvoker = CAnnotationProcessorCache.Options.ExitAfterQueryCodeGeneration.getValue() ||\n+                                (NativeImageOptions.ExitAfterRelocatableImageWrite.getValue() && CAnnotationProcessorCache.Options.UseCAPCache.getValue());\n+\n+                if (!withoutCompilerInvoker) {\n                     CCompilerInvoker compilerInvoker = CCompilerInvoker.create(ImageSingletons.lookup(TemporaryBuildDirectoryProvider.class).getTemporaryBuildDirectory());\n-                    if (!CAnnotationProcessorCache.Options.DontRunCAPQueryCode.getValue()) {\n-                        compilerInvoker.verifyCompiler();\n-                    }\n+                    compilerInvoker.verifyCompiler();\n                     ImageSingletons.add(CCompilerInvoker.class, compilerInvoker);\n                 }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTYwOQ==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r464509609", "bodyText": "I'd call this QueryCodeDir to better differentiate it from the regular CAP.... usecases (cached NativeCodeInfo result files).", "author": "olpaw", "createdAt": "2020-08-03T16:03:41Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java", "diffHunk": "@@ -76,9 +76,16 @@\n \n         @Option(help = \"Exit image generation after C Annotation Processor Cache creation.\")//\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Output query code for target platform without executing it\")//\n+        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);\n+\n+        @Option(help = \"Directory where query code for target platform should be output\")//\n+        public static final HostedOptionKey<String> CAPQueryCodeDir = new HostedOptionKey<>(\"\");", "originalCommit": "9478272484f173be8de5b29cc5c73ccc24ac9e3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTYyNA==", "url": "https://github.com/oracle/graal/pull/2674#discussion_r465341624", "bodyText": "Changed", "author": "lazar-mitrovic", "createdAt": "2020-08-04T21:30:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUwOTYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\nindex 07cca38be4d..7244c0fc508 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/c/CAnnotationProcessorCache.java\n\n@@ -78,10 +78,10 @@ public final class CAnnotationProcessorCache {\n         public static final HostedOptionKey<Boolean> ExitAfterCAPCache = new HostedOptionKey<>(false);\n \n         @Option(help = \"Output query code for target platform without executing it\")//\n-        public static final HostedOptionKey<Boolean> DontRunCAPQueryCode = new HostedOptionKey<>(false);\n+        public static final HostedOptionKey<Boolean> ExitAfterQueryCodeGeneration = new HostedOptionKey<>(false);\n \n         @Option(help = \"Directory where query code for target platform should be output\")//\n-        public static final HostedOptionKey<String> CAPQueryCodeDir = new HostedOptionKey<>(\"\");\n+        public static final HostedOptionKey<String> QueryCodeDir = new HostedOptionKey<>(\"\");\n     }\n \n     private File cache;\n"}}, {"oid": "6220969624ae015998d5e49b50a28f727bddcc97", "url": "https://github.com/oracle/graal/commit/6220969624ae015998d5e49b50a28f727bddcc97", "message": "CAP cache improvements\n\nAdd `DontRunCAPQueryCode` native-image argument\nAdd `CAPQueryCodeDir` native-image argument\nSplit query code function and main\nBetter check for QueryCodeDir parameter\nFixes\n\n\n.\n\n\nTrailing tab", "committedDate": "2020-08-04T12:37:06Z", "type": "forcePushed"}, {"oid": "3a2029b890d8d45371431ab6b1aba4b374b626e6", "url": "https://github.com/oracle/graal/commit/3a2029b890d8d45371431ab6b1aba4b374b626e6", "message": "CAP cache improvements\n\nAdd `ExitAfterQueryCodeGeneration` native-image argument\nAdd `QueryCodeDir` native-image argument\nSplit query code function and main\n\n\n.", "committedDate": "2020-08-04T15:27:12Z", "type": "forcePushed"}, {"oid": "65d838259b5e3d0d4eeee9c71d4ce202f28199ae", "url": "https://github.com/oracle/graal/commit/65d838259b5e3d0d4eeee9c71d4ce202f28199ae", "message": "CAP cache improvements\n\nAdd `ExitAfterQueryCodeGeneration` native-image argument\nAdd `QueryCodeDir` native-image argument\nSplit query code function and main", "committedDate": "2020-08-04T19:57:11Z", "type": "commit"}, {"oid": "65d838259b5e3d0d4eeee9c71d4ce202f28199ae", "url": "https://github.com/oracle/graal/commit/65d838259b5e3d0d4eeee9c71d4ce202f28199ae", "message": "CAP cache improvements\n\nAdd `ExitAfterQueryCodeGeneration` native-image argument\nAdd `QueryCodeDir` native-image argument\nSplit query code function and main", "committedDate": "2020-08-04T19:57:11Z", "type": "forcePushed"}]}