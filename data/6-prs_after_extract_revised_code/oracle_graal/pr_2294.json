{"pr_number": 2294, "pr_title": "Capture NoClassDefFoundError and report with source type", "pr_createdAt": "2020-03-26T16:41:06Z", "pr_url": "https://github.com/oracle/graal/pull/2294", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg==", "url": "https://github.com/oracle/graal/pull/2294#discussion_r412991216", "bodyText": "Is there an action we could suggest to the user that gets this error?\nAlso, should we re-throw if AllowIncompleteClasspath is enabled? Maybe we should just ignore in that case and return false?", "author": "vjovanov", "createdAt": "2020-04-22T13:39:39Z", "path": "substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java", "diffHunk": "@@ -368,17 +369,22 @@ static boolean declaresDefaultMethods(ResolvedJavaType type) {\n             /* Only interfaces can declare default methods. */\n             return false;\n         }\n-        /*\n-         * We call getDeclaredMethods() directly on the wrapped type. We avoid calling it on the\n-         * AnalysisType because it resolves all the methods in the AnalysisUniverse.\n-         */\n-        for (ResolvedJavaMethod method : Inflation.toWrappedType(type).getDeclaredMethods()) {\n-            if (method.isDefault()) {\n-                assert !Modifier.isStatic(method.getModifiers()) : \"Default method that is static?\";\n-                return true;\n+\n+        try {\n+            /*\n+             * We call getDeclaredMethods() directly on the wrapped type. We avoid calling it on the\n+             * AnalysisType because it resolves all the methods in the AnalysisUniverse.\n+             */\n+            for (ResolvedJavaMethod method : Inflation.toWrappedType(type).getDeclaredMethods()) {\n+                if (method.isDefault()) {\n+                    assert !Modifier.isStatic(method.getModifiers()) : \"Default method that is static?\";\n+                    return true;\n+                }\n             }\n+            return false;\n+        } catch (NoClassDefFoundError e) {\n+            throw new GraalError(e, \"Unable to resolve all classes in class: %s\", type.toClassName());", "originalCommit": "3d180cefc8df92444cf383698b86ea06fc0722a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0NjA5NA==", "url": "https://github.com/oracle/graal/pull/2294#discussion_r436146094", "bodyText": "@vjovanov was the intention here to return false when AllowIncompleteClasspath is enabled? This got merged with the condition flipped:\nif (!NativeImageOptions.AllowIncompleteClasspath.getValue()) {\n       return false;\n}\n\nEither way  returning false (assume that the interface does not have default methods) doesn't seem like a good idea. What are the implications of this on the class initialization logic that depends on it?", "author": "cstancu", "createdAt": "2020-06-05T20:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQyMjk0NQ==", "url": "https://github.com/oracle/graal/pull/2294#discussion_r437422945", "bodyText": "@cstancu I was just looking at this and noticed the same thing. Indeed it seems the condition is flipped.\n@vjovanov @cstancu Shall we keep the check for AllowIncompleteClasspath assuming it's fixed to be:\nif (NativeImageOptions.AllowIncompleteClasspath.getValue()) {\n       return false;\n}", "author": "galderz", "createdAt": "2020-06-09T13:37:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ0MzY4NA==", "url": "https://github.com/oracle/graal/pull/2294#discussion_r437443684", "bodyText": "I've created #2556 to fix this.", "author": "galderz", "createdAt": "2020-06-09T13:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQwNzMwNQ==", "url": "https://github.com/oracle/graal/pull/2294#discussion_r438407305", "bodyText": "The proper fix is to take care of this in JVMCI. See https://bugs.openjdk.java.net/browse/JDK-8247246. It's actually a one-line fix, just need to remove linking the class from ResolvedJavaType.getDeclaredMethod(). There is no reason for the class to be linked to get the JVMCI representation of a class's methods. I will revert this PR once all that is integrated into JVMCI.", "author": "cstancu", "createdAt": "2020-06-10T21:03:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk5MTIxNg=="}], "type": "inlineReview", "revised_code": {"commit": "decc5813df4c0aae8dcc0ba3e2eae2483851405e", "chunk": "diff --git a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java\nindex 5bb16146d06..04828169e15 100644\n--- a/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java\n+++ b/substratevm/src/com.oracle.svm.hosted/src/com/oracle/svm/hosted/classinitialization/ClassInitializationFeature.java\n\n@@ -383,7 +384,11 @@ public class ClassInitializationFeature implements Feature {\n             }\n             return false;\n         } catch (NoClassDefFoundError e) {\n-            throw new GraalError(e, \"Unable to resolve all classes in class: %s\", type.toClassName());\n+            if (!NativeImageOptions.AllowIncompleteClasspath.getValue()) {\n+                return false;\n+            }\n+\n+            throw new GraalError(e, \"Missing classes when looking up default methods in %s. Consider adding them to the classpath.\", type.toClassName());\n         }\n     }\n \n"}}, {"oid": "decc5813df4c0aae8dcc0ba3e2eae2483851405e", "url": "https://github.com/oracle/graal/commit/decc5813df4c0aae8dcc0ba3e2eae2483851405e", "message": "Capture NoClassDefFoundError and report with source type", "committedDate": "2020-05-28T08:11:56Z", "type": "forcePushed"}, {"oid": "8bc9e05481fa933e3882410fe47ad73d6c9bd617", "url": "https://github.com/oracle/graal/commit/8bc9e05481fa933e3882410fe47ad73d6c9bd617", "message": "Capture NoClassDefFoundError and report with source type", "committedDate": "2020-05-28T08:23:49Z", "type": "commit"}, {"oid": "8bc9e05481fa933e3882410fe47ad73d6c9bd617", "url": "https://github.com/oracle/graal/commit/8bc9e05481fa933e3882410fe47ad73d6c9bd617", "message": "Capture NoClassDefFoundError and report with source type", "committedDate": "2020-05-28T08:23:49Z", "type": "forcePushed"}]}