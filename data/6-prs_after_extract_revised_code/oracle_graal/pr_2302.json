{"pr_number": 2302, "pr_title": "Delay memory barrier insertion for unsafe volatile accesses", "pr_createdAt": "2020-03-31T09:24:08Z", "pr_url": "https://github.com/oracle/graal/pull/2302", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4ODA3Mg==", "url": "https://github.com/oracle/graal/pull/2302#discussion_r402088072", "bodyText": "Minor: This needs to propagate the nodeclass (TYPE) to the super class ctor", "author": "davleopo", "createdAt": "2020-04-02T06:51:54Z", "path": "compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawVolatileLoadNode.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Red Hat Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+\n+package org.graalvm.compiler.nodes.extended;\n+\n+import jdk.vm.ci.meta.JavaKind;\n+import org.graalvm.compiler.graph.NodeClass;\n+import org.graalvm.compiler.nodeinfo.NodeInfo;\n+import org.graalvm.compiler.nodes.ValueNode;\n+import org.graalvm.compiler.nodes.memory.SingleMemoryKill;\n+import org.graalvm.word.LocationIdentity;\n+\n+import static org.graalvm.compiler.nodeinfo.NodeCycles.CYCLES_2;\n+import static org.graalvm.compiler.nodeinfo.NodeSize.SIZE_1;\n+\n+@NodeInfo(cycles = CYCLES_2, size = SIZE_1)\n+public class RawVolatileLoadNode extends RawLoadNode implements SingleMemoryKill {\n+    public static final NodeClass<RawVolatileLoadNode> TYPE = NodeClass.create(RawVolatileLoadNode.class);\n+\n+    public RawVolatileLoadNode(ValueNode object, ValueNode offset, JavaKind accessKind, LocationIdentity locationIdentity) {", "originalCommit": "affa1f69b107f0d968079edd3d6585588167c80e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b893c20178277ddec0fce2a653897299f70cf198", "chunk": "diff --git a/compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawVolatileLoadNode.java b/compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawVolatileLoadNode.java\nindex 260496a43a6..924e822bb75 100644\n--- a/compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawVolatileLoadNode.java\n+++ b/compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawVolatileLoadNode.java\n\n@@ -41,7 +41,7 @@ public class RawVolatileLoadNode extends RawLoadNode implements SingleMemoryKill\n     public static final NodeClass<RawVolatileLoadNode> TYPE = NodeClass.create(RawVolatileLoadNode.class);\n \n     public RawVolatileLoadNode(ValueNode object, ValueNode offset, JavaKind accessKind, LocationIdentity locationIdentity) {\n-        super(object, offset, accessKind, locationIdentity);\n+        super(TYPE, object, offset, accessKind, locationIdentity);\n     }\n \n     @Override\n"}}, {"oid": "b893c20178277ddec0fce2a653897299f70cf198", "url": "https://github.com/oracle/graal/commit/b893c20178277ddec0fce2a653897299f70cf198", "message": "late membars for unsafe volatile accesses", "committedDate": "2020-04-02T14:23:23Z", "type": "forcePushed"}, {"oid": "bb905dfe8e7c75b02b731a9422bb2263298e9063", "url": "https://github.com/oracle/graal/commit/bb905dfe8e7c75b02b731a9422bb2263298e9063", "message": "late membars for unsafe volatile accesses", "committedDate": "2020-04-02T15:25:03Z", "type": "commit"}, {"oid": "4e777e4d0a5bd1e02b172d475abc90aac308d073", "url": "https://github.com/oracle/graal/commit/4e777e4d0a5bd1e02b172d475abc90aac308d073", "message": "fix unittest so it catches extra membar and fix wrong condition that causes extra membar", "committedDate": "2020-04-02T15:51:54Z", "type": "commit"}, {"oid": "4e777e4d0a5bd1e02b172d475abc90aac308d073", "url": "https://github.com/oracle/graal/commit/4e777e4d0a5bd1e02b172d475abc90aac308d073", "message": "fix unittest so it catches extra membar and fix wrong condition that causes extra membar", "committedDate": "2020-04-02T15:51:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwOTM2MQ==", "url": "https://github.com/oracle/graal/pull/2302#discussion_r403209361", "bodyText": "There slipped a tiny bug through: A few lines down is a node intrinsic that used this ctor with needsbarrier and this commit changed it to isVolatile, this caused some of our internal tests to fail. I fixed that internally and started the integration process.", "author": "davleopo", "createdAt": "2020-04-03T18:10:46Z", "path": "compiler/src/org.graalvm.compiler.nodes/src/org/graalvm/compiler/nodes/extended/RawStoreNode.java", "diffHunk": "@@ -58,21 +58,28 @@\n     @Input ValueNode value;\n     @OptionalInput(State) FrameState stateAfter;\n     private final boolean needsBarrier;\n+    private boolean isVolatile;\n \n     public RawStoreNode(ValueNode object, ValueNode offset, ValueNode value, JavaKind accessKind, LocationIdentity locationIdentity) {\n-        this(object, offset, value, accessKind, locationIdentity, true);\n+        this(object, offset, value, accessKind, locationIdentity, true, false, null, false);\n     }\n \n-    public RawStoreNode(ValueNode object, ValueNode offset, ValueNode value, JavaKind accessKind, LocationIdentity locationIdentity, boolean needsBarrier) {\n-        this(object, offset, value, accessKind, locationIdentity, needsBarrier, null, false);\n+    public RawStoreNode(ValueNode object, ValueNode offset, ValueNode value, JavaKind accessKind, LocationIdentity locationIdentity, boolean isVolatile) {", "originalCommit": "4e777e4d0a5bd1e02b172d475abc90aac308d073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg3ODkwMg==", "url": "https://github.com/oracle/graal/pull/2302#discussion_r403878902", "bodyText": "Thanks for fixing that one. And thanks for the quick turnaround on that one.", "author": "rwestrel", "createdAt": "2020-04-06T07:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzIwOTM2MQ=="}], "type": "inlineReview", "revised_code": null}]}