{"pr_number": 12214, "pr_title": "[BEAM-10438] Sync ZetaSQL function allowlist with full list from ZetaSQL", "pr_createdAt": "2020-07-10T00:10:33Z", "pr_url": "https://github.com/apache/beam/pull/12214", "timeline": [{"oid": "3bd3f0c9b9abf432c0b48b26ec72c0500c5510ed", "url": "https://github.com/apache/beam/commit/3bd3f0c9b9abf432c0b48b26ec72c0500c5510ed", "message": "Sync ZetaSQL function allowlist", "committedDate": "2020-07-09T23:58:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1NjY4MQ==", "url": "https://github.com/apache/beam/pull/12214#discussion_r452556681", "bodyText": "We have historically avoided the pattern of blocks of commented out constants. I don't have a strong opinion if this is short term, but @kennknowles might.", "author": "apilloud", "createdAt": "2020-07-10T00:14:26Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlStdOperatorMappingTable.java", "diffHunk": "@@ -29,127 +29,620 @@\n /** SqlStdOperatorMappingTable. */\n @Internal\n public class SqlStdOperatorMappingTable {\n+\n+  /**\n+   * Keep this list in sync with\n+   * https://github.com/google/zetasql/blob/master/zetasql/public/builtin_function.proto. Uncomment", "originalCommit": "3bd3f0c9b9abf432c0b48b26ec72c0500c5510ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1ODAxOQ==", "url": "https://github.com/apache/beam/pull/12214#discussion_r452558019", "bodyText": "Make sense. I can change it.", "author": "robinyqiu", "createdAt": "2020-07-10T00:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1NjY4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d617d73354f8554e66ddbe557e13497ca30c8839", "chunk": "diff --git a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlStdOperatorMappingTable.java b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlStdOperatorMappingTable.java\nindex 4d357d592b..855cb8efe3 100644\n--- a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlStdOperatorMappingTable.java\n+++ b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlStdOperatorMappingTable.java\n\n@@ -407,73 +407,65 @@ public class SqlStdOperatorMappingTable {\n           // FunctionSignatureId.FN_APPROX_TOP_SUM_NUMERIC, // approx_top_sum\n           // FunctionSignatureId.FN_APPROX_TOP_SUM_BIGNUMERIC, // approx_top_sum\n \n-          /*\n           // Approximate count functions that expose the intermediate sketch.\n           // These are all found in the \"hll_count.*\" namespace.\n-          FunctionSignatureId.FN_HLL_COUNT_MERGE, // hll_count.merge(bytes)\n-          FunctionSignatureId.FN_HLL_COUNT_EXTRACT, // hll_count.extract(bytes), scalar\n-          FunctionSignatureId.FN_HLL_COUNT_INIT_INT64, // hll_count.init(int64)\n-          FunctionSignatureId.FN_HLL_COUNT_INIT_NUMERIC, // hll_count.init(numeric)\n-          FunctionSignatureId.FN_HLL_COUNT_INIT_BIGNUMERIC, // hll_count.init(bignumeric)\n-          FunctionSignatureId.FN_HLL_COUNT_INIT_STRING, // hll_count.init(string)\n-          FunctionSignatureId.FN_HLL_COUNT_INIT_BYTES, // hll_count.init(bytes)\n-          FunctionSignatureId.FN_HLL_COUNT_MERGE_PARTIAL, // hll_count.merge_partial(bytes)\n-          */\n-\n-          /*\n+          // FunctionSignatureId.FN_HLL_COUNT_MERGE, // hll_count.merge(bytes)\n+          // FunctionSignatureId.FN_HLL_COUNT_EXTRACT, // hll_count.extract(bytes), scalar\n+          // FunctionSignatureId.FN_HLL_COUNT_INIT_INT64, // hll_count.init(int64)\n+          // FunctionSignatureId.FN_HLL_COUNT_INIT_NUMERIC, // hll_count.init(numeric)\n+          // FunctionSignatureId.FN_HLL_COUNT_INIT_BIGNUMERIC, // hll_count.init(bignumeric)\n+          // FunctionSignatureId.FN_HLL_COUNT_INIT_STRING, // hll_count.init(string)\n+          // FunctionSignatureId.FN_HLL_COUNT_INIT_BYTES, // hll_count.init(bytes)\n+          // FunctionSignatureId.FN_HLL_COUNT_MERGE_PARTIAL, // hll_count.merge_partial(bytes)\n+\n           // Statistical aggregate functions.\n-          FunctionSignatureId.FN_CORR, // corr\n-          FunctionSignatureId.FN_CORR_NUMERIC, // corr\n-          FunctionSignatureId.FN_COVAR_POP, // covar_pop\n-          FunctionSignatureId.FN_COVAR_POP_NUMERIC, // covar_pop\n-          FunctionSignatureId.FN_COVAR_SAMP, // covar_samp\n-          FunctionSignatureId.FN_COVAR_SAMP_NUMERIC, // covar_samp\n-          FunctionSignatureId.FN_STDDEV_POP, // stddev_pop\n-          FunctionSignatureId.FN_STDDEV_POP_NUMERIC, // stddev_pop\n-          FunctionSignatureId.FN_STDDEV_SAMP, // stddev_samp\n-          FunctionSignatureId.FN_STDDEV_SAMP_NUMERIC, // stddev_samp\n-          FunctionSignatureId.FN_VAR_POP, // var_pop\n-          FunctionSignatureId.FN_VAR_POP_NUMERIC, // var_pop\n-          FunctionSignatureId.FN_VAR_SAMP, // var_samp\n-          FunctionSignatureId.FN_VAR_SAMP_NUMERIC, // var_samp\n-          */\n+          // FunctionSignatureId.FN_CORR, // corr\n+          // FunctionSignatureId.FN_CORR_NUMERIC, // corr\n+          // FunctionSignatureId.FN_COVAR_POP, // covar_pop\n+          // FunctionSignatureId.FN_COVAR_POP_NUMERIC, // covar_pop\n+          // FunctionSignatureId.FN_COVAR_SAMP, // covar_samp\n+          // FunctionSignatureId.FN_COVAR_SAMP_NUMERIC, // covar_samp\n+          // FunctionSignatureId.FN_STDDEV_POP, // stddev_pop\n+          // FunctionSignatureId.FN_STDDEV_POP_NUMERIC, // stddev_pop\n+          // FunctionSignatureId.FN_STDDEV_SAMP, // stddev_samp\n+          // FunctionSignatureId.FN_STDDEV_SAMP_NUMERIC, // stddev_samp\n+          // FunctionSignatureId.FN_VAR_POP, // var_pop\n+          // FunctionSignatureId.FN_VAR_POP_NUMERIC, // var_pop\n+          // FunctionSignatureId.FN_VAR_SAMP, // var_samp\n+          // FunctionSignatureId.FN_VAR_SAMP_NUMERIC, // var_samp\n \n           // FunctionSignatureId.FN_COUNTIF, // countif\n \n-          /*\n           // Approximate quantiles functions that produce or consume intermediate\n           // sketches. All found in the \"kll_quantiles.*\" namespace.\n-          FunctionSignatureId.FN_KLL_QUANTILES_INIT_INT64,\n-          FunctionSignatureId.FN_KLL_QUANTILES_INIT_DOUBLE,\n-          FunctionSignatureId.FN_KLL_QUANTILES_MERGE_PARTIAL,\n-          FunctionSignatureId.FN_KLL_QUANTILES_MERGE_INT64,\n-          FunctionSignatureId.FN_KLL_QUANTILES_MERGE_DOUBLE,\n-          FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_INT64, // scalar\n-          FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_DOUBLE, // scalar\n-          FunctionSignatureId.FN_KLL_QUANTILES_MERGE_POINT_INT64,\n-          FunctionSignatureId.FN_KLL_QUANTILES_MERGE_POINT_DOUBLE,\n-          FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_POINT_INT64, // scalar\n-          FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_POINT_DOUBLE, // scalar\n-          */\n-\n-          /*\n+          // FunctionSignatureId.FN_KLL_QUANTILES_INIT_INT64,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_INIT_DOUBLE,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_MERGE_PARTIAL,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_MERGE_INT64,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_MERGE_DOUBLE,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_INT64, // scalar\n+          // FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_DOUBLE, // scalar\n+          // FunctionSignatureId.FN_KLL_QUANTILES_MERGE_POINT_INT64,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_MERGE_POINT_DOUBLE,\n+          // FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_POINT_INT64, // scalar\n+          // FunctionSignatureId.FN_KLL_QUANTILES_EXTRACT_POINT_DOUBLE, // scalar\n+\n           // Analytic functions.\n-          FunctionSignatureId.FN_DENSE_RANK, // dense_rank\n-          FunctionSignatureId.FN_RANK, // rank\n-          FunctionSignatureId.FN_ROW_NUMBER, // row_number\n-          FunctionSignatureId.FN_PERCENT_RANK, // percent_rank\n-          FunctionSignatureId.FN_CUME_DIST, // cume_dist\n-          FunctionSignatureId.FN_NTILE, // ntile\n-          FunctionSignatureId.FN_LEAD, // lead\n-          FunctionSignatureId.FN_LAG, // lag\n-          FunctionSignatureId.FN_FIRST_VALUE, // first_value\n-          FunctionSignatureId.FN_LAST_VALUE, // last_value\n-          FunctionSignatureId.FN_NTH_VALUE, // nth_value\n-          FunctionSignatureId.FN_PERCENTILE_CONT, // percentile_cont\n-          FunctionSignatureId.FN_PERCENTILE_CONT_NUMERIC, // percentile_cont\n-          FunctionSignatureId.FN_PERCENTILE_DISC, // percentile_disc\n-          FunctionSignatureId.FN_PERCENTILE_DISC_NUMERIC, // percentile_disc\n-          */\n+          // FunctionSignatureId.FN_DENSE_RANK, // dense_rank\n+          // FunctionSignatureId.FN_RANK, // rank\n+          // FunctionSignatureId.FN_ROW_NUMBER, // row_number\n+          // FunctionSignatureId.FN_PERCENT_RANK, // percent_rank\n+          // FunctionSignatureId.FN_CUME_DIST, // cume_dist\n+          // FunctionSignatureId.FN_NTILE, // ntile\n+          // FunctionSignatureId.FN_LEAD, // lead\n+          // FunctionSignatureId.FN_LAG, // lag\n+          // FunctionSignatureId.FN_FIRST_VALUE, // first_value\n+          // FunctionSignatureId.FN_LAST_VALUE, // last_value\n+          // FunctionSignatureId.FN_NTH_VALUE, // nth_value\n+          // FunctionSignatureId.FN_PERCENTILE_CONT, // percentile_cont\n+          // FunctionSignatureId.FN_PERCENTILE_CONT_NUMERIC, // percentile_cont\n+          // FunctionSignatureId.FN_PERCENTILE_DISC, // percentile_disc\n+          // FunctionSignatureId.FN_PERCENTILE_DISC_NUMERIC, // percentile_disc\n \n           // Misc functions.\n           // FunctionSignatureId.FN_BIT_CAST_INT64_TO_INT64, // bit_cast_to_int64(int64)\n"}}, {"oid": "d617d73354f8554e66ddbe557e13497ca30c8839", "url": "https://github.com/apache/beam/commit/d617d73354f8554e66ddbe557e13497ca30c8839", "message": "Address comment", "committedDate": "2020-07-10T00:26:10Z", "type": "commit"}, {"oid": "7f043762866057716d4ea2d020a12d972a671523", "url": "https://github.com/apache/beam/commit/7f043762866057716d4ea2d020a12d972a671523", "message": "Fix bug", "committedDate": "2020-07-10T00:42:00Z", "type": "commit"}]}