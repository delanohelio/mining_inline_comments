{"pr_number": 12145, "pr_title": "[BEAM-10136] [BEAM-10135] Add JdbcIO for cross-language with python wrapper", "pr_createdAt": "2020-07-01T05:52:12Z", "pr_url": "https://github.com/apache/beam/pull/12145", "timeline": [{"oid": "2d4f92aeb85b441037dba8f80ca3ca57791efb40", "url": "https://github.com/apache/beam/commit/2d4f92aeb85b441037dba8f80ca3ca57791efb40", "message": "[BEAM-10135] Add jdbc xlang read", "committedDate": "2020-07-01T06:11:54Z", "type": "forcePushed"}, {"oid": "9f8adf0d80898e852a2014d2157dafa9afe31853", "url": "https://github.com/apache/beam/commit/9f8adf0d80898e852a2014d2157dafa9afe31853", "message": "[BEAM-10135] Add jdbc xlang read", "committedDate": "2020-07-01T07:11:16Z", "type": "forcePushed"}, {"oid": "400188bf81318d9257c00dda8f4f6528458fc8ee", "url": "https://github.com/apache/beam/commit/400188bf81318d9257c00dda8f4f6528458fc8ee", "message": "[BEAM-10135] Add jdbc xlang read", "committedDate": "2020-07-01T07:37:23Z", "type": "forcePushed"}, {"oid": "2da703eb22e9735504ff69a76f62d91f8ed2d779", "url": "https://github.com/apache/beam/commit/2da703eb22e9735504ff69a76f62d91f8ed2d779", "message": "[BEAM-10135] Add jdbc xlang read", "committedDate": "2020-07-01T08:43:43Z", "type": "forcePushed"}, {"oid": "909fdefd7e2afe7db42b36738852d0a63f79f6b0", "url": "https://github.com/apache/beam/commit/909fdefd7e2afe7db42b36738852d0a63f79f6b0", "message": "[BEAM-10136][BEAM-10135] Add info to changes and website", "committedDate": "2020-07-01T10:16:59Z", "type": "forcePushed"}, {"oid": "079a4939623190c2105f5a717ba9f12cfd48af1e", "url": "https://github.com/apache/beam/commit/079a4939623190c2105f5a717ba9f12cfd48af1e", "message": "[BEAM-10136][BEAM-10135] Add info to changes and website", "committedDate": "2020-07-01T10:21:35Z", "type": "forcePushed"}, {"oid": "7244bb824821283a351dc504d3b132e72038e7d3", "url": "https://github.com/apache/beam/commit/7244bb824821283a351dc504d3b132e72038e7d3", "message": "[BEAM-10136][BEAM-10135] Add info to changes and website", "committedDate": "2020-07-01T17:39:08Z", "type": "forcePushed"}, {"oid": "6223f564eac9ac90727e59ec17849487629465ca", "url": "https://github.com/apache/beam/commit/6223f564eac9ac90727e59ec17849487629465ca", "message": "[BEAM-10136][BEAM-10135] Add info to CHANGES.md and portability website", "committedDate": "2020-07-02T06:49:45Z", "type": "forcePushed"}, {"oid": "dc4e8de83a4f737ae3ca40694c9621dea6e2ca15", "url": "https://github.com/apache/beam/commit/dc4e8de83a4f737ae3ca40694c9621dea6e2ca15", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-02T06:57:15Z", "type": "forcePushed"}, {"oid": "61acea79a67ec3efb08e4e52e45bff9740490067", "url": "https://github.com/apache/beam/commit/61acea79a67ec3efb08e4e52e45bff9740490067", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-02T09:52:03Z", "type": "forcePushed"}, {"oid": "13b0f61a406fdc6fe2a8b966f93d6900f443506a", "url": "https://github.com/apache/beam/commit/13b0f61a406fdc6fe2a8b966f93d6900f443506a", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-02T10:45:15Z", "type": "forcePushed"}, {"oid": "671b1b1f3dd080c7202fa0dadf881839ab354b7b", "url": "https://github.com/apache/beam/commit/671b1b1f3dd080c7202fa0dadf881839ab354b7b", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-05T15:07:20Z", "type": "forcePushed"}, {"oid": "859f1d1777b22c4398901f4f1b8a7e79a5564318", "url": "https://github.com/apache/beam/commit/859f1d1777b22c4398901f4f1b8a7e79a5564318", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-05T18:04:15Z", "type": "forcePushed"}, {"oid": "bc5b88120aff2767a1864adf2ef73e048de252a9", "url": "https://github.com/apache/beam/commit/bc5b88120aff2767a1864adf2ef73e048de252a9", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-05T18:05:48Z", "type": "forcePushed"}, {"oid": "5daf3147a2d4ff890359a2375425d302e90e9a93", "url": "https://github.com/apache/beam/commit/5daf3147a2d4ff890359a2375425d302e90e9a93", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-06T09:15:39Z", "type": "forcePushed"}, {"oid": "385cae01d1b860846d872ac18955f1db92f3e71b", "url": "https://github.com/apache/beam/commit/385cae01d1b860846d872ac18955f1db92f3e71b", "message": "[BEAM-10171] Add info about Cross-language JdbcIO to CHANGES.md and portability website", "committedDate": "2020-07-06T09:51:16Z", "type": "forcePushed"}, {"oid": "ea242c5b83ad9f2dfb5b7e811f6e9f2a1ba5e71f", "url": "https://github.com/apache/beam/commit/ea242c5b83ad9f2dfb5b7e811f6e9f2a1ba5e71f", "message": "Add localhost differentation like in kafka test", "committedDate": "2020-07-06T13:29:36Z", "type": "forcePushed"}, {"oid": "85d72fe1fb1620f0896626ee6286c246513eb6e0", "url": "https://github.com/apache/beam/commit/85d72fe1fb1620f0896626ee6286c246513eb6e0", "message": "Add jdbc dependency to the test expansion service", "committedDate": "2020-07-06T11:00:41Z", "type": "forcePushed"}, {"oid": "300c98406324960c434bc7208f36e49a965349b9", "url": "https://github.com/apache/beam/commit/300c98406324960c434bc7208f36e49a965349b9", "message": "Try with testExpansionService in python code", "committedDate": "2020-07-07T06:35:34Z", "type": "forcePushed"}, {"oid": "090a99e14a4369ae2c8b24abc62359cd162cf287", "url": "https://github.com/apache/beam/commit/090a99e14a4369ae2c8b24abc62359cd162cf287", "message": "Move execution of Jdbc test to portable postcommit", "committedDate": "2020-07-08T06:37:40Z", "type": "forcePushed"}, {"oid": "f01ff649aaaba379efb611e24be5b6cc1439d0d9", "url": "https://github.com/apache/beam/commit/f01ff649aaaba379efb611e24be5b6cc1439d0d9", "message": "Move execution of Jdbc test to portable postcommit", "committedDate": "2020-07-08T06:38:10Z", "type": "forcePushed"}, {"oid": "4ea535f7f82f5ea44e14689f27bc0c3111ea4713", "url": "https://github.com/apache/beam/commit/4ea535f7f82f5ea44e14689f27bc0c3111ea4713", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T08:13:21Z", "type": "forcePushed"}, {"oid": "d47c018b74fbd41c35617cafbb142d2f752a7490", "url": "https://github.com/apache/beam/commit/d47c018b74fbd41c35617cafbb142d2f752a7490", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T08:18:53Z", "type": "forcePushed"}, {"oid": "5d059b48a1da4ed5145c0afee958a9f9fa9fe25d", "url": "https://github.com/apache/beam/commit/5d059b48a1da4ed5145c0afee958a9f9fa9fe25d", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T08:39:17Z", "type": "forcePushed"}, {"oid": "d1ca780fa37f3a5e5b530e3201976856884abb21", "url": "https://github.com/apache/beam/commit/d1ca780fa37f3a5e5b530e3201976856884abb21", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T10:18:16Z", "type": "forcePushed"}, {"oid": "5eec16547c5b0d2a416f3d193f83d6dbb1c18321", "url": "https://github.com/apache/beam/commit/5eec16547c5b0d2a416f3d193f83d6dbb1c18321", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T11:23:01Z", "type": "forcePushed"}, {"oid": "649ed637239c8c33e86488bdebdcfd0fa6350058", "url": "https://github.com/apache/beam/commit/649ed637239c8c33e86488bdebdcfd0fa6350058", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-08T20:52:20Z", "type": "forcePushed"}, {"oid": "439d71dc619de750ce112332bff82a0e1391124c", "url": "https://github.com/apache/beam/commit/439d71dc619de750ce112332bff82a0e1391124c", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-09T05:31:03Z", "type": "forcePushed"}, {"oid": "6d6cbea658767c87c3df663af4c29c6ba793a088", "url": "https://github.com/apache/beam/commit/6d6cbea658767c87c3df663af4c29c6ba793a088", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-10T04:42:04Z", "type": "forcePushed"}, {"oid": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "url": "https://github.com/apache/beam/commit/a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-10T17:14:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNjcwNA==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453026704", "bodyText": "How about renaming this to \"JdbcReadRowsRegistrar\". Current name make this sounds like a transform while in reality this is just a utility to register the existing transform with the expansion service.", "author": "chamikaramj", "createdAt": "2020-07-10T19:01:15Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PBegin;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalRead implements ExternalTransformRegistrar {", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2MTE5Ng==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453061196", "bodyText": "Good point, I'll change it.", "author": "piotr-szuberski", "createdAt": "2020-07-10T20:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNjcwNA=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nsimilarity index 95%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nindex e4e19263a6..54ef844947 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\n\n@@ -34,13 +34,13 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Immutabl\n /** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n @Experimental(Kind.PORTABILITY)\n @AutoService(ExternalTransformRegistrar.class)\n-public class JdbcExternalRead implements ExternalTransformRegistrar {\n+public class JdbcReadRowsRegistrar implements ExternalTransformRegistrar {\n \n-  public static final String URN = \"beam:external:java:jdbc:read:v1\";\n+  public static final String URN = \"beam:external:java:jdbc:read_rows:v1\";\n \n   @Override\n   public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n-    return ImmutableMap.of(URN, JdbcExternalRead.Builder.class);\n+    return ImmutableMap.of(URN, JdbcReadRowsRegistrar.Builder.class);\n   }\n \n   /** Parameters class to expose the Read transform to an external SDK. */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNzM3MQ==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453027371", "bodyText": "Probably \"beam:external:java:jdbc:read_rows:v1\" is more unique to this transform", "author": "chamikaramj", "createdAt": "2020-07-10T19:02:46Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PBegin;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalRead implements ExternalTransformRegistrar {\n+\n+  public static final String URN = \"beam:external:java:jdbc:read:v1\";", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2MTgwNg==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453061806", "bodyText": "Sure! Done.", "author": "piotr-szuberski", "createdAt": "2020-07-10T20:26:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNzM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nsimilarity index 95%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nindex e4e19263a6..54ef844947 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\n\n@@ -34,13 +34,13 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Immutabl\n /** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n @Experimental(Kind.PORTABILITY)\n @AutoService(ExternalTransformRegistrar.class)\n-public class JdbcExternalRead implements ExternalTransformRegistrar {\n+public class JdbcReadRowsRegistrar implements ExternalTransformRegistrar {\n \n-  public static final String URN = \"beam:external:java:jdbc:read:v1\";\n+  public static final String URN = \"beam:external:java:jdbc:read_rows:v1\";\n \n   @Override\n   public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n-    return ImmutableMap.of(URN, JdbcExternalRead.Builder.class);\n+    return ImmutableMap.of(URN, JdbcReadRowsRegistrar.Builder.class);\n   }\n \n   /** Parameters class to expose the Read transform to an external SDK. */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODE1NA==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453028154", "bodyText": "JdbcWriteRegistrar", "author": "chamikaramj", "createdAt": "2020-07-10T19:04:28Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.sql.Date;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.PDone;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.Write} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalWrite implements ExternalTransformRegistrar {", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2MTkyMA==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453061920", "bodyText": "Done", "author": "piotr-szuberski", "createdAt": "2020-07-10T20:26:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nsimilarity index 58%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nindex 0cb6a85b7e..a145065546 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\n\n@@ -26,6 +26,7 @@ import java.util.Map;\n import org.apache.beam.sdk.annotations.Experimental;\n import org.apache.beam.sdk.annotations.Experimental.Kind;\n import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.BeamRowPreparedStatementSetter;\n import org.apache.beam.sdk.io.jdbc.JdbcIO;\n import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n import org.apache.beam.sdk.schemas.Schema;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODY4Mw==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453028683", "bodyText": "How about calling this \"BeamRowPreparedStatementSetter\" and moving this out of external directory ? This sounds like a more generic utility.", "author": "chamikaramj", "createdAt": "2020-07-10T19:05:41Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.sql.Date;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.PDone;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.Write} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalWrite implements ExternalTransformRegistrar {\n+\n+  public static final String URN = \"beam:external:java:jdbc:write:v1\";\n+\n+  @Override\n+  public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n+    return ImmutableMap.of(URN, JdbcExternalWrite.Builder.class);\n+  }\n+\n+  /** Parameters class to expose the Write transform to an external SDK. */\n+  public static class WriteConfiguration extends Configuration {\n+    private String statement;\n+\n+    public void setStatement(String statement) {\n+      this.statement = statement;\n+    }\n+  }\n+\n+  public static class Builder\n+      implements ExternalTransformBuilder<WriteConfiguration, PCollection<Row>, PDone> {\n+    @Override\n+    public PTransform<PCollection<Row>, PDone> buildExternal(WriteConfiguration configuration) {\n+      DataSourceConfiguration dataSourceConfiguration = configuration.getDataSourceConfiguration();\n+\n+      // TODO: BEAM-10396 use writeRows() when it's available\n+      return JdbcIO.<Row>write()\n+          .withDataSourceConfiguration(dataSourceConfiguration)\n+          .withStatement(configuration.statement)\n+          .withPreparedStatementSetter(new XlangPreparedStatementSetter());\n+    }\n+\n+    private static class XlangPreparedStatementSetter", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2MzAwNg==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453063006", "bodyText": "Good idea. Done.", "author": "piotr-szuberski", "createdAt": "2020-07-10T20:29:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyODY4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nsimilarity index 58%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nindex 0cb6a85b7e..a145065546 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\n\n@@ -26,6 +26,7 @@ import java.util.Map;\n import org.apache.beam.sdk.annotations.Experimental;\n import org.apache.beam.sdk.annotations.Experimental.Kind;\n import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.BeamRowPreparedStatementSetter;\n import org.apache.beam.sdk.io.jdbc.JdbcIO;\n import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n import org.apache.beam.sdk.schemas.Schema;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMTQyOQ==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453031429", "bodyText": "Please add unit tests for these conversions.", "author": "chamikaramj", "createdAt": "2020-07-10T19:12:11Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.sql.Date;\n+import java.sql.PreparedStatement;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.schemas.Schema;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.PDone;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.Write} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalWrite implements ExternalTransformRegistrar {\n+\n+  public static final String URN = \"beam:external:java:jdbc:write:v1\";\n+\n+  @Override\n+  public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n+    return ImmutableMap.of(URN, JdbcExternalWrite.Builder.class);\n+  }\n+\n+  /** Parameters class to expose the Write transform to an external SDK. */\n+  public static class WriteConfiguration extends Configuration {\n+    private String statement;\n+\n+    public void setStatement(String statement) {\n+      this.statement = statement;\n+    }\n+  }\n+\n+  public static class Builder\n+      implements ExternalTransformBuilder<WriteConfiguration, PCollection<Row>, PDone> {\n+    @Override\n+    public PTransform<PCollection<Row>, PDone> buildExternal(WriteConfiguration configuration) {\n+      DataSourceConfiguration dataSourceConfiguration = configuration.getDataSourceConfiguration();\n+\n+      // TODO: BEAM-10396 use writeRows() when it's available\n+      return JdbcIO.<Row>write()\n+          .withDataSourceConfiguration(dataSourceConfiguration)\n+          .withStatement(configuration.statement)\n+          .withPreparedStatementSetter(new XlangPreparedStatementSetter());\n+    }\n+\n+    private static class XlangPreparedStatementSetter\n+        implements JdbcIO.PreparedStatementSetter<Row> {\n+      @Override\n+      public void setParameters(Row row, PreparedStatement statement) throws SQLException {\n+        List<Schema.Field> fieldTypes = row.getSchema().getFields();\n+        for (int i = 0; i < fieldTypes.size(); ++i) {\n+          Schema.TypeName typeName = fieldTypes.get(i).getType().getTypeName();\n+          switch (typeName) {\n+            case DATETIME:", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE1NzA3NQ==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453157075", "bodyText": "@chamikaramj  I'll do a separate PR for this on Monday. I don't get how should I deal with such PRs that depend on each other? I'm used to Gerrit where every commit is a separate PR rebased on the previous commit. But here it would be a duplicate PR with one more commit. Is that ok or there is a smarter way to publish a PR based on the changes that are not merged yet and reviewed in another PR?", "author": "piotr-szuberski", "createdAt": "2020-07-11T05:11:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMTQyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nsimilarity index 58%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\nindex 0cb6a85b7e..a145065546 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalWrite.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcWriteRegistrar.java\n\n@@ -26,6 +26,7 @@ import java.util.Map;\n import org.apache.beam.sdk.annotations.Experimental;\n import org.apache.beam.sdk.annotations.Experimental.Kind;\n import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.BeamRowPreparedStatementSetter;\n import org.apache.beam.sdk.io.jdbc.JdbcIO;\n import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n import org.apache.beam.sdk.schemas.Schema;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMzAzNQ==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453033035", "bodyText": "How about adding unit tests for Builder classes for read and write ?", "author": "chamikaramj", "createdAt": "2020-07-10T19:15:39Z", "path": "sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.io.jdbc.external;\n+\n+import com.google.auto.service.AutoService;\n+import java.util.Map;\n+import org.apache.beam.sdk.annotations.Experimental;\n+import org.apache.beam.sdk.annotations.Experimental.Kind;\n+import org.apache.beam.sdk.expansion.ExternalTransformRegistrar;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO;\n+import org.apache.beam.sdk.io.jdbc.JdbcIO.DataSourceConfiguration;\n+import org.apache.beam.sdk.transforms.ExternalTransformBuilder;\n+import org.apache.beam.sdk.transforms.PTransform;\n+import org.apache.beam.sdk.values.PBegin;\n+import org.apache.beam.sdk.values.PCollection;\n+import org.apache.beam.sdk.values.Row;\n+import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.ImmutableMap;\n+\n+/** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n+@Experimental(Kind.PORTABILITY)\n+@AutoService(ExternalTransformRegistrar.class)\n+public class JdbcExternalRead implements ExternalTransformRegistrar {\n+\n+  public static final String URN = \"beam:external:java:jdbc:read:v1\";\n+\n+  @Override\n+  public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n+    return ImmutableMap.of(URN, JdbcExternalRead.Builder.class);\n+  }\n+\n+  /** Parameters class to expose the Read transform to an external SDK. */\n+  public static class ReadConfiguration extends Configuration {\n+    private String query;\n+    private Integer fetchSize;\n+    private Boolean outputParallelization;\n+\n+    public void setOutputParallelization(Boolean outputParallelization) {\n+      this.outputParallelization = outputParallelization;\n+    }\n+\n+    public void setFetchSize(Integer fetchSize) {\n+      this.fetchSize = fetchSize;\n+    }\n+\n+    public void setQuery(String query) {\n+      this.query = query;\n+    }\n+  }\n+\n+  public static class Builder\n+      implements ExternalTransformBuilder<ReadConfiguration, PBegin, PCollection<Row>> {\n+    @Override\n+    public PTransform<PBegin, PCollection<Row>> buildExternal(ReadConfiguration configuration) {\n+      DataSourceConfiguration dataSourceConfiguration = configuration.getDataSourceConfiguration();\n+\n+      JdbcIO.ReadRows readRows =", "originalCommit": "a9a07c2668a7ec6f3b9a915d56d9672dd4e50f55", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA2ODE4Mg==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453068182", "bodyText": "Ok, I'll do that on Monday. Could it be on separate PR? This one is already a big one.", "author": "piotr-szuberski", "createdAt": "2020-07-10T20:43:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMzAzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3MTgwMg==", "url": "https://github.com/apache/beam/pull/12145#discussion_r453071802", "bodyText": "A separate PR for this is fine. Thanks.", "author": "chamikaramj", "createdAt": "2020-07-10T20:52:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMzAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "chunk": "diff --git a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nsimilarity index 95%\nrename from sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\nrename to sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\nindex e4e19263a6..54ef844947 100644\n--- a/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcExternalRead.java\n+++ b/sdks/java/io/jdbc/src/main/java/org/apache/beam/sdk/io/jdbc/external/JdbcReadRowsRegistrar.java\n\n@@ -34,13 +34,13 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Immutabl\n /** Exposes {@link JdbcIO.ReadRows} as an external transform for cross-language usage. */\n @Experimental(Kind.PORTABILITY)\n @AutoService(ExternalTransformRegistrar.class)\n-public class JdbcExternalRead implements ExternalTransformRegistrar {\n+public class JdbcReadRowsRegistrar implements ExternalTransformRegistrar {\n \n-  public static final String URN = \"beam:external:java:jdbc:read:v1\";\n+  public static final String URN = \"beam:external:java:jdbc:read_rows:v1\";\n \n   @Override\n   public Map<String, Class<? extends ExternalTransformBuilder>> knownBuilders() {\n-    return ImmutableMap.of(URN, JdbcExternalRead.Builder.class);\n+    return ImmutableMap.of(URN, JdbcReadRowsRegistrar.Builder.class);\n   }\n \n   /** Parameters class to expose the Read transform to an external SDK. */\n"}}, {"oid": "c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "url": "https://github.com/apache/beam/commit/c53cdb84d2b8e8a823649bd646d6d28697aa1cec", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-10T20:53:22Z", "type": "forcePushed"}, {"oid": "544aacd6e8b24e7652ec310c00764b9ae7c7f7c2", "url": "https://github.com/apache/beam/commit/544aacd6e8b24e7652ec310c00764b9ae7c7f7c2", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-11T06:08:34Z", "type": "forcePushed"}, {"oid": "c5454cd24107987b06edfb4a77d176000fa54146", "url": "https://github.com/apache/beam/commit/c5454cd24107987b06edfb4a77d176000fa54146", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-11T06:17:21Z", "type": "forcePushed"}, {"oid": "bcb8f5df583becce16e7c4ff501bacb05a8f3ef6", "url": "https://github.com/apache/beam/commit/bcb8f5df583becce16e7c4ff501bacb05a8f3ef6", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-11T06:20:14Z", "type": "forcePushed"}, {"oid": "b0cf052e93a4d50c7572dcaa24051e594279cca0", "url": "https://github.com/apache/beam/commit/b0cf052e93a4d50c7572dcaa24051e594279cca0", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-11T06:28:49Z", "type": "forcePushed"}, {"oid": "a115bc0920562b5cc41ea959e9eac1e9fbe9baf3", "url": "https://github.com/apache/beam/commit/a115bc0920562b5cc41ea959e9eac1e9fbe9baf3", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-13T08:12:57Z", "type": "forcePushed"}, {"oid": "7b91748df57ef30ad902849af200d06fe1138e74", "url": "https://github.com/apache/beam/commit/7b91748df57ef30ad902849af200d06fe1138e74", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-13T09:27:41Z", "type": "forcePushed"}, {"oid": "17255a59a0e34e942e3d7c0b918e5a8f2a582a43", "url": "https://github.com/apache/beam/commit/17255a59a0e34e942e3d7c0b918e5a8f2a582a43", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-14T15:23:04Z", "type": "forcePushed"}, {"oid": "7abf51914584b06e6a7ffafd584ff7e44d0acaea", "url": "https://github.com/apache/beam/commit/7abf51914584b06e6a7ffafd584ff7e44d0acaea", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-14T15:33:51Z", "type": "forcePushed"}, {"oid": "17f7bb4069fe90576594510a8dc1b9a16abbc788", "url": "https://github.com/apache/beam/commit/17f7bb4069fe90576594510a8dc1b9a16abbc788", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-14T16:45:04Z", "type": "forcePushed"}, {"oid": "378c626e7383c975b0dab2917bf0805be04ece45", "url": "https://github.com/apache/beam/commit/378c626e7383c975b0dab2917bf0805be04ece45", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-15T08:34:23Z", "type": "forcePushed"}, {"oid": "8e5957d4223c84944e6acd534d2e74b39980454b", "url": "https://github.com/apache/beam/commit/8e5957d4223c84944e6acd534d2e74b39980454b", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-15T08:47:59Z", "type": "forcePushed"}, {"oid": "5b56f7f5beaedd6a4269152e09ed75ca85f094ac", "url": "https://github.com/apache/beam/commit/5b56f7f5beaedd6a4269152e09ed75ca85f094ac", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-15T09:30:24Z", "type": "forcePushed"}, {"oid": "ccf95a03749d834d039f51832b8f760c7dc5ff68", "url": "https://github.com/apache/beam/commit/ccf95a03749d834d039f51832b8f760c7dc5ff68", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-17T08:01:29Z", "type": "forcePushed"}, {"oid": "7e5ac84a71cfeaa6d8f3f668e994eddf862e8a9e", "url": "https://github.com/apache/beam/commit/7e5ac84a71cfeaa6d8f3f668e994eddf862e8a9e", "message": "[BEAM-10136] Add JdbcIO Write Cross-language transform", "committedDate": "2020-07-17T13:43:35Z", "type": "commit"}, {"oid": "74dcab3f1ed292fd0a3cd68600feb1c01225b3fa", "url": "https://github.com/apache/beam/commit/74dcab3f1ed292fd0a3cd68600feb1c01225b3fa", "message": "[BEAM-10135] Add JdbcIO Read Cross-language transform", "committedDate": "2020-07-17T13:43:35Z", "type": "commit"}, {"oid": "5a51cc2a79c210c344deb6074498a01a0cc64dca", "url": "https://github.com/apache/beam/commit/5a51cc2a79c210c344deb6074498a01a0cc64dca", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-17T13:54:01Z", "type": "forcePushed"}, {"oid": "12c2bb80755494d2163c06ff652a7ff5dc102c3d", "url": "https://github.com/apache/beam/commit/12c2bb80755494d2163c06ff652a7ff5dc102c3d", "message": "[BEAM-10135][BEAM-10136] Add Python wrapper for Cross-language JdbcIO transforms", "committedDate": "2020-07-17T13:56:30Z", "type": "commit"}, {"oid": "1f51cb4c8e2265543aa250868534f3de78c22db5", "url": "https://github.com/apache/beam/commit/1f51cb4c8e2265543aa250868534f3de78c22db5", "message": "[BEAM-10135][BEAM-10136] Add integration tests for JdbcIO python wrapper", "committedDate": "2020-07-17T13:56:34Z", "type": "commit"}, {"oid": "7e7c06f00755a9258c840b02d8c2b613281df87e", "url": "https://github.com/apache/beam/commit/7e7c06f00755a9258c840b02d8c2b613281df87e", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-17T13:56:42Z", "type": "forcePushed"}, {"oid": "c82c6ecfeb6432f59359a1455fc691f500af71ef", "url": "https://github.com/apache/beam/commit/c82c6ecfeb6432f59359a1455fc691f500af71ef", "message": "Run Jdbc cross-language tests in postcommit instead of separate gradle task", "committedDate": "2020-07-17T18:27:30Z", "type": "forcePushed"}, {"oid": "4c4b1577b38269e63d939b2b89e2ee9bba930190", "url": "https://github.com/apache/beam/commit/4c4b1577b38269e63d939b2b89e2ee9bba930190", "message": "[BEAM-10135][BEAM-10136] AddJdbcIO python wrapper integration tests to Python postcommit", "committedDate": "2020-07-17T19:44:52Z", "type": "commit"}, {"oid": "62a8342fb8558a4bb29505af83ac263ba5fe052d", "url": "https://github.com/apache/beam/commit/62a8342fb8558a4bb29505af83ac263ba5fe052d", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-17T19:45:02Z", "type": "commit"}, {"oid": "62a8342fb8558a4bb29505af83ac263ba5fe052d", "url": "https://github.com/apache/beam/commit/62a8342fb8558a4bb29505af83ac263ba5fe052d", "message": "[BEAM-10171] Update the website with JdbcIO cross-language support completed", "committedDate": "2020-07-17T19:45:02Z", "type": "forcePushed"}]}