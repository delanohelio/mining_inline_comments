{"pr_number": 12102, "pr_title": "[BEAM-8133] Update influx db publisher", "pr_createdAt": "2020-06-26T12:35:11Z", "pr_url": "https://github.com/apache/beam/pull/12102", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2ODY1Mg==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446168652", "bodyText": "What about something like this?\nBy default, InfluxDB treats all values as floats. We need to add 'i' suffix to interpret the value as an integer.", "author": "kamilwu", "createdAt": "2020-06-26T13:00:08Z", "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java", "diffHunk": "@@ -255,7 +255,9 @@ private static String produceMeasurement(\n     schemaResults.put(\"timestamp\", timestamp);\n     schemaResults.put(\"runner\", runner);\n     schemaResults.put(\"measurement\", measurement);\n-    schemaResults.put(\"runtimeMs\", runtimeMs);\n+    schemaResults.put(\n+        \"runtimeMs\",\n+        runtimeMs + \"i\"); // we need to add 'i' suffix since influx default type is float", "originalCommit": "7075133afa152ff0d1609e77a4dd94784ae799f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3MzIyOA==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446173228", "bodyText": "Fine for me, updated", "author": "pawelpasterz", "createdAt": "2020-06-26T13:09:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2ODY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "faa50b2efe0ed8fcdce55d54c8a362c8d5b3533d", "chunk": "diff --git a/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java b/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\nindex 77bfa7e0aa..12dd225319 100644\n--- a/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\n+++ b/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\n\n@@ -257,7 +257,9 @@ public class Main {\n     schemaResults.put(\"measurement\", measurement);\n     schemaResults.put(\n         \"runtimeMs\",\n-        runtimeMs + \"i\"); // we need to add 'i' suffix since influx default type is float\n+        runtimeMs\n+            + \"i\"); // By default, InfluxDB treats all number values as floats. We need to add 'i'\n+    // suffix to interpret the value as an integer.\n \n     return schemaResults;\n   }\n"}}, {"oid": "faa50b2efe0ed8fcdce55d54c8a362c8d5b3533d", "url": "https://github.com/apache/beam/commit/faa50b2efe0ed8fcdce55d54c8a362c8d5b3533d", "message": "[BEAM-8133] Update influx db publisher", "committedDate": "2020-06-26T13:09:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3Mzk0MA==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446173940", "bodyText": "If you want to make it even more secure and resilient, you can check what's the value of Content-Type header. For JSON, it must be application/json. Some HTTP libraries has convenient methods for doing that.", "author": "kamilwu", "createdAt": "2020-06-26T13:10:41Z", "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBPublisher.java", "diffHunk": "@@ -146,16 +157,29 @@ private static HttpPost providePOSTRequest(final InfluxDBSettings settings) {\n   private static void executeWithVerification(\n       final HttpPost postRequest, final HttpClientBuilder builder) throws IOException {\n     try (final CloseableHttpResponse response = builder.build().execute(postRequest)) {\n-      is2xx(response.getStatusLine().getStatusCode());\n+      is2xx(response);\n     }\n   }\n \n-  private static void is2xx(final int code) throws IOException {\n+  private static void is2xx(final HttpResponse response) throws IOException {\n+    final int code = response.getStatusLine().getStatusCode();\n     if (code < 200 || code >= 300) {\n-      throw new IOException(\"Response code: \" + code);\n+      throw new IOException(\n+          \"Response code: \" + code + \". Reason: \" + getErrorMessage(response.getEntity()));\n     }\n   }\n \n+  private static String getErrorMessage(final HttpEntity entity) throws IOException {\n+    final Header encodingHeader = entity.getContentEncoding();", "originalCommit": "faa50b2efe0ed8fcdce55d54c8a362c8d5b3533d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3NjIxOA==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446176218", "bodyText": "Yes, that's why I check encoding type to be prepared for case when influx would stop sending us JSON (and start something else)\nfinal Charset encoding =\n        encodingHeader == null\n            ? StandardCharsets.UTF_8\n            : Charsets.toCharset(encodingHeader.getValue());", "author": "pawelpasterz", "createdAt": "2020-06-26T13:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3Mzk0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIyODk2OA==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446228968", "bodyText": "Isn't it possible that you get UTF-8-encoded data, but not necessarily JSON?", "author": "kamilwu", "createdAt": "2020-06-26T14:45:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE3Mzk0MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIyOTQ2Mg==", "url": "https://github.com/apache/beam/pull/12102#discussion_r446229462", "bodyText": "We should do the same for numResults. Now the schema that is being created is:\nfieldKey   fieldType\n--------   ---------\nnumResults float\nruntimeMs  integer\n\nAnd we need numResults as an integer too. I'm sorry I didn't notice that earlier.", "author": "kamilwu", "createdAt": "2020-06-26T14:46:50Z", "path": "sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java", "diffHunk": "@@ -255,7 +255,11 @@ private static String produceMeasurement(\n     schemaResults.put(\"timestamp\", timestamp);\n     schemaResults.put(\"runner\", runner);\n     schemaResults.put(\"measurement\", measurement);\n-    schemaResults.put(\"runtimeMs\", runtimeMs);\n+    schemaResults.put(\n+        \"runtimeMs\",", "originalCommit": "faa50b2efe0ed8fcdce55d54c8a362c8d5b3533d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4453d3189bb7e834a6405d3a1fe70118dfd3f32d", "chunk": "diff --git a/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java b/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\nindex 12dd225319..f074b9df2b 100644\n--- a/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\n+++ b/sdks/java/testing/nexmark/src/main/java/org/apache/beam/sdk/nexmark/Main.java\n\n@@ -255,11 +255,11 @@ public class Main {\n     schemaResults.put(\"timestamp\", timestamp);\n     schemaResults.put(\"runner\", runner);\n     schemaResults.put(\"measurement\", measurement);\n-    schemaResults.put(\n-        \"runtimeMs\",\n-        runtimeMs\n-            + \"i\"); // By default, InfluxDB treats all number values as floats. We need to add 'i'\n-    // suffix to interpret the value as an integer.\n+\n+    // By default, InfluxDB treats all number values as floats. We need to add 'i' suffix to\n+    // interpret the value as an integer.\n+    schemaResults.put(\"runtimeMs\", runtimeMs + \"i\");\n+    schemaResults.put(\"numResults\", schemaResults.get(\"numResults\") + \"i\");\n \n     return schemaResults;\n   }\n"}}, {"oid": "4453d3189bb7e834a6405d3a1fe70118dfd3f32d", "url": "https://github.com/apache/beam/commit/4453d3189bb7e834a6405d3a1fe70118dfd3f32d", "message": "[BEAM-8133] Update influx db publisher", "committedDate": "2020-06-29T04:45:11Z", "type": "commit"}, {"oid": "4453d3189bb7e834a6405d3a1fe70118dfd3f32d", "url": "https://github.com/apache/beam/commit/4453d3189bb7e834a6405d3a1fe70118dfd3f32d", "message": "[BEAM-8133] Update influx db publisher", "committedDate": "2020-06-29T04:45:11Z", "type": "forcePushed"}]}