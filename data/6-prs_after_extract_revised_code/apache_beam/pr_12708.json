{"pr_number": 12708, "pr_title": "[BEAM-10670] Update Flink to be opt-out for SplittableDoFn powering the Read transform.", "pr_createdAt": "2020-08-27T23:18:23Z", "pr_url": "https://github.com/apache/beam/pull/12708", "timeline": [{"oid": "b64a9e8328893a47cf2a6bcd52218253d65fefbc", "url": "https://github.com/apache/beam/commit/b64a9e8328893a47cf2a6bcd52218253d65fefbc", "message": "[BEAM-10670] Add support for bundle finalization to DoFnOperator for non-portable streaming pipelines.\n\nI used the UnboundedSourceFunction as a guide to implementing the bundle finalization hook for the DoFnOperator.\nSince checkpointing support is only supported when using shutdownSourcesAfterIdleMs so I added a new validates runner task that runs a subset of the tests that rely on bundle finalization.\n\nI also added support for Impulse translation for non-portable streaming pipelines.", "committedDate": "2020-08-27T21:40:17Z", "type": "commit"}, {"oid": "1947ab0770f2bd90dfb9bea8d2c461f3a6656e6c", "url": "https://github.com/apache/beam/commit/1947ab0770f2bd90dfb9bea8d2c461f3a6656e6c", "message": "[BEAM-10670] Make Flink to be opt-out for SplittableDoFn powering the Read transform.", "committedDate": "2020-08-27T23:16:14Z", "type": "commit"}, {"oid": "35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc", "url": "https://github.com/apache/beam/commit/35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc", "message": "fixup! Fix translation issue where we should never be translating composite Read transforms.", "committedDate": "2020-08-28T04:30:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ==", "url": "https://github.com/apache/beam/pull/12708#discussion_r478919501", "bodyText": "How will this work with the opt-out of SDF? Will primitive Reads still be translated then?", "author": "mxm", "createdAt": "2020-08-28T08:08:44Z", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/FlinkStreamingPipelineTranslator.java", "diffHunk": "@@ -99,6 +99,13 @@ public CompositeBehavior enterCompositeTransform(TransformHierarchy.Node node) {\n \n     PTransform<?, ?> transform = node.getTransform();\n     if (transform != null) {\n+      // TODO(BEAM-10670): Remove this and the ReadTranslator once the \"use_deprecated_read\"\n+      // experiment is removed. Don't translate composite Read transforms since we expect the\n+      // primitive expansion containing an SDF to be used.\n+      if (PTransformTranslation.READ_TRANSFORM_URN.equals(\n+          PTransformTranslation.urnForTransformOrNull(transform))) {\n+        return CompositeBehavior.ENTER_TRANSFORM;\n+      }", "originalCommit": "35dfe25f5ee41ccc09faa4e0749ecd9a10f904bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM3NTE2Mw==", "url": "https://github.com/apache/beam/pull/12708#discussion_r479375163", "bodyText": "The non SDF version of Read is always a primitive transform so it gets replaced down below in visitPrimitiveTransform.", "author": "lukecwik", "createdAt": "2020-08-28T15:23:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM5MjY3MQ==", "url": "https://github.com/apache/beam/pull/12708#discussion_r479392671", "bodyText": "Makes sense!", "author": "mxm", "createdAt": "2020-08-28T15:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkxOTUwMQ=="}], "type": "inlineReview", "revised_code": null}]}