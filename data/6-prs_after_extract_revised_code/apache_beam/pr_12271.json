{"pr_number": 12271, "pr_title": "[BEAM-10496] Improve nullability analysis for :sdks:java:core", "pr_createdAt": "2020-07-15T20:51:52Z", "pr_url": "https://github.com/apache/beam/pull/12271", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw==", "url": "https://github.com/apache/beam/pull/12271#discussion_r455483223", "bodyText": "Can we just call input.getDeclaringClass().getName() here?", "author": "robinyqiu", "createdAt": "2020-07-16T03:10:02Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java", "diffHunk": "@@ -74,16 +74,12 @@ public String apply(@Nonnull Method input) {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n+              \"%s#%s\",\n+              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),", "originalCommit": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NTA3Mg==", "url": "https://github.com/apache/beam/pull/12271#discussion_r455495072", "bodyText": "Done.", "author": "kennknowles", "createdAt": "2020-07-16T03:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzIyMw=="}], "type": "inlineReview", "revised_code": {"commit": "13895317eb5a85902f389d57a251a65e7e3a1479", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java\nindex 41f2a518a1..dd20129341 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/util/common/ReflectHelpers.java\n\n@@ -74,12 +74,16 @@ public class ReflectHelpers {\n         @Override\n         public String apply(@Nonnull Method input) {\n           return String.format(\n-              \"%s#%s\",\n-              ((Function<Class<?>, String>) Class::getName).apply(input.getDeclaringClass()),\n-              METHOD_FORMATTER.apply(input));\n+              \"%s#%s\", CLASS_NAME.apply(input.getDeclaringClass()), METHOD_FORMATTER.apply(input));\n         }\n       };\n \n+  /** A {@link Function} with returns the classes name. */\n+  public static final Function<Class<?>, String> CLASS_NAME = Class::getName;\n+\n+  /** A {@link Function} with returns the classes name. */\n+  public static final Function<Class<?>, String> CLASS_SIMPLE_NAME = Class::getSimpleName;\n+\n   /** A {@link Function} that returns a concise string for a {@link Annotation}. */\n   public static final Function<Annotation, String> ANNOTATION_FORMATTER =\n       annotation -> {\n"}}, {"oid": "13895317eb5a85902f389d57a251a65e7e3a1479", "url": "https://github.com/apache/beam/commit/13895317eb5a85902f389d57a251a65e7e3a1479", "message": "Port PipelineOptionsFactory from Guava Function to java.lang.function.Function", "committedDate": "2020-07-16T04:04:07Z", "type": "commit"}, {"oid": "8a4466303c3577d4663250c7ee6b6039c23feb5b", "url": "https://github.com/apache/beam/commit/8a4466303c3577d4663250c7ee6b6039c23feb5b", "message": "Inline trivial methods with overly strict types from ReflectHelpers", "committedDate": "2020-07-16T04:04:12Z", "type": "commit"}, {"oid": "d42abd3e88d47b9dd957a5875469efa19693629d", "url": "https://github.com/apache/beam/commit/d42abd3e88d47b9dd957a5875469efa19693629d", "message": "Inline trivial fields with overly-specific types in PipelineOptionsFactory", "committedDate": "2020-07-16T04:05:35Z", "type": "commit"}, {"oid": "9b73f66ab767c87ba21d409fad562f8bc9122477", "url": "https://github.com/apache/beam/commit/9b73f66ab767c87ba21d409fad562f8bc9122477", "message": "Convert static Function fields on ReflectHelpers to static methods\n\nPreviously, these were Guava Functions. Now they can just be static methods and\nuse a method reference to use them for any functional interface.", "committedDate": "2020-07-16T04:09:10Z", "type": "commit"}, {"oid": "bc64d0809dde2025a04746417f4ebdb580eb4afd", "url": "https://github.com/apache/beam/commit/bc64d0809dde2025a04746417f4ebdb580eb4afd", "message": "Improve nullability in PipelineOptionsFactory", "committedDate": "2020-07-16T04:09:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDg5Nw==", "url": "https://github.com/apache/beam/pull/12271#discussion_r455494897", "bodyText": "I asked the checkerframework folks for a better solution and they gave it: @KeyFor annotation.", "author": "kennknowles", "createdAt": "2020-07-16T03:56:00Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java", "diffHunk": "@@ -609,24 +604,34 @@ public static void printHelp(PrintStream out, Class<? extends PipelineOptions> i\n           getRequiredGroupNamesToProperties(propertyNamesToGetters);\n \n       out.format(\"%s:%n\", currentIface.getName());\n-      prettyPrintDescription(out, currentIface.getAnnotation(Description.class));\n+      Description ifaceDescription = currentIface.getAnnotation(Description.class);\n+      if (ifaceDescription != null && ifaceDescription.value() != null) {\n+        prettyPrintDescription(out, ifaceDescription);\n+      }\n \n       out.println();\n \n       List<String> lists = Lists.newArrayList(propertyNamesToGetters.keySet());\n       lists.sort(String.CASE_INSENSITIVE_ORDER);\n       for (String propertyName : lists) {\n         Method method = propertyNamesToGetters.get(propertyName);\n+        assert method != null\n+            : \"@AssumeAssertion(nullness): method name previously extracted from iface\";", "originalCommit": "1d9298bcf8cbf564f36ed67e8b4397fb3e5f1364", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "13895317eb5a85902f389d57a251a65e7e3a1479", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java\nindex 7261f85226..bf2df1c44f 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/options/PipelineOptionsFactory.java\n\n@@ -604,10 +609,7 @@ public class PipelineOptionsFactory {\n           getRequiredGroupNamesToProperties(propertyNamesToGetters);\n \n       out.format(\"%s:%n\", currentIface.getName());\n-      Description ifaceDescription = currentIface.getAnnotation(Description.class);\n-      if (ifaceDescription != null && ifaceDescription.value() != null) {\n-        prettyPrintDescription(out, ifaceDescription);\n-      }\n+      prettyPrintDescription(out, currentIface.getAnnotation(Description.class));\n \n       out.println();\n \n"}}, {"oid": "bc64d0809dde2025a04746417f4ebdb580eb4afd", "url": "https://github.com/apache/beam/commit/bc64d0809dde2025a04746417f4ebdb580eb4afd", "message": "Improve nullability in PipelineOptionsFactory", "committedDate": "2020-07-16T04:09:17Z", "type": "forcePushed"}]}