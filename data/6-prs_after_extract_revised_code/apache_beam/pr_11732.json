{"pr_number": 11732, "pr_title": "[BEAM-10017] Expose Cassandra Connect and Read timeouts", "pr_createdAt": "2020-05-16T18:08:26Z", "pr_url": "https://github.com/apache/beam/pull/11732", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2MTIwMw==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427861203", "bodyText": "Can you also change a leftover in the javadoc: An IO to read and write from/to Apache Cassandra ?", "author": "echauchot", "createdAt": "2020-05-20T09:14:47Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -106,19 +107,13 @@\n  *\n  * <h3>Cassandra Socket Options</h3>\n  *\n- * <p>The following example illustrates various options for tuning client socket:\n+ * <p>The following example illustrates setting timeouts for the Cassandra client:", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwNzUyMA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r428007520", "bodyText": "Done", "author": "nfisher", "createdAt": "2020-05-20T13:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg2MTIwMw=="}], "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -109,6 +109,7 @@ import org.slf4j.LoggerFactory;\n  *\n  * <p>The following example illustrates setting timeouts for the Cassandra client:\n  *\n+ * <pre>{@code\n  * pipeline.apply(CassandraIO.<Person>read()\n  *     .withHosts(Arrays.asList(\"host1\", \"host2\"))\n  *     .withPort(9042)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427874953", "bodyText": "you need a javadoc for both methods as they are both public (2 versions for backward compatibility as valueprovider was introduced lately)\n\n\nspecify that they are millis\n\n\nadd links to cassandra socketoptions setConnectTimeOut", "author": "echauchot", "createdAt": "2020-05-20T09:36:49Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwODA5Nw==", "url": "https://github.com/apache/beam/pull/11732#discussion_r428008097", "bodyText": "Done first 2. Will do 3rd after work.", "author": "nfisher", "createdAt": "2020-05-20T13:26:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MzQzNw==", "url": "https://github.com/apache/beam/pull/11732#discussion_r432453437", "bodyText": "missing link. Also write the javadoc as in the other with methods with \"Specify ...\"", "author": "echauchot", "createdAt": "2020-05-29T12:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDk1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -331,20 +332,22 @@ public class CassandraIO {\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n-    /** Cassandra client socket option to set the connect timeout. */\n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(Integer timeout) {\n       return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n       return builder().setConnectTimeout(timeout).build();\n     }\n \n-    /** Cassandra client socket option to set the read timeout. */\n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(Integer timeout) {\n       return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {\n       return builder().setReadTimeout(timeout).build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NTA5MA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427875090", "bodyText": "same as above", "author": "echauchot", "createdAt": "2020-05-20T09:37:00Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n+      return builder().setConnectTimeout(timeout).build();\n+    }\n+\n+    /** Cassandra client socket option to set the read timeout. */\n+    public Read<T> withReadTimeout(Integer timeout) {\n+      return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1Mzc4NQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r432453785", "bodyText": "missing link", "author": "echauchot", "createdAt": "2020-05-29T12:37:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NTA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -331,20 +332,22 @@ public class CassandraIO {\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n-    /** Cassandra client socket option to set the connect timeout. */\n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(Integer timeout) {\n       return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n       return builder().setConnectTimeout(timeout).build();\n     }\n \n-    /** Cassandra client socket option to set the read timeout. */\n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(Integer timeout) {\n       return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {\n       return builder().setReadTimeout(timeout).build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3OTQ0NQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427879445", "bodyText": "Add input values check (!= null && > 0) as in the other methods with the checkArgument call. As the value provider version method relies on this version, put the checkArgument here. Do not forget to put the validation in the other parameters methods", "author": "echauchot", "createdAt": "2020-05-20T09:44:07Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -330,6 +331,24 @@ private CassandraIO() {}\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n+    /** Cassandra client socket option to set the connect timeout. */\n+    public Read<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1NTgwNQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r432455805", "bodyText": "Add two checkArgument as in the other with* methods one for null and one for >0. Also I wrote a error above: valueprovider version is the low level method, the other relies on it. So it is in the valueprovider version you need to put the checks.", "author": "echauchot", "createdAt": "2020-05-29T12:41:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3OTQ0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -331,20 +332,22 @@ public class CassandraIO {\n       return builder().setMinNumberOfSplits(minNumberOfSplits).build();\n     }\n \n-    /** Cassandra client socket option to set the connect timeout. */\n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(Integer timeout) {\n       return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the connect timeout in ms. */\n     public Read<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n       return builder().setConnectTimeout(timeout).build();\n     }\n \n-    /** Cassandra client socket option to set the read timeout. */\n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(Integer timeout) {\n       return withReadTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option to set the read timeout in ms. */\n     public Read<T> withReadTimeout(ValueProvider<Integer> timeout) {\n       return builder().setReadTimeout(timeout).build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzM1NQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897355", "bodyText": "Add readTimeout cf glocal review comment", "author": "echauchot", "createdAt": "2020-05-20T10:14:20Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -811,6 +840,9 @@ public T getCurrent() throws NoSuchElementException {\n \n     abstract MutationType mutationType();\n \n+    @Nullable", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6eb8733f853d95260178c592b594eb637b44099d", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2e76e636ba 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -843,6 +848,9 @@ public class CassandraIO {\n     @Nullable\n     abstract ValueProvider<Integer> connectTimeout();\n \n+    @Nullable\n+    abstract ValueProvider<Integer> readTimeout();\n+\n     @Nullable\n     abstract SerializableFunction<Session, Mapper> mapperFactoryFn();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzU5NA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897594", "bodyText": "Add withReadTimeout cf global review comment", "author": "echauchot", "createdAt": "2020-05-20T10:14:50Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -948,6 +980,15 @@ public T getCurrent() throws NoSuchElementException {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n+    /** Cassandra client socket option for connect timeout. */\n+    public Write<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTU2Mg==", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519562", "bodyText": "Done line 1010", "author": "nfisher", "createdAt": "2020-05-28T00:38:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzU5NA=="}], "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -976,15 +980,17 @@ public class CassandraIO {\n       return withConsistencyLevel(ValueProvider.StaticValueProvider.of(consistencyLevel));\n     }\n \n+    /** Specify the consistency level for the request (e.g. ONE, LOCAL_ONE, LOCAL_QUORUM, etc). */\n     public Write<T> withConsistencyLevel(ValueProvider<String> consistencyLevel) {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n-    /** Cassandra client socket option for connect timeout. */\n+    /** Cassandra client socket option for connect timeout in ms. */\n     public Write<T> withConnectTimeout(Integer timeout) {\n       return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option for connect timeout in ms. */\n     public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n       return builder().setConnectTimeout(timeout).build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzc5Ng==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897796", "bodyText": "add read timeout", "author": "echauchot", "createdAt": "2020-05-20T10:15:14Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -948,6 +980,15 @@ public T getCurrent() throws NoSuchElementException {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n+    /** Cassandra client socket option for connect timeout. */\n+    public Write<T> withConnectTimeout(Integer timeout) {\n+      return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n+    }\n+\n+    public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n+      return builder().setConnectTimeout(timeout).build();", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "16ae640846375e6ce873398e080fb452719e9b03", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2b577e9cf0 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -976,15 +980,17 @@ public class CassandraIO {\n       return withConsistencyLevel(ValueProvider.StaticValueProvider.of(consistencyLevel));\n     }\n \n+    /** Specify the consistency level for the request (e.g. ONE, LOCAL_ONE, LOCAL_QUORUM, etc). */\n     public Write<T> withConsistencyLevel(ValueProvider<String> consistencyLevel) {\n       return builder().setConsistencyLevel(consistencyLevel).build();\n     }\n \n-    /** Cassandra client socket option for connect timeout. */\n+    /** Cassandra client socket option for connect timeout in ms. */\n     public Write<T> withConnectTimeout(Integer timeout) {\n       return withConnectTimeout(ValueProvider.StaticValueProvider.of(timeout));\n     }\n \n+    /** Cassandra client socket option for connect timeout in ms. */\n     public Write<T> withConnectTimeout(ValueProvider<Integer> timeout) {\n       return builder().setConnectTimeout(timeout).build();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzk0Mw==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427897943", "bodyText": "add read timeout", "author": "echauchot", "createdAt": "2020-05-20T10:15:30Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1023,6 +1065,8 @@ private String getMutationTypeName() {\n \n       abstract Builder<T> setMutationType(MutationType mutationType);\n \n+      abstract Builder<T> setConnectTimeout(ValueProvider<Integer> timeout);", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTYyNA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519624", "bodyText": "done", "author": "nfisher", "createdAt": "2020-05-28T00:38:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Nzk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "6eb8733f853d95260178c592b594eb637b44099d", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2e76e636ba 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -1067,6 +1102,8 @@ public class CassandraIO {\n \n       abstract Builder<T> setConnectTimeout(ValueProvider<Integer> timeout);\n \n+      abstract Builder<T> setReadTimeout(ValueProvider<Integer> timeout);\n+\n       abstract Builder<T> setMapperFactoryFn(SerializableFunction<Session, Mapper> mapperFactoryFn);\n \n       abstract Optional<SerializableFunction<Session, Mapper>> mapperFactoryFn();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODU5NA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898594", "bodyText": "no more null check needed if both timeouts are set as part of Read and Write and if you add the validation of inputs in the with* methods", "author": "echauchot", "createdAt": "2020-05-20T10:16:44Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1116,6 +1163,18 @@ private static Cluster getCluster(\n           new QueryOptions().setConsistencyLevel(ConsistencyLevel.valueOf(consistencyLevel.get())));\n     }\n \n+    SocketOptions socketOptions = new SocketOptions();\n+\n+    builder.withSocketOptions(socketOptions);\n+\n+    if (connectTimeout != null) {", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2MTkzMA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r432461930", "bodyText": "I was wrong: null tests are needed because there is no default value. If the user to not specify timeouts, then the valueProvider will be null.", "author": "echauchot", "createdAt": "2020-05-29T12:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODU5NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODY5NQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898695", "bodyText": "same as above", "author": "echauchot", "createdAt": "2020-05-20T10:16:54Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1116,6 +1163,18 @@ private static Cluster getCluster(\n           new QueryOptions().setConsistencyLevel(ConsistencyLevel.valueOf(consistencyLevel.get())));\n     }\n \n+    SocketOptions socketOptions = new SocketOptions();\n+\n+    builder.withSocketOptions(socketOptions);\n+\n+    if (connectTimeout != null) {\n+      socketOptions.setConnectTimeoutMillis(connectTimeout.get());\n+    }\n+\n+    if (readTimeout != null) {", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODgwNA==", "url": "https://github.com/apache/beam/pull/11732#discussion_r427898804", "bodyText": "pass the read timeout", "author": "echauchot", "createdAt": "2020-05-20T10:17:05Z", "path": "sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java", "diffHunk": "@@ -1142,7 +1201,9 @@ private static Cluster getCluster(\n               spec.username(),\n               spec.password(),\n               spec.localDc(),\n-              spec.consistencyLevel());\n+              spec.consistencyLevel(),\n+              spec.connectTimeout(),\n+              null);", "originalCommit": "d1d235f4abdd83c40bd3673a9dad1ff4d5822848", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUxOTAxOQ==", "url": "https://github.com/apache/beam/pull/11732#discussion_r431519019", "bodyText": "done", "author": "nfisher", "createdAt": "2020-05-28T00:36:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODgwNA=="}], "type": "inlineReview", "revised_code": {"commit": "6eb8733f853d95260178c592b594eb637b44099d", "chunk": "diff --git a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\nindex 5d38df320f..2e76e636ba 100644\n--- a/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n+++ b/sdks/java/io/cassandra/src/main/java/org/apache/beam/sdk/io/cassandra/CassandraIO.java\n\n@@ -1203,7 +1240,7 @@ public class CassandraIO {\n               spec.localDc(),\n               spec.consistencyLevel(),\n               spec.connectTimeout(),\n-              null);\n+              spec.readTimeout());\n       this.session = cluster.connect(spec.keyspace().get());\n       this.mapperFactoryFn = spec.mapperFactoryFn();\n       this.mutateFutures = new ArrayList<>();\n"}}, {"oid": "16ae640846375e6ce873398e080fb452719e9b03", "url": "https://github.com/apache/beam/commit/16ae640846375e6ce873398e080fb452719e9b03", "message": "Address javadoc issues raised in PR will squash later", "committedDate": "2020-05-20T13:18:54Z", "type": "forcePushed"}, {"oid": "6eb8733f853d95260178c592b594eb637b44099d", "url": "https://github.com/apache/beam/commit/6eb8733f853d95260178c592b594eb637b44099d", "message": "[BEAM-10017] Expose Cassandra Connect/Read timeouts\n\nThis adds the ability to specify a connect and read timeout socket\noption to the Cassandra IO driver.", "committedDate": "2020-05-28T06:59:34Z", "type": "commit"}, {"oid": "6eb8733f853d95260178c592b594eb637b44099d", "url": "https://github.com/apache/beam/commit/6eb8733f853d95260178c592b594eb637b44099d", "message": "[BEAM-10017] Expose Cassandra Connect/Read timeouts\n\nThis adds the ability to specify a connect and read timeout socket\noption to the Cassandra IO driver.", "committedDate": "2020-05-28T06:59:34Z", "type": "forcePushed"}]}