{"pr_number": 11641, "pr_title": "[BEAM-9931] Support custom Avro DatumReaders in AvroIO", "pr_createdAt": "2020-05-08T15:05:32Z", "pr_url": "https://github.com/apache/beam/pull/11641", "timeline": [{"oid": "c6ae3512abcf2a6d15ff4d386b7b2ae3e6dd7e3c", "url": "https://github.com/apache/beam/commit/c6ae3512abcf2a6d15ff4d386b7b2ae3e6dd7e3c", "message": "Allow users of AvroIO to specify a custom DatumReader implementation", "committedDate": "2020-05-08T15:05:46Z", "type": "forcePushed"}, {"oid": "9c3a87b588dfb498481fdffb6df4927ed791f38a", "url": "https://github.com/apache/beam/commit/9c3a87b588dfb498481fdffb6df4927ed791f38a", "message": "Allow users of AvroIO to specify a custom DatumReader implementation", "committedDate": "2020-05-10T20:13:01Z", "type": "forcePushed"}, {"oid": "d2ca19961dc3b4182dc18e3bc160342bdeff2a5a", "url": "https://github.com/apache/beam/commit/d2ca19961dc3b4182dc18e3bc160342bdeff2a5a", "message": "Allow users of AvroIO to specify a custom DatumReader implementation", "committedDate": "2020-05-10T20:19:13Z", "type": "commit"}, {"oid": "d2ca19961dc3b4182dc18e3bc160342bdeff2a5a", "url": "https://github.com/apache/beam/commit/d2ca19961dc3b4182dc18e3bc160342bdeff2a5a", "message": "Allow users of AvroIO to specify a custom DatumReader implementation", "committedDate": "2020-05-10T20:19:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxODk0Nw==", "url": "https://github.com/apache/beam/pull/11641#discussion_r423518947", "bodyText": "Nice, avoids the input stream wrapper.", "author": "RyanSkraba", "createdAt": "2020-05-12T07:28:07Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/io/AvroSource.java", "diffHunk": "@@ -576,11 +619,16 @@ private static InputStream decodeAsInputStream(byte[] data, String codec) throws\n       Schema readerSchema =\n           internOrParseSchemaString(\n               MoreObjects.firstNonNull(mode.readerSchemaString, writerSchemaString));\n-      this.reader =\n-          (mode.type == GenericRecord.class)\n-              ? new GenericDatumReader<T>(writerSchema, readerSchema)\n-              : new ReflectDatumReader<T>(writerSchema, readerSchema);\n-      this.decoder = DecoderFactory.get().binaryDecoder(decodeAsInputStream(data, codec), null);\n+\n+      this.reader = mode.createReader(writerSchema, readerSchema);\n+\n+      if (codec.equals(DataFileConstants.NULL_CODEC)) {\n+        // Avro can read from a byte[] using a more efficient implementation.  If the input is not\n+        // compressed, pass the data in directly.\n+        this.decoder = DecoderFactory.get().binaryDecoder(data, null);", "originalCommit": "d2ca19961dc3b4182dc18e3bc160342bdeff2a5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMDY3OA==", "url": "https://github.com/apache/beam/pull/11641#discussion_r424710678", "bodyText": "Neat!", "author": "iemejia", "createdAt": "2020-05-13T20:26:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxODk0Nw=="}], "type": "inlineReview", "revised_code": null}]}