{"pr_number": 10534, "pr_title": "Beam-2535: Support timer output timestamps in the flink runner", "pr_createdAt": "2020-01-08T20:33:11Z", "pr_url": "https://github.com/apache/beam/pull/10534", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA==", "url": "https://github.com/apache/beam/pull/10534#discussion_r364867970", "bodyText": "This was the missing piece. Without this, we can't make progress when a timer has fired.", "author": "mxm", "createdAt": "2020-01-09T17:28:06Z", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java", "diffHunk": "@@ -1171,6 +1173,8 @@ private void cancelPendingTimerById(String contextTimerId) throws Exception {\n     void cleanupPendingTimer(TimerData timer) {\n       try {\n         pendingTimersById.remove(getContextTimerId(timer.getTimerId(), timer.getNamespace()));\n+        // Always update watermark hold after a timer has been fired or removed\n+        updateWatermarkHold();", "originalCommit": "609c9c45a4038ae4bac7c3409865b54aee948b78", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkyMzg5MA==", "url": "https://github.com/apache/beam/pull/10534#discussion_r364923890", "bodyText": "Thanks!  I didn't put a call here, because the way the code is structured that would result in two calls to updateWatermarkHold every time you set a timer. Would it be sufficient to add the call in fireTimer, as it appears that's that path we missed.", "author": "reuvenlax", "createdAt": "2020-01-09T19:37:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDkzNTA3MQ==", "url": "https://github.com/apache/beam/pull/10534#discussion_r364935071", "bodyText": "Yes, that's right. My first thought was to add it in fireTimer, but then I thought I could simplify it further. That led to the duplicate update call when you set the timer. Looks like we have just update the hold on set, delete, and fire, and not for cleanup.", "author": "mxm", "createdAt": "2020-01-09T20:03:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2Nzk3MA=="}], "type": "inlineReview", "revised_code": {"commit": "657f4f997c0ebf6b1d4db86c6ed1b46333840956", "chunk": "diff --git a/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java b/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java\nindex 33bb7375aa..df63722d91 100644\n--- a/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java\n+++ b/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/wrappers/streaming/DoFnOperator.java\n\n@@ -1173,8 +1172,6 @@ public class DoFnOperator<InputT, OutputT> extends AbstractStreamOperator<Window\n     void cleanupPendingTimer(TimerData timer) {\n       try {\n         pendingTimersById.remove(getContextTimerId(timer.getTimerId(), timer.getNamespace()));\n-        // Always update watermark hold after a timer has been fired or removed\n-        updateWatermarkHold();\n       } catch (Exception e) {\n         throw new RuntimeException(\"Failed to cleanup state with pending timers\", e);\n       }\n"}}, {"oid": "657f4f997c0ebf6b1d4db86c6ed1b46333840956", "url": "https://github.com/apache/beam/commit/657f4f997c0ebf6b1d4db86c6ed1b46333840956", "message": "fix", "committedDate": "2020-01-09T19:38:49Z", "type": "forcePushed"}, {"oid": "2b817d579eb1f319b5e458b7d9f6d8a8ece290ec", "url": "https://github.com/apache/beam/commit/2b817d579eb1f319b5e458b7d9f6d8a8ece290ec", "message": "foo", "committedDate": "2020-01-13T22:58:06Z", "type": "forcePushed"}, {"oid": "fb686f27b211a900ebcee5cd62b34d441d2a5203", "url": "https://github.com/apache/beam/commit/fb686f27b211a900ebcee5cd62b34d441d2a5203", "message": "support flink runner", "committedDate": "2020-01-14T05:53:44Z", "type": "forcePushed"}, {"oid": "806be60f549641e7515ee9efc06f3f28fd6174cf", "url": "https://github.com/apache/beam/commit/806be60f549641e7515ee9efc06f3f28fd6174cf", "message": "support flink runner", "committedDate": "2020-01-14T22:14:57Z", "type": "forcePushed"}, {"oid": "df68f73364404e8c059a84c9c6d9249ecf8f90d1", "url": "https://github.com/apache/beam/commit/df68f73364404e8c059a84c9c6d9249ecf8f90d1", "message": "Support output timestamps in flink runner.", "committedDate": "2020-01-15T18:15:13Z", "type": "forcePushed"}, {"oid": "9f1942d92ccf8ae08eb230ecc139600597897568", "url": "https://github.com/apache/beam/commit/9f1942d92ccf8ae08eb230ecc139600597897568", "message": "Fix issues", "committedDate": "2020-01-22T00:34:54Z", "type": "commit"}, {"oid": "ec8aa244895d55d0d0c1da0971c2b1696c42632b", "url": "https://github.com/apache/beam/commit/ec8aa244895d55d0d0c1da0971c2b1696c42632b", "message": "fix tests", "committedDate": "2020-01-22T00:36:10Z", "type": "commit"}, {"oid": "ec8aa244895d55d0d0c1da0971c2b1696c42632b", "url": "https://github.com/apache/beam/commit/ec8aa244895d55d0d0c1da0971c2b1696c42632b", "message": "fix tests", "committedDate": "2020-01-22T00:36:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzgwNg==", "url": "https://github.com/apache/beam/pull/10534#discussion_r369467806", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Instant currentOutputTimestamp = null;\n          \n          \n            \n                @Nullable private Instant currentOutputTimestamp;", "author": "mxm", "createdAt": "2020-01-22T10:05:39Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java", "diffHunk": "@@ -805,6 +805,7 @@ public void tearDown() {\n     private final Instant currentTimestamp;\n     private final Duration allowedLateness;\n     private final WindowedValue<?> currentElementOrTimer;\n+    private Instant currentOutputTimestamp = null;", "originalCommit": "ec8aa244895d55d0d0c1da0971c2b1696c42632b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2OTQwNg==", "url": "https://github.com/apache/beam/pull/10534#discussion_r369469406", "bodyText": "Nit: non-final fields are null by default. The annotation probably helps to indicate the default null value.", "author": "mxm", "createdAt": "2020-01-22T10:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ2NzgwNg=="}], "type": "inlineReview", "revised_code": {"commit": "15ecdc22f33999246d25a820a3cb9b5b93365cbc", "chunk": "diff --git a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java\nindex 6ff56a5ded..fa836143c4 100644\n--- a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java\n+++ b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnApiDoFnRunner.java\n\n@@ -805,7 +806,7 @@ public class FnApiDoFnRunner<InputT, RestrictionT, PositionT, OutputT> {\n     private final Instant currentTimestamp;\n     private final Duration allowedLateness;\n     private final WindowedValue<?> currentElementOrTimer;\n-    private Instant currentOutputTimestamp = null;\n+    @Nullable private Instant currentOutputTimestamp;\n \n     private Duration period = Duration.ZERO;\n     private Duration offset = Duration.ZERO;\n"}}, {"oid": "15ecdc22f33999246d25a820a3cb9b5b93365cbc", "url": "https://github.com/apache/beam/commit/15ecdc22f33999246d25a820a3cb9b5b93365cbc", "message": "set nullable", "committedDate": "2020-01-22T17:32:19Z", "type": "commit"}, {"oid": "15ecdc22f33999246d25a820a3cb9b5b93365cbc", "url": "https://github.com/apache/beam/commit/15ecdc22f33999246d25a820a3cb9b5b93365cbc", "message": "set nullable", "committedDate": "2020-01-22T17:32:19Z", "type": "forcePushed"}]}