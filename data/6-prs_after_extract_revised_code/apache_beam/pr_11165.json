{"pr_number": 11165, "pr_title": "[BEAM-9340] Populate requirements for Java.", "pr_createdAt": "2020-03-18T23:22:08Z", "pr_url": "https://github.com/apache/beam/pull/11165", "timeline": [{"oid": "6072eb4d68f25c31871f64f493d42096c2e6b025", "url": "https://github.com/apache/beam/commit/6072eb4d68f25c31871f64f493d42096c2e6b025", "message": "[BEAM-9340] Populate requirements for Java DoFn properties.", "committedDate": "2020-03-19T00:20:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNjY1OQ==", "url": "https://github.com/apache/beam/pull/11165#discussion_r395306659", "bodyText": "Please define string constants and then validate that they match in the static initializer. This allows for the string constants to be used in switch/case statements since they are compile time constants.\nI have pr/11162 which duplicates this effort, which ever goes in second needs to get updated.", "author": "lukecwik", "createdAt": "2020-03-19T20:39:58Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java", "diffHunk": "@@ -124,6 +124,15 @@\n   public static final String SPLITTABLE_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_URN =\n       \"beam:transform:sdf_process_sized_element_and_restrictions:v1\";\n \n+  public static final String REQUIRES_STATEFUL_PROCESSING_URN =\n+      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_STATEFUL_PROCESSING);", "originalCommit": "6072eb4d68f25c31871f64f493d42096c2e6b025", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg0NTU4NA==", "url": "https://github.com/apache/beam/pull/11165#discussion_r395845584", "bodyText": "That's unfortunate, but I see the pattern. Have to be vigilant to prevent bugs. (Unlikely that these'll be used in switch statements, but consistency is good.)", "author": "robertwb", "createdAt": "2020-03-20T19:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNjY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4f96214b2ec3f88747e65b48d907fb89880dedcc", "chunk": "diff --git a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java\nindex 3c5b75f8aa..6fead0fbea 100644\n--- a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java\n+++ b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/PTransformTranslation.java\n\n@@ -124,15 +124,6 @@ public class PTransformTranslation {\n   public static final String SPLITTABLE_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_URN =\n       \"beam:transform:sdf_process_sized_element_and_restrictions:v1\";\n \n-  public static final String REQUIRES_STATEFUL_PROCESSING_URN =\n-      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_STATEFUL_PROCESSING);\n-  public static final String REQUIRES_BUNDLE_FINALIZATION_URN =\n-      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_BUNDLE_FINALIZATION);\n-  public static final String REQUIRES_STABLE_INPUT_URN =\n-      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_STABLE_INPUT);\n-  public static final String REQUIRES_TIME_SORTED_INPUT_URN =\n-      getUrn(RunnerApi.StandardRequirements.Enum.REQUIRES_TIME_SORTED_INPUT);\n-\n   static {\n     // Primitives\n     checkState(PAR_DO_TRANSFORM_URN.equals(getUrn(StandardPTransforms.Primitives.PAR_DO)));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwODc5OQ==", "url": "https://github.com/apache/beam/pull/11165#discussion_r395308799", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  public void process(ProcessContext ctxt) {}CreateExecutableStageNodeFunction.java\n          \n          \n            \n                                  public void process(ProcessContext ctxt) {}", "author": "lukecwik", "createdAt": "2020-03-19T20:44:11Z", "path": "runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java", "diffHunk": "@@ -115,7 +115,7 @@ public void getEnvironmentPTransform() throws IOException {\n             ParDo.of(\n                     new DoFn<String, String>() {\n                       @ProcessElement\n-                      public void process(ProcessContext ctxt) {}\n+                      public void process(ProcessContext ctxt) {}CreateExecutableStageNodeFunction.java", "originalCommit": "6072eb4d68f25c31871f64f493d42096c2e6b025", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "chunk": "diff --git a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java\nindex ea092051f5..e518568465 100644\n--- a/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java\n+++ b/runners/core-construction-java/src/test/java/org/apache/beam/runners/core/construction/EnvironmentsTest.java\n\n@@ -115,7 +129,7 @@ public class EnvironmentsTest implements Serializable {\n             ParDo.of(\n                     new DoFn<String, String>() {\n                       @ProcessElement\n-                      public void process(ProcessContext ctxt) {}CreateExecutableStageNodeFunction.java\n+                      public void process(ProcessContext ctxt) {}\n                     })\n                 .withOutputTags(new TupleTag<>(), TupleTagList.empty()),\n             DoFnSchemaInformation.create(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxMDE1Mg==", "url": "https://github.com/apache/beam/pull/11165#discussion_r395310152", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Components components, Collection<String> requirements, String newIdPrefix) {\n          \n          \n            \n                  Components components, @Nullable Collection<String> requirements, String newIdPrefix) {", "author": "lukecwik", "createdAt": "2020-03-19T20:46:59Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "diffHunk": "@@ -86,25 +91,30 @@ public static SdkComponents create(RunnerApi.Components components) {\n   }\n \n   public static SdkComponents create(PipelineOptions options) {\n-    SdkComponents sdkComponents = new SdkComponents(RunnerApi.Components.getDefaultInstance(), \"\");\n+    SdkComponents sdkComponents =\n+        new SdkComponents(RunnerApi.Components.getDefaultInstance(), null, \"\");\n     PortablePipelineOptions portablePipelineOptions = options.as(PortablePipelineOptions.class);\n     sdkComponents.registerEnvironment(\n         Environments.createOrGetDefaultEnvironment(portablePipelineOptions));\n     return sdkComponents;\n   }\n \n-  private SdkComponents(RunnerApi.Components components, String newIdPrefix) {\n+  private SdkComponents(\n+      Components components, Collection<String> requirements, String newIdPrefix) {", "originalCommit": "6072eb4d68f25c31871f64f493d42096c2e6b025", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "chunk": "diff --git a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\nindex 6a8ef57af5..92a602054d 100644\n--- a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\n+++ b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\n\n@@ -100,7 +101,9 @@ public class SdkComponents {\n   }\n \n   private SdkComponents(\n-      Components components, Collection<String> requirements, String newIdPrefix) {\n+      @Nullable Components components,\n+      @Nullable Collection<String> requirements,\n+      String newIdPrefix) {\n     this.newIdPrefix = newIdPrefix;\n     this.requirements = new HashSet<>();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxMDI0Ng==", "url": "https://github.com/apache/beam/pull/11165#discussion_r395310246", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void mergeFrom(RunnerApi.Components components, Collection<String> requirements) {\n          \n          \n            \n              public void mergeFrom(RunnerApi.Components components, @Nullable Collection<String> requirements) {", "author": "lukecwik", "createdAt": "2020-03-19T20:47:11Z", "path": "runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java", "diffHunk": "@@ -86,25 +91,30 @@ public static SdkComponents create(RunnerApi.Components components) {\n   }\n \n   public static SdkComponents create(PipelineOptions options) {\n-    SdkComponents sdkComponents = new SdkComponents(RunnerApi.Components.getDefaultInstance(), \"\");\n+    SdkComponents sdkComponents =\n+        new SdkComponents(RunnerApi.Components.getDefaultInstance(), null, \"\");\n     PortablePipelineOptions portablePipelineOptions = options.as(PortablePipelineOptions.class);\n     sdkComponents.registerEnvironment(\n         Environments.createOrGetDefaultEnvironment(portablePipelineOptions));\n     return sdkComponents;\n   }\n \n-  private SdkComponents(RunnerApi.Components components, String newIdPrefix) {\n+  private SdkComponents(\n+      Components components, Collection<String> requirements, String newIdPrefix) {\n     this.newIdPrefix = newIdPrefix;\n+    this.requirements = new HashSet<>();\n \n     if (components == null) {\n-      return;\n+      if (requirements != null) {\n+        this.requirements.addAll(requirements);\n+      }\n+    } else {\n+      mergeFrom(components, requirements);\n     }\n-\n-    mergeFrom(components);\n   }\n \n   /** Merge Components proto into this SdkComponents instance. */\n-  public void mergeFrom(RunnerApi.Components components) {\n+  public void mergeFrom(RunnerApi.Components components, Collection<String> requirements) {", "originalCommit": "6072eb4d68f25c31871f64f493d42096c2e6b025", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "chunk": "diff --git a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\nindex 6a8ef57af5..92a602054d 100644\n--- a/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\n+++ b/runners/core-construction-java/src/main/java/org/apache/beam/runners/core/construction/SdkComponents.java\n\n@@ -100,7 +101,9 @@ public class SdkComponents {\n   }\n \n   private SdkComponents(\n-      Components components, Collection<String> requirements, String newIdPrefix) {\n+      @Nullable Components components,\n+      @Nullable Collection<String> requirements,\n+      String newIdPrefix) {\n     this.newIdPrefix = newIdPrefix;\n     this.requirements = new HashSet<>();\n \n"}}, {"oid": "4f96214b2ec3f88747e65b48d907fb89880dedcc", "url": "https://github.com/apache/beam/commit/4f96214b2ec3f88747e65b48d907fb89880dedcc", "message": "[BEAM-9340] Plumb requirements through Java SDK.", "committedDate": "2020-03-20T18:56:12Z", "type": "commit"}, {"oid": "2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "url": "https://github.com/apache/beam/commit/2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "message": "[BEAM-9340] Populate requirements for Java DoFn properties.", "committedDate": "2020-03-20T19:20:48Z", "type": "commit"}, {"oid": "2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "url": "https://github.com/apache/beam/commit/2fbcc549f6c0f3d45a87f6dffb49db53e5ba96d7", "message": "[BEAM-9340] Populate requirements for Java DoFn properties.", "committedDate": "2020-03-20T19:20:48Z", "type": "forcePushed"}]}