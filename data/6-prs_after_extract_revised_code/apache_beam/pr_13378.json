{"pr_number": 13378, "pr_title": "[BEAM-11208] Fix for QUOTA_EXCEEDED failures in BQ Storage streams sp\u2026", "pr_createdAt": "2020-11-18T21:16:05Z", "pr_url": "https://github.com/apache/beam/pull/13378", "timeline": [{"oid": "b31eb67e3ef1428af99065f74ca004c0556895b6", "url": "https://github.com/apache/beam/commit/b31eb67e3ef1428af99065f74ca004c0556895b6", "message": "[BEAM-11208] Fix for QUOTA_EXCEEDED failures in BQ Storage streams split.", "committedDate": "2020-11-18T21:06:34Z", "type": "commit"}, {"oid": "af007bf2dea579539de1724230c6b065d97ae8e5", "url": "https://github.com/apache/beam/commit/af007bf2dea579539de1724230c6b065d97ae8e5", "message": "[BEAM-11208] Fix formatting issues.", "committedDate": "2020-11-18T22:07:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1NzAyNA==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526457024", "bodyText": "Nit: I would just initialize this in the declaration above (e.g. private boolean splitPossible = true;) rather than in the constructor.", "author": "kmjung", "createdAt": "2020-11-18T22:11:34Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java", "diffHunk": "@@ -178,6 +179,7 @@ private BigQueryStorageStreamReader(\n       this.parseFn = source.parseFn;\n       this.storageClient = source.bqServices.getStorageClient(options);\n       this.tableSchema = fromJsonString(source.jsonTableSchema, TableSchema.class);\n+      this.splitPossible = true;", "originalCommit": "af007bf2dea579539de1724230c6b065d97ae8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2Njc4OA==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526466788", "bodyText": "Done.", "author": "vachan-shetty", "createdAt": "2020-11-18T22:30:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1NzAyNA=="}], "type": "inlineReview", "revised_code": {"commit": "bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\nindex 0f6feb3a5e..07a1a2f32e 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n\n@@ -179,7 +179,6 @@ public class BigQueryStorageStreamSource<T> extends BoundedSource<T> {\n       this.parseFn = source.parseFn;\n       this.storageClient = source.bqServices.getStorageClient(options);\n       this.tableSchema = fromJsonString(source.jsonTableSchema, TableSchema.class);\n-      this.splitPossible = true;\n       this.fractionConsumed = 0d;\n       this.progressAtResponseStart = 0d;\n       this.progressAtResponseEnd = 0d;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1NzcyMA==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526457720", "bodyText": "Nit: I would structure this check as an early return (e.g. if (!splitPossible) { return null; }) rather than putting the whole implementation into a new block.", "author": "kmjung", "createdAt": "2020-11-18T22:13:03Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java", "diffHunk": "@@ -288,78 +290,85 @@ public synchronized void close() {\n         return null;\n       }\n \n-      SplitReadStreamRequest splitRequest =\n-          SplitReadStreamRequest.newBuilder()\n-              .setName(source.readStream.getName())\n-              .setFraction((float) fraction)\n-              .build();\n-\n-      SplitReadStreamResponse splitResponse = storageClient.splitReadStream(splitRequest);\n-      if (!splitResponse.hasPrimaryStream() || !splitResponse.hasRemainderStream()) {\n-        // No more splits are possible!\n-        Metrics.counter(\n-                BigQueryStorageStreamReader.class,\n-                \"split-at-fraction-calls-failed-due-to-impossible-split-point\")\n-            .inc();\n-        LOG.info(\n-            \"BigQuery Storage API stream {} cannot be split at {}.\",\n-            source.readStream.getName(),\n-            fraction);\n-        return null;\n-      }\n+      if (splitPossible) {", "originalCommit": "af007bf2dea579539de1724230c6b065d97ae8e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2NjgxOA==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526466818", "bodyText": "Done.", "author": "vachan-shetty", "createdAt": "2020-11-18T22:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1NzcyMA=="}], "type": "inlineReview", "revised_code": {"commit": "bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\nindex 0f6feb3a5e..07a1a2f32e 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n\n@@ -290,85 +289,85 @@ public class BigQueryStorageStreamSource<T> extends BoundedSource<T> {\n         return null;\n       }\n \n-      if (splitPossible) {\n-        SplitReadStreamRequest splitRequest =\n-            SplitReadStreamRequest.newBuilder()\n-                .setName(source.readStream.getName())\n-                .setFraction((float) fraction)\n-                .build();\n+      if (!splitPossible) {\n+        return null;\n+      }\n+\n+      SplitReadStreamRequest splitRequest =\n+          SplitReadStreamRequest.newBuilder()\n+              .setName(source.readStream.getName())\n+              .setFraction((float) fraction)\n+              .build();\n+\n+      SplitReadStreamResponse splitResponse = storageClient.splitReadStream(splitRequest);\n+      if (!splitResponse.hasPrimaryStream() || !splitResponse.hasRemainderStream()) {\n+        // No more splits are possible!\n+        Metrics.counter(\n+                BigQueryStorageStreamReader.class,\n+                \"split-at-fraction-calls-failed-due-to-impossible-split-point\")\n+            .inc();\n+        LOG.info(\n+            \"BigQuery Storage API stream {} cannot be split at {}.\",\n+            source.readStream.getName(),\n+            fraction);\n+        splitPossible = false;\n+        return null;\n+      }\n \n-        SplitReadStreamResponse splitResponse = storageClient.splitReadStream(splitRequest);\n-        if (!splitResponse.hasPrimaryStream() || !splitResponse.hasRemainderStream()) {\n-          // No more splits are possible!\n+      // We may be able to split this source. Before continuing, we pause the reader thread and\n+      // replace its current source with the primary stream iff the reader has not moved past\n+      // the split point.\n+      synchronized (this) {\n+        BigQueryServerStream<ReadRowsResponse> newResponseStream;\n+        Iterator<ReadRowsResponse> newResponseIterator;\n+        try {\n+          newResponseStream =\n+              storageClient.readRows(\n+                  ReadRowsRequest.newBuilder()\n+                      .setReadStream(splitResponse.getPrimaryStream().getName())\n+                      .setOffset(currentOffset + 1)\n+                      .build());\n+          newResponseIterator = newResponseStream.iterator();\n+          newResponseIterator.hasNext();\n+        } catch (FailedPreconditionException e) {\n+          // The current source has already moved past the split point, so this split attempt\n+          // is unsuccessful.\n           Metrics.counter(\n                   BigQueryStorageStreamReader.class,\n-                  \"split-at-fraction-calls-failed-due-to-impossible-split-point\")\n+                  \"split-at-fraction-calls-failed-due-to-bad-split-point\")\n               .inc();\n           LOG.info(\n-              \"BigQuery Storage API stream {} cannot be split at {}.\",\n+              \"BigQuery Storage API split of stream {} abandoned because the primary stream is to \"\n+                  + \"the left of the split fraction {}.\",\n               source.readStream.getName(),\n               fraction);\n           splitPossible = false;\n           return null;\n+        } catch (Exception e) {\n+          Metrics.counter(\n+                  BigQueryStorageStreamReader.class,\n+                  \"split-at-fraction-calls-failed-due-to-other-reasons\")\n+              .inc();\n+          LOG.error(\"BigQuery Storage API stream split failed.\", e);\n+          splitPossible = false;\n+          return null;\n         }\n \n-        // We may be able to split this source. Before continuing, we pause the reader thread and\n-        // replace its current source with the primary stream iff the reader has not moved past\n-        // the split point.\n-        synchronized (this) {\n-          BigQueryServerStream<ReadRowsResponse> newResponseStream;\n-          Iterator<ReadRowsResponse> newResponseIterator;\n-          try {\n-            newResponseStream =\n-                storageClient.readRows(\n-                    ReadRowsRequest.newBuilder()\n-                        .setReadStream(splitResponse.getPrimaryStream().getName())\n-                        .setOffset(currentOffset + 1)\n-                        .build());\n-            newResponseIterator = newResponseStream.iterator();\n-            newResponseIterator.hasNext();\n-          } catch (FailedPreconditionException e) {\n-            // The current source has already moved past the split point, so this split attempt\n-            // is unsuccessful.\n-            Metrics.counter(\n-                    BigQueryStorageStreamReader.class,\n-                    \"split-at-fraction-calls-failed-due-to-bad-split-point\")\n-                .inc();\n-            LOG.info(\n-                \"BigQuery Storage API split of stream {} abandoned because the primary stream is to \"\n-                    + \"the left of the split fraction {}.\",\n-                source.readStream.getName(),\n-                fraction);\n-            splitPossible = false;\n-            return null;\n-          } catch (Exception e) {\n-            Metrics.counter(\n-                    BigQueryStorageStreamReader.class,\n-                    \"split-at-fraction-calls-failed-due-to-other-reasons\")\n-                .inc();\n-            LOG.error(\"BigQuery Storage API stream split failed.\", e);\n-            splitPossible = false;\n-            return null;\n-          }\n-\n-          // Cancels the parent stream before replacing it with the primary stream.\n-          responseStream.cancel();\n-          source = source.fromExisting(splitResponse.getPrimaryStream());\n-          responseStream = newResponseStream;\n-          responseIterator = newResponseIterator;\n-          decoder = null;\n-        }\n-\n-        Metrics.counter(BigQueryStorageStreamReader.class, \"split-at-fraction-calls-successful\")\n-            .inc();\n-        LOG.info(\n-            \"Successfully split BigQuery Storage API stream at {}. Split response: {}\",\n-            fraction,\n-            splitResponse);\n-        return source.fromExisting(splitResponse.getRemainderStream());\n-      } else {\n-        return null;\n+        // Cancels the parent stream before replacing it with the primary stream.\n+        responseStream.cancel();\n+        source = source.fromExisting(splitResponse.getPrimaryStream());\n+        responseStream = newResponseStream;\n+        responseIterator = newResponseIterator;\n+        decoder = null;\n       }\n+\n+      Metrics.counter(BigQueryStorageStreamReader.class, \"split-at-fraction-calls-successful\")\n+          .inc();\n+      LOG.info(\n+          \"Successfully split BigQuery Storage API stream at {}. Split response: {}\",\n+          fraction,\n+          splitResponse);\n+      return source.fromExisting(splitResponse.getRemainderStream());\n     }\n \n     @Override\n"}}, {"oid": "bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "url": "https://github.com/apache/beam/commit/bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "message": "[BEAM-11208] Review changes.", "committedDate": "2020-11-18T22:29:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2Nzc5Ng==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526467796", "bodyText": "Nit: I don't think this is correct, or required. Once we've reached this point, we know that the splitReadStream call above has in fact succeeded.", "author": "kmjung", "createdAt": "2020-11-18T22:32:37Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java", "diffHunk": "@@ -335,13 +341,15 @@ public synchronized void close() {\n                   + \"the left of the split fraction {}.\",\n               source.readStream.getName(),\n               fraction);\n+          splitPossible = false;", "originalCommit": "bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4MDQ0MQ==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526480441", "bodyText": "Removed.", "author": "vachan-shetty", "createdAt": "2020-11-18T23:00:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2Nzc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4a7f304e636551db692e18370ac6828b0417eac3", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\nindex 07a1a2f32e..1d59dcb67b 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n\n@@ -341,7 +341,6 @@ public class BigQueryStorageStreamSource<T> extends BoundedSource<T> {\n                   + \"the left of the split fraction {}.\",\n               source.readStream.getName(),\n               fraction);\n-          splitPossible = false;\n           return null;\n         } catch (Exception e) {\n           Metrics.counter(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2Nzg5Mw==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526467893", "bodyText": "Same comment here.", "author": "kmjung", "createdAt": "2020-11-18T22:32:51Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java", "diffHunk": "@@ -335,13 +341,15 @@ public synchronized void close() {\n                   + \"the left of the split fraction {}.\",\n               source.readStream.getName(),\n               fraction);\n+          splitPossible = false;\n           return null;\n         } catch (Exception e) {\n           Metrics.counter(\n                   BigQueryStorageStreamReader.class,\n                   \"split-at-fraction-calls-failed-due-to-other-reasons\")\n               .inc();\n           LOG.error(\"BigQuery Storage API stream split failed.\", e);\n+          splitPossible = false;", "originalCommit": "bd04d3e47bc81b17e17339c84b1e7e0c7332bedf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4MDM1Ng==", "url": "https://github.com/apache/beam/pull/13378#discussion_r526480356", "bodyText": "Removed.", "author": "vachan-shetty", "createdAt": "2020-11-18T23:00:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ2Nzg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4a7f304e636551db692e18370ac6828b0417eac3", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\nindex 07a1a2f32e..1d59dcb67b 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryStorageStreamSource.java\n\n@@ -341,7 +341,6 @@ public class BigQueryStorageStreamSource<T> extends BoundedSource<T> {\n                   + \"the left of the split fraction {}.\",\n               source.readStream.getName(),\n               fraction);\n-          splitPossible = false;\n           return null;\n         } catch (Exception e) {\n           Metrics.counter(\n"}}, {"oid": "4a7f304e636551db692e18370ac6828b0417eac3", "url": "https://github.com/apache/beam/commit/4a7f304e636551db692e18370ac6828b0417eac3", "message": "[BEAM-11208] Review changes.", "committedDate": "2020-11-18T22:58:02Z", "type": "commit"}]}