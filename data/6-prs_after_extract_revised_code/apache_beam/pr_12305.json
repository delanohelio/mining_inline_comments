{"pr_number": 12305, "pr_title": "[BEAM-9968] Guarantee that outstanding split/progress requests are handled before bundle completion (and before any final progress/checkpoint data sent to handlers).", "pr_createdAt": "2020-07-17T20:46:27Z", "pr_url": "https://github.com/apache/beam/pull/12305", "timeline": [{"oid": "121c7676de81616b558de2764ce3d23b2d7516fd", "url": "https://github.com/apache/beam/commit/121c7676de81616b558de2764ce3d23b2d7516fd", "message": "[BEAM-9968] Guarantee that outstanding split/progress requests are handled before bundle completion (and before and final progress/checkpoint data sent to handlers).\n\nThe test was failing because there was an outstanding split request that was queued in the FnApiControlClient(https://github.com/apache/beam/blob/f7b23ec69fa68f4f0b6386ecec32ab12982e4098/runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/FnApiControlClient.java#L134) which if all outstanding responses haven't returned will throw an error which causes the test to fail because of this exception being unexpected. This should also fix the progress test since it could also see this issue.", "committedDate": "2020-07-17T20:39:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3MzAzNA==", "url": "https://github.com/apache/beam/pull/12305#discussion_r456673034", "bodyText": "Does this need to be volatile?", "author": "apilloud", "createdAt": "2020-07-17T21:02:44Z", "path": "runners/java-fn-execution/src/main/java/org/apache/beam/runners/fnexecution/control/SdkHarnessClient.java", "diffHunk": "@@ -310,6 +312,9 @@ public ActiveBundle newBundle(\n       private final BundleSplitHandler splitHandler;\n       private final BundleCheckpointHandler checkpointHandler;\n       private final BundleFinalizationHandler finalizationHandler;\n+      private final Phaser outstandingRequests;\n+      private final AtomicBoolean isClosed;\n+      private boolean bundleIsCompleted;", "originalCommit": "121c7676de81616b558de2764ce3d23b2d7516fd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3NDQ3Ng==", "url": "https://github.com/apache/beam/pull/12305#discussion_r456674476", "bodyText": "Looks like the answer is no because synchronized blocks flush caches.", "author": "apilloud", "createdAt": "2020-07-17T21:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3MzAzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3NTAzOA==", "url": "https://github.com/apache/beam/pull/12305#discussion_r456675038", "bodyText": "no, its always used in a synchronized block.", "author": "lukecwik", "createdAt": "2020-07-17T21:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3MzAzNA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "d7fab710f248b53d89cfa50e50aa63e636a81960", "url": "https://github.com/apache/beam/commit/d7fab710f248b53d89cfa50e50aa63e636a81960", "message": "fixup! Make sure we use ActiveBundle.this to guarantee which object we are synchronizing against.", "committedDate": "2020-07-17T21:06:26Z", "type": "commit"}]}