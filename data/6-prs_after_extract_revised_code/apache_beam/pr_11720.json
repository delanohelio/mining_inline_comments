{"pr_number": 11720, "pr_title": "[BEAM-9729] Ignore bundle registration requests.", "pr_createdAt": "2020-05-15T17:09:45Z", "pr_url": "https://github.com/apache/beam/pull/11720", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjgyNA==", "url": "https://github.com/apache/beam/pull/11720#discussion_r426012824", "bodyText": "do we not need the try/catch block anymore?", "author": "ananvay", "createdAt": "2020-05-15T19:45:37Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)\n               .build(\n                   new CacheLoader<String, BeamFnApi.ProcessBundleDescriptor>() {\n                     @Override\n                     public BeamFnApi.ProcessBundleDescriptor load(String id) {\n-                      try {\n-                        return blockingControlStub.getProcessBundleDescriptor(\n-                            BeamFnApi.GetProcessBundleDescriptorRequest.newBuilder()\n-                                .setProcessBundleDescriptorId(id)\n-                                .build());\n-                      } catch (Throwable th) {\n-                        return (BeamFnApi.ProcessBundleDescriptor) fnApiRegistry.getById(id);", "originalCommit": "cb83821235b0dd7a248a406e8e6b369822da8b2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODk3NA==", "url": "https://github.com/apache/beam/pull/11720#discussion_r426018974", "bodyText": "All runners now support the pull protocol.", "author": "robertwb", "createdAt": "2020-05-15T19:59:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjgyNA=="}], "type": "inlineReview", "revised_code": {"commit": "b4345429bd3c2cd02b53d05ccfb57fbfd62bd972", "chunk": "diff --git a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\nindex bdf3096354..54bad30ebc 100644\n--- a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\n+++ b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\n\n@@ -205,8 +204,6 @@ public class FnHarness {\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n-              .maximumSize(1000)\n-              .expireAfterAccess(10, TimeUnit.MINUTES)\n               .build(\n                   new CacheLoader<String, BeamFnApi.ProcessBundleDescriptor>() {\n                     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMzM1OQ==", "url": "https://github.com/apache/beam/pull/11720#discussion_r426013359", "bodyText": "Is this too large of a time interval? I'm assuming the SDK would ideally not wait ~10 min before starting the bundle, right?", "author": "ananvay", "createdAt": "2020-05-15T19:46:47Z", "path": "sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java", "diffHunk": "@@ -206,18 +205,16 @@ public static void main(\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n+              .maximumSize(1000)\n+              .expireAfterAccess(10, TimeUnit.MINUTES)", "originalCommit": "cb83821235b0dd7a248a406e8e6b369822da8b2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDAxOQ==", "url": "https://github.com/apache/beam/pull/11720#discussion_r426020019", "bodyText": "This is the time duration between never seeing a bundle of this type and discarding its description from the cache. It could be smaller, but I figured it was good to start out very conservatively (both count and time).", "author": "robertwb", "createdAt": "2020-05-15T20:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMzM1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b4345429bd3c2cd02b53d05ccfb57fbfd62bd972", "chunk": "diff --git a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\nindex bdf3096354..54bad30ebc 100644\n--- a/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\n+++ b/sdks/java/harness/src/main/java/org/apache/beam/fn/harness/FnHarness.java\n\n@@ -205,8 +204,6 @@ public class FnHarness {\n \n       LoadingCache<String, BeamFnApi.ProcessBundleDescriptor> processBundleDescriptors =\n           CacheBuilder.newBuilder()\n-              .maximumSize(1000)\n-              .expireAfterAccess(10, TimeUnit.MINUTES)\n               .build(\n                   new CacheLoader<String, BeamFnApi.ProcessBundleDescriptor>() {\n                     @Override\n"}}, {"oid": "b4345429bd3c2cd02b53d05ccfb57fbfd62bd972", "url": "https://github.com/apache/beam/commit/b4345429bd3c2cd02b53d05ccfb57fbfd62bd972", "message": "[BEAM-9730] Ignore bundle registration requests.\n\nInstead always pull bundle descriptors from the runner.\n\nThis avoids having potentially duplicated caches of all bundle\ndescriptors.", "committedDate": "2020-10-02T23:36:02Z", "type": "commit"}, {"oid": "41791d553258e42d6d759f9ae14d3d7bdf3e2354", "url": "https://github.com/apache/beam/commit/41791d553258e42d6d759f9ae14d3d7bdf3e2354", "message": "Bound the size of the process bundle descriptor cache.", "committedDate": "2020-10-02T23:36:20Z", "type": "commit"}, {"oid": "41791d553258e42d6d759f9ae14d3d7bdf3e2354", "url": "https://github.com/apache/beam/commit/41791d553258e42d6d759f9ae14d3d7bdf3e2354", "message": "Bound the size of the process bundle descriptor cache.", "committedDate": "2020-10-02T23:36:20Z", "type": "forcePushed"}]}