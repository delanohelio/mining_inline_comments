{"pr_number": 11570, "pr_title": "[BEAM-10047] Merge the stages 'Gather and Sort' and 'Create Batches'", "pr_createdAt": "2020-04-29T15:19:49Z", "pr_url": "https://github.com/apache/beam/pull/11570", "timeline": [{"oid": "cd15c5e69ddc1a1ff0525b009ba822c7c3db5f18", "url": "https://github.com/apache/beam/commit/cd15c5e69ddc1a1ff0525b009ba822c7c3db5f18", "message": "Merge the 2 stages 'Gather and Sort' and 'Create Batches'\n\nThere is minimal benefit in separating these 2 stages, and significant\nbenefity in merging them: Gather and Sort encodes incoming\nMutationGroups into a List<byte[]> which would contain up to 1GB.\nThis is then output (copied) to the CreateBatches where it is decoded\nback into MutationGroups.\n\nRemoving this encode/decode should save up to 2GB of RAM.", "committedDate": "2020-05-01T11:43:20Z", "type": "forcePushed"}, {"oid": "f6a09a2856e8c42aec6460dc9f99f89bdbb2e1af", "url": "https://github.com/apache/beam/commit/f6a09a2856e8c42aec6460dc9f99f89bdbb2e1af", "message": "Merge the 2 stages 'Gather and Sort' and 'Create Batches'\n\nThere is minimal benefit in separating these 2 stages, and significant\nbenefity in merging them: Gather and Sort encodes incoming\nMutationGroups into a List<byte[]> which would contain up to 1GB.\nThis is then output (copied) to the CreateBatches where it is decoded\nback into MutationGroups.\n\nRemoving this encode/decode should save up to 2GB of RAM.", "committedDate": "2020-05-01T11:49:42Z", "type": "forcePushed"}, {"oid": "87d22b580317d8cf0dfbb1446a27abcd353e248b", "url": "https://github.com/apache/beam/commit/87d22b580317d8cf0dfbb1446a27abcd353e248b", "message": "Merge the 2 stages 'Gather and Sort' and 'Create Batches'\n\nThere is minimal benefit in separating these 2 stages, and significant\nbenefity in merging them: Gather and Sort encodes incoming\nMutationGroups into a List<byte[]> which would contain up to 1GB.\nThis is then output (copied) to the CreateBatches where it is decoded\nback into MutationGroups.\n\nRemoving this encode/decode should save up to 2GB of RAM.", "committedDate": "2020-05-01T12:01:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MjM3Mg==", "url": "https://github.com/apache/beam/pull/11570#discussion_r420982372", "bodyText": "Do we need to mark this as synchronized. Looks like all the callers are synchronized themselves.", "author": "allenpradeep", "createdAt": "2020-05-06T17:54:50Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java", "diffHunk": "@@ -1171,67 +1145,127 @@ public void processElement(ProcessContext c) {\n    * occur, Therefore this DoFn has to be tested in isolation.\n    */\n   @VisibleForTesting\n-  static class GatherBundleAndSortFn extends DoFn<MutationGroup, Iterable<KV<byte[], byte[]>>> {\n-    private final long maxBatchSizeBytes;\n-    private final long maxNumMutations;\n-    private final long maxNumRows;\n-\n-    // total size of the current batch.\n-    private long batchSizeBytes;\n-    // total number of mutated cells.\n-    private long batchCells;\n-    // total number of rows mutated.\n-    private long batchRows;\n+  static class GatherSortCreateBatchesFn extends DoFn<MutationGroup, Iterable<MutationGroup>> {\n \n+    private final long maxBatchSizeBytes;\n+    private final long maxBatchNumMutations;\n+    private final long maxBatchNumRows;\n+    private final long maxSortableSizeBytes;\n+    private final long maxSortableNumMutations;\n+    private final long maxSortableNumRows;\n     private final PCollectionView<SpannerSchema> schemaView;\n+    private final ArrayList<MutationGroupContainer> mutationsToSort = new ArrayList<>();\n \n-    private transient ArrayList<KV<byte[], byte[]>> mutationsToSort = null;\n+    // total size of MutationGroups in mutationsToSort.\n+    private long sortableSizeBytes;\n+    // total number of mutated cells in mutationsToSort\n+    private long sortableNumCells;\n+    // total number of rows mutated in mutationsToSort\n+    private long sortableNumRows;\n \n-    GatherBundleAndSortFn(\n+    GatherSortCreateBatchesFn(\n         long maxBatchSizeBytes,\n         long maxNumMutations,\n         long maxNumRows,\n         long groupingFactor,\n         PCollectionView<SpannerSchema> schemaView) {\n-      this.maxBatchSizeBytes = maxBatchSizeBytes * groupingFactor;\n-      this.maxNumMutations = maxNumMutations * groupingFactor;\n-      this.maxNumRows = maxNumRows * groupingFactor;\n+      this.maxBatchSizeBytes = maxBatchSizeBytes;\n+      this.maxBatchNumMutations = maxNumMutations;\n+      this.maxBatchNumRows = maxNumRows;\n+\n+      if (groupingFactor <= 0) {\n+        groupingFactor = 1;\n+      }\n+\n+      this.maxSortableSizeBytes = maxBatchSizeBytes * groupingFactor;\n+      this.maxSortableNumMutations = maxNumMutations * groupingFactor;\n+      this.maxSortableNumRows = maxNumRows * groupingFactor;\n       this.schemaView = schemaView;\n     }\n \n     @StartBundle\n     public synchronized void startBundle() throws Exception {\n-      if (mutationsToSort == null) {\n-        initSorter();\n-      } else {\n-        throw new IllegalStateException(\"Sorter should be null here\");\n-      }\n+      initSorter();\n     }\n \n-    private void initSorter() {\n-      mutationsToSort = new ArrayList<KV<byte[], byte[]>>((int) maxNumMutations);\n-      batchSizeBytes = 0;\n-      batchCells = 0;\n-      batchRows = 0;\n+    private synchronized void initSorter() {", "originalCommit": "87d22b580317d8cf0dfbb1446a27abcd353e248b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0NzYzMA==", "url": "https://github.com/apache/beam/pull/11570#discussion_r426947630", "bodyText": "Do we need to mark this as synchronized. Looks like all the callers are synchronized themselves.\n\nProbably not, but it does not harm.", "author": "nielm", "createdAt": "2020-05-18T23:33:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MjM3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ac119f02526c3dc0bc254f0aab1855e432acc024", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java\nindex 0feb39ab02..dae7ae674c 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/spanner/SpannerIO.java\n\n@@ -1157,11 +1175,11 @@ public class SpannerIO {\n     private final ArrayList<MutationGroupContainer> mutationsToSort = new ArrayList<>();\n \n     // total size of MutationGroups in mutationsToSort.\n-    private long sortableSizeBytes;\n+    private long sortableSizeBytes = 0;\n     // total number of mutated cells in mutationsToSort\n-    private long sortableNumCells;\n+    private long sortableNumCells = 0;\n     // total number of rows mutated in mutationsToSort\n-    private long sortableNumRows;\n+    private long sortableNumRows = 0;\n \n     GatherSortCreateBatchesFn(\n         long maxBatchSizeBytes,\n"}}, {"oid": "98c0aaf64a9186314a526201583341118509e98e", "url": "https://github.com/apache/beam/commit/98c0aaf64a9186314a526201583341118509e98e", "message": "Merge the 2 stages 'Gather and Sort' and 'Create Batches'\n\nThere is minimal benefit in separating these 2 stages, and significant\nbenefity in merging them: Gather and Sort encodes incoming\nMutationGroups into a List<byte[]> which would contain up to 1GB.\nThis is then output (copied) to the CreateBatches where it is decoded\nback into MutationGroups.\n\nRemoving this encode/decode should save up to 2GB of RAM.", "committedDate": "2020-05-18T22:56:47Z", "type": "forcePushed"}, {"oid": "ac119f02526c3dc0bc254f0aab1855e432acc024", "url": "https://github.com/apache/beam/commit/ac119f02526c3dc0bc254f0aab1855e432acc024", "message": "Add additional documentation on Batching and Grouping", "committedDate": "2020-05-18T23:38:20Z", "type": "forcePushed"}, {"oid": "8f9443829d9393671117beda29dfba037372d507", "url": "https://github.com/apache/beam/commit/8f9443829d9393671117beda29dfba037372d507", "message": "Add additional documentation on Batching and Grouping", "committedDate": "2020-05-18T23:43:29Z", "type": "forcePushed"}, {"oid": "fcf4a1c998457c07a7986e0e36b14e9975be38bb", "url": "https://github.com/apache/beam/commit/fcf4a1c998457c07a7986e0e36b14e9975be38bb", "message": "Add additional documentation on Batching and Grouping", "committedDate": "2020-05-19T11:25:20Z", "type": "forcePushed"}, {"oid": "401fdc06c68e066d6f5b9fdfe200952a132df81e", "url": "https://github.com/apache/beam/commit/401fdc06c68e066d6f5b9fdfe200952a132df81e", "message": "Merge the 2 stages 'Gather and Sort' and 'Create Batches'\n\nThere is minimal benefit in separating these 2 stages, and significant\nbenefity in merging them: Gather and Sort encodes incoming\nMutationGroups into a List<byte[]> which would contain up to 1GB.\nThis is then output (copied) to the CreateBatches where it is decoded\nback into MutationGroups.\n\nRemoving this encode/decode should save up to 2GB of RAM.", "committedDate": "2020-06-10T08:41:02Z", "type": "commit"}, {"oid": "a74866ba56d92d9476006b7e40a0e0ff916748ca", "url": "https://github.com/apache/beam/commit/a74866ba56d92d9476006b7e40a0e0ff916748ca", "message": "Add additional documentation on Batching and Grouping", "committedDate": "2020-06-10T08:41:02Z", "type": "commit"}, {"oid": "a74866ba56d92d9476006b7e40a0e0ff916748ca", "url": "https://github.com/apache/beam/commit/a74866ba56d92d9476006b7e40a0e0ff916748ca", "message": "Add additional documentation on Batching and Grouping", "committedDate": "2020-06-10T08:41:02Z", "type": "forcePushed"}]}