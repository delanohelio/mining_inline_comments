{"pr_number": 12567, "pr_title": "[BEAM-10715] Update Jet Runner validates runner testing", "pr_createdAt": "2020-08-13T07:46:10Z", "pr_url": "https://github.com/apache/beam/pull/12567", "timeline": [{"oid": "159e82a161843225bf9cc5d5b2169a0008b81956", "url": "https://github.com/apache/beam/commit/159e82a161843225bf9cc5d5b2169a0008b81956", "message": "Adapt Jet Runner to recent framework changes", "committedDate": "2020-08-13T07:25:23Z", "type": "commit"}, {"oid": "7ee7c4ae340bb2545f40e41665dd46fba36339dd", "url": "https://github.com/apache/beam/commit/7ee7c4ae340bb2545f40e41665dd46fba36339dd", "message": "Add pre-commit checks for Jet Runner", "committedDate": "2020-08-13T07:30:54Z", "type": "commit"}, {"oid": "4127ecff46a719a76e8d50a96387313ae7101fc4", "url": "https://github.com/apache/beam/commit/4127ecff46a719a76e8d50a96387313ae7101fc4", "message": "Make spotless checker happy", "committedDate": "2020-08-13T07:54:07Z", "type": "commit"}, {"oid": "55af2d42fbbfc486f25adac8023cddecfcf81d54", "url": "https://github.com/apache/beam/commit/55af2d42fbbfc486f25adac8023cddecfcf81d54", "message": "Make checkstyle happy", "committedDate": "2020-08-13T09:11:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NTYzOQ==", "url": "https://github.com/apache/beam/pull/12567#discussion_r470095639", "bodyText": "We should be dropping processing based timers if the watermark advances to infinity and not be executing them.\nWe can keep the existing behavior that we had but in a follow-up PR it would make sense to fix this logic.", "author": "lukecwik", "createdAt": "2020-08-13T17:01:07Z", "path": "runners/jet/src/main/java/org/apache/beam/runners/jet/processors/StatefulParDoP.java", "diffHunk": "@@ -276,36 +262,94 @@ Processor getEx(\n           inputValueCoder,\n           outputValueCoders,\n           ordinalToSideInput,\n+          sideInputMapping,\n           ownerId,\n           stepId);\n     }\n   }\n \n-  private static class KeyedStepContext implements StepContext {\n+  private class KeyedStepContext implements StepContext {\n \n-    private final Map<Object, InMemoryStateInternals> stateInternalsOfKeys;\n-    private final InMemoryTimerInternals timerInternals;\n+    private final Object nullKey = new Object();\n \n-    private InMemoryStateInternals currentStateInternals;\n+    private final ConcurrentHashMap<Object, InMemoryStateInternals> keyedStateInternals;\n+    private final ConcurrentHashMap<Object, InMemoryTimerInternals> keyedTimerInternals;\n \n-    KeyedStepContext(InMemoryTimerInternals timerInternals) {\n-      this.stateInternalsOfKeys = new HashMap<>();\n-      this.timerInternals = timerInternals;\n+    @SuppressWarnings(\"ThreadLocalUsage\")\n+    private final ThreadLocal<Object> currentKey = new ThreadLocal<>();\n+\n+    KeyedStepContext() {\n+      this.keyedStateInternals = new ConcurrentHashMap<>();\n+      this.keyedTimerInternals = new ConcurrentHashMap<>();\n     }\n \n     void setKey(Object key) {\n-      currentStateInternals =\n-          stateInternalsOfKeys.computeIfAbsent(key, InMemoryStateInternals::forKey);\n+      Object normalizedKey = key == null ? nullKey : key;\n+      currentKey.set(normalizedKey);\n+      keyedStateInternals.computeIfAbsent(normalizedKey, InMemoryStateInternals::forKey);\n+      keyedTimerInternals.computeIfAbsent(normalizedKey, k -> new InMemoryTimerInternals());\n+    }\n+\n+    void clearKey() {\n+      currentKey.remove();\n     }\n \n     @Override\n     public StateInternals stateInternals() {\n-      return currentStateInternals;\n+      Object key = currentKey.get();\n+      if (key == null) {\n+        throw new IllegalStateException(\"Active key should be set\");\n+      }\n+      return keyedStateInternals.get(key);\n     }\n \n     @Override\n     public TimerInternals timerInternals() {\n-      return timerInternals;\n+      Object key = currentKey.get();\n+      if (key == null) {\n+        throw new IllegalStateException(\"Active key should be set\");\n+      }\n+      return keyedTimerInternals.get(key);\n+    }\n+\n+    public void advanceProcessingTimes() {\n+      Instant now = Instant.now();\n+      keyedTimerInternals\n+          .values()\n+          .forEach(\n+              timerInternals -> {\n+                try {\n+                  timerInternals.advanceProcessingTime(now);\n+                  timerInternals.advanceSynchronizedProcessingTime(now);\n+                } catch (Exception e) {\n+                  throw new RuntimeException(\"Failed advancing time!\");\n+                }\n+              });\n+    }\n+\n+    public void flushTimers(long watermark) {\n+      Instant watermarkInstant = new Instant(watermark);\n+      keyedTimerInternals\n+          .entrySet()\n+          .forEach(\n+              (entry) -> {\n+                InMemoryTimerInternals timerInternals = entry.getValue();\n+                if (timerInternals.currentInputWatermarkTime().isBefore(watermark)) {\n+                  try {\n+                    timerInternals.advanceInputWatermark(watermarkInstant);\n+                    if (watermarkInstant.equals(BoundedWindow.TIMESTAMP_MAX_VALUE)) {\n+                      timerInternals.advanceProcessingTime(watermarkInstant);\n+                      timerInternals.advanceSynchronizedProcessingTime(watermarkInstant);", "originalCommit": "55af2d42fbbfc486f25adac8023cddecfcf81d54", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQwNTYzMA==", "url": "https://github.com/apache/beam/pull/12567#discussion_r471405630", "bodyText": "ok", "author": "jbartok", "createdAt": "2020-08-17T11:07:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NTYzOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a606d54a14be3df23dc613498e17c24fa5d0d672", "url": "https://github.com/apache/beam/commit/a606d54a14be3df23dc613498e17c24fa5d0d672", "message": "Remove Jet Runner validation tests from pre-commit", "committedDate": "2020-08-17T11:06:54Z", "type": "commit"}, {"oid": "ee88be1d69c865346eb6fffb3dab02a3b9087aae", "url": "https://github.com/apache/beam/commit/ee88be1d69c865346eb6fffb3dab02a3b9087aae", "message": "Update runners/jet/build.gradle", "committedDate": "2020-08-17T16:09:01Z", "type": "commit"}, {"oid": "c1c4a77dd09e58b19a219a7f2e9b1c931a872737", "url": "https://github.com/apache/beam/commit/c1c4a77dd09e58b19a219a7f2e9b1c931a872737", "message": "Merge branch 'master' into update-jet-runner", "committedDate": "2020-08-18T07:30:12Z", "type": "commit"}]}