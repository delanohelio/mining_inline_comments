{"pr_number": 11357, "pr_title": "[BEAM-7770] Add ReadAll transform for SolrIO", "pr_createdAt": "2020-04-09T00:39:40Z", "pr_url": "https://github.com/apache/beam/pull/11357", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2NDA2NQ==", "url": "https://github.com/apache/beam/pull/11357#discussion_r430364065", "bodyText": "Is withReplicaInfo() required here? If yes, please, add a check.", "author": "aromanenko-dev", "createdAt": "2020-05-26T12:10:28Z", "path": "sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java", "diffHunk": "@@ -364,36 +372,41 @@ Read withBatchSize(int batchSize) {\n       // by tuning batchSize when pipelines run.\n       checkArgument(\n           batchSize > 0 && batchSize < MAX_BATCH_SIZE,\n-          \"Valid values for batchSize are 1 (inclusize) to %s (exclusive), but was: %s \",\n+          \"Valid values for batchSize are 1 (inclusive) to %s (exclusive), but was: %s \",\n           MAX_BATCH_SIZE,\n           batchSize);\n       return builder().setBatchSize(batchSize).build();\n     }\n \n+    /** Read from a specific Replica (partition). */\n+    public Read withReplicaInfo(ReplicaInfo replicaInfo) {\n+      checkArgument(replicaInfo != null, \"replicaInfo can not be null\");\n+      return builder().setReplicaInfo(replicaInfo).build();\n+    }\n+\n     @Override\n     public PCollection<SolrDocument> expand(PBegin input) {\n       checkArgument(\n           getConnectionConfiguration() != null, \"withConnectionConfiguration() is required\");\n       checkArgument(getCollection() != null, \"from() is required\");\n-\n-      return input\n-          .apply(\"Create\", Create.of(this))\n-          .apply(\"Split\", ParDo.of(new SplitFn()))\n-          .apply(\"Reshuffle\", Reshuffle.viaRandomKey())\n-          .apply(\"Read\", ParDo.of(new ReadFn()));\n+      return input.apply(\"Create\", Create.of(this)).apply(\"ReadAll\", readAll());", "originalCommit": "a621c5d3335baebcfa98cb645c2a57f0597d8147", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTU2NQ==", "url": "https://github.com/apache/beam/pull/11357#discussion_r430369565", "bodyText": "My bad, I think we don't need it here since anyway it will pass through SplitFn downstream", "author": "aromanenko-dev", "createdAt": "2020-05-26T12:20:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2NDA2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "63b4d3a27a5e6400cf8cf812bc46ed5350f36bde", "chunk": "diff --git a/sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java b/sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java\nindex 7b23839ce0..01fc612d1b 100644\n--- a/sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java\n+++ b/sdks/java/io/solr/src/main/java/org/apache/beam/sdk/io/solr/SolrIO.java\n\n@@ -389,7 +385,12 @@ public class SolrIO {\n       checkArgument(\n           getConnectionConfiguration() != null, \"withConnectionConfiguration() is required\");\n       checkArgument(getCollection() != null, \"from() is required\");\n-      return input.apply(\"Create\", Create.of(this)).apply(\"ReadAll\", readAll());\n+\n+      return input\n+          .apply(\"Create\", Create.of(this))\n+          .apply(\"Split\", ParDo.of(new SplitFn()))\n+          .apply(\"Reshuffle\", Reshuffle.viaRandomKey())\n+          .apply(\"Read\", ParDo.of(new ReadFn()));\n     }\n \n     @Override\n"}}, {"oid": "63b4d3a27a5e6400cf8cf812bc46ed5350f36bde", "url": "https://github.com/apache/beam/commit/63b4d3a27a5e6400cf8cf812bc46ed5350f36bde", "message": "[BEAM-7770] Make ReplicaInfo part of Read on SolrIO", "committedDate": "2020-05-27T12:07:44Z", "type": "commit"}, {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "url": "https://github.com/apache/beam/commit/61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "message": "[BEAM-7770] Add ReadAll transform for SolrIO", "committedDate": "2020-05-27T12:30:34Z", "type": "commit"}, {"oid": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "url": "https://github.com/apache/beam/commit/61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "message": "[BEAM-7770] Add ReadAll transform for SolrIO", "committedDate": "2020-05-27T12:30:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIwMzc3NA==", "url": "https://github.com/apache/beam/pull/11357#discussion_r431203774", "bodyText": "I believe we can improve this test in the future by reading with multiple Reads (the goal of adding readAll()) and check the content of read messages (not only count).", "author": "aromanenko-dev", "createdAt": "2020-05-27T14:56:53Z", "path": "sdks/java/io/solr/src/test/java/org/apache/beam/sdk/io/solr/SolrIOTest.java", "diffHunk": "@@ -155,6 +155,23 @@ public void testRead() throws Exception {\n     pipeline.run();\n   }\n \n+  @Test\n+  public void testReadAll() throws Exception {\n+    SolrIOTestUtils.insertTestDocuments(SOLR_COLLECTION, NUM_DOCS, solrClient);\n+\n+    PCollection<SolrDocument> output =\n+        pipeline\n+            .apply(\n+                Create.of(\n+                    SolrIO.read()\n+                        .withConnectionConfiguration(connectionConfiguration)\n+                        .from(SOLR_COLLECTION)\n+                        .withBatchSize(101)))\n+            .apply(SolrIO.readAll());\n+    PAssert.thatSingleton(output.apply(\"Count\", Count.globally())).isEqualTo(NUM_DOCS);", "originalCommit": "61eebf0e4623e67ef9f5430052ea5d26c7b69d0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}