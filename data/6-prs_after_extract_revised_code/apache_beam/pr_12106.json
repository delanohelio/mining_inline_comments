{"pr_number": 12106, "pr_title": "[BEAM-9792] Fixing the IOException handling in InsertAll for BigQuery", "pr_createdAt": "2020-06-26T21:06:37Z", "pr_url": "https://github.com/apache/beam/pull/12106", "timeline": [{"oid": "c8fa5dc6658523f39eba192fe9241b7ae48848c9", "url": "https://github.com/apache/beam/commit/c8fa5dc6658523f39eba192fe9241b7ae48848c9", "message": "fixing the IOException handling", "committedDate": "2020-06-26T18:32:08Z", "type": "commit"}, {"oid": "aecad3541380ab44a39b6c67dc3bbc290be7330e", "url": "https://github.com/apache/beam/commit/aecad3541380ab44a39b6c67dc3bbc290be7330e", "message": "change getErrorInfo into seperate method", "committedDate": "2020-06-26T20:51:34Z", "type": "commit"}, {"oid": "5ba2dcb341b58cefbf8bc30000c03ff0e578e21a", "url": "https://github.com/apache/beam/commit/5ba2dcb341b58cefbf8bc30000c03ff0e578e21a", "message": "delete unused import", "committedDate": "2020-06-26T21:04:38Z", "type": "commit"}, {"oid": "47c6feeaf2d4288727a860eeac60ad992a722720", "url": "https://github.com/apache/beam/commit/47c6feeaf2d4288727a860eeac60ad992a722720", "message": "delete empty line in import", "committedDate": "2020-06-26T21:23:17Z", "type": "commit"}, {"oid": "7da0400465dc359799bb81eb6055eb8e25c86d28", "url": "https://github.com/apache/beam/commit/7da0400465dc359799bb81eb6055eb8e25c86d28", "message": "spotless change", "committedDate": "2020-06-26T22:22:08Z", "type": "commit"}, {"oid": "dd3777e9f7cad4b8b6b6dfe1e35e266113ed3b62", "url": "https://github.com/apache/beam/commit/dd3777e9f7cad4b8b6b6dfe1e35e266113ed3b62", "message": "naming change", "committedDate": "2020-06-27T00:46:51Z", "type": "commit"}, {"oid": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "url": "https://github.com/apache/beam/commit/d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "message": "change to vendored gauva class", "committedDate": "2020-06-27T04:53:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3OTkwOA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451179908", "bodyText": "I would move this to a String constant. Also probably add a reference to here: https://cloud.google.com/bigquery/docs/error-messages", "author": "chamikaramj", "createdAt": "2020-07-07T22:29:16Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();\n+                          }\n+                          if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n+                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {", "originalCommit": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 73a3a404a5..c76dd66876 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -791,18 +794,18 @@ class BigQueryServicesImpl implements BigQueryServices {\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n-                          LOG.info(\n-                              String.format(\n-                                  \"BigQuery insertAll error, retrying: %s\",\n-                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n                           if (errorInfo == null) {\n-                            return insert.execute().getInsertErrors();\n+                            throw e;\n                           }\n                           if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n-                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {\n-                            return insert.execute().getInsertErrors();\n+                              && !errorInfo.getReason().equals(QUOTA_EXCEEDED)) {\n+                            throw e;\n                           }\n+                          LOG.info(\n+                              String.format(\n+                                  \"BigQuery insertAll error, retrying: %s\",\n+                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           try {\n                             sleeper.sleep(backoff1.nextBackOffMillis());\n                           } catch (InterruptedException interrupted) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODg5NQ==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451188895", "bodyText": "Why are we performing an extra retry here ?", "author": "chamikaramj", "createdAt": "2020-07-07T22:55:44Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();", "originalCommit": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1NDU1NQ==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451554555", "bodyText": "I have changed it to throw the exception directly and changed the corresponding unit test.", "author": "danielxjd", "createdAt": "2020-07-08T13:43:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODg5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 73a3a404a5..c76dd66876 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -791,18 +794,18 @@ class BigQueryServicesImpl implements BigQueryServices {\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n-                          LOG.info(\n-                              String.format(\n-                                  \"BigQuery insertAll error, retrying: %s\",\n-                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n                           if (errorInfo == null) {\n-                            return insert.execute().getInsertErrors();\n+                            throw e;\n                           }\n                           if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n-                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {\n-                            return insert.execute().getInsertErrors();\n+                              && !errorInfo.getReason().equals(QUOTA_EXCEEDED)) {\n+                            throw e;\n                           }\n+                          LOG.info(\n+                              String.format(\n+                                  \"BigQuery insertAll error, retrying: %s\",\n+                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           try {\n                             sleeper.sleep(backoff1.nextBackOffMillis());\n                           } catch (InterruptedException interrupted) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4ODk4NA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451188984", "bodyText": "Ditto regarding the extra retry.", "author": "chamikaramj", "createdAt": "2020-07-07T22:56:02Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -793,6 +795,14 @@ public void deleteDataset(String projectId, String datasetId)\n                               String.format(\n                                   \"BigQuery insertAll error, retrying: %s\",\n                                   ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            return insert.execute().getInsertErrors();\n+                          }\n+                          if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n+                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {\n+                            return insert.execute().getInsertErrors();", "originalCommit": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 73a3a404a5..c76dd66876 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -791,18 +794,18 @@ class BigQueryServicesImpl implements BigQueryServices {\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n-                          LOG.info(\n-                              String.format(\n-                                  \"BigQuery insertAll error, retrying: %s\",\n-                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n                           if (errorInfo == null) {\n-                            return insert.execute().getInsertErrors();\n+                            throw e;\n                           }\n                           if (!ApiErrorExtractor.INSTANCE.rateLimited(e)\n-                              && !errorInfo.getReason().equals(\"quotaExceeded\")) {\n-                            return insert.execute().getInsertErrors();\n+                              && !errorInfo.getReason().equals(QUOTA_EXCEEDED)) {\n+                            throw e;\n                           }\n+                          LOG.info(\n+                              String.format(\n+                                  \"BigQuery insertAll error, retrying: %s\",\n+                                  ApiErrorExtractor.INSTANCE.getErrorMessage(e)));\n                           try {\n                             sleeper.sleep(backoff1.nextBackOffMillis());\n                           } catch (InterruptedException interrupted) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451193687", "bodyText": "How do these exceptions extend both GoogleJsonResponseException and IOException ?", "author": "chamikaramj", "createdAt": "2020-07-07T23:10:54Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {", "originalCommit": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMzQwOA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451213408", "bodyText": "GoogleJsonResponseException extends HttpResponseException and HttpResponseException extends IOException", "author": "danielxjd", "createdAt": "2020-07-08T00:18:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNzM2Mg==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451237362", "bodyText": "Thanks. In that case let's simplify this to following.\nif (!(e instanceof GoogleJsonResponseException)) {\nreturn null;\n}\nGoogleJsonResponseException jsonCause = (GoogleJsonResponseException) e;\n...", "author": "chamikaramj", "createdAt": "2020-07-08T01:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MTY3Nw==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451241677", "bodyText": "Yup, that should work better.", "author": "danielxjd", "createdAt": "2020-07-08T02:10:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5MzY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 73a3a404a5..c76dd66876 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -903,7 +906,7 @@ class BigQueryServicesImpl implements BigQueryServices {\n           ignoreInsertIds);\n     }\n \n-    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n       GoogleJsonResponseException jsonCause = null;\n       Throwable eCause = e;\n       if (eCause instanceof GoogleJsonResponseException) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NDE1NA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451194154", "bodyText": "Please add a unit test for this method.", "author": "chamikaramj", "createdAt": "2020-07-07T23:12:23Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +903,20 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;\n+      Throwable eCause = e;\n+      if (eCause instanceof GoogleJsonResponseException) {\n+        jsonCause = (GoogleJsonResponseException) eCause;\n+      } else {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = jsonCause.getDetails();", "originalCommit": "d2763c45ebe6cff4a1e0a63d512fdc67f34f4dc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1NDA3OA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451554078", "bodyText": "Test added", "author": "danielxjd", "createdAt": "2020-07-08T13:43:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5NDE1NA=="}], "type": "inlineReview", "revised_code": {"commit": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 73a3a404a5..c76dd66876 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -903,7 +906,7 @@ class BigQueryServicesImpl implements BigQueryServices {\n           ignoreInsertIds);\n     }\n \n-    private GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n       GoogleJsonResponseException jsonCause = null;\n       Throwable eCause = e;\n       if (eCause instanceof GoogleJsonResponseException) {\n"}}, {"oid": "5ae8915aff7cc5c38276ed0b216d6579157c7d44", "url": "https://github.com/apache/beam/commit/5ae8915aff7cc5c38276ed0b216d6579157c7d44", "message": "add unit test", "committedDate": "2020-07-08T01:59:35Z", "type": "commit"}, {"oid": "498ed60a8becb2696c0e5ecbf1bc7b0e64fc4dd2", "url": "https://github.com/apache/beam/commit/498ed60a8becb2696c0e5ecbf1bc7b0e64fc4dd2", "message": "remove redundent code", "committedDate": "2020-07-08T02:03:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MjY1NA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451242654", "bodyText": "We can further simplify :)\nprotected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\nif (!(e instanceof GoogleJsonResponseException)) {\nreturn null;\n}\nGoogleJsonError jsonError = ((GoogleJsonResponseException) e).getDetails();\n...", "author": "chamikaramj", "createdAt": "2020-07-08T02:14:09Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -893,6 +906,19 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      GoogleJsonResponseException jsonCause = null;", "originalCommit": "498ed60a8becb2696c0e5ecbf1bc7b0e64fc4dd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0NDQwMA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r451244400", "bodyText": "True, I have further simplified the method.", "author": "danielxjd", "createdAt": "2020-07-08T02:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI0MjY1NA=="}], "type": "inlineReview", "revised_code": {"commit": "e05dce11dc8fff906b72cf471d7d05539027332e", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex d187bde79e..cbf3c6b16d 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -907,15 +907,11 @@ class BigQueryServicesImpl implements BigQueryServices {\n     }\n \n     protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n-      GoogleJsonResponseException jsonCause = null;\n-      Throwable eCause = e;\n-      if (!(eCause instanceof GoogleJsonResponseException)) {\n+      if (!(e instanceof GoogleJsonResponseException)) {\n         return null;\n       }\n-      jsonCause = (GoogleJsonResponseException) eCause;\n-      GoogleJsonError jsonError = jsonCause.getDetails();\n-      List<GoogleJsonError.ErrorInfo> errors = jsonError.getErrors();\n-      GoogleJsonError.ErrorInfo errorInfo = Iterables.getFirst(errors, null);\n+      GoogleJsonError jsonError = ((GoogleJsonResponseException)e).getDetails();\n+      GoogleJsonError.ErrorInfo errorInfo = Iterables.getFirst(jsonError.getErrors(), null);\n       return errorInfo;\n     }\n \n"}}, {"oid": "e05dce11dc8fff906b72cf471d7d05539027332e", "url": "https://github.com/apache/beam/commit/e05dce11dc8fff906b72cf471d7d05539027332e", "message": "further simplifies getErrorInfo", "committedDate": "2020-07-08T02:20:08Z", "type": "commit"}, {"oid": "02dd0b741ccc998ecc8629a974a904785762407b", "url": "https://github.com/apache/beam/commit/02dd0b741ccc998ecc8629a974a904785762407b", "message": "spotless fix", "committedDate": "2020-07-08T02:23:44Z", "type": "commit"}, {"oid": "010b40be9cd28a0a3672f025ef8cdf18a700e39e", "url": "https://github.com/apache/beam/commit/010b40be9cd28a0a3672f025ef8cdf18a700e39e", "message": "update", "committedDate": "2020-07-08T04:43:35Z", "type": "commit"}, {"oid": "5b264be76cbb820e53b7a132d2d6a4004155e2c9", "url": "https://github.com/apache/beam/commit/5b264be76cbb820e53b7a132d2d6a4004155e2c9", "message": "spotless", "committedDate": "2020-07-08T04:45:23Z", "type": "commit"}, {"oid": "a0ea500690d3a7a434ee607cc7937fc11eebf054", "url": "https://github.com/apache/beam/commit/a0ea500690d3a7a434ee607cc7937fc11eebf054", "message": "Merge branch 'master' into BEAM-9792", "committedDate": "2020-07-23T19:13:40Z", "type": "commit"}, {"oid": "3f26008b1cd599f6d2d99070ddc9bee10396181c", "url": "https://github.com/apache/beam/commit/3f26008b1cd599f6d2d99070ddc9bee10396181c", "message": "add comment", "committedDate": "2020-07-23T19:26:16Z", "type": "commit"}, {"oid": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "url": "https://github.com/apache/beam/commit/1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "message": "Merge branch 'BEAM-9792' of https://github.com/danielxjd/beam into BEAM-9792", "committedDate": "2020-07-23T19:28:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3ODAyMQ==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461078021", "bodyText": "Please create and link a jira ticket for this TODO.", "author": "ihji", "createdAt": "2020-07-27T18:14:19Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -805,6 +810,19 @@ public void deleteDataset(String projectId, String datasetId)\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            throw e;\n+                          }\n+                          /**\n+                           * TODO:Check for quotaExceededError The check will be replaced by", "originalCommit": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4840dbd17a56b1281ec1b6675665c490173045c8", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex f8fba01301..89106e781f 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -803,9 +804,9 @@ class BigQueryServicesImpl implements BigQueryServices {\n             futures.add(\n                 executor.submit(\n                     () -> {\n-                      // A backoff for rate limit exceeded errors. Retries forever.\n+                      // A backoff for rate limit exceeded errors.\n                       BackOff backoff1 =\n-                          BackOffAdapter.toGcpBackOff(RATE_LIMIT_BACKOFF_FACTORY.backoff());\n+                          BackOffAdapter.toGcpBackOff(rateLimitBackoffFactory.backoff());\n                       while (true) {\n                         try {\n                           return insert.execute().getInsertErrors();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NjM0NA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461096344", "bodyText": "This will silently ignore the exception. Please check whether the expected exception is actually thrown like: https://github.com/apache/beam/blob/master/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java#L316", "author": "ihji", "createdAt": "2020-07-27T18:47:02Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -687,22 +689,26 @@ public void testInsertOtherRetry() throws Throwable {\n \n     DatasetServiceImpl dataService =\n         new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n-    dataService.insertAll(\n-        ref,\n-        rows,\n-        null,\n-        BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n-        new MockSleeper(),\n-        InsertRetryPolicy.alwaysRetry(),\n-        null,\n-        null,\n-        false,\n-        false,\n-        false);\n-    verify(response, times(2)).getStatusCode();\n-    verify(response, times(2)).getContent();\n-    verify(response, times(2)).getContentType();\n-    expectedLogs.verifyInfo(\"BigQuery insertAll error, retrying:\");\n+    try {\n+      dataService.insertAll(\n+          ref,\n+          rows,\n+          null,\n+          BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n+          new MockSleeper(),\n+          InsertRetryPolicy.alwaysRetry(),\n+          null,\n+          null,\n+          false,\n+          false,\n+          false);\n+    } catch (Exception e) {", "originalCommit": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2498143bafee2f8860a72fb9efb08e8d783f61bb", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\nindex 0650380624..52fbdd3d85 100644\n--- a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n+++ b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n\n@@ -686,10 +686,9 @@ public class BigQueryServicesImplTest {\n     when(response.getContent())\n         .thenReturn(toStream(errorWithReasonAndStatus(\"actually forbidden\", 403)))\n         .thenReturn(toStream(new TableDataInsertAllResponse()));\n-\n-    DatasetServiceImpl dataService =\n-        new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n     try {\n+      DatasetServiceImpl dataService =\n+          new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n       dataService.insertAll(\n           ref,\n           rows,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Njk0OA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461096948", "bodyText": "Please modify the comment accordingly.", "author": "ihji", "createdAt": "2020-07-27T18:48:13Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -670,7 +672,7 @@ public void testInsertFailsGracefully() throws Exception {\n    * non-quota-exceeded attempts.", "originalCommit": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2498143bafee2f8860a72fb9efb08e8d783f61bb", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\nindex 0650380624..52fbdd3d85 100644\n--- a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n+++ b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n\n@@ -668,11 +668,11 @@ public class BigQueryServicesImplTest {\n   }\n \n   /**\n-   * Tests that {@link DatasetServiceImpl#insertAll} retries other non-rate-limited,\n+   * Tests that {@link DatasetServiceImpl#insertAll} will not retry other non-rate-limited,\n    * non-quota-exceeded attempts.\n    */\n   @Test\n-  public void testInsertOtherRetry() throws Exception {\n+  public void testFaielInsertOtherRetry() throws Exception {\n     TableReference ref =\n         new TableReference().setProjectId(\"project\").setDatasetId(\"dataset\").setTableId(\"table\");\n     List<ValueInSingleWindow<TableRow>> rows = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NzI3NA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461097274", "bodyText": "Please modify the method name accordingly.", "author": "ihji", "createdAt": "2020-07-27T18:48:48Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -670,7 +672,7 @@ public void testInsertFailsGracefully() throws Exception {\n    * non-quota-exceeded attempts.\n    */\n   @Test\n-  public void testInsertOtherRetry() throws Throwable {\n+  public void testInsertOtherRetry() throws Exception {", "originalCommit": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2498143bafee2f8860a72fb9efb08e8d783f61bb", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\nindex 0650380624..52fbdd3d85 100644\n--- a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n+++ b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n\n@@ -668,11 +668,11 @@ public class BigQueryServicesImplTest {\n   }\n \n   /**\n-   * Tests that {@link DatasetServiceImpl#insertAll} retries other non-rate-limited,\n+   * Tests that {@link DatasetServiceImpl#insertAll} will not retry other non-rate-limited,\n    * non-quota-exceeded attempts.\n    */\n   @Test\n-  public void testInsertOtherRetry() throws Exception {\n+  public void testFaielInsertOtherRetry() throws Exception {\n     TableReference ref =\n         new TableReference().setProjectId(\"project\").setDatasetId(\"dataset\").setTableId(\"table\");\n     List<ValueInSingleWindow<TableRow>> rows = new ArrayList<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0MA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461098640", "bodyText": "What happens if getErrors returns two or more elements?", "author": "ihji", "createdAt": "2020-07-27T18:51:14Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -909,6 +927,15 @@ public void deleteDataset(String projectId, String datasetId)\n           ignoreInsertIds);\n     }\n \n+    protected GoogleJsonError.ErrorInfo getErrorInfo(IOException e) {\n+      if (!(e instanceof GoogleJsonResponseException)) {\n+        return null;\n+      }\n+      GoogleJsonError jsonError = ((GoogleJsonResponseException) e).getDetails();\n+      GoogleJsonError.ErrorInfo errorInfo = Iterables.getFirst(jsonError.getErrors(), null);", "originalCommit": "1a43bb917f259d5d8cf8ee2051eb05c87a308edd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDIyMQ==", "url": "https://github.com/apache/beam/pull/12106#discussion_r461174221", "bodyText": "Only return the first element ErrorInfo. This is according to the logic and comment of getErrorInfo() from ApiErrorExtractor.", "author": "danielxjd", "createdAt": "2020-07-27T21:14:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5ODY0MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2498143bafee2f8860a72fb9efb08e8d783f61bb", "url": "https://github.com/apache/beam/commit/2498143bafee2f8860a72fb9efb08e8d783f61bb", "message": "change test names", "committedDate": "2020-07-27T21:58:28Z", "type": "commit"}, {"oid": "4840dbd17a56b1281ec1b6675665c490173045c8", "url": "https://github.com/apache/beam/commit/4840dbd17a56b1281ec1b6675665c490173045c8", "message": "Merge branch 'master' into BEAM-9792", "committedDate": "2020-07-27T22:03:21Z", "type": "commit"}, {"oid": "3818b42e2d8b1da1440949d1d6fd5d58a44c3e65", "url": "https://github.com/apache/beam/commit/3818b42e2d8b1da1440949d1d6fd5d58a44c3e65", "message": "spotless", "committedDate": "2020-07-27T22:29:46Z", "type": "commit"}, {"oid": "166ebe034a902b5e2aa3a19512e3f6bbaf7563ef", "url": "https://github.com/apache/beam/commit/166ebe034a902b5e2aa3a19512e3f6bbaf7563ef", "message": "Merge branch 'BEAM-9792' of https://github.com/danielxjd/beam into BEAM-9792", "committedDate": "2020-07-27T22:30:29Z", "type": "commit"}, {"oid": "2881829a4b82f87e7427eaab4b4946f470877842", "url": "https://github.com/apache/beam/commit/2881829a4b82f87e7427eaab4b4946f470877842", "message": "style change", "committedDate": "2020-07-27T22:37:40Z", "type": "commit"}, {"oid": "d7e6469094e9cdffc6a6dc19ca3206780d8e3dfe", "url": "https://github.com/apache/beam/commit/d7e6469094e9cdffc6a6dc19ca3206780d8e3dfe", "message": "add failure", "committedDate": "2020-07-27T22:39:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDUxMw==", "url": "https://github.com/apache/beam/pull/12106#discussion_r462534513", "bodyText": "I think it looks better to use thrown.expect and thrown.expectMessage instead of assertTrue with instanceof.", "author": "ihji", "createdAt": "2020-07-29T19:26:02Z", "path": "sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java", "diffHunk": "@@ -733,26 +734,29 @@ public void testInsertOtherRetry() throws Throwable {\n     when(response.getContent())\n         .thenReturn(toStream(errorWithReasonAndStatus(\"actually forbidden\", 403)))\n         .thenReturn(toStream(new TableDataInsertAllResponse()));\n-\n-    DatasetServiceImpl dataService =\n-        new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n-    dataService.insertAll(\n-        ref,\n-        rows,\n-        null,\n-        BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n-        TEST_BACKOFF,\n-        new MockSleeper(),\n-        InsertRetryPolicy.alwaysRetry(),\n-        null,\n-        null,\n-        false,\n-        false,\n-        false);\n-    verify(response, times(2)).getStatusCode();\n-    verify(response, times(2)).getContent();\n-    verify(response, times(2)).getContentType();\n-    expectedLogs.verifyInfo(\"BigQuery insertAll error, retrying:\");\n+    try {\n+      DatasetServiceImpl dataService =\n+          new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n+      dataService.insertAll(\n+          ref,\n+          rows,\n+          null,\n+          BackOffAdapter.toGcpBackOff(TEST_BACKOFF.backoff()),\n+          TEST_BACKOFF,\n+          new MockSleeper(),\n+          InsertRetryPolicy.alwaysRetry(),\n+          null,\n+          null,\n+          false,\n+          false,\n+          false);\n+      fail();\n+    } catch (RuntimeException e) {\n+      assertTrue(e instanceof RuntimeException);", "originalCommit": "d7e6469094e9cdffc6a6dc19ca3206780d8e3dfe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3MTYwMg==", "url": "https://github.com/apache/beam/pull/12106#discussion_r462571602", "bodyText": "I have changed it to use thrown.", "author": "danielxjd", "createdAt": "2020-07-29T20:34:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDUxMw=="}], "type": "inlineReview", "revised_code": {"commit": "a64c492891b3f40d836b2a7acc2a45e291dd3e7b", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\nindex 5de8304860..15bfc0abe0 100644\n--- a/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n+++ b/sdks/java/io/google-cloud-platform/src/test/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImplTest.java\n\n@@ -734,9 +734,11 @@ public class BigQueryServicesImplTest {\n     when(response.getContent())\n         .thenReturn(toStream(errorWithReasonAndStatus(\"actually forbidden\", 403)))\n         .thenReturn(toStream(new TableDataInsertAllResponse()));\n+    DatasetServiceImpl dataService =\n+        new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n+    thrown.expect(RuntimeException.class);\n+    thrown.expectMessage(\"actually forbidden\");\n     try {\n-      DatasetServiceImpl dataService =\n-          new DatasetServiceImpl(bigquery, PipelineOptionsFactory.create());\n       dataService.insertAll(\n           ref,\n           rows,\n"}}, {"oid": "a64c492891b3f40d836b2a7acc2a45e291dd3e7b", "url": "https://github.com/apache/beam/commit/a64c492891b3f40d836b2a7acc2a45e291dd3e7b", "message": "change exception handling", "committedDate": "2020-07-29T20:33:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzUxOA==", "url": "https://github.com/apache/beam/pull/12106#discussion_r462577518", "bodyText": "TODO(BEAM-10584): Check for QUOTA_EXCEEDED error will be replaced by", "author": "ihji", "createdAt": "2020-07-29T20:45:13Z", "path": "sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java", "diffHunk": "@@ -806,6 +811,19 @@ public void deleteDataset(String projectId, String datasetId)\n                         try {\n                           return insert.execute().getInsertErrors();\n                         } catch (IOException e) {\n+                          GoogleJsonError.ErrorInfo errorInfo = getErrorInfo(e);\n+                          if (errorInfo == null) {\n+                            throw e;\n+                          }\n+                          /**\n+                           * TODO:Check for quotaExceededError The check will be replaced by", "originalCommit": "a64c492891b3f40d836b2a7acc2a45e291dd3e7b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3OTQ2MQ==", "url": "https://github.com/apache/beam/pull/12106#discussion_r462579461", "bodyText": "Jira issue added", "author": "danielxjd", "createdAt": "2020-07-29T20:49:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzUxOA=="}], "type": "inlineReview", "revised_code": {"commit": "41be03c6543c9907316aa403d97eaef9ba5f39a0", "chunk": "diff --git a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\nindex 89106e781f..2067d382b4 100644\n--- a/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n+++ b/sdks/java/io/google-cloud-platform/src/main/java/org/apache/beam/sdk/io/gcp/bigquery/BigQueryServicesImpl.java\n\n@@ -816,7 +816,7 @@ class BigQueryServicesImpl implements BigQueryServices {\n                             throw e;\n                           }\n                           /**\n-                           * TODO:Check for quotaExceededError The check will be replaced by\n+                           * TODO(BEAM-10584): Check for QUOTA_EXCEEDED error will be replaced by\n                            * ApiErrorExtractor.INSTANCE.quotaExceeded(e) after the next release of\n                            * GoogleCloudDataproc/hadoop-connectors\n                            */\n"}}, {"oid": "41be03c6543c9907316aa403d97eaef9ba5f39a0", "url": "https://github.com/apache/beam/commit/41be03c6543c9907316aa403d97eaef9ba5f39a0", "message": "add jira issue", "committedDate": "2020-07-29T20:47:53Z", "type": "commit"}]}