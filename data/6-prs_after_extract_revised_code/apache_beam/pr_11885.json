{"pr_number": 11885, "pr_title": "Add a GCThrashingPerPeriod option for MemoryMonitor", "pr_createdAt": "2020-06-02T02:41:20Z", "pr_url": "https://github.com/apache/beam/pull/11885", "timeline": [{"oid": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "url": "https://github.com/apache/beam/commit/1d3916c95e3aef5c711205152bfa6eb5a8f95007", "message": "Add an GCThrashingPerPeriod option for MemoryMonitor", "committedDate": "2020-06-02T02:48:05Z", "type": "commit"}, {"oid": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "url": "https://github.com/apache/beam/commit/1d3916c95e3aef5c711205152bfa6eb5a8f95007", "message": "Add an GCThrashingPerPeriod option for MemoryMonitor", "committedDate": "2020-06-02T02:48:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5NDY3MQ==", "url": "https://github.com/apache/beam/pull/11885#discussion_r433594671", "bodyText": "Avoid confusion with minus sign, and phrase more in terms of behavior. Maybe something like:\n\nThe GC thrashing threshold percentage. A given period of time is considered \"thrashing\" if this percentage of CPU time is spent in garbage collection. Dataflow will force fail tasks after sustained periods of thrashing.\"\n\nYou could say \"percentage in the range (0.0, 100.0)\" but I think that is redundant.", "author": "kennknowles", "createdAt": "2020-06-02T03:01:41Z", "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java", "diffHunk": "@@ -192,6 +192,22 @@ public Dataflow create(PipelineOptions options) {\n \n   void setDumpHeapOnOOM(boolean dumpHeapBeforeExit);\n \n+  /**\n+   * The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. If the\n+   * time spent on garbage collection in one period exceeds this threshold, that period is\n+   * considered to be in GC thrashing.\n+   *\n+   * <p>If {@literal 100} is given as the value, MemoryMonitor will be disabled.\n+   */\n+  @Description(\n+      \"The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. \"", "originalCommit": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada829a196359e69ebe7552309ce08797c563cc", "chunk": "diff --git a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\nindex 0b4c91ebde..4811ec0081 100644\n--- a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\n+++ b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\n\n@@ -193,17 +193,17 @@ public interface DataflowPipelineDebugOptions extends ExperimentalOptions, Pipel\n   void setDumpHeapOnOOM(boolean dumpHeapBeforeExit);\n \n   /**\n-   * The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. If the\n-   * time spent on garbage collection in one period exceeds this threshold, that period is\n-   * considered to be in GC thrashing.\n+   * The GC thrashing threshold percentage. A given period of time is considered \"thrashing\" if this\n+   * percentage of CPU time is spent in garbage collection. Dataflow will force fail tasks after\n+   * sustained periods of thrashing.\n    *\n    * <p>If {@literal 100} is given as the value, MemoryMonitor will be disabled.\n    */\n   @Description(\n-      \"The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. \"\n-          + \"If the time spent on garbage collection in one period exceeds this threshold, that \"\n-          + \"period is considered to be in GC thrashing.\")\n-  @Default.Double(50)\n+      \"The GC thrashing threshold percentage. A given period of time is considered \\\"thrashing\\\" if this \"\n+          + \"percentage of CPU time is spent in garbage collection. Dataflow will force fail tasks after \"\n+          + \"sustained periods of thrashing.\")\n+  @Default.Double(50.0)\n   Double getGCThrashingPercentagePerPeriod();\n \n   void setGCThrashingPercentagePerPeriod(Double value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5NDczMQ==", "url": "https://github.com/apache/beam/pull/11885#discussion_r433594731", "bodyText": "Nit: Conventionally I would use 50.0 to emphasize its double-ness.", "author": "kennknowles", "createdAt": "2020-06-02T03:01:57Z", "path": "runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java", "diffHunk": "@@ -192,6 +192,22 @@ public Dataflow create(PipelineOptions options) {\n \n   void setDumpHeapOnOOM(boolean dumpHeapBeforeExit);\n \n+  /**\n+   * The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. If the\n+   * time spent on garbage collection in one period exceeds this threshold, that period is\n+   * considered to be in GC thrashing.\n+   *\n+   * <p>If {@literal 100} is given as the value, MemoryMonitor will be disabled.\n+   */\n+  @Description(\n+      \"The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. \"\n+          + \"If the time spent on garbage collection in one period exceeds this threshold, that \"\n+          + \"period is considered to be in GC thrashing.\")\n+  @Default.Double(50)", "originalCommit": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada829a196359e69ebe7552309ce08797c563cc", "chunk": "diff --git a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\nindex 0b4c91ebde..4811ec0081 100644\n--- a/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\n+++ b/runners/google-cloud-dataflow-java/src/main/java/org/apache/beam/runners/dataflow/options/DataflowPipelineDebugOptions.java\n\n@@ -193,17 +193,17 @@ public interface DataflowPipelineDebugOptions extends ExperimentalOptions, Pipel\n   void setDumpHeapOnOOM(boolean dumpHeapBeforeExit);\n \n   /**\n-   * The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. If the\n-   * time spent on garbage collection in one period exceeds this threshold, that period is\n-   * considered to be in GC thrashing.\n+   * The GC thrashing threshold percentage. A given period of time is considered \"thrashing\" if this\n+   * percentage of CPU time is spent in garbage collection. Dataflow will force fail tasks after\n+   * sustained periods of thrashing.\n    *\n    * <p>If {@literal 100} is given as the value, MemoryMonitor will be disabled.\n    */\n   @Description(\n-      \"The GC thrashing threshold (0.00 - 100.00) for every period to be used by MemoryMonitor. \"\n-          + \"If the time spent on garbage collection in one period exceeds this threshold, that \"\n-          + \"period is considered to be in GC thrashing.\")\n-  @Default.Double(50)\n+      \"The GC thrashing threshold percentage. A given period of time is considered \\\"thrashing\\\" if this \"\n+          + \"percentage of CPU time is spent in garbage collection. Dataflow will force fail tasks after \"\n+          + \"sustained periods of thrashing.\")\n+  @Default.Double(50.0)\n   Double getGCThrashingPercentagePerPeriod();\n \n   void setGCThrashingPercentagePerPeriod(Double value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5NDg5NA==", "url": "https://github.com/apache/beam/pull/11885#discussion_r433594894", "bodyText": "Java style is lowercase for fields", "author": "kennknowles", "createdAt": "2020-06-02T03:02:42Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java", "diffHunk": "@@ -174,6 +167,13 @@ public long totalGCTimeMilliseconds() {\n   /** If true, dump the heap when thrashing or requested. */\n   private final boolean canDumpHeap;\n \n+  /**\n+   * The GC thrashing threshold (0.00 - 100.00) for every period. If the time spent on garbage\n+   * collection in one period exceeds this threshold, that period is considered to be in GC\n+   * thrashing.\n+   */\n+  private final double GCThrashingPercentagePerPeriod;", "originalCommit": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada829a196359e69ebe7552309ce08797c563cc", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\nindex ea958047cc..9d8d698f91 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\n\n@@ -168,11 +168,10 @@ public class MemoryMonitor implements Runnable, StatusDataProvider {\n   private final boolean canDumpHeap;\n \n   /**\n-   * The GC thrashing threshold (0.00 - 100.00) for every period. If the time spent on garbage\n-   * collection in one period exceeds this threshold, that period is considered to be in GC\n-   * thrashing.\n+   * The GC thrashing threshold for every period. If the time spent on garbage collection in one\n+   * period exceeds this threshold, that period is considered to be in GC thrashing.\n    */\n-  private final double GCThrashingPercentagePerPeriod;\n+  private final double gcThrashingPercentagePerPeriod;\n \n   private final AtomicBoolean isThrashing = new AtomicBoolean(false);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU5NTE4NA==", "url": "https://github.com/apache/beam/pull/11885#discussion_r433595184", "bodyText": "Nit: this sounds a bit like a warning of user error, when actually it might be what they want. Ok to leave as-is.", "author": "kennknowles", "createdAt": "2020-06-02T03:04:02Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java", "diffHunk": "@@ -467,6 +474,14 @@ private void shutDownDueToGcThrashing(int thrashingCount) {\n   public void run() {\n     synchronized (waitingForStateChange) {\n       Preconditions.checkState(!isRunning.getAndSet(true), \"already running\");\n+\n+      if (this.GCThrashingPercentagePerPeriod <= 0 || this.GCThrashingPercentagePerPeriod >= 100) {\n+        LOG.warn(\n+            \"GCThrashingPercentagePerPeriod: {} is not valid value. Not starting MemoryMonitor.\",", "originalCommit": "1d3916c95e3aef5c711205152bfa6eb5a8f95007", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada829a196359e69ebe7552309ce08797c563cc", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\nindex ea958047cc..9d8d698f91 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/util/MemoryMonitor.java\n\n@@ -475,10 +474,10 @@ public class MemoryMonitor implements Runnable, StatusDataProvider {\n     synchronized (waitingForStateChange) {\n       Preconditions.checkState(!isRunning.getAndSet(true), \"already running\");\n \n-      if (this.GCThrashingPercentagePerPeriod <= 0 || this.GCThrashingPercentagePerPeriod >= 100) {\n+      if (this.gcThrashingPercentagePerPeriod <= 0 || this.gcThrashingPercentagePerPeriod >= 100) {\n         LOG.warn(\n-            \"GCThrashingPercentagePerPeriod: {} is not valid value. Not starting MemoryMonitor.\",\n-            this.GCThrashingPercentagePerPeriod);\n+            \"gcThrashingPercentagePerPeriod: {} is not valid value. Not starting MemoryMonitor.\",\n+            this.gcThrashingPercentagePerPeriod);\n         isRunning.set(false);\n       }\n \n"}}, {"oid": "fada829a196359e69ebe7552309ce08797c563cc", "url": "https://github.com/apache/beam/commit/fada829a196359e69ebe7552309ce08797c563cc", "message": "reviewer comments", "committedDate": "2020-06-02T03:56:40Z", "type": "commit"}]}