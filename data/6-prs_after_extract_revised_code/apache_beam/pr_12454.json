{"pr_number": 12454, "pr_title": "[BEAM-10629] KnownBuilderInstances in ExternalTransformRegistrar", "pr_createdAt": "2020-08-03T15:39:00Z", "pr_url": "https://github.com/apache/beam/pull/12454", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464497235", "bodyText": "Let's mark this Deprecated and we can remove it down the road.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n          \n          \n            \n              /** \n          \n          \n            \n               * A mapping from URN to an {@link ExternalTransformBuilder} class.\n          \n          \n            \n               *\n          \n          \n            \n               * @deprecated Prefer implementing `knownBuilderInstances`. This method will be removed in a future version of Beam.\n          \n          \n            \n               */\n          \n          \n            \n               @Deprecated", "author": "TheNeuralBit", "createdAt": "2020-08-03T15:43:03Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NjU0NQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465186545", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:43:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ5NzIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\nindex 09b56689f3..aa5288cf60 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\n\n@@ -32,24 +33,37 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Immutabl\n @Experimental(Kind.PORTABILITY)\n public interface ExternalTransformRegistrar {\n \n-  /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n-  Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();\n+  /**\n+   * A mapping from URN to an {@link ExternalTransformBuilder} class.\n+   *\n+   * @deprecated Prefer implementing 'knownBuilderInstances'. This method will be removed in a\n+   *     future version of Beam.\n+   */\n+  @Deprecated\n+  default Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders() {\n+    return ImmutableMap.<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>>builder()\n+        .build();\n+  }\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} instance. */\n   default Map<String, ExternalTransformBuilder<?, ?, ?>> knownBuilderInstances() {\n     ImmutableMap.Builder builder = ImmutableMap.<String, ExternalTransformBuilder>builder();\n     Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders = knownBuilders();\n-    for (String urn : knownBuilders.keySet()) {\n+    for (Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilder :\n+        knownBuilders.entrySet()) {\n       Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(knownBuilders.get(urn)),\n+          ExternalTransformBuilder.class.isAssignableFrom(knownBuilder.getValue()),\n           \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          knownBuilders.get(urn).getName());\n+          knownBuilder.getValue().getName());\n       try {\n         Constructor<? extends ExternalTransformBuilder> constructor =\n-            knownBuilders.get(urn).getDeclaredConstructor();\n+            knownBuilder.getValue().getDeclaredConstructor();\n \n         constructor.setAccessible(true);\n-        builder.put(urn, constructor.newInstance());\n+        builder.put(knownBuilder.getKey(), constructor.newInstance());\n+\n+      } catch (RuntimeException e) {\n+        throw e;\n       } catch (Exception e) {\n         throw new RuntimeException(\n             \"Unable to instantiate ExternalTransformBuilder from constructor.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726158", "bodyText": "I think after this change there are no callers to buildTransform, can you remove it?", "author": "TheNeuralBit", "createdAt": "2020-08-04T00:11:22Z", "path": "sdks/java/expansion-service/src/main/java/org/apache/beam/sdk/expansion/service/ExpansionService.java", "diffHunk": "@@ -107,39 +107,39 @@\n           ImmutableMap.builder();\n       for (ExternalTransformRegistrar registrar :\n           ServiceLoader.load(ExternalTransformRegistrar.class)) {\n-        for (Map.Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> entry :\n-            registrar.knownBuilders().entrySet()) {\n+        for (Map.Entry<String, ExternalTransformBuilder<?, ?, ?>> entry :\n+            registrar.knownBuilderInstances().entrySet()) {\n           String urn = entry.getKey();\n-          Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass = entry.getValue();\n+          ExternalTransformBuilder builderInstance = entry.getValue();\n           builder.put(\n               urn,\n               spec -> {\n                 try {\n                   ExternalTransforms.ExternalConfigurationPayload payload =\n                       ExternalTransforms.ExternalConfigurationPayload.parseFrom(spec.getPayload());\n-                  return translate(payload, builderClass);\n+                  return builderInstance.buildExternal(\n+                      payloadToConfig(\n+                          payload,\n+                          (Class<? extends ExternalTransformBuilder<?, ?, ?>>)\n+                              builderInstance.getClass()));\n                 } catch (Exception e) {\n                   throw new RuntimeException(\n                       String.format(\"Failed to build transform %s from spec %s\", urn, spec), e);\n                 }\n               });\n         }\n       }\n+\n       return builder.build();\n     }\n \n-    private static PTransform<?, ?> translate(\n+    Object payloadToConfig(\n         ExternalTransforms.ExternalConfigurationPayload payload,\n         Class<? extends ExternalTransformBuilder<?, ?, ?>> builderClass)\n         throws Exception {\n-      Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(builderClass),\n-          \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          builderClass.getName());\n-\n       Object configObject = initConfiguration(builderClass);\n       populateConfiguration(configObject, payload);\n-      return buildTransform(builderClass, configObject);", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzAyNg==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187026", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:44:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjE1OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw==", "url": "https://github.com/apache/beam/pull/12454#discussion_r464726803", "bodyText": "There should be a default implementation for this that just returns an empty Map, that way new implementations will only have to override knownBuilderInstances()", "author": "TheNeuralBit", "createdAt": "2020-08-04T00:13:34Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java", "diffHunk": "@@ -31,4 +34,27 @@\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n   Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();", "originalCommit": "69cffcf04402c1e39eb5669813eee7a66c386a07", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzE3OQ==", "url": "https://github.com/apache/beam/pull/12454#discussion_r465187179", "bodyText": "Done", "author": "sclukas77", "createdAt": "2020-08-04T16:44:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcyNjgwMw=="}], "type": "inlineReview", "revised_code": {"commit": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\nindex 09b56689f3..aa5288cf60 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/expansion/ExternalTransformRegistrar.java\n\n@@ -32,24 +33,37 @@ import org.apache.beam.vendor.guava.v26_0_jre.com.google.common.collect.Immutabl\n @Experimental(Kind.PORTABILITY)\n public interface ExternalTransformRegistrar {\n \n-  /** A mapping from URN to an {@link ExternalTransformBuilder} class. */\n-  Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders();\n+  /**\n+   * A mapping from URN to an {@link ExternalTransformBuilder} class.\n+   *\n+   * @deprecated Prefer implementing 'knownBuilderInstances'. This method will be removed in a\n+   *     future version of Beam.\n+   */\n+  @Deprecated\n+  default Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders() {\n+    return ImmutableMap.<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>>builder()\n+        .build();\n+  }\n \n   /** A mapping from URN to an {@link ExternalTransformBuilder} instance. */\n   default Map<String, ExternalTransformBuilder<?, ?, ?>> knownBuilderInstances() {\n     ImmutableMap.Builder builder = ImmutableMap.<String, ExternalTransformBuilder>builder();\n     Map<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilders = knownBuilders();\n-    for (String urn : knownBuilders.keySet()) {\n+    for (Entry<String, Class<? extends ExternalTransformBuilder<?, ?, ?>>> knownBuilder :\n+        knownBuilders.entrySet()) {\n       Preconditions.checkState(\n-          ExternalTransformBuilder.class.isAssignableFrom(knownBuilders.get(urn)),\n+          ExternalTransformBuilder.class.isAssignableFrom(knownBuilder.getValue()),\n           \"Provided identifier %s is not an ExternalTransformBuilder.\",\n-          knownBuilders.get(urn).getName());\n+          knownBuilder.getValue().getName());\n       try {\n         Constructor<? extends ExternalTransformBuilder> constructor =\n-            knownBuilders.get(urn).getDeclaredConstructor();\n+            knownBuilder.getValue().getDeclaredConstructor();\n \n         constructor.setAccessible(true);\n-        builder.put(urn, constructor.newInstance());\n+        builder.put(knownBuilder.getKey(), constructor.newInstance());\n+\n+      } catch (RuntimeException e) {\n+        throw e;\n       } catch (Exception e) {\n         throw new RuntimeException(\n             \"Unable to instantiate ExternalTransformBuilder from constructor.\");\n"}}, {"oid": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "url": "https://github.com/apache/beam/commit/bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "message": "[BEAM-10629] Added KnownBuilderInstances to ExternalTransformRegistrar", "committedDate": "2020-08-04T16:40:25Z", "type": "commit"}, {"oid": "bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "url": "https://github.com/apache/beam/commit/bc1b0b9498969ddc1e5f7bf0c7fde5bec8b06444", "message": "[BEAM-10629] Added KnownBuilderInstances to ExternalTransformRegistrar", "committedDate": "2020-08-04T16:40:25Z", "type": "forcePushed"}]}