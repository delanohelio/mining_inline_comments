{"pr_number": 10662, "pr_title": "[BEAM-9169] [ZetaSQL] Use custom escape method for unparsing", "pr_createdAt": "2020-01-22T20:02:06Z", "pr_url": "https://github.com/apache/beam/pull/10662", "timeline": [{"oid": "8a35f408f640d04c38ad6e2a497d30410b3bff32", "url": "https://github.com/apache/beam/commit/8a35f408f640d04c38ad6e2a497d30410b3bff32", "message": "Use custom escape method", "committedDate": "2020-01-22T20:00:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTQxMw==", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361413", "bodyText": "nit: this function doesn't provide much value, just inline this?", "author": "apilloud", "createdAt": "2020-01-23T21:22:57Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -69,6 +91,10 @@ public SqlNode toSql(RexProgram program, RexNode rex) {\n     return super.toSql(program, rex);\n   }\n \n+  private static String escapeForZetaSql(String input) {", "originalCommit": "8a35f408f640d04c38ad6e2a497d30410b3bff32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4OTk2OA==", "url": "https://github.com/apache/beam/pull/10662#discussion_r370389968", "bodyText": "Done.", "author": "11moon11", "createdAt": "2020-01-23T22:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "5942795a89881c71cb332729afb0452c903df962", "chunk": "diff --git a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\nindex d20b2d16e4..d66d88c0e4 100644\n--- a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\n+++ b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\n\n@@ -91,10 +91,6 @@ public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n     return super.toSql(program, rex);\n   }\n \n-  private static String escapeForZetaSql(String input) {\n-    return ESCAPE_FOR_ZETA_SQL.translate(input);\n-  }\n-\n   private static class SqlByteStringLiteral extends SqlLiteral {\n \n     SqlByteStringLiteral(BitString bytes, SqlParserPos pos) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTcyMg==", "url": "https://github.com/apache/beam/pull/10662#discussion_r370361722", "bodyText": "Can you open a JIRA for this?", "author": "apilloud", "createdAt": "2020-01-23T21:23:39Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java", "diffHunk": "@@ -34,10 +38,28 @@\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeFamily;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.sql.type.SqlTypeName;\n import org.apache.beam.vendor.calcite.v1_20_0.org.apache.calcite.util.BitString;\n-import org.apache.beam.vendor.calcite.v1_20_0.org.apache.commons.lang.StringEscapeUtils;\n \n public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n \n+  // More about escape sequences here:\n+  // https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical\n+  // No need to escape: \\`, \\?, \\v, \\a, \\ooo, \\xhh (since this in not a thing in Java)\n+  // TODO: Move away from deprecated classes.\n+  // TODO: Escaping single quotes, SqlCharStringLiteral (produced by SqlLiteral.createCharString)\n+  // introduces extra.\n+  private static final CharSequenceTranslator ESCAPE_FOR_ZETA_SQL =\n+      // ZetaSQL specific:\n+      new LookupTranslator(\n+              new String[][] {\n+                {\"\\\"\", \"\\\\\\\"\"},\n+                {\"\\\\\", \"\\\\\\\\\"},\n+              })\n+          // \\b, \\n, \\t, \\f, \\r\n+          .with(new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))\n+          // TODO: Add support for \\Uhhhhhhhh", "originalCommit": "8a35f408f640d04c38ad6e2a497d30410b3bff32", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM5MDAwOQ==", "url": "https://github.com/apache/beam/pull/10662#discussion_r370390009", "bodyText": "Done.", "author": "11moon11", "createdAt": "2020-01-23T22:31:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2MTcyMg=="}], "type": "inlineReview", "revised_code": {"commit": "5942795a89881c71cb332729afb0452c903df962", "chunk": "diff --git a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\nindex d20b2d16e4..d66d88c0e4 100644\n--- a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\n+++ b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/meta/provider/bigquery/BeamSqlUnparseContext.java\n\n@@ -56,7 +56,7 @@ public class BeamSqlUnparseContext extends SqlImplementor.SimpleContext {\n               })\n           // \\b, \\n, \\t, \\f, \\r\n           .with(new LookupTranslator(EntityArrays.JAVA_CTRL_CHARS_ESCAPE()))\n-          // TODO: Add support for \\Uhhhhhhhh\n+          // TODO(BEAM-9180): Add support for \\Uhhhhhhhh\n           // Unicode (only 4 hex digits)\n           .with(JavaUnicodeEscaper.outsideOf(32, 0x7f));\n \n"}}, {"oid": "5942795a89881c71cb332729afb0452c903df962", "url": "https://github.com/apache/beam/commit/5942795a89881c71cb332729afb0452c903df962", "message": "Inline, link JIRA", "committedDate": "2020-01-23T22:30:59Z", "type": "commit"}]}