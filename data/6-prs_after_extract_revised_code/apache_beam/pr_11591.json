{"pr_number": 11591, "pr_title": "[BEAM-9801] [cherry-pick] Pass in fire timestamp to timer callback", "pr_createdAt": "2020-05-01T21:46:41Z", "pr_url": "https://github.com/apache/beam/pull/11591", "timeline": [{"oid": "325e0f11f0a8f96cfe0e1aefff2a13b588045d08", "url": "https://github.com/apache/beam/commit/325e0f11f0a8f96cfe0e1aefff2a13b588045d08", "message": "[BEAM-9801] Pass in fire timestamp and pane info to timer callback\n\nPass in the timestamp to avoid:\n\n```\nINFO:apache_beam.utils.subprocess_server:Caused by: java.lang.RuntimeException: Error received from SDK harness for instruction 4: Traceback (most recent call last):\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 245, in _execute\nINFO:apache_beam.utils.subprocess_server: response = task()\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 302, in <lambda>\nINFO:apache_beam.utils.subprocess_server: lambda: self.create_worker().do_instruction(request), request)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 471, in do_instruction\nINFO:apache_beam.utils.subprocess_server: getattr(request, request_type), request.instruction_id)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/sdk_worker.py\", line 506, in process_bundle\nINFO:apache_beam.utils.subprocess_server: bundle_processor.process_bundle(instruction_id))\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/bundle_processor.py\", line 910, in process_bundle\nINFO:apache_beam.utils.subprocess_server: element.timer_family_id, timer_data)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/operations.py\", line 688, in process_timer\nINFO:apache_beam.utils.subprocess_server: timer_data.fire_timestamp)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 990, in process_user_timer\nINFO:apache_beam.utils.subprocess_server: self._reraise_augmented(exn)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 1043, in _reraise_augmented\nINFO:apache_beam.utils.subprocess_server: raise_with_traceback(new_exn)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 988, in process_user_timer\nINFO:apache_beam.utils.subprocess_server: self.do_fn_invoker.invoke_user_timer(timer_spec, key, window, timestamp)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 517, in invoke_user_timer\nINFO:apache_beam.utils.subprocess_server: self.user_state_context, key, window, timestamp))\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/common.py\", line 1093, in process_outputs\nINFO:apache_beam.utils.subprocess_server: for result in results:\nINFO:apache_beam.utils.subprocess_server: File \"/Users/max/Dev/beam/sdks/python/apache_beam/testing/load_tests/pardo_test.py\", line 185, in process_timer\nINFO:apache_beam.utils.subprocess_server: timer.set(0)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/runners/worker/bundle_processor.py\", line 589, in set\nINFO:apache_beam.utils.subprocess_server: self._timer_coder_impl.encode_to_stream(timer, self._output_stream, True)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/coders/coder_impl.py\", line 651, in encode_to_stream\nINFO:apache_beam.utils.subprocess_server: value.hold_timestamp, out, True)\nINFO:apache_beam.utils.subprocess_server: File \"apache_beam/coders/coder_impl.py\", line 608, in encode_to_stream\nINFO:apache_beam.utils.subprocess_server: millis = value.micros // 1000\nINFO:apache_beam.utils.subprocess_server:AttributeError: 'NoneType' object has no attribute 'micros' [while running 'GenerateLoad']\n```", "committedDate": "2020-05-01T21:42:12Z", "type": "commit"}, {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef", "url": "https://github.com/apache/beam/commit/990b4eeb887287a91a4cbc8c490acdf595730aef", "message": "[BEAM-9733] Repeatedly fire in batch mode until there are no more timers", "committedDate": "2020-05-01T21:42:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ==", "url": "https://github.com/apache/beam/pull/11591#discussion_r418756561", "bodyText": "Doesn't it make sense to make this change in batch as well for spark/flink in FlinkExecutableStageFunction and SparkExecutableStageFunction?\nAny watermark based timers should continue to be eligible and continue to fire while in batch while the processing time timers should be dropped.", "author": "lukecwik", "createdAt": "2020-05-01T22:01:36Z", "path": "runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java", "diffHunk": "@@ -247,25 +247,27 @@ public void reduce(Iterable<WindowedValue<InputT>> iterable, Collector<RawUnionV\n     timerInternals.advanceSynchronizedProcessingTime(BoundedWindow.TIMESTAMP_MAX_VALUE);\n \n     // Now we fire the timers and process elements generated by timers (which may be timers itself)\n-    try (RemoteBundle bundle =\n-        stageBundleFactory.getBundle(\n-            receiverFactory, timerReceiverFactory, stateRequestHandler, progressHandler)) {\n-\n-      PipelineTranslatorUtils.fireEligibleTimers(\n-          timerInternals,\n-          (KV<String, String> transformAndTimerId, Timer<?> timerValue) -> {\n-            FnDataReceiver<Timer> fnTimerReceiver =\n-                bundle.getTimerReceivers().get(transformAndTimerId);\n-            Preconditions.checkNotNull(\n-                fnTimerReceiver, \"No FnDataReceiver found for %s\", transformAndTimerId);\n-            try {\n-              fnTimerReceiver.accept(timerValue);\n-            } catch (Exception e) {\n-              throw new RuntimeException(\n-                  String.format(Locale.ENGLISH, \"Failed to process timer: %s\", timerValue));\n-            }\n-          },\n-          currentTimerKey);\n+    while (timerInternals.hasPendingTimers()) {", "originalCommit": "990b4eeb887287a91a4cbc8c490acdf595730aef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2MTI3NQ==", "url": "https://github.com/apache/beam/pull/11591#discussion_r418761275", "bodyText": "Good question. Spark basically does the same thing here (ideally this code should be shared..) @mxm", "author": "ibzib", "createdAt": "2020-05-01T22:18:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2MjU2Mw==", "url": "https://github.com/apache/beam/pull/11591#discussion_r418762563", "bodyText": "As expected, Spark is failing test_pardo_timers", "author": "ibzib", "createdAt": "2020-05-01T22:23:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0NDAxMA==", "url": "https://github.com/apache/beam/pull/11591#discussion_r418944010", "bodyText": "This is a batch-only change. Streaming already flushes timers on close. I don't now whether dropping processing timers is correct. I think we should continue to fire them as well.", "author": "mxm", "createdAt": "2020-05-02T10:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk0NDEwMg==", "url": "https://github.com/apache/beam/pull/11591#discussion_r418944102", "bodyText": "I agree that the code could be shared with Spark. I initially thought about that when I pushed the fix in the other PR but got sidetracked..", "author": "mxm", "createdAt": "2020-05-02T10:58:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjU2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f9c8ef3d256757ccaca33af75b677354df974814", "chunk": "diff --git a/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java b/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java\nindex f8c9c247b5..bf3355d7c6 100644\n--- a/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java\n+++ b/runners/flink/src/main/java/org/apache/beam/runners/flink/translation/functions/FlinkExecutableStageFunction.java\n\n@@ -253,20 +252,7 @@ public class FlinkExecutableStageFunction<InputT> extends AbstractRichFunction\n               receiverFactory, timerReceiverFactory, stateRequestHandler, progressHandler)) {\n \n         PipelineTranslatorUtils.fireEligibleTimers(\n-            timerInternals,\n-            (KV<String, String> transformAndTimerId, Timer<?> timerValue) -> {\n-              FnDataReceiver<Timer> fnTimerReceiver =\n-                  bundle.getTimerReceivers().get(transformAndTimerId);\n-              Preconditions.checkNotNull(\n-                  fnTimerReceiver, \"No FnDataReceiver found for %s\", transformAndTimerId);\n-              try {\n-                fnTimerReceiver.accept(timerValue);\n-              } catch (Exception e) {\n-                throw new RuntimeException(\n-                    String.format(Locale.ENGLISH, \"Failed to process timer: %s\", timerValue));\n-              }\n-            },\n-            currentTimerKey);\n+            timerInternals, bundle.getTimerReceivers(), currentTimerKey);\n       }\n     }\n   }\n"}}, {"oid": "309f2d6706f6cd520f1cffd2fb9627233bf7b612", "url": "https://github.com/apache/beam/commit/309f2d6706f6cd520f1cffd2fb9627233bf7b612", "message": "[BEAM-9733] Spark: Repeatedly fire in batch mode until there are no more timers", "committedDate": "2020-05-02T11:36:46Z", "type": "forcePushed"}, {"oid": "990b4eeb887287a91a4cbc8c490acdf595730aef", "url": "https://github.com/apache/beam/commit/990b4eeb887287a91a4cbc8c490acdf595730aef", "message": "[BEAM-9733] Repeatedly fire in batch mode until there are no more timers", "committedDate": "2020-05-01T21:42:43Z", "type": "forcePushed"}, {"oid": "f9c8ef3d256757ccaca33af75b677354df974814", "url": "https://github.com/apache/beam/commit/f9c8ef3d256757ccaca33af75b677354df974814", "message": "Merge pull request #11595: [BEAM-9801] Fire timers set within timers in Spark", "committedDate": "2020-05-03T17:54:29Z", "type": "commit"}, {"oid": "4769008e958e80e4336c0edcaad30d6d02cd698d", "url": "https://github.com/apache/beam/commit/4769008e958e80e4336c0edcaad30d6d02cd698d", "message": "[BEAM-9874] Support clearing timers in portable batch mode (Spark/Flink)", "committedDate": "2020-05-03T17:54:33Z", "type": "commit"}]}