{"pr_number": 12163, "pr_title": "[BEAM-9712] Refactor ZetaSQL planner code and support setting default timezone", "pr_createdAt": "2020-07-02T06:23:47Z", "pr_url": "https://github.com/apache/beam/pull/12163", "timeline": [{"oid": "33c13caf93b571e078580e85f2a229834738c13f", "url": "https://github.com/apache/beam/commit/33c13caf93b571e078580e85f2a229834738c13f", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-02T18:21:17Z", "type": "forcePushed"}, {"oid": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "url": "https://github.com/apache/beam/commit/fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-02T18:27:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTA1Mg==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450381052", "bodyText": "Can you add a note about which values are allowed here?", "author": "ibzib", "createdAt": "2020-07-06T17:42:08Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/BeamSqlPipelineOptions.java", "diffHunk": "@@ -30,6 +30,12 @@\n \n   void setPlannerName(String className);\n \n+  @Description(\"Default timezone for ZetaSQL analyzer; currently has no effect on CalciteSQL.\")", "originalCommit": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ3MTExNQ==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450471115", "bodyText": "Done.", "author": "robinyqiu", "createdAt": "2020-07-06T20:47:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5e212a7bd1729e5926865dac13dda162ed72025e", "chunk": "diff --git a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/BeamSqlPipelineOptions.java b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/BeamSqlPipelineOptions.java\nindex b605b3c8d5..5e9b44be6f 100644\n--- a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/BeamSqlPipelineOptions.java\n+++ b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/BeamSqlPipelineOptions.java\n\n@@ -30,11 +30,13 @@ public interface BeamSqlPipelineOptions extends PipelineOptions {\n \n   void setPlannerName(String className);\n \n-  @Description(\"Default timezone for ZetaSQL analyzer; currently has no effect on CalciteSQL.\")\n+  @Description(\n+      \"Default timezone for ZetaSQL analyzer; has no effect on CalciteSQL. Allow tz database \"\n+          + \"timezone names in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\")\n   @Default.String(\"UTC\")\n-  String getAnalyzerDefaultTimezone();\n+  String getZetaSqlDefaultTimezone();\n \n-  void setAnalyzerDefaultTimezone(String timezone);\n+  void setZetaSqlDefaultTimezone(String timezone);\n \n   @Description(\"Enables extra verification of row values for debugging.\")\n   @Default.Boolean(false)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTU2Mg==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450381562", "bodyText": "If defaultTimezone is set here, we should warn the user it will have no effect.", "author": "ibzib", "createdAt": "2020-07-06T17:43:11Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java", "diffHunk": "@@ -75,7 +75,9 @@\n   private final Planner planner;\n   private final JdbcConnection connection;\n \n-  public CalciteQueryPlanner(JdbcConnection connection, RuleSet[] ruleSets) {\n+  public CalciteQueryPlanner(\n+      JdbcConnection connection, RuleSet[] ruleSets, String defaultTimezone) {\n+    // TODO: support setting default timezone?", "originalCommit": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0NzYzOQ==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450447639", "bodyText": "See comment below.", "author": "robinyqiu", "createdAt": "2020-07-06T19:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "5e212a7bd1729e5926865dac13dda162ed72025e", "chunk": "diff --git a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\nindex 0f3f03da9b..cea8fbaea4 100644\n--- a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\n+++ b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\n\n@@ -75,9 +75,8 @@ public class CalciteQueryPlanner implements QueryPlanner {\n   private final Planner planner;\n   private final JdbcConnection connection;\n \n-  public CalciteQueryPlanner(\n-      JdbcConnection connection, RuleSet[] ruleSets, String defaultTimezone) {\n-    // TODO: support setting default timezone?\n+  /** Called by {@link BeamSqlEnv}.instantiatePlanner() reflectively. */\n+  public CalciteQueryPlanner(JdbcConnection connection, RuleSet[] ruleSets) {\n     this.connection = connection;\n     this.planner = Frameworks.getPlanner(defaultConfig(connection, ruleSets));\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTY4Nw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450381687", "bodyText": "Can you create and link a JIRA?", "author": "ibzib", "createdAt": "2020-07-06T17:43:26Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java", "diffHunk": "@@ -75,7 +75,9 @@\n   private final Planner planner;\n   private final JdbcConnection connection;\n \n-  public CalciteQueryPlanner(JdbcConnection connection, RuleSet[] ruleSets) {\n+  public CalciteQueryPlanner(\n+      JdbcConnection connection, RuleSet[] ruleSets, String defaultTimezone) {\n+    // TODO: support setting default timezone?", "originalCommit": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0NzQ1Nw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450447457", "bodyText": "Actually this config does not seem to apply to CalciteSQL, so I have reverted this change.", "author": "robinyqiu", "createdAt": "2020-07-06T19:56:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ1MjE2MQ==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450452161", "bodyText": "Actually this config does not seem to apply to CalciteSQL\n\nWhy not?", "author": "ibzib", "createdAt": "2020-07-06T20:06:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTY4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyMjYyMw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450522623", "bodyText": "Default timezone affects the result of many time-related functions in ZetaSQL. In CalciteSQL language spec, I did not find any mention of default timezone. I guess this concept may not apply to CalciteSQL, or it does not affect CalciteSQL in the same way. So I am leaving the CalciteSQL part unchanged and make it clear the new option only applies to ZetaSQL dialect.", "author": "robinyqiu", "createdAt": "2020-07-06T23:03:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MTY4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5e212a7bd1729e5926865dac13dda162ed72025e", "chunk": "diff --git a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\nindex 0f3f03da9b..cea8fbaea4 100644\n--- a/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\n+++ b/sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/CalciteQueryPlanner.java\n\n@@ -75,9 +75,8 @@ public class CalciteQueryPlanner implements QueryPlanner {\n   private final Planner planner;\n   private final JdbcConnection connection;\n \n-  public CalciteQueryPlanner(\n-      JdbcConnection connection, RuleSet[] ruleSets, String defaultTimezone) {\n-    // TODO: support setting default timezone?\n+  /** Called by {@link BeamSqlEnv}.instantiatePlanner() reflectively. */\n+  public CalciteQueryPlanner(JdbcConnection connection, RuleSet[] ruleSets) {\n     this.connection = connection;\n     this.planner = Frameworks.getPlanner(defaultConfig(connection, ruleSets));\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MzIzMw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450383233", "bodyText": "While we're at it, maybe we should rename this getAnalyzerOptions. To me, init implies a one-time setup operation, which this is not.", "author": "ibzib", "createdAt": "2020-07-06T17:46:34Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java", "diffHunk": "@@ -187,8 +167,10 @@ static AnalyzerOptions initAnalyzerOptions() {\n     return options;\n   }\n \n-  static AnalyzerOptions initAnalyzerOptions(QueryParameters queryParams) {\n-    AnalyzerOptions options = initAnalyzerOptions();\n+  static AnalyzerOptions initAnalyzerOptions(QueryParameters queryParams, String defaultTimezone) {", "originalCommit": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0NjQ4NQ==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450446485", "bodyText": "Done.", "author": "robinyqiu", "createdAt": "2020-07-06T19:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MzIzMw=="}], "type": "inlineReview", "revised_code": {"commit": "5e212a7bd1729e5926865dac13dda162ed72025e", "chunk": "diff --git a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java\nindex 1b6d15ddfa..de3ea03d08 100644\n--- a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java\n+++ b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java\n\n@@ -167,7 +167,7 @@ public class SqlAnalyzer {\n     return options;\n   }\n \n-  static AnalyzerOptions initAnalyzerOptions(QueryParameters queryParams, String defaultTimezone) {\n+  static AnalyzerOptions getAnalyzerOptions(QueryParameters queryParams, String defaultTimezone) {\n     AnalyzerOptions options = baseAnalyzerOptions();\n \n     options.setDefaultTimezone(defaultTimezone);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NDA5NQ==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450384095", "bodyText": "Consider making this a javadoc comment so we can add a link.", "author": "ibzib", "createdAt": "2020-07-06T17:48:09Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -65,9 +65,12 @@ public ZetaSQLQueryPlanner(FrameworkConfig config) {\n     plannerImpl = new ZetaSQLPlannerImpl(config);\n   }\n \n-  public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n+  // Called by BeamSqlEnv.instantiatePlanner() reflectively", "originalCommit": "fe8baaa0bb1a1f8d81dccc20d1d0c37875b1ba92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ0NjQxNw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r450446417", "bodyText": "Done.", "author": "robinyqiu", "createdAt": "2020-07-06T19:53:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4NDA5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "5e212a7bd1729e5926865dac13dda162ed72025e", "chunk": "diff --git a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\nindex 995f54cbc4..f0b2db0378 100644\n--- a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n+++ b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n\n@@ -65,12 +66,18 @@ public class ZetaSQLQueryPlanner implements QueryPlanner {\n     plannerImpl = new ZetaSQLPlannerImpl(config);\n   }\n \n-  // Called by BeamSqlEnv.instantiatePlanner() reflectively\n-  public ZetaSQLQueryPlanner(\n-      JdbcConnection jdbcConnection, RuleSet[] ruleSets, String defaultTimezone) {\n+  /**\n+   * Called by {@link org.apache.beam.sdk.extensions.sql.impl.BeamSqlEnv}.instantiatePlanner()\n+   * reflectively.\n+   */\n+  public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n     plannerImpl =\n         new ZetaSQLPlannerImpl(defaultConfig(jdbcConnection, modifyRuleSetsForZetaSql(ruleSets)));\n-    setDefaultTimezone(defaultTimezone);\n+    setDefaultTimezone(\n+        jdbcConnection\n+            .getPipelineOptions()\n+            .as(BeamSqlPipelineOptions.class)\n+            .getZetaSqlDefaultTimezone());\n   }\n \n   public static RuleSet[] getZetaSqlRuleSets() {\n"}}, {"oid": "5e212a7bd1729e5926865dac13dda162ed72025e", "url": "https://github.com/apache/beam/commit/5e212a7bd1729e5926865dac13dda162ed72025e", "message": "Address comment", "committedDate": "2020-07-06T20:46:39Z", "type": "forcePushed"}, {"oid": "014d63ecd48232471088c8479ece3b622d948182", "url": "https://github.com/apache/beam/commit/014d63ecd48232471088c8479ece3b622d948182", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-09T14:23:38Z", "type": "forcePushed"}, {"oid": "eea5773c327d36892e0a99938d38ab3eae4650cd", "url": "https://github.com/apache/beam/commit/eea5773c327d36892e0a99938d38ab3eae4650cd", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-09T14:26:03Z", "type": "forcePushed"}, {"oid": "93fb84254155582b54d06d482f44ba179edfab16", "url": "https://github.com/apache/beam/commit/93fb84254155582b54d06d482f44ba179edfab16", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-09T14:34:00Z", "type": "commit"}, {"oid": "93fb84254155582b54d06d482f44ba179edfab16", "url": "https://github.com/apache/beam/commit/93fb84254155582b54d06d482f44ba179edfab16", "message": "Refactor ZetaSQL planner code and support setting default timezone", "committedDate": "2020-07-09T14:34:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzNzYzMw==", "url": "https://github.com/apache/beam/pull/12163#discussion_r452337633", "bodyText": "nit: I'd prefer if you didn't rename this method, there are a bunch of references to it inside google. (Alternatively please rename the method of the same name in the C++ validator to match.)", "author": "apilloud", "createdAt": "2020-07-09T16:20:38Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/SqlAnalyzer.java", "diffHunk": "@@ -182,11 +164,10 @@ ResolvedStatement analyzeNextStatement(\n     return resolvedStatement;\n   }\n \n-  static AnalyzerOptions initAnalyzerOptions() {\n+  static AnalyzerOptions baseAnalyzerOptions() {", "originalCommit": "93fb84254155582b54d06d482f44ba179edfab16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNTU2MA==", "url": "https://github.com/apache/beam/pull/12163#discussion_r452405560", "bodyText": "Thanks for the reminder! I will remember to rename them.\nReminder to @ibzib as well. I found you are also changing this file frequently these days. Any change made here should also be made to the internal validator code written in C++. I will sync the validator code later today to include the changes so far. In the future if you make changes again, please make sure you do that as well.", "author": "robinyqiu", "createdAt": "2020-07-09T18:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzNzYzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNjYyNg==", "url": "https://github.com/apache/beam/pull/12163#discussion_r452406626", "bodyText": "Any change made here should also be made to the internal validator code written in C++.\n\nAcknowledged.\n\nI will sync the validator code later today to include the changes so far.\n\nSounds good, please cc me on those changes.", "author": "ibzib", "createdAt": "2020-07-09T18:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMzNzYzMw=="}], "type": "inlineReview", "revised_code": null}]}