{"pr_number": 10492, "pr_title": "[BEAM-9041, BEAM-9042] SchemaCoder equals should not rely on from/toRowFunction equality", "pr_createdAt": "2020-01-03T00:11:15Z", "pr_url": "https://github.com/apache/beam/pull/10492", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzODIxMg==", "url": "https://github.com/apache/beam/pull/10492#discussion_r363438212", "bodyText": "Couldn't you just implement equals here instead of changing to comparing byte equality of the serialized function in SchemaCoder?", "author": "TheNeuralBit", "createdAt": "2020-01-06T19:11:28Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java", "diffHunk": "@@ -431,7 +431,20 @@ public static GenericRecord toGenericRecord(\n    */\n   public static SerializableFunction<Row, GenericRecord> getRowToGenericRecordFunction(\n       @Nullable org.apache.avro.Schema avroSchema) {\n-    return g -> toGenericRecord(g, avroSchema);\n+    return new RowToGenericRecordFn(avroSchema);\n+  }\n+\n+  private static class RowToGenericRecordFn implements SerializableFunction<Row, GenericRecord> {\n+    private final transient org.apache.avro.Schema avroSchema;\n+\n+    RowToGenericRecordFn(@Nullable org.apache.avro.Schema avroSchema) {\n+      this.avroSchema = avroSchema;\n+    }\n+\n+    @Override\n+    public GenericRecord apply(Row input) {\n+      return toGenericRecord(input, avroSchema);\n+    }", "originalCommit": "5d5b015ba09cc967256dddbc6f6624b25606cd7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQ5NzQ5MQ==", "url": "https://github.com/apache/beam/pull/10492#discussion_r363497491", "bodyText": "This is a second different issue about capture of Avro schema on serialization (the key change is the transient part) so not really related to equals. As explained above I put both together because I use equality to validate the roundtrip of serialization/deserialization.", "author": "iemejia", "createdAt": "2020-01-06T21:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzODIxMg=="}], "type": "inlineReview", "revised_code": {"commit": "dfa7d69e9f7902941deb95c113b08420b35ff081", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\nindex 41a936bdb4..4b158a08a8 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\n\n@@ -435,7 +469,7 @@ public class AvroUtils {\n   }\n \n   private static class RowToGenericRecordFn implements SerializableFunction<Row, GenericRecord> {\n-    private final transient org.apache.avro.Schema avroSchema;\n+    private transient org.apache.avro.Schema avroSchema;\n \n     RowToGenericRecordFn(@Nullable org.apache.avro.Schema avroSchema) {\n       this.avroSchema = avroSchema;\n"}}, {"oid": "dfa7d69e9f7902941deb95c113b08420b35ff081", "url": "https://github.com/apache/beam/commit/dfa7d69e9f7902941deb95c113b08420b35ff081", "message": "[BEAM-9042] Fix RowToGenericRecordFn Avro schema serialization", "committedDate": "2020-01-07T17:02:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkxMTk1NQ==", "url": "https://github.com/apache/beam/pull/10492#discussion_r363911955", "bodyText": "\ud83d\udc4d thanks!", "author": "TheNeuralBit", "createdAt": "2020-01-07T19:28:46Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/SchemaCoder.java", "diffHunk": "@@ -102,7 +102,8 @@ protected SchemaCoder(\n \n   /**\n    * Returns a {@link SchemaCoder} for the specified class. If no schema is registered for this\n-   * class, then throws {@link NoSuchSchemaException}.\n+   * class, then throws {@link NoSuchSchemaException}. The parameter functions to convert from and\n+   * to Rows <b>must</b> implement the equals contract.", "originalCommit": "cf76be77f225d68df623813cd440621cdb197cb8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e4490cca2b902f719839a42a1ff482fb11c2444", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/SchemaCoder.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/SchemaCoder.java\nindex 889925a1f2..9359c752a4 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/SchemaCoder.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/SchemaCoder.java\n\n@@ -102,8 +102,7 @@ public class SchemaCoder<T> extends CustomCoder<T> {\n \n   /**\n    * Returns a {@link SchemaCoder} for the specified class. If no schema is registered for this\n-   * class, then throws {@link NoSuchSchemaException}. The parameter functions to convert from and\n-   * to Rows <b>must</b> implement the equals contract.\n+   * class, then throws {@link NoSuchSchemaException}.\n    */\n   public static <T> SchemaCoder<T> of(\n       Schema schema,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkxNjYxMg==", "url": "https://github.com/apache/beam/pull/10492#discussion_r363916612", "bodyText": "I'm not 100% sure but it looks like the failures are occurring when avroSchema is null. Either way I think you need to check if avroSchemaAsString is null here.", "author": "TheNeuralBit", "createdAt": "2020-01-07T19:39:48Z", "path": "sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java", "diffHunk": "@@ -431,7 +465,47 @@ public static GenericRecord toGenericRecord(\n    */\n   public static SerializableFunction<Row, GenericRecord> getRowToGenericRecordFunction(\n       @Nullable org.apache.avro.Schema avroSchema) {\n-    return g -> toGenericRecord(g, avroSchema);\n+    return new RowToGenericRecordFn(avroSchema);\n+  }\n+\n+  private static class RowToGenericRecordFn implements SerializableFunction<Row, GenericRecord> {\n+    private transient org.apache.avro.Schema avroSchema;\n+\n+    RowToGenericRecordFn(@Nullable org.apache.avro.Schema avroSchema) {\n+      this.avroSchema = avroSchema;\n+    }\n+\n+    @Override\n+    public GenericRecord apply(Row input) {\n+      return toGenericRecord(input, avroSchema);\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+      if (this == other) {\n+        return true;\n+      }\n+      if (other == null || getClass() != other.getClass()) {\n+        return false;\n+      }\n+      RowToGenericRecordFn that = (RowToGenericRecordFn) other;\n+      return avroSchema.equals(that.avroSchema);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+      return Objects.hash(avroSchema);\n+    }\n+\n+    private void writeObject(ObjectOutputStream out) throws IOException {\n+      final String avroSchemaAsString = (avroSchema == null) ? null : avroSchema.toString();\n+      out.writeObject(avroSchemaAsString);\n+    }\n+\n+    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n+      final String avroSchemaAsString = (String) in.readObject();\n+      avroSchema = new org.apache.avro.Schema.Parser().parse(avroSchemaAsString);", "originalCommit": "cf76be77f225d68df623813cd440621cdb197cb8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk3MDEzNg==", "url": "https://github.com/apache/beam/pull/10492#discussion_r363970136", "bodyText": "Yes you are right I forgot to check the nullability of the string before the parse, I will fix that and add a method for this. Hopefully everything will be green at that moment. Thanks for the hint.", "author": "iemejia", "createdAt": "2020-01-07T21:55:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkxNjYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "3e4490cca2b902f719839a42a1ff482fb11c2444", "chunk": "diff --git a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\nindex 4b158a08a8..8b54e41b1f 100644\n--- a/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\n+++ b/sdks/java/core/src/main/java/org/apache/beam/sdk/schemas/utils/AvroUtils.java\n\n@@ -469,7 +466,7 @@ public class AvroUtils {\n   }\n \n   private static class RowToGenericRecordFn implements SerializableFunction<Row, GenericRecord> {\n-    private transient org.apache.avro.Schema avroSchema;\n+    private final org.apache.avro.Schema avroSchema;\n \n     RowToGenericRecordFn(@Nullable org.apache.avro.Schema avroSchema) {\n       this.avroSchema = avroSchema;\n"}}, {"oid": "3e4490cca2b902f719839a42a1ff482fb11c2444", "url": "https://github.com/apache/beam/commit/3e4490cca2b902f719839a42a1ff482fb11c2444", "message": "[BEAM-9041] Add missing equals methods for GenericRecord <-> Row conversion", "committedDate": "2020-01-07T21:51:07Z", "type": "commit"}, {"oid": "0e63b5af96ae3ad903dabf1ace2629b85766757c", "url": "https://github.com/apache/beam/commit/0e63b5af96ae3ad903dabf1ace2629b85766757c", "message": "[BEAM-9042] Fix RowToGenericRecordFn Avro schema serialization", "committedDate": "2020-01-07T21:51:07Z", "type": "commit"}, {"oid": "71de81f7d47bf4c93601d5216b2efadb7ce6aaee", "url": "https://github.com/apache/beam/commit/71de81f7d47bf4c93601d5216b2efadb7ce6aaee", "message": "[BEAM-9042] Update SchemaCoder doc with info about functions requiring equals", "committedDate": "2020-01-07T21:51:07Z", "type": "commit"}, {"oid": "fe17671fb3da74a8880ef9c4f204f2a099a401a2", "url": "https://github.com/apache/beam/commit/fe17671fb3da74a8880ef9c4f204f2a099a401a2", "message": "[BEAM-9042] Test serializability and equality of Row<->GenericRecord functions", "committedDate": "2020-01-07T21:51:26Z", "type": "commit"}, {"oid": "fe17671fb3da74a8880ef9c4f204f2a099a401a2", "url": "https://github.com/apache/beam/commit/fe17671fb3da74a8880ef9c4f204f2a099a401a2", "message": "[BEAM-9042] Test serializability and equality of Row<->GenericRecord functions", "committedDate": "2020-01-07T21:51:26Z", "type": "forcePushed"}]}