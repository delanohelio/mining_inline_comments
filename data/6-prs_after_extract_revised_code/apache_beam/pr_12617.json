{"pr_number": 12617, "pr_title": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn powering the Read transform.", "pr_createdAt": "2020-08-18T17:59:42Z", "pr_url": "https://github.com/apache/beam/pull/12617", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ0MDk1MQ==", "url": "https://github.com/apache/beam/pull/12617#discussion_r472440951", "bodyText": "is \"doTra\" a typo here?", "author": "kw2542", "createdAt": "2020-08-18T19:50:09Z", "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/translation/GroupByKeyTranslator.java", "diffHunk": "@@ -65,6 +65,12 @@ public void translate(\n     doTranslate(transform, node, ctx);\n   }\n \n+  static class KeyedWorkItems<K, InputT>\n+  implements TransformTranslator<PTransform<\n+      PCollection<KV<K, InputT>>, PCollection<KeyedWorkItem<K, InputT>>>> {\n+    doTra", "originalCommit": "921eb707c259e8ff08d01b7c7782ea3e3107cfd8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0MDgyOA==", "url": "https://github.com/apache/beam/pull/12617#discussion_r473140828", "bodyText": "This was not supposed to be part of the commit at all and was in my scratch space.", "author": "lukecwik", "createdAt": "2020-08-19T16:02:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ0MDk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "d087ee17badf37242fcb590de728ced87a0b6311", "chunk": "diff --git a/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/GroupByKeyTranslator.java b/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/GroupByKeyTranslator.java\nindex 5b684b7839..60f329676d 100644\n--- a/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/GroupByKeyTranslator.java\n+++ b/runners/samza/src/main/java/org/apache/beam/runners/samza/translation/GroupByKeyTranslator.java\n\n@@ -66,9 +67,16 @@ class GroupByKeyTranslator<K, InputT, OutputT>\n   }\n \n   static class KeyedWorkItems<K, InputT>\n-  implements TransformTranslator<PTransform<\n-      PCollection<KV<K, InputT>>, PCollection<KeyedWorkItem<K, InputT>>>> {\n-    doTra\n+      implements TransformTranslator<\n+          PTransform<PCollection<KV<K, InputT>>, PCollection<KeyedWorkItem<K, InputT>>>> {\n+\n+    @Override\n+    public void translate(\n+        PTransform<PCollection<KV<K, InputT>>, PCollection<KeyedWorkItem<K, InputT>>> transform,\n+        Node node,\n+        TranslationContext ctx) {\n+      throw new UnsupportedOperationException(\"TODO(BEAM-10670)\");\n+    }\n   }\n \n   private static <K, InputT, OutputT> void doTranslate(\n"}}, {"oid": "d087ee17badf37242fcb590de728ced87a0b6311", "url": "https://github.com/apache/beam/commit/d087ee17badf37242fcb590de728ced87a0b6311", "message": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn.", "committedDate": "2020-08-26T20:28:53Z", "type": "forcePushed"}, {"oid": "42aeaf7832fdef76f4f2e49cc837aaeb8a018ca0", "url": "https://github.com/apache/beam/commit/42aeaf7832fdef76f4f2e49cc837aaeb8a018ca0", "message": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn.", "committedDate": "2020-08-27T16:58:50Z", "type": "forcePushed"}, {"oid": "2c57348136c313700e908e328c062ca505f98832", "url": "https://github.com/apache/beam/commit/2c57348136c313700e908e328c062ca505f98832", "message": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn.", "committedDate": "2020-08-27T17:07:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NjM3MQ==", "url": "https://github.com/apache/beam/pull/12617#discussion_r486666371", "bodyText": "Just so I'm clear, this is the inter-op class to map a GroupByKey transform to Samza's representation, and allow it to split the results of the GroupByKey when the runner is communicating with the SDK harness?", "author": "lostluck", "createdAt": "2020-09-10T22:22:30Z", "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/runtime/SplittableParDoProcessKeyedElementsOp.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.runners.samza.runtime;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.concurrent.Executors;\n+import org.apache.beam.runners.core.DoFnRunner;\n+import org.apache.beam.runners.core.DoFnRunners;\n+import org.apache.beam.runners.core.KeyedWorkItem;\n+import org.apache.beam.runners.core.KeyedWorkItems;\n+import org.apache.beam.runners.core.NullSideInputReader;\n+import org.apache.beam.runners.core.OutputAndTimeBoundedSplittableProcessElementInvoker;\n+import org.apache.beam.runners.core.OutputWindowedValue;\n+import org.apache.beam.runners.core.SplittableParDoViaKeyedWorkItems;\n+import org.apache.beam.runners.core.SplittableParDoViaKeyedWorkItems.ProcessElements;\n+import org.apache.beam.runners.core.StateInternals;\n+import org.apache.beam.runners.core.StateInternalsFactory;\n+import org.apache.beam.runners.core.StepContext;\n+import org.apache.beam.runners.core.TimerInternals;\n+import org.apache.beam.runners.core.TimerInternals.TimerData;\n+import org.apache.beam.runners.core.construction.SerializablePipelineOptions;\n+import org.apache.beam.runners.core.construction.SplittableParDo;\n+import org.apache.beam.runners.core.serialization.Base64Serializer;\n+import org.apache.beam.runners.samza.SamzaPipelineOptions;\n+import org.apache.beam.sdk.coders.ByteArrayCoder;\n+import org.apache.beam.sdk.transforms.DoFnSchemaInformation;\n+import org.apache.beam.sdk.transforms.join.RawUnionValue;\n+import org.apache.beam.sdk.transforms.reflect.DoFnInvokers;\n+import org.apache.beam.sdk.transforms.windowing.BoundedWindow;\n+import org.apache.beam.sdk.transforms.windowing.PaneInfo;\n+import org.apache.beam.sdk.util.WindowedValue;\n+import org.apache.beam.sdk.values.KV;\n+import org.apache.beam.sdk.values.PCollection.IsBounded;\n+import org.apache.beam.sdk.values.TupleTag;\n+import org.apache.beam.sdk.values.WindowingStrategy;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.context.Context;\n+import org.apache.samza.operators.Scheduler;\n+import org.joda.time.Duration;\n+import org.joda.time.Instant;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/** Samza operator for {@link org.apache.beam.sdk.transforms.GroupByKey}. */", "originalCommit": "5e210c60961bf702c7a97c8037757230c59cdf7c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0OTc5Mw==", "url": "https://github.com/apache/beam/pull/12617#discussion_r487349793", "bodyText": "There is no SDK harness, this is a non-portable execution and the splittable DoFn is being invoked directly.\nYou are correct in that this is an inter-op class to map a specific splittable DoFn expansion to Samza's representation.", "author": "lukecwik", "createdAt": "2020-09-12T01:23:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2NjM3MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f14278dc459ff2e4ebf5206c324c759f3a86fb6e", "url": "https://github.com/apache/beam/commit/f14278dc459ff2e4ebf5206c324c759f3a86fb6e", "message": "fixup! Update CHANGES.md", "committedDate": "2020-09-12T01:29:55Z", "type": "forcePushed"}, {"oid": "b981b30c9f56ec204921f4429e9c04ccda66cf99", "url": "https://github.com/apache/beam/commit/b981b30c9f56ec204921f4429e9c04ccda66cf99", "message": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn.", "committedDate": "2020-09-12T01:34:39Z", "type": "commit"}, {"oid": "b981b30c9f56ec204921f4429e9c04ccda66cf99", "url": "https://github.com/apache/beam/commit/b981b30c9f56ec204921f4429e9c04ccda66cf99", "message": "[BEAM-10670] Update Samza to be opt-out for SplittableDoFn.", "committedDate": "2020-09-12T01:34:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMDg3Mg==", "url": "https://github.com/apache/beam/pull/12617#discussion_r488820872", "bodyText": "is it expected that we only validate in non-portable mode? i.e. this validation does not exist in runPortablePipeline()", "author": "kw2542", "createdAt": "2020-09-15T16:59:29Z", "path": "runners/samza/src/main/java/org/apache/beam/runners/samza/SamzaRunner.java", "diffHunk": "@@ -106,6 +107,7 @@ public PortablePipelineResult runPortablePipeline(RunnerApi.Pipeline pipeline) {\n \n   @Override\n   public SamzaPipelineResult run(Pipeline pipeline) {\n+    SplittableParDo.validateNoPrimitiveReads(pipeline);", "originalCommit": "b981b30c9f56ec204921f4429e9c04ccda66cf99", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyNTA0Mw==", "url": "https://github.com/apache/beam/pull/12617#discussion_r488825043", "bodyText": "Yes since portable pipelines only support SDF. This is about migrating non-portable pipeline runner implementations to use SDF.", "author": "lukecwik", "createdAt": "2020-09-15T17:06:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyMDg3Mg=="}], "type": "inlineReview", "revised_code": null}]}