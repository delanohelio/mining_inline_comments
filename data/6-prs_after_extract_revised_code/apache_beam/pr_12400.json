{"pr_number": 12400, "pr_title": "[BEAM-10595] Remove rules that not work well with Java UDF", "pr_createdAt": "2020-07-28T23:05:12Z", "pr_url": "https://github.com/apache/beam/pull/12400", "timeline": [{"oid": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "url": "https://github.com/apache/beam/commit/6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "message": "[BEAM-10595] Remove rules that not work well with Java UDF.", "committedDate": "2020-07-28T23:04:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTEzOQ==", "url": "https://github.com/apache/beam/pull/12400#discussion_r461959139", "bodyText": "Nit: spelling/grammar\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add\n          \n          \n            \n                      // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not add", "author": "ibzib", "createdAt": "2020-07-28T23:55:00Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,13 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add", "originalCommit": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2NjkwOA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462466908", "bodyText": "Done.", "author": "amaliujia", "createdAt": "2020-07-29T17:29:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1OTEzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "chunk": "diff --git a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\nindex 72c6dc6261..9b8a417a47 100644\n--- a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n+++ b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n\n@@ -99,8 +99,9 @@ public class ZetaSQLQueryPlanner implements QueryPlanner {\n           // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n           // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n           // can execute UDFs. So during planning, we expect both Filter and Project are converted\n-          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add\n-          // FilterCalcMergeRule and ProjectCalcMergeRule.\n+          // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not\n+          // add FilterCalcMergeRule and ProjectCalcMergeRule. CalcMergeRule will achieve equivalent\n+          // planning result eventually.\n           continue;\n         } else if (rule instanceof BeamCalcRule) {\n           bd.add(BeamZetaSqlCalcRule.INSTANCE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1NTg4NA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462455884", "bodyText": "It'd be helpful to specifically mention CalcMergeRule here.", "author": "ibzib", "createdAt": "2020-07-29T17:11:23Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,13 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add", "originalCommit": "6b799c689981eb6cf228d3b9c229a9da51fc5fe1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ2NjgxOA==", "url": "https://github.com/apache/beam/pull/12400#discussion_r462466818", "bodyText": "Tried to add something about CalcMergeRule", "author": "amaliujia", "createdAt": "2020-07-29T17:29:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1NTg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "chunk": "diff --git a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\nindex 72c6dc6261..9b8a417a47 100644\n--- a/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n+++ b/sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java\n\n@@ -99,8 +99,9 @@ public class ZetaSQLQueryPlanner implements QueryPlanner {\n           // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n           // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n           // can execute UDFs. So during planning, we expect both Filter and Project are converted\n-          // to a Calc before merging with other Projec/Filter/Calc. Thus we should not add\n-          // FilterCalcMergeRule and ProjectCalcMergeRule.\n+          // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not\n+          // add FilterCalcMergeRule and ProjectCalcMergeRule. CalcMergeRule will achieve equivalent\n+          // planning result eventually.\n           continue;\n         } else if (rule instanceof BeamCalcRule) {\n           bd.add(BeamZetaSqlCalcRule.INSTANCE);\n"}}, {"oid": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "url": "https://github.com/apache/beam/commit/ebcf25bd0d6dd9698353656528e176ae7029f3ae", "message": "fixup! address comments.", "committedDate": "2020-07-29T17:28:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4Njc0MQ==", "url": "https://github.com/apache/beam/pull/12400#discussion_r465286741", "bodyText": "Shouldn't we just disable these rules all together (in BeamRuleSets.java) if they are redundant instead of special casing them for ZetaSQL?", "author": "apilloud", "createdAt": "2020-08-04T19:40:04Z", "path": "sdks/java/extensions/sql/zetasql/src/main/java/org/apache/beam/sdk/extensions/sql/zetasql/ZetaSQLQueryPlanner.java", "diffHunk": "@@ -93,6 +95,14 @@ public ZetaSQLQueryPlanner(JdbcConnection jdbcConnection, RuleSet[] ruleSets) {\n         //  requires the JoinCommuteRule, which doesn't work without struct flattening.\n         if (rule instanceof JoinCommuteRule) {\n           continue;\n+        } else if (rule instanceof FilterCalcMergeRule || rule instanceof ProjectCalcMergeRule) {\n+          // In order to support Java UDF, we need both BeamZetaSqlCalcRel and BeamCalcRel. It is\n+          // because BeamZetaSqlCalcRel can execute ZetaSQL built-in functions while BeamCalcRel\n+          // can execute UDFs. So during planning, we expect both Filter and Project are converted\n+          // to Calc nodes before merging with other Project/Filter/Calc nodes. Thus we should not\n+          // add FilterCalcMergeRule and ProjectCalcMergeRule. CalcMergeRule will achieve equivalent\n+          // planning result eventually.", "originalCommit": "ebcf25bd0d6dd9698353656528e176ae7029f3ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}