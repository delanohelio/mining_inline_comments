{"pr_number": 12984, "pr_title": "[BEAM-10994] Add ability for HotKeyLogger to log a key", "pr_createdAt": "2020-10-01T00:09:14Z", "pr_url": "https://github.com/apache/beam/pull/12984", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0NTgyNA==", "url": "https://github.com/apache/beam/pull/12984#discussion_r501945824", "bodyText": "you should rely on slf4j for log formatting with parameters as we won't pay the cost of forming the string if logging is disabled. e.g.:\nLOG.warn(\"my message with param 1 {}, param 2 {}\", param1, param2);", "author": "lukecwik", "createdAt": "2020-10-08T18:58:41Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -67,11 +72,19 @@ protected boolean isThrottled() {\n     return false;\n   }\n \n-  protected String getHotKeyMessage(String userStepName, String hotKeyAge) {\n+  protected String getHotKeyMessage(String userStepName, String hotKeyAge, Object hotkey) {\n+    if (hotkey == null) {\n+      return MessageFormat.format(", "originalCommit": "e402e108577103b77febe3c5c7edccddfafdc6c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDAxMA==", "url": "https://github.com/apache/beam/pull/12984#discussion_r503540010", "bodyText": "Done", "author": "rohdesamuel", "createdAt": "2020-10-12T21:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0NTgyNA=="}], "type": "inlineReview", "revised_code": {"commit": "ac736a9c566fc0a2306c45c844eda5c51f63cfea", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\nindex 9117c2e69b..ef186e5617 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n\n@@ -71,20 +87,4 @@ public class HotKeyLogger {\n     prevHotKeyDetectionLogMs = nowMs;\n     return false;\n   }\n-\n-  protected String getHotKeyMessage(String userStepName, String hotKeyAge, Object hotkey) {\n-    if (hotkey == null) {\n-      return MessageFormat.format(\n-          \"A hot key was detected in step ''{0}'' with age of ''{1}''. This is \"\n-              + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n-              + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-          userStepName, hotKeyAge);\n-    }\n-\n-    return MessageFormat.format(\n-        \"A hot key ''{0}'' was detected in step ''{1}'' with age of ''{2}''. This is \"\n-            + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        hotkey, userStepName, hotKeyAge);\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0ODI1MA==", "url": "https://github.com/apache/beam/pull/12984#discussion_r501948250", "bodyText": "You can use ExpectedLogs as a test rule to capture whether output was produced or not instead of abstracting out a getHotKeyMessage. See \n  \n    \n      beam/sdks/java/core/src/test/java/org/apache/beam/sdk/coders/SerializableCoderTest.java\n    \n    \n         Line 259\n      in\n      cfca7f1\n    \n    \n    \n    \n\n        \n          \n           public void coderWarnsForInterface() throws Exception { \n        \n    \n  \n\n for an example.", "author": "lukecwik", "createdAt": "2020-10-08T19:03:03Z", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,11 +50,11 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n     assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\", null);", "originalCommit": "e402e108577103b77febe3c5c7edccddfafdc6c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0MDA0OQ==", "url": "https://github.com/apache/beam/pull/12984#discussion_r503540049", "bodyText": "Gotcha, thanks!", "author": "rohdesamuel", "createdAt": "2020-10-12T21:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk0ODI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "ac736a9c566fc0a2306c45c844eda5c51f63cfea", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java b/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\nindex c5be5030d3..42d6ac5ee9 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\n\n@@ -53,30 +48,26 @@ public class HotKeyLoggerTest {\n   public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n-    assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\", null);\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1));\n     assertTrue(hotKeyLogger.isThrottled());\n \n-    assertEquals(\n+    expectedLogs.verifyWarn(\n         \"A hot key was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n             + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        m);\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n   }\n \n   @Test\n   public void correctHotKeyMessageWithKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n-    assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\", \"my key\");\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1), \"my key\");\n     assertTrue(hotKeyLogger.isThrottled());\n \n-    assertEquals(\n+    expectedLogs.verifyWarn(\n         \"A hot key 'my key' was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n             + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        m);\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n   }\n \n   @Test\n"}}, {"oid": "ac736a9c566fc0a2306c45c844eda5c51f63cfea", "url": "https://github.com/apache/beam/commit/ac736a9c566fc0a2306c45c844eda5c51f63cfea", "message": "remove GetHotKeyMesage", "committedDate": "2020-10-12T21:25:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExOTAxMQ==", "url": "https://github.com/apache/beam/pull/12984#discussion_r504119011", "bodyText": "Note that null is a valid key type and using null to differentiate between log without key and log with key will miss this usecase which is why I proposed the two suggestions below:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logHotKeyDetection(userStepName, hotKeyAge, null);\n          \n          \n            \n                if (isThrottled()) {\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n                LOG.warn(\n          \n          \n            \n                    \"A hot key was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                        + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                        + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                    userStepName,\n          \n          \n            \n                    TimeUtil.toCloudDuration(hotKeyAge));", "author": "lukecwik", "createdAt": "2020-10-13T17:04:32Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -47,10 +46,31 @@\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n+    logHotKeyDetection(userStepName, hotKeyAge, null);", "originalCommit": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\nindex b6f599b2b1..ad3a882911 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n\n@@ -46,7 +46,15 @@ public class HotKeyLogger {\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n-    logHotKeyDetection(userStepName, hotKeyAge, null);\n+    if (isThrottled()) {\n+      return;\n+    }\n+    LOG.warn(\n+        \"A hot key was detected in step '{}' with age of '{}'. This is \"\n+            + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+        userStepName,\n+        TimeUtil.toCloudDuration(hotKeyAge));\n   }\n \n   /** Logs a detection of the hot key every 5 minutes with the given key. */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExOTI5OA==", "url": "https://github.com/apache/beam/pull/12984#discussion_r504119298", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (hotkey == null) {\n          \n          \n            \n                  LOG.warn(\n          \n          \n            \n                      \"A hot key was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                          + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                          + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                      userStepName,\n          \n          \n            \n                      TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                } else {\n          \n          \n            \n                  LOG.warn(\n          \n          \n            \n                      \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                          + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                          + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                      hotkey,\n          \n          \n            \n                      userStepName,\n          \n          \n            \n                      TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                }\n          \n          \n            \n                LOG.warn(\n          \n          \n            \n                    \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n          \n          \n            \n                        + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n          \n          \n            \n                        + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n          \n          \n            \n                    hotkey,\n          \n          \n            \n                    userStepName,\n          \n          \n            \n                    TimeUtil.toCloudDuration(hotKeyAge));\n          \n          \n            \n                }", "author": "lukecwik", "createdAt": "2020-10-13T17:05:01Z", "path": "runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java", "diffHunk": "@@ -47,10 +46,31 @@\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n+    logHotKeyDetection(userStepName, hotKeyAge, null);\n+  }\n+\n+  /** Logs a detection of the hot key every 5 minutes with the given key. */\n+  public void logHotKeyDetection(String userStepName, Duration hotKeyAge, Object hotkey) {\n     if (isThrottled()) {\n       return;\n     }\n-    LOG.warn(getHotKeyMessage(userStepName, TimeUtil.toCloudDuration(hotKeyAge)));\n+\n+    if (hotkey == null) {\n+      LOG.warn(\n+          \"A hot key was detected in step '{}' with age of '{}'. This is \"\n+              + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+              + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+          userStepName,\n+          TimeUtil.toCloudDuration(hotKeyAge));\n+    } else {\n+      LOG.warn(\n+          \"A hot key '{}' was detected in step '{}' with age of '{}'. This is \"\n+              + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+              + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+          hotkey,\n+          userStepName,\n+          TimeUtil.toCloudDuration(hotKeyAge));\n+    }", "originalCommit": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\nindex b6f599b2b1..ad3a882911 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/main/java/org/apache/beam/runners/dataflow/worker/HotKeyLogger.java\n\n@@ -46,7 +46,15 @@ public class HotKeyLogger {\n \n   /** Logs a detection of the hot key every 5 minutes. */\n   public void logHotKeyDetection(String userStepName, Duration hotKeyAge) {\n-    logHotKeyDetection(userStepName, hotKeyAge, null);\n+    if (isThrottled()) {\n+      return;\n+    }\n+    LOG.warn(\n+        \"A hot key was detected in step '{}' with age of '{}'. This is \"\n+            + \"a symptom of key distribution being skewed. To fix, please inspect your data and \"\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n+        userStepName,\n+        TimeUtil.toCloudDuration(hotKeyAge));\n   }\n \n   /** Logs a detection of the hot key every 5 minutes with the given key. */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDUyNg==", "url": "https://github.com/apache/beam/pull/12984#discussion_r504120526", "bodyText": "might as well cover the null as an object case to ensure we don't regress.", "author": "lukecwik", "createdAt": "2020-10-13T17:07:14Z", "path": "runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java", "diffHunk": "@@ -50,18 +45,29 @@ public void SetUp() {\n   }\n \n   @Test\n-  public void correctHotKeyMessage() {\n+  public void correctHotKeyMessageWithoutKey() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n \n-    assertFalse(hotKeyLogger.isThrottled());\n-    String m = hotKeyLogger.getHotKeyMessage(\"TEST_STEP_ID\", \"1s\");\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1));\n     assertTrue(hotKeyLogger.isThrottled());\n \n-    assertEquals(\n+    expectedLogs.verifyWarn(\n         \"A hot key was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n             + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n-            + \"pipeline to ensure that elements are evenly distributed across your key space.\",\n-        m);\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n+  }\n+\n+  @Test\n+  public void correctHotKeyMessageWithKey() {", "originalCommit": "518eeadd04c30be05d8dd89693a6d8b8bab9e9e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1ODg2OQ==", "url": "https://github.com/apache/beam/pull/12984#discussion_r504158869", "bodyText": "Done", "author": "rohdesamuel", "createdAt": "2020-10-13T18:11:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDUyNg=="}], "type": "inlineReview", "revised_code": {"commit": "e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "chunk": "diff --git a/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java b/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\nindex 42d6ac5ee9..1049f2b435 100644\n--- a/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\n+++ b/runners/google-cloud-dataflow-java/worker/src/test/java/org/apache/beam/runners/dataflow/worker/HotKeyLoggerTest.java\n\n@@ -70,6 +70,19 @@ public class HotKeyLoggerTest {\n             + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n   }\n \n+  @Test\n+  public void correctHotKeyMessageWithNullKey() {\n+    HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n+\n+    hotKeyLogger.logHotKeyDetection(\"TEST_STEP_ID\", Duration.standardSeconds(1), null);\n+    assertTrue(hotKeyLogger.isThrottled());\n+\n+    expectedLogs.verifyWarn(\n+        \"A hot key 'null' was detected in step 'TEST_STEP_ID' with age of '1s'. This is a \"\n+            + \"symptom of key distribution being skewed. To fix, please inspect your data and \"\n+            + \"pipeline to ensure that elements are evenly distributed across your key space.\");\n+  }\n+\n   @Test\n   public void throttlesLoggingHotKeyMessage() {\n     HotKeyLogger hotKeyLogger = new HotKeyLogger(clock);\n"}}, {"oid": "e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "url": "https://github.com/apache/beam/commit/e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "message": "Add ability for HotKeyLogger to log a key.", "committedDate": "2020-10-13T19:37:20Z", "type": "commit"}, {"oid": "e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "url": "https://github.com/apache/beam/commit/e7e2d31bb1e4dcb6f259d48428271c57404d3a30", "message": "Add ability for HotKeyLogger to log a key.", "committedDate": "2020-10-13T19:37:20Z", "type": "forcePushed"}]}