{"pr_number": 12041, "pr_title": "[BEAM-10286] Fix race in direct runner", "pr_createdAt": "2020-06-19T18:17:22Z", "pr_url": "https://github.com/apache/beam/pull/12041", "timeline": [{"oid": "8c222c0027c7786a8bfe342238f7038b97466c7c", "url": "https://github.com/apache/beam/commit/8c222c0027c7786a8bfe342238f7038b97466c7c", "message": "[BEAM-10286] Fix race in direct runner", "committedDate": "2020-06-19T18:15:34Z", "type": "commit"}, {"oid": "1425b8b4b55c32c2611d98af60e9ff682b0e47f5", "url": "https://github.com/apache/beam/commit/1425b8b4b55c32c2611d98af60e9ff682b0e47f5", "message": "[BEAM-10286] Don't assume execption will propagate on error", "committedDate": "2020-06-19T22:27:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwMDUxOA==", "url": "https://github.com/apache/beam/pull/12041#discussion_r443800518", "bodyText": "Noting that for the DirectRunner, we want result.waitUntilFinish() to always throw an exception when there's a failure. I think it is always a bug if you get FAILED status without throwing.", "author": "kennknowles", "createdAt": "2020-06-22T20:16:06Z", "path": "sdks/java/extensions/sql/src/main/java/org/apache/beam/sdk/extensions/sql/impl/rel/BeamEnumerableConverter.java", "diffHunk": "@@ -201,7 +204,9 @@ private static void runCollector(PipelineOptions options, BeamRelNode node) {\n     PCollection<Row> resultCollection = BeamSqlRelUtils.toPCollection(pipeline, node);\n     resultCollection.apply(ParDo.of(new Collector()));\n     PipelineResult result = pipeline.run();\n-    result.waitUntilFinish();\n+    if (PipelineResult.State.FAILED.equals(result.waitUntilFinish())) {\n+      throw new RuntimeException(\"Pipeline failed for unknown reason\");", "originalCommit": "1425b8b4b55c32c2611d98af60e9ff682b0e47f5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg1MzEwOA==", "url": "https://github.com/apache/beam/pull/12041#discussion_r443853108", "bodyText": "You may want to file a bug. The behavior before this PR is that an exception will be thrown at most once, after the PR it is exactly once. If there are multiple threads waiting on result.waitUntilFinish(), not all will receive exceptions.", "author": "apilloud", "createdAt": "2020-06-22T22:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwMDUxOA=="}], "type": "inlineReview", "revised_code": null}]}