{"pr_number": 11534, "pr_title": "Push ioit tests metrics to influxdb", "pr_createdAt": "2020-04-27T13:24:42Z", "pr_url": "https://github.com/apache/beam/pull/11534", "timeline": [{"oid": "aedbb64f6d78e94c41c667623a457ca9abb3b155", "url": "https://github.com/apache/beam/commit/aedbb64f6d78e94c41c667623a457ca9abb3b155", "message": "Change http client", "committedDate": "2020-05-03T12:37:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419314057", "bodyText": "You can omit all the bolierplate here (including the builder) by using AutoValue, did you consider it?", "author": "mwalenia", "createdAt": "2020-05-04T09:30:32Z", "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.beam.sdk.testutils.publishing;\n+\n+import static java.util.Objects.isNull;\n+\n+import java.util.Arrays;\n+import java.util.Objects;\n+\n+public final class InfluxDBSettings {", "originalCommit": "aedbb64f6d78e94c41c667623a457ca9abb3b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2NjA3Nw==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419966077", "bodyText": "Yeah, I was thinking about it in the first place. We have some custom behavior here (like copyWithMeasurement or default value for host) which, correct me if I'm wrong, could not be achieved with AutoValue.\nIf it is possible I can rewrite this implementation with AV", "author": "pawelpasterz", "createdAt": "2020-05-05T09:07:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTA4Ng==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419985086", "bodyText": "I think copying with measurement is possible with AV, but I'm not sure about default values. I think we can leave this as is and refactor later if necessary.", "author": "mwalenia", "createdAt": "2020-05-05T09:41:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MDYwMQ==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419990601", "bodyText": "I have some ideas how to refactor metrics and publishing in general. My idea was to refactor it once we move to Influx", "author": "pawelpasterz", "createdAt": "2020-05-05T09:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxNDA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "c7db9d9b5d6a57ed08312a556557141378590f84", "chunk": "diff --git a/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java b/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java\nindex 1fabb7e01e..aa0831be12 100644\n--- a/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java\n+++ b/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/publishing/InfluxDBSettings.java\n\n@@ -1,87 +1,73 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n package org.apache.beam.sdk.testutils.publishing;\n \n-import static java.util.Objects.isNull;\n-\n import java.util.Arrays;\n import java.util.Objects;\n \n public final class InfluxDBSettings {\n \n-  public final String host;\n-  public final String userName;\n-  public final String userPassword;\n-  public final String measurement;\n-  public final String database;\n-\n-  private InfluxDBSettings(\n-      String host, String userName, String userPassword, String measurement, String database) {\n-    this.host = host;\n-    this.userName = userName;\n-    this.userPassword = userPassword;\n-    this.measurement = measurement;\n-    this.database = database;\n-  }\n+    public final String host;\n+    public final String userName;\n+    public final String userPassword;\n+    public final String measurement;\n+    public final String database;\n \n-  public static Builder builder() {\n-    return new Builder();\n-  }\n+    private InfluxDBSettings(String host, String userName, String userPassword, String measurement, String database) {\n+        this.host = host;\n+        this.userName = userName;\n+        this.userPassword = userPassword;\n+        this.measurement = measurement;\n+        this.database = database;\n+    }\n \n-  public InfluxDBSettings copyWithMeasurement(final String newMeasurement) {\n-    return new InfluxDBSettings(host, userName, userPassword, newMeasurement, database);\n-  }\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n \n-  public static class Builder {\n-    private static final String DEFAULT_HOST = \"http://localhost:8086/\";\n-    private static final String INFLUX_USER = \"INFLUXDB_USER\";\n-    private static final String INFLUX_PASSWORD = \"INFLUXDB_USER_PASSWORD\";\n+    public static class Builder {\n+        private String host;\n+        private String userName;\n+        private String userPassword;\n+        private String measurement;\n+        private String database;\n \n-    private String host;\n-    private String measurement;\n-    private String database;\n+        public Builder withHost(final String host) {\n+            this.host = host;\n+            return this;\n+        }\n \n-    public Builder withHost(final String host) {\n-      this.host = host;\n-      return this;\n-    }\n+        public Builder withUserName(final String userName) {\n+            this.userName = userName;\n+            return this;\n+        }\n \n-    public Builder withMeasurement(final String measurement) {\n-      this.measurement = measurement;\n-      return this;\n-    }\n+        public Builder withUserPassword(final String userPassword) {\n+            this.userPassword = userPassword;\n+            return this;\n+        }\n \n-    public Builder withDatabase(final String database) {\n-      this.database = database;\n-      return this;\n-    }\n+        public Builder withMeasurement(final String measurement) {\n+            this.measurement = measurement;\n+            return this;\n+        }\n \n-    public InfluxDBSettings get() {\n-      final String userName = System.getenv(INFLUX_USER);\n-      final String userPassword = System.getenv(INFLUX_PASSWORD);\n-      final String influxHost = isNull(host) ? DEFAULT_HOST : host;\n-      allNotNull(measurement, database);\n+        public Builder withDatabase(final String database) {\n+            this.database = database;\n+            return this;\n+        }\n \n-      return new InfluxDBSettings(influxHost, userName, userPassword, measurement, database);\n-    }\n+        public InfluxDBSettings get() {\n+            allNotNull(host, userName, userPassword, measurement, database);\n+            return new InfluxDBSettings(\n+                    host,\n+                    userName,\n+                    userPassword,\n+                    measurement,\n+                    database\n+            );\n+        }\n \n-    private void allNotNull(Object... objects) {\n-      Arrays.stream(objects).forEach(Objects::requireNonNull);\n+        private void allNotNull(Object...objects) {\n+            Arrays.stream(objects).forEach(Objects::requireNonNull);\n+        }\n     }\n-  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzMDAzMg==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419330032", "bodyText": "For the time being this is unnecessary, the results will be published to the console twice, since BQ publisher does the same thing.", "author": "mwalenia", "createdAt": "2020-05-04T10:01:10Z", "path": "sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java", "diffHunk": "@@ -70,4 +72,21 @@ public static void publish(\n     }\n     ConsoleResultPublisher.publish(results, uuid, timestamp);\n   }\n+\n+  public void publishToInflux(final InfluxDBSettings settings) {\n+    MetricsReader reader = new MetricsReader(result, namespace);\n+    Collection<NamedTestResult> namedTestResults = reader.readAll(metricSuppliers);\n+\n+    InfluxDBPublisher.publishWithSettings(namedTestResults, settings);\n+  }\n+\n+  public static void publishToInflux(\n+      final String uuid,\n+      final String timestamp,\n+      final Collection<NamedTestResult> results,\n+      final InfluxDBSettings settings) {\n+\n+    InfluxDBPublisher.publishWithSettings(results, settings);\n+    ConsoleResultPublisher.publish(results, uuid, timestamp);", "originalCommit": "aedbb64f6d78e94c41c667623a457ca9abb3b155", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2NjQwNg==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419966406", "bodyText": "\ud83d\udc4d", "author": "pawelpasterz", "createdAt": "2020-05-05T09:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMzMDAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "c7db9d9b5d6a57ed08312a556557141378590f84", "chunk": "diff --git a/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java b/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java\nindex fcddfeea99..a8b594d87f 100644\n--- a/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java\n+++ b/sdks/java/testing/test-utils/src/main/java/org/apache/beam/sdk/testutils/metrics/IOITMetrics.java\n\n@@ -79,14 +79,4 @@ public class IOITMetrics {\n \n     InfluxDBPublisher.publishWithSettings(namedTestResults, settings);\n   }\n-\n-  public static void publishToInflux(\n-      final String uuid,\n-      final String timestamp,\n-      final Collection<NamedTestResult> results,\n-      final InfluxDBSettings settings) {\n-\n-    InfluxDBPublisher.publishWithSettings(results, settings);\n-    ConsoleResultPublisher.publish(results, uuid, timestamp);\n-  }\n }\n"}}, {"oid": "c7db9d9b5d6a57ed08312a556557141378590f84", "url": "https://github.com/apache/beam/commit/c7db9d9b5d6a57ed08312a556557141378590f84", "message": "Implement InfluxDB publisher", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "831068df9d25f053b19d341b15dbf62dd8349bc9", "url": "https://github.com/apache/beam/commit/831068df9d25f053b19d341b15dbf62dd8349bc9", "message": "Update IT tests", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "0f5f06035b9a36fc7d4c27b2b367d9956d5daca9", "url": "https://github.com/apache/beam/commit/0f5f06035b9a36fc7d4c27b2b367d9956d5daca9", "message": "Linting", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "60ad77ef10244b199193f5b0ee8c8116a245000b", "url": "https://github.com/apache/beam/commit/60ad77ef10244b199193f5b0ee8c8116a245000b", "message": "Remove username and password", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "c83aaeb523c56a454c1a2b5629032faee4666648", "url": "https://github.com/apache/beam/commit/c83aaeb523c56a454c1a2b5629032faee4666648", "message": "Change http client", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "8e1ead96765317d3a84ecfda166db5c39665d99d", "url": "https://github.com/apache/beam/commit/8e1ead96765317d3a84ecfda166db5c39665d99d", "message": "Update publisher and load tests", "committedDate": "2020-05-05T09:02:38Z", "type": "commit"}, {"oid": "8e1ead96765317d3a84ecfda166db5c39665d99d", "url": "https://github.com/apache/beam/commit/8e1ead96765317d3a84ecfda166db5c39665d99d", "message": "Update publisher and load tests", "committedDate": "2020-05-05T09:02:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3NjU3NQ==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419976575", "bodyText": "Nit: typo :)", "author": "mwalenia", "createdAt": "2020-05-05T09:26:52Z", "path": "sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java", "diffHunk": "@@ -43,4 +43,22 @@\n   String getBigQueryTable();\n \n   void setBigQueryTable(@Nullable String tableName);\n+\n+  @Description(\"InfluxDB measurement to publish results to.\")\n+  @Nullable\n+  String getInfluxMeasurement();\n+\n+  void setInfluxMeasurement(@Nullable String measurement);\n+\n+  @Description(\"InfluxDB host.\")\n+  @Nullable\n+  String getInfluxHost();\n+\n+  void setInfluxHost(@Nullable String host);\n+\n+  @Description(\"InfluxDB databse.\")", "originalCommit": "8e1ead96765317d3a84ecfda166db5c39665d99d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MTA5NQ==", "url": "https://github.com/apache/beam/pull/11534#discussion_r419991095", "bodyText": "\ud83d\udc4d Thanks for catching this, shame on me", "author": "pawelpasterz", "createdAt": "2020-05-05T09:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3NjU3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3a39a598d5e870b71c3d512e338357a0c4971b69", "chunk": "diff --git a/sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java b/sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java\nindex 9f6c3f0e2c..058dbbdd7d 100644\n--- a/sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java\n+++ b/sdks/java/io/common/src/test/java/org/apache/beam/sdk/io/common/IOTestPipelineOptions.java\n\n@@ -56,7 +56,7 @@ public interface IOTestPipelineOptions extends TestPipelineOptions {\n \n   void setInfluxHost(@Nullable String host);\n \n-  @Description(\"InfluxDB databse.\")\n+  @Description(\"InfluxDB database.\")\n   @Nullable\n   String getInfluxDatabase();\n \n"}}, {"oid": "3a39a598d5e870b71c3d512e338357a0c4971b69", "url": "https://github.com/apache/beam/commit/3a39a598d5e870b71c3d512e338357a0c4971b69", "message": "Fix typo", "committedDate": "2020-05-05T09:55:03Z", "type": "commit"}, {"oid": "f2288b1c581d6a1952321fda52988b991e04585d", "url": "https://github.com/apache/beam/commit/f2288b1c581d6a1952321fda52988b991e04585d", "message": "Add missing metric", "committedDate": "2020-05-05T10:12:07Z", "type": "commit"}, {"oid": "3c71409f6103676a9bd65c3c4e643d0650808c04", "url": "https://github.com/apache/beam/commit/3c71409f6103676a9bd65c3c4e643d0650808c04", "message": "Fix checkStyle", "committedDate": "2020-05-05T10:34:46Z", "type": "commit"}, {"oid": "b1090cdb7e63efdf15ecdcf2dc10a3482316d787", "url": "https://github.com/apache/beam/commit/b1090cdb7e63efdf15ecdcf2dc10a3482316d787", "message": "Linting", "committedDate": "2020-05-05T12:12:29Z", "type": "commit"}]}