{"pr_number": 4373, "pr_title": "Fixed stacktraces caused by incorrect JNDI lookup", "pr_createdAt": "2020-01-27T09:16:37Z", "pr_url": "https://github.com/eclipse-ee4j/jersey/pull/4373", "timeline": [{"oid": "13d1465e73a33a8797359e5a6e4f119fa34fc01c", "url": "https://github.com/eclipse-ee4j/jersey/commit/13d1465e73a33a8797359e5a6e4f119fa34fc01c", "message": "Fixed stacktraces caused by incorrect JNDI lookup\n\n* Fixed processing default local interface\n  - cause:\n    - the stateless bean implemented some interface from library\n    - the interface was annotated only with @Path\n    - neither interface nor class was annotated by @Local or @Remote (then @Local is implicit in ejb3.2)\n\n* Implemented support of Stateless.name attribute\n  - it is used in JNDI names on Payara\n\n* Limited default local interfaces\n  - partial impl of the ejb 3.2 spec 4.9.7, some interfaces are not allowed\n\nSigned-off-by: David Matejcek <dmatej@seznam.cz>", "committedDate": "2020-01-27T09:19:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5OTQ1NA==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4373#discussion_r377599454", "bodyText": "Why don't you deal with Stateful, too?", "author": "jansupol", "createdAt": "2020-02-11T12:18:03Z", "path": "containers/glassfish/jersey-gf-ejb/src/main/java/org/glassfish/jersey/gf/ejb/internal/EjbComponentProvider.java", "diffHunk": "@@ -92,23 +95,43 @@\n \n         final InitialContext ctx;\n         final Class<T> clazz;\n+        final String beanName;\n         final EjbComponentProvider ejbProvider;\n \n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public T get() {\n             try {\n-                return (T) lookup(ctx, clazz, clazz.getSimpleName(), ejbProvider);\n+                return (T) lookup(ctx, clazz, beanName, ejbProvider);\n             } catch (NamingException ex) {\n                 Logger.getLogger(ApplicationHandler.class.getName()).log(Level.SEVERE, null, ex);\n                 return null;\n             }\n         }\n \n+        private static <T> String getBeanName(final Class<T> clazz) {\n+            final Stateless stateless = clazz.getAnnotation(Stateless.class);", "originalCommit": "13d1465e73a33a8797359e5a6e4f119fa34fc01c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5OTM1Mg==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4373#discussion_r378999352", "bodyText": "It is not requested by specification. Isn't REST/Jersey stateless? I think it would be only dead code.", "author": "dmatej", "createdAt": "2020-02-13T17:10:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5OTQ1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIxNTgzNw==", "url": "https://github.com/eclipse-ee4j/jersey/pull/4373#discussion_r380215837", "bodyText": "You are right, JAX-RS Spec discusses Stateless and Singleton, only.", "author": "jansupol", "createdAt": "2020-02-17T14:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5OTQ1NA=="}], "type": "inlineReview", "revised_code": null}]}