{"pr_number": 600, "pr_title": "merge release 2.5.0 into master", "pr_createdAt": "2020-06-09T11:53:45Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/600", "timeline": [{"oid": "62ae776362ac907daf6cbe52ed73efa3458ee938", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/62ae776362ac907daf6cbe52ed73efa3458ee938", "message": "fix contract test for group (#373)", "committedDate": "2019-08-14T02:55:35Z", "type": "commit"}, {"oid": "a277a5cc8951debf99524da8e21b3b87d4cfc4cb", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a277a5cc8951debf99524da8e21b3b87d4cfc4cb", "message": "Merge branch 'master' of https://github.com/FISCO-BCOS/web3sdk into dev", "committedDate": "2019-09-25T08:21:53Z", "type": "commit"}, {"oid": "c9b2ce9dcedea8d9b55682e7787b87790b5ac075", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c9b2ce9dcedea8d9b55682e7787b87790b5ac075", "message": "Merge pull request #416 from JimmyShi22/dev\n\nsync code from master", "committedDate": "2019-09-25T08:34:48Z", "type": "commit"}, {"oid": "f99a8137816d7ecab277048af9e36ee00212e2e7", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f99a8137816d7ecab277048af9e36ee00212e2e7", "message": "Optimize the method to execute transaction (#418)", "committedDate": "2019-09-26T02:53:01Z", "type": "commit"}, {"oid": "3df4dcb1b7cbf8742838ef4d7dc6ce34420a1f1f", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3df4dcb1b7cbf8742838ef4d7dc6ce34420a1f1f", "message": "handle Rlp list (#419)", "committedDate": "2019-09-30T09:17:55Z", "type": "commit"}, {"oid": "c412c1cb7827dff0842da7d07f2a0dc01a57bf07", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c412c1cb7827dff0842da7d07f2a0dc01a57bf07", "message": "change func name (#420)", "committedDate": "2019-10-08T02:09:33Z", "type": "commit"}, {"oid": "6a080543f00c753a5fee384529ea7bd9250bea7e", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6a080543f00c753a5fee384529ea7bd9250bea7e", "message": "Add an asynchronous way to call contract and change the type of return value (#421)\n\n* change func name\r\n\r\n* add an asynchronous way to call contract and change the type of return value", "committedDate": "2019-10-08T12:40:23Z", "type": "commit"}, {"oid": "879073a1632fcf06476968c5c00a5d39d61ae271", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/879073a1632fcf06476968c5c00a5d39d61ae271", "message": "upgrade jackson-databind version. (#455)", "committedDate": "2019-11-22T03:31:58Z", "type": "commit"}, {"oid": "d8b6fac77c9197a39f2442f0d6417959004a1f26", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d8b6fac77c9197a39f2442f0d6417959004a1f26", "message": "sync master to dev (#557)\n\n* sync 2.1.1 to master (#434)\r\n\r\n* fix channel protocol handshake support bug. (#424)\r\n\r\n* remove print in TransactionDecoderTest\r\n\r\n* fix channel protocol handshake support bug.\r\n\r\n* call executeTransaction when deploy contract. (#425)\r\n\r\n* add input/output decoder in java codegen (#426)\r\n\r\n* add input/output decoder in java codegen\r\n\r\n* fix event filter address to topic bug\r\n\r\n* fix java codegen bug.\r\n\r\n* update web3sdk version in release.txt\r\n\r\n* fix TransactionException message set . (#428)\r\n\r\n* add TransactonReceipt code. (#429)\r\n\r\n* update event filter manager log level from info to debug (#430)\r\n\r\n* update ChangeLog.md\r\n\r\n* code optimization (#435)\r\n\r\n* sync 2.1.2 to master (#449)\r\n\r\n* Fix gm unusable bugs (#437)\r\n\r\n* update ChangeLog.md (#448)\r\n\r\n* fix sdk link error. (#454)\r\n\r\n* sync master (#481)\r\n\r\n* Optimize the method to execute transaction (#418)\r\n\r\n* handle Rlp list (#419)\r\n\r\n* change func name (#420)\r\n\r\n* Add an asynchronous way to call contract and change the type of return value (#421)\r\n\r\n* change func name\r\n\r\n* add an asynchronous way to call contract and change the type of return value\r\n\r\n* Fix gm unusable bugs (#437) (#441)\r\n\r\n* fix bug in Jenkins (#440)\r\n\r\n* fix bug in Jenkins\r\n\r\n* format code\r\n\r\n* fix call error status not handle bug. (#442)\r\n\r\n* fix bug in test\r\n\r\n* add error message\r\n\r\n* add CallContract test\r\n\r\n* print test message\r\n\r\n* suitable for the 2.2.0 version (#447)\r\n\r\n* suitable for the 2.2.0 version\r\n\r\n* fix PerformanceDTTest bug.\r\n\r\n* fix bug in rlp\r\n\r\n* add decoder for return value\r\n\r\n* Release 2.2.0 fisco (#458)\r\n\r\n* fix thead safe bug.\r\n\r\n* update transaction receipt status.\r\n\r\nupdate channel version.\r\n\r\n* update jackson-databind version\r\n\r\n* update Credentials create in test.\r\n\r\n* update performance test. (#460)\r\n\r\n* update performance test.\r\n\r\n* remove one log print.\r\n\r\n* change input in merkel\r\n\r\n* catch getNodeVersion exception. (#463)\r\n\r\n* Release 2.2.0 fisco (#464)\r\n\r\n* check int/uint range before abi encode.\r\n\r\n* add gm support for parallel test.\r\n\r\n* update ci_check_commit.sh\r\n\r\n* update netty-tcnative-boringssl-static version. (#465)\r\n\r\n* optimize hexToString. (#466)\r\n\r\n* merge master and modify change log (#471)\r\n\r\n* sync 2.1.2 to master (#449)\r\n\r\n* Fix gm unusable bugs (#437)\r\n\r\n* update ChangeLog.md (#448)\r\n\r\n* fix sdk link error. (#454)\r\n\r\n* modify changelog\r\n\r\nCo-authored-by: ywy2090 <912554887@qq.com>\r\n\r\n* update message service init failed. (#472)\r\n\r\n* add generateGroup,startGroup rpc interface (#467)\r\n\r\n* Release 2.2.0 bsn (#468)\r\n\r\n* update testGenerateGroup testStartGroup\r\n\r\n* add status code for generateGroup, startGroup\r\n\r\n* update message service init failed.\r\n\r\n* Optimize the print (#474)\r\n\r\nCo-authored-by: Shareong <740310627@qq.com>\r\nCo-authored-by: chaychen2005 <35914409+chaychen2005@users.noreply.github.com>\r\n\r\n* Release 2.2.1 (#491)\r\n\r\n* remove trimLeadingZeroes when encode publicKey of guomi (#485)\r\n\r\n* fix the bug of sm2 verify && add the test case (#486)\r\n\r\n* fix the bug of sm2 verify && add the test case\r\n\r\n* add exception handling for network module. (#483)\r\n\r\n* add socket connection to map when handshake success.\r\n\r\n* add check for connectStr.\r\n\r\n* add exception handling for network module.\r\n\r\n* add print pem object info.\r\n\r\n* add log print when load p12 or pem file.\r\n\r\n* update handshake failed error message.\r\n\r\n* delete the blank space (#489)\r\n\r\n* delete the blank space\r\n\r\n* modify error message\r\n\r\n* update TransactionReceipt Log (#490)\r\n\r\n* update release.txt ChangeLog.md (#492)\r\n\r\nCo-authored-by: cyjseagull <yujiechen_hust@163.com>\r\nCo-authored-by: dalaocu <njumjy06@126.com>\r\n\r\n* update web3sdk version (#494)\r\n\r\n* add frozen precompiled service (#495)\r\n\r\n* add contract frozen function\r\n\r\n* goJF format\r\n\r\n* add frozen error code (#497)\r\n\r\n* Optimized signature algorithm  (#501)\r\n\r\n* add sign transfer tx test.\r\n\r\n* optimize ecdsa sign method.\r\n\r\nfix opt code.\r\n\r\nupdate opcode\r\n\r\nupdate opt ecdsa sign.\r\n\r\nupdate\r\n\r\nadd ECDSASigner.java\r\n\r\nadd x,y,r,s log info\r\n\r\n== to !=\r\n\r\nadd log info\r\n\r\nupdate\r\n\r\n* annotate the code for the test\r\n\r\n* optimize sm2 sign method.\r\n\r\n* add cache for SM2Signer object\r\n\r\n* fix ci\r\n\r\n* Add code comments\r\n\r\n* update Table.sol (#502)\r\n\r\n* add err code TableNameLengthOverflow(-51002) (#504)\r\n\r\n* remove sensitive information (#506)\r\n\r\n* add queryAuthority to Frozen (#507)\r\n\r\n* update web3sdk version in release_node.txt\r\n\r\n* add queryAuthority method to Frozen contract.\r\n\r\n* add queryAuthority to Frozen\r\n\r\n* fix bug (#508)\r\n\r\n* add topics update (#509)\r\n\r\n* add topics update\r\n\r\n* add Channel2ServerUpdateTopics.java\r\n\r\n* add default constructor for Function object (#514)\r\n\r\n* add more time information for test (#518)\r\n\r\n* add grantWrite and queryPermisson method for Permision precompile contract (#519)\r\n\r\n* fix ChannelMessage2 encode bug (#523)\r\n\r\n* fix ChannelMessage2 error encode when topic is in chinese\r\n\r\n* remove sha1 and md5 method\r\n\r\n* add ut for ChannelMessage2\r\n\r\n* remove test cache code for SM2Signer (#524)\r\n\r\n* remove test cache code for SM2Signer\r\n\r\n* close writer stream when PerformanceTest\r\n\r\n* make tx cost time more accurate (#522)\r\n\r\n* make tx cost time more accurate\r\n\r\n* make tx cost time more accurate\r\n\r\nCo-authored-by: ywy2090 <912554887@qq.com>\r\n\r\n* sync update topic func to 2.2.3 branch (#521) (#526)\r\n\r\n* sync update topic func to 2.2.3 branch (#521)\r\n\r\n* add topics update\r\n\r\n* add Channel2ServerUpdateTopics.java\r\n\r\n* sync update topic func to 2.2.3 branch\r\n\r\n* update keepalive nodes count log to trace level.\r\n\r\n* remove get_account.sh (#528)\r\n\r\n* add error code -51003 for PermissionPrecompiled (#527)\r\n\r\n* add ECCEncrypt ECCDecrypt. (#529)\r\n\r\n* add encrypt/decrypt/verify method for ECKeyPair.\r\n\r\n* update ECDSA encrpyt/decrypt\r\n\r\n* add ECCEcrypt/ECCDecrpyt\r\n\r\n* contract status management(csm) implementation (#530)\r\n\r\n* support long binary and abi (#531)\r\n\r\n* support long binary and abi\r\n\r\n* remove unused var\r\n\r\nCo-authored-by: ancelmo <ancelmo@ANCELMOOA2.webank.com>\r\n\r\n* update error code and rename ContractLifeCyclePrecomiled (#532)\r\n\r\n* add error code in csm (#534)\r\n\r\n* fix clerical error (#535)\r\n\r\n* add Revert message resolve function (#536)\r\n\r\n* add RevertResolver\r\n\r\n* add RevertResolver UT\r\n\r\n* update Revert Message display (#537)\r\n\r\n* fix ECCEncrpyt bug. (#540)\r\n\r\n* encrypt wrong word fix (#550)\r\n\r\n* upate ChangeLog.md (#554)\r\n\r\n* add publish.gradle and update build.gradle\r\n\r\nCo-authored-by: robert <idioticbear666@gmail.com>\r\nCo-authored-by: Shareong <740310627@qq.com>\r\nCo-authored-by: chaychen2005 <35914409+chaychen2005@users.noreply.github.com>\r\nCo-authored-by: cyjseagull <yujiechen_hust@163.com>\r\nCo-authored-by: dalaocu <njumjy06@126.com>\r\nCo-authored-by: Xingqang Bai <bxq2011hust@qq.com>\r\nCo-authored-by: Chenxi Li <44284897+vita-dounai@users.noreply.github.com>\r\nCo-authored-by: MO NAN <651932351@qq.com>\r\nCo-authored-by: ancelmo <ancelmo@ANCELMOOA2.webank.com>\r\nCo-authored-by: cyjseagull <1547158861@qq.com>", "committedDate": "2020-04-01T12:54:46Z", "type": "commit"}, {"oid": "480f4c3656d971d1282c3618555433ff527ec5c8", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/480f4c3656d971d1282c3618555433ff527ec5c8", "message": "update fastjson version (#559)", "committedDate": "2020-04-02T08:21:48Z", "type": "commit"}, {"oid": "00c85d05f090b57873df0338666610f93b9680eb", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/00c85d05f090b57873df0338666610f93b9680eb", "message": "Remove useless code (#563)", "committedDate": "2020-04-05T09:32:04Z", "type": "commit"}, {"oid": "f73114748c2a9c107ca8a869bb352cc2efd52c49", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f73114748c2a9c107ca8a869bb352cc2efd52c49", "message": "Eliminate bad requests when calculating TPS (#569)", "committedDate": "2020-04-23T07:23:11Z", "type": "commit"}, {"oid": "a8c5869c91bf114d89506ee1b0a72bd02888b2c7", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a8c5869c91bf114d89506ee1b0a72bd02888b2c7", "message": "add REJECT_AMOP_REQ_FOR_OVER_BANDWIDTHLIMIT error code and error message (#572)", "committedDate": "2020-04-24T07:11:46Z", "type": "commit"}, {"oid": "7231cf40d1773d50c95641e749920618cf2b6ee1", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7231cf40d1773d50c95641e749920618cf2b6ee1", "message": "add ChainGovernanceService (#576)\n\n* Remove useless code\r\n\r\n* add ChainGovernanceService\r\n\r\n* remove unused params for call/getCode rpc interface", "committedDate": "2020-04-27T13:02:26Z", "type": "commit"}, {"oid": "35e29a80f8c849e9aba7a275b143f24d54335597", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/35e29a80f8c849e9aba7a275b143f24d54335597", "message": "Merge remote-tracking branch 'origin/master' into fisco-dev", "committedDate": "2020-05-09T02:18:45Z", "type": "commit"}, {"oid": "c3f71ac4dea9d70c73f6e5a9c216a25d1f9e4281", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/c3f71ac4dea9d70c73f6e5a9c216a25d1f9e4281", "message": "Merge pull request #579 from ywy2090/fisco-dev\n\nsync master to dev", "committedDate": "2020-05-09T02:28:58Z", "type": "commit"}, {"oid": "419a8667a993fed83e9fdded6f374f64829bf1c1", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/419a8667a993fed83e9fdded6f374f64829bf1c1", "message": "add OverGroupMemoryLimit statusCode", "committedDate": "2020-05-09T03:16:10Z", "type": "commit"}, {"oid": "bd687f7b98845328c0354262bb89854fa6f7e061", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/bd687f7b98845328c0354262bb89854fa6f7e061", "message": "add PerformanceRPC: Pressure test for RPC interface", "committedDate": "2020-05-09T06:10:58Z", "type": "commit"}, {"oid": "4ceafeb13e7a7509109c5aa80f6f023ace0b83ce", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4ceafeb13e7a7509109c5aa80f6f023ace0b83ce", "message": "Add support for SM Ssl channel connection", "committedDate": "2020-05-12T06:38:28Z", "type": "commit"}, {"oid": "d34664e4d79ded9719691f97629e03d58b0403b8", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d34664e4d79ded9719691f97629e03d58b0403b8", "message": "update Encrypt interface", "committedDate": "2020-05-12T10:02:38Z", "type": "commit"}, {"oid": "7e53a0adfaddbaa9c274df3e4c604a8727301b38", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7e53a0adfaddbaa9c274df3e4c604a8727301b38", "message": "update netty-sm-ssl-context deps", "committedDate": "2020-05-12T15:52:38Z", "type": "commit"}, {"oid": "6187667dfc6840460a60a3413cf5873579d27481", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6187667dfc6840460a60a3413cf5873579d27481", "message": "add sm for integ test", "committedDate": "2020-05-12T16:03:06Z", "type": "commit"}, {"oid": "f105b8a985b4f1736ddf5a8776330b069e74901f", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f105b8a985b4f1736ddf5a8776330b069e74901f", "message": "fix ssl connection bug", "committedDate": "2020-05-13T10:27:48Z", "type": "commit"}, {"oid": "fc8159d1d42fff50304c705ad9b3f1b4006b3c70", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/fc8159d1d42fff50304c705ad9b3f1b4006b3c70", "message": "update ci ubuntu version", "committedDate": "2020-05-13T11:01:22Z", "type": "commit"}, {"oid": "81bb75c6306467f07fbc98c29355376095458577", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/81bb75c6306467f07fbc98c29355376095458577", "message": "fix osx ci", "committedDate": "2020-05-13T13:20:28Z", "type": "commit"}, {"oid": "7e5ecf9c79f4cfb95fcf7a8745dddda9ff8aaec0", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7e5ecf9c79f4cfb95fcf7a8745dddda9ff8aaec0", "message": "Merge pull request #585 from ywy2090/release-2.5.0\n\nsupport sm ssl connection", "committedDate": "2020-05-13T13:53:17Z", "type": "commit"}, {"oid": "04178db0070694c10fe2afcc1ae76c86e77120ed", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/04178db0070694c10fe2afcc1ae76c86e77120ed", "message": "Add QPS limit when querying account to prevent performanceDT pressure test failure when QPS limit is turned on", "committedDate": "2020-05-15T09:23:56Z", "type": "commit"}, {"oid": "78a5c9d695e20c9962ba7fdde02bbf7430e6f691", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/78a5c9d695e20c9962ba7fdde02bbf7430e6f691", "message": "add qpslimiter when verifyTransferData", "committedDate": "2020-05-15T11:55:11Z", "type": "commit"}, {"oid": "47cfdfbafe6087c1ae1f528bf17c68dd4752a015", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/47cfdfbafe6087c1ae1f528bf17c68dd4752a015", "message": "1. fix PerformanceRPC,\n2.add queryAccountQPS to support account-query limit", "committedDate": "2020-05-21T13:20:27Z", "type": "commit"}, {"oid": "524b5ba3096b7c38de376f9f8badc9200f9a00b3", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/524b5ba3096b7c38de376f9f8badc9200f9a00b3", "message": "remove fastjson", "committedDate": "2020-05-22T12:42:04Z", "type": "commit"}, {"oid": "6f6da20eada624c03590b2db8f8cfd002d240431", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/6f6da20eada624c03590b2db8f8cfd002d240431", "message": "add transaction receipt code", "committedDate": "2020-05-26T02:58:47Z", "type": "commit"}, {"oid": "3a6f6a5c0f75751129e0dcc490358e928b94fe6b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3a6f6a5c0f75751129e0dcc490358e928b94fe6b", "message": "Merge pull request #588 from ywy2090/release-2.5.0\n\nremove fastjson", "committedDate": "2020-05-26T03:16:13Z", "type": "commit"}, {"oid": "52ed16f175a72fb59cc8a2eb6ba973d715953b57", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/52ed16f175a72fb59cc8a2eb6ba973d715953b57", "message": "Modify the abnormal log level to error and print out the error message", "committedDate": "2020-05-26T08:39:24Z", "type": "commit"}, {"oid": "cc3c842fe00fcd0a7fcaf2062be050684191313b", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/cc3c842fe00fcd0a7fcaf2062be050684191313b", "message": "fix StatusCode bug", "committedDate": "2020-05-28T11:05:37Z", "type": "commit"}, {"oid": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "message": "Merge pull request #592 from ywy2090/release-2.5.0\n\nfix StatusCode bug", "committedDate": "2020-05-28T11:13:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyMQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349921", "bodyText": "[Misspell] \"paramters\" is a misspelling of \"parameters\" (view)\n\n\n\n\nRule\nCorrect\nIncorrect\n\n\n\n\nparameters\nparameters\nparamters\n\n\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:42Z", "path": "src/test/java/org/fisco/bcos/channel/client/TransactionResourceTest.java", "diffHunk": "@@ -0,0 +1,149 @@\n+package org.fisco.bcos.channel.client;\n+\n+import java.math.BigInteger;\n+import java.util.List;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.ECKeyPair;\n+import org.fisco.bcos.web3j.crypto.Keys;\n+import org.fisco.bcos.web3j.protocol.Web3j;\n+import org.fisco.bcos.web3j.protocol.channel.ChannelEthereumService;\n+import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.BcosBlock;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.BcosTransaction;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.MerkleProofUnit;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceiptWithProof;\n+import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionWithProof;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.support.ClassPathXmlApplicationContext;\n+\n+public class TransactionResourceTest {\n+    static Logger logger = LoggerFactory.getLogger(TransactionResourceTest.class);\n+    public static Web3j web3j;\n+\n+    public static ECKeyPair keyPair;\n+    public static Credentials credentials;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        // init the Service\n+        ApplicationContext context =\n+                new ClassPathXmlApplicationContext(\"classpath:applicationContext.xml\");\n+        Service service = context.getBean(Service.class);\n+        service.setGroupId(Integer.parseInt(args[0]));\n+        service.run(); // run the daemon service\n+        // init the client keys\n+        keyPair = Keys.createEcKeyPair();\n+        credentials = Credentials.create(keyPair);\n+\n+        logger.info(\"-----> start TransactionResourceTest !\");\n+        ChannelEthereumService channelEthereumService = new ChannelEthereumService();\n+        channelEthereumService.setChannelService(service);\n+        try {\n+            web3j = Web3j.build(channelEthereumService, Integer.parseInt(args[0]));\n+        } catch (Exception e) {\n+            System.out.println(\"Please provide groupID in the first paramters\");", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349924", "bodyText": "[PMD Java] Avoid using redundant field initializer for 'credentials' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nRedundantFieldInitializer\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_performance.html#redundantfieldinitializer\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:43Z", "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "diffHunk": "@@ -15,8 +17,7 @@\n \n public class TestBase {\n   public static ApplicationContext context = null;\n-  public static Credentials credentials =\n-      Credentials.create(\"d0fee0a4e3c545a9394965042f8f891b6e5482c212a7428ec175d6aed121353a\");\n+  public static Credentials credentials = null;", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349926", "bodyText": "[PMD Java] System.out.println is used (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nSystemPrintln\nBest Practices\n2\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#systemprintln\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:43Z", "path": "src/integration-test/java/org/fisco/bcos/TestBase.java", "diffHunk": "@@ -36,10 +37,11 @@ public static void setUpBeforeClass() throws Exception {\n     ChannelEthereumService channelEthereumService = new ChannelEthereumService();\n     channelEthereumService.setChannelService(service);\n \n+    System.out.println(\"EncryptType =>  \" + EncryptType.getEncryptType());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkyNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349927", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:43Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349930", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:43Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzMw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349933", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:43Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349934", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349936", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), ", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349937", "bodyText": "[PMD Java] An empty statement (semicolon) not part of a loop (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nEmptyStatementNotInLoop\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#emptystatementnotinloop\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzOA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349938", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTkzOQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349939", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349941", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:44Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), ", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349943", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349946", "bodyText": "[PMD Java] Avoid instantiating new objects inside loops (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidInstantiatingObjectsInLoops\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_performance.html#avoidinstantiatingobjectsinloops\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk0Nw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349947", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349950", "bodyText": "[PMD Java] Logger should be defined private static final and have the correct class (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nProperLogger\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#properlogger\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1NA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349954", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349956", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/contract/Ok.java", "diffHunk": "@@ -1,217 +1,188 @@\n package org.fisco.bcos.contract;\n \n-import io.reactivex.Flowable;\n import java.math.BigInteger;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n import org.fisco.bcos.channel.client.TransactionSucCallback;\n+import org.fisco.bcos.channel.event.filter.EventLogPushWithDecodeCallback;\n import org.fisco.bcos.web3j.abi.EventEncoder;\n+import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;\n import org.fisco.bcos.web3j.abi.TypeReference;\n import org.fisco.bcos.web3j.abi.datatypes.Event;\n import org.fisco.bcos.web3j.abi.datatypes.Function;\n import org.fisco.bcos.web3j.abi.datatypes.Type;\n import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.EncryptType;\n import org.fisco.bcos.web3j.protocol.Web3j;\n-import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;\n import org.fisco.bcos.web3j.protocol.core.RemoteCall;\n-import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;\n import org.fisco.bcos.web3j.protocol.core.methods.response.Log;\n import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;\n+import org.fisco.bcos.web3j.tuples.generated.Tuple1;\n import org.fisco.bcos.web3j.tx.Contract;\n import org.fisco.bcos.web3j.tx.TransactionManager;\n import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;\n+import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;\n \n /**\n- * Auto generated code.\n- *\n+ * <p>Auto generated code.\n  * <p><strong>Do not modify!</strong>\n- *\n  * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n- * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a\n- * href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n+ * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the \n+ * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n  *\n  * <p>Generated with web3j version none.\n  */\n+@SuppressWarnings(\"unchecked\")\n public class Ok extends Contract {\n-  private static final String BINARY =\n-      \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a72305820fb983c66bee66788f407721b23b10a8aae3dc9ef8f1b09e08ec6a6c0b0ec70100029\";\n-\n-  public static final String FUNC_TRANS = \"trans\";\n-\n-  public static final String FUNC_GET = \"get\";\n-\n-  public static final Event TRANSEVENT_EVENT =\n-      new Event(\"TransEvent\", Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));;\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  @Deprecated\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  protected Ok(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    return executeRemoteCallTransaction(function);\n-  }\n-\n-  public void trans(BigInteger num, TransactionSucCallback callback) {\n-    final Function function =\n-        new Function(\n-            FUNC_TRANS,\n-            Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)),\n-            Collections.<TypeReference<?>>emptyList());\n-    asyncExecuteTransaction(function, callback);\n-  }\n-\n-  public RemoteCall<BigInteger> get() {\n-    final Function function =\n-        new Function(\n-            FUNC_GET,\n-            Arrays.<Type>asList(),\n+    public static String BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806366c99139146100515780636d4ce63c1461007e575b600080fd5b34801561005d57600080fd5b5061007c600480360381019080803590602001909291905050506100a9565b005b34801561008a57600080fd5b506100936102e1565b6040518082815260200191505060405180910390f35b8060006001015410806100c757506002600101548160026001015401105b156100d1576102de565b8060006001015403600060010181905550806002600101600082825401925050819055507fc77b710b83d1dc3f3fafeccd08a6c469beb873b2f0975b50d1698e46b3ee5b4c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000190805190602001906102419291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b6000600260010154905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058203c6488d9a80e837aab52f5c5ef1d0b37b671ca2891fd1d92711d3d3ef884b6400029\";\n+\n+    public static final String ABI = \"[{\\\"constant\\\":false,\\\"inputs\\\":[{\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"trans\\\",\\\"outputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\"},{\\\"constant\\\":true,\\\"inputs\\\":[],\\\"name\\\":\\\"get\\\",\\\"outputs\\\":[{\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\"},{\\\"inputs\\\":[],\\\"payable\\\":false,\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"name\\\":\\\"num\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"TransEvent\\\",\\\"type\\\":\\\"event\\\"}]\";\n+\n+    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);\n+\n+    public static String SM_BINARY = \"608060405234801561001057600080fd5b5060016000800160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506402540be40060006001018190555060028060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006002600101819055506103bf806100c26000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063299f7f9d146100515780638fff0fc41461007c575b600080fd5b34801561005d57600080fd5b506100666100a9565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100a7600480360381019080803590602001909291905050506100b6565b005b6000600260010154905090565b8060006001015410806100d457506002600101548160026001015401105b156100de576102eb565b8060006001015403600060010181905550806002600101600082825401925050819055507fc345610041c3c141ff9e0fbc73b34bf13842fd02e0c3cfe6541eedd6adef4b2c816040518082815260200191505060405180910390a160046080604051908101604052806040805190810160405280600881526020017f323031373034313300000000000000000000000000000000000000000000000081525081526020016000800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381525090806001815401808255809150509060018203906000526020600020906004020160009091929091909150600082015181600001908051906020019061024e9291906102ee565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301555050505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061032f57805160ff191683800117855561035d565b8280016001018555821561035d579182015b8281111561035c578251825591602001919060010190610341565b5b50905061036a919061036e565b5090565b61039091905b8082111561038c576000816000905550600101610374565b5090565b905600a165627a7a723058205957e1c3edeb7d8d9ba7f64d56205c70972f2b91f880af98000f404fd22af37b0029\";\n+\n+    public static final String FUNC_TRANS = \"trans\";\n+\n+    public static final String FUNC_GET = \"get\";\n+\n+    public static final Event TRANSEVENT_EVENT = new Event(\"TransEvent\", \n             Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n-    return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n-  }\n-\n-  public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n-    List<Contract.EventValuesWithLog> valueList =\n-        extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n-    ArrayList<TransEventEventResponse> responses =\n-        new ArrayList<TransEventEventResponse>(valueList.size());\n-    for (Contract.EventValuesWithLog eventValues : valueList) {\n-      TransEventEventResponse typedResponse = new TransEventEventResponse();\n-      typedResponse.log = eventValues.getLog();\n-      typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-      responses.add(typedResponse);\n-    }\n-    return responses;\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(BcosFilter filter) {\n-    return web3j\n-        .logFlowable(filter)\n-        .map(\n-            new io.reactivex.functions.Function<Log, TransEventEventResponse>() {\n-              @Override\n-              public TransEventEventResponse apply(Log log) {\n-                Contract.EventValuesWithLog eventValues =\n-                    extractEventParametersWithLog(TRANSEVENT_EVENT, log);\n-                TransEventEventResponse typedResponse = new TransEventEventResponse();\n-                typedResponse.log = log;\n-                typedResponse.num =\n-                    (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n-                return typedResponse;\n-              }\n-            });\n-  }\n-\n-  public Flowable<TransEventEventResponse> transEventEventFlowable(\n-      DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n-    BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());\n-    filter.addSingleTopic(EventEncoder.encode(TRANSEVENT_EVENT));\n-    return transEventEventFlowable(filter);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n-  }\n-\n-  @Deprecated\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      Credentials credentials,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n-  }\n-\n-  public static Ok load(\n-      String contractAddress,\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      ContractGasProvider contractGasProvider) {\n-    return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  @Deprecated\n-  public static RemoteCall<Ok> deploy(\n-      Web3j web3j,\n-      TransactionManager transactionManager,\n-      BigInteger gasPrice,\n-      BigInteger gasLimit) {\n-    return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, \"\");\n-  }\n-\n-  public static class TransEventEventResponse {\n-    public Log log;\n-\n-    public BigInteger num;\n-  }\n+    ;\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    @Deprecated\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    protected Ok(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        super(getBinary(), contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static String getBinary() {\n+        return (EncryptType.encryptType == EncryptType.ECDSA_TYPE ? BINARY : SM_BINARY);\n+    }\n+\n+    public static TransactionDecoder getTransactionDecoder() {\n+        return transactionDecoder;\n+    }\n+\n+    public RemoteCall<TransactionReceipt> trans(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return executeRemoteCallTransaction(function);\n+    }\n+\n+    public void trans(BigInteger num, TransactionSucCallback callback) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        asyncExecuteTransaction(function, callback);\n+    }\n+\n+    public String transSeq(BigInteger num) {\n+        final Function function = new Function(\n+                FUNC_TRANS, \n+                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(num)), \n+                Collections.<TypeReference<?>>emptyList());\n+        return createTransactionSeq(function);\n+    }\n+\n+    public Tuple1<BigInteger> getTransInput(TransactionReceipt transactionReceipt) {\n+        String data = transactionReceipt.getInput().substring(10);\n+        final Function function = new Function(FUNC_TRANS, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;\n+        return new Tuple1<BigInteger>(\n+\n+                (BigInteger) results.get(0).getValue()\n+                );\n+    }\n+\n+    public RemoteCall<BigInteger> get() {\n+        final Function function = new Function(FUNC_GET, \n+                Arrays.<Type>asList(), \n+                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n+        return executeRemoteCallSingleValueReturn(function, BigInteger.class);\n+    }\n+\n+    public List<TransEventEventResponse> getTransEventEvents(TransactionReceipt transactionReceipt) {\n+        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSEVENT_EVENT, transactionReceipt);\n+        ArrayList<TransEventEventResponse> responses = new ArrayList<TransEventEventResponse>(valueList.size());\n+        for (Contract.EventValuesWithLog eventValues : valueList) {\n+            TransEventEventResponse typedResponse = new TransEventEventResponse();\n+            typedResponse.log = eventValues.getLog();\n+            typedResponse.num = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n+            responses.add(typedResponse);\n+        }\n+        return responses;\n+    }\n+\n+    public void registerTransEventEventLogFilter(String fromBlock, String toBlock, List<String> otherTopcs, EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,fromBlock,toBlock,otherTopcs,callback);\n+    }\n+\n+    public void registerTransEventEventLogFilter(EventLogPushWithDecodeCallback callback) {\n+        String topic0 = EventEncoder.encode(TRANSEVENT_EVENT);\n+        registerEventLogPushFilter(ABI,BINARY,topic0,callback);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, credentials, gasPrice, gasLimit);\n+    }\n+\n+    @Deprecated\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return new Ok(contractAddress, web3j, transactionManager, gasPrice, gasLimit);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, credentials, contractGasProvider);\n+    }\n+\n+    public static Ok load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return new Ok(contractAddress, web3j, transactionManager, contractGasProvider);\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, contractGasProvider, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, credentials, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    @Deprecated\n+    public static RemoteCall<Ok> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {\n+        return deployRemoteCall(Ok.class, web3j, transactionManager, gasPrice, gasLimit, getBinary(), \"\");\n+    }\n+\n+    public static class TransEventEventResponse {\n+        public Log log;\n+\n+        public BigInteger num;", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk1OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349958", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:45Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "diffHunk": "@@ -16,7 +16,7 @@\n public class CRUDServiceTest extends TestBase {\n \n \n-\tprivate CRUDService crudSerivce = new CRUDService(web3j, credentials);\n+\tprivate CRUDService crudService = new CRUDService(web3j, credentials);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349960", "bodyText": "[PMD Java] Private field 'crudService' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:46Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/CRUDServiceTest.java", "diffHunk": "@@ -16,7 +16,7 @@\n public class CRUDServiceTest extends TestBase {\n \n \n-\tprivate CRUDService crudSerivce = new CRUDService(web3j, credentials);\n+\tprivate CRUDService crudService = new CRUDService(web3j, credentials);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349963", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:46Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/CnsServiceTest.java", "diffHunk": "@@ -6,15 +6,15 @@\n import java.security.SecureRandom;\n \n import org.fisco.bcos.TestBase;\n-import org.fisco.bcos.channel.test.contract.Ok;\n+import org.fisco.bcos.contract.Ok;\n import org.fisco.bcos.web3j.crypto.Credentials;\n+import org.fisco.bcos.web3j.crypto.gm.GenCredential;\n import org.fisco.bcos.web3j.precompile.cns.CnsService;\n import org.junit.Test;\n \n public class CnsServiceTest extends TestBase {\n \n-  public Credentials credentials =\n-      Credentials.create(\"b83261efa42895c38c6c2364ca878f43e77f3cddbc922bf57d0d48070f79feb6\");\n+  public Credentials credentials = GenCredential.create();", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk2OA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349968", "bodyText": "[PMD Java] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:46Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk3Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349976", "bodyText": "[PMD Java] Private field 'systemConfigService' could be made final; it is only initialized in the declaration or constructor. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nImmutableField\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#immutablefield\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:46Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk3OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349979", "bodyText": "[PMD Java] Potential violation of Law of Demeter (static property access) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:46Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);\n \n   @Test\n   public void setValueByKey() throws Exception {\n \n   \tString txCountLimit1 = \"5000\";\n-\tsystemConfigSerivce.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n+\tsystemConfigService.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349981", "bodyText": "[PMD Java] Potential violation of Law of Demeter (static property access) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/precompile/SystemConfigServiceTest.java", "diffHunk": "@@ -10,18 +10,18 @@\n public class SystemConfigServiceTest extends TestBase {\n \n \n-  private SystemConfigService systemConfigSerivce = new SystemConfigService(web3j, credentials);\n+  private SystemConfigService systemConfigService = new SystemConfigService(web3j, credentials);\n \n   @Test\n   public void setValueByKey() throws Exception {\n \n   \tString txCountLimit1 = \"5000\";\n-\tsystemConfigSerivce.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n+\tsystemConfigService.setValueByKey(EnumKey.tx_count_limit.toString(), txCountLimit1);\n   \tString txCountLimit2 = web3j.getSystemConfigByKey(EnumKey.tx_count_limit.toString()).send().getSystemConfigByKey();\n   \tassertEquals(txCountLimit1, txCountLimit2);\n   \t\n   \tString txGasLimit1 = \"50000000\";\n-  \tsystemConfigSerivce.setValueByKey(EnumKey.tx_gas_limit.toString(), txGasLimit1);\n+  \tsystemConfigService.setValueByKey(EnumKey.tx_gas_limit.toString(), txGasLimit1);", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349983", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk4Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349986", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349990", "bodyText": "[PMD Java] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349993", "bodyText": "[PMD Java] Potential violation of Law of Demeter (object not created locally) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0OTk5Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/600#discussion_r437349996", "bodyText": "[PMD Java] JUnit assertions should include a message (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nJUnitAssertionsShouldIncludeMessage\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.23.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-06-09T11:54:47Z", "path": "src/integration-test/java/org/fisco/bcos/web3j/Web3jApITest.java", "diffHunk": "@@ -34,12 +34,12 @@\n \n   @Test\n   public void getNodeVersion() throws IOException {\n-    NodeVersion nodeVersion = web3j.getNodeVersion().send();\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n-    assertNotNull(nodeVersion.getNodeVersion().getBuildType());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitBranch());\n-    assertNotNull(nodeVersion.getNodeVersion().getGitCommit());\n-    assertNotNull(nodeVersion.getNodeVersion().getVersion());\n+      NodeVersion nodeVersion = web3j.getNodeVersion().send();\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildTime());\n+      assertNotNull(nodeVersion.getNodeVersion().getBuildType());", "originalCommit": "ab99cd3bbd8904e5316c8c58e13e385b0aba8d32", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4eab73fbc4b41c16dd02b10d4e176d914c8249ba", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/4eab73fbc4b41c16dd02b10d4e176d914c8249ba", "message": "update ci config", "committedDate": "2020-06-09T13:46:30Z", "type": "commit"}, {"oid": "3315dd43194183f6a2c9fe0ca96b823864d790ba", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3315dd43194183f6a2c9fe0ca96b823864d790ba", "message": "Merge pull request #601 from bxq2011hust/release-2.5.0\n\nupdate ci config", "committedDate": "2020-06-09T13:56:01Z", "type": "commit"}]}