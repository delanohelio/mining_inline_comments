{"pr_number": 522, "pr_title": "make tx cost time more accurate", "pr_createdAt": "2020-03-04T11:07:55Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/522", "timeline": [{"oid": "f1ad0ecab559775f4c5556d42b81ad501ce4ea9a", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/f1ad0ecab559775f4c5556d42b81ad501ce4ea9a", "message": "make tx cost time more accurate", "committedDate": "2020-03-04T11:27:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwNzMxNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387607317", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:29:22Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime;", "originalCommit": "f1ad0ecab559775f4c5556d42b81ad501ce4ea9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\nindex 75ce37e8..1099d93f 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime;\n+    private Long startTime = null;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwNzMyNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387607325", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:29:23Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime;", "originalCommit": "f1ad0ecab559775f4c5556d42b81ad501ce4ea9a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\nindex b52940c8..9aa3ca2b 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime;\n+    private Long startTime = null;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"oid": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/2c1e8c87bc620f5425bae41f9ddec86fb3864681", "message": "make tx cost time more accurate", "committedDate": "2020-03-04T11:36:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxMTk3MA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387611970", "bodyText": "[PMD] Avoid using redundant field initializer for 'startTime' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nRedundantFieldInitializer\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#redundantfieldinitializer\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:39:22Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = null;", "originalCommit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\nindex 1099d93f..880249d8 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = null;\n+    private Long startTime = 0;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxMTk3Ng==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387611976", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:39:23Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = null;", "originalCommit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\nindex 9aa3ca2b..d8634055 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = null;\n+    private Long startTime = 0;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxMTk4OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387611989", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:39:24Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = null;", "originalCommit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\nindex 1099d93f..880249d8 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = null;\n+    private Long startTime = 0;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxMjAwNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387612005", "bodyText": "[PMD] Avoid using redundant field initializer for 'startTime' (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nRedundantFieldInitializer\nPerformance\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_performance.html#redundantfieldinitializer\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:39:26Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = null;", "originalCommit": "2c1e8c87bc620f5425bae41f9ddec86fb3864681", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\nindex 9aa3ca2b..d8634055 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = null;\n+    private Long startTime = 0;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"oid": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "message": "make tx cost time more accurate", "committedDate": "2020-03-04T11:45:25Z", "type": "commit"}, {"oid": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "message": "make tx cost time more accurate", "committedDate": "2020-03-04T11:45:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxNTU5OQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387615599", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:47:38Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = 0;", "originalCommit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60593fdc77b0c1bdf858242454376fd27530c434", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\nindex d8634055..b52940c8 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/parallelok/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = 0;\n+    private Long startTime;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYxNTYxNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/522#discussion_r387615615", "bodyText": "[PMD] Found non-transient, non-static member. Please mark as transient or provide accessors. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nBeanMembersShouldSerialize\nError Prone\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize\n\nYou can mark this issue as closed if you should not tackle it. (see our document about issues)", "author": "sider", "createdAt": "2020-03-04T11:47:40Z", "path": "src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java", "diffHunk": "@@ -8,7 +8,7 @@\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = System.currentTimeMillis();\n+    private Long startTime = 0;", "originalCommit": "dd3cd73dd366e09de9c27e056d0ff4d9015454cf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "60593fdc77b0c1bdf858242454376fd27530c434", "chunk": "diff --git a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\nindex 880249d8..75ce37e8 100644\n--- a/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n+++ b/src/test/java/org/fisco/bcos/channel/test/parallel/precompile/PerformanceDTCallback.java\n\n@@ -8,7 +8,7 @@ import org.slf4j.LoggerFactory;\n \n public class PerformanceDTCallback extends TransactionSucCallback {\n \n-    private Long startTime = 0;\n+    private Long startTime;\n \n     private PerformanceDTCollector collector = null;\n     private DagUserMgr dagUserMgr = null;\n"}}, {"oid": "60593fdc77b0c1bdf858242454376fd27530c434", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/60593fdc77b0c1bdf858242454376fd27530c434", "message": "make tx cost time more accurate", "committedDate": "2020-03-04T11:55:18Z", "type": "commit"}, {"oid": "32cc5d1218719a7dc6bf9c7ab09d010918fec725", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/32cc5d1218719a7dc6bf9c7ab09d010918fec725", "message": "Merge branch 'release-2.3.0' into release-2.3.0", "committedDate": "2020-03-06T01:46:08Z", "type": "commit"}]}