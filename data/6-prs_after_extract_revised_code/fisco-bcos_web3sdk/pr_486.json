{"pr_number": 486, "pr_title": "fix the bug of sm2 verify && add the test case", "pr_createdAt": "2020-01-02T03:34:29Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/486", "timeline": [{"oid": "d38ca9f0dc340aa03e5cb728e587d7a40e1f3f63", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/d38ca9f0dc340aa03e5cb728e587d7a40e1f3f63", "message": "Fix gm unusable bugs (#437)", "committedDate": "2019-11-08T08:18:58Z", "type": "commit"}, {"oid": "85977860179013e9e43d3342c5e0e1e3cd9d692e", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/85977860179013e9e43d3342c5e0e1e3cd9d692e", "message": "update ChangeLog.md (#448)", "committedDate": "2019-11-14T12:55:08Z", "type": "commit"}, {"oid": "005dde1a8f304f60faee1142a315569d744e67eb", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/005dde1a8f304f60faee1142a315569d744e67eb", "message": "fix the bug of sm2 verify && add the test case", "committedDate": "2020-01-02T03:18:21Z", "type": "commit"}, {"oid": "3eb97637a45532ea64cc1b243602acfb4b681597", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/3eb97637a45532ea64cc1b243602acfb4b681597", "message": "merge", "committedDate": "2020-01-02T03:30:51Z", "type": "commit"}, {"oid": "88f35390c3a25d583f4c0355f311dd1324f968e5", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/88f35390c3a25d583f4c0355f311dd1324f968e5", "message": "format", "committedDate": "2020-01-02T03:31:55Z", "type": "commit"}, {"oid": "cfa5d8659dc9eec4631a6ca008a14a844341cc83", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/cfa5d8659dc9eec4631a6ca008a14a844341cc83", "message": "rm print", "committedDate": "2020-01-02T13:23:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQ3MTQwNQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/486#discussion_r362471405", "bodyText": "[PMD] Found 'DU'-anomaly for variable 'publicKeyBytes' (lines '72'-'86'). (see on Sider)\n\n\n\n\nRule\n\n\n\n\nError Prone-DataflowAnomalyAnalysis-05494a1db449e2d66c833277a6cffe821b6225d6\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.20.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis", "author": "sider", "createdAt": "2020-01-02T13:25:16Z", "path": "src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java", "diffHunk": "@@ -52,4 +63,25 @@ public void testPublicKeyFromPrivatePoint() {\n         ECPoint point = Sign.publicPointFromPrivate(SampleKeys.PRIVATE_KEY);\n         assertThat(Sign.publicFromPoint(point.getEncoded(false)), equalTo(SampleKeys.PUBLIC_KEY));\n     }\n+    \n+    @Test\n+    public void testGmSignVerify() throws IOException {\n+        byte[] sourceData = Hex.decode(\"434477813974bf58f94bcf760833c2b40f77a5fc360485b0b9ed1bd9682edb45\");\n+        String publicKey =\n+                \"e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n+        byte[] publicKeyBytes = Hex.decode(publicKey);", "originalCommit": "cfa5d8659dc9eec4631a6ca008a14a844341cc83", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "505a5a4046e6164ff44ab768b750107eca04a8df", "chunk": "diff --git a/src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java b/src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java\nindex 6f820bca..a01c603a 100644\n--- a/src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java\n+++ b/src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java\n\n@@ -69,7 +69,6 @@ public class SignTest {\n         byte[] sourceData = Hex.decode(\"434477813974bf58f94bcf760833c2b40f77a5fc360485b0b9ed1bd9682edb45\");\n         String publicKey =\n                 \"e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n-        byte[] publicKeyBytes = Hex.decode(publicKey);\n         String sign =\n                 \"09628650676000c8d18bf43db68e7f66dfaed230d87e6391c29eb594b7b9cc3c8d370dbd29ce62bbcf3506adb57f041d8646ae4f70a26ea5179418e738fd4372e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n         byte[] signatureBytes = Numeric.hexStringToByteArray(\"0x\" + sign);\n"}}, {"oid": "9fb722d6ffdd6339f161f847c28b0f639e560b34", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/9fb722d6ffdd6339f161f847c28b0f639e560b34", "message": "Merge branch 'release-2.2.1' into release-2.1.2", "committedDate": "2020-01-03T02:28:15Z", "type": "commit"}, {"oid": "505a5a4046e6164ff44ab768b750107eca04a8df", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/505a5a4046e6164ff44ab768b750107eca04a8df", "message": "fix style", "committedDate": "2020-01-03T03:08:15Z", "type": "commit"}, {"oid": "7689230ee8e728a2f96384ba5c5a6f17fb818fe7", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/7689230ee8e728a2f96384ba5c5a6f17fb818fe7", "message": "test msg", "committedDate": "2020-01-03T03:37:43Z", "type": "commit"}, {"oid": "cfa7300fef3285e9ff512d2ff43501631c3f222a", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/cfa7300fef3285e9ff512d2ff43501631c3f222a", "message": "format", "committedDate": "2020-01-03T03:56:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcwMTE0MQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/486#discussion_r362701141", "bodyText": "[PMD] Potential violation of Law of Demeter (object not created locally) (see on Sider)\n\n\n\n\nRule\n\n\n\n\nDesign-LawOfDemeter-b97a717b6b3cf4346fbdcd26a2e8e1637439cf60\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.20.0/pmd_rules_java_design.html#lawofdemeter", "author": "sider", "createdAt": "2020-01-03T03:58:20Z", "path": "src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java", "diffHunk": "@@ -52,4 +62,31 @@ public void testPublicKeyFromPrivatePoint() {\n         ECPoint point = Sign.publicPointFromPrivate(SampleKeys.PRIVATE_KEY);\n         assertThat(Sign.publicFromPoint(point.getEncoded(false)), equalTo(SampleKeys.PUBLIC_KEY));\n     }\n+\n+    @Test\n+    public void testGmSignVerify() throws IOException {\n+        byte[] sourceData =\n+                Hex.decode(\"434477813974bf58f94bcf760833c2b40f77a5fc360485b0b9ed1bd9682edb45\");\n+        String publicKey =\n+                \"e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n+        String sign =\n+                \"09628650676000c8d18bf43db68e7f66dfaed230d87e6391c29eb594b7b9cc3c8d370dbd29ce62bbcf3506adb57f041d8646ae4f70a26ea5179418e738fd4372e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n+        byte[] signatureBytes = Numeric.hexStringToByteArray(\"0x\" + sign);\n+\n+        ASN1Integer d_r =\n+                new ASN1Integer(new BigInteger(1, Arrays.copyOfRange(signatureBytes, 0, 32)));\n+        ASN1Integer d_s =\n+                new ASN1Integer(new BigInteger(1, Arrays.copyOfRange(signatureBytes, 32, 64)));\n+        ASN1EncodableVector v2 = new ASN1EncodableVector();\n+        v2.add(d_r);\n+        v2.add(d_s);\n+        DERSequence der = new DERSequence(v2);\n+        boolean b =\n+                SM2Algorithm.verify(\n+                        sourceData,\n+                        der.getEncoded(),\n+                        publicKey.substring(0, 64),", "originalCommit": "cfa7300fef3285e9ff512d2ff43501631c3f222a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcwMTE0Mw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/486#discussion_r362701143", "bodyText": "[PMD] Potential violation of Law of Demeter (object not created locally) (see on Sider)\n\n\n\n\nRule\n\n\n\n\nDesign-LawOfDemeter-b97a717b6b3cf4346fbdcd26a2e8e1637439cf60\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.20.0/pmd_rules_java_design.html#lawofdemeter", "author": "sider", "createdAt": "2020-01-03T03:58:21Z", "path": "src/test/java/org/fisco/bcos/web3j/crypto/SignTest.java", "diffHunk": "@@ -52,4 +62,31 @@ public void testPublicKeyFromPrivatePoint() {\n         ECPoint point = Sign.publicPointFromPrivate(SampleKeys.PRIVATE_KEY);\n         assertThat(Sign.publicFromPoint(point.getEncoded(false)), equalTo(SampleKeys.PUBLIC_KEY));\n     }\n+\n+    @Test\n+    public void testGmSignVerify() throws IOException {\n+        byte[] sourceData =\n+                Hex.decode(\"434477813974bf58f94bcf760833c2b40f77a5fc360485b0b9ed1bd9682edb45\");\n+        String publicKey =\n+                \"e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n+        String sign =\n+                \"09628650676000c8d18bf43db68e7f66dfaed230d87e6391c29eb594b7b9cc3c8d370dbd29ce62bbcf3506adb57f041d8646ae4f70a26ea5179418e738fd4372e8c670380cb220095268f40221fc748fa6ac39d6e930e63c30da68bad97f885da6e8c9ad722c3683ab859393220d1431eb1818ed44a942efb07b261a0fc769e7\";\n+        byte[] signatureBytes = Numeric.hexStringToByteArray(\"0x\" + sign);\n+\n+        ASN1Integer d_r =\n+                new ASN1Integer(new BigInteger(1, Arrays.copyOfRange(signatureBytes, 0, 32)));\n+        ASN1Integer d_s =\n+                new ASN1Integer(new BigInteger(1, Arrays.copyOfRange(signatureBytes, 32, 64)));\n+        ASN1EncodableVector v2 = new ASN1EncodableVector();\n+        v2.add(d_r);\n+        v2.add(d_s);\n+        DERSequence der = new DERSequence(v2);\n+        boolean b =\n+                SM2Algorithm.verify(\n+                        sourceData,\n+                        der.getEncoded(),\n+                        publicKey.substring(0, 64),\n+                        publicKey.substring(64, 128));", "originalCommit": "cfa7300fef3285e9ff512d2ff43501631c3f222a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}