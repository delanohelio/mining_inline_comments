{"pr_number": 575, "pr_title": "add error log when p2p port is used for channel connection", "pr_createdAt": "2020-04-24T12:06:38Z", "pr_url": "https://github.com/FISCO-BCOS/web3sdk/pull/575", "timeline": [{"oid": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "url": "https://github.com/FISCO-BCOS/web3sdk/commit/a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "message": "add warn log when p2p port is used for channel connection", "committedDate": "2020-04-24T12:05:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDc5Mg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/575#discussion_r414524792", "bodyText": "[PMD] Avoid throwing raw exception types. (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidThrowingRawExceptionTypes\nDesign\n1\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-04-24T12:07:49Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ConnectionCallback.java", "diffHunk": "@@ -419,7 +419,23 @@ public void onDisconnect(ChannelHandlerContext ctx) {\n     public void onMessage(ChannelHandlerContext ctx, ByteBuf message) {\n         try {\n             Message msg = new Message();\n-            msg.readHeader(message);\n+\n+            try {\n+                msg.readHeader(message);\n+            } catch (Exception e) {\n+                String host =\n+                        ((SocketChannel) ctx.channel())\n+                                .remoteAddress()\n+                                .getAddress()\n+                                .getHostAddress();\n+                Integer port = ((SocketChannel) ctx.channel()).remoteAddress().getPort();\n+\n+                logger.error(\n+                        \" Maybe p2p port is used to channel connection, please check the configuration, peer {}:{}\",\n+                        host,\n+                        port);\n+                throw new RuntimeException(e.getCause());", "originalCommit": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDgwMQ==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/575#discussion_r414524801", "bodyText": "[PMD] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-04-24T12:07:50Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ConnectionCallback.java", "diffHunk": "@@ -419,7 +419,23 @@ public void onDisconnect(ChannelHandlerContext ctx) {\n     public void onMessage(ChannelHandlerContext ctx, ByteBuf message) {\n         try {\n             Message msg = new Message();\n-            msg.readHeader(message);\n+\n+            try {\n+                msg.readHeader(message);\n+            } catch (Exception e) {\n+                String host =\n+                        ((SocketChannel) ctx.channel())", "originalCommit": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDgxMg==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/575#discussion_r414524812", "bodyText": "[PMD] Potential violation of Law of Demeter (method chain calls) (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nLawOfDemeter\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#lawofdemeter\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-04-24T12:07:51Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ConnectionCallback.java", "diffHunk": "@@ -419,7 +419,23 @@ public void onDisconnect(ChannelHandlerContext ctx) {\n     public void onMessage(ChannelHandlerContext ctx, ByteBuf message) {\n         try {\n             Message msg = new Message();\n-            msg.readHeader(message);\n+\n+            try {\n+                msg.readHeader(message);\n+            } catch (Exception e) {\n+                String host =\n+                        ((SocketChannel) ctx.channel())\n+                                .remoteAddress()\n+                                .getAddress()\n+                                .getHostAddress();\n+                Integer port = ((SocketChannel) ctx.channel()).remoteAddress().getPort();", "originalCommit": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDgxNw==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/575#discussion_r414524817", "bodyText": "[PMD] Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nAvoidCatchingGenericException\nDesign\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_design.html#avoidcatchinggenericexception\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-04-24T12:07:52Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ConnectionCallback.java", "diffHunk": "@@ -419,7 +419,23 @@ public void onDisconnect(ChannelHandlerContext ctx) {\n     public void onMessage(ChannelHandlerContext ctx, ByteBuf message) {\n         try {\n             Message msg = new Message();\n-            msg.readHeader(message);\n+\n+            try {\n+                msg.readHeader(message);\n+            } catch (Exception e) {", "originalCommit": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDgzMA==", "url": "https://github.com/FISCO-BCOS/web3sdk/pull/575#discussion_r414524830", "bodyText": "[PMD] New exception is thrown in catch block, original stack trace may be lost (view)\n\n\n\n\nRule\nRuleset\nPriority\n\n\n\n\nPreserveStackTrace\nBest Practices\n3\n\n\n\nReferences:\n\nhttps://pmd.github.io/pmd-6.21.0/pmd_rules_java_bestpractices.html#preservestacktrace\n\nYou can close this issue if no need to fix it. Learn more.", "author": "sider", "createdAt": "2020-04-24T12:07:53Z", "path": "src/main/java/org/fisco/bcos/channel/handler/ConnectionCallback.java", "diffHunk": "@@ -419,7 +419,23 @@ public void onDisconnect(ChannelHandlerContext ctx) {\n     public void onMessage(ChannelHandlerContext ctx, ByteBuf message) {\n         try {\n             Message msg = new Message();\n-            msg.readHeader(message);\n+\n+            try {\n+                msg.readHeader(message);\n+            } catch (Exception e) {\n+                String host =\n+                        ((SocketChannel) ctx.channel())\n+                                .remoteAddress()\n+                                .getAddress()\n+                                .getHostAddress();\n+                Integer port = ((SocketChannel) ctx.channel()).remoteAddress().getPort();\n+\n+                logger.error(\n+                        \" Maybe p2p port is used to channel connection, please check the configuration, peer {}:{}\",\n+                        host,\n+                        port);\n+                throw new RuntimeException(e.getCause());", "originalCommit": "a6959fedf0aeab6df58ff812f51e9ffc5b93d6d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}