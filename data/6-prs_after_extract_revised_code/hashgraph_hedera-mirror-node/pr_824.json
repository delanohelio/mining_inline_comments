{"pr_number": 824, "pr_title": "Followup of #817", "pr_createdAt": "2020-06-11T20:42:51Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/824", "timeline": [{"oid": "0810e19c46afe0962338411401636ad2d21a841d", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/0810e19c46afe0962338411401636ad2d21a841d", "message": "Followup of #817\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-11T21:15:16Z", "type": "forcePushed"}, {"oid": "bf75af66650d35ef8d42d62e922588b6c3d45963", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/bf75af66650d35ef8d42d62e922588b6c3d45963", "message": "Followup of #817\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-11T22:24:22Z", "type": "forcePushed"}, {"oid": "be218a0ac990baa8720a410acb86183e5740190f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/be218a0ac990baa8720a410acb86183e5740190f", "message": "Followup of #817\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-11T22:50:46Z", "type": "commit"}, {"oid": "be218a0ac990baa8720a410acb86183e5740190f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/be218a0ac990baa8720a410acb86183e5740190f", "message": "Followup of #817\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-11T22:50:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NDk3OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439184979", "bodyText": "Should extend ImporterException", "author": "steven-sheehy", "createdAt": "2020-06-12T03:17:41Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.hedera.mirror.importer.exception;\n+\n+/*-\n+ * \u200c\n+ * Hedera Mirror Node\n+ * \u200b\n+ * Copyright (C) 2019 - 2020 Hedera Hashgraph, LLC\n+ * \u200b\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ * \u200d\n+ */\n+\n+public class InvalidEntityException extends RuntimeException {", "originalCommit": "be218a0ac990baa8720a410acb86183e5740190f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjE2Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206167", "bodyText": "Done.", "author": "apeksharma", "createdAt": "2020-06-12T04:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NDk3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java\nindex 84fb114a7..62ae03312 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/exception/InvalidEntityException.java\n\n@@ -20,7 +20,7 @@ package com.hedera.mirror.importer.exception;\n  * \u200d\n  */\n \n-public class InvalidEntityException extends RuntimeException {\n+public class InvalidEntityException extends ImporterException {\n \n     private static final long serialVersionUID = 1988238764876411857L;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTE0Mg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439185142", "bodyText": "Please log the consensusNs as well. It should probably just be at warn level as it's due to customer input and not alert worthy.", "author": "steven-sheehy", "createdAt": "2020-06-12T03:18:31Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -95,7 +96,13 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         TransactionHandler transactionHandler = transactionHandlerFactory.create(body);\n \n         long consensusNs = Utility.timeStampInNanos(txRecord.getConsensusTimestamp());\n-        EntityId entityId = transactionHandler.getEntity(recordItem);\n+        EntityId entityId;\n+        try {\n+            entityId = transactionHandler.getEntity(recordItem);\n+        } catch (InvalidEntityException e) { // transaction can have invalid topic/contract/file id\n+            log.error(e);", "originalCommit": "be218a0ac990baa8720a410acb86183e5740190f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjE4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206188", "bodyText": "Done.", "author": "apeksharma", "createdAt": "2020-06-12T04:55:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTE0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\nindex 6c4a34f5d..bf3b82970 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n\n@@ -100,7 +100,7 @@ public class EntityRecordItemListener implements RecordItemListener {\n         try {\n             entityId = transactionHandler.getEntity(recordItem);\n         } catch (InvalidEntityException e) { // transaction can have invalid topic/contract/file id\n-            log.error(e);\n+            log.warn(\"Invalid entity encountered for consensusTimestamp {} : {}\", consensusNs, e.getMessage());\n             entityId = null;\n         }\n         TransactionTypeEnum transactionTypeEnum = TransactionTypeEnum.of(recordItem.getTransactionType());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTgyOQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439185829", "bodyText": "nit: Should use highest level interface that still meets your requirements (Dependency Inversion Principle). Recommend Collection. Also can be initialized here.", "author": "steven-sheehy", "createdAt": "2020-06-12T03:21:08Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java", "diffHunk": "@@ -56,6 +57,9 @@\n     private final DataSource dataSource;\n     private final RecordFileRepository recordFileRepository;\n     private long batch_count = 0;\n+    // Keeps track of entityIds seen in the current file being processed. This is for optimizing inserts into\n+    // t_entities table so that insertion of node and treasury ids are not tried for every transaction.\n+    private HashSet<EntityId> entityIds;", "originalCommit": "be218a0ac990baa8720a410acb86183e5740190f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjYyNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/824#discussion_r439206624", "bodyText": "Done.", "author": "apeksharma", "createdAt": "2020-06-12T04:57:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4NTgyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java\nindex 4da353827..9553d3e28 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/sql/SqlEntityListener.java\n\n@@ -59,7 +60,7 @@ public class SqlEntityListener implements EntityListener, RecordStreamFileListen\n     private long batch_count = 0;\n     // Keeps track of entityIds seen in the current file being processed. This is for optimizing inserts into\n     // t_entities table so that insertion of node and treasury ids are not tried for every transaction.\n-    private HashSet<EntityId> entityIds;\n+    private Collection<EntityId> entityIds;\n     private PreparedStatement sqlInsertTransaction;\n     private PreparedStatement sqlInsertEntityId;\n     private PreparedStatement sqlInsertTransferList;\n"}}, {"oid": "d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "message": "address review comments\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-12T04:57:13Z", "type": "commit"}, {"oid": "d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d8d1be4bbcc48f6906ff8b63845e2a72d8f30137", "message": "address review comments\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-06-12T04:57:13Z", "type": "forcePushed"}]}