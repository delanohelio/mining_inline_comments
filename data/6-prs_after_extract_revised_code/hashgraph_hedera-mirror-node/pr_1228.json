{"pr_number": 1228, "pr_title": "Ensure entities are inserted only on create", "pr_createdAt": "2020-11-04T22:51:56Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4NTUzNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r518185536", "bodyText": "What was wrong with the previous approach? Why do we keep taking fields out of RecordItem and passing them separately? It breaks encapsulation and is not OO. We can simply pass record item.", "author": "steven-sheehy", "createdAt": "2020-11-05T16:28:20Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -227,18 +229,17 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         log.debug(\"Storing transaction: {}\", tx);\n     }\n \n-    private Transaction buildTransaction(long consensusTimestamp, RecordItem recordItem) {\n+    private Transaction buildTransaction(long consensusTimestamp, TransactionBody body, TransactionRecord txRecord,\n+                                         EntityId entityId, int transactionType, byte[] transactionBytes) {\n         Transaction tx = new Transaction();\n-        TransactionBody body = recordItem.getTransactionBody();\n-        TransactionRecord txRecord = recordItem.getRecord();\n         tx.setChargedTxFee(txRecord.getTransactionFee());\n         tx.setConsensusNs(consensusTimestamp);\n         tx.setMemo(body.getMemoBytes().toByteArray());\n         tx.setMaxFee(body.getTransactionFee());\n         tx.setResult(txRecord.getReceipt().getStatusValue());\n-        tx.setType(recordItem.getTransactionType());\n-        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ?\n-                recordItem.getTransactionBytes() : null);\n+        tx.setEntityId(entityId);\n+        tx.setType(transactionType);", "originalCommit": "f41eca2a4078eb535457dfab95175fc2f5493116", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAyNTMzMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519025331", "bodyText": "Previous approach has transaction build logic dispersed, therefore making it harder to follow and maintain.\nAim here was to move all transaction build logic into the buildTransaction method.\nTrue better to just pass RecordItem. My gut had performance concerns but it think we explored that already and it turned out to not be an issue.\nWill update this to take in RecordItem", "author": "Nana-EC", "createdAt": "2020-11-06T21:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4NTUzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4Nzc1NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519087754", "bodyText": "Reverted logic and will move out to a separate PR", "author": "Nana-EC", "createdAt": "2020-11-07T03:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE4NTUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\nindex 6872f88f3..33805655b 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n\n@@ -229,17 +228,18 @@ public class EntityRecordItemListener implements RecordItemListener {\n         log.debug(\"Storing transaction: {}\", tx);\n     }\n \n-    private Transaction buildTransaction(long consensusTimestamp, TransactionBody body, TransactionRecord txRecord,\n-                                         EntityId entityId, int transactionType, byte[] transactionBytes) {\n+    private Transaction buildTransaction(long consensusTimestamp, RecordItem recordItem) {\n         Transaction tx = new Transaction();\n+        TransactionBody body = recordItem.getTransactionBody();\n+        TransactionRecord txRecord = recordItem.getRecord();\n         tx.setChargedTxFee(txRecord.getTransactionFee());\n         tx.setConsensusNs(consensusTimestamp);\n         tx.setMemo(body.getMemoBytes().toByteArray());\n         tx.setMaxFee(body.getTransactionFee());\n         tx.setResult(txRecord.getReceipt().getStatusValue());\n-        tx.setEntityId(entityId);\n-        tx.setType(transactionType);\n-        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ? transactionBytes : null);\n+        tx.setType(recordItem.getTransactionType());\n+        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ?\n+                recordItem.getTransactionBytes() : null);\n         tx.setTransactionHash(txRecord.getTransactionHash().toByteArray());\n         Long validDurationSeconds = body.hasTransactionValidDuration() ?\n                 body.getTransactionValidDuration().getSeconds() : null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTAwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r518891004", "bodyText": "This seems to set the entityId on the transaction even if it's unsuccessful and doesn't get added to the entities table later. Should probably be moved into the isSuccessful block. We should add this check to tests.", "author": "steven-sheehy", "createdAt": "2020-11-06T17:16:08Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java", "diffHunk": "@@ -227,18 +229,17 @@ public void onItem(RecordItem recordItem) throws ImporterException {\n         log.debug(\"Storing transaction: {}\", tx);\n     }\n \n-    private Transaction buildTransaction(long consensusTimestamp, RecordItem recordItem) {\n+    private Transaction buildTransaction(long consensusTimestamp, TransactionBody body, TransactionRecord txRecord,\n+                                         EntityId entityId, int transactionType, byte[] transactionBytes) {\n         Transaction tx = new Transaction();\n-        TransactionBody body = recordItem.getTransactionBody();\n-        TransactionRecord txRecord = recordItem.getRecord();\n         tx.setChargedTxFee(txRecord.getTransactionFee());\n         tx.setConsensusNs(consensusTimestamp);\n         tx.setMemo(body.getMemoBytes().toByteArray());\n         tx.setMaxFee(body.getTransactionFee());\n         tx.setResult(txRecord.getReceipt().getStatusValue());\n-        tx.setType(recordItem.getTransactionType());\n-        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ?\n-                recordItem.getTransactionBytes() : null);\n+        tx.setEntityId(entityId);", "originalCommit": "2f8110315b9778263692f479199d0829e6d69476", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAyNjIxMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519026210", "bodyText": "Realized this after, might explain some of the issues with the tests.\nWith the update of buildTransaction()  to take RecordItem I can keep the logic in and add the success check for entity creation", "author": "Nana-EC", "createdAt": "2020-11-06T21:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAzNDYxMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519034613", "bodyText": "Actually I'm planning on splitting buildTransaction() out to buildTransaction() and insertTransaction().\nIt conforms with the other transaction specific methods as it will be responsible fo rebuilding the object based on recordItem details and calling the entityListener.onX() method", "author": "Nana-EC", "createdAt": "2020-11-06T22:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4Njc2OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519086768", "bodyText": "Will move this to a separate PR with OnItem refactoring improvements and revert a few of these improvements as they're out of scope", "author": "Nana-EC", "createdAt": "2020-11-07T03:00:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg5MTAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\nindex 090c44544..33805655b 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListener.java\n\n@@ -229,17 +228,18 @@ public class EntityRecordItemListener implements RecordItemListener {\n         log.debug(\"Storing transaction: {}\", tx);\n     }\n \n-    private Transaction buildTransaction(long consensusTimestamp, TransactionBody body, TransactionRecord txRecord,\n-                                         EntityId entityId, int transactionType, byte[] transactionBytes) {\n+    private Transaction buildTransaction(long consensusTimestamp, RecordItem recordItem) {\n         Transaction tx = new Transaction();\n+        TransactionBody body = recordItem.getTransactionBody();\n+        TransactionRecord txRecord = recordItem.getRecord();\n         tx.setChargedTxFee(txRecord.getTransactionFee());\n         tx.setConsensusNs(consensusTimestamp);\n         tx.setMemo(body.getMemoBytes().toByteArray());\n         tx.setMaxFee(body.getTransactionFee());\n         tx.setResult(txRecord.getReceipt().getStatusValue());\n-        tx.setEntityId(entityId);\n-        tx.setType(transactionType);\n-        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ? transactionBytes : null);\n+        tx.setType(recordItem.getTransactionType());\n+        tx.setTransactionBytes(entityProperties.getPersist().isTransactionBytes() ?\n+                recordItem.getTransactionBytes() : null);\n         tx.setTransactionHash(txRecord.getTransactionHash().toByteArray());\n         Long validDurationSeconds = body.hasTransactionValidDuration() ?\n                 body.getTransactionValidDuration().getSeconds() : null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzMzc5Nw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r518933797", "bodyText": "Curious: Why did this previously not include the file entity and be a count of 4?", "author": "steven-sheehy", "createdAt": "2020-11-06T18:36:57Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerContractTest.java", "diffHunk": "@@ -100,7 +101,7 @@ void contractCreateFailedWithResult() throws Exception {\n \n         assertAll(\n                 () -> assertEquals(1, transactionRepository.count()),\n-                () -> assertEquals(3, entityRepository.count()),\n+                () -> assertEquals(3, entityRepository.count()), // payer, node, treasury", "originalCommit": "2f8110315b9778263692f479199d0829e6d69476", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NjU2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519086569", "bodyText": "This seems to be a bug and missed coverage on our end.\nWe don't have logic to pick up the fileID as we presume it to be already created based on network logic.\nI'll open a ticket to address this missing coverage", "author": "Nana-EC", "createdAt": "2020-11-07T02:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzMzc5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NzgwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519087803", "bodyText": "Opened #1237", "author": "Nana-EC", "createdAt": "2020-11-07T03:12:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzMzc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "chunk": "diff --git a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerContractTest.java b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerContractTest.java\nindex abd5ca115..1eb4205c8 100644\n--- a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerContractTest.java\n+++ b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerContractTest.java\n\n@@ -101,7 +101,7 @@ public class EntityRecordItemListenerContractTest extends AbstractEntityRecordIt\n \n         assertAll(\n                 () -> assertEquals(1, transactionRepository.count()),\n-                () -> assertEquals(3, entityRepository.count()), // payer, node, treasury\n+                () -> assertEntities(EntityId.of(PAYER), EntityId.of(NODE), EntityId.of(TREASURY)),\n                 () -> assertEquals(1, contractResultRepository.count()),\n                 () -> assertEquals(3, cryptoTransferRepository.count()),\n                 () -> assertEquals(0, liveHashRepository.count()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDM4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r518934384", "bodyText": "Why wasn't this previously 4? We should probably look into changing these count asserts into a dedicated method that is more explicit and passes the expected EntityIds. Maybe add the method and put it in a few spots and we can later refactor the other places.\nvoid assertEntities(EntityId... entityIds) {...}", "author": "steven-sheehy", "createdAt": "2020-11-06T18:37:58Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java", "diffHunk": "@@ -136,7 +136,7 @@ void cryptoCreateFailedTransaction() throws Exception {\n \n         assertAll(\n                 () -> assertEquals(1, transactionRepository.count())\n-                , () -> assertEquals(3, entityRepository.count())\n+                , () -> assertEquals(3, entityRepository.count()) // payer, node, treasury", "originalCommit": "2f8110315b9778263692f479199d0829e6d69476", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NjY0NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519086645", "bodyText": "Good suggestion, I've implemented it and taken the time to updated these EntityRecordItemListener classes with it so tests are more clear", "author": "Nana-EC", "createdAt": "2020-11-07T02:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkzNDM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "chunk": "diff --git a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java\nindex d9b6e2375..be377e689 100644\n--- a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java\n+++ b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/EntityRecordItemListenerCryptoTest.java\n\n@@ -136,7 +139,7 @@ public class EntityRecordItemListenerCryptoTest extends AbstractEntityRecordItem\n \n         assertAll(\n                 () -> assertEquals(1, transactionRepository.count())\n-                , () -> assertEquals(3, entityRepository.count()) // payer, node, treasury\n+                , () -> assertEntities(EntityId.of(PAYER), EntityId.of(NODE), EntityId.of(TREASURY))\n                 , () -> assertEquals(3, cryptoTransferRepository.count())\n                 , () -> assertEquals(0, contractResultRepository.count())\n                 , () -> assertEquals(0, liveHashRepository.count())\n"}}, {"oid": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "message": "Move transaction entity create into success and improve tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-11-07T02:54:42Z", "type": "commit"}, {"oid": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "message": "Move transaction entity create into success and improve tests\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-11-07T02:54:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNzI2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r519937269", "bodyText": "nit: This is a bit inefficient to count and then find each individually. A better approach would be to just entityRepository.findAll() then compare the list size and compare it against the expected in memory. We can optimize later though.", "author": "steven-sheehy", "createdAt": "2020-11-09T16:19:07Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/entity/AbstractEntityRecordItemListenerTest.java", "diffHunk": "@@ -351,4 +359,17 @@ protected void assertTransactionInRepository(\n                     .returns(entityId, t -> t.getEntityId().getId());\n         }\n     }\n+\n+    protected void assertEntities(EntityId... entityIds) {\n+        if (entityIds == null) {\n+            return;\n+        }\n+\n+        assertEquals(entityIds.length, entityRepository.count());", "originalCommit": "e744295a3dea0d5254104da2ade45a3d0f2a2ec0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA3MDAzMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1228#discussion_r520070030", "bodyText": "Addressing in #1235", "author": "Nana-EC", "createdAt": "2020-11-09T19:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNzI2OQ=="}], "type": "inlineReview", "revised_code": null}]}