{"pr_number": 965, "pr_title": "Fix the issue gRPC notify thread blocked", "pr_createdAt": "2020-08-17T14:05:18Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/965", "timeline": [{"oid": "6402ac2d8d39718cd273f9dc47f37853c7ec88c1", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/6402ac2d8d39718cd273f9dc47f37853c7ec88c1", "message": "add backPressure buffer to flux created by NotifyingTopicListener with configurable max buffer size\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-15T18:24:11Z", "type": "commit"}, {"oid": "ff532ff2f8cf0a713fbfd49a9c1cbab2f4122b9e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ff532ff2f8cf0a713fbfd49a9c1cbab2f4122b9e", "message": "add backpressure buffer with error strategy to shared polling topic listener, update test cases\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-17T14:00:13Z", "type": "commit"}, {"oid": "691c549541b1b9cf757e55148bb6e54397ffc065", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/691c549541b1b9cf757e55148bb6e54397ffc065", "message": "update integration test to also verify normal subscribers are not affected by the slow subscriber\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-17T19:54:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0MTQxMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r471741410", "bodyText": "10s gives me issue in my env with shared polling topic listener slowSubscriberOverflowException test case, so aggressively make it further in the future", "author": "xin-hedera", "createdAt": "2020-08-17T19:56:55Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/AbstractTopicListenerTest.java", "diffHunk": "@@ -39,7 +39,7 @@\n \n public abstract class AbstractTopicListenerTest extends GrpcIntegrationTest {\n \n-    protected final Instant future = Instant.now().plusSeconds(10L);\n+    protected final Instant future = Instant.now().plusSeconds(30L);", "originalCommit": "691c549541b1b9cf757e55148bb6e54397ffc065", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52", "message": "chore, replace number with variable\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-18T00:15:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MTE1Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472351156", "bodyText": "I was thinking RESOURCE_EXHAUSTED applied more towards server side resources. What do you think about using DEADLINE_EXCEEDED?", "author": "steven-sheehy", "createdAt": "2020-08-18T17:08:56Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -70,6 +72,7 @@\n                 .onErrorMap(TimeoutException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n                 .onErrorMap(TopicNotFoundException.class, e -> error(e, Status.NOT_FOUND))\n                 .onErrorMap(TransientDataAccessException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n+                .onErrorMap(Exceptions::isOverflow, e -> error(e, Status.RESOURCE_EXHAUSTED, OVERFLOW_ERROR))", "originalCommit": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4NTMzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472585337", "bodyText": "DEADLINE_EXCEEDED makes more sense, I'll update as suggested.", "author": "xin-hedera", "createdAt": "2020-08-19T01:39:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MTE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "965178a91c80ec4cb7539b8845cae0dd7f446875", "chunk": "diff --git a/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java b/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\nindex b6ca364db..e34b9dd48 100644\n--- a/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\n+++ b/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\n\n@@ -72,7 +72,7 @@ public class ConsensusController extends ReactorConsensusServiceGrpc.ConsensusSe\n                 .onErrorMap(TimeoutException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n                 .onErrorMap(TopicNotFoundException.class, e -> error(e, Status.NOT_FOUND))\n                 .onErrorMap(TransientDataAccessException.class, e -> error(e, Status.RESOURCE_EXHAUSTED))\n-                .onErrorMap(Exceptions::isOverflow, e -> error(e, Status.RESOURCE_EXHAUSTED, OVERFLOW_ERROR))\n+                .onErrorMap(Exceptions::isOverflow, e -> error(e, Status.DEADLINE_EXCEEDED, OVERFLOW_ERROR))\n                 .onErrorMap(t -> unknownError(t));\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472361398", "bodyText": "Why was this changed? 0 is default for number primitives so it's better to test a non-zero value like 1001", "author": "steven-sheehy", "createdAt": "2020-08-18T17:25:26Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java", "diffHunk": "@@ -87,7 +87,7 @@ void json() {\n                 .runningHash(new byte[] {4, 5, 6})\n                 .runningHashVersion(2)\n                 .sequenceNumber(1L)\n-                .topicNum(1001)\n+                .topicNum(0)", "originalCommit": "e06624d81b8ed238d2e2c73e8c38af7a8f1d0b52", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4NzIyMQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472587221", "bodyText": "topic number in both the json string and TopicMessage object is changed to match the filter.\nThis test case and jsonError both didn't assert anything because there was no terminal operation followed by .verify(). Once terminal operation and .verify() is added, the test case will fail because the filter is for topic 0.0.0.\nAll other test cases use filter and topic messages for topic 0.0.0, so for consistency, I changed accordingly. So if we want to change it, should we change all other test cases as well?", "author": "xin-hedera", "createdAt": "2020-08-19T01:46:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY3MDkwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/965#discussion_r472670904", "bodyText": "I see, good catch. I think we can just change json and jsonError as they are explicitly testing serialization/deserialization and we want to test non-default values.", "author": "steven-sheehy", "createdAt": "2020-08-19T04:17:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM2MTM5OA=="}], "type": "inlineReview", "revised_code": {"commit": "449ce2b3c64bea13ceb9daf45fa18d3f8a4bd7fb", "chunk": "diff --git a/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java b/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java\nindex d3da59b97..342a0562a 100644\n--- a/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java\n+++ b/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/listener/NotifyingTopicListenerTest.java\n\n@@ -87,11 +87,12 @@ public class NotifyingTopicListenerTest extends AbstractSharedTopicListenerTest\n                 .runningHash(new byte[] {4, 5, 6})\n                 .runningHashVersion(2)\n                 .sequenceNumber(1L)\n-                .topicNum(0)\n+                .topicNum(1001)\n                 .validStartTimestamp(Instant.ofEpochSecond(1594401416)).build();\n \n         TopicMessageFilter filter = TopicMessageFilter.builder()\n                 .startTime(Instant.EPOCH)\n+                .topicNum(1001)\n                 .build();\n \n         topicListener.listen(filter)\n"}}, {"oid": "965178a91c80ec4cb7539b8845cae0dd7f446875", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/965178a91c80ec4cb7539b8845cae0dd7f446875", "message": "change gRPC status code for OverflowException to DEADLINE_EXCEEDED\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-19T01:52:38Z", "type": "commit"}, {"oid": "449ce2b3c64bea13ceb9daf45fa18d3f8a4bd7fb", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/449ce2b3c64bea13ceb9daf45fa18d3f8a4bd7fb", "message": "use non-default topic number in test case\n\nSigned-off-by: Xin Li <xin.li@swirlds.com>", "committedDate": "2020-08-19T14:16:22Z", "type": "commit"}]}