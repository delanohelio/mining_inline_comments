{"pr_number": 1131, "pr_title": "Updated Acceptance test to support base HTS scenarios", "pr_createdAt": "2020-10-15T02:16:55Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1131", "timeline": [{"oid": "440606d1939f0a671cd530e1be0d778dd8953aa4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/440606d1939f0a671cd530e1be0d778dd8953aa4", "message": "Updated Acceptance test to support base HTS scenarios\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-15T02:12:32Z", "type": "commit"}, {"oid": "d8c77347812dfb15305d68aa0251e9640998b27e", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d8c77347812dfb15305d68aa0251e9640998b27e", "message": "Added simple REST API verifications post token transctions\n\nSigned-off-by: Nana-EC <56320167+Nana-EC@users.noreply.github.com>", "committedDate": "2020-10-15T23:52:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxNTcxMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1131#discussion_r506515713", "bodyText": "Shouldn't construct a client for every request. Create it as a bean once and reuse it.", "author": "steven-sheehy", "createdAt": "2020-10-16T14:58:40Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -108,6 +118,50 @@ public SubscriptionResponse subscribeToTopicAndRetrieveMessages(MirrorConsensusT\n         return subscriptionResponse;\n     }\n \n+    public ClientResponse verifyAccountRestEndpoint(String accountId, int lastCount) {\n+        log.debug(\"Verify account {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/accounts/%s?order=desc&limit=%d\", accountId, lastCount);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyAccountBalanceRestEndpoint(String accountId) {\n+        log.debug(\"Verify balance {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/balances?account.id=%s\", accountId);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyTransactionRestEntity(String transactionId) {\n+        log.debug(\"Verify transaction {} is returned by Mirror Node\", transactionId);\n+        String endpoint = \"/api/v1/transactions/\" + transactionId;\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyRestEndpoint(String apiEndpoint) {\n+        TcpClient tcpClient = TcpClient", "originalCommit": "d8c77347812dfb15305d68aa0251e9640998b27e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxNjgwMw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1131#discussion_r506516803", "bodyText": "Shouldn't use string concatenation and formatting to construct URI as it doesn't properly escape variables. Use UriBuilder.", "author": "steven-sheehy", "createdAt": "2020-10-16T14:59:30Z", "path": "hedera-mirror-test/src/test/java/com/hedera/mirror/test/e2e/acceptance/client/MirrorNodeClient.java", "diffHunk": "@@ -108,6 +118,50 @@ public SubscriptionResponse subscribeToTopicAndRetrieveMessages(MirrorConsensusT\n         return subscriptionResponse;\n     }\n \n+    public ClientResponse verifyAccountRestEndpoint(String accountId, int lastCount) {\n+        log.debug(\"Verify account {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/accounts/%s?order=desc&limit=%d\", accountId, lastCount);\n+        return verifyRestEndpoint(endpoint);\n+    }\n+\n+    public ClientResponse verifyAccountBalanceRestEndpoint(String accountId) {\n+        log.debug(\"Verify balance {} is returned by Mirror Node\", accountId);\n+        String endpoint = String.format(\"/api/v1/balances?account.id=%s\", accountId);", "originalCommit": "d8c77347812dfb15305d68aa0251e9640998b27e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}