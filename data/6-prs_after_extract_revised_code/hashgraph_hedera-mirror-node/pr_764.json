{"pr_number": 764, "pr_title": "Add consensusTimestamp attribute to PubSub messages", "pr_createdAt": "2020-05-16T08:52:15Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/764", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3ODg3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/764#discussion_r426178875", "bodyText": "nit: You're using Assertj, but you're not really using it:\nassertThat(headers).describedAs(\"Headers contain consensus timestamp\")\n  .hasSize(3)\n  .containsEntry(\"consensusTimestamp\", CONSENSUS_TIMESTAMP);", "author": "steven-sheehy", "createdAt": "2020-05-16T18:30:40Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListenerTest.java", "diffHunk": "@@ -213,6 +214,9 @@ private void assertPubSubMessage(EntityId expectedEntity, Transaction expectedTr\n         } else {\n             assertThat(actual.getNonFeeTransfers()).isEqualTo(expectedNonFeeTransfers);\n         }\n+        MessageHeaders headers = argument.getValue().getHeaders();\n+        assertThat(headers.size()).isEqualTo(3); // +2 are default attributes 'id' and 'timestamp' (publish)\n+        assertThat(headers.get(\"consensusTimestamp\")).isEqualTo(CONSENSUS_TIMESTAMP);", "originalCommit": "a99026fda77e2b9d74d28a76c08657d9f526e78b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NzgwNg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/764#discussion_r426197806", "bodyText": "done.", "author": "apeksharma", "createdAt": "2020-05-16T22:47:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3ODg3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "32802754dba65ecab63c65afc6765c702fe95027", "chunk": "diff --git a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListenerTest.java b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListenerTest.java\nindex 4472de353..915458fcf 100644\n--- a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListenerTest.java\n+++ b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordItemListenerTest.java\n\n@@ -214,9 +213,9 @@ class PubSubRecordItemListenerTest {\n         } else {\n             assertThat(actual.getNonFeeTransfers()).isEqualTo(expectedNonFeeTransfers);\n         }\n-        MessageHeaders headers = argument.getValue().getHeaders();\n-        assertThat(headers.size()).isEqualTo(3); // +2 are default attributes 'id' and 'timestamp' (publish)\n-        assertThat(headers.get(\"consensusTimestamp\")).isEqualTo(CONSENSUS_TIMESTAMP);\n+        assertThat(argument.getValue().getHeaders()).describedAs(\"Headers contain consensus timestamp\")\n+                .hasSize(3) // +2 are default attributes 'id' and 'timestamp' (publish)\n+                .containsEntry(\"consensusTimestamp\", CONSENSUS_TIMESTAMP);\n     }\n \n     private static AccountAmount buildAccountAmount(long accountNum, long amount) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4MTQ2Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/764#discussion_r426181463", "bodyText": "This is quite convoluted. Would recommend converting them both to domain message:\nList<PubSubMessage> expected = null;\nList<com.google.pubsub.v1.PubsubMessage> actual = null;\n        assertThat(actual).describedAs(\"blah\")\n                .hasSize(expected.size())\n                .zipSatisfy(expected, (a, e) -> {\n                    assertThat(a.getAttributesMap()).containsEntry(\"consensusTimestamp\", e.getConsensusTimestamp().toString());\n                    assertThat(convert(a.getData())).isEqualTo(e);\n                });", "author": "steven-sheehy", "createdAt": "2020-05-16T19:03:47Z", "path": "hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordParserTest.java", "diffHunk": "@@ -73,6 +78,26 @@ public void testPubSubExporter() throws Exception {\n         // then\n         List<String> expectedMessages =\n                 Files.readAllLines(testResourcesPath.resolve(\"pubsub-messages.txt\"));\n-        assertThat(getAllMessages(NUM_TXNS)).isEqualTo(expectedMessages);\n+        List<PubsubMessage> pubsubMessages = getAllMessages(NUM_TXNS);\n+        List<String> messages = pubsubMessages.stream()", "originalCommit": "a99026fda77e2b9d74d28a76c08657d9f526e78b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5Nzg3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/764#discussion_r426197871", "bodyText": "done.\nwant to directly test json, added comment to code too.", "author": "apeksharma", "createdAt": "2020-05-16T22:47:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4MTQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "32802754dba65ecab63c65afc6765c702fe95027", "chunk": "diff --git a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordParserTest.java b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordParserTest.java\nindex 6a28f0219..91f0e02b5 100644\n--- a/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordParserTest.java\n+++ b/hedera-mirror-importer/src/test/java/com/hedera/mirror/importer/parser/record/pubsub/PubSubRecordParserTest.java\n\n@@ -78,26 +76,26 @@ public class PubSubRecordParserTest extends PubSubIntegrationTest {\n         // then\n         List<String> expectedMessages =\n                 Files.readAllLines(testResourcesPath.resolve(\"pubsub-messages.txt\"));\n-        List<PubsubMessage> pubsubMessages = getAllMessages(NUM_TXNS);\n-        List<String> messages = pubsubMessages.stream()\n-                .map(PubsubMessage::getData)\n-                .map(ByteString::toStringUtf8)\n-                .collect(Collectors.toList());\n-        assertThat(messages).isEqualTo(expectedMessages);\n+        List<PubsubMessage> actualMessages = getAllMessages(NUM_TXNS);\n \n-        List<String> actualConsensusTimestampAttributeValues = pubsubMessages.stream()\n-                .map(m -> m.getAttributesMap().get(\"consensusTimestamp\"))\n-                .collect(Collectors.toList());\n+        assertThat(actualMessages)\n+                .hasSize(expectedMessages.size())\n+                .zipSatisfy(expectedMessages, (actual, expected) -> {\n+\n+                    assertThat(actual.getAttributesMap().get(\"consensusTimestamp\"))\n+                            .isEqualTo(getConsensusTimestampFromMessage(expected));\n+                    // Users of PubSub will work with JSON. We don't convert these to Java POJOs since we want to\n+                    // drectly test json (without deserialization layer)\n+                    assertThat(actual.getData().toStringUtf8()).isEqualTo(expected);\n+                });\n+    }\n+\n+    private String getConsensusTimestampFromMessage(String message) {\n         ObjectMapper objectMapper = new ObjectMapper();\n-        List<String> expectedConsensusTimestampAttributeValues = expectedMessages.stream()\n-                .map(m -> {\n-                    try {\n-                      return objectMapper.readValue(m, Map.class).get(\"consensusTimestamp\").toString();\n-                    } catch (Exception e) {\n-                        throw new RuntimeException(e);\n-                    }\n-                })\n-                .collect(Collectors.toList());\n-        assertThat(actualConsensusTimestampAttributeValues).isEqualTo(expectedConsensusTimestampAttributeValues);\n+        try {\n+            return objectMapper.readValue(message, Map.class).get(\"consensusTimestamp\").toString();\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n     }\n }\n"}}, {"oid": "3426595860e98cd3a43c0318a8f0cdc007008981", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/3426595860e98cd3a43c0318a8f0cdc007008981", "message": "Add consensusTimestamp attribute to PubSub messages\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-16T22:24:48Z", "type": "commit"}, {"oid": "32802754dba65ecab63c65afc6765c702fe95027", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/32802754dba65ecab63c65afc6765c702fe95027", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-16T22:46:48Z", "type": "commit"}, {"oid": "32802754dba65ecab63c65afc6765c702fe95027", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/32802754dba65ecab63c65afc6765c702fe95027", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-16T22:46:48Z", "type": "forcePushed"}]}