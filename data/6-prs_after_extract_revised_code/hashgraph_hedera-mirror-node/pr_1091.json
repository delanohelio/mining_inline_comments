{"pr_number": 1091, "pr_title": "Add Redis support to Helm", "pr_createdAt": "2020-10-01T23:30:27Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091", "timeline": [{"oid": "d8dadbb6854bbbd3a8868e460635a384206bd9b4", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/d8dadbb6854bbbd3a8868e460635a384206bd9b4", "message": "Add redis support to the Helm charts\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-10-01T23:22:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU5NTM2Mw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r498595363", "bodyText": "nit: add a comment to highlight why this is necessary. I'm guessing cause the timestamps are always in the past.", "author": "Nana-EC", "createdAt": "2020-10-02T02:30:41Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java", "diffHunk": "@@ -196,13 +204,16 @@ private Instant getEffectiveStartDate(DownloaderProperties downloaderProperties)\n \n         if (startDate != null) {\n             return max(startDate.minus(adjustment), lastFileInstant);\n+        } else if (mirrorProperties.getNetwork() == MirrorProperties.HederaNetwork.DEMO) {\n+            return Instant.EPOCH;", "originalCommit": "d8dadbb6854bbbd3a8868e460635a384206bd9b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYwOTc5NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r498609795", "bodyText": "Done", "author": "steven-sheehy", "createdAt": "2020-10-02T04:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU5NTM2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "da4c75fcb0009d23a81bd51a22cbbf3ed83ec0dd", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\nindex 8d0c83882..8053b577e 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n\n@@ -198,22 +199,29 @@ public class MirrorDateRangePropertiesProcessor {\n      */\n     private Instant getEffectiveStartDate(DownloaderProperties downloaderProperties) {\n         Instant startDate = mirrorProperties.getStartDate();\n-        Instant startUpInstant = MirrorProperties.getStartUpInstant();\n+        Instant startUpInstant = STARTUP_TIME;\n         Instant lastFileInstant = getLastValidDownloadedFileInstant(downloaderProperties);\n         Duration adjustment = downloaderProperties.getStartDateAdjustment();\n \n         if (startDate != null) {\n             return max(startDate.minus(adjustment), lastFileInstant);\n         } else if (mirrorProperties.getNetwork() == MirrorProperties.HederaNetwork.DEMO) {\n-            return Instant.EPOCH;\n+            return Instant.EPOCH; // Demo network contains only data in the past, so don't default to now\n+        } else if (lastFileInstant == null) {\n+            return startUpInstant.minus(adjustment);\n         } else {\n-            return lastFileInstant.equals(Instant.EPOCH) ? startUpInstant.minus(adjustment) : lastFileInstant;\n+            return lastFileInstant;\n         }\n     }\n \n     private Instant getLastValidDownloadedFileInstant(DownloaderProperties downloaderProperties) {\n         String filename = applicationStatusRepository\n                 .findByStatusCode(downloaderProperties.getLastValidDownloadedFileKey());\n+\n+        if (StringUtils.isBlank(filename)) {\n+            return null;\n+        }\n+\n         return Utility.getInstantFromFilename(filename);\n     }\n \n"}}, {"oid": "da4c75fcb0009d23a81bd51a22cbbf3ed83ec0dd", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/da4c75fcb0009d23a81bd51a22cbbf3ed83ec0dd", "message": "Fix tests and review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-10-02T03:59:57Z", "type": "commit"}, {"oid": "106d1af9fa3486f104ea93c3863fd396b2b08cef", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/106d1af9fa3486f104ea93c3863fd396b2b08cef", "message": "Fix helm lint\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-10-02T14:50:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODc1MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499068751", "bodyText": "prefer not setting the filter if filterStartDate == null, so the filter will be null and later in record parser we hit the fast path instead of checking against the all pass filter.\nif (dateRangeFilter != null && !dateRangeFilter.filter(recordItem.getConsensusTimestamp())) {\n    return false;\n}", "author": "xin-hedera", "createdAt": "2020-10-02T22:03:49Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java", "diffHunk": "@@ -131,38 +139,38 @@ private void setDateRangeFilter(DownloaderProperties downloaderProperties) {\n \n         Instant filterStartDate = null;\n         if (startDate != null) {\n-            if (startDate.isAfter(lastFileInstant)) {\n+            if (lastFileInstant != null && startDate.isAfter(lastFileInstant)) {\n                 filterStartDate = startDate;\n             } else if (endDate.isBefore(Utility.MAX_INSTANT_LONG)) {\n                 filterStartDate = lastFileInstant;\n             }\n         } else {\n-            if (lastFileInstant.equals(Instant.EPOCH)) {\n-                filterStartDate = MirrorProperties.getStartUpInstant();;\n+            if (mirrorProperties.getNetwork() != MirrorProperties.HederaNetwork.DEMO && lastFileInstant == null) {\n+                filterStartDate = STARTUP_TIME;\n             } else if (endDate.isBefore(Utility.MAX_INSTANT_LONG)) {\n                 filterStartDate = lastFileInstant;\n             }\n         }\n \n-        if (filterStartDate != null) {\n-            filters.put(downloaderProperties.getStreamType(), new DateRangeFilter(filterStartDate, endDate));\n-        }\n+        filters.put(downloaderProperties.getStreamType(), new DateRangeFilter(filterStartDate, endDate));", "originalCommit": "106d1af9fa3486f104ea93c3863fd396b2b08cef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MDcxMg==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499070712", "bodyText": "I looked at that. In general it's better to avoid null conditionals and supply default objects. Can you clarify how this is a slow path? It's just a simple method with two primitive comparisons.\n        public boolean filter(long timestamp) {\n            return timestamp >= start && timestamp <= end;\n        }", "author": "steven-sheehy", "createdAt": "2020-10-02T22:10:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTY5OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499071699", "bodyText": "it's slower than dataRangeFilter != null. overall it may not have much impact so my comment is a suggestion", "author": "xin-hedera", "createdAt": "2020-10-02T22:14:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA4Mzk1MA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499083950", "bodyText": "I didn't change this randomly, I had to change it for another reason to make the tests pass. I needed to differentiate between epoch and unset start date so made getLastValidDownloadedFileInstant() return null for latter. Without this change the filter was returning current time despite application status showing epoch.\nAlso, I'm not sure in what scenarios before my change that filterStartDate could be null, but I don't think it is correct to not put a date range filter even when filterStartDate is null and endDate is populated. That would cause end date to not filter.\nCan you clear your review if you're okay with it?", "author": "steven-sheehy", "createdAt": "2020-10-02T23:07:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MjI3NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499092274", "bodyText": "A [null start date i.e. EPOCH, MAX_INSTANT_LONG] has the same effect as a null filter since they both allow all timestamp values.\nThere are cases that filterStartDate is null when endDate is MAX_INSTANT_LONG (either not set or set to MAX_INSTANT_LONG):\n\nstartDate is set to <= lastFileInstant, so effectively we don't need a filter\nstartDate is not set and lastFileInstant is after EPOCH (i.e., there are stream files downloaded), we don't need a filter\n\nThat said, using a filter which will let all items in the downloaded stream file pass have no difference than a null filter.\nbtw, there is a corner case for DEMO network, when startDate is not set and there are already some files downloaded, the filter will be [EPOCH, MAX_INSTANT_LONG or the configured endDate]. This won't cause missing of items but it's just looser than what it needs to be.\nAlso, in getEffectiveStartDate, the change for DEMO network seems problematic, I'll detail it in a separate comment.", "author": "xin-hedera", "createdAt": "2020-10-02T23:54:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA2ODc1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c28d7a45d7f76c57ee851e653578c804b95c9ca7", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\nindex 8053b577e..02fdb1d9a 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n\n@@ -136,19 +136,15 @@ public class MirrorDateRangePropertiesProcessor {\n         Instant startDate = mirrorProperties.getStartDate();\n         Instant endDate = mirrorProperties.getEndDate();\n         Instant lastFileInstant = getLastValidDownloadedFileInstant(downloaderProperties);\n+        Instant filterStartDate = lastFileInstant;\n \n-        Instant filterStartDate = null;\n         if (startDate != null) {\n             if (lastFileInstant != null && startDate.isAfter(lastFileInstant)) {\n                 filterStartDate = startDate;\n-            } else if (endDate.isBefore(Utility.MAX_INSTANT_LONG)) {\n-                filterStartDate = lastFileInstant;\n             }\n         } else {\n             if (mirrorProperties.getNetwork() != MirrorProperties.HederaNetwork.DEMO && lastFileInstant == null) {\n                 filterStartDate = STARTUP_TIME;\n-            } else if (endDate.isBefore(Utility.MAX_INSTANT_LONG)) {\n-                filterStartDate = lastFileInstant;\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzM2OQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499103369", "bodyText": "nit: since lastFileInstant can be null, startDate after adjustment may be before EPOCH and it becomes the effective start date, previous logic would cap effective startdate to >= EPOCH", "author": "xin-hedera", "createdAt": "2020-10-03T01:29:06Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java", "diffHunk": "@@ -181,28 +189,39 @@ private void updateApplicationStatus(DownloaderProperties downloaderProperties,\n     }\n \n     /**\n-     * Gets the effective startDate for downloader based on startDate in MirrorProperties, the startDateAdjustment\n-     * and last valid downloaded file.\n+     * Gets the effective startDate for downloader based on startDate in MirrorProperties, the startDateAdjustment and\n+     * last valid downloaded file.\n+     *\n      * @param downloaderProperties The downloader's properties\n      * @return The effective startDate: null if downloader is disabled; if startDate is set, the effective startDate is\n      * startDate if the database is empty or max(startDate, timestamp of last valid downloaded file); if startDate is\n      * not set, the effective startDate is now if the database is empty, or the timestamp of last valid downloaded file\n      */\n     private Instant getEffectiveStartDate(DownloaderProperties downloaderProperties) {\n         Instant startDate = mirrorProperties.getStartDate();\n-        Instant startUpInstant = MirrorProperties.getStartUpInstant();\n+        Instant startUpInstant = STARTUP_TIME;\n         Instant lastFileInstant = getLastValidDownloadedFileInstant(downloaderProperties);\n         Duration adjustment = downloaderProperties.getStartDateAdjustment();\n \n         if (startDate != null) {\n             return max(startDate.minus(adjustment), lastFileInstant);", "originalCommit": "106d1af9fa3486f104ea93c3863fd396b2b08cef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMzQ4NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499723484", "bodyText": "Fixed", "author": "steven-sheehy", "createdAt": "2020-10-05T16:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzM2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c28d7a45d7f76c57ee851e653578c804b95c9ca7", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\nindex 8053b577e..02fdb1d9a 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n\n@@ -204,13 +200,13 @@ public class MirrorDateRangePropertiesProcessor {\n         Duration adjustment = downloaderProperties.getStartDateAdjustment();\n \n         if (startDate != null) {\n-            return max(startDate.minus(adjustment), lastFileInstant);\n+            return max(startDate.minus(adjustment), lastFileInstant != null ? lastFileInstant : Instant.EPOCH);\n+        } else if (lastFileInstant != null) {\n+            return lastFileInstant;\n         } else if (mirrorProperties.getNetwork() == MirrorProperties.HederaNetwork.DEMO) {\n             return Instant.EPOCH; // Demo network contains only data in the past, so don't default to now\n-        } else if (lastFileInstant == null) {\n-            return startUpInstant.minus(adjustment);\n         } else {\n-            return lastFileInstant;\n+            return startUpInstant.minus(adjustment);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzcxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499103718", "bodyText": "this will always set application status file name to EPOCH even there is a previous run which has downloaded some files. In that case, when startDate is not set, we should honor the timestamped file name in application status repository", "author": "xin-hedera", "createdAt": "2020-10-03T01:33:09Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java", "diffHunk": "@@ -181,28 +189,39 @@ private void updateApplicationStatus(DownloaderProperties downloaderProperties,\n     }\n \n     /**\n-     * Gets the effective startDate for downloader based on startDate in MirrorProperties, the startDateAdjustment\n-     * and last valid downloaded file.\n+     * Gets the effective startDate for downloader based on startDate in MirrorProperties, the startDateAdjustment and\n+     * last valid downloaded file.\n+     *\n      * @param downloaderProperties The downloader's properties\n      * @return The effective startDate: null if downloader is disabled; if startDate is set, the effective startDate is\n      * startDate if the database is empty or max(startDate, timestamp of last valid downloaded file); if startDate is\n      * not set, the effective startDate is now if the database is empty, or the timestamp of last valid downloaded file\n      */\n     private Instant getEffectiveStartDate(DownloaderProperties downloaderProperties) {\n         Instant startDate = mirrorProperties.getStartDate();\n-        Instant startUpInstant = MirrorProperties.getStartUpInstant();\n+        Instant startUpInstant = STARTUP_TIME;\n         Instant lastFileInstant = getLastValidDownloadedFileInstant(downloaderProperties);\n         Duration adjustment = downloaderProperties.getStartDateAdjustment();\n \n         if (startDate != null) {\n             return max(startDate.minus(adjustment), lastFileInstant);\n+        } else if (mirrorProperties.getNetwork() == MirrorProperties.HederaNetwork.DEMO) {\n+            return Instant.EPOCH; // Demo network contains only data in the past, so don't default to now", "originalCommit": "106d1af9fa3486f104ea93c3863fd396b2b08cef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMzMyNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/1091#discussion_r499723324", "bodyText": "Thanks, should be fixed.", "author": "steven-sheehy", "createdAt": "2020-10-05T16:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMzcxOA=="}], "type": "inlineReview", "revised_code": {"commit": "c28d7a45d7f76c57ee851e653578c804b95c9ca7", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\nindex 8053b577e..02fdb1d9a 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/config/MirrorDateRangePropertiesProcessor.java\n\n@@ -204,13 +200,13 @@ public class MirrorDateRangePropertiesProcessor {\n         Duration adjustment = downloaderProperties.getStartDateAdjustment();\n \n         if (startDate != null) {\n-            return max(startDate.minus(adjustment), lastFileInstant);\n+            return max(startDate.minus(adjustment), lastFileInstant != null ? lastFileInstant : Instant.EPOCH);\n+        } else if (lastFileInstant != null) {\n+            return lastFileInstant;\n         } else if (mirrorProperties.getNetwork() == MirrorProperties.HederaNetwork.DEMO) {\n             return Instant.EPOCH; // Demo network contains only data in the past, so don't default to now\n-        } else if (lastFileInstant == null) {\n-            return startUpInstant.minus(adjustment);\n         } else {\n-            return lastFileInstant;\n+            return startUpInstant.minus(adjustment);\n         }\n     }\n \n"}}, {"oid": "c28d7a45d7f76c57ee851e653578c804b95c9ca7", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/c28d7a45d7f76c57ee851e653578c804b95c9ca7", "message": "Address review feedback\n\nSigned-off-by: Steven Sheehy <steven.sheehy@hedera.com>", "committedDate": "2020-10-05T16:25:42Z", "type": "commit"}]}