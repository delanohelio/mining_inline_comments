{"pr_number": 600, "pr_title": "Remove fk_rec_file_id from t_transactions", "pr_createdAt": "2020-03-13T18:48:06Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/600", "timeline": [{"oid": "1eb775c07a261734ec3f56841cfb4c5818bce3ad", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/1eb775c07a261734ec3f56841cfb4c5818bce3ad", "message": "Remove file_id from t_record_files\n\n- fk_rec_file_id in t_transactions was deprecated and its value is always 0. Removing the column.\n- No need of 2-part insert using f_file_create/complete.\n  Just checking for presense on file start and inserting row on file complete is sufficient.\n- Earlier, fk_rec_file_id was foreign key, so many tests for transactions needed to added\n  a row to t_record_files. That foreign key was dropped recently, so update tests to remove chaff.\n- Changes in REST code are limited to tests\n\nBRD uses t_record_files table to simulate blocks internally. So we can't just remove it.\nWe have two possible options going forward:\n1. Remove t_record_files tables. We have no regular need of finding which file a txn belongs to.\nIf needed for debugging, one can use txn's epoch datetime and do prefix ls on S3.\nWill need to understand how BRD uses t_record_files and if it is just as easy to simulate blocks\nusing t_transactions.\n2. If we keep the table around, to support lookup of all txns associated with a file, we can add\ntwo columns filled by consensus timestamps of first and last transaction in the file.\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:02:38Z", "type": "commit"}, {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/af2728b6eaeea7454430298d73e2876693e0a68b", "message": "fix rest tests\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:06:29Z", "type": "commit"}, {"oid": "af2728b6eaeea7454430298d73e2876693e0a68b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/af2728b6eaeea7454430298d73e2876693e0a68b", "message": "fix rest tests\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:06:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392418004", "bodyText": "We shouldn't remove the id, it is useful for replication and may be useful to third parties. Plus it's good practice to have an ID on a table unless you have a natural ID.", "author": "steven-sheehy", "createdAt": "2020-03-13T19:05:12Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java", "diffHunk": "@@ -39,9 +36,6 @@\n public class RecordFile {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;", "originalCommit": "389a70dba7db41f64590b7248b38d75db17de4ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyNzYzNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392427637", "bodyText": "ahh, i had to do git reset and re-commit to revert some spurious editor changes, forgot to add the migration file back. Added now. Thanks.", "author": "apeksharma", "createdAt": "2020-03-13T19:27:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzMzM4OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392433388", "bodyText": "I think you responded to the wrong comment. This is not added back.", "author": "steven-sheehy", "createdAt": "2020-03-13T19:42:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzOTAwMA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392439000", "bodyText": "i believe this column is inconsequential for logical replication. Unique ID are useful for LR when the table might otherwise have duplicate rows.\nIsn't name field natural id?", "author": "apeksharma", "createdAt": "2020-03-13T19:56:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ0MjczNw==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392442737", "bodyText": "a) IDs are absolutely crucial for PostgreSQL replication. See #525\nb) Name is not currently a natural ID. It is a unique index but it is not made the primary key of the table\nc) IDs are good practice in general unless the table is so large adding an ID would be costly. Record files is not large.\nd) BRD or others might be using it", "author": "steven-sheehy", "createdAt": "2020-03-13T20:06:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3OTU3MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392479571", "bodyText": "#525 : i have never been sure about the legitimacy of that issue, never commented though since it was not picked up in sprints. Either way, without getting into details of that issue, what I understand is that you really care about having a primary key.\nWhat do you think about making name as primary key? That'd address a,b,c points above. For (d), i had confirmed before deleting with BRD that they didn't need it. Others can also use name as primary key. What do you think?", "author": "apeksharma", "createdAt": "2020-03-13T21:11:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ5MjE4MQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392492181", "bodyText": "I want id put back, not sure how I can be any clearer. Having an auto generated ID on a table helps replication and it makes it more efficient with Hibernate not having to do extra queries to see if it exists before inserting. Natural IDs cannot be used for that.", "author": "steven-sheehy", "createdAt": "2020-03-13T21:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "b169bf25e39c33e4c7be6541bc0448b188796247", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java\nindex 00702a948..22ae221d1 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/RecordFile.java\n\n@@ -36,6 +34,9 @@ import lombok.NoArgsConstructor;\n public class RecordFile {\n \n     @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n     private String name;\n \n     private Long loadStart;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQxODM5Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392418396", "bodyText": "I don't see a database migration to remove this column.", "author": "steven-sheehy", "createdAt": "2020-03-13T19:06:10Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/domain/Transaction.java", "diffHunk": "@@ -64,11 +64,6 @@\n     @ManyToOne(cascade = CascadeType.PERSIST)\n     private Entities entity;\n \n-    // Deprecated, value set to 0 until removed.\n-    @Column(name = \"fk_rec_file_id\")\n-    @Deprecated(forRemoval = true, since = \"v0.7.0\")\n-    private Long recordFileId;", "originalCommit": "389a70dba7db41f64590b7248b38d75db17de4ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392423718", "bodyText": "I would prefer this be void and an exception be thrown if for any reason the processing should not continue.", "author": "steven-sheehy", "createdAt": "2020-03-13T19:18:36Z", "path": "hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java", "diffHunk": "@@ -1,20 +1,18 @@\n package com.hedera.mirror.importer.parser;\n \n-import java.util.Optional;\n-\n import com.hedera.mirror.importer.exception.ImporterException;\n import com.hedera.mirror.importer.parser.domain.StreamFileData;\n \n public interface StreamFileListener<T> {\n     /**\n      * Called when starting to process a new stream file.\n      *\n-     * @return non-empty <T> if the file processing should continue; empty to skip the file.\n+     * @return true if the file processing should continue; false to skip the file.\n      * @throws ImporterException\n      */\n-    Optional<T> onStart(StreamFileData streamFileData) throws ImporterException;\n+    boolean onStart(StreamFileData streamFileData) throws ImporterException;", "originalCommit": "af2728b6eaeea7454430298d73e2876693e0a68b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyODc3NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392428775", "bodyText": "boolean is okay.", "author": "apeksharma", "createdAt": "2020-03-13T19:30:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNDY1OA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/600#discussion_r392434658", "bodyText": "It's not okay. It leaks details from the listener class into the caller class.  A listener class is supposed to receive events only, not return data and change the flow of the parent class.", "author": "steven-sheehy", "createdAt": "2020-03-13T19:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQyMzcxOA=="}], "type": "inlineReview", "revised_code": {"commit": "b169bf25e39c33e4c7be6541bc0448b188796247", "chunk": "diff --git a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java\nindex 1d085806f..779e89060 100644\n--- a/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java\n+++ b/hedera-mirror-importer/src/main/java/com/hedera/mirror/importer/parser/StreamFileListener.java\n\n@@ -6,11 +6,8 @@ import com.hedera.mirror.importer.parser.domain.StreamFileData;\n public interface StreamFileListener<T> {\n     /**\n      * Called when starting to process a new stream file.\n-     *\n-     * @return true if the file processing should continue; false to skip the file.\n-     * @throws ImporterException\n      */\n-    boolean onStart(StreamFileData streamFileData) throws ImporterException;\n+    void onStart(StreamFileData streamFileData) throws ImporterException;\n \n     void onEnd(T fileInfo) throws ImporterException;\n \n"}}, {"oid": "72a8652dfe2604095d6c0fa833025cca31b1f56c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/72a8652dfe2604095d6c0fa833025cca31b1f56c", "message": "add the migration file\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:30:53Z", "type": "commit"}, {"oid": "72a8652dfe2604095d6c0fa833025cca31b1f56c", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/72a8652dfe2604095d6c0fa833025cca31b1f56c", "message": "add the migration file\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:30:53Z", "type": "forcePushed"}, {"oid": "21665a0b63f6aab86be0f194c4566047ea4ba860", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/21665a0b63f6aab86be0f194c4566047ea4ba860", "message": "fix rest tests\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-13T19:43:03Z", "type": "commit"}, {"oid": "b169bf25e39c33e4c7be6541bc0448b188796247", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/b169bf25e39c33e4c7be6541bc0448b188796247", "message": "address review comments\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-16T20:18:01Z", "type": "commit"}, {"oid": "491496cc844a832ea1491073d196f06002a1923b", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/491496cc844a832ea1491073d196f06002a1923b", "message": "minor changes\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-03-16T20:37:45Z", "type": "commit"}, {"oid": "ccf7e913acb23b8d7968b690c0dddd267e657a2d", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/ccf7e913acb23b8d7968b690c0dddd267e657a2d", "message": "Merge branch 'master' into parser_133", "committedDate": "2020-03-16T20:44:47Z", "type": "commit"}, {"oid": "a124ccdc0b6432214376a9185857b8a8519da604", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/a124ccdc0b6432214376a9185857b8a8519da604", "message": "Merge branch 'master' into parser_133", "committedDate": "2020-03-16T21:07:32Z", "type": "commit"}]}