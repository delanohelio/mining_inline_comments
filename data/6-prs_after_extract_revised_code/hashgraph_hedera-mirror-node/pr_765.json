{"pr_number": 765, "pr_title": "Add runningHashVersion to REST and GRPC APIs", "pr_createdAt": "2020-05-16T23:02:20Z", "pr_url": "https://github.com/hashgraph/hedera-mirror-node/pull/765", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4Njk3NA==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426686974", "bodyText": "Mapping a transport specific payload to a non-transport specific domain object is the responsibility of the controller layer. We may want to reuse this domain object for different transports. If you just need code reuse for the test, change the access from private to package-private.", "author": "steven-sheehy", "createdAt": "2020-05-18T14:55:25Z", "path": "hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java", "diffHunk": "@@ -101,15 +100,6 @@ private TopicMessageFilter toFilter(ConsensusTopicQuery query) {\n         return builder.build();\n     }\n \n-    private ConsensusTopicResponse toResponse(TopicMessage topicMessage) {", "originalCommit": "5ea59bf256e7d2177982c79b32e6d430b350532f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4MDU0Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r427080546", "bodyText": "that's good.", "author": "apeksharma", "createdAt": "2020-05-19T07:17:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY4Njk3NA=="}], "type": "inlineReview", "revised_code": {"commit": "12f64f6fca8e04f636e46f75823c8a4169db243f", "chunk": "diff --git a/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java b/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\nindex 0bce56695..3175e930f 100644\n--- a/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\n+++ b/hedera-mirror-grpc/src/main/java/com/hedera/mirror/grpc/controller/ConsensusController.java\n\n@@ -100,6 +101,17 @@ public class ConsensusController extends ReactorConsensusServiceGrpc.ConsensusSe\n         return builder.build();\n     }\n \n+    // package-private for use in tests\n+    static ConsensusTopicResponse toResponse(TopicMessage topicMessage) {\n+        return ConsensusTopicResponse.newBuilder()\n+                .setConsensusTimestamp(ProtoUtil.toTimestamp(topicMessage.getConsensusTimestampInstant()))\n+                .setMessage(ByteString.copyFrom(topicMessage.getMessage()))\n+                .setSequenceNumber(topicMessage.getSequenceNumber())\n+                .setRunningHash(ByteString.copyFrom(topicMessage.getRunningHash()))\n+                .setRunningHashVersion(topicMessage.getRunningHashVersion())\n+                .build();\n+    }\n+\n     private Throwable error(Throwable t, Status status) {\n         return error(t, status, t.getMessage());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5ODc2Ng==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r426698766", "bodyText": "Please avoid all argument constructors unless there's just a couple arguments. You should instead prefer builder or setters. Only reason this object has an all args constructor is for use with the builder (and only reason it's not builder only I think is for JPA). We should disable public use of that constructor with @AllArgsConstructor(access = AccessLevel.PRIVATE).\nReason is at larger argument lengths it becomes harder to determine if you're setting the correct value, especially if multiple have the same type. This is a source of subtle bugs. It also makes it much hard to merge other people's changes in and refactor. For example, when we both added fields to RecordItem (which uses all args constructor) in recent PRs it was difficult for me to merge.", "author": "steven-sheehy", "createdAt": "2020-05-18T15:11:27Z", "path": "hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java", "diffHunk": "@@ -81,12 +81,7 @@ public void insertTopicMessage(int newTopicsMessageCount, long topicNum, Instant\n             long sequenceNum = nextSequenceNum + i;\n             Instant temp = startTime.plus(sequenceNum, ChronoUnit.NANOS);\n             Long consensusTimestamp = converter.convert(temp);\n-            TopicMessage topicMessage = new TopicMessage();\n-            topicMessage.setConsensusTimestamp(consensusTimestamp);\n-            topicMessage.setSequenceNumber(sequenceNum);\n-            topicMessage.setMessage(BYTES);\n-            topicMessage.setRunningHash(BYTES);\n-            topicMessage.setRealmNum(0);\n+            TopicMessage topicMessage = new TopicMessage(consensusTimestamp, BYTES, 0, BYTES, sequenceNum, 0, 2);", "originalCommit": "5ea59bf256e7d2177982c79b32e6d430b350532f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4Mjg2NQ==", "url": "https://github.com/hashgraph/hedera-mirror-node/pull/765#discussion_r427082865", "bodyText": "changed to builder.\nAlthough i heavily use cmd + p in intellij for args lookup, i agree that beyond 4-5 args is not good.", "author": "apeksharma", "createdAt": "2020-05-19T07:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5ODc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "12f64f6fca8e04f636e46f75823c8a4169db243f", "chunk": "diff --git a/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java b/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java\nindex 11b05a6d2..89e734fda 100644\n--- a/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java\n+++ b/hedera-mirror-grpc/src/test/java/com/hedera/mirror/grpc/jmeter/handler/ConnectionHandler.java\n\n@@ -79,9 +79,14 @@ public class ConnectionHandler {\n \n         for (int i = 1; i <= newTopicsMessageCount; i++) {\n             long sequenceNum = nextSequenceNum + i;\n-            Instant temp = startTime.plus(sequenceNum, ChronoUnit.NANOS);\n-            Long consensusTimestamp = converter.convert(temp);\n-            TopicMessage topicMessage = new TopicMessage(consensusTimestamp, BYTES, 0, BYTES, sequenceNum, 0, 2);\n+            Instant consensusInstant = startTime.plus(sequenceNum, ChronoUnit.NANOS);\n+            TopicMessage topicMessage = TopicMessage.builder()\n+                    .consensusTimestamp(consensusInstant)\n+                    .sequenceNumber(sequenceNum)\n+                    .message(BYTES)\n+                    .runningHash(BYTES)\n+                    .realmNum(0)\n+                    .build();\n             parameterSources.add(new BeanPropertySqlParameterSource(topicMessage));\n \n             if (i % BATCH_SIZE == 0) {\n"}}, {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12f64f6fca8e04f636e46f75823c8a4169db243f", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-19T08:14:55Z", "type": "commit"}, {"oid": "12f64f6fca8e04f636e46f75823c8a4169db243f", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/12f64f6fca8e04f636e46f75823c8a4169db243f", "message": "address review\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-19T08:14:55Z", "type": "forcePushed"}, {"oid": "5feda68f78e10426bb1efe8d1ebebead25deb886", "url": "https://github.com/hashgraph/hedera-mirror-node/commit/5feda68f78e10426bb1efe8d1ebebead25deb886", "message": "fix minor bug\n\nSigned-off-by: Apekshit Sharma <apekshit.sharma@hedera.com>", "committedDate": "2020-05-19T17:29:36Z", "type": "commit"}]}