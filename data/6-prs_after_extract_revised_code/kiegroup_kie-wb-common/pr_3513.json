{"pr_number": 3513, "pr_title": "AF-2691: Open projects directly using the URL", "pr_createdAt": "2020-12-04T21:02:28Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3513", "timeline": [{"oid": "a9f9b7e2c52c15584878c21cafaf7ffca2cf41dd", "url": "https://github.com/kiegroup/kie-wb-common/commit/a9f9b7e2c52c15584878c21cafaf7ffca2cf41dd", "message": "AF-2691: Open projects directly using the URL", "committedDate": "2020-12-07T15:13:01Z", "type": "commit"}, {"oid": "bdf136e1a908dbe6b82e64f3cc7d1b3a863f2ee0", "url": "https://github.com/kiegroup/kie-wb-common/commit/bdf136e1a908dbe6b82e64f3cc7d1b3a863f2ee0", "message": "AF-2691: Open projects directly using the URL", "committedDate": "2020-12-07T18:59:20Z", "type": "commit"}, {"oid": "bdf136e1a908dbe6b82e64f3cc7d1b3a863f2ee0", "url": "https://github.com/kiegroup/kie-wb-common/commit/bdf136e1a908dbe6b82e64f3cc7d1b3a863f2ee0", "message": "AF-2691: Open projects directly using the URL", "committedDate": "2020-12-07T18:59:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE1ODg1NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3513#discussion_r538158854", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.projectPath = (((getWindowParameterMap().containsKey(\"path\")) ? getWindowParameterMap().get(\"path\").get(0) : \"\")).trim();\n          \n          \n            \n                    this.projectPath = (getWindowParameterMap().containsKey(\"path\") ? getWindowParameterMap().get(\"path\").get(0) : \"\").trim();\n          \n      \n    \n    \n  \n\nI think the parentheses are not necessary.", "author": "tomasdavidorg", "createdAt": "2020-12-08T09:06:12Z", "path": "kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/main/java/org/kie/workbench/common/screens/library/client/perspective/LibraryPerspective.java", "diffHunk": "@@ -66,18 +91,33 @@ public PerspectiveDefinition buildPerspective() {\n \n     @OnStartup\n     public void onStartup(final PlaceRequest placeRequest) {\n+        this.projectPath = (((getWindowParameterMap().containsKey(\"path\")) ? getWindowParameterMap().get(\"path\").get(0) : \"\")).trim();", "originalCommit": "bdf136e1a908dbe6b82e64f3cc7d1b3a863f2ee0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e85c4e3914eefb5e3e56b177895d8abfac61b517", "chunk": "diff --git a/kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/main/java/org/kie/workbench/common/screens/library/client/perspective/LibraryPerspective.java b/kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/main/java/org/kie/workbench/common/screens/library/client/perspective/LibraryPerspective.java\nindex 000f0d6256..1ae1e2a12e 100644\n--- a/kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/main/java/org/kie/workbench/common/screens/library/client/perspective/LibraryPerspective.java\n+++ b/kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/main/java/org/kie/workbench/common/screens/library/client/perspective/LibraryPerspective.java\n\n@@ -91,7 +91,7 @@ public class LibraryPerspective {\n \n     @OnStartup\n     public void onStartup(final PlaceRequest placeRequest) {\n-        this.projectPath = (((getWindowParameterMap().containsKey(\"path\")) ? getWindowParameterMap().get(\"path\").get(0) : \"\")).trim();\n+        this.projectPath = (getWindowParameterMap().containsKey(\"path\") ? getWindowParameterMap().get(\"path\").get(0) : \"\").trim();\n         this.refresh = Boolean.parseBoolean(placeRequest.getParameter(\"refresh\", \"true\"));\n         this.libraryPlaces.init(this);\n     }\n"}}, {"oid": "e85c4e3914eefb5e3e56b177895d8abfac61b517", "url": "https://github.com/kiegroup/kie-wb-common/commit/e85c4e3914eefb5e3e56b177895d8abfac61b517", "message": "AF-2691: Open projects directly using the URL\n\nCo-authored-by: Tom\u00e1\u0161 David <tdavid@redhat.com>", "committedDate": "2020-12-09T14:06:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTM1NQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3513#discussion_r539439355", "bodyText": "Is this change really necessary? If so, I'll have to update this part on our JDK11 PR.", "author": "caponetto", "createdAt": "2020-12-09T16:10:38Z", "path": "kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/test/java/org/kie/workbench/common/screens/library/client/screens/importrepository/ImportRepositoryPopUpPresenterTest.java", "diffHunk": "@@ -174,7 +175,7 @@ public void importEmptyRepositoryOnSuccessTest() {\n         verify(view).hideBusyIndicator();\n         verify(view).hide();\n         verify(notificationEvent).fire(any(NotificationEvent.class));\n-        verify(libraryPlaces).goToProject(any());\n+        verify(libraryPlaces).goToProject(any(WorkspaceProject.class));", "originalCommit": "e85c4e3914eefb5e3e56b177895d8abfac61b517", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ0ODAxNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3513#discussion_r539448014", "bodyText": "@caponetto Thanks for the review! It was necessary because now there are two goToProject methods that have one parameter.", "author": "paulovmr", "createdAt": "2020-12-09T16:20:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTM1NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQzOTUzMg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3513#discussion_r539439532", "bodyText": "Is this change really necessary? If so, I'll have to update this part on our JDK11 PR.", "author": "caponetto", "createdAt": "2020-12-09T16:10:51Z", "path": "kie-wb-common-screens/kie-wb-common-library/kie-wb-common-library-client/src/test/java/org/kie/workbench/common/screens/library/client/screens/importrepository/ImportRepositoryPopUpPresenterTest.java", "diffHunk": "@@ -195,7 +196,7 @@ public void importEmptyRepositoryOnFailureTest() {\n         verify(view).hideBusyIndicator();\n         verify(view, never()).hide();\n         verify(notificationEvent, never()).fire(any(NotificationEvent.class));\n-        verify(libraryPlaces, never()).goToProject(any());\n+        verify(libraryPlaces, never()).goToProject(any(WorkspaceProject.class));", "originalCommit": "e85c4e3914eefb5e3e56b177895d8abfac61b517", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}