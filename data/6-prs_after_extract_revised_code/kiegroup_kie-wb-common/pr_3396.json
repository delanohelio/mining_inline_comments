{"pr_number": 3396, "pr_title": "AF-2452 : Making LRUCache configurable to avoid large memory retention", "pr_createdAt": "2020-08-20T20:01:41Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3396", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MjEzNw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3396#discussion_r477462137", "bodyText": "Probably a test is needed for this. What if org.kie.builder.cache.size is empty string?", "author": "adrielparedes", "createdAt": "2020-08-26T17:18:12Z", "path": "kie-wb-common-services/kie-wb-common-services-backend/src/main/java/org/kie/workbench/common/services/backend/builder/core/LRUBuilderCache.java", "diffHunk": "@@ -49,6 +49,9 @@\n @ApplicationScoped\n public class LRUBuilderCache extends LRUCache<Module, Builder> {\n \n+    private static final String BUILDER_CACHE_SIZE = \"org.kie.builder.cache.size\";\n+    private static final int MAX_ENTRIES = Integer.parseInt(System.getProperty(BUILDER_CACHE_SIZE, \"20\"));", "originalCommit": "81bb7c239e33f108161b561a175df5ba6fabaf53", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDIzMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3396#discussion_r479270230", "bodyText": "Thanks for the review @adrielparedes ,  I have updated the tests to check an empty string and positive integer value for the property.", "author": "akumar074", "createdAt": "2020-08-28T13:07:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2MjEzNw=="}], "type": "inlineReview", "revised_code": {"commit": "cc120d893af777c58e83cf4e3b9f7d0934263ad8", "chunk": "diff --git a/kie-wb-common-services/kie-wb-common-services-backend/src/main/java/org/kie/workbench/common/services/backend/builder/core/LRUBuilderCache.java b/kie-wb-common-services/kie-wb-common-services-backend/src/main/java/org/kie/workbench/common/services/backend/builder/core/LRUBuilderCache.java\nindex 1655798333..a1e5586179 100644\n--- a/kie-wb-common-services/kie-wb-common-services-backend/src/main/java/org/kie/workbench/common/services/backend/builder/core/LRUBuilderCache.java\n+++ b/kie-wb-common-services/kie-wb-common-services-backend/src/main/java/org/kie/workbench/common/services/backend/builder/core/LRUBuilderCache.java\n\n@@ -48,9 +50,12 @@ import static java.util.stream.StreamSupport.stream;\n  */\n @ApplicationScoped\n public class LRUBuilderCache extends LRUCache<Module, Builder> {\n+    private static final Logger logger = LoggerFactory.getLogger(LRUBuilderCache.class);\n \n-    private static final String BUILDER_CACHE_SIZE = \"org.kie.builder.cache.size\";\n-    private static final int MAX_ENTRIES = Integer.parseInt(System.getProperty(BUILDER_CACHE_SIZE, \"20\"));\n+    protected static final String BUILDER_CACHE_SIZE = \"org.kie.builder.cache.size\";\n+    protected static final String DEFAULT_BUILDER_CACHE_SIZE = \"20\";\n+    protected static final int MAX_ENTRIES = Integer.parseInt(validateCacheSize(System.getProperty(BUILDER_CACHE_SIZE,\n+                                                                                                 DEFAULT_BUILDER_CACHE_SIZE)));\n \n     private final List<BuildValidationHelper> buildValidationHelpers = new ArrayList<>();\n     private final List<Predicate<String>> classFilters = new ArrayList<>();\n"}}, {"oid": "cc120d893af777c58e83cf4e3b9f7d0934263ad8", "url": "https://github.com/kiegroup/kie-wb-common/commit/cc120d893af777c58e83cf4e3b9f7d0934263ad8", "message": "AF-2452 : Making LRUCache configurable to avoid large memory retention\n\n * Introducing new property 'org.kie.builder.cache.size' to configure LRUBuilderCache size", "committedDate": "2020-08-28T13:03:41Z", "type": "commit"}, {"oid": "cc120d893af777c58e83cf4e3b9f7d0934263ad8", "url": "https://github.com/kiegroup/kie-wb-common/commit/cc120d893af777c58e83cf4e3b9f7d0934263ad8", "message": "AF-2452 : Making LRUCache configurable to avoid large memory retention\n\n * Introducing new property 'org.kie.builder.cache.size' to configure LRUBuilderCache size", "committedDate": "2020-08-28T13:03:41Z", "type": "forcePushed"}]}