{"pr_number": 3361, "pr_title": "KOGITO-543: DMN - Read Only mode", "pr_createdAt": "2020-07-20T21:58:57Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3361", "timeline": [{"oid": "1726388592031e58248e20b9e7d9515a1a53688a", "url": "https://github.com/kiegroup/kie-wb-common/commit/1726388592031e58248e20b9e7d9515a1a53688a", "message": "KOGITO-543: DMN - Read Only mode", "committedDate": "2020-07-22T15:31:06Z", "type": "forcePushed"}, {"oid": "f61548de8c7f9ae42dd7278c39fca815c61f797f", "url": "https://github.com/kiegroup/kie-wb-common/commit/f61548de8c7f9ae42dd7278c39fca815c61f797f", "message": "Changed default behavior.", "committedDate": "2020-08-03T16:42:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5ODczNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465498735", "bodyText": "Couldn't we implement temporarily as return contextProvider != null && contextProvider.getChannel() == GITHUB; ?", "author": "jomarko", "createdAt": "2020-08-05T06:20:54Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import org.appformer.client.context.EditorContextProvider;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.stunner.core.client.ReadOnlyProvider;\n+\n+import static org.appformer.client.context.Channel.GITHUB;\n+\n+@Alternative\n+@ApplicationScoped\n+@DMNEditor\n+public class ReadOnlyProviderImpl implements ReadOnlyProvider {\n+\n+    private final EditorContextProvider contextProvider;\n+\n+    @Inject\n+    public ReadOnlyProviderImpl(final EditorContextProvider contextProvider) {\n+        this.contextProvider = contextProvider;\n+    }\n+\n+    @Override\n+    public boolean isReadOnlyDiagram() {\n+        return false;", "originalCommit": "f61548de8c7f9ae42dd7278c39fca815c61f797f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwOTI1OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r466409259", "bodyText": "No, because it would make the editor always be in read only mode in Chrome and we been warned from the guys from Kogito team that this is not the expected behavior.", "author": "danielzhe", "createdAt": "2020-08-06T13:24:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5ODczNQ=="}], "type": "inlineReview", "revised_code": {"commit": "54455f3b0fe7847c1f27f7fabb13e0af4307c484", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\nindex cee64e3adc..62b72dfc90 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\n\n@@ -40,6 +40,6 @@ public class ReadOnlyProviderImpl implements ReadOnlyProvider {\n \n     @Override\n     public boolean isReadOnlyDiagram() {\n-        return false;\n+        return contextProvider.getChannel().equals(GITHUB);\n     }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5OTM2MQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465499361", "bodyText": "If my comment about isReadOnlyDiagram impl will be not applied, this needs to be removed.", "author": "jomarko", "createdAt": "2020-08-05T06:22:41Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.Alternative;\n+import javax.inject.Inject;\n+\n+import org.appformer.client.context.EditorContextProvider;\n+import org.kie.workbench.common.dmn.api.qualifiers.DMNEditor;\n+import org.kie.workbench.common.stunner.core.client.ReadOnlyProvider;\n+\n+import static org.appformer.client.context.Channel.GITHUB;", "originalCommit": "f61548de8c7f9ae42dd7278c39fca815c61f797f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54455f3b0fe7847c1f27f7fabb13e0af4307c484", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\nindex cee64e3adc..62b72dfc90 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImpl.java\n\n@@ -40,6 +40,6 @@ public class ReadOnlyProviderImpl implements ReadOnlyProvider {\n \n     @Override\n     public boolean isReadOnlyDiagram() {\n-        return false;\n+        return contextProvider.getChannel().equals(GITHUB);\n     }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMzQ3Mw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465503473", "bodyText": "As is single item list, we could use return Collections.singletonList(commonActionsToolboxFactories.get()); as we are just reading created list.", "author": "jomarko", "createdAt": "2020-08-05T06:34:00Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java", "diffHunk": "@@ -35,18 +36,25 @@\n \n     private final ManagedInstance<ActionsToolboxFactory> flowActionsToolboxFactories;\n     private final ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories;\n+    private final ReadOnlyProvider readonlyProvider;\n \n     @Inject\n     public DMNToolboxControl(final @Any @DMNFlowActionsToolbox ManagedInstance<ActionsToolboxFactory> flowActionsToolboxFactories,\n-                             final @Any @DMNCommonActionsToolbox ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories) {\n+                             final @Any @DMNCommonActionsToolbox ManagedInstance<ActionsToolboxFactory> commonActionsToolboxFactories,\n+                             final @Any @DMNEditor ReadOnlyProvider readOnlyProvider) {\n         this.flowActionsToolboxFactories = flowActionsToolboxFactories;\n         this.commonActionsToolboxFactories = commonActionsToolboxFactories;\n+        this.readonlyProvider = readOnlyProvider;\n     }\n \n     @Override\n     protected List<ActionsToolboxFactory> getFactories() {\n-        return Arrays.asList(flowActionsToolboxFactories.get(),\n-                             commonActionsToolboxFactories.get());\n+        if (readonlyProvider.isReadOnlyDiagram()) {\n+            return Arrays.asList(commonActionsToolboxFactories.get());", "originalCommit": "f61548de8c7f9ae42dd7278c39fca815c61f797f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6418b91b050e0641fe38740af900a462490baa0", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java\nindex cc348fdc4f..1e78f7fd12 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/canvas/controls/toolbox/DMNToolboxControl.java\n\n@@ -50,7 +51,7 @@ public class DMNToolboxControl extends AbstractToolboxControl {\n     @Override\n     protected List<ActionsToolboxFactory> getFactories() {\n         if (readonlyProvider.isReadOnlyDiagram()) {\n-            return Arrays.asList(commonActionsToolboxFactories.get());\n+            return Collections.singletonList(commonActionsToolboxFactories.get());\n         } else {\n             return Arrays.asList(flowActionsToolboxFactories.get(),\n                                  commonActionsToolboxFactories.get());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTkwNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r465661905", "bodyText": "unused import", "author": "jomarko", "createdAt": "2020-08-05T11:33:07Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.api;\n+\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.client.context.EditorContextProvider;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+\n+import static org.appformer.client.context.Channel.DEFAULT;\n+import static org.appformer.client.context.Channel.DESKTOP;\n+import static org.appformer.client.context.Channel.EMBEDDED;\n+import static org.appformer.client.context.Channel.GITHUB;\n+import static org.appformer.client.context.Channel.ONLINE;\n+import static org.appformer.client.context.Channel.VSCODE;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;", "originalCommit": "f61548de8c7f9ae42dd7278c39fca815c61f797f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "54455f3b0fe7847c1f27f7fabb13e0af4307c484", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java\nindex 626b3360a2..06fc3c7558 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/api/ReadOnlyProviderImplTest.java\n\n@@ -17,6 +17,7 @@\n package org.kie.workbench.common.dmn.client.api;\n \n import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.appformer.client.context.Channel;\n import org.appformer.client.context.EditorContextProvider;\n import org.junit.Before;\n import org.junit.Test;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgxNDQwMQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3361#discussion_r466814401", "bodyText": "please remove this comment", "author": "jomarko", "createdAt": "2020-08-07T04:30:28Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java", "diffHunk": "@@ -109,10 +114,11 @@ public void setup(final boolean isOnlyVisualChangeAllowed) {\n         when(sessionPresenter.getDisplayer()).thenReturn(sessionView);\n         when(sessionView.getView()).thenReturn(view);\n         when(editor.getView()).thenReturn(expressionEditorView);\n+        when(sessionPresenter.getPalette()).thenReturn(palette);\n \n         this.command = spy(getCommand(isOnlyVisualChangeAllowed));\n \n-        doNothing().when(command).hidePaletteWidget(any(Boolean.class));\n+        //doNothing().when(command).hidePaletteWidget(any(Boolean.class));", "originalCommit": "23549fda8aee6b7b192c1417b9efa0e9cb18075e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cbc94dfe528c1c51b613f73416cf666c81276ea8", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java\nindex 711f8b2794..0b6e598dac 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/test/java/org/kie/workbench/common/dmn/client/commands/general/BaseNavigationCommandTest.java\n\n@@ -118,7 +118,6 @@ public abstract class BaseNavigationCommandTest {\n \n         this.command = spy(getCommand(isOnlyVisualChangeAllowed));\n \n-        //doNothing().when(command).hidePaletteWidget(any(Boolean.class));\n         doReturn(editorContainerForErrai1090).when(command).wrapElementForErrai1090();\n     }\n \n"}}, {"oid": "54455f3b0fe7847c1f27f7fabb13e0af4307c484", "url": "https://github.com/kiegroup/kie-wb-common/commit/54455f3b0fe7847c1f27f7fabb13e0af4307c484", "message": "KOGITO-543: DMN - Read Only mode", "committedDate": "2020-08-24T14:30:39Z", "type": "commit"}, {"oid": "8907b1f5492232e37891ddca7a12b2fbb51990dd", "url": "https://github.com/kiegroup/kie-wb-common/commit/8907b1f5492232e37891ddca7a12b2fbb51990dd", "message": "Tests.", "committedDate": "2020-08-24T14:30:40Z", "type": "commit"}, {"oid": "a33ff7ad3e0f31874290b608b444f807099733c8", "url": "https://github.com/kiegroup/kie-wb-common/commit/a33ff7ad3e0f31874290b608b444f807099733c8", "message": "Fixed context menu.", "committedDate": "2020-08-24T14:30:40Z", "type": "commit"}, {"oid": "dbd8cfdad2ad2369dd0c6f4216d93af6a184caa6", "url": "https://github.com/kiegroup/kie-wb-common/commit/dbd8cfdad2ad2369dd0c6f4216d93af6a184caa6", "message": "Changed default behavior.", "committedDate": "2020-08-24T14:30:40Z", "type": "commit"}, {"oid": "f6418b91b050e0641fe38740af900a462490baa0", "url": "https://github.com/kiegroup/kie-wb-common/commit/f6418b91b050e0641fe38740af900a462490baa0", "message": "Code review.", "committedDate": "2020-08-24T14:30:41Z", "type": "commit"}, {"oid": "ff9fc17b845614b8f24cbf83dcdfc8cff9b8edcc", "url": "https://github.com/kiegroup/kie-wb-common/commit/ff9fc17b845614b8f24cbf83dcdfc8cff9b8edcc", "message": "Reduce ReadOnlyProvider propagation", "committedDate": "2020-08-24T14:30:41Z", "type": "commit"}, {"oid": "60668cb5b2bdf3807e6a01dcea4bfef878d26b22", "url": "https://github.com/kiegroup/kie-wb-common/commit/60668cb5b2bdf3807e6a01dcea4bfef878d26b22", "message": "Changed default behavior.", "committedDate": "2020-08-24T14:30:41Z", "type": "commit"}, {"oid": "3b5438ae696cb16027a97fb3bd732ac844bc3bb0", "url": "https://github.com/kiegroup/kie-wb-common/commit/3b5438ae696cb16027a97fb3bd732ac844bc3bb0", "message": "Fix test", "committedDate": "2020-08-24T14:30:42Z", "type": "commit"}, {"oid": "cbc94dfe528c1c51b613f73416cf666c81276ea8", "url": "https://github.com/kiegroup/kie-wb-common/commit/cbc94dfe528c1c51b613f73416cf666c81276ea8", "message": "Tests.", "committedDate": "2020-08-24T14:30:42Z", "type": "commit"}, {"oid": "fb895c7031a23fcd17fc5f01bdae948d3cebbb14", "url": "https://github.com/kiegroup/kie-wb-common/commit/fb895c7031a23fcd17fc5f01bdae948d3cebbb14", "message": "Using editor context.", "committedDate": "2020-08-24T17:00:33Z", "type": "commit"}, {"oid": "fb895c7031a23fcd17fc5f01bdae948d3cebbb14", "url": "https://github.com/kiegroup/kie-wb-common/commit/fb895c7031a23fcd17fc5f01bdae948d3cebbb14", "message": "Using editor context.", "committedDate": "2020-08-24T17:00:33Z", "type": "forcePushed"}, {"oid": "5fa45dfe4790b552f4742b072cfc9caadf81f507", "url": "https://github.com/kiegroup/kie-wb-common/commit/5fa45dfe4790b552f4742b072cfc9caadf81f507", "message": "fix", "committedDate": "2020-08-26T00:41:41Z", "type": "commit"}]}