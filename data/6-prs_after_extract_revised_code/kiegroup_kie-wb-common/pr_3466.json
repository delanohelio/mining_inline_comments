{"pr_number": 3466, "pr_title": "KOGITO-3379: [DMN Designer] Multiple DRDs support - Warn users when more than one node will be cascaded deleted", "pr_createdAt": "2020-10-26T18:59:01Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3466", "timeline": [{"oid": "75ed83ea901b1996469308e9157730afcb9f2cae", "url": "https://github.com/kiegroup/kie-wb-common/commit/75ed83ea901b1996469308e9157730afcb9f2cae", "message": "KOGITO-3379: [DMN Designer] Multiple DRDs support - Warn users when more than one node will be cascaded deleted", "committedDate": "2020-10-26T19:02:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0MzUyMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3466#discussion_r516043523", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        callback.onError((V) new ClientRuntimeError(\"Error deleing elements [message=\" +\n          \n          \n            \n                        callback.onError((V) new ClientRuntimeError(\"Error deleting elements [message=\" +", "author": "jstastny-cz", "createdAt": "2020-11-02T15:18:22Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-core/kie-wb-common-stunner-commons/kie-wb-common-stunner-client-common/src/main/java/org/kie/workbench/common/stunner/core/client/session/command/impl/DeleteSelectionSessionCommand.java", "diffHunk": "@@ -136,31 +144,55 @@ public boolean accepts(final ClientSession session) {\n             final SelectionControl<AbstractCanvasHandler, Element> selectionControl = getSession().getSelectionControl();\n             final Collection<String> selectedItems = selectionControl.getSelectedItems();\n \n-            clearSelectionEvent.fire(new CanvasClearSelectionEvent(canvasHandler));\n-            selectionControl.clearSelection();\n-\n             if (selectedItems != null && !selectedItems.isEmpty()) {\n-                // Execute the commands.\n-                final CommandResult<CanvasViolation> result =\n-                        sessionCommandManager.execute(canvasHandler,\n-                                                      canvasCommandFactory.delete(selectedItems.stream()\n-                                                                                          .map(uuid -> canvasHandler.getGraphIndex().get(uuid))\n-                                                                                          .filter(Objects::nonNull)\n-                                                                                          .collect(Collectors.toList())));\n-\n-                // Check the results.\n-                if (!CommandUtils.isError(result)) {\n-                    callback.onSuccess();\n+                final List<Element> elements = selectedItems.stream()\n+                        .map(uuid -> canvasHandler.getGraphIndex().get(uuid))\n+                        .filter(Objects::nonNull)\n+                        .collect(Collectors.toList());\n+                if (!Objects.isNull(deleteNodeConfirmation)\n+                        && deleteNodeConfirmation.requiresDeletionConfirmation(elements)) {\n+                    deleteNodeConfirmation.confirmDeletion(() -> executeDelete(elements,\n+                                                                               canvasHandler,\n+                                                                               selectionControl,\n+                                                                               callback),\n+                                                           () -> {\n+                                                               // do nothing if user cancels\n+                                                           },\n+                                                           elements);\n                 } else {\n-                    callback.onError((V) new ClientRuntimeError(\"Error deleing elements [message=\" +\n-                                                                        result.toString() + \"]\"));\n+                    executeDelete(elements,\n+                                  canvasHandler,\n+                                  selectionControl,\n+                                  callback);\n                 }\n             } else {\n                 callback.onError((V) new ClientRuntimeError(\"Cannot delete element, no element selected on canvas\"));\n             }\n         }\n     }\n \n+    private <V> void executeDelete(final List<Element> elements,\n+                                   final AbstractCanvasHandler canvasHandler,\n+                                   final SelectionControl<AbstractCanvasHandler, Element> selectionControl,\n+                                   final Callback<V> callback) {\n+\n+        clearSelectionEvent.fire(new CanvasClearSelectionEvent(canvasHandler));\n+        selectionControl.clearSelection();\n+\n+        // Execute the commands.\n+        final CommandResult<CanvasViolation> result =\n+                sessionCommandManager.execute(canvasHandler,\n+                                              canvasCommandFactory.delete(elements));\n+\n+        // Check the results.\n+        if (!CommandUtils.isError(result)) {\n+            callback.onSuccess();\n+        } else {\n+            callback.onError((V) new ClientRuntimeError(\"Error deleing elements [message=\" +", "originalCommit": "75ed83ea901b1996469308e9157730afcb9f2cae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "e3e407188069d66bdf8c4c63613afc738aef2618", "url": "https://github.com/kiegroup/kie-wb-common/commit/e3e407188069d66bdf8c4c63613afc738aef2618", "message": "code review", "committedDate": "2020-11-11T15:30:52Z", "type": "forcePushed"}, {"oid": "15a83b59adaa598dcffacb5d28007518ab825821", "url": "https://github.com/kiegroup/kie-wb-common/commit/15a83b59adaa598dcffacb5d28007518ab825821", "message": "Fix failing tests", "committedDate": "2020-11-23T16:46:30Z", "type": "forcePushed"}, {"oid": "d861c20cf968403b425d80da0c0b1c445b8b4ecd", "url": "https://github.com/kiegroup/kie-wb-common/commit/d861c20cf968403b425d80da0c0b1c445b8b4ecd", "message": "KOGITO-3379: [DMN Designer] Multiple DRDs support - Warn users when more than one node will be cascaded deleted", "committedDate": "2020-11-24T11:19:14Z", "type": "commit"}, {"oid": "fb9eb467c669787b89a91693992ea35db9c0b3ce", "url": "https://github.com/kiegroup/kie-wb-common/commit/fb9eb467c669787b89a91693992ea35db9c0b3ce", "message": "code review", "committedDate": "2020-11-24T11:19:15Z", "type": "commit"}, {"oid": "c61a34cd958f74f9bd59abdc7ef453b42055373e", "url": "https://github.com/kiegroup/kie-wb-common/commit/c61a34cd958f74f9bd59abdc7ef453b42055373e", "message": "Fix failing tests", "committedDate": "2020-11-24T11:19:16Z", "type": "commit"}, {"oid": "c61a34cd958f74f9bd59abdc7ef453b42055373e", "url": "https://github.com/kiegroup/kie-wb-common/commit/c61a34cd958f74f9bd59abdc7ef453b42055373e", "message": "Fix failing tests", "committedDate": "2020-11-24T11:19:16Z", "type": "forcePushed"}]}