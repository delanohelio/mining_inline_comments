{"pr_number": 3134, "pr_title": "RHDM-1150: [DMN Designer] Automatic Layout Feature doesn't work when diagram is opened", "pr_createdAt": "2020-01-31T13:10:54Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3134", "timeline": [{"oid": "38c937b7161f529f2137fa62955108c43fa52d75", "url": "https://github.com/kiegroup/kie-wb-common/commit/38c937b7161f529f2137fa62955108c43fa52d75", "message": "Fix invocation of layout when opening diagrams", "committedDate": "2020-01-31T13:07:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNDg0Mw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r374504843", "bodyText": "It is quite confusing, now the class contains three ways of accessing:\n\nAbstractDMNDiagramEditor.this\nAbstractDMNDiagramEditor.this.getEditor()\ngetEditor()\n\nCan't we unify? what is the difference in these three ways?", "author": "jomarko", "createdAt": "2020-02-04T07:12:43Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-webapp-kogito-common/src/main/java/org/kie/workbench/common/dmn/webapp/kogito/common/client/editor/AbstractDMNDiagramEditor.java", "diffHunk": "@@ -397,7 +397,7 @@ public void setContent(final String path, final String value) {\n \n                                       @Override\n                                       public void onSuccess(final Diagram diagram) {\n-                                          getEditor().open(diagram);\n+                                          AbstractDMNDiagramEditor.this.open(diagram);", "originalCommit": "38c937b7161f529f2137fa62955108c43fa52d75", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTI2Ng==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r374505266", "bodyText": "Now the class contains three ways of accessing:\n\neditor\nAbstractProjectDiagramEditor.this\nAbstractProjectDiagramEditor.this.editor\n\nCan't we unify? what is the difference please.", "author": "jomarko", "createdAt": "2020-02-04T07:14:12Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-project/kie-wb-common-stunner-project-client/src/main/java/org/kie/workbench/common/stunner/project/client/editor/AbstractProjectDiagramEditor.java", "diffHunk": "@@ -335,12 +335,12 @@ protected void loadContent() {\n                                          new ServiceCallback<ProjectDiagram>() {\n                                              @Override\n                                              public void onSuccess(final ProjectDiagram item) {\n-                                                 editor.open(item);", "originalCommit": "38c937b7161f529f2137fa62955108c43fa52d75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2NzYzNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r374767634", "bodyText": "Hi @jomarko both scenarios are the same, so I'll only try to explain once here.\nThere is the outer wrapper around the inner core editor.\nBoth the outer wrapper and inner core implement DiagramEditorCore. The wrapper is the \"public\" class that integrates with Business Central or kogito (depending on it's implementation) and the inner core is the editor itself. The inner core editor should delegate all operations to the outer wrapper - as it is the outer wrapper that can have methods overridden in subclasses (as was indeed the issue here.. the inner core was calling a method on itself rather than delegating to the outer wrapper where @danielzhe overrides a method).\nFor example:-\nclass OuterWrapper implements DiagramEditorCore {\n\n  DiagramEditorCore core = new DiagramEditorCore() {\n\n    @Override\n    public void anInterfaceMethod() {\n      //Delegate to wrapper\n      OuterWrapper.this.anInterfaceMethod();\n    }\n  };\n\n  @Override\n  public void anInterfaceMethod() {\n    //Do something\n  }\n}", "author": "manstis", "createdAt": "2020-02-04T16:09:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc1OTQzMw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r375759433", "bodyText": "Uf, not trivial to understand, Reading your comment again and again @manstis . I think your words are true for AbstractDMNDiagramEditor. There we changed to use wrapper instead of core. However if I compare old and current version of AbstractProjectDiagramEditor, it seems to me we changed just syntax, but the final implementation is the same.\nAlso not sure how to verify your sentence\n\nThe inner core editor should delegate all operations to the outer wrapper\n\nShould I go trough all ProjectDiagramEditorCore and DiagramEditorCore methods, and double check they invoke wrapper if if it exists?", "author": "jomarko", "createdAt": "2020-02-06T10:39:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgxMzM3Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r378813372", "bodyText": "@jomarko I did a quick review and all appears as expected; if however you'd like to conduct a similar review please do so. Did you want me to delay merging this PR until you've had chance to take a look?", "author": "manstis", "createdAt": "2020-02-13T11:50:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTI2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgxODIzMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3134#discussion_r378818230", "bodyText": "no, feel free to merge", "author": "jomarko", "createdAt": "2020-02-13T12:01:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUwNTI2Ng=="}], "type": "inlineReview", "revised_code": null}]}