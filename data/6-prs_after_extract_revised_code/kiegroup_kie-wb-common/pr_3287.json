{"pr_number": 3287, "pr_title": "DROOLS-5229: DMNValidate mojo fails XMLSchema validation with included models", "pr_createdAt": "2020-04-27T21:28:22Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3287", "timeline": [{"oid": "0317c350b02fdbf91c14ecf1e917268e083ddbd4", "url": "https://github.com/kiegroup/kie-wb-common/commit/0317c350b02fdbf91c14ecf1e917268e083ddbd4", "message": "DROOLS-5229: DMNValidate mojo fails XMLSchema validation with included models", "committedDate": "2020-04-27T21:14:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTAzNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3287#discussion_r417131035", "bodyText": "Isn't this extracting import prefix rather than namespace? Or it is the same thing?", "author": "jomarko", "createdAt": "2020-04-29T07:55:21Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNMarshallerStandalone.java", "diffHunk": "@@ -1130,6 +1095,59 @@ private static DMNShape stunnerToDDExt(final View<? extends DMNElement> v) {\n         return result;\n     }\n \n+    static QName getDmnElementRef(final Definitions definitions,\n+                                  final View<? extends DMNElement> v) {\n+\n+        final DMNElement dmnElement = v.getDefinition();\n+        final String dmnElementId = dmnElement.getId().getValue();\n+\n+        return getImportPrefix(definitions, dmnElement)\n+                .map(prefix -> new QName(prefix + \":\" + dmnElementId))\n+                .orElse(new QName(dmnElementId));\n+    }\n+\n+    private static Optional<String> getImportPrefix(final Definitions definitions,\n+                                                    final DMNElement dmnElement) {\n+\n+        if (!(dmnElement instanceof NamedElement)) {\n+            return Optional.empty();\n+        }\n+\n+        final NamedElement namedElement = (NamedElement) dmnElement;\n+        final String drgElementPrefix = extractNamespaceFromName(namedElement.getName());\n+\n+        return definitions\n+                .getImport()\n+                .stream()\n+                .filter(anImport -> {\n+                    final String importName = anImport.getName().getValue();\n+                    return Objects.equals(importName, drgElementPrefix);\n+                })\n+                .map(anImport -> {\n+                    final String importNamespace = anImport.getNamespace();\n+                    return getNsContextsByNamespace(definitions, importNamespace);\n+                })\n+                .findFirst();\n+    }\n+\n+    private static String getNsContextsByNamespace(final Definitions definitions,\n+                                                   final String namespace) {\n+        return definitions\n+                .getNsContext()\n+                .entrySet()\n+                .stream()\n+                .filter(entry -> Objects.equals(entry.getValue(), namespace))\n+                .map(Entry::getKey)\n+                .findFirst()\n+                .orElse(\"\");\n+    }\n+\n+    private static String extractNamespaceFromName(final Name name) {", "originalCommit": "0317c350b02fdbf91c14ecf1e917268e083ddbd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU0NDQwOQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3287#discussion_r417544409", "bodyText": "\"Fixed!\"", "author": "karreiro", "createdAt": "2020-04-29T19:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEzMTAzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e83c218a733a0019a72e61fe25fa9918086d7f92", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNMarshallerStandalone.java b/kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNMarshallerStandalone.java\nindex c73b6b3bee..f963efecb2 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNMarshallerStandalone.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-backend/src/main/java/org/kie/workbench/common/dmn/backend/DMNMarshallerStandalone.java\n\n@@ -1114,14 +1113,14 @@ public class DMNMarshallerStandalone implements DiagramMarshaller<Graph, Metadat\n         }\n \n         final NamedElement namedElement = (NamedElement) dmnElement;\n-        final String drgElementPrefix = extractNamespaceFromName(namedElement.getName());\n+        final Optional<String> name = Optional.ofNullable(namedElement.getName().getValue());\n \n         return definitions\n                 .getImport()\n                 .stream()\n                 .filter(anImport -> {\n                     final String importName = anImport.getName().getValue();\n-                    return Objects.equals(importName, drgElementPrefix);\n+                    return name.map(n -> n.startsWith(importName + \".\")).orElse(false);\n                 })\n                 .map(anImport -> {\n                     final String importNamespace = anImport.getNamespace();\n"}}, {"oid": "e83c218a733a0019a72e61fe25fa9918086d7f92", "url": "https://github.com/kiegroup/kie-wb-common/commit/e83c218a733a0019a72e61fe25fa9918086d7f92", "message": "Fix: when users set the import alias/prefix, the validation fails", "committedDate": "2020-04-29T18:51:28Z", "type": "commit"}, {"oid": "8d17201b3a7f1d63e871e3a21668a479c3a7b8cb", "url": "https://github.com/kiegroup/kie-wb-common/commit/8d17201b3a7f1d63e871e3a21668a479c3a7b8cb", "message": "Fix sonarcloud issue", "committedDate": "2020-05-11T10:02:29Z", "type": "commit"}, {"oid": "bf8bc76bb915fc747a6188efdc0b1c9c825688bd", "url": "https://github.com/kiegroup/kie-wb-common/commit/bf8bc76bb915fc747a6188efdc0b1c9c825688bd", "message": "Merge pull request #7 from jomarko/PR-DROOLS-5229\n\nFix sonarcloud issue", "committedDate": "2020-05-11T12:24:21Z", "type": "commit"}]}