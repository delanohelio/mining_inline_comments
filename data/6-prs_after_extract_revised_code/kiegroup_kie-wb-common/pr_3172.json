{"pr_number": 3172, "pr_title": "RHPAM-1344 - Process ID accepts invalid characters", "pr_createdAt": "2020-02-20T12:09:14Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3172", "timeline": [{"oid": "71c486c8e518c5339faa8e91738020727624278b", "url": "https://github.com/kiegroup/kie-wb-common/commit/71c486c8e518c5339faa8e91738020727624278b", "message": "RHPAM-1344 - Process ID accepts invalid characters", "committedDate": "2020-02-24T23:26:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMjAwNA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r384132004", "bodyText": "I believe we're encouraged to use Stunner's StringUtils.isEmpty(..).", "author": "manstis", "createdAt": "2020-02-25T21:18:54Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ProcessIdValueValidator.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.forms.validation.process;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+import static org.kie.workbench.common.stunner.bpmn.util.XmlUtils.isNcNameCharacter;\n+import static org.kie.workbench.common.stunner.bpmn.util.XmlUtils.isNcNameStartCharacter;\n+\n+public class ProcessIdValueValidator implements ConstraintValidator<ValidProcessIdValue, String> {\n+\n+    @Override\n+    public void initialize(ValidProcessIdValue constraintAnnotation) {\n+        //not used\n+    }\n+\n+    @Override\n+    public boolean isValid(String value, ConstraintValidatorContext context) {\n+        if (value == null || value.isEmpty()) {", "originalCommit": "71c486c8e518c5339faa8e91738020727624278b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2Mzg1NQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r384163855", "bodyText": "yeah it's client side exposed too...", "author": "romartin", "createdAt": "2020-02-25T22:25:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzMjAwNA=="}], "type": "inlineReview", "revised_code": {"commit": "7da82b3afabeff29901d9ec02c04356decfeb64b", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ProcessIdValueValidator.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ProcessIdValueValidator.java\nindex 6d9b21198d..c0c0208e3a 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ProcessIdValueValidator.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ProcessIdValueValidator.java\n\n@@ -19,6 +19,8 @@ package org.kie.workbench.common.stunner.bpmn.forms.validation.process;\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n \n+import org.kie.workbench.common.stunner.core.util.StringUtils;\n+\n import static org.kie.workbench.common.stunner.bpmn.util.XmlUtils.isNcNameCharacter;\n import static org.kie.workbench.common.stunner.bpmn.util.XmlUtils.isNcNameStartCharacter;\n \n"}}, {"oid": "7da82b3afabeff29901d9ec02c04356decfeb64b", "url": "https://github.com/kiegroup/kie-wb-common/commit/7da82b3afabeff29901d9ec02c04356decfeb64b", "message": "New processes names cleared", "committedDate": "2020-03-03T16:25:42Z", "type": "forcePushed"}, {"oid": "73476f05952061c592ae2886191aea6353acf6b6", "url": "https://github.com/kiegroup/kie-wb-common/commit/73476f05952061c592ae2886191aea6353acf6b6", "message": "Clean up, tests", "committedDate": "2020-03-23T20:36:08Z", "type": "forcePushed"}, {"oid": "1dd0571f1ca27cc4ba07d01d386234abe763e0a5", "url": "https://github.com/kiegroup/kie-wb-common/commit/1dd0571f1ca27cc4ba07d01d386234abe763e0a5", "message": "Rebase to master, addition coverage.", "committedDate": "2020-03-25T16:38:21Z", "type": "forcePushed"}, {"oid": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "url": "https://github.com/kiegroup/kie-wb-common/commit/d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "message": "Enable disabled test", "committedDate": "2020-03-27T09:14:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2Mjc3OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399562779", "bodyText": "I don't think this javadoc provides any useful info, I would just suggest to remove it, the mehtod's name is quite clear...", "author": "romartin", "createdAt": "2020-03-27T22:16:20Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.kogito.client.service;\n+\n+import static org.kie.workbench.common.stunner.core.util.StringUtils.isEmpty;\n+\n+public abstract class AbstractKogitoClientDiagramService implements KogitoClientDiagramService {\n+\n+    private static final char UNIX_SEPARATOR = '/';\n+    private static final char WINDOWS_SEPARATOR = '\\\\';\n+    public static final String DEFAULT_DIAGRAM_ID = \"default\";\n+\n+    /**", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1MDIzMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400050230", "bodyText": "Thanks, I added some details to documentation.", "author": "hasys", "createdAt": "2020-03-30T09:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2Mjc3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\nindex a0dcb02b85..e379d834af 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\n\n@@ -25,7 +25,10 @@ public abstract class AbstractKogitoClientDiagramService implements KogitoClient\n     public static final String DEFAULT_DIAGRAM_ID = \"default\";\n \n     /**\n-     * Extracts file name from path.\n+     * Making correct ID diagram from path:\n+     * 1. Extracts file name without extension from path\n+     * 2. Returns {@link AbstractKogitoClientDiagramService#generateDefaultId}\n+     * If name is empty (can be overridden in descendant)\n      * @param filePath path to the file\n      * @return file name\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NjY4OA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399566688", "bodyText": "By doing this you're converting a checked exception to an unchecked expection, which I don't think it's a good practice in general... so the result of this is that the process will be not able to be parsed, because the IllegalArgumentException instance will be catched at upper layers, which will cause the marshallers to stop processing, maybe we can think on this:\n\nDoing this way, the parsers will completely stop working, so the process will be not properly imported, so the end usre will end up on the xml editor being shown. In this case, also the exception will not display how to fix it, so it'll result on the user lost\nCan we maybe manage the UnsupportedEncodingException and add a (marshalling) validation message, but allow continue processing by applying some valid value instead? this way the process wil be imported, but a message will appear to the user, which will notice about that value being changed as is not valid.\n\nAnyway, I don't konw if in that case really makes sense, as it's just expecting the UTF-8 format in some fragment of the whole XML file, which should then be also UTF-8.... but well, tis' something you should keep in mind once trying to avoid catching excpetions by converting checked to uncheced ones, because that's not the way exceptions are expected to work.", "author": "romartin", "createdAt": "2020-03-27T22:29:14Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/processes/RootProcessConverter.java", "diffHunk": "@@ -96,4 +100,16 @@ private ProcessPropertyWriter convertProcessNode(Node<Definition<BPMNDiagram>, ?\n \n         return p;\n     }\n+\n+    private static String encode(String text) {\n+        if (isEmpty(text)) {\n+            return text;\n+        }\n+\n+        try {\n+            return URLEncoder.encode(text, \"UTF-8\");\n+        } catch (UnsupportedEncodingException e) {\n+            throw new IllegalArgumentException(text, e);", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5NDEyMQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400094121", "bodyText": "Hi @romartin, URLEncoder.encode second parameter is encoding. Handled exception is thrown only if the second parameter is set incorrectly. Since it is a literal and can be changed only in the code, I think it is OK to have it here since user has no options to break it.\nWe have a test which calling this method so if we will put incorrect encoding in the future we will see failing tests.\n@romartin is it OK to you to keep it as is? Maybe we can create a refactoring jira for handling different exceptions in marshallers (not just this one), but we will have new marshaller so not sure how much is it important for now. I guess Unit test which check that encoding is correct (otherwise it will fail due to exception) is enough for now. WDYT?", "author": "hasys", "createdAt": "2020-03-30T10:42:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NjY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "54d18f5c5439c85a19034f61fc54038ab5b34a1d", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/processes/RootProcessConverter.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/processes/RootProcessConverter.java\nindex 3b4bbd59c5..ee33208414 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/processes/RootProcessConverter.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/fromstunner/processes/RootProcessConverter.java\n\n@@ -100,16 +97,4 @@ public class RootProcessConverter {\n \n         return p;\n     }\n-\n-    private static String encode(String text) {\n-        if (isEmpty(text)) {\n-            return text;\n-        }\n-\n-        try {\n-            return URLEncoder.encode(text, \"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            throw new IllegalArgumentException(text, e);\n-        }\n-    }\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2Njc4MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399566780", "bodyText": "Same comment about expections as above", "author": "romartin", "createdAt": "2020-03-27T22:29:34Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/processes/RootProcessConverter.java", "diffHunk": "@@ -82,4 +87,15 @@ protected ProcessData createProcessData(String processVariables) {\n     protected AdvancedData createAdvancedData(String globalVariables) {\n         return new AdvancedData(new GlobalVariables(globalVariables));\n     }\n+\n+    private static String decode(String text) {\n+        if (isEmpty(text)) {\n+            return text;\n+        }\n+        try {\n+            return URLDecoder.decode(text, \"UTF-8\");", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5NDIyMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400094220", "bodyText": "Save above as well :)", "author": "hasys", "createdAt": "2020-03-30T10:43:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2Njc4MA=="}], "type": "inlineReview", "revised_code": {"commit": "8ee78b04569c6fb529353646a32471d81986b2ea", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/processes/RootProcessConverter.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/processes/RootProcessConverter.java\nindex eff6257852..74db7d07e0 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/processes/RootProcessConverter.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-backend/src/main/java/org/kie/workbench/common/stunner/bpmn/backend/converters/tostunner/processes/RootProcessConverter.java\n\n@@ -87,15 +84,4 @@ public class RootProcessConverter extends BaseRootProcessConverter<BPMNDiagramIm\n     protected AdvancedData createAdvancedData(String globalVariables) {\n         return new AdvancedData(new GlobalVariables(globalVariables));\n     }\n-\n-    private static String decode(String text) {\n-        if (isEmpty(text)) {\n-            return text;\n-        }\n-        try {\n-            return URLDecoder.decode(text, \"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            throw new IllegalArgumentException(text, e);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzE2Ng==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399567166", "bodyText": "parameters javadocs empyt, just then remove those..", "author": "romartin", "createdAt": "2020-03-27T22:31:02Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java", "diffHunk": "@@ -53,29 +56,61 @@ public static String getStringForList(List<? extends Object> objects) {\n     }\n \n     /**\n-     * URLEncode a string\n+     * Encode a url parameters see {@link URL#encodeQueryString(String)}\n      * @param s\n      * @return\n      */\n     public static String urlEncode(String s) {\n-        if (s == null || s.isEmpty()) {\n+        if (isEmpty(s)) {\n             return s;\n         }\n         return url.encodeQueryString(s);\n     }\n \n     /**\n-     * URLDecode a string\n+     * Decode a url parameters see {@link URL#decodeQueryString(String)}\n      * @param s\n      * @return\n      */\n     public static String urlDecode(String s) {\n-        if (s == null || s.isEmpty()) {\n+        if (isEmpty(s)) {\n             return s;\n         }\n         return url.decodeQueryString(s);\n     }\n \n+    /**\n+     * Equivalent of {@link java.net.URLDecoder#decode(String, String)} in UTF-8 decoding on server side\n+     * @param s", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5MDAyMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400090020", "bodyText": "Fixed, thanks", "author": "hasys", "createdAt": "2020-03-30T10:35:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzE2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\nindex 28f1247707..87ccb5b61b 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\n\n@@ -80,9 +80,9 @@ public class StringUtils {\n     }\n \n     /**\n-     * Equivalent of {@link java.net.URLDecoder#decode(String, String)} in UTF-8 decoding on server side\n-     * @param s\n-     * @return\n+     * Equivalent of {@link java.net.URLEncoder#encode(String, String)} in UTF-8 encoding on server side\n+     * @param s a string to encode on the client side\n+     * @return an encoded string\n      */\n     public static String encode(String s) {\n         if (isEmpty(s)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzIxNg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399567216", "bodyText": "parameters javadocs empyt, just then remove those..", "author": "romartin", "createdAt": "2020-03-27T22:31:15Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java", "diffHunk": "@@ -53,29 +56,61 @@ public static String getStringForList(List<? extends Object> objects) {\n     }\n \n     /**\n-     * URLEncode a string\n+     * Encode a url parameters see {@link URL#encodeQueryString(String)}\n      * @param s\n      * @return\n      */\n     public static String urlEncode(String s) {\n-        if (s == null || s.isEmpty()) {\n+        if (isEmpty(s)) {\n             return s;\n         }\n         return url.encodeQueryString(s);\n     }\n \n     /**\n-     * URLDecode a string\n+     * Decode a url parameters see {@link URL#decodeQueryString(String)}\n      * @param s\n      * @return\n      */\n     public static String urlDecode(String s) {\n-        if (s == null || s.isEmpty()) {\n+        if (isEmpty(s)) {\n             return s;\n         }\n         return url.decodeQueryString(s);\n     }\n \n+    /**\n+     * Equivalent of {@link java.net.URLDecoder#decode(String, String)} in UTF-8 decoding on server side\n+     * @param s\n+     * @return\n+     */\n+    public static String encode(String s) {\n+        if (isEmpty(s)) {\n+            return s;\n+        }\n+        return url.encode(s);\n+    }\n+\n+    /**\n+     * Equivalent of {@link java.net.URLEncoder#encode(String, String)} in UTF-8 encoding on server side\n+     * @param s", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5MDA5OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400090099", "bodyText": "Fixed, thanks", "author": "hasys", "createdAt": "2020-03-30T10:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzIxNg=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\nindex 28f1247707..87ccb5b61b 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/StringUtils.java\n\n@@ -80,9 +80,9 @@ public class StringUtils {\n     }\n \n     /**\n-     * Equivalent of {@link java.net.URLDecoder#decode(String, String)} in UTF-8 decoding on server side\n-     * @param s\n-     * @return\n+     * Equivalent of {@link java.net.URLEncoder#encode(String, String)} in UTF-8 encoding on server side\n+     * @param s a string to encode on the client side\n+     * @return an encoded string\n      */\n     public static String encode(String s) {\n         if (isEmpty(s)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzM4OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r399567389", "bodyText": "double *", "author": "romartin", "createdAt": "2020-03-27T22:31:47Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/URL.java", "diffHunk": "@@ -39,4 +39,22 @@ public String encodeQueryString(String s) {\n     public String decodeQueryString(String s) {\n         return com.google.gwt.http.client.URL.decodeQueryString(s);\n     }\n+\n+    /**\n+     * Proxy method for {@link com.google.gwt.http.client.URL#encode(String s)} ()}\n+     * @param s - string to encode\n+     * * @return encoded string value", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA4Mjg0MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400082840", "bodyText": "Fixed, thanks.", "author": "hasys", "createdAt": "2020-03-30T10:22:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NzM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/URL.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/URL.java\nindex aeeb4aa3bd..64d2a999b8 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/URL.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/util/URL.java\n\n@@ -33,7 +33,7 @@ public class URL {\n \n     /**\n      * Proxy method for {@link com.google.gwt.http.client.URL#decodeQueryString(String s)}\n-     * @param s - string to decode\n+     * @param s a string to decode\n      * @return decoded string value\n      */\n     public String decodeQueryString(String s) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxOTEzMA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400019130", "bodyText": "just for consistency, could we use final String fullName?", "author": "jomarko", "createdAt": "2020-03-30T08:40:02Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.kogito.client.service;\n+\n+import static org.kie.workbench.common.stunner.core.util.StringUtils.isEmpty;\n+\n+public abstract class AbstractKogitoClientDiagramService implements KogitoClientDiagramService {\n+\n+    private static final char UNIX_SEPARATOR = '/';\n+    private static final char WINDOWS_SEPARATOR = '\\\\';\n+    public static final String DEFAULT_DIAGRAM_ID = \"default\";\n+\n+    /**\n+     * Extracts file name from path.\n+     * @param filePath path to the file\n+     * @return file name\n+     */\n+    public String createDiagramTitleFromFilePath(final String filePath) {\n+        if (isEmpty(filePath)) {\n+            return generateDefaultId();\n+        }\n+\n+        return getFileNameWithoutExtension(getFileName(filePath));\n+    }\n+\n+    private static String getFileNameWithoutExtension(String fullName) {", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\nindex a0dcb02b85..e379d834af 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-kogito/kie-wb-common-stunner-kogito-client/src/main/java/org/kie/workbench/common/stunner/kogito/client/service/AbstractKogitoClientDiagramService.java\n\n@@ -25,7 +25,10 @@ public abstract class AbstractKogitoClientDiagramService implements KogitoClient\n     public static final String DEFAULT_DIAGRAM_ID = \"default\";\n \n     /**\n-     * Extracts file name from path.\n+     * Making correct ID diagram from path:\n+     * 1. Extracts file name without extension from path\n+     * 2. Returns {@link AbstractKogitoClientDiagramService#generateDefaultId}\n+     * If name is empty (can be overridden in descendant)\n      * @param filePath path to the file\n      * @return file name\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAzMjU5Ng==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400032596", "bodyText": "isn't more usual put default keyword as first of method signature?", "author": "jomarko", "createdAt": "2020-03-30T09:00:59Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ValidProcessIdValue.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.forms.validation.process;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.validation.Constraint;\n+import javax.validation.Payload;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+@Documented\n+@Target(ElementType.FIELD)\n+@Retention(RUNTIME)\n+@Constraint(validatedBy = {ProcessIdValueValidator.class})\n+public @interface ValidProcessIdValue {\n+    String message() default \"Process ID is not valid\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA4MTg2OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400081869", "bodyText": "For methods in interfaces, yes, for annotations it is unfortunately different. See annotation docs for more details.\nAny way since we doesn't want to use Bean based validation I will remove annotation and related classes entirely.\nThank you!", "author": "hasys", "createdAt": "2020-03-30T10:20:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAzMjU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ValidProcessIdValue.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ValidProcessIdValue.java\ndeleted file mode 100644\nindex 457c9241a8..0000000000\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/forms/validation/process/ValidProcessIdValue.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-/*\n- * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.kie.workbench.common.stunner.bpmn.forms.validation.process;\n-\n-import java.lang.annotation.Documented;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.Target;\n-\n-import javax.validation.Constraint;\n-import javax.validation.Payload;\n-\n-import static java.lang.annotation.RetentionPolicy.RUNTIME;\n-\n-@Documented\n-@Target(ElementType.FIELD)\n-@Retention(RUNTIME)\n-@Constraint(validatedBy = {ProcessIdValueValidator.class})\n-public @interface ValidProcessIdValue {\n-    String message() default \"Process ID is not valid\";\n-\n-    Class<?>[] groups() default {};\n-\n-    Class<? extends Payload>[] payload() default {};\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAzNzU5MQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400037591", "bodyText": "Why we decided to implement this on our own rather than using existing library?", "author": "jomarko", "createdAt": "2020-03-30T09:09:07Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/util/XmlUtils.java", "diffHunk": "@@ -0,0 +1,687 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.stunner.bpmn.util;\n+\n+import java.util.Arrays;\n+\n+import static org.kie.workbench.common.stunner.core.util.StringUtils.isEmpty;\n+\n+public class XmlUtils {", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA1NTM3Nw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400055377", "bodyText": "Whole library is too big and GWT incompatible, since we need only NCName/NCStartName validation from whole library I think it is a suitable solution.", "author": "hasys", "createdAt": "2020-03-30T09:37:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAzNzU5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6b762a5c670dcb7eaa208859dac0c4cd628077b0", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/util/XmlUtils.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/util/XmlUtils.java\nindex d79f57f80d..6b000a83b3 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/util/XmlUtils.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-api/src/main/java/org/kie/workbench/common/stunner/bpmn/util/XmlUtils.java\n\n@@ -18,8 +18,6 @@ package org.kie.workbench.common.stunner.bpmn.util;\n \n import java.util.Arrays;\n \n-import static org.kie.workbench.common.stunner.core.util.StringUtils.isEmpty;\n-\n public class XmlUtils {\n \n     private static final byte[] CHARS = new byte[65536];\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MDMwOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400040308", "bodyText": "PowerMockito causes troubles to running tests on jdk11, if thee is a way to avoid it I would vote for it.", "author": "jomarko", "createdAt": "2020-03-30T09:13:26Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/fromstunner/DefinitionsConverterTest.java", "diffHunk": "@@ -37,11 +41,28 @@\n import org.kie.workbench.common.stunner.core.graph.impl.GraphImpl;\n import org.kie.workbench.common.stunner.core.graph.impl.NodeImpl;\n import org.kie.workbench.common.stunner.core.graph.store.GraphNodeStoreImpl;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import org.mockito.stubbing.Answer;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Matchers.anyString;\n+import static org.powermock.api.mockito.PowerMockito.when;", "originalCommit": "d4dd7a69ea5b7bb864a0b2dd7bbc7e798e3280a2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2ODQwNw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3172#discussion_r400068407", "bodyText": "Great catch thank you. It was invalid import automatically suggested by IDE, it even didn't ask about the options. I changed it to mockito, and we need to report a Jira issue to remove Power Mockito entirely. Just one test class uses it, so it shouldn't be so hard. Thanks! \ud83d\udc4d", "author": "hasys", "createdAt": "2020-03-30T09:58:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA0MDMwOA=="}], "type": "inlineReview", "revised_code": {"commit": "9ba383c1d04da9474a336723874140ca6c206cb5", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/fromstunner/DefinitionsConverterTest.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/fromstunner/DefinitionsConverterTest.java\nindex c5840ed8fa..9de897cd24 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/fromstunner/DefinitionsConverterTest.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-marshalling/src/test/java/org/kie/workbench/common/stunner/bpmn/client/marshall/converters/fromstunner/DefinitionsConverterTest.java\n\n@@ -47,7 +47,7 @@ import org.mockito.stubbing.Answer;\n \n import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.Matchers.anyString;\n-import static org.powermock.api.mockito.PowerMockito.when;\n+import static org.mockito.Mockito.when;\n \n @RunWith(MockitoJUnitRunner.class)\n public class DefinitionsConverterTest {\n"}}, {"oid": "9ba383c1d04da9474a336723874140ca6c206cb5", "url": "https://github.com/kiegroup/kie-wb-common/commit/9ba383c1d04da9474a336723874140ca6c206cb5", "message": "PR code review fixes", "committedDate": "2020-03-30T11:35:34Z", "type": "forcePushed"}, {"oid": "9aea91d7feaeeb100c27879962bdc83eac3a5bc0", "url": "https://github.com/kiegroup/kie-wb-common/commit/9aea91d7feaeeb100c27879962bdc83eac3a5bc0", "message": "Case Management didn't decode a file name", "committedDate": "2020-03-31T10:15:16Z", "type": "forcePushed"}, {"oid": "54d18f5c5439c85a19034f61fc54038ab5b34a1d", "url": "https://github.com/kiegroup/kie-wb-common/commit/54d18f5c5439c85a19034f61fc54038ab5b34a1d", "message": "Align escaping with jBPM Engine", "committedDate": "2020-04-06T11:08:47Z", "type": "forcePushed"}, {"oid": "8ee78b04569c6fb529353646a32471d81986b2ea", "url": "https://github.com/kiegroup/kie-wb-common/commit/8ee78b04569c6fb529353646a32471d81986b2ea", "message": "Remove URLDecoder usage", "committedDate": "2020-04-08T08:14:04Z", "type": "forcePushed"}, {"oid": "dd42034eb0993d3834afa10543de1f40a95d4240", "url": "https://github.com/kiegroup/kie-wb-common/commit/dd42034eb0993d3834afa10543de1f40a95d4240", "message": "Remove URLDecoder usage", "committedDate": "2020-04-08T22:20:32Z", "type": "forcePushed"}, {"oid": "6b762a5c670dcb7eaa208859dac0c4cd628077b0", "url": "https://github.com/kiegroup/kie-wb-common/commit/6b762a5c670dcb7eaa208859dac0c4cd628077b0", "message": "RHPAM-1344 - Process ID accepts invalid characters", "committedDate": "2020-04-09T14:46:41Z", "type": "commit"}, {"oid": "f8daa91ec1b476ece6ce284643755bc2c9322907", "url": "https://github.com/kiegroup/kie-wb-common/commit/f8daa91ec1b476ece6ce284643755bc2c9322907", "message": "StringUtils", "committedDate": "2020-04-09T14:46:41Z", "type": "commit"}, {"oid": "38252f494ea7d6f45e7cddaf160b077e9e6711ff", "url": "https://github.com/kiegroup/kie-wb-common/commit/38252f494ea7d6f45e7cddaf160b077e9e6711ff", "message": "New processes names cleared", "committedDate": "2020-04-09T14:46:41Z", "type": "commit"}, {"oid": "bb4bb2c17aafd4a9e081d17c846708c3b2174cb1", "url": "https://github.com/kiegroup/kie-wb-common/commit/bb4bb2c17aafd4a9e081d17c846708c3b2174cb1", "message": "Remove fixed todo\n\nsee https://issues.jboss.org/browse/JBPM-8749", "committedDate": "2020-04-09T14:46:41Z", "type": "commit"}, {"oid": "c233fef6b926d9b7641dfc147c4b2798abc2a97a", "url": "https://github.com/kiegroup/kie-wb-common/commit/c233fef6b926d9b7641dfc147c4b2798abc2a97a", "message": "ID clean up", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "c61933cb5a4b3777fca633aa9c675cb344c17694", "url": "https://github.com/kiegroup/kie-wb-common/commit/c61933cb5a4b3777fca633aa9c675cb344c17694", "message": "KOGITO-1354 Kogito Use realfile name provided by Appformer", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "daa61cd98418d2469753fbc1b30b9f46091b6cc9", "url": "https://github.com/kiegroup/kie-wb-common/commit/daa61cd98418d2469753fbc1b30b9f46091b6cc9", "message": "Clean up, tests", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "ec98e571952035398631fc795b6f7a776651ff8e", "url": "https://github.com/kiegroup/kie-wb-common/commit/ec98e571952035398631fc795b6f7a776651ff8e", "message": "Rebase to master, addition coverage.", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "881d477c026d2b685df73e9314b08a2516ce319a", "url": "https://github.com/kiegroup/kie-wb-common/commit/881d477c026d2b685df73e9314b08a2516ce319a", "message": "Enable disabled test", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "e79df3a14ae2412d565e1cb13603befa47802b1c", "url": "https://github.com/kiegroup/kie-wb-common/commit/e79df3a14ae2412d565e1cb13603befa47802b1c", "message": "PR code review fixes", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "54b96b6ebda82ab520e2b4ea872d4c8c6da9f01c", "url": "https://github.com/kiegroup/kie-wb-common/commit/54b96b6ebda82ab520e2b4ea872d4c8c6da9f01c", "message": "Case Management didn't decode a file name", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "b1c0c8ec767f0f36302c47af1b7de71607c0d43c", "url": "https://github.com/kiegroup/kie-wb-common/commit/b1c0c8ec767f0f36302c47af1b7de71607c0d43c", "message": "Align escaping with jBPM Engine", "committedDate": "2020-04-09T14:48:51Z", "type": "commit"}, {"oid": "d94848a21f0f2966acc960dc9ddd9f7aa9b398bf", "url": "https://github.com/kiegroup/kie-wb-common/commit/d94848a21f0f2966acc960dc9ddd9f7aa9b398bf", "message": "Remove URLDecoder usage", "committedDate": "2020-04-09T14:49:44Z", "type": "commit"}, {"oid": "d94848a21f0f2966acc960dc9ddd9f7aa9b398bf", "url": "https://github.com/kiegroup/kie-wb-common/commit/d94848a21f0f2966acc960dc9ddd9f7aa9b398bf", "message": "Remove URLDecoder usage", "committedDate": "2020-04-09T14:49:44Z", "type": "forcePushed"}]}