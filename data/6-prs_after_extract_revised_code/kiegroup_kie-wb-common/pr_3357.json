{"pr_number": 3357, "pr_title": "KOGITO-2674: [DMN Designer] Multiple DRDs support - Context menu component", "pr_createdAt": "2020-07-14T10:32:02Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3357", "timeline": [{"oid": "841bb7a56aced8e876ae32414c6640795ba90a9f", "url": "https://github.com/kiegroup/kie-wb-common/commit/841bb7a56aced8e876ae32414c6640795ba90a9f", "message": "Creating draft context menu widget", "committedDate": "2020-07-11T16:51:27Z", "type": "commit"}, {"oid": "46c6fef310569d74d59c5c63472753bd933de1ad", "url": "https://github.com/kiegroup/kie-wb-common/commit/46c6fef310569d74d59c5c63472753bd933de1ad", "message": "Triggering context menu in the navigator view", "committedDate": "2020-07-11T16:51:52Z", "type": "commit"}, {"oid": "d85b5818ee18cb897f7c6042396dd0af1e07168d", "url": "https://github.com/kiegroup/kie-wb-common/commit/d85b5818ee18cb897f7c6042396dd0af1e07168d", "message": "Adding more methods to DRDContextMenu APIs", "committedDate": "2020-07-12T12:53:21Z", "type": "commit"}, {"oid": "e4ba0fd64eb6879c04949bc8d1044c25bbeca88b", "url": "https://github.com/kiegroup/kie-wb-common/commit/e4ba0fd64eb6879c04949bc8d1044c25bbeca88b", "message": "Adding DOM event listeners controls to View part", "committedDate": "2020-07-12T12:54:25Z", "type": "commit"}, {"oid": "ae20739d4c58f49e473b77c90e2fb9d24b62d546", "url": "https://github.com/kiegroup/kie-wb-common/commit/ae20739d4c58f49e473b77c90e2fb9d24b62d546", "message": "Controlling menu items list from context menu's caller", "committedDate": "2020-07-12T12:55:17Z", "type": "commit"}, {"oid": "3345eadb221e528d4a7f0b7a7e1d2db724c442a9", "url": "https://github.com/kiegroup/kie-wb-common/commit/3345eadb221e528d4a7f0b7a7e1d2db724c442a9", "message": "Generify ContextMenu, from the DRD domain", "committedDate": "2020-07-13T07:48:27Z", "type": "commit"}, {"oid": "f5636e5187b9c084dc7c9243f62b4f25e64fdc88", "url": "https://github.com/kiegroup/kie-wb-common/commit/f5636e5187b9c084dc7c9243f62b4f25e64fdc88", "message": "Adding icon support to list selector header item", "committedDate": "2020-07-13T09:06:34Z", "type": "commit"}, {"oid": "c0800d2d9b65494830138138b499eb9948e1c9f8", "url": "https://github.com/kiegroup/kie-wb-common/commit/c0800d2d9b65494830138138b499eb9948e1c9f8", "message": "ContextMenu has an header menu (w/ icon)", "committedDate": "2020-07-13T09:07:33Z", "type": "commit"}, {"oid": "f9e71cd1367cb3581df92d80663a3ade0b0f4587", "url": "https://github.com/kiegroup/kie-wb-common/commit/f9e71cd1367cb3581df92d80663a3ade0b0f4587", "message": "Simulate ContextMenu for DRD actions", "committedDate": "2020-07-13T14:24:07Z", "type": "commit"}, {"oid": "a0de2f1f292a38e663a78517d037b1789c62d10b", "url": "https://github.com/kiegroup/kie-wb-common/commit/a0de2f1f292a38e663a78517d037b1789c62d10b", "message": "ContextMenu should be hidden when an item is selected", "committedDate": "2020-07-13T14:36:31Z", "type": "commit"}, {"oid": "ee3b09064d7f37eea13cc51689a7172c541cc3e1", "url": "https://github.com/kiegroup/kie-wb-common/commit/ee3b09064d7f37eea13cc51689a7172c541cc3e1", "message": "Adjusting context menu style", "committedDate": "2020-07-13T15:30:31Z", "type": "commit"}, {"oid": "ebd4568eec0649d74095bf3188f7acb654f0c5d5", "url": "https://github.com/kiegroup/kie-wb-common/commit/ebd4568eec0649d74095bf3188f7acb654f0c5d5", "message": "Adding tests for ContextMenu", "committedDate": "2020-07-13T16:17:01Z", "type": "commit"}, {"oid": "b2de18994a460de2154840cde40195f9898f863f", "url": "https://github.com/kiegroup/kie-wb-common/commit/b2de18994a460de2154840cde40195f9898f863f", "message": "Adding tests for ContextMenuView", "committedDate": "2020-07-13T17:39:55Z", "type": "commit"}, {"oid": "ab860e34aa7f4bf35dca172351bd27135b958076", "url": "https://github.com/kiegroup/kie-wb-common/commit/ab860e34aa7f4bf35dca172351bd27135b958076", "message": "Missing inject annotation", "committedDate": "2020-07-13T17:49:47Z", "type": "commit"}, {"oid": "212e222ce85ec8d08fc023893090349052d135a4", "url": "https://github.com/kiegroup/kie-wb-common/commit/212e222ce85ec8d08fc023893090349052d135a4", "message": "Reverting class used to include widget", "committedDate": "2020-07-14T10:25:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzMjY2Ng==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3357#discussion_r454532666", "bodyText": "I do believe we could keep this component as a @ApplicationScoped, given the nature of its UI and API. Wdyt?", "author": "karreiro", "createdAt": "2020-07-14T17:45:03Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.editors.contextmenu;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.PostConstruct;\n+import javax.inject.Inject;\n+\n+import elemental2.dom.HTMLElement;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorHeaderItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorTextItem;\n+import org.uberfire.client.mvp.UberElemental;\n+import org.uberfire.mvp.Command;\n+\n+public class ContextMenu {", "originalCommit": "212e222ce85ec8d08fc023893090349052d135a4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b615f2564430f8c0d4c78c4c54628841528fce31", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\nindex 9538f78769..b7d0ba0ac1 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n\n@@ -18,6 +18,7 @@ package org.kie.workbench.common.dmn.client.editors.contextmenu;\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.function.Consumer;\n \n import javax.annotation.PostConstruct;\n import javax.inject.Inject;\n"}}, {"oid": "b615f2564430f8c0d4c78c4c54628841528fce31", "url": "https://github.com/kiegroup/kie-wb-common/commit/b615f2564430f8c0d4c78c4c54628841528fce31", "message": "Show function can accept a consumer", "committedDate": "2020-07-15T08:31:08Z", "type": "commit"}, {"oid": "92643b19f1fde36b2aaeb56ebcf75c08b9cbb919", "url": "https://github.com/kiegroup/kie-wb-common/commit/92643b19f1fde36b2aaeb56ebcf75c08b9cbb919", "message": "ContextMenu can be application scoped", "committedDate": "2020-07-15T08:34:28Z", "type": "commit"}, {"oid": "e1f1ed2fd3e1b4d917b7ed522afadeacf1dd9a59", "url": "https://github.com/kiegroup/kie-wb-common/commit/e1f1ed2fd3e1b4d917b7ed522afadeacf1dd9a59", "message": "Adding test for ListSelectorHeaderItemViewImpl", "committedDate": "2020-07-16T13:42:28Z", "type": "commit"}, {"oid": "041e4585e3ae61ae5994dca7165375a7dc44964e", "url": "https://github.com/kiegroup/kie-wb-common/commit/041e4585e3ae61ae5994dca7165375a7dc44964e", "message": "Merge branch 'master' into KOGITO-2674", "committedDate": "2020-07-16T15:11:31Z", "type": "commit"}, {"oid": "0b6d7d0c4c2bce7f22c9fd3369b80de73038689a", "url": "https://github.com/kiegroup/kie-wb-common/commit/0b6d7d0c4c2bce7f22c9fd3369b80de73038689a", "message": "Covering getIconClass method when old builder is used", "committedDate": "2020-07-20T08:23:46Z", "type": "commit"}, {"oid": "a82eaafadd617c0ed8ada84ed72ce07b3c4d1397", "url": "https://github.com/kiegroup/kie-wb-common/commit/a82eaafadd617c0ed8ada84ed72ce07b3c4d1397", "message": "event.path is not available on Firefox. Using composedPath as fallback", "committedDate": "2020-07-20T16:12:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwMzQxNg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3357#discussion_r458003416", "bodyText": "Is it ok that we register different (logically same) handler instance in show than we un-register in removeDOMEventListeners ? asking as hideContextMenuHandler() always construct new instance of a handler.", "author": "jomarko", "createdAt": "2020-07-21T10:42:28Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenuView.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.editors.contextmenu;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+import javax.annotation.PreDestroy;\n+import javax.inject.Inject;\n+\n+import com.google.gwt.dom.client.BrowserEvents;\n+import elemental2.dom.DomGlobal;\n+import elemental2.dom.Element;\n+import elemental2.dom.Event;\n+import elemental2.dom.EventListener;\n+import org.jboss.errai.ui.shared.api.annotations.DataField;\n+import org.jboss.errai.ui.shared.api.annotations.Templated;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.ListSelector;\n+\n+@Templated\n+public class ContextMenuView implements ContextMenu.View,\n+                                        HasListSelectorControl {\n+\n+    private ContextMenu presenter;\n+\n+    @DataField(\"list-selector\")\n+    private ListSelector listSelector;\n+\n+    @Inject\n+    public ContextMenuView(final ListSelector listSelector) {\n+        this.listSelector = listSelector;\n+    }\n+\n+    @Override\n+    public void init(final ContextMenu presenter) {\n+        this.presenter = presenter;\n+    }\n+\n+    @PreDestroy\n+    private void removeDOMEventListeners() {\n+        DomGlobal.document.removeEventListener(BrowserEvents.MOUSEDOWN,\n+                                               hideContextMenuHandler(),\n+                                               false);\n+        DomGlobal.document.removeEventListener(BrowserEvents.MOUSEWHEEL,\n+                                               hideContextMenuHandler(),\n+                                               false);\n+    }\n+\n+    @Override\n+    public void show() {\n+        listSelector.bind(this, 0, 0);\n+        listSelector.show();\n+\n+        DomGlobal.document.addEventListener(BrowserEvents.MOUSEDOWN,\n+                                            hideContextMenuHandler(),\n+                                            false);\n+        DomGlobal.document.addEventListener(BrowserEvents.MOUSEWHEEL,\n+                                            hideContextMenuHandler(),\n+                                            false);\n+    }", "originalCommit": "a82eaafadd617c0ed8ada84ed72ce07b3c4d1397", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0749b38bf5220285ac30e446aeac26763fb52990", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenuView.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenuView.java\nindex 6d73797a4b..ff32917e2d 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenuView.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenuView.java\n\n@@ -56,10 +56,10 @@ public class ContextMenuView implements ContextMenu.View,\n     @PreDestroy\n     private void removeDOMEventListeners() {\n         DomGlobal.document.removeEventListener(BrowserEvents.MOUSEDOWN,\n-                                               hideContextMenuHandler(),\n+                                               hideContextMenuHandler,\n                                                false);\n         DomGlobal.document.removeEventListener(BrowserEvents.MOUSEWHEEL,\n-                                               hideContextMenuHandler(),\n+                                               hideContextMenuHandler,\n                                                false);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwNjIwNw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3357#discussion_r458006207", "bodyText": "This seems be used just in single unit test, do we really need it?", "author": "jomarko", "createdAt": "2020-07-21T10:48:23Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.editors.contextmenu;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.dom.HTMLElement;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorHeaderItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorTextItem;\n+import org.uberfire.client.mvp.UberElemental;\n+import org.uberfire.mvp.Command;\n+\n+@ApplicationScoped\n+public class ContextMenu {\n+\n+    private final List<ListSelectorItem> menuItems;\n+\n+    private View view;\n+\n+    @Inject\n+    public ContextMenu(final View view) {\n+        this.view = view;\n+        this.menuItems = new ArrayList<>();\n+    }\n+\n+    @PostConstruct\n+    public void init() {\n+        view.init(this);\n+    }\n+\n+    public void show() { view.show(); }\n+\n+    public void show(Consumer<ContextMenu> contextMenuConsumer) {\n+        this.resetMenuItems();\n+        contextMenuConsumer.accept(this);\n+        this.show();\n+    }\n+\n+    public void hide() { view.hide(); }\n+\n+    public HTMLElement getElement() {\n+        return view.getElement();\n+    }", "originalCommit": "a82eaafadd617c0ed8ada84ed72ce07b3c4d1397", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2NjUxNg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3357#discussion_r458066516", "bodyText": "Yes, it is used by the component that instantiates the ContextMenu, in order to add it to the DOM.\nFor example:\n        final HTMLElement contextMenuElement = drdContextMenu.getElement();\n        DomGlobal.document.body.appendChild(contextMenuElement);", "author": "vpellegrino", "createdAt": "2020-07-21T12:44:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwNjIwNw=="}], "type": "inlineReview", "revised_code": {"commit": "d5d0e55f9860dd41a8b78285625b48fe2dc6e5bf", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\nindex 0af1c29e69..5507cd2752 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n\n@@ -52,6 +52,10 @@ public class ContextMenu {\n \n     public void show() { view.show(); }\n \n+    /**\n+     * This overloaded version of show method accepts a lambda with a series of operations to be performed before showing the context menu\n+     * @param contextMenuConsumer whatever function that takes as argument the contextMenu itself and returns nothing\n+     */\n     public void show(Consumer<ContextMenu> contextMenuConsumer) {\n         this.resetMenuItems();\n         contextMenuConsumer.accept(this);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyODM2NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3357#discussion_r458028364", "bodyText": "Could we please javadoc the consumer? From implementation I have some idea what it does but I think it is worth to write in few words.", "author": "jomarko", "createdAt": "2020-07-21T11:32:45Z", "path": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.workbench.common.dmn.client.editors.contextmenu;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+\n+import elemental2.dom.HTMLElement;\n+import org.jboss.errai.ui.client.local.api.elemental2.IsElement;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorHeaderItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorItem;\n+import org.kie.workbench.common.dmn.client.widgets.grid.controls.list.HasListSelectorControl.ListSelectorTextItem;\n+import org.uberfire.client.mvp.UberElemental;\n+import org.uberfire.mvp.Command;\n+\n+@ApplicationScoped\n+public class ContextMenu {\n+\n+    private final List<ListSelectorItem> menuItems;\n+\n+    private View view;\n+\n+    @Inject\n+    public ContextMenu(final View view) {\n+        this.view = view;\n+        this.menuItems = new ArrayList<>();\n+    }\n+\n+    @PostConstruct\n+    public void init() {\n+        view.init(this);\n+    }\n+\n+    public void show() { view.show(); }\n+\n+    public void show(Consumer<ContextMenu> contextMenuConsumer) {", "originalCommit": "a82eaafadd617c0ed8ada84ed72ce07b3c4d1397", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d5d0e55f9860dd41a8b78285625b48fe2dc6e5bf", "chunk": "diff --git a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\nindex 0af1c29e69..5507cd2752 100644\n--- a/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n+++ b/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/editors/contextmenu/ContextMenu.java\n\n@@ -52,6 +52,10 @@ public class ContextMenu {\n \n     public void show() { view.show(); }\n \n+    /**\n+     * This overloaded version of show method accepts a lambda with a series of operations to be performed before showing the context menu\n+     * @param contextMenuConsumer whatever function that takes as argument the contextMenu itself and returns nothing\n+     */\n     public void show(Consumer<ContextMenu> contextMenuConsumer) {\n         this.resetMenuItems();\n         contextMenuConsumer.accept(this);\n"}}, {"oid": "0749b38bf5220285ac30e446aeac26763fb52990", "url": "https://github.com/kiegroup/kie-wb-common/commit/0749b38bf5220285ac30e446aeac26763fb52990", "message": "hideContextMenuHandler as variable instead of a method, in order to keep always the same EventListener", "committedDate": "2020-07-21T12:51:51Z", "type": "commit"}, {"oid": "d5d0e55f9860dd41a8b78285625b48fe2dc6e5bf", "url": "https://github.com/kiegroup/kie-wb-common/commit/d5d0e55f9860dd41a8b78285625b48fe2dc6e5bf", "message": "adding javadoc", "committedDate": "2020-07-21T12:54:00Z", "type": "commit"}]}