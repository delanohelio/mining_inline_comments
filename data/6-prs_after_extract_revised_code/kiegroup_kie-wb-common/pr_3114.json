{"pr_number": 3114, "pr_title": "KOGITO-257 : Stunner - Condition Expression should show only \"Expression\" option", "pr_createdAt": "2020-01-16T18:26:12Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3114", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY5OTI0OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r367699249", "bodyText": "I personally prefer to use null != element.asNode() instead of element instanceof  Node, having in mind that on javascript the inheritance is different and for a pure client side developer maybe results more familiar using the null (undefined).. anyway just a preference.\nPlease also create a private static method on the class and re-use it, instead of duplicating the element instanceof  Node, it's alway good to re-use code :)", "author": "romartin", "createdAt": "2020-01-16T23:18:39Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidget.java", "diffHunk": "@@ -227,7 +227,9 @@ private void show(final String graphUuid,\n             final String name = definitionUtils.getName(definition);\n             propertiesOpenedEvent.fire(new FormPropertiesOpened(formSessionHandler.getSession(), uuid, name));\n             lastElement = element;\n-            lastPosition = GraphUtils.getComputedPosition((Node<?, ? extends Edge>) element);\n+            if (element instanceof  Node) {", "originalCommit": "143031a47f163930c7b952266ae962f31ba2b3f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcyNzkwNQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r367727905", "bodyText": "Hi @romartin added static method, for some reason several tests failed if I used asNode so I kept the instance of", "author": "inodeman", "createdAt": "2020-01-17T01:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY5OTI0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcyOTM5NA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r367729394", "bodyText": "ok np, that's fine anyway, thx!", "author": "romartin", "createdAt": "2020-01-17T01:19:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY5OTI0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "13c80348675f06935f28fe1d5ce8a3db2b865478", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidget.java b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidget.java\nindex c62d9d7513..328423bdfb 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidget.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/main/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidget.java\n\n@@ -227,7 +238,7 @@ public class FormPropertiesWidget implements IsElement,\n             final String name = definitionUtils.getName(definition);\n             propertiesOpenedEvent.fire(new FormPropertiesOpened(formSessionHandler.getSession(), uuid, name));\n             lastElement = element;\n-            if (element instanceof  Node) {\n+            if (isNode(element)) {\n                 lastPosition = GraphUtils.getComputedPosition((Node<?, ? extends Edge>) element);\n             }\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczNjgzMQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r367736831", "bodyText": "I know we'd been mocking nodes/edges accross some test classes, me included, but that doesn't makes much sense and it's not a good practice at all.\nIn the testing scope most common way to create domain objects, like a node or an edge, which are basically holding some state, but not  providing functionality, is just by creating new instances, for the \"real\" class, no need for mocking. Mocking domain / data holder objects just adds complexity, you've to re-define the behavior for the methods being used everywhere, on each test class/case being written... it's fine to mock logic in APIs, but no need to mock domain objects.\nAlso this is why you said that element.asNode() is not working on yout tests, it's because you're mocking the node class and the instance is a proxy.... Just by using real \"nodes/edges\" that will work properly.\nPlease keep in mind trying to refactor those tests once possible, although this test is not new and you just updated, would be great donig that work all toghether,  during whatever other task where the test results updated.\nShould be hard doing this refactor here? Other test cases are doing this properly, so just do a quick find on the project to see how easy is to create new instances on tests :)\nThx!", "author": "romartin", "createdAt": "2020-01-17T01:54:22Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/test/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidgetTest.java", "diffHunk": "@@ -150,6 +154,9 @@ public void setup() throws Exception {\n         when(nodeContent.getDefinition()).thenReturn(nodeDefObject);\n         when(node2.getUUID()).thenReturn(NODE2_UUID);\n         when(node2.getContent()).thenReturn(nodeContent);\n+        when(edge.getUUID()).thenReturn(EDGE_UUID);", "originalCommit": "d7c15cb253d8a9a1ce458032d15b6684926a60f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4NDA3NQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r368184075", "bodyText": "Hi @romartin yes, totally makes sense, I did not realize it was that easy just to use the real class, changed it in the test I added", "author": "inodeman", "createdAt": "2020-01-18T00:05:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczNjgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "13c80348675f06935f28fe1d5ce8a3db2b865478", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/test/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidgetTest.java b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/test/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidgetTest.java\nindex 4f5bc74c24..9dd17ac844 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/test/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidgetTest.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-extensions/kie-wb-common-stunner-forms/kie-wb-common-stunner-forms-client/src/test/java/org/kie/workbench/common/stunner/forms/client/widgets/FormPropertiesWidgetTest.java\n\n@@ -154,8 +154,6 @@ public class FormPropertiesWidgetTest {\n         when(nodeContent.getDefinition()).thenReturn(nodeDefObject);\n         when(node2.getUUID()).thenReturn(NODE2_UUID);\n         when(node2.getContent()).thenReturn(nodeContent);\n-        when(edge.getUUID()).thenReturn(EDGE_UUID);\n-        when(edge.getContent()).thenReturn(nodeContent);\n \n         BindableProxyFactory.addBindableProxy(Object.class,\n                                               proxyProvider);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczNzc4Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r367737782", "bodyText": "The idea behind this method works for me, but what about renaming it to something more easy to \"understand\"? what about just isAvailable(), or similar? This way:\n\nkogito - will return false\nBC - will return true\n\nSo the code will be read as something like this:\nif (service.isAvailable()) { ... } else { .... }\nWDYT?", "author": "romartin", "createdAt": "2020-01-17T01:59:20Z", "path": "kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/conditionEditor/ConditionEditorGeneratorService.java", "diffHunk": "@@ -25,4 +25,7 @@\n public interface ConditionEditorGeneratorService\n         extends KogitoClientService<Condition, GenerateConditionResult> {\n \n+    default boolean isClient() {", "originalCommit": "d7c15cb253d8a9a1ce458032d15b6684926a60f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE4MzM4OQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3114#discussion_r368183389", "bodyText": "Hi @romartin yes, makes sense isAvailable(), will change accordingly", "author": "inodeman", "createdAt": "2020-01-18T00:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczNzc4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "13c80348675f06935f28fe1d5ce8a3db2b865478", "chunk": "diff --git a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/conditionEditor/ConditionEditorGeneratorService.java b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/conditionEditor/ConditionEditorGeneratorService.java\nindex 46611eb5fe..3c56dfd18e 100644\n--- a/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/conditionEditor/ConditionEditorGeneratorService.java\n+++ b/kie-wb-common-stunner/kie-wb-common-stunner-sets/kie-wb-common-stunner-bpmn/kie-wb-common-stunner-bpmn-client/src/main/java/org/kie/workbench/common/stunner/bpmn/client/forms/fields/conditionEditor/ConditionEditorGeneratorService.java\n\n@@ -25,7 +25,7 @@ import org.kie.workbench.common.stunner.kogito.client.service.KogitoClientServic\n public interface ConditionEditorGeneratorService\n         extends KogitoClientService<Condition, GenerateConditionResult> {\n \n-    default boolean isClient() {\n+    default boolean isAvailable() {\n         return true;\n     }\n }\n"}}, {"oid": "13c80348675f06935f28fe1d5ce8a3db2b865478", "url": "https://github.com/kiegroup/kie-wb-common/commit/13c80348675f06935f28fe1d5ce8a3db2b865478", "message": "KOGITO-257 : Stunner - Condition Expression should show only \"Expression\" option", "committedDate": "2020-01-20T16:30:09Z", "type": "forcePushed"}, {"oid": "a2b5f0b5c20bd1943be50b5345dd7569952a6aaf", "url": "https://github.com/kiegroup/kie-wb-common/commit/a2b5f0b5c20bd1943be50b5345dd7569952a6aaf", "message": "FIX-MASTER-BPMN_STAND-ALONE-TEST: Fixes Compilation Error while running tests due to constructor not being found", "committedDate": "2020-02-26T17:26:09Z", "type": "forcePushed"}, {"oid": "499b2185b6e9dea66565591ef794099dd79fb33b", "url": "https://github.com/kiegroup/kie-wb-common/commit/499b2185b6e9dea66565591ef794099dd79fb33b", "message": "KOGITO-257 : Stunner - Condition Expression should show only \"Expression\" option", "committedDate": "2020-02-26T19:47:07Z", "type": "forcePushed"}, {"oid": "0da2530947965ecf338e8b60e37befcbc7fcf79c", "url": "https://github.com/kiegroup/kie-wb-common/commit/0da2530947965ecf338e8b60e37befcbc7fcf79c", "message": "KOGITO-257 : Stunner - Condition Expression should show only \"Expression\" option", "committedDate": "2020-02-27T16:25:08Z", "type": "commit"}, {"oid": "0da2530947965ecf338e8b60e37befcbc7fcf79c", "url": "https://github.com/kiegroup/kie-wb-common/commit/0da2530947965ecf338e8b60e37befcbc7fcf79c", "message": "KOGITO-257 : Stunner - Condition Expression should show only \"Expression\" option", "committedDate": "2020-02-27T16:25:08Z", "type": "forcePushed"}]}