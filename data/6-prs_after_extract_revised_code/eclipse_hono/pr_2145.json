{"pr_number": 2145, "pr_title": "[#2125] Support tenant specific configuration of timeoutToAck", "pr_createdAt": "2020-09-01T13:08:05Z", "pr_url": "https://github.com/eclipse/hono/pull/2145", "timeline": [{"oid": "ac880a0506565b6c053329dd46bd1ca0f51329fd", "url": "https://github.com/eclipse/hono/commit/ac880a0506565b6c053329dd46bd1ca0f51329fd", "message": "[#2125] Support tenant specific configuration of timeoutToAck\n\nThe CoAP adapter now supports the configiuration of the timeoutToAck\nproperty at the tenant level. If not specified, the value set at the\nadapter level is used.\n\nFixes #2125\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-09-01T13:07:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY2NjMzOA==", "url": "https://github.com/eclipse/hono/pull/2145#discussion_r481666338", "bodyText": "1st parameter missing or wrong quotes.", "author": "calohmn", "createdAt": "2020-09-02T04:30:48Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java", "diffHunk": "@@ -158,24 +159,37 @@ public String getAuthId() {\n     /**\n      * Sets a timer to trigger the sending of a separate ACK to a device.\n      * <p>\n+     * This method first tries to find a {@value CoapConstants#TIMEOUT_TO_ACK} property value\n+     * in the tenant's CoAP adapter configuration.\n+     * If no such property is found, the value given in the timeoutMillis parameter is used instead.\n      *\n-     * @param vertx Vertx to schedule the timer\n+     * @param vertx The vert.x instance to set the timer on.\n+     * @param tenant The tenant that the device belongs to which the request being processed originates from.\n      * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n      *            response, {@code 0}, always use separate response.\n+     * @throws NullPointerException if vertx or tenant are {@code null}.\n      */\n     public void startAcceptTimer(\n             final Vertx vertx,\n+            final TenantObject tenant,\n             final long timeoutMillis) {\n \n+        Objects.requireNonNull(vertx, \"vert.x\");\n+        Objects.requireNonNull(\"tenant\");", "originalCommit": "ac880a0506565b6c053329dd46bd1ca0f51329fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b51e9a5097071cbd9cce6b11f3bc5b22facc35f", "chunk": "diff --git a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\nindex 70d14c2c1..5650c03a8 100644\n--- a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n+++ b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n\n@@ -165,8 +165,8 @@ public final class CoapContext extends MapBasedTelemetryExecutionContext {\n      *\n      * @param vertx The vert.x instance to set the timer on.\n      * @param tenant The tenant that the device belongs to which the request being processed originates from.\n-     * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n-     *            response, {@code 0}, always use separate response.\n+     * @param timeoutMillis The number of milliseconds to wait for a separate ACK if no tenant specific value\n+     *            has been configured. {@code -1}, never use separate response, {@code 0}, always use separate response.\n      * @throws NullPointerException if vertx or tenant are {@code null}.\n      */\n     public void startAcceptTimer(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcxMDMxMQ==", "url": "https://github.com/eclipse/hono/pull/2145#discussion_r481710311", "bodyText": "Given a JSON string with the \"timeoutToAck\" value set to something <= Integer.MAX_VALUE, this will lead to a ClassCastException because the Map value will be an Integer, not a Long. Using the primitive long type for the cast would work.\nBesides that, I think it would be better to deal with a possible configuration error here, the \"timeoutToAck\" value being defined as a String for example. For the standard TenantObject fields, we deal with that gracefully, catching ClassCastExceptions via JsonHelper.getValue. I think for extension values, we should do the same, so that there can't be any ClassCastException thrown here.", "author": "calohmn", "createdAt": "2020-09-02T05:15:37Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java", "diffHunk": "@@ -158,24 +159,37 @@ public String getAuthId() {\n     /**\n      * Sets a timer to trigger the sending of a separate ACK to a device.\n      * <p>\n+     * This method first tries to find a {@value CoapConstants#TIMEOUT_TO_ACK} property value\n+     * in the tenant's CoAP adapter configuration.\n+     * If no such property is found, the value given in the timeoutMillis parameter is used instead.\n      *\n-     * @param vertx Vertx to schedule the timer\n+     * @param vertx The vert.x instance to set the timer on.\n+     * @param tenant The tenant that the device belongs to which the request being processed originates from.\n      * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n      *            response, {@code 0}, always use separate response.\n+     * @throws NullPointerException if vertx or tenant are {@code null}.\n      */\n     public void startAcceptTimer(\n             final Vertx vertx,\n+            final TenantObject tenant,\n             final long timeoutMillis) {\n \n+        Objects.requireNonNull(vertx, \"vert.x\");\n+        Objects.requireNonNull(\"tenant\");\n+\n+        final long ackTimeout = Optional.ofNullable(tenant.getAdapter(Constants.PROTOCOL_ADAPTER_TYPE_COAP))\n+                .map(config -> (Long) config.getExtensions().get(CoapConstants.TIMEOUT_TO_ACK))", "originalCommit": "ac880a0506565b6c053329dd46bd1ca0f51329fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b51e9a5097071cbd9cce6b11f3bc5b22facc35f", "chunk": "diff --git a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\nindex 70d14c2c1..5650c03a8 100644\n--- a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n+++ b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n\n@@ -165,8 +165,8 @@ public final class CoapContext extends MapBasedTelemetryExecutionContext {\n      *\n      * @param vertx The vert.x instance to set the timer on.\n      * @param tenant The tenant that the device belongs to which the request being processed originates from.\n-     * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n-     *            response, {@code 0}, always use separate response.\n+     * @param timeoutMillis The number of milliseconds to wait for a separate ACK if no tenant specific value\n+     *            has been configured. {@code -1}, never use separate response, {@code 0}, always use separate response.\n      * @throws NullPointerException if vertx or tenant are {@code null}.\n      */\n     public void startAcceptTimer(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyMDg2Nw==", "url": "https://github.com/eclipse/hono/pull/2145#discussion_r481720867", "bodyText": "\"[...] to wait for a separate ACK, if not configured for the tenant.\"", "author": "calohmn", "createdAt": "2020-09-02T05:26:32Z", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java", "diffHunk": "@@ -158,24 +159,37 @@ public String getAuthId() {\n     /**\n      * Sets a timer to trigger the sending of a separate ACK to a device.\n      * <p>\n+     * This method first tries to find a {@value CoapConstants#TIMEOUT_TO_ACK} property value\n+     * in the tenant's CoAP adapter configuration.\n+     * If no such property is found, the value given in the timeoutMillis parameter is used instead.\n      *\n-     * @param vertx Vertx to schedule the timer\n+     * @param vertx The vert.x instance to set the timer on.\n+     * @param tenant The tenant that the device belongs to which the request being processed originates from.\n      * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n      *            response, {@code 0}, always use separate response.", "originalCommit": "ac880a0506565b6c053329dd46bd1ca0f51329fd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6b51e9a5097071cbd9cce6b11f3bc5b22facc35f", "chunk": "diff --git a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\nindex 70d14c2c1..5650c03a8 100644\n--- a/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n+++ b/adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapContext.java\n\n@@ -165,8 +165,8 @@ public final class CoapContext extends MapBasedTelemetryExecutionContext {\n      *\n      * @param vertx The vert.x instance to set the timer on.\n      * @param tenant The tenant that the device belongs to which the request being processed originates from.\n-     * @param timeoutMillis The number of milliseconds to wait for a separate ACK. {@code -1}, never use separate\n-     *            response, {@code 0}, always use separate response.\n+     * @param timeoutMillis The number of milliseconds to wait for a separate ACK if no tenant specific value\n+     *            has been configured. {@code -1}, never use separate response, {@code 0}, always use separate response.\n      * @throws NullPointerException if vertx or tenant are {@code null}.\n      */\n     public void startAcceptTimer(\n"}}, {"oid": "6b51e9a5097071cbd9cce6b11f3bc5b22facc35f", "url": "https://github.com/eclipse/hono/commit/6b51e9a5097071cbd9cce6b11f3bc5b22facc35f", "message": "Fix parameter value handling, typos\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>", "committedDate": "2020-09-02T06:46:57Z", "type": "commit"}]}