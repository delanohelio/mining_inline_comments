{"pr_number": 1830, "pr_title": "Extend tracing with provsion to accept message and error as arguments", "pr_createdAt": "2020-03-11T17:29:05Z", "pr_url": "https://github.com/eclipse/hono/pull/1830", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzMzAyMA==", "url": "https://github.com/eclipse/hono/pull/1830#discussion_r391433020", "bodyText": "wouldn't it make more sense to allow any one of them to be null and then just log the non-null argument?", "author": "sophokles73", "createdAt": "2020-03-12T07:04:46Z", "path": "core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java", "diffHunk": "@@ -159,6 +159,28 @@ public static void logError(final Span span, final String message) {\n         }\n     }\n \n+    /**\n+     * Marks an <em>OpenTracing</em> span as erroneous, logs a message and an error.\n+     * <p>\n+     * This method does <em>not</em> finish the span.\n+     *\n+     * @param span The span to mark.\n+     * @param message The message to log on the span.\n+     * @param error The error to log on the span.\n+     * @throws NullPointerException if message or error is {@code null}.", "originalCommit": "247f6cdaf8903c2247418685d8496358b1dd418b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2MzMxNg==", "url": "https://github.com/eclipse/hono/pull/1830#discussion_r391463316", "bodyText": "\ud83d\udc4d  sounds good.", "author": "kaniyan", "createdAt": "2020-03-12T08:27:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzMzAyMA=="}], "type": "inlineReview", "revised_code": {"commit": "e0e296aad3326fd83e197970e6441315079fc2a2", "chunk": "diff --git a/core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java b/core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java\nindex c7294397b..171361c6b 100644\n--- a/core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java\n+++ b/core/src/main/java/org/eclipse/hono/tracing/TracingHelper.java\n\n@@ -167,16 +180,19 @@ public final class TracingHelper {\n      * @param span The span to mark.\n      * @param message The message to log on the span.\n      * @param error The error to log on the span.\n-     * @throws NullPointerException if message or error is {@code null}.\n+     * @throws NullPointerException if message and error are {@code null}.\n      */\n     public static void logError(final Span span, final String message, final Throwable error) {\n         if (span != null) {\n-            Objects.requireNonNull(message);\n-            Objects.requireNonNull(error);\n+            if (message == null && error == null) {\n+                throw new NullPointerException(\"Atleast message or error must not be null\");\n+            }\n             final Map<String, Object> items = new HashMap<>(3);\n-            items.put(Fields.MESSAGE, message);\n             items.put(Fields.EVENT, Tags.ERROR.getKey());\n-            items.put(Fields.ERROR_OBJECT, error);\n+            Optional.ofNullable(message)\n+                    .ifPresent(ok -> items.put(Fields.MESSAGE, message));\n+            Optional.ofNullable(error)\n+                    .ifPresent(ok -> items.put(Fields.ERROR_OBJECT, error));\n             logError(span, items);\n         }\n     }\n"}}, {"oid": "e0e296aad3326fd83e197970e6441315079fc2a2", "url": "https://github.com/eclipse/hono/commit/e0e296aad3326fd83e197970e6441315079fc2a2", "message": "Improve tracing by adding a method that accepts message and error as arguments and logs them.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-03-12T08:52:47Z", "type": "commit"}, {"oid": "e0e296aad3326fd83e197970e6441315079fc2a2", "url": "https://github.com/eclipse/hono/commit/e0e296aad3326fd83e197970e6441315079fc2a2", "message": "Improve tracing by adding a method that accepts message and error as arguments and logs them.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-03-12T08:52:47Z", "type": "forcePushed"}]}