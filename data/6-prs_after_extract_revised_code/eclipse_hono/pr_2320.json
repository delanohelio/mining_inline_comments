{"pr_number": 2320, "pr_title": "[#2288] Add integration tests verifying forwarding of QoS level in downstream messages", "pr_createdAt": "2020-11-23T12:22:17Z", "pr_url": "https://github.com/eclipse/hono/pull/2320", "timeline": [{"oid": "87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "url": "https://github.com/eclipse/hono/commit/87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-23T12:50:42Z", "type": "forcePushed"}, {"oid": "a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "url": "https://github.com/eclipse/hono/commit/a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-23T13:21:18Z", "type": "forcePushed"}, {"oid": "50f04d004a00fa64d388dd105405113b897775be", "url": "https://github.com/eclipse/hono/commit/50f04d004a00fa64d388dd105405113b897775be", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-23T14:17:20Z", "type": "forcePushed"}, {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "url": "https://github.com/eclipse/hono/commit/11e3ff7059707b89e796039f9cfc881d04bcdac9", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-23T15:28:21Z", "type": "commit"}, {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "url": "https://github.com/eclipse/hono/commit/11e3ff7059707b89e796039f9cfc881d04bcdac9", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-23T15:28:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMjQ0NA==", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528802444", "bodyText": "Note that there was a code change which leads to a different behaviour in Hono's AMQP adapter in 1.5.:\nPreviously the message was accepted (and the QoS was ignored), now it is rejected.\nIt's not specified as far as I can see how the adapter will react on this, but this may impact clients if they had accidentally set a qos-level HTTP header for events to AT_MOST_ONCE.", "author": "fkaltner", "createdAt": "2020-11-23T15:49:19Z", "path": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "diffHunk": "@@ -52,4 +63,37 @@ protected void assertAdditionalMessageProperties(final Message msg) {\n \n         assertThat(msg.isDurable()).isTrue();\n     }\n+\n+    /**\n+     * Checks an event with an unsupported device QoS level is rejected.\n+     *\n+     * @param ctx The test context.\n+     *\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testEventIsRejectedForUnsupportedQosLevel(final VertxTestContext ctx) throws InterruptedException {\n+        final VertxTestContext setup = new VertxTestContext();\n+        final Tenant tenant = new Tenant();\n+        final MultiMap requestHeaders = MultiMap.caseInsensitiveMultiMap()\n+                .add(HttpHeaders.CONTENT_TYPE, \"text/plain\")\n+                .add(HttpHeaders.AUTHORIZATION, authorization)\n+                .add(HttpHeaders.ORIGIN, ORIGIN_URI)\n+                .add(Constants.HEADER_QOS_LEVEL, String.valueOf(QoS.AT_MOST_ONCE.ordinal()));\n+\n+        helper.registry.addDeviceForTenant(tenantId, tenant, deviceId, PWD).onComplete(setup.completing());\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        if (setup.failed()) {\n+            ctx.failNow(setup.causeOfFailure());\n+            return;\n+        }\n+\n+        httpClient.create(\n+                getEndpointUri(),\n+                Buffer.buffer(\"hello\"),\n+                requestHeaders,\n+                ResponsePredicate.status(HttpURLConnection.HTTP_BAD_REQUEST))", "originalCommit": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMzgwMg==", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528823802", "bodyText": "you mean HTTP adapter, right?", "author": "sophokles73", "createdAt": "2020-11-23T16:13:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMjQ0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1MDYxOQ==", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r529250619", "bodyText": "Yes, of course \ud83d\ude05 Sorry for the confusion.", "author": "fkaltner", "createdAt": "2020-11-24T07:20:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMjQ0NA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyNDU2MQ==", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528824561", "bodyText": "please revert this change, we are already applying a factor > 1 to this value when running on test environment", "author": "sophokles73", "createdAt": "2020-11-23T16:14:22Z", "path": "tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java", "diffHunk": "@@ -73,7 +73,7 @@\n     /**\n      * The default number of milliseconds to wait for a response to an AMQP 1.0 performative.\n      */\n-    public static final int DEFAULT_AMQP_TIMEOUT = 400;\n+    public static final int DEFAULT_AMQP_TIMEOUT = 1000;", "originalCommit": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d6f6b1cb9c22df9856b4f3ec45604a5e22253a89", "chunk": "diff --git a/tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java b/tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java\nindex 4080f3fe9..bd6ad9698 100644\n--- a/tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java\n+++ b/tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java\n\n@@ -73,7 +73,7 @@ public final class IntegrationTestSupport {\n     /**\n      * The default number of milliseconds to wait for a response to an AMQP 1.0 performative.\n      */\n-    public static final int DEFAULT_AMQP_TIMEOUT = 1000;\n+    public static final int DEFAULT_AMQP_TIMEOUT = 400;\n     /**\n      * The default port exposed by the AMQP adapter.\n      */\n"}}, {"oid": "d6f6b1cb9c22df9856b4f3ec45604a5e22253a89", "url": "https://github.com/eclipse/hono/commit/d6f6b1cb9c22df9856b4f3ec45604a5e22253a89", "message": "Review suggestions:\n- Reverting change to AMQP_TIMEOUT\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-11-24T07:22:19Z", "type": "commit"}]}