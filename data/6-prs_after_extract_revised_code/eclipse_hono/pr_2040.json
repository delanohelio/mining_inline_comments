{"pr_number": 2040, "pr_title": "[#2026] Renaming config property for ACK timeout of MQTT adapter.", "pr_createdAt": "2020-06-19T11:58:01Z", "pr_url": "https://github.com/eclipse/hono/pull/2040", "timeline": [{"oid": "aa73bd210d508a4cbb189e579310771fba7498bd", "url": "https://github.com/eclipse/hono/commit/aa73bd210d508a4cbb189e579310771fba7498bd", "message": "[#2026] Renaming config property for ACK timeout of MQTT adapter.\n\nThe new property is called \"HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\" which will replace the current \"HONO_MQTT_COMMAND_ACK_TIMEOUT\" property. This is done in order to provide an abstraction for the configuration of protocols using a bidirectional connection (i.e. MQTT and AMQP).\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-19T11:52:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MTI2Mg==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r444941262", "bodyText": "This method doesn't seem to be used. I would have expected it to be used in the place that up til now getCommandAckTimeout() was used in (i.e. in CommandSubscriptionsManager.startTimer).\nFor backwards compatibility, the commandAckTimeout value should still be used if sendMessageToDeviceTimeout isn't set.\nBut then there is a conflict with using ClientConfigProperties#getSendMessageTimeout() as default for sendMessageToDeviceTimeout. That means that assigning the default value of sendMessageToDeviceTimeout in the constructor would have to be changed (in favor of applying the order of precedence of the 3 possible values in the getSendMessageToDeviceTimeout method above).\nBut, I now think that using the sendMessageTimeout value of the messaging configuration properties as default value might be too confusing here after all. It's also the first time that we have properties of different endpoints influence one another. And also from the constructor signature it doesn't become clear, which actual ClientConfigProperties are to be used here.\nI think, for the time being (until we have an extra set of some default properties), we should just use the 1 second actual default value of sendMessageTimeout as default for sendMessageToDeviceTimeout, not using the messaging client properties here. WDYT?", "author": "calohmn", "createdAt": "2020-06-24T14:35:40Z", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java", "diffHunk": "@@ -49,13 +66,49 @@ public final int getCommandAckTimeout() {\n      * <p>\n      * The default value is {@link #DEFAULT_COMMAND_ACK_TIMEOUT}.\n      *\n+     * @deprecated Use {@link #setSendMessageToDeviceTimeout(long)} ()} instead.\n+     *\n      * @param timeout The time out in milliseconds.\n      * @throws IllegalArgumentException if the timeout is negative.\n      */\n+    @Deprecated(forRemoval = true)\n     public final void setCommandAckTimeout(final int timeout) {\n         if (timeout < 0) {\n             throw new IllegalArgumentException(\"timeout must not be negative\");\n         }\n         this.commandAckTimeout = timeout;\n     }\n+\n+    /**\n+     * Gets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * <p>\n+     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * within this time limit, then the command is settled with the <em>released</em> outcome.\n+     * <p>\n+     * The default value of this property is {@link ClientConfigProperties#getSendMessageTimeout()}.\n+     *\n+     * @return The time out in milliseconds.\n+     */\n+    public long getSendMessageToDeviceTimeout() {\n+        return sendMessageToDeviceTimeout;\n+    }", "originalCommit": "aa73bd210d508a4cbb189e579310771fba7498bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0NzQyNQ==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r444947425", "bodyText": "Well, actually I found it confusing when I implemented it but I blamed it on me working on my first issue on Hono.\nJust to make sure I got you right: we would remove the reference to ClientConfigProperties completely then from the constructor arguments (meaning not only in the MQTT adapter but as well in the AMQP adapter)?", "author": "fkaltner", "createdAt": "2020-06-24T14:43:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MTI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA3NzYwMA==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r445077600", "bodyText": "Yes, and in the KuraAdapterProperties.", "author": "calohmn", "createdAt": "2020-06-24T18:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MTI2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3Njk1OA==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r445476958", "bodyText": "Okay, I reverted my changes and added a new method which will determine the effective timeout property which is now used in CommandSubscriptionsManager.startTimer", "author": "fkaltner", "createdAt": "2020-06-25T11:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk0MTI2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "8b1874005b06308ba15cdb365943816b5540d356", "chunk": "diff --git a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\nindex cb3adb519..66cb2f320 100644\n--- a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n+++ b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n\n@@ -85,7 +77,7 @@ public class MqttProtocolAdapterProperties extends ProtocolAdapterProperties {\n      * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n      * within this time limit, then the command is settled with the <em>released</em> outcome.\n      * <p>\n-     * The default value of this property is {@link ClientConfigProperties#getSendMessageTimeout()}.\n+     * The default value of this property is {@link #DEFAULT_SEND_MESSAGE_TO_DEVICE_TIMEOUT}.\n      *\n      * @return The time out in milliseconds.\n      */\n"}}, {"oid": "8b1874005b06308ba15cdb365943816b5540d356", "url": "https://github.com/eclipse/hono/commit/8b1874005b06308ba15cdb365943816b5540d356", "message": "[#2026] Adding a new configuration property for MQTT adapter called \"HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\" which will replace the current \"HONO_MQTT_COMMAND_ACK_TIMEOUT\" property. This is done in order to provide an abstraction for the configuration of protocols using a bidirectional connection (i.e. MQTT and AMQP).\n\nThis fixes #2026\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-25T10:58:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc3NDMwNQ==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r445774305", "bodyText": "Nit pick: Allowing a value of 0 here will lead to an IllegalArgumentException in vertx.setTimer(). If we want to allow 0  here (as in the AmqpAdapterProperties), we should skip creating a vertx timer in that case.\n(Using 0 here of course makes little sense and should possibly only be done for debugging slow-responding devices in a test system.)", "author": "calohmn", "createdAt": "2020-06-25T18:58:49Z", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java", "diffHunk": "@@ -49,13 +58,67 @@ public final int getCommandAckTimeout() {\n      * <p>\n      * The default value is {@link #DEFAULT_COMMAND_ACK_TIMEOUT}.\n      *\n+     * @deprecated Use {@link #setSendMessageToDeviceTimeout(long)} ()} instead.\n+     *\n      * @param timeout The time out in milliseconds.\n      * @throws IllegalArgumentException if the timeout is negative.\n      */\n+    @Deprecated(forRemoval = true)\n     public final void setCommandAckTimeout(final int timeout) {\n         if (timeout < 0) {\n             throw new IllegalArgumentException(\"timeout must not be negative\");\n         }\n         this.commandAckTimeout = timeout;\n     }\n+\n+    /**\n+     * Gets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * <p>\n+     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * within this time limit, then the command is settled with the <em>released</em> outcome.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_SEND_MESSAGE_TO_DEVICE_TIMEOUT}.\n+     *\n+     * @return The time out in milliseconds.\n+     */\n+    public long getSendMessageToDeviceTimeout() {\n+        return sendMessageToDeviceTimeout;\n+    }\n+\n+    /**\n+     * Sets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * <p>\n+     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * within this time limit, then the command is settled with the <em>released</em> outcome.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_SEND_MESSAGE_TO_DEVICE_TIMEOUT}.\n+     *\n+     * @param sendMessageToDeviceTimeout The time out in milliseconds.\n+     * @throws IllegalArgumentException if the timeout is negative.\n+     */\n+    public void setSendMessageToDeviceTimeout(final long sendMessageToDeviceTimeout) {\n+        if (sendMessageToDeviceTimeout < 0) {", "originalCommit": "8b1874005b06308ba15cdb365943816b5540d356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzOTU5NQ==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r446039595", "bodyText": "I took a look at VertxBasedAmqpProtocolAdapter. Since we do support a value of 0 there and intend to have an abstraction over protocols I think it makes sense to implement the same behavior for MQTT as you suggested \ud83d\udc4d", "author": "fkaltner", "createdAt": "2020-06-26T08:21:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc3NDMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8b70b6da6ef1663f14c9b8a0309ffb65cb0b84fd", "chunk": "diff --git a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\nindex 66cb2f320..5b128c06d 100644\n--- a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n+++ b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n\n@@ -51,16 +51,16 @@ public class MqttProtocolAdapterProperties extends ProtocolAdapterProperties {\n     }\n \n     /**\n-     * Sets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * Sets the waiting for acknowledgement timeout in milliseconds for commands published with QoS 1.\n      * <p>\n-     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * This timeout is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n      * within this time limit, then the command is settled with the <em>released</em> outcome.\n      * <p>\n      * The default value is {@link #DEFAULT_COMMAND_ACK_TIMEOUT}.\n      *\n      * @deprecated Use {@link #setSendMessageToDeviceTimeout(long)} ()} instead.\n      *\n-     * @param timeout The time out in milliseconds.\n+     * @param timeout The timeout in milliseconds.\n      * @throws IllegalArgumentException if the timeout is negative.\n      */\n     @Deprecated(forRemoval = true)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc3NDk2Ng==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r445774966", "bodyText": "Use timeout as one word instead? Otherwise it looks a bit strange (also in the other places in the javadocs of this class).", "author": "calohmn", "createdAt": "2020-06-25T19:00:02Z", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java", "diffHunk": "@@ -49,13 +58,67 @@ public final int getCommandAckTimeout() {\n      * <p>\n      * The default value is {@link #DEFAULT_COMMAND_ACK_TIMEOUT}.\n      *\n+     * @deprecated Use {@link #setSendMessageToDeviceTimeout(long)} ()} instead.\n+     *\n      * @param timeout The time out in milliseconds.\n      * @throws IllegalArgumentException if the timeout is negative.\n      */\n+    @Deprecated(forRemoval = true)\n     public final void setCommandAckTimeout(final int timeout) {\n         if (timeout < 0) {\n             throw new IllegalArgumentException(\"timeout must not be negative\");\n         }\n         this.commandAckTimeout = timeout;\n     }\n+\n+    /**\n+     * Gets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * <p>\n+     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * within this time limit, then the command is settled with the <em>released</em> outcome.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_SEND_MESSAGE_TO_DEVICE_TIMEOUT}.\n+     *\n+     * @return The time out in milliseconds.\n+     */\n+    public long getSendMessageToDeviceTimeout() {\n+        return sendMessageToDeviceTimeout;\n+    }\n+\n+    /**\n+     * Sets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.", "originalCommit": "8b1874005b06308ba15cdb365943816b5540d356", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MDAwMw==", "url": "https://github.com/eclipse/hono/pull/2040#discussion_r446040003", "bodyText": "Yep, I also stumbled upon this.", "author": "fkaltner", "createdAt": "2020-06-26T08:22:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc3NDk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "8b70b6da6ef1663f14c9b8a0309ffb65cb0b84fd", "chunk": "diff --git a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\nindex 66cb2f320..5b128c06d 100644\n--- a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n+++ b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/MqttProtocolAdapterProperties.java\n\n@@ -51,16 +51,16 @@ public class MqttProtocolAdapterProperties extends ProtocolAdapterProperties {\n     }\n \n     /**\n-     * Sets the waiting for acknowledgement time out in milliseconds for commands published with QoS 1.\n+     * Sets the waiting for acknowledgement timeout in milliseconds for commands published with QoS 1.\n      * <p>\n-     * This time out is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n+     * This timeout is used by the MQTT adapter for commands published with QoS 1. If there is no acknowledgement\n      * within this time limit, then the command is settled with the <em>released</em> outcome.\n      * <p>\n      * The default value is {@link #DEFAULT_COMMAND_ACK_TIMEOUT}.\n      *\n      * @deprecated Use {@link #setSendMessageToDeviceTimeout(long)} ()} instead.\n      *\n-     * @param timeout The time out in milliseconds.\n+     * @param timeout The timeout in milliseconds.\n      * @throws IllegalArgumentException if the timeout is negative.\n      */\n     @Deprecated(forRemoval = true)\n"}}, {"oid": "8b70b6da6ef1663f14c9b8a0309ffb65cb0b84fd", "url": "https://github.com/eclipse/hono/commit/8b70b6da6ef1663f14c9b8a0309ffb65cb0b84fd", "message": "[#2026] Adding config property HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\n\nAdding a new configuration property for MQTT adapter called \"HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\" which will replace the current \"HONO_MQTT_COMMAND_ACK_TIMEOUT\" property. This is done in order to provide an abstraction for the configuration of protocols using a bidirectional connection (i.e. MQTT and AMQP).\n\nThis fixes #2026\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-26T08:38:52Z", "type": "commit"}, {"oid": "9520b0e4ffa745414c9dd273aba36a249c679934", "url": "https://github.com/eclipse/hono/commit/9520b0e4ffa745414c9dd273aba36a249c679934", "message": "[#2026] Adding config property HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\n\nAdding a new configuration property for MQTT adapter called \"HONO_MQTT_SEND_MESSAGE_TO_DEVICE_TIMEOUT\" which will replace the current \"HONO_MQTT_COMMAND_ACK_TIMEOUT\" property. This is done in order to provide an abstraction for the configuration of protocols using a bidirectional connection (i.e. MQTT and AMQP).\n\nThis fixes #2026\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-07-01T06:13:20Z", "type": "commit"}]}