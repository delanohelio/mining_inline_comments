{"pr_number": 2256, "pr_title": "Use void future in client removeCommandHandlingAdapterInstance()", "pr_createdAt": "2020-10-20T04:48:38Z", "pr_url": "https://github.com/eclipse/hono/pull/2256", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzQ1NA==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263454", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED) ?", "author": "sophokles73", "createdAt": "2020-10-20T07:18:08Z", "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "diffHunk": "@@ -276,15 +273,16 @@ public void testRemoveCommandHandlingAdapterInstanceFailsForOtherDevice(final Ve\n         info.setCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, adapterInstance, null, span)\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, \"otherDevice\", adapterInstance, span);\n-        }).onComplete(ctx.succeeding(result -> ctx.verify(() -> {\n-            assertThat(result).isFalse();\n+        }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n+            assertThat(t).isInstanceOf(ServiceInvocationException.class);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java b/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\nindex 78fd3baec..3d47a9d48 100644\n--- a/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\n+++ b/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\n\n@@ -274,8 +272,7 @@ class CacheBasedDeviceConnectionInfoTest {\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, \"otherDevice\", adapterInstance, span);\n         }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n-            assertThat(t).isInstanceOf(ServiceInvocationException.class);\n-            assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n+            assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n             ctx.completeNow();\n         })));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzYxNg==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263616", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED)  ?", "author": "sophokles73", "createdAt": "2020-10-20T07:18:26Z", "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "diffHunk": "@@ -295,8 +293,9 @@ public void testRemoveCommandHandlingAdapterInstanceFailsForOtherAdapterInstance\n         info.setCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, adapterInstance, null, span)\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, \"otherAdapterInstance\", span);\n-        }).onComplete(ctx.succeeding(result -> ctx.verify(() -> {\n-            assertThat(result).isFalse();\n+        }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n+            assertThat(t).isInstanceOf(ServiceInvocationException.class);\n+            assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java b/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\nindex 78fd3baec..3d47a9d48 100644\n--- a/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\n+++ b/client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java\n\n@@ -294,8 +291,7 @@ class CacheBasedDeviceConnectionInfoTest {\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, \"otherAdapterInstance\", span);\n         }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n-            assertThat(t).isInstanceOf(ServiceInvocationException.class);\n-            assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n+            assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n             ctx.completeNow();\n         })));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzgwNQ==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263805", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED)", "author": "sophokles73", "createdAt": "2020-10-20T07:18:48Z", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -351,18 +350,18 @@ public void testRemoveCommandHandlingAdapterInstanceForNotFoundEntry(final Vertx\n \n         // WHEN removing the command handling adapter instance\n         client.removeCommandHandlingAdapterInstance(\"deviceId\", \"gatewayId\", span.context())\n-                .onComplete(ctx.succeeding(removed -> {\n+                .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n                         // THEN the response has been handled and the span is finished\n-                        assertThat(removed).isFalse();\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\nindex d3df76438..822e894ed 100644\n--- a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n+++ b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n\n@@ -353,7 +353,7 @@ public class DeviceConnectionClientImplTest {\n                 .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n                         // THEN the response has been handled and the span is finished\n-                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n+                        assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);\n                         verify(span).finish();\n                     });\n                     ctx.completeNow();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2Mzk2OA==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263968", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "author": "sophokles73", "createdAt": "2020-10-20T07:19:06Z", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -415,8 +414,8 @@ public void testGetLastKnownGatewayForDeviceFailsWithRejectedRequest(final Vertx\n         // WHEN getting last known gateway information\n         client.getLastKnownGatewayForDevice(\"deviceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\nindex d3df76438..822e894ed 100644\n--- a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n+++ b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n\n@@ -415,7 +415,7 @@ public class DeviceConnectionClientImplTest {\n         client.getLastKnownGatewayForDevice(\"deviceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n-                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n+                        assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                         // THEN the invocation fails and the span is marked as erroneous\n                         verify(span).setTag(eq(Tags.ERROR.getKey()), eq(Boolean.TRUE));\n                         // and the span is finished\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDEwMQ==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264101", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "author": "sophokles73", "createdAt": "2020-10-20T07:19:19Z", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -481,8 +480,8 @@ public void testSetCommandHandlingAdapterInstanceFailsWithRejectedRequest(final\n         // WHEN setting the command handling adapter instance\n         client.setCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", null, span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\nindex d3df76438..822e894ed 100644\n--- a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n+++ b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n\n@@ -481,7 +481,7 @@ public class DeviceConnectionClientImplTest {\n         client.setCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", null, span.context())\n                 .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n-                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n+                        assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                         // THEN the invocation fails and the span is marked as erroneous\n                         verify(span).setTag(eq(Tags.ERROR.getKey()), eq(Boolean.TRUE));\n                         // and the span is finished\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDE1MQ==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264151", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "author": "sophokles73", "createdAt": "2020-10-20T07:19:24Z", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -514,8 +513,8 @@ public void testRemoveCommandHandlingAdapterInstanceFailsWithRejectedRequest(fin\n         // WHEN removing the command handling adapter instance\n         client.removeCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\nindex d3df76438..822e894ed 100644\n--- a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n+++ b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n\n@@ -514,7 +514,7 @@ public class DeviceConnectionClientImplTest {\n         client.removeCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n-                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n+                        assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                         // THEN the invocation fails and the span is marked as erroneous\n                         verify(span).setTag(eq(Tags.ERROR.getKey()), eq(Boolean.TRUE));\n                         // and the span is finished\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDIxNA==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264214", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "author": "sophokles73", "createdAt": "2020-10-20T07:19:32Z", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -547,8 +546,8 @@ public void testGetCommandHandlingAdapterInstancesFailsWithRejectedRequest(final\n         // WHEN getting the command handling adapter instances\n         client.getCommandHandlingAdapterInstances(\"deviceId\", Collections.emptyList(), span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "chunk": "diff --git a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\nindex d3df76438..822e894ed 100644\n--- a/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n+++ b/client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java\n\n@@ -547,7 +547,7 @@ public class DeviceConnectionClientImplTest {\n         client.getCommandHandlingAdapterInstances(\"deviceId\", Collections.emptyList(), span.context())\n                 .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n-                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n+                        assertThat(ServiceInvocationException.extractStatusCode(t)).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                         // THEN the invocation fails and the span is marked as erroneous\n                         verify(span).setTag(eq(Tags.ERROR.getKey()), eq(Boolean.TRUE));\n                         // and the span is finished\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTIzNA==", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508265234", "bodyText": "the JavaDoc should be adapted as well ...", "author": "sophokles73", "createdAt": "2020-10-20T07:21:15Z", "path": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceConnectionApiTests.java", "diffHunk": "@@ -201,15 +201,12 @@ public void testRemoveCommandHandlingAdapterInstanceSucceeds(final VertxTestCont\n                         .map(client))\n                 // then remove it\n                 .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstance, null))\n-                .onComplete(ctx.succeeding(result -> {\n-                    ctx.verify(() -> assertThat(result).isTrue());\n-                    ctx.completeNow();\n-                }));\n+                .onComplete(ctx.completing());", "originalCommit": "f2cae320d74235fd80e367ddcddc9909f307239b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "url": "https://github.com/eclipse/hono/commit/59725aa4da81eea7a33af36ff6a739b1960e7b09", "message": "Use void future in client removeCommandHandlingAdapterInstance().\n\nThis reverts #1926 and makes the method behave according to\nthe API spec again, returning a failed Future if the entry\nwasn't removed.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-20T08:03:31Z", "type": "commit"}, {"oid": "59725aa4da81eea7a33af36ff6a739b1960e7b09", "url": "https://github.com/eclipse/hono/commit/59725aa4da81eea7a33af36ff6a739b1960e7b09", "message": "Use void future in client removeCommandHandlingAdapterInstance().\n\nThis reverts #1926 and makes the method behave according to\nthe API spec again, returning a failed Future if the entry\nwasn't removed.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-20T08:03:31Z", "type": "forcePushed"}]}