{"pr_number": 2358, "pr_title": "#2053 implicit device registration file registry", "pr_createdAt": "2020-12-09T12:08:03Z", "pr_url": "https://github.com/eclipse/hono/pull/2358", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0MjkwMw==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539342903", "bodyText": "not needed here", "author": "calohmn", "createdAt": "2020-12-09T14:18:06Z", "path": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java", "diffHunk": "@@ -196,6 +198,88 @@ public void testCreateDeviceRejectsInvalidPayload() {\n         verify(service, never()).createDevice(anyString(), any(Optional.class), any(Device.class), any(Span.class));\n     }\n \n+    /**\n+     * Makes sure that status properties are ignored when creating a device management via the REST API.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testCreateDeviceIgnoresStatus() {\n+\n+        final JsonObject json = new JsonObject()\n+                .put(RegistryManagementConstants.FIELD_ENABLED, true)\n+                .put(RegistryManagementConstants.FIELD_STATUS, new JsonObject().put(\"created\", \"foobar\"));\n+        requestBody = json.toBuffer();\n+        final HttpServerResponse response = newResponse();\n+\n+        final HttpServerRequest request = newRequest(\n+                HttpMethod.POST,\n+                \"/v1/devices/mytenant/newdevice\",\n+                requestHeaders,\n+                requestParams,\n+                response);\n+        when(request.getHeader(\"Content-Type\")).thenReturn(\"application/json\");\n+\n+        when(service.createDevice(anyString(), any(Optional.class), any(Device.class), any(Span.class)))\n+                .thenAnswer(invocation -> {\n+                    final Optional<String> deviceId = invocation.getArgument(1);\n+                    return Future.succeededFuture(OperationResult.ok(\n+                            HttpURLConnection.HTTP_CREATED,\n+                            Id.of(deviceId.get()),\n+                            Optional.empty(),\n+                            Optional.empty()));\n+                });\n+\n+        router.handle(request);\n+\n+        verify(response).setStatusCode(HttpURLConnection.HTTP_CREATED);\n+\n+        final ArgumentCaptor<Device> deviceArgumentCaptor = ArgumentCaptor.forClass(Device.class);\n+        verify(service).createDevice(anyString(), any(Optional.class), deviceArgumentCaptor.capture(), any(Span.class));\n+\n+        assertThat(deviceArgumentCaptor.getValue().getStatus()).isNull();\n+    }\n+\n+    /**\n+     * Makes sure that status properties are ignored when updating a device management via the REST API.\n+     */\n+    @SuppressWarnings(\"unchecked\")", "originalCommit": "5a4b36078499017859323746a4e44e8809b6fad8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3e3253c39cc35033827df862c75d1abc4145c82", "chunk": "diff --git a/services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java b/services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java\nindex e8918532a..8da39183a 100644\n--- a/services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java\n+++ b/services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java\n\n@@ -242,7 +242,6 @@ public class DelegatingDeviceManagementHttpEndpointTest {\n     /**\n      * Makes sure that status properties are ignored when updating a device management via the REST API.\n      */\n-    @SuppressWarnings(\"unchecked\")\n     @Test\n     public void testUpdateDeviceIgnoresStatus() {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0NDg1Ng==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539344856", "bodyText": "VertxMockSupport.anyHandler() can be used instead of any(Handler.class) to prevent the \"unchecked assignment\" warning.", "author": "calohmn", "createdAt": "2020-12-09T14:20:24Z", "path": "services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java", "diffHunk": "@@ -87,6 +90,21 @@ public void setUp() {\n \n         registrationService = new FileBasedRegistrationService(vertx);\n         registrationService.setConfig(registrationConfig);\n+\n+        final AutoProvisioner autoProvisioner = new AutoProvisioner(registrationService, registrationService);\n+        autoProvisioner.setConfig(new AutoProvisionerConfigProperties());\n+\n+        final DownstreamSenderFactory downstreamSenderFactoryMock = mock(DownstreamSenderFactory.class);\n+        when(downstreamSenderFactoryMock.connect()).thenReturn(Future.succeededFuture());\n+        doAnswer(invocation -> {\n+            final Handler<AsyncResult<Void>> handler = invocation.getArgument(0);\n+            handler.handle(Future.succeededFuture());\n+            return null;\n+        }).when(downstreamSenderFactoryMock).disconnect(any(Handler.class));", "originalCommit": "5a4b36078499017859323746a4e44e8809b6fad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQxODEwNA==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539418104", "bodyText": "Thanks for the hint \ud83d\udc4d", "author": "fkaltner", "createdAt": "2020-12-09T15:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0NDg1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b3e3253c39cc35033827df862c75d1abc4145c82", "chunk": "diff --git a/services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java b/services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java\nindex 235b31f34..3c2e69e2d 100644\n--- a/services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java\n+++ b/services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java\n\n@@ -100,7 +101,7 @@ public class FileBasedRegistrationServiceTest implements RegistrationServiceTest\n             final Handler<AsyncResult<Void>> handler = invocation.getArgument(0);\n             handler.handle(Future.succeededFuture());\n             return null;\n-        }).when(downstreamSenderFactoryMock).disconnect(any(Handler.class));\n+        }).when(downstreamSenderFactoryMock).disconnect(VertxMockSupport.anyHandler());\n \n         autoProvisioner.setDownstreamSenderFactory(downstreamSenderFactoryMock);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NTM1NA==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539365354", "bodyText": "It looks to me as if invoking autoProvisioner.setTracer() and autoProvisioner.setTenantInformationService() is missing here.", "author": "calohmn", "createdAt": "2020-12-09T14:45:23Z", "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java", "diffHunk": "@@ -139,6 +199,13 @@ public FileBasedDeviceBackend deviceBackend(final Vertx vertx) {\n         final FileBasedRegistrationService registrationService = new FileBasedRegistrationService(vertx);\n         registrationService.setConfig(registrationProperties());\n \n+        final AutoProvisioner autoProvisioner = new AutoProvisioner(registrationService, registrationService);\n+        autoProvisioner.setVertx(vertx);\n+        autoProvisioner.setDownstreamSenderFactory(downstreamSenderFactory(vertx));\n+        autoProvisioner.setConfig(autoProvisionerConfigProperties());", "originalCommit": "5a4b36078499017859323746a4e44e8809b6fad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5ODE0MA==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539398140", "bodyText": "Have you tried defining AutoProvisioner as a Bean here instead, to make use of the Autowired annotations in the AutoProvisioner class?", "author": "calohmn", "createdAt": "2020-12-09T15:23:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NTM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI0MDYwMA==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r540240600", "bodyText": "Good catch, thanks! \ud83d\ude04\nIt turned out that the Tracer bean has to be taken from the root application context of the file based device registry and the TenantInformationService wasn't defined in the context so far leading to the NOOP service being used.\nI could define AutoProvisioner as a bean instead, but then it must be refactored not to take any constructors arguments and use setters instead.\nBut as it seems @sophokles73 changed the declaration explicitly to use setters in 17179ad I am wondering if we should do this in the scope of this PR or re-discuss this in a separate issue and change the \"bean-declaration-style\" not just for the beans affected in this PR but for all beans (and for all other registries as well)...", "author": "fkaltner", "createdAt": "2020-12-10T15:03:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NTM1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM5MzY1NA==", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r551393654", "bodyText": "Ok, yes, we can discuss a possible refactoring here once all registry changes have been merged.", "author": "calohmn", "createdAt": "2021-01-04T15:42:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NTM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "b3e3253c39cc35033827df862c75d1abc4145c82", "chunk": "diff --git a/services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java b/services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java\nindex bab9212d8..d51eee54b 100644\n--- a/services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java\n+++ b/services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java\n\n@@ -201,6 +215,7 @@ public class FileBasedServiceConfig {\n \n         final AutoProvisioner autoProvisioner = new AutoProvisioner(registrationService, registrationService);\n         autoProvisioner.setVertx(vertx);\n+        autoProvisioner.setTenantInformationService(tenantInformationService());\n         autoProvisioner.setDownstreamSenderFactory(downstreamSenderFactory(vertx));\n         autoProvisioner.setConfig(autoProvisionerConfigProperties());\n \n"}}, {"oid": "b3e3253c39cc35033827df862c75d1abc4145c82", "url": "https://github.com/eclipse/hono/commit/b3e3253c39cc35033827df862c75d1abc4145c82", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-12-10T08:23:17Z", "type": "forcePushed"}, {"oid": "e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "url": "https://github.com/eclipse/hono/commit/e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-12-10T14:33:47Z", "type": "forcePushed"}, {"oid": "2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "url": "https://github.com/eclipse/hono/commit/2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-12-16T10:18:52Z", "type": "forcePushed"}, {"oid": "7d1ba77f6f7dc8fb68874786daf06b79943bb970", "url": "https://github.com/eclipse/hono/commit/7d1ba77f6f7dc8fb68874786daf06b79943bb970", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-12-16T10:58:07Z", "type": "commit"}, {"oid": "7d1ba77f6f7dc8fb68874786daf06b79943bb970", "url": "https://github.com/eclipse/hono/commit/7d1ba77f6f7dc8fb68874786daf06b79943bb970", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-12-16T10:58:07Z", "type": "forcePushed"}]}