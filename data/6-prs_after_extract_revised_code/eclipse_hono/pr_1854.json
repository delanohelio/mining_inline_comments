{"pr_number": 1854, "pr_title": "Add credential checking and encoding to the abstract service", "pr_createdAt": "2020-03-24T11:45:15Z", "pr_url": "https://github.com/eclipse/hono/pull/1854", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyODI0Mw==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397128243", "bodyText": "does it make sense to allow setting this to null?", "author": "sophokles73", "createdAt": "2020-03-24T12:52:49Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -44,6 +65,11 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n         this.tenantInformationService = tenantInformationService;\n     }\n \n+    @Autowired\n+    public void setPasswordEncoder(final HonoPasswordEncoder passwordEncoder) {\n+        this.passwordEncoder = passwordEncoder;", "originalCommit": "08e8182354ee29c2c20e3706bd3085693215d18c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDIxNw==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397140217", "bodyText": "I added requireNonNull check for tenant information service as well. We can introduce Noop version for folks that don't want to use autowired one.", "author": "dejanb", "createdAt": "2020-03-24T13:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyODI0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0c9897143bd44a9866fe469c549027f366d89c68", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\nindex a79aefe68..416309708 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n\n@@ -58,16 +59,24 @@ public abstract class AbstractCredentialsManagementService implements Credential\n \n     /**\n      * Set tenant information service.\n+     *\n      * @param tenantInformationService The tenant information service.\n+     * @throws NullPointerException if service is {@code null};\n      */\n     @Autowired\n     public void setTenantInformationService(final TenantInformationService tenantInformationService) {\n-        this.tenantInformationService = tenantInformationService;\n+        this.tenantInformationService = Objects.requireNonNull(tenantInformationService);\n     }\n \n+    /**\n+     * Set password encoder.\n+     *\n+     * @param passwordEncoder The password encoder.\n+     * @throws NullPointerException if encoder is {@code null};\n+     */\n     @Autowired\n     public void setPasswordEncoder(final HonoPasswordEncoder passwordEncoder) {\n-        this.passwordEncoder = passwordEncoder;\n+        this.passwordEncoder = Objects.requireNonNull(passwordEncoder);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTQ2Nw==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397129467", "bodyText": "personally, I find it easier to read (and understand) the positive condition, i.e.\nif (needToEncode(credentials)) {\n} else {\n}", "author": "sophokles73", "createdAt": "2020-03-24T12:54:47Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +122,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {", "originalCommit": "08e8182354ee29c2c20e3706bd3085693215d18c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c9897143bd44a9866fe469c549027f366d89c68", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\nindex a79aefe68..416309708 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n\n@@ -125,11 +134,11 @@ public abstract class AbstractCredentialsManagementService implements Credential\n     private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n         // Check if we need to encode passwords\n         if (!needToEncode(credentials)) {\n-            // ... no, so don't fork off a worker task, but inline work\n-            return Future.succeededFuture(checkCredentials(credentials));\n-        } else {\n             // ... yes, encode passwords asynchronously\n             return Futures.executeBlocking(this.vertx, () -> checkCredentials(checkCredentials(credentials)));\n+        } else {\n+            // ... no, so don't fork off a worker task, but inline work\n+            return Future.succeededFuture(checkCredentials(credentials));\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMDU4MA==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397130580", "bodyText": "!Strings.isNullOrEmpty(s.getPasswordPlain())?", "author": "sophokles73", "createdAt": "2020-03-24T12:56:35Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +122,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {\n+            // ... no, so don't fork off a worker task, but inline work\n+            return Future.succeededFuture(checkCredentials(credentials));\n+        } else {\n+            // ... yes, encode passwords asynchronously\n+            return Futures.executeBlocking(this.vertx, () -> checkCredentials(checkCredentials(credentials)));\n+        }\n+    }\n+\n+    /**\n+     * Check if we need to encode any secrets.\n+     *\n+     * @param credentials The credentials to check.\n+     * @return {@code true} is the list contains at least one password which needs to be encoded on the\n+     *         server side.\n+     */\n+    private static boolean needToEncode(final List<CommonCredential> credentials) {\n+        return credentials\n+                .stream()\n+                .filter(PasswordCredential.class::isInstance)\n+                .map(PasswordCredential.class::cast)\n+                .flatMap(c -> c.getSecrets().stream())\n+                .anyMatch(s -> s.getPasswordPlain() != null && !s.getPasswordPlain().isEmpty());", "originalCommit": "08e8182354ee29c2c20e3706bd3085693215d18c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c9897143bd44a9866fe469c549027f366d89c68", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\nindex a79aefe68..416309708 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n\n@@ -125,11 +134,11 @@ public abstract class AbstractCredentialsManagementService implements Credential\n     private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n         // Check if we need to encode passwords\n         if (!needToEncode(credentials)) {\n-            // ... no, so don't fork off a worker task, but inline work\n-            return Future.succeededFuture(checkCredentials(credentials));\n-        } else {\n             // ... yes, encode passwords asynchronously\n             return Futures.executeBlocking(this.vertx, () -> checkCredentials(checkCredentials(credentials)));\n+        } else {\n+            // ... no, so don't fork off a worker task, but inline work\n+            return Future.succeededFuture(checkCredentials(credentials));\n         }\n     }\n \n"}}, {"oid": "0c9897143bd44a9866fe469c549027f366d89c68", "url": "https://github.com/eclipse/hono/commit/0c9897143bd44a9866fe469c549027f366d89c68", "message": "Add credential checking and encoding to the abstract service", "committedDate": "2020-03-24T13:10:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDMyNQ==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397140325", "bodyText": "now you also need to remove the ! ;-)", "author": "sophokles73", "createdAt": "2020-03-24T13:12:41Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +131,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {", "originalCommit": "0c9897143bd44a9866fe469c549027f366d89c68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MjA1MQ==", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397142051", "bodyText": "Gah! thanks :)", "author": "dejanb", "createdAt": "2020-03-24T13:15:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDMyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "e0708b5ebc6a1583f1f849c288eb3fc66c9c8ea3", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\nindex 416309708..c97a30bfc 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java\n\n@@ -133,7 +133,7 @@ public abstract class AbstractCredentialsManagementService implements Credential\n \n     private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n         // Check if we need to encode passwords\n-        if (!needToEncode(credentials)) {\n+        if (needToEncode(credentials)) {\n             // ... yes, encode passwords asynchronously\n             return Futures.executeBlocking(this.vertx, () -> checkCredentials(checkCredentials(credentials)));\n         } else {\n"}}, {"oid": "e0708b5ebc6a1583f1f849c288eb3fc66c9c8ea3", "url": "https://github.com/eclipse/hono/commit/e0708b5ebc6a1583f1f849c288eb3fc66c9c8ea3", "message": "Add credential checking and encoding to the abstract service", "committedDate": "2020-03-24T13:14:24Z", "type": "commit"}, {"oid": "e0708b5ebc6a1583f1f849c288eb3fc66c9c8ea3", "url": "https://github.com/eclipse/hono/commit/e0708b5ebc6a1583f1f849c288eb3fc66c9c8ea3", "message": "Add credential checking and encoding to the abstract service", "committedDate": "2020-03-24T13:14:24Z", "type": "forcePushed"}]}