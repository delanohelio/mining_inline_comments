{"pr_number": 2366, "pr_title": "[#2239] Add OpenAPI spec and prepare base classes for the new tenants search operation", "pr_createdAt": "2020-12-10T17:58:03Z", "pr_url": "https://github.com/eclipse/hono/pull/2366", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjExOQ==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346119", "bodyText": "how about using a copy of the given list in order to prevent (unintended) changes to the result after creation of the SearchResult instance?", "author": "sophokles73", "createdAt": "2020-12-14T12:29:10Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        this.total = total;\n+        this.result = Objects.requireNonNull(result);", "originalCommit": "de7de96dd7053edb0f862174873f7ec0783793d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MzU1Mw==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543173553", "bodyText": "Done", "author": "kaniyan", "createdAt": "2020-12-15T09:17:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\nindex 9513737d2..e489213cb 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\n\n@@ -12,6 +12,7 @@\n  *******************************************************************************/\n package org.eclipse.hono.service.management;\n \n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Objects;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346908", "bodyText": "Do you expect this class to be created from JSON? My understanding is that this will be included in the response body only, right?", "author": "sophokles73", "createdAt": "2020-12-14T12:30:39Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "originalCommit": "de7de96dd7053edb0f862174873f7ec0783793d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MzE5NA==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543173194", "bodyText": "Do you expect this class to be created from JSON?\n\nWe are creating from JSON in the integration tests.", "author": "kaniyan", "createdAt": "2020-12-15T09:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NDUxMg==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543284512", "bodyText": "I see", "author": "sophokles73", "createdAt": "2020-12-15T12:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA=="}], "type": "inlineReview", "revised_code": {"commit": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\nindex 9513737d2..e489213cb 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\n\n@@ -12,6 +12,7 @@\n  *******************************************************************************/\n package org.eclipse.hono.service.management;\n \n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Objects;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODA0MQ==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542348041", "bodyText": "it is up to the ...", "author": "sophokles73", "createdAt": "2020-12-14T12:32:44Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java", "diffHunk": "@@ -65,6 +71,43 @@\n      */\n     Future<OperationResult<Tenant>> readTenant(String tenantId, Span span);\n \n+    /**\n+     * Finds tenants with optional filters, paging and sorting options.\n+     * <p>\n+     * This search operation is considered as optional since it is not required for the normal functioning of Hono and\n+     * is more of a convenient operation. Hence here it is declared as a default method which returns\n+     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is upto the implementors of this interface to offer an", "originalCommit": "de7de96dd7053edb0f862174873f7ec0783793d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MDI3OA==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543170278", "bodyText": "Thanks for pointing out, I have corrected it.", "author": "kaniyan", "createdAt": "2020-12-15T09:12:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODA0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java\nindex 31ee2ba51..1e6146cd0 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java\n\n@@ -76,7 +76,7 @@ public interface TenantManagementService {\n      * <p>\n      * This search operation is considered as optional since it is not required for the normal functioning of Hono and\n      * is more of a convenient operation. Hence here it is declared as a default method which returns\n-     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is upto the implementors of this interface to offer an\n+     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is up to the implementors of this interface to offer an\n      * implementation of this service or not.\n      *\n      * @param pageSize The maximum number of results to include in a response.\n"}}, {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "url": "https://github.com/eclipse/hono/commit/07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "message": "[#2239] Implement review suggestions\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T08:36:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NTE0OQ==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543285149", "bodyText": "how about returning an unmodifiable view on the list instead to prevent (unintended) alterations?", "author": "sophokles73", "createdAt": "2020-12-15T12:02:38Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        Objects.requireNonNull(result);\n+\n+        this.total = total;\n+        this.result = new ArrayList<>(result);\n+    }\n+\n+    /**\n+     * Gets the total number of objects in the result set, regardless of the pageSize set in query.\n+     *\n+     * @return the total number of objects in the result set.\n+     */\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    /**\n+     * Gets the result list.\n+     *\n+     * @return the result list.\n+     */\n+    public List<T> getResult() {\n+        return result;", "originalCommit": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMzc0NA==", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543313744", "bodyText": "I have changed to return an unmodifiable view on the list.", "author": "kaniyan", "createdAt": "2020-12-15T12:49:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NTE0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7547068463c0ccfaa481a18a757909670e405e0d", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\ndeleted file mode 100644\nindex e489213cb..000000000\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java\n+++ /dev/null\n\n@@ -1,71 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Contributors to the Eclipse Foundation\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information regarding copyright ownership.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- *******************************************************************************/\n-package org.eclipse.hono.service.management;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Objects;\n-\n-import org.eclipse.hono.util.RegistryManagementConstants;\n-\n-import com.fasterxml.jackson.annotation.JsonInclude;\n-import com.fasterxml.jackson.annotation.JsonProperty;\n-\n-/**\n- * The result of a search operation in Device Registry Management API.\n- *\n- * @param <T> The type of the result.\n- * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n- *      Management API - Search Tenants</a>\n- * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n- *      Management API - Search Devices</a>\n- */\n-@JsonInclude(value = JsonInclude.Include.NON_NULL)\n-public final class SearchResult<T> {\n-    private final int total;\n-    private final List<T> result;\n-\n-    /**\n-     * Creates an instance of {@link SearchResult}.\n-     *\n-     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n-     * @param result The list of devices with their identifiers.\n-     * @throws NullPointerException if any of the parameters is {@code null}.\n-     */\n-    public SearchResult(\n-            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n-            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n-        Objects.requireNonNull(result);\n-\n-        this.total = total;\n-        this.result = new ArrayList<>(result);\n-    }\n-\n-    /**\n-     * Gets the total number of objects in the result set, regardless of the pageSize set in query.\n-     *\n-     * @return the total number of objects in the result set.\n-     */\n-    public int getTotal() {\n-        return total;\n-    }\n-\n-    /**\n-     * Gets the result list.\n-     *\n-     * @return the result list.\n-     */\n-    public List<T> getResult() {\n-        return result;\n-    }\n-}\n"}}, {"oid": "7547068463c0ccfaa481a18a757909670e405e0d", "url": "https://github.com/eclipse/hono/commit/7547068463c0ccfaa481a18a757909670e405e0d", "message": "[#2239] Add OpenAPI spec for search tenants operation\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:38:35Z", "type": "commit"}, {"oid": "9f89be596cd621f6b9f2414aae3be6dfde0fa9a3", "url": "https://github.com/eclipse/hono/commit/9f89be596cd621f6b9f2414aae3be6dfde0fa9a3", "message": "[#2239] Pull up Filter and Sort classes for reuse\n\nPull up Filter and Sort classes to package org.eclipse.hono.service.management\nfor reuse by the search tenants operation.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:38:35Z", "type": "commit"}, {"oid": "33397f8c0efeaa43b8b4e7b1dd8d83b66fa7f254", "url": "https://github.com/eclipse/hono/commit/33397f8c0efeaa43b8b4e7b1dd8d83b66fa7f254", "message": "[#2239] Prepare base classes required for search tenants operation\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:38:35Z", "type": "commit"}, {"oid": "1b67e50e90dc3888f4d0c614fed38ea5a29a9871", "url": "https://github.com/eclipse/hono/commit/1b67e50e90dc3888f4d0c614fed38ea5a29a9871", "message": "[#2239] Implement review suggestions\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:38:35Z", "type": "commit"}, {"oid": "13b3d28546de048201186cd189e4e492fb6ba8de", "url": "https://github.com/eclipse/hono/commit/13b3d28546de048201186cd189e4e492fb6ba8de", "message": "Return an unmodifiable view on the result list\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:47:16Z", "type": "commit"}, {"oid": "13b3d28546de048201186cd189e4e492fb6ba8de", "url": "https://github.com/eclipse/hono/commit/13b3d28546de048201186cd189e4e492fb6ba8de", "message": "Return an unmodifiable view on the result list\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-12-15T12:47:16Z", "type": "forcePushed"}]}