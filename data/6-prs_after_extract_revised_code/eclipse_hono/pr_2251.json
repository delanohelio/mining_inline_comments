{"pr_number": 2251, "pr_title": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped", "pr_createdAt": "2020-10-14T06:57:41Z", "pr_url": "https://github.com/eclipse/hono/pull/2251", "timeline": [{"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371", "url": "https://github.com/eclipse/hono/commit/09d49c9ec750d62e8cfc51f2bb224fb4f27da371", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-14T12:48:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjQyMw==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504692423", "bodyText": "shouldn't this compare to 412 instead of 404?", "author": "sophokles73", "createdAt": "2020-10-14T13:48:18Z", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -823,6 +819,26 @@ private Span newSpan(final String operationName, final Device authenticatedDevic\n                 new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"cannot create command consumer\")));\n     }\n \n+    private Future<Void> closeCommandConsumer(\n+            final ProtocolAdapterCommandConsumer consumer,\n+            final String tenantId,\n+            final String deviceId,\n+            final Device authenticatedDevice,\n+            final Span span) {\n+\n+        return consumer.close(span.context())\n+                .recover(thr -> {\n+                    // ignore all but not-found errors\n+                    if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {", "originalCommit": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwNjgxMQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r505406811", "bodyText": "I've changed it now that the relevant code to match here is indeed 412. (See also the ProtocolAdapterCommandConsumer#close javadoc.)", "author": "calohmn", "createdAt": "2020-10-15T09:44:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "8b36de7da91f356fab3bd6697a38c3161e5a5743", "chunk": "diff --git a/adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java b/adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java\nindex a1fc2ab7b..137493179 100644\n--- a/adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java\n+++ b/adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java\n\n@@ -828,8 +828,11 @@ public final class VertxBasedAmqpProtocolAdapter extends AbstractProtocolAdapter\n \n         return consumer.close(span.context())\n                 .recover(thr -> {\n-                    // ignore all but not-found errors\n-                    if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {\n+                    TracingHelper.logError(span, thr);\n+                    // ignore all but precon-failed errors\n+                    if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_PRECON_FAILED) {\n+                        log.debug(\"command consumer wasn't active anymore - skip sending disconnected event [tenant: {}, device-id: {}]\",\n+                                tenantId, deviceId);\n                         span.log(\"command consumer wasn't active anymore - skip sending disconnected event\");\n                         return Future.failedFuture(thr);\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjkyMQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504692921", "bodyText": "412?", "author": "sophokles73", "createdAt": "2020-10-14T13:48:57Z", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "diffHunk": "@@ -760,6 +761,28 @@ protected final void onUnsubscribe(\n         CompositeFuture.join(removalDoneFutures).onComplete(r -> span.finish());\n     }\n \n+    private Function<Pair<CommandSubscription, ProtocolAdapterCommandConsumer>, Future<Void>> getOnSubscriptionRemovedFunction(\n+            final Device authenticatedDevice,\n+            final MqttEndpoint endpoint,\n+            final Span span) {\n+\n+        return subscriptionConsumerPair -> {\n+            final CommandSubscription subscription = subscriptionConsumerPair.one();\n+            final ProtocolAdapterCommandConsumer commandConsumer = subscriptionConsumerPair.two();\n+            return commandConsumer.close(span.context())\n+                    .recover(thr -> {\n+                        // ignore all but not-found errors\n+                        if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {", "originalCommit": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8b36de7da91f356fab3bd6697a38c3161e5a5743", "chunk": "diff --git a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java\nindex 6a8b9ef6b..8f267d0cd 100644\n--- a/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java\n+++ b/adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java\n\n@@ -771,8 +771,11 @@ public abstract class AbstractVertxBasedMqttProtocolAdapter<T extends MqttProtoc\n             final ProtocolAdapterCommandConsumer commandConsumer = subscriptionConsumerPair.two();\n             return commandConsumer.close(span.context())\n                     .recover(thr -> {\n-                        // ignore all but not-found errors\n-                        if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {\n+                        TracingHelper.logError(span, thr);\n+                        // ignore all but precon-failed errors\n+                        if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_PRECON_FAILED) {\n+                            log.debug(\"command consumer wasn't active anymore - skip sending disconnected event [tenant: {}, device-id: {}]\",\n+                                    subscription.getTenant(), subscription.getDeviceId());\n                             span.log(\"command consumer wasn't active anymore - skip sending disconnected event\");\n                             return Future.failedFuture(thr);\n                         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwODA4NQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504708085", "bodyText": "I find it extremely confusing that DeviceConnectionClientImpl.removeCommandHandlingAdapterInstance method does not comply with the Device Connection API in that the returned future actually succeeds for status codes 404 and 412 but fails for e.g. a status code 404 being returned from the service.\nI am even more confused seeing that a few lines below we actually map the successful result to a 404?", "author": "sophokles73", "createdAt": "2020-10-14T14:08:36Z", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -196,19 +198,29 @@ protected void onDisconnect() {\n     }\n \n     private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext) {\n+            final SpanContext onCloseSpanContext, final boolean isUnlimitedLifespanConsumer) {\n         log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n         adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n \n         return deviceConnectionClientFactory.getOrCreateDeviceConnectionClient(tenantId)\n                 .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstanceId,\n                         onCloseSpanContext))\n+                .compose(removed -> {\n+                    if (!removed && isUnlimitedLifespanConsumer) {", "originalCommit": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNzYxNQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r505417615", "bodyText": "The change to let DeviceConnectionClientImpl.removeCommandHandlingAdapterInstance return a Boolean future value was done when introducing the lifespan for the corresponding cache entries, with which 404 exceptions when trying to remove a just expired entry can easily occur (when the ttd has elapsed). PR for that was #1926. With that change, a failure to remove a (potentially expired) entry will also not be traced as an error in the client anymore.\nI think the corresponding server method wasn't changed back then for compatibility reasons and following up on this later on was abandoned because of the new command router concept.\nI see that it may be confusing to use that client method with having the API definition in mind. I've changed the javadoc now to add a note about that difference.\nWe could also revert #1926 and just adapt the client tracing to skip logging a 412 error there. If doing so, that should be in a follow-up PR, but frankly, I don't see that much benefit in that, also since the plan is to abandon the device connection API for the command routing component concept.\n\nI am even more confused seeing that a few lines below we actually map the successful result to a 404?\n\nI've changed that now to 412.", "author": "calohmn", "createdAt": "2020-10-15T09:59:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwODA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "e062b7d62e1f51a03fb1c1cc933c4b991f63ce7a", "chunk": "diff --git a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\nindex 45bd23bd3..8250d3b30 100644\n--- a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n+++ b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n\n@@ -197,16 +193,14 @@ public class ProtocolAdapterCommandConsumerFactoryImpl extends AbstractHonoClien\n                 });\n     }\n \n-    private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext, final boolean isUnlimitedLifespanConsumer) {\n-        log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n-        adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n+    private Function<SpanContext, Future<Void>> getCommandConsumerOnCloseAction(\n+            final String tenantId,\n+            final String deviceId,\n+            final boolean isConsumerWithUnlimitedLifespan) {\n \n-        return deviceConnectionClientFactory.getOrCreateDeviceConnectionClient(tenantId)\n-                .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstanceId,\n-                        onCloseSpanContext))\n+        return onCloseSpanContext -> removeCommandConsumer(tenantId, deviceId, onCloseSpanContext)\n                 .compose(removed -> {\n-                    if (!removed && isUnlimitedLifespanConsumer) {\n+                    if (!removed && isConsumerWithUnlimitedLifespan) {\n                         // entry wasn't actually removed and there was no lifespan set on the entry\n                         // -> another command consumer for the device must have been set in the meantime (or there was data loss in the device connection service)\n                         log.debug(\"command handling adapter instance not removed - not matched or already removed [tenant: {}, device: {}]\",\n"}}, {"oid": "ce0a4cb9cdfe6770dbc9c16e198a4b5caff79f7e", "url": "https://github.com/eclipse/hono/commit/ce0a4cb9cdfe6770dbc9c16e198a4b5caff79f7e", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-14T15:20:53Z", "type": "forcePushed"}, {"oid": "e062b7d62e1f51a03fb1c1cc933c4b991f63ce7a", "url": "https://github.com/eclipse/hono/commit/e062b7d62e1f51a03fb1c1cc933c4b991f63ce7a", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-14T16:02:42Z", "type": "forcePushed"}, {"oid": "335dbce12245f4c237b14ee533c0442b7d3b4121", "url": "https://github.com/eclipse/hono/commit/335dbce12245f4c237b14ee533c0442b7d3b4121", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-14T16:04:04Z", "type": "forcePushed"}, {"oid": "8b36de7da91f356fab3bd6697a38c3161e5a5743", "url": "https://github.com/eclipse/hono/commit/8b36de7da91f356fab3bd6697a38c3161e5a5743", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-15T09:42:55Z", "type": "forcePushed"}, {"oid": "791e854f789b1b488394b8e4751640c8d2740c5a", "url": "https://github.com/eclipse/hono/commit/791e854f789b1b488394b8e4751640c8d2740c5a", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-15T14:17:27Z", "type": "forcePushed"}, {"oid": "2a575d18a58b5d99738e59332722c81d6b1dcbd7", "url": "https://github.com/eclipse/hono/commit/2a575d18a58b5d99738e59332722c81d6b1dcbd7", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\nThis resolves case A described in #2244.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-15T14:32:28Z", "type": "forcePushed"}, {"oid": "ab16cdd3878c0cbf32302d034bf074dfffc71b5f", "url": "https://github.com/eclipse/hono/commit/ab16cdd3878c0cbf32302d034bf074dfffc71b5f", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-16T05:47:46Z", "type": "forcePushed"}, {"oid": "73d4d410e64028e908d8c4476e61f43c0c89115a", "url": "https://github.com/eclipse/hono/commit/73d4d410e64028e908d8c4476e61f43c0c89115a", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-16T09:43:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2NDQ0OQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506364449", "bodyText": "... to a succeeded future with value false ...", "author": "sophokles73", "createdAt": "2020-10-16T12:29:50Z", "path": "client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java", "diffHunk": "@@ -98,6 +98,10 @@\n      * @return A future indicating the outcome of the operation, with its value indicating whether the protocol\n      *         adapter instance value was removed or not.\n      *         <p>\n+     *         NOTE: this method maps an outcome with status 404 or 412 as defined in the\n+     *         <a href=\"https://www.eclipse.org/hono/docs/api/device-connection/\">Device Connection API\n+     *         specification</a> to a future result value of {@code false} here.", "originalCommit": "73d4d410e64028e908d8c4476e61f43c0c89115a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c1332541d56bc1c39ddc08bcbf41e1f849d8fb8", "chunk": "diff --git a/client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java b/client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java\nindex 296c5c788..c0e5b638d 100644\n--- a/client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java\n+++ b/client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java\n\n@@ -100,7 +100,7 @@ public interface DeviceConnectionClient extends RequestResponseClient {\n      *         <p>\n      *         NOTE: this method maps an outcome with status 404 or 412 as defined in the\n      *         <a href=\"https://www.eclipse.org/hono/docs/api/device-connection/\">Device Connection API\n-     *         specification</a> to a future result value of {@code false} here.\n+     *         specification</a> to a succeeded future with value {@code false} here.\n      *         <p>\n      *         The future will be failed with a {@link org.eclipse.hono.client.ServiceInvocationException} if there\n      *         was an error removing the value.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwOTI0NQ==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506409245", "bodyText": "this is the check for scenario B, right (device has re-connected to same verticle instance)? IMHO it would be very helpful to describe this scenario in a comment here", "author": "sophokles73", "createdAt": "2020-10-16T13:19:51Z", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -195,11 +202,19 @@ protected void onDisconnect() {\n                 });\n     }\n \n-    private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext) {\n-        log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n-        adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n+    private Future<Void> removeCommandConsumer(final CommandHandlerWrapper commandHandlerWrapper, final Duration lifespan,\n+            final Instant lifespanStart, final SpanContext onCloseSpanContext) {\n+\n+        final String tenantId = commandHandlerWrapper.getTenantId();\n+        final String deviceId = commandHandlerWrapper.getDeviceId();\n \n+        log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n+        if (!adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(commandHandlerWrapper)) {", "originalCommit": "73d4d410e64028e908d8c4476e61f43c0c89115a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4c1332541d56bc1c39ddc08bcbf41e1f849d8fb8", "chunk": "diff --git a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\nindex 335d290b1..c1c8cd6cf 100644\n--- a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n+++ b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n\n@@ -210,6 +210,15 @@ public class ProtocolAdapterCommandConsumerFactoryImpl extends AbstractHonoClien\n \n         log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n         if (!adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(commandHandlerWrapper)) {\n+            // This case happens when trying to remove a command consumer which has been overwritten since its creation\n+            // via a 2nd invocation of 'createCommandConsumer' with the same device/tenant id. Since the 2nd 'createCommandConsumer'\n+            // invocation has registered a different 'commandHandlerWrapper' instance (and possibly already removed it),\n+            // trying to remove the original object will return false here.\n+            // On a more abstract level, this case happens when 2 consecutive command subscription requests from the\n+            // same device (with no intermittent disconnect/unsubscribe - possibly because of a broken connection in between) have\n+            // reached the *same* adapter instance and verticle, using this CommandConsumerFactory. Invoking 'removeCommandConsumer'\n+            // on the 1st (obsolete and overwritten) command subscription shall have no impact. Throwing an explicit exception\n+            // here will enable the protocol adapter to detect this case and skip an (incorrect) \"disconnectedTtd\" event message.\n             log.debug(\"command consumer not removed - handler already replaced or removed [tenant: {}, device: {}]\",\n                     tenantId, deviceId);\n             return Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_PRECON_FAILED,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMjAxMA==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506412010", "bodyText": "this covers adapters which use stateful protocols like AMQP and MQTT where the TTD is -1, right?\nagain, IMHO it would be helpful to describe the circumstances under which this happens here in the comment in some more detail", "author": "sophokles73", "createdAt": "2020-10-16T13:21:57Z", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -208,7 +223,18 @@ protected void onDisconnect() {\n                             deviceId, thr);\n                     return Future.failedFuture(thr);\n                 })\n-                .mapEmpty();\n+                .compose(removed -> {\n+                    final boolean entryNotExpired = lifespan.isNegative() || Instant.now().isBefore(lifespanStart.plus(lifespan));\n+                    if (!removed && entryNotExpired) {\n+                        // entry wasn't actually removed and entry hasn't expired (yet)", "originalCommit": "73d4d410e64028e908d8c4476e61f43c0c89115a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ5MzcyNA==", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506493724", "bodyText": "this covers adapters which use stateful protocols like AMQP and MQTT where the TTD is -1, right?\n\nMost importantly, but not exclusively. There could also be 2 overlapping HTTP adapter TTD requests, the above \"if\" block getting reached when calling removeCommandConsumer on the 1st request before the 2nd ttd period has elapsed. It's not that important throwing an exception in that case though, since the HTTP adapter won't send a \"disconnectedTtd\" event. But could be informative in the tracing span anyway.", "author": "calohmn", "createdAt": "2020-10-16T14:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMjAxMA=="}], "type": "inlineReview", "revised_code": {"commit": "4c1332541d56bc1c39ddc08bcbf41e1f849d8fb8", "chunk": "diff --git a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\nindex 335d290b1..c1c8cd6cf 100644\n--- a/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n+++ b/client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java\n\n@@ -226,8 +235,13 @@ public class ProtocolAdapterCommandConsumerFactoryImpl extends AbstractHonoClien\n                 .compose(removed -> {\n                     final boolean entryNotExpired = lifespan.isNegative() || Instant.now().isBefore(lifespanStart.plus(lifespan));\n                     if (!removed && entryNotExpired) {\n-                        // entry wasn't actually removed and entry hasn't expired (yet)\n-                        // -> another command consumer for the device must have been set in the meantime (or there was data loss in the device connection service)\n+                        // entry wasn't actually removed and entry hasn't expired (yet);\n+                        // This case happens when 2 consecutive command subscription requests from the same device\n+                        // (with no intermittent disconnect/unsubscribe - possibly because of a broken connection in between)\n+                        // have reached *different* protocol adapter instances/verticles. Now calling 'removeCommandHandlingAdapterInstance'\n+                        // on the 1st subscription fails because of the non-matching adapterInstanceId parameter.\n+                        // Throwing an explicit exception here will enable the protocol adapter to detect this case\n+                        // and skip sending an (incorrect) \"disconnectedTtd\" event message.\n                         log.debug(\"command handling adapter instance not removed - not matched or already removed [tenant: {}, device: {}]\",\n                                 tenantId, deviceId);\n                         return Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_PRECON_FAILED,\n"}}, {"oid": "4c1332541d56bc1c39ddc08bcbf41e1f849d8fb8", "url": "https://github.com/eclipse/hono/commit/4c1332541d56bc1c39ddc08bcbf41e1f849d8fb8", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-16T14:28:06Z", "type": "forcePushed"}, {"oid": "e824fa21a93d28781ce11e4265d8c4759b220710", "url": "https://github.com/eclipse/hono/commit/e824fa21a93d28781ce11e4265d8c4759b220710", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-19T08:20:49Z", "type": "commit"}, {"oid": "e824fa21a93d28781ce11e4265d8c4759b220710", "url": "https://github.com/eclipse/hono/commit/e824fa21a93d28781ce11e4265d8c4759b220710", "message": "[#2244] Skip sendDisconnectedTtdEvent if consumer not mapped.\n\nNo 'disconnectedTtdEvent' is now sent anymore after closing\nthe command consumer when it has become obvious that the\nconsumer had already been removed/overwritten before.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>", "committedDate": "2020-10-19T08:20:49Z", "type": "forcePushed"}]}