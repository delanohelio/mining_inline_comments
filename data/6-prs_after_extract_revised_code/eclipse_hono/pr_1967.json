{"pr_number": 1967, "pr_title": "[#1679] Part 2: Support updating credentials with secret ids", "pr_createdAt": "2020-05-18T12:40:07Z", "pr_url": "https://github.com/eclipse/hono/pull/1967", "timeline": [{"oid": "98b7c991226574415a07b5fe9619715755e50012", "url": "https://github.com/eclipse/hono/commit/98b7c991226574415a07b5fe9619715755e50012", "message": "[#1679] Add provision to update credentials data with secret ids.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-19T08:04:23Z", "type": "forcePushed"}, {"oid": "a871d19a505b02d99e653f8fdac66d07efe3b768", "url": "https://github.com/eclipse/hono/commit/a871d19a505b02d99e653f8fdac66d07efe3b768", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-19T09:54:32Z", "type": "forcePushed"}, {"oid": "aa66bea8ecbaf01d4e43ae11cb9d0bf2507c0f82", "url": "https://github.com/eclipse/hono/commit/aa66bea8ecbaf01d4e43ae11cb9d0bf2507c0f82", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-19T10:22:48Z", "type": "forcePushed"}, {"oid": "563239639bdc1bb9515b791d43fd38d8fc01694a", "url": "https://github.com/eclipse/hono/commit/563239639bdc1bb9515b791d43fd38d8fc01694a", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-20T08:20:37Z", "type": "forcePushed"}, {"oid": "c3ac8e8059302d175a1837736831c5f78478bdce", "url": "https://github.com/eclipse/hono/commit/c3ac8e8059302d175a1837736831c5f78478bdce", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-20T12:52:38Z", "type": "forcePushed"}, {"oid": "7ef1d5587d6199adaf662a49c8c04db25728abcb", "url": "https://github.com/eclipse/hono/commit/7ef1d5587d6199adaf662a49c8c04db25728abcb", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T07:11:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NTkyMw==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r430975923", "bodyText": "why not getCredentialsDto and use the DTO's API to retrieve the credentials? As the name Data Transfer Object suggests, it should be used to transfer data to/from the persistence store, right? That way we also wouldn't require this method to have knowledge about the internal structure of the JSON document being stored in the DB ...", "author": "sophokles73", "createdAt": "2020-05-27T09:17:45Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java", "diffHunk": "@@ -190,7 +208,7 @@ public MongoDbBasedCredentialsService(\n         Objects.requireNonNull(deviceKey);\n         Objects.requireNonNull(span);\n \n-        return findCredentials(deviceKey)\n+        return findCredentials(deviceKey, Optional.empty())", "originalCommit": "7ef1d5587d6199adaf662a49c8c04db25728abcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxMzI5MA==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431013290", "bodyText": "@sophokles73 Sounds good. I have made those changes. Please take a look.", "author": "kaniyan", "createdAt": "2020-05-27T10:22:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NTkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java\nindex bfee874c6..77b2c9891 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java\n\n@@ -208,22 +207,18 @@ public final class MongoDbBasedCredentialsService extends AbstractCredentialsMan\n         Objects.requireNonNull(deviceKey);\n         Objects.requireNonNull(span);\n \n-        return findCredentials(deviceKey, Optional.empty())\n-                .map(result -> {\n-                    final List<CommonCredential> credentialsList = result\n-                            .getJsonArray(MongoDbDeviceRegistryUtils.FIELD_CREDENTIALS)\n+        return getCredentialsDto(deviceKey)\n+                .map(credentialsDto -> {\n+                    final List<CommonCredential> credentials = credentialsDto.getCredentials()\n                             .stream()\n-                            .filter(JsonObject.class::isInstance)\n-                            .map(JsonObject.class::cast)\n-                            .map(credential -> credential.mapTo(CommonCredential.class))\n                             .map(CommonCredential::stripPrivateInfo)\n                             .collect(Collectors.toList());\n \n                     return OperationResult.ok(\n                             HttpURLConnection.HTTP_OK,\n-                            credentialsList,\n+                            credentials,\n                             Optional.empty(),\n-                            Optional.of(result.getString(MongoDbDeviceRegistryUtils.FIELD_VERSION)));\n+                            Optional.of(credentialsDto.getVersion()));\n                 })\n                 .recover(error -> Future.succeededFuture(MongoDbDeviceRegistryUtils.mapErrorToResult(error, span)));\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NjQwNQ==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r430976405", "bodyText": "I like this approach because it increases encapsulation \ud83d\udc4d", "author": "sophokles73", "createdAt": "2020-05-27T09:18:29Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java", "diffHunk": "@@ -164,4 +167,46 @@ public void checkValidity() {\n     public CommonCredential stripPrivateInfo() {\n         return this;\n     }\n+\n+    /**\n+     * Merges the secrets of the given credential with that of the current one based on the secret ids.\n+     *\n+     * @param credential The credential to be merged.\n+     * @return a reference to this for fluent use.\n+     * @throws IllegalArgumentException if the given credential is invalid and cannot be merged.\n+     * @throws NullPointerException if the given credential is {@code null}.\n+     */\n+    @JsonIgnore\n+    public CommonCredential merge(final CommonCredential credential) {", "originalCommit": "7ef1d5587d6199adaf662a49c8c04db25728abcb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\nindex a1f1496b5..e9d1f3078 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n\n@@ -188,15 +188,10 @@ public abstract class CommonCredential {\n         getSecrets()\n                 .forEach(secret -> Optional.ofNullable(secret.getId())\n                         .ifPresent(secretId -> findSecretById(credential, secretId)\n-                                .map(result -> {\n-                                    if (secret instanceof PasswordSecret) {\n-                                        ((PasswordSecret) secret).merge((PasswordSecret) result);\n-                                    } else if (secret instanceof PskSecret) {\n-                                        ((PskSecret) secret).merge((PskSecret) result);\n-                                    }\n-                                    return result;\n-                                }).orElseThrow(() -> new IllegalArgumentException(\n-                                        String.format(\"secret [id: %s] not found\", secret.getId())))));\n+                                .ifPresentOrElse(secret::merge, () -> {\n+                                    throw new IllegalArgumentException(\n+                                            String.format(\"secret [id: %s] not found\", secret.getId()));\n+                                })));\n \n         return this;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NjkxMg==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r430976912", "bodyText": "why don't we simply define a merge method on CommonSecret?", "author": "sophokles73", "createdAt": "2020-05-27T09:19:19Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java", "diffHunk": "@@ -164,4 +167,46 @@ public void checkValidity() {\n     public CommonCredential stripPrivateInfo() {\n         return this;\n     }\n+\n+    /**\n+     * Merges the secrets of the given credential with that of the current one based on the secret ids.\n+     *\n+     * @param credential The credential to be merged.\n+     * @return a reference to this for fluent use.\n+     * @throws IllegalArgumentException if the given credential is invalid and cannot be merged.\n+     * @throws NullPointerException if the given credential is {@code null}.\n+     */\n+    @JsonIgnore\n+    public CommonCredential merge(final CommonCredential credential) {\n+\n+        Objects.requireNonNull(credential);\n+\n+        if (!getType().equals(credential.getType())) {\n+            throw new IllegalArgumentException(\"credential to be merged must be of the same type\");\n+        }\n+\n+        getSecrets()\n+                .forEach(secret -> Optional.ofNullable(secret.getId())\n+                        .ifPresent(secretId -> findSecretById(credential, secretId)\n+                                .map(result -> {\n+                                    if (secret instanceof PasswordSecret) {\n+                                        ((PasswordSecret) secret).merge((PasswordSecret) result);\n+                                    } else if (secret instanceof PskSecret) {\n+                                        ((PskSecret) secret).merge((PskSecret) result);\n+                                    }", "originalCommit": "7ef1d5587d6199adaf662a49c8c04db25728abcb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxMzUzNw==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431013537", "bodyText": "@sophokles73 I have added a merge method to the CommonSecret.", "author": "kaniyan", "createdAt": "2020-05-27T10:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk3NjkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\nindex a1f1496b5..e9d1f3078 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n\n@@ -188,15 +188,10 @@ public abstract class CommonCredential {\n         getSecrets()\n                 .forEach(secret -> Optional.ofNullable(secret.getId())\n                         .ifPresent(secretId -> findSecretById(credential, secretId)\n-                                .map(result -> {\n-                                    if (secret instanceof PasswordSecret) {\n-                                        ((PasswordSecret) secret).merge((PasswordSecret) result);\n-                                    } else if (secret instanceof PskSecret) {\n-                                        ((PskSecret) secret).merge((PskSecret) result);\n-                                    }\n-                                    return result;\n-                                }).orElseThrow(() -> new IllegalArgumentException(\n-                                        String.format(\"secret [id: %s] not found\", secret.getId())))));\n+                                .ifPresentOrElse(secret::merge, () -> {\n+                                    throw new IllegalArgumentException(\n+                                            String.format(\"secret [id: %s] not found\", secret.getId()));\n+                                })));\n \n         return this;\n     }\n"}}, {"oid": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "url": "https://github.com/eclipse/hono/commit/0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "message": "[#1679] Add merge method to CommonSecret\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T10:20:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NzA2Mw==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431057063", "bodyText": "FMPOV we do not need the credentials parameter, do we?", "author": "sophokles73", "createdAt": "2020-05-27T11:49:38Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java", "diffHunk": "@@ -164,4 +167,41 @@ public void checkValidity() {\n     public CommonCredential stripPrivateInfo() {\n         return this;\n     }\n+\n+    /**\n+     * Merges the secrets of the given credential with that of the current one based on the secret ids.\n+     *\n+     * @param credential The credential to be merged.\n+     * @return a reference to this for fluent use.\n+     * @throws IllegalArgumentException if the given credential is invalid and cannot be merged.\n+     * @throws NullPointerException if the given credential is {@code null}.\n+     */\n+    @JsonIgnore\n+    public CommonCredential merge(final CommonCredential credential) {\n+\n+        Objects.requireNonNull(credential);\n+\n+        if (!getType().equals(credential.getType())) {\n+            throw new IllegalArgumentException(\"credential to be merged must be of the same type\");\n+        }\n+\n+        getSecrets()\n+                .forEach(secret -> Optional.ofNullable(secret.getId())\n+                        .ifPresent(secretId -> findSecretById(credential, secretId)\n+                                .ifPresentOrElse(secret::merge, () -> {\n+                                    throw new IllegalArgumentException(\n+                                            String.format(\"secret [id: %s] not found\", secret.getId()));\n+                                })));\n+\n+        return this;\n+    }\n+\n+\n+    private Optional<? extends CommonSecret> findSecretById(final CommonCredential credential, final String secretId) {", "originalCommit": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4MDA5Mw==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431080093", "bodyText": "This credentials parameter is needed. It is the credential that is received as a parameter for merging in CommonCredential merge(final CommonCredential credential)", "author": "kaniyan", "createdAt": "2020-05-27T12:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NzA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4OTA4NQ==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431089085", "bodyText": "sure, but the other object also is a CommonCredential, isn't it? So the code in the merge operation would simply need to be changed to:\ngetSecrets()\n                .forEach(secret -> Optional.ofNullable(secret.getId())\n                        .ifPresent(secretId -> credential.findSecretById(secretId)\n                                .ifPresentOrElse(secret::merge, () -> {\n                                    throw new IllegalArgumentException(\n                                            String.format(\"secret [id: %s] not found\", secret.getId()));\n                                })));\nor am I mistaken?", "author": "sophokles73", "createdAt": "2020-05-27T12:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NzA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5MTU5Ng==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431091596", "bodyText": "Now I understood what you meant :-)", "author": "kaniyan", "createdAt": "2020-05-27T12:50:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NzA2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEwMDEyNA==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431100124", "bodyText": "I have made those changes now.", "author": "kaniyan", "createdAt": "2020-05-27T13:01:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NzA2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f50fdc05aaa06fb8d84ed66efbace9e2955e90c2", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\nindex e9d1f3078..a1f1496b5 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonCredential.java\n\n@@ -188,10 +188,15 @@ public abstract class CommonCredential {\n         getSecrets()\n                 .forEach(secret -> Optional.ofNullable(secret.getId())\n                         .ifPresent(secretId -> findSecretById(credential, secretId)\n-                                .ifPresentOrElse(secret::merge, () -> {\n-                                    throw new IllegalArgumentException(\n-                                            String.format(\"secret [id: %s] not found\", secret.getId()));\n-                                })));\n+                                .map(result -> {\n+                                    if (secret instanceof PasswordSecret) {\n+                                        ((PasswordSecret) secret).merge((PasswordSecret) result);\n+                                    } else if (secret instanceof PskSecret) {\n+                                        ((PskSecret) secret).merge((PskSecret) result);\n+                                    }\n+                                    return result;\n+                                }).orElseThrow(() -> new IllegalArgumentException(\n+                                        String.format(\"secret [id: %s] not found\", secret.getId())))));\n \n         return this;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1Nzc4NA==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431057784", "bodyText": "My point was to add an empty method at this level which would then be overridden by PasswordSecret and PskSecret. The way you have implemented it couples the generic CommonSecrets to some of its subclasses ...", "author": "sophokles73", "createdAt": "2020-05-27T11:50:57Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "diffHunk": "@@ -160,4 +160,12 @@ public void checkValidity() {\n             }\n         }\n     }\n+\n+    void merge(final CommonSecret secret) {", "originalCommit": "0d5154872c07bbaba5c62cdaaf64b9ded2b0915a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4ODUwNg==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431088506", "bodyText": "I have added an empty method now and overriden that in the PasswordSecret and PskSecret.", "author": "kaniyan", "createdAt": "2020-05-27T12:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1Nzc4NA=="}], "type": "inlineReview", "revised_code": {"commit": "f50fdc05aaa06fb8d84ed66efbace9e2955e90c2", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\nindex 61d5687dc..0a089f509 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\n\n@@ -160,12 +160,4 @@ public abstract class CommonSecret {\n             }\n         }\n     }\n-\n-    void merge(final CommonSecret secret) {\n-        if (secret instanceof PasswordSecret) {\n-            ((PasswordSecret) this).merge((PasswordSecret) secret);\n-        } else if (secret instanceof PskSecret) {\n-            ((PskSecret) this).merge((PskSecret) secret);\n-        }\n-    }\n }\n"}}, {"oid": "f50fdc05aaa06fb8d84ed66efbace9e2955e90c2", "url": "https://github.com/eclipse/hono/commit/f50fdc05aaa06fb8d84ed66efbace9e2955e90c2", "message": "[#1679] Add provision to update credentials data with secret ids\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T12:43:24Z", "type": "commit"}, {"oid": "e9f70e16cb47c0b97301585194729a98dcf7c036", "url": "https://github.com/eclipse/hono/commit/e9f70e16cb47c0b97301585194729a98dcf7c036", "message": "[#1679] Minor improvements\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T12:43:24Z", "type": "commit"}, {"oid": "5c9f2ec7f7659cab0b57b9533a2183e4e26d91ca", "url": "https://github.com/eclipse/hono/commit/5c9f2ec7f7659cab0b57b9533a2183e4e26d91ca", "message": "[#1679] Add merge method to CommonSecret\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T12:43:24Z", "type": "forcePushed"}, {"oid": "662fdaf161dc5c17248ea7f70af03195608636cb", "url": "https://github.com/eclipse/hono/commit/662fdaf161dc5c17248ea7f70af03195608636cb", "message": "[#1679] Add merge method to CommonSecret\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T12:57:43Z", "type": "commit"}, {"oid": "662fdaf161dc5c17248ea7f70af03195608636cb", "url": "https://github.com/eclipse/hono/commit/662fdaf161dc5c17248ea7f70af03195608636cb", "message": "[#1679] Add merge method to CommonSecret\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T12:57:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTExNDE1MQ==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431114151", "bodyText": "I think that this method deserves a JavaDoc comment, doesn't it?", "author": "sophokles73", "createdAt": "2020-05-27T13:12:38Z", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "diffHunk": "@@ -160,4 +160,7 @@ public void checkValidity() {\n             }\n         }\n     }\n+\n+    void merge(final CommonSecret secret) {", "originalCommit": "662fdaf161dc5c17248ea7f70af03195608636cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MzM5Mg==", "url": "https://github.com/eclipse/hono/pull/1967#discussion_r431143392", "bodyText": "I have now added the JavaDoc.", "author": "kaniyan", "createdAt": "2020-05-27T13:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTExNDE1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "89ceb974c8b2098a8e3b76827ae23ab68019e7e2", "chunk": "diff --git a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\nindex 1d50bfde2..c375840c9 100644\n--- a/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\n+++ b/services/device-registry-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java\n\n@@ -161,6 +161,14 @@ public abstract class CommonSecret {\n         }\n     }\n \n+    /**\n+     * Merges the given secret with that of the current one.\n+     * <p>\n+     * The default implementation in {@link CommonSecret} does nothing.\n+     *\n+     * @param secret The secret to be merged.\n+     * @throws NullPointerException if the given secret is {@code null}.\n+     */\n     void merge(final CommonSecret secret) {\n     }\n }\n"}}, {"oid": "89ceb974c8b2098a8e3b76827ae23ab68019e7e2", "url": "https://github.com/eclipse/hono/commit/89ceb974c8b2098a8e3b76827ae23ab68019e7e2", "message": "[#1679] Add javadoc\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-27T13:44:04Z", "type": "commit"}]}