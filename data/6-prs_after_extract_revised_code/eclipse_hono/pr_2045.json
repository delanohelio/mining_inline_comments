{"pr_number": 2045, "pr_title": "[#1023] Adding metric for rejected connections", "pr_createdAt": "2020-06-22T12:40:24Z", "pr_url": "https://github.com/eclipse/hono/pull/2045", "timeline": [{"oid": "e5fe2c6cb96afdba6490f9dd445606f5fef87974", "url": "https://github.com/eclipse/hono/commit/e5fe2c6cb96afdba6490f9dd445606f5fef87974", "message": "[#1023] Adding metric for rejected connections\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"rejectedConnectionsTotal\"\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-22T12:32:35Z", "type": "commit"}, {"oid": "3d3ce96ebc8a3b227d3b6092aab5e0fde455faef", "url": "https://github.com/eclipse/hono/commit/3d3ce96ebc8a3b227d3b6092aab5e0fde455faef", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts.total\" and a corresponding \"outcome\" and \"reason\" tag which allows filtering of rejected connections.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-22T15:47:31Z", "type": "commit"}, {"oid": "0e3e2331ea9edc6beb6b4bbc01e822d9c62587c9", "url": "https://github.com/eclipse/hono/commit/0e3e2331ea9edc6beb6b4bbc01e822d9c62587c9", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts.total\" and a corresponding \"outcome\" and \"reason\" tag which allows filtering of rejected connections.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-23T07:05:19Z", "type": "commit"}, {"oid": "25ce759732183a9d8e0d414149cf205f0f8c0930", "url": "https://github.com/eclipse/hono/commit/25ce759732183a9d8e0d414149cf205f0f8c0930", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts.total\" and a corresponding \"outcome\" tag which holds the result of the connection attempt and hinting for a reason if applicable.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-23T08:20:57Z", "type": "commit"}, {"oid": "bf7366264bbef4eef732b3f2836cb8578b73f69d", "url": "https://github.com/eclipse/hono/commit/bf7366264bbef4eef732b3f2836cb8578b73f69d", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts.total\" and a corresponding \"outcome\" tag which holds the result of the connection attempt and hinting for a reason if applicable.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-23T15:19:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzODk2Mw==", "url": "https://github.com/eclipse/hono/pull/2045#discussion_r444338963", "bodyText": "this is only capable of recording a rejected connection attempt. What about the successful attempts?", "author": "sophokles73", "createdAt": "2020-06-23T16:05:39Z", "path": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "diffHunk": "@@ -116,6 +126,10 @@ protected MicrometerBasedMetrics(final MeterRegistry registry, final Vertx vertx\n             }\n         });\n         this.unauthenticatedConnections = registry.gauge(METER_CONNECTIONS_UNAUTHENTICATED, new AtomicLong());\n+\n+        this.rejectedConnections = Counter.builder(METER_CONNECTIONS_ATTEMPTS)\n+            .tag(METER_CONNECTION_ATTEMPTS_TAG_KEY_OUTCOME, \"adapter-connection-limit-exceeded\")\n+            .register(registry);", "originalCommit": "bf7366264bbef4eef732b3f2836cb8578b73f69d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc0MTM1MA==", "url": "https://github.com/eclipse/hono/pull/2045#discussion_r444741350", "bodyText": "Right. Since we do not record successful attempts as of now, I went for the most simple solution.\nBut I took the chance to look at how this was done for the other metrics and adapted the implementation to match the approach of those. It's a bit more lines to read and understand but should be consistent now, see:\ndf1620b", "author": "fkaltner", "createdAt": "2020-06-24T08:47:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzODk2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "df1620b7236d3eab01fae6f4004d791910638ed5", "chunk": "diff --git a/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java b/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\nindex 723be4082..7b4236267 100644\n--- a/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\n+++ b/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\n\n@@ -126,10 +125,6 @@ public class MicrometerBasedMetrics implements Metrics {\n             }\n         });\n         this.unauthenticatedConnections = registry.gauge(METER_CONNECTIONS_UNAUTHENTICATED, new AtomicLong());\n-\n-        this.rejectedConnections = Counter.builder(METER_CONNECTIONS_ATTEMPTS)\n-            .tag(METER_CONNECTION_ATTEMPTS_TAG_KEY_OUTCOME, \"adapter-connection-limit-exceeded\")\n-            .register(registry);\n     }\n \n     /**\n"}}, {"oid": "df1620b7236d3eab01fae6f4004d791910638ed5", "url": "https://github.com/eclipse/hono/commit/df1620b7236d3eab01fae6f4004d791910638ed5", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts.total\" and a corresponding \"outcome\" tag which holds the result of the connection attempt and hinting for a reason if applicable.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-24T08:42:46Z", "type": "commit"}, {"oid": "79cd69d1f279c9565db22a0fcaacfaa9b0244abe", "url": "https://github.com/eclipse/hono/commit/79cd69d1f279c9565db22a0fcaacfaa9b0244abe", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts\" and a corresponding \"outcome\" tag which holds the result of the connection attempt and hinting for a reason if applicable.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-24T09:27:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc2ODI2Ng==", "url": "https://github.com/eclipse/hono/pull/2045#discussion_r444768266", "bodyText": "I believe that this is no longer necessary, is it?", "author": "sophokles73", "createdAt": "2020-06-24T09:33:10Z", "path": "service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java", "diffHunk": "@@ -60,6 +61,14 @@\n      * The name of the meter for unauthenticated connections.\n      */\n     public static final String METER_CONNECTIONS_UNAUTHENTICATED = \"hono.connections.unauthenticated\";\n+    /**\n+     * The name of the meter for connection attempts. The outcome is signaled by the accordingly named tag.\n+     */\n+    public static final String METER_CONNECTIONS_ATTEMPTS = \"hono.connections.attempts\";\n+    /**\n+     * The key for the meter connection attempt tag holding the outcome of the connection attempt.\n+     */\n+    public static final String METER_CONNECTION_ATTEMPTS_TAG_KEY_OUTCOME = \"outcome\";", "originalCommit": "79cd69d1f279c9565db22a0fcaacfaa9b0244abe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a872e709a7fb34eb225fac3911f213137dd324d4", "chunk": "diff --git a/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java b/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\nindex 7b4236267..288326c10 100644\n--- a/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\n+++ b/service-base/src/main/java/org/eclipse/hono/service/metric/MicrometerBasedMetrics.java\n\n@@ -65,10 +65,6 @@ public class MicrometerBasedMetrics implements Metrics {\n      * The name of the meter for connection attempts. The outcome is signaled by the accordingly named tag.\n      */\n     public static final String METER_CONNECTIONS_ATTEMPTS = \"hono.connections.attempts\";\n-    /**\n-     * The key for the meter connection attempt tag holding the outcome of the connection attempt.\n-     */\n-    public static final String METER_CONNECTION_ATTEMPTS_TAG_KEY_OUTCOME = \"outcome\";\n     /**\n      * The name of the meter for recording message payload size.\n      */\n"}}, {"oid": "a872e709a7fb34eb225fac3911f213137dd324d4", "url": "https://github.com/eclipse/hono/commit/a872e709a7fb34eb225fac3911f213137dd324d4", "message": "[#1023] Adding metric for connection attempts\n\nIn order to be able to fine-tune connection limits it is useful to know how many connections were actually rejected. This is now enabled by introducing the metric \"hono.connections.attempts\" and a corresponding \"outcome\" tag which holds the result of the connection attempt and hinting for a reason if applicable.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>", "committedDate": "2020-06-24T09:37:30Z", "type": "commit"}]}