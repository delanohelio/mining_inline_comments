{"pr_number": 1918, "pr_title": "[#1864] Add basic authentication support for the MongoDB based device registry", "pr_createdAt": "2020-04-22T09:55:56Z", "pr_url": "https://github.com/eclipse/hono/pull/1918", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNjg3MA==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419226870", "bodyText": "I'd rather have a bean of type MongoClient being ceated by the config class which can then be used by multiple other beans. FMPOV there is no reason why we need to depend on MongoDbCallExecutor here ...", "author": "sophokles73", "createdAt": "2020-05-04T06:06:06Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java", "diffHunk": "@@ -323,6 +329,26 @@ public ObjectFactoryCreatingFactoryBean httpServerFactory() {\n         return factory;\n     }\n \n+    /**\n+     * Creates a new instance of an auth handler to provide basic authentication for the \n+     * Hono's Device Registry Management APIs.\n+     * <p>\n+     * This creates an instance of the {@link HonoBasicAuthHandler} with an auth provider of type\n+     * {@link MongoAuth} to verify the credentials.\n+     *\n+     * @return The auth handler.\n+     * @see <a href=\"https://vertx.io/docs/vertx-auth-mongo/java/\">Mongo auth provider docs</a>\n+     */\n+    @Bean\n+    @Scope(\"prototype\")\n+    @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)\n+    public AuthHandler createAuthHandler() {\n+        return new HonoBasicAuthHandler(\n+                MongoAuth.create(mongoDBCallExecutor().getMongoClient(), new JsonObject()),", "originalCommit": "80ea34afb69d99358cac3e884e1ed50374a7bca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI2ODU1Ng==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419268556", "bodyText": "I have refactored now to create a bean of type MongoClient instead of depending upon MongoDbCallExecutor.", "author": "kaniyan", "createdAt": "2020-05-04T08:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNjg3MA=="}], "type": "inlineReview", "revised_code": {"commit": "d647bd4d1dae8c003efc3d06da7406f47cab9689", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\nindex 5f9638e78..e6a6e7ece 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n\n@@ -344,7 +356,7 @@ public class ApplicationConfig {\n     @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)\n     public AuthHandler createAuthHandler() {\n         return new HonoBasicAuthHandler(\n-                MongoAuth.create(mongoDBCallExecutor().getMongoClient(), new JsonObject()),\n+                MongoAuth.create(mongoClient(), new JsonObject()),\n                 MongoDbDeviceRegistryUtils.DEFAULT_REALM,\n                 getTracer());\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNzI0NQ==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419227245", "bodyText": "this should come from configuration properties, don't you think?", "author": "sophokles73", "createdAt": "2020-05-04T06:07:36Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java", "diffHunk": "@@ -323,6 +329,26 @@ public ObjectFactoryCreatingFactoryBean httpServerFactory() {\n         return factory;\n     }\n \n+    /**\n+     * Creates a new instance of an auth handler to provide basic authentication for the \n+     * Hono's Device Registry Management APIs.\n+     * <p>\n+     * This creates an instance of the {@link HonoBasicAuthHandler} with an auth provider of type\n+     * {@link MongoAuth} to verify the credentials.\n+     *\n+     * @return The auth handler.\n+     * @see <a href=\"https://vertx.io/docs/vertx-auth-mongo/java/\">Mongo auth provider docs</a>\n+     */\n+    @Bean\n+    @Scope(\"prototype\")\n+    @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)\n+    public AuthHandler createAuthHandler() {\n+        return new HonoBasicAuthHandler(\n+                MongoAuth.create(mongoDBCallExecutor().getMongoClient(), new JsonObject()),\n+                MongoDbDeviceRegistryUtils.DEFAULT_REALM,", "originalCommit": "80ea34afb69d99358cac3e884e1ed50374a7bca4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMjgzNA==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419302834", "bodyText": "I have made it now configurable. Would you mind taking a look?", "author": "kaniyan", "createdAt": "2020-05-04T09:08:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyNzI0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d647bd4d1dae8c003efc3d06da7406f47cab9689", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\nindex 5f9638e78..e6a6e7ece 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n\n@@ -344,7 +356,7 @@ public class ApplicationConfig {\n     @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)\n     public AuthHandler createAuthHandler() {\n         return new HonoBasicAuthHandler(\n-                MongoAuth.create(mongoDBCallExecutor().getMongoClient(), new JsonObject()),\n+                MongoAuth.create(mongoClient(), new JsonObject()),\n                 MongoDbDeviceRegistryUtils.DEFAULT_REALM,\n                 getTracer());\n     }\n"}}, {"oid": "d647bd4d1dae8c003efc3d06da7406f47cab9689", "url": "https://github.com/eclipse/hono/commit/d647bd4d1dae8c003efc3d06da7406f47cab9689", "message": "Refactor to create MongoClient bean instead of depending upon MongoDbCallExecutor.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T07:48:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNjIzOQ==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419406239", "bodyText": "wouldn't it make more sense to simply create an HTTP specific subclass of ServiceConfigProperties and add the required properties there?", "author": "sophokles73", "createdAt": "2020-05-04T12:42:44Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java", "diffHunk": "@@ -317,6 +317,18 @@ public ServiceConfigProperties httpServerProperties() {\n         return new ServiceConfigProperties();\n     }\n \n+    /**\n+     * Gets properties for configuring an authentication mechanism for the HTTP based \n+     * Device Registry Management endpoint.\n+     *\n+     * @return The properties.\n+     */\n+    @Bean\n+    @ConfigurationProperties(prefix = \"hono.registry.http.auth\")\n+    public MongoDbBasedRegistryAuthenticationConfigProperties httpServerAuthConfigProperties() {", "originalCommit": "98d96e6e376181a165bcc0d0bc1469dcc4600899", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyMzAxNw==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419423017", "bodyText": "It makes more sense and I have now created a subclass of ServiceConfigProperties to make the realm configurable.", "author": "kaniyan", "createdAt": "2020-05-04T13:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwNjIzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "e319f6102bdace6fdde39d4d758913b8c27943af", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\nindex 479365e1f..75f3dfcff 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n\n@@ -313,20 +313,8 @@ public class ApplicationConfig {\n     @Qualifier(Constants.QUALIFIER_REST)\n     @Bean\n     @ConfigurationProperties(prefix = \"hono.registry.http\")\n-    public ServiceConfigProperties httpServerProperties() {\n-        return new ServiceConfigProperties();\n-    }\n-\n-    /**\n-     * Gets properties for configuring an authentication mechanism for the HTTP based \n-     * Device Registry Management endpoint.\n-     *\n-     * @return The properties.\n-     */\n-    @Bean\n-    @ConfigurationProperties(prefix = \"hono.registry.http.auth\")\n-    public MongoDbBasedRegistryAuthenticationConfigProperties httpServerAuthConfigProperties() {\n-        return new MongoDbBasedRegistryAuthenticationConfigProperties();\n+    public HttpServiceConfigProperties httpServerProperties() {\n+        return new HttpServiceConfigProperties();\n     }\n \n     /**\n"}}, {"oid": "e319f6102bdace6fdde39d4d758913b8c27943af", "url": "https://github.com/eclipse/hono/commit/e319f6102bdace6fdde39d4d758913b8c27943af", "message": "[#1864] Make the name of the realm to be used in the WWW-Authenticate header configurable.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T13:07:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MzY4OA==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419493688", "bodyText": "I guess this is obsolete now, isn't it?", "author": "sophokles73", "createdAt": "2020-05-04T14:48:43Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/utils/MongoDbDeviceRegistryUtils.java", "diffHunk": "@@ -35,6 +35,10 @@\n  */\n public final class MongoDbDeviceRegistryUtils {\n \n+    /**\n+     * The default name of the realm needed to authenticate to.\n+     */\n+    public static final String DEFAULT_REALM = \"Hono\";", "originalCommit": "e319f6102bdace6fdde39d4d758913b8c27943af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxOTY5Mg==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419719692", "bodyText": "My bad! I have removed it now.", "author": "kaniyan", "createdAt": "2020-05-04T20:50:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MzY4OA=="}], "type": "inlineReview", "revised_code": {"commit": "1e0e3a86133ee28428a8a954734c8b9721b5a3e2", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/utils/MongoDbDeviceRegistryUtils.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/utils/MongoDbDeviceRegistryUtils.java\nindex 4f0dbe67c..c0589c3b7 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/utils/MongoDbDeviceRegistryUtils.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/utils/MongoDbDeviceRegistryUtils.java\n\n@@ -35,10 +35,6 @@ import io.vertx.core.Future;\n  */\n public final class MongoDbDeviceRegistryUtils {\n \n-    /**\n-     * The default name of the realm needed to authenticate to.\n-     */\n-    public static final String DEFAULT_REALM = \"Hono\";\n     /**\n      * The name of the JSON property containing the device data.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NzMxOQ==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419497319", "bodyText": "this class doesn't seem to be specific to the MongoDB based registry, is it? Why not move it to the org.eclipse.hono.service.http package in the service-base module?", "author": "sophokles73", "createdAt": "2020-05-04T14:53:42Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/config/HttpServiceConfigProperties.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.deviceregistry.mongodb.config;", "originalCommit": "e319f6102bdace6fdde39d4d758913b8c27943af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxOTUyNA==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419719524", "bodyText": "It has been moved to the org.eclipse.hono.service.http package.", "author": "kaniyan", "createdAt": "2020-05-04T20:50:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NzMxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1e0e3a86133ee28428a8a954734c8b9721b5a3e2", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/config/HttpServiceConfigProperties.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/config/HttpServiceConfigProperties.java\ndeleted file mode 100644\nindex f9922531f..000000000\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/config/HttpServiceConfigProperties.java\n+++ /dev/null\n\n@@ -1,87 +0,0 @@\n-/*******************************************************************************\n- * Copyright (c) 2020 Contributors to the Eclipse Foundation\n- *\n- * See the NOTICE file(s) distributed with this work for additional\n- * information regarding copyright ownership.\n- *\n- * This program and the accompanying materials are made available under the\n- * terms of the Eclipse Public License 2.0 which is available at\n- * http://www.eclipse.org/legal/epl-2.0\n- *\n- * SPDX-License-Identifier: EPL-2.0\n- *******************************************************************************/\n-\n-package org.eclipse.hono.deviceregistry.mongodb.config;\n-\n-import java.util.Objects;\n-\n-import org.eclipse.hono.config.ServiceConfigProperties;\n-\n-/**\n- * Common configuration properties for the HTTP based Device Registry Management endpoint.\n- *\n- */\n-public class HttpServiceConfigProperties extends ServiceConfigProperties {\n-    /**\n-     * The default name of the realm that clients need to authenticate to.\n-     */\n-    public static final String DEFAULT_REALM = \"Hono\";\n-\n-    private boolean authenticationRequired = true;\n-    private String realm = DEFAULT_REALM;\n-\n-    /**\n-     * Checks whether the device registry requires clients to authenticate.\n-     * <p>\n-     * If this property is {@code false} then clients are always allowed to access the device registry\n-     * without authentication.\n-     * <p>\n-     * The default value of this property is {@code true}.\n-     *\n-     * @return {@code true} if the device registry should require clients to authenticate.\n-     */\n-    public final boolean isAuthenticationRequired() {\n-        return authenticationRequired;\n-    }\n-\n-    /**\n-     * Sets whether the device registry requires clients to authenticate.\n-     * <p>\n-     * If this property is {@code false} then clients are always allowed to access the device registry\n-     * without authentication.\n-     * <p>\n-     * The default value of this property is {@code true}.\n-     *\n-     * @param authenticationRequired {@code true} if the device registry should require clients to authenticate.\n-     */\n-    public final void setAuthenticationRequired(final boolean authenticationRequired) {\n-        this.authenticationRequired = authenticationRequired;\n-    }\n-\n-    /**\n-     * Gets the name of the realm to be used in the <em>WWW-Authenticate</em> header.\n-     * <p>\n-     * The realm is used in the <em>WWW-Authenticate</em> header.\n-     * <p>\n-     * The default value is {@link #DEFAULT_REALM}.\n-     *\n-     * @return The realm name.\n-     */\n-    public final String getRealm() {\n-        return realm;\n-    }\n-\n-    /**\n-     * Sets the name of the realm to be used in the <em>WWW-Authenticate</em> header.\n-     * <p>\n-     * The realm is used in the <em>WWW-Authenticate</em> header.\n-     * <p>\n-     * The default value is {@link #DEFAULT_REALM}.\n-     *\n-     * @param realm The realm name.\n-     * @throws NullPointerException if the realm is {@code null}.\n-     */\n-    public final void setRealm(final String realm) {\n-        this.realm = Objects.requireNonNull(realm);\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5ODU1Mg==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419498552", "bodyText": "instead of this conditional, you could simply pass in the config object as a param and check its authenticationRequired property to determine, if an AuthHandler needs to be created or not ...", "author": "sophokles73", "createdAt": "2020-05-04T14:55:24Z", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java", "diffHunk": "@@ -323,6 +341,26 @@ public ObjectFactoryCreatingFactoryBean httpServerFactory() {\n         return factory;\n     }\n \n+    /**\n+     * Creates a new instance of an auth handler to provide basic authentication for the \n+     * Hono's Device Registry Management APIs.\n+     * <p>\n+     * This creates an instance of the {@link HonoBasicAuthHandler} with an auth provider of type\n+     * {@link MongoAuth} to verify the credentials.\n+     *\n+     * @return The auth handler.\n+     * @see <a href=\"https://vertx.io/docs/vertx-auth-mongo/java/\">Mongo auth provider docs</a>\n+     */\n+    @Bean\n+    @Scope(\"prototype\")\n+    @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)", "originalCommit": "e319f6102bdace6fdde39d4d758913b8c27943af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxOTI2MA==", "url": "https://github.com/eclipse/hono/pull/1918#discussion_r419719260", "bodyText": "The ConditionalOnProperty has been replaced now with the above option.", "author": "kaniyan", "createdAt": "2020-05-04T20:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5ODU1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1e0e3a86133ee28428a8a954734c8b9721b5a3e2", "chunk": "diff --git a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\nindex 75f3dfcff..5f9638e78 100644\n--- a/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n+++ b/services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/ApplicationConfig.java\n\n@@ -356,8 +344,8 @@ public class ApplicationConfig {\n     @ConditionalOnProperty(name = \"hono.registry.http.authenticationRequired\", havingValue = \"true\", matchIfMissing = true)\n     public AuthHandler createAuthHandler() {\n         return new HonoBasicAuthHandler(\n-                MongoAuth.create(mongoClient(), new JsonObject()),\n-                httpServerProperties().getRealm(),\n+                MongoAuth.create(mongoDBCallExecutor().getMongoClient(), new JsonObject()),\n+                MongoDbDeviceRegistryUtils.DEFAULT_REALM,\n                 getTracer());\n     }\n \n"}}, {"oid": "1e0e3a86133ee28428a8a954734c8b9721b5a3e2", "url": "https://github.com/eclipse/hono/commit/1e0e3a86133ee28428a8a954734c8b9721b5a3e2", "message": "[#1864] Add basic authentication support for the MongoDB based device registry.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T19:59:07Z", "type": "commit"}, {"oid": "349912f252e779623d6bf07408a4c049dd73c078", "url": "https://github.com/eclipse/hono/commit/349912f252e779623d6bf07408a4c049dd73c078", "message": "Refactor to create MongoClient bean instead of depending upon MongoDbCallExecutor.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T19:59:07Z", "type": "commit"}, {"oid": "2753a3c0229c603fa5dbb7297a283437fa974b39", "url": "https://github.com/eclipse/hono/commit/2753a3c0229c603fa5dbb7297a283437fa974b39", "message": "[#1864] Make the name of the realm to be used in the WWW-Authenticate header configurable.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T20:45:47Z", "type": "commit"}, {"oid": "2753a3c0229c603fa5dbb7297a283437fa974b39", "url": "https://github.com/eclipse/hono/commit/2753a3c0229c603fa5dbb7297a283437fa974b39", "message": "[#1864] Make the name of the realm to be used in the WWW-Authenticate header configurable.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>", "committedDate": "2020-05-04T20:45:47Z", "type": "forcePushed"}]}