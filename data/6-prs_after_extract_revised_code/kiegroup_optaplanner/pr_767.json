{"pr_number": 767, "pr_title": "Fix unchecked access to Optional", "pr_createdAt": "2020-05-01T17:37:05Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/767", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3NjgyOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/767#discussion_r419376829", "bodyText": "Given that there is a !flightAssignmentList.isEmpty() check earlier, and that LocalTime.getHour() never returns null (notice that you'd get an NPE if getFlight() or getArrivalUTCTime() returns null), this is an impossible situation (an execution branch that has been theoretically been proven to be impossible). So when an impossible situation happens, it's a bug.\nWe have the policy to start such exceptions with \"Impossible state:\".\nSo I recommend replacing\n.orElseThrow(() -> new IllegalArgumentException(\n  \"No flight with maximum arrival hour found.\"));\n\nwith\n.orElseThrow(() -> new IllegalStateException(\n\"Impossible state: There is not at least one arrival hour in a non-empty flightAssignmentList (\" + flightAssignmentList + \").\"));", "author": "ge0ffrey", "createdAt": "2020-05-04T11:44:00Z", "path": "optaplanner-examples/src/main/java/org/optaplanner/examples/flightcrewscheduling/persistence/FlightCrewSchedulingXlsxFileIO.java", "diffHunk": "@@ -577,7 +577,9 @@ private void writeEmployeesView() {\n                                                 .collect(joining(\", \")));\n                                 int maxArrivalHour = flightAssignmentList.stream()\n                                         .map(a -> a.getFlight().getArrivalUTCTime().getHour())\n-                                        .max(Comparator.naturalOrder()).get();\n+                                        .max(Comparator.naturalOrder())\n+                                        .orElseThrow(() -> new IllegalArgumentException(\n+                                                \"No flight with maximum arrival hour found.\"));", "originalCommit": "c5fff8e5c4fd25747f542cd227737bc913855f27", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3ODA1Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/767#discussion_r419378052", "bodyText": "Thanks, I haven't noticed this policy yet.", "author": "rsynek", "createdAt": "2020-05-04T11:46:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3NjgyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "90078d99c13213c6ad6e2d34ca8712303d9dd3ab", "chunk": "diff --git a/optaplanner-examples/src/main/java/org/optaplanner/examples/flightcrewscheduling/persistence/FlightCrewSchedulingXlsxFileIO.java b/optaplanner-examples/src/main/java/org/optaplanner/examples/flightcrewscheduling/persistence/FlightCrewSchedulingXlsxFileIO.java\nindex bc7930c9f..e2f0388d3 100644\n--- a/optaplanner-examples/src/main/java/org/optaplanner/examples/flightcrewscheduling/persistence/FlightCrewSchedulingXlsxFileIO.java\n+++ b/optaplanner-examples/src/main/java/org/optaplanner/examples/flightcrewscheduling/persistence/FlightCrewSchedulingXlsxFileIO.java\n\n@@ -578,8 +578,9 @@ public class FlightCrewSchedulingXlsxFileIO extends AbstractXlsxSolutionFileIO<F\n                                 int maxArrivalHour = flightAssignmentList.stream()\n                                         .map(a -> a.getFlight().getArrivalUTCTime().getHour())\n                                         .max(Comparator.naturalOrder())\n-                                        .orElseThrow(() -> new IllegalArgumentException(\n-                                                \"No flight with maximum arrival hour found.\"));\n+                                        .orElseThrow(() -> new IllegalStateException(\n+                                                \"Impossible state: There is not at least one arrival hour in a non-empty \"\n+                                                        + \"flightAssignmentList (\" + flightAssignmentList + \").\"));\n                                 int stretch = maxArrivalHour - departureHour;\n                                 currentSheet.addMergedRegion(new CellRangeAddress(currentRowNumber, currentRowNumber,\n                                         currentColumnNumber, currentColumnNumber + stretch));\n"}}, {"oid": "90078d99c13213c6ad6e2d34ca8712303d9dd3ab", "url": "https://github.com/kiegroup/optaplanner/commit/90078d99c13213c6ad6e2d34ca8712303d9dd3ab", "message": "Fix unchecked access to Optional", "committedDate": "2020-05-04T11:50:18Z", "type": "commit"}, {"oid": "90078d99c13213c6ad6e2d34ca8712303d9dd3ab", "url": "https://github.com/kiegroup/optaplanner/commit/90078d99c13213c6ad6e2d34ca8712303d9dd3ab", "message": "Fix unchecked access to Optional", "committedDate": "2020-05-04T11:50:18Z", "type": "forcePushed"}]}