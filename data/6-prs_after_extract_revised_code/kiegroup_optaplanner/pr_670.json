{"pr_number": 670, "pr_title": "PLANNER-1789 PLANNER-1790 ifExists()/ifNotExists() for Tri and QuadStreams", "pr_createdAt": "2020-02-03T14:05:58Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/670", "timeline": [{"oid": "9cd050b2b2eb07c682b3ca1937040e232cca6487", "url": "https://github.com/kiegroup/optaplanner/commit/9cd050b2b2eb07c682b3ca1937040e232cca6487", "message": "Add the API", "committedDate": "2020-02-03T09:00:40Z", "type": "commit"}, {"oid": "63024093a9633cbba428e8aa92fa6824f787eaac", "url": "https://github.com/kiegroup/optaplanner/commit/63024093a9633cbba428e8aa92fa6824f787eaac", "message": "Add the internals", "committedDate": "2020-02-03T09:06:46Z", "type": "commit"}, {"oid": "cd3c529e4f57c0061a84fb27765e17f641f01671", "url": "https://github.com/kiegroup/optaplanner/commit/cd3c529e4f57c0061a84fb27765e17f641f01671", "message": "Finish the implementation", "committedDate": "2020-02-03T09:32:08Z", "type": "commit"}, {"oid": "a274b12e17f2999a5691d1dbfd1e52fd03c55c7a", "url": "https://github.com/kiegroup/optaplanner/commit/a274b12e17f2999a5691d1dbfd1e52fd03c55c7a", "message": "Add test coverage", "committedDate": "2020-02-03T10:00:03Z", "type": "commit"}, {"oid": "1a1b9b7fe24f48e06c62115cf9120f3473bef2e8", "url": "https://github.com/kiegroup/optaplanner/commit/1a1b9b7fe24f48e06c62115cf9120f3473bef2e8", "message": "Add the API", "committedDate": "2020-02-03T10:47:24Z", "type": "commit"}, {"oid": "d05a1317cb3b6e90ab77820638902689773058c0", "url": "https://github.com/kiegroup/optaplanner/commit/d05a1317cb3b6e90ab77820638902689773058c0", "message": "Add the penta suffold", "committedDate": "2020-02-03T10:53:02Z", "type": "commit"}, {"oid": "f6b04c085dafd7d5a5351e313f03f18429469ccd", "url": "https://github.com/kiegroup/optaplanner/commit/f6b04c085dafd7d5a5351e313f03f18429469ccd", "message": "Add the penta implementation", "committedDate": "2020-02-03T12:38:17Z", "type": "commit"}, {"oid": "b7e7d9d8d8c1d598ab1254b34f0f8c3cc2ca05a7", "url": "https://github.com/kiegroup/optaplanner/commit/b7e7d9d8d8c1d598ab1254b34f0f8c3cc2ca05a7", "message": "Add tests for quad stream ifExists", "committedDate": "2020-02-03T14:05:08Z", "type": "commit"}, {"oid": "c3e2fc4d5b61feaf6ab3b164c73b862e06771237", "url": "https://github.com/kiegroup/optaplanner/commit/c3e2fc4d5b61feaf6ab3b164c73b862e06771237", "message": "Fix Revapi", "committedDate": "2020-02-03T14:15:33Z", "type": "commit"}, {"oid": "a20d9a27ddf7b49f9afac6d265d8dfbf44851742", "url": "https://github.com/kiegroup/optaplanner/commit/a20d9a27ddf7b49f9afac6d265d8dfbf44851742", "message": "Move Joiner checks", "committedDate": "2020-02-03T15:47:59Z", "type": "commit"}, {"oid": "2e4d0badd59bf4f3d42c04667047fcb0cfb8dcb4", "url": "https://github.com/kiegroup/optaplanner/commit/2e4d0badd59bf4f3d42c04667047fcb0cfb8dcb4", "message": "Remove unused method", "committedDate": "2020-02-03T16:21:40Z", "type": "commit"}, {"oid": "bee69d7a88580c05ac607392e1b30f1cb4132527", "url": "https://github.com/kiegroup/optaplanner/commit/bee69d7a88580c05ac607392e1b30f1cb4132527", "message": "Remove some code smells", "committedDate": "2020-02-03T18:08:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1OTgxNw==", "url": "https://github.com/kiegroup/optaplanner/pull/670#discussion_r374559817", "bodyText": "(soft) consistency: In AbstractTriJoiner this method signature is different: it's still final (what about Uni & Bi).", "author": "ge0ffrey", "createdAt": "2020-02-04T09:31:42Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/quad/AbstractQuadJoiner.java", "diffHunk": "@@ -20,14 +20,26 @@\n import java.util.List;\n import java.util.function.Function;\n \n+import org.optaplanner.core.api.function.QuadPredicate;\n import org.optaplanner.core.api.function.TriFunction;\n import org.optaplanner.core.api.score.stream.quad.QuadJoiner;\n import org.optaplanner.core.impl.score.stream.common.AbstractJoiner;\n+import org.optaplanner.core.impl.score.stream.common.JoinerType;\n \n public abstract class AbstractQuadJoiner<A, B, C, D> extends AbstractJoiner implements QuadJoiner<A, B, C, D> {\n \n+    private final QuadPredicate<A, B, C, D> filter;\n+\n+    protected AbstractQuadJoiner() {\n+        this.filter = null;\n+    }\n+\n+    protected AbstractQuadJoiner(QuadPredicate<A, B, C, D> filter) {\n+        this.filter = filter;\n+    }\n+\n     @SafeVarargs\n-    public final static <A, B, C, D> QuadJoiner<A, B, C, D> merge(QuadJoiner<A, B, C, D>... joiners) {\n+    public static <A, B, C, D> AbstractQuadJoiner<A, B, C, D> merge(QuadJoiner<A, B, C, D>... joiners) {", "originalCommit": "bee69d7a88580c05ac607392e1b30f1cb4132527", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "9e33ddb001be021ad796e11b696ff9f6fd80ffda", "url": "https://github.com/kiegroup/optaplanner/commit/9e33ddb001be021ad796e11b696ff9f6fd80ffda", "message": "TriJoiner's merge no longer final", "committedDate": "2020-02-04T09:39:09Z", "type": "commit"}]}