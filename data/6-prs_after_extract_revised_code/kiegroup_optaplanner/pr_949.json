{"pr_number": 949, "pr_title": "[7.x] PLANNER-2180 ScoreCalculators become public API", "pr_createdAt": "2020-09-30T13:22:27Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/949", "timeline": [{"oid": "ed7198656a3ce4c0a9afa655a0afaf0776eee6ae", "url": "https://github.com/kiegroup/optaplanner/commit/ed7198656a3ce4c0a9afa655a0afaf0776eee6ae", "message": "Plain replaces", "committedDate": "2020-09-30T12:58:56Z", "type": "commit"}, {"oid": "ddd08a55f376a270cf73826512091297705db2d6", "url": "https://github.com/kiegroup/optaplanner/commit/ddd08a55f376a270cf73826512091297705db2d6", "message": "Fix docs", "committedDate": "2020-09-30T13:05:16Z", "type": "commit"}, {"oid": "91c062a83dccc232a7f0519e5a703b18b9227fb0", "url": "https://github.com/kiegroup/optaplanner/commit/91c062a83dccc232a7f0519e5a703b18b9227fb0", "message": "Fix test", "committedDate": "2020-09-30T13:20:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUxMjYxMg==", "url": "https://github.com/kiegroup/optaplanner/pull/949#discussion_r497512612", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return null if it should to be calculated non-incrementally from {@link #getConstraintMatchTotals()}\n          \n          \n            \n                 * @return null if it should be calculated non-incrementally from {@link #getConstraintMatchTotals()}", "author": "rsynek", "createdAt": "2020-09-30T13:33:25Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.optaplanner.core.api.score.calculator;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import org.optaplanner.core.api.domain.solution.PlanningSolution;\n+import org.optaplanner.core.api.score.Score;\n+import org.optaplanner.core.api.score.constraint.ConstraintMatchTotal;\n+import org.optaplanner.core.api.score.constraint.Indictment;\n+import org.optaplanner.core.impl.score.director.ScoreDirector;\n+\n+/**\n+ * Allows a {@link IncrementalScoreCalculator} to report {@link ConstraintMatchTotal}s\n+ * for explaining a score (= which score constraints match for how much)\n+ * and also for score corruption analysis.\n+ *\n+ * @param <Solution_> the solution type, the class with the {@link PlanningSolution} annotation\n+ * @param <Score_> the score type to go with the solution\n+ */\n+public interface ConstraintMatchAwareIncrementalScoreCalculator<Solution_, Score_ extends Score>\n+        extends IncrementalScoreCalculator<Solution_, Score_> {\n+\n+    /**\n+     * Allows for increased performance because it only tracks if constraintMatchEnabled is true.\n+     * <p>\n+     * Every implementation should call {@link #resetWorkingSolution}\n+     * and only handle the constraintMatchEnabled parameter specifically (or ignore it).\n+     *\n+     * @param workingSolution never null, to pass to {@link #resetWorkingSolution}.\n+     * @param constraintMatchEnabled true if {@link #getConstraintMatchTotals()} or {@link #getIndictmentMap()} might be called.\n+     */\n+    void resetWorkingSolution(Solution_ workingSolution, boolean constraintMatchEnabled);\n+\n+    /**\n+     * @return never null\n+     * @throws IllegalStateException if {@link #resetWorkingSolution}'s constraintMatchEnabled parameter was false\n+     * @see ScoreDirector#getConstraintMatchTotals()\n+     */\n+    Collection<ConstraintMatchTotal> getConstraintMatchTotals();\n+\n+    /**\n+     * @return null if it should to be calculated non-incrementally from {@link #getConstraintMatchTotals()}", "originalCommit": "91c062a83dccc232a7f0519e5a703b18b9227fb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "258669ffa8cc9c3bfb03112fb41359025a9533a9", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java\nindex 95667a9f2c..928a64b089 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java\n\n@@ -55,7 +55,7 @@ public interface ConstraintMatchAwareIncrementalScoreCalculator<Solution_, Score\n     Collection<ConstraintMatchTotal> getConstraintMatchTotals();\n \n     /**\n-     * @return null if it should to be calculated non-incrementally from {@link #getConstraintMatchTotals()}\n+     * @return null if it should be calculated non-incrementally from {@link #getConstraintMatchTotals()}\n      * @throws IllegalStateException if {@link #resetWorkingSolution}'s constraintMatchEnabled parameter was false\n      * @see ScoreDirector#getIndictmentMap()\n      */\n"}}, {"oid": "258669ffa8cc9c3bfb03112fb41359025a9533a9", "url": "https://github.com/kiegroup/optaplanner/commit/258669ffa8cc9c3bfb03112fb41359025a9533a9", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/api/score/calculator/ConstraintMatchAwareIncrementalScoreCalculator.java\n\nCo-authored-by: Radovan Synek <rsynek@redhat.com>", "committedDate": "2020-09-30T13:44:41Z", "type": "commit"}, {"oid": "128263044b0b28074bab38ec2bc03d7eb52c6557", "url": "https://github.com/kiegroup/optaplanner/commit/128263044b0b28074bab38ec2bc03d7eb52c6557", "message": "Fix Javadoc", "committedDate": "2020-09-30T13:47:23Z", "type": "commit"}]}