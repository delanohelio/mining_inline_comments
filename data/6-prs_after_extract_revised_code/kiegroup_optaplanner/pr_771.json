{"pr_number": 771, "pr_title": "PLANNER-1976 Fix decreasing the cardinality of some constraint streams", "pr_createdAt": "2020-05-10T11:43:28Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/771", "timeline": [{"oid": "6240abf2a42671945a4dce31c19a624853db65d5", "url": "https://github.com/kiegroup/optaplanner/commit/6240abf2a42671945a4dce31c19a624853db65d5", "message": "PLANNER-1976 Fix decreasing cardinality of some constraint streams", "committedDate": "2020-05-10T11:39:49Z", "type": "commit"}, {"oid": "81b52e24f3df81330aed1dab0221c731416f7849", "url": "https://github.com/kiegroup/optaplanner/commit/81b52e24f3df81330aed1dab0221c731416f7849", "message": "Rename the bridges, too", "committedDate": "2020-05-10T11:57:32Z", "type": "commit"}, {"oid": "5c617c1936b51c567b7b6e0bf5cbe0483f4fb5d8", "url": "https://github.com/kiegroup/optaplanner/commit/5c617c1936b51c567b7b6e0bf5cbe0483f4fb5d8", "message": "Fix comment", "committedDate": "2020-05-10T12:00:48Z", "type": "commit"}, {"oid": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "url": "https://github.com/kiegroup/optaplanner/commit/6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "message": "Address some Sonar code smells", "committedDate": "2020-05-10T12:32:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMDY1NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/771#discussion_r423130655", "bodyText": "Naming: noop() or noOp() or noOperation()?\nWhy do we need this method?\nDoes it need to be public?", "author": "ge0ffrey", "createdAt": "2020-05-11T15:37:31Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/quad/DefaultQuadConstraintCollector.java", "diffHunk": "@@ -37,6 +38,13 @@ public DefaultQuadConstraintCollector(Supplier<ResultContainer_> supplier,\n         this.finisher = finisher;\n     }\n \n+    public static <A, B, C, D, Result_> QuadConstraintCollector<A, B, C, D, ?, Result_> noop() {", "originalCommit": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMTc5NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/771#discussion_r423131795", "bodyText": "I am ok with doing it like this, but we could just as well do it as a default method on UniConstraintStream. Either way, it's all good.", "author": "ge0ffrey", "createdAt": "2020-05-11T15:39:11Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/bavet/uni/BavetAbstractUniConstraintStream.java", "diffHunk": "@@ -63,6 +63,11 @@ public void addChildStream(BavetAbstractUniConstraintStream<Solution_, A> childS\n         childStreamList.add(childStream);\n     }\n \n+    @Override\n+    public int getCardinality() {\n+        return 1;", "originalCommit": "6a7f8006e2e61fc7cecf6fb5cdc5814ba64633f4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}