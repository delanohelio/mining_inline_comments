{"pr_number": 783, "pr_title": "optaplanner Quickstarts (spring boot quickstart)", "pr_createdAt": "2020-05-20T07:29:13Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/783", "timeline": [{"oid": "5daaf4b2c374ff758224c2563385272c7217e7b7", "url": "https://github.com/kiegroup/optaplanner/commit/5daaf4b2c374ff758224c2563385272c7217e7b7", "message": "optaplanner-quickstarts: spring boot quickstart", "committedDate": "2020-05-20T07:27:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428474756", "bodyText": "Is this caused by a frequent updates as a reaction on every new best solution available?", "author": "rsynek", "createdAt": "2020-05-21T06:44:00Z", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.persistence;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@Service\n+@Transactional\n+public class TimeTableRepository {\n+\n+    // There is only one time table, so there is only timeTableId (= problemId).\n+    public static final Long SINGLETON_TIME_TABLE_ID = 1L;\n+\n+    @Autowired\n+    private TimeslotRepository timeslotRepository;\n+    @Autowired\n+    private RoomRepository roomRepository;\n+    @Autowired\n+    private LessonRepository lessonRepository;\n+\n+    public TimeTable findById(Long id) {\n+        if (!SINGLETON_TIME_TABLE_ID.equals(id)) {\n+            throw new IllegalStateException(\"There is no timeTable with id (\" + id + \").\");\n+        }\n+        // Occurs in a single transaction, so each initialized lesson references the same timeslot/room instance\n+        // that is contained by the timeTable's timeslotList/roomList.\n+        return new TimeTable(\n+                timeslotRepository.findAll(),\n+                roomRepository.findAll(),\n+                lessonRepository.findAll());\n+    }\n+\n+    public void save(TimeTable timeTable) {\n+        for (Lesson lesson : timeTable.getLessonList()) {\n+            // TODO this is awfully naive: optimistic locking causes issues if called by the SolverManager", "originalCommit": "5daaf4b2c374ff758224c2563385272c7217e7b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5NzkyNA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428797924", "bodyText": "No, what happens if someone modifies a talk's teacher while it solving?\nWell, the ProblemChangedRepositoryEventListener will probably prevent that, but not always.\nThe only safe way to prevent it is to use JPA optimistic locking (or worse, pessimistic locking). But this code won't work with optimistic locking... due to planning cloning. Definitly an issue many users will face.", "author": "ge0ffrey", "createdAt": "2020-05-21T17:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODExNg==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428798116", "bodyText": "out of scope to fix for this PR though", "author": "ge0ffrey", "createdAt": "2020-05-21T17:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NDc1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f339adb0e42e3051252deb1dfa21057ea3bf1b4f", "chunk": "diff --git a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/persistence/TimeTableRepository.java\nsimilarity index 64%\nrename from optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java\nrename to optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/persistence/TimeTableRepository.java\nindex 8c0242f20..0dc9894df 100644\n--- a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/TimeTableRepository.java\n+++ b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/persistence/TimeTableRepository.java\n\n@@ -1,12 +1,27 @@\n-package com.example.persistence;\n-\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.schooltimetabling.persistence;\n+\n+import com.example.schooltimetabling.domain.Lesson;\n+import com.example.schooltimetabling.domain.TimeTable;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n \n-import com.example.domain.Lesson;\n-import com.example.domain.TimeTable;\n-\n @Service\n @Transactional\n public class TimeTableRepository {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MDcxNw==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428480717", "bodyText": "I think it's worth describing what the issue is that a user needs to provide such a handler. This class is some kind of workaround. If I am required to put such a workaround in my project, I need to know why.", "author": "rsynek", "createdAt": "2020-05-21T07:00:53Z", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package com.example.persistence;\n+\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.rest.core.annotation.HandleBeforeCreate;\n+import org.springframework.data.rest.core.annotation.HandleBeforeDelete;\n+import org.springframework.data.rest.core.annotation.HandleBeforeSave;\n+import org.springframework.data.rest.core.annotation.RepositoryEventHandler;\n+import org.springframework.stereotype.Component;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.Room;\n+import com.example.domain.Timeslot;\n+import com.example.solver.TimeTableController;\n+\n+@Component\n+@RepositoryEventHandler\n+public class ProblemChangedRepositoryEventListener {", "originalCommit": "5daaf4b2c374ff758224c2563385272c7217e7b7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5ODI4MA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r428798280", "bodyText": "Agreed, this needs a motivation", "author": "ge0ffrey", "createdAt": "2020-05-21T17:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MDcxNw=="}], "type": "inlineReview", "revised_code": {"commit": "ee8eda283770473e6dba306c3a5aff249f8ffe35", "chunk": "diff --git a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java\nindex 61084ee31..2cb455b42 100644\n--- a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java\n+++ b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/persistence/ProblemChangedRepositoryEventListener.java\n\n@@ -13,6 +13,9 @@ import com.example.domain.Room;\n import com.example.domain.Timeslot;\n import com.example.solver.TimeTableController;\n \n+/**\n+ * This class ensures that during solving, no CRUD operations are allowed.\n+ */\n @Component\n @RepositoryEventHandler\n public class ProblemChangedRepositoryEventListener {\n"}}, {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35", "url": "https://github.com/kiegroup/optaplanner/commit/ee8eda283770473e6dba306c3a5aff249f8ffe35", "message": "optaplanner-quickstarts: first quarkus and spring boot quickstarts", "committedDate": "2020-05-22T08:20:20Z", "type": "commit"}, {"oid": "ee8eda283770473e6dba306c3a5aff249f8ffe35", "url": "https://github.com/kiegroup/optaplanner/commit/ee8eda283770473e6dba306c3a5aff249f8ffe35", "message": "optaplanner-quickstarts: first quarkus and spring boot quickstarts", "committedDate": "2020-05-22T08:20:20Z", "type": "forcePushed"}, {"oid": "a6666bc02c40badd58f97c867d42df7cba256f17", "url": "https://github.com/kiegroup/optaplanner/commit/a6666bc02c40badd58f97c867d42df7cba256f17", "message": "Fix fail fast", "committedDate": "2020-05-22T08:57:04Z", "type": "commit"}, {"oid": "ee758776798b9ef1b1f6d1722c8245395dae2213", "url": "https://github.com/kiegroup/optaplanner/commit/ee758776798b9ef1b1f6d1722c8245395dae2213", "message": "Don't include optaplanner-quickstarts twice", "committedDate": "2020-05-22T10:04:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429117050", "bodyText": "Who is this comment targetting, us or our users?", "author": "rsynek", "createdAt": "2020-05-22T08:36:01Z", "path": "optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.acme.optaplanner.rest;\n+\n+import java.util.List;\n+\n+import javax.transaction.Transactional;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.acme.optaplanner.domain.Room;\n+\n+import io.quarkus.panache.common.Sort;\n+\n+@Path(\"/rooms\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Consumes(MediaType.APPLICATION_JSON)\n+@Transactional\n+public class RoomResource {\n+\n+    @GET\n+    public List<Room> getAllRooms() {\n+        return Room.listAll(Sort.by(\"name\").and(\"id\"));\n+    }\n+\n+    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms", "originalCommit": "ee8eda283770473e6dba306c3a5aff249f8ffe35", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyMzkyNg==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429223926", "bodyText": "Mostly us, I guess.\nYou think it should be removed?", "author": "ge0ffrey", "createdAt": "2020-05-22T12:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyNjIxMw==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429226213", "bodyText": "If it's for us, we don't need it. We have tests.", "author": "rsynek", "createdAt": "2020-05-22T12:48:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MDM0MA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429270340", "bodyText": "ok, removing", "author": "ge0ffrey", "createdAt": "2020-05-22T14:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExNzA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "8a0a94b7a67bca544bc52b53ff3cb964465c336a", "chunk": "diff --git a/optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java b/optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java\nindex f3bc9bb21..4f7447f4d 100644\n--- a/optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java\n+++ b/optaplanner-quickstarts/quarkus-school-timetabling/src/main/java/org/acme/optaplanner/rest/RoomResource.java\n\n@@ -28,7 +28,6 @@ public class RoomResource {\n         return Room.listAll(Sort.by(\"name\").and(\"id\"));\n     }\n \n-    // To try:  curl -d '{\"name\":\"Room Z\"}' -H \"Content-Type: application/json\" -X POST http://localhost:8080/rooms\n     @POST\n     public Response add(Room room) {\n         Room.persist(room);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429134820", "bodyText": "for some reason, this test does not run:\n\nT E S T S\nRunning com.example.solver.TimeTableControllerTest\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec\nResults :\nTests run: 0, Failures: 0, Errors: 0, Skipped: 0", "author": "rsynek", "createdAt": "2020-05-22T09:14:12Z", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.example.solver;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.Timeout;\n+import org.optaplanner.core.api.solver.SolverStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+import com.example.domain.Lesson;\n+import com.example.domain.TimeTable;\n+\n+@SpringBootTest(properties = {\n+        \"optaplanner.solver.termination.spent-limit=1h\", // Effectively disable this termination in favor of the best-score-limit\n+        \"optaplanner.solver.termination.best-score-limit=0hard/*soft\"})\n+public class TimeTableControllerTest {", "originalCommit": "a6666bc02c40badd58f97c867d42df7cba256f17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMDI2NA==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429230264", "bodyText": "Good catch. Adding this on my todo list, extracting to a new PR.", "author": "ge0ffrey", "createdAt": "2020-05-22T12:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIzMTMwMg==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429231302", "bodyText": "Probably related to moving from the spring parent to the spring bom", "author": "ge0ffrey", "createdAt": "2020-05-22T12:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNDgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "f339adb0e42e3051252deb1dfa21057ea3bf1b4f", "chunk": "diff --git a/optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java b/optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/schooltimetabling/solver/TimeTableControllerTest.java\nsimilarity index 67%\nrename from optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java\nrename to optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/schooltimetabling/solver/TimeTableControllerTest.java\nindex db549a644..e0a54f562 100644\n--- a/optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/solver/TimeTableControllerTest.java\n+++ b/optaplanner-quickstarts/spring-boot-school-timetabling/src/test/java/com/example/schooltimetabling/solver/TimeTableControllerTest.java\n\n@@ -1,4 +1,20 @@\n-package com.example.solver;\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.schooltimetabling.solver;\n \n import static org.junit.jupiter.api.Assertions.assertFalse;\n import static org.junit.jupiter.api.Assertions.assertNotNull;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429135936", "bodyText": "vs. org.acme.optaplanner in the quarkus quickstart? Why not org.optaplanner.quickstart?", "author": "rsynek", "createdAt": "2020-05-22T09:16:27Z", "path": "optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java", "diffHunk": "@@ -0,0 +1,198 @@\n+package com.example;", "originalCommit": "a6666bc02c40badd58f97c867d42df7cba256f17", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIyNDYyMw==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429224623", "bodyText": "Yea, this is a discussion in it's own. Opening conversation on zulip", "author": "ge0ffrey", "createdAt": "2020-05-22T12:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI5MjU4OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/783#discussion_r429292589", "bodyText": "settled on org.acme.schooltimetabling and com.example.schooltimetabling", "author": "ge0ffrey", "createdAt": "2020-05-22T14:48:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTkzNg=="}], "type": "inlineReview", "revised_code": {"commit": "f339adb0e42e3051252deb1dfa21057ea3bf1b4f", "chunk": "diff --git a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/TimeTableSpringBootApp.java\nsimilarity index 93%\nrename from optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java\nrename to optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/TimeTableSpringBootApp.java\nindex acbdb61d7..58c862f05 100644\n--- a/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/TimeTableSpringBootApp.java\n+++ b/optaplanner-quickstarts/spring-boot-school-timetabling/src/main/java/com/example/schooltimetabling/TimeTableSpringBootApp.java\n\n@@ -1,8 +1,27 @@\n-package com.example;\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.schooltimetabling;\n \n import java.time.DayOfWeek;\n import java.time.LocalTime;\n \n+import com.example.schooltimetabling.domain.Lesson;\n+import com.example.schooltimetabling.domain.Room;\n+import com.example.schooltimetabling.domain.Timeslot;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.boot.CommandLineRunner;\n import org.springframework.boot.SpringApplication;\n"}}, {"oid": "e338927a59c821d521e02d0b5f0d263cb31df36f", "url": "https://github.com/kiegroup/optaplanner/commit/e338927a59c821d521e02d0b5f0d263cb31df36f", "message": "Remove wrappers + shellcheck", "committedDate": "2020-05-22T12:25:25Z", "type": "commit"}, {"oid": "a955f43574ec3d500d27a188ecbddf54fe7e9800", "url": "https://github.com/kiegroup/optaplanner/commit/a955f43574ec3d500d27a188ecbddf54fe7e9800", "message": "Remove obsolete line in help", "committedDate": "2020-05-22T12:43:06Z", "type": "commit"}, {"oid": "8a0a94b7a67bca544bc52b53ff3cb964465c336a", "url": "https://github.com/kiegroup/optaplanner/commit/8a0a94b7a67bca544bc52b53ff3cb964465c336a", "message": "Remove curl comment", "committedDate": "2020-05-22T14:12:51Z", "type": "commit"}, {"oid": "f339adb0e42e3051252deb1dfa21057ea3bf1b4f", "url": "https://github.com/kiegroup/optaplanner/commit/f339adb0e42e3051252deb1dfa21057ea3bf1b4f", "message": "Refactor packages and groupId's", "committedDate": "2020-05-22T14:34:56Z", "type": "commit"}, {"oid": "c81b99172d5d161ad6a19c507e96a46773a67038", "url": "https://github.com/kiegroup/optaplanner/commit/c81b99172d5d161ad6a19c507e96a46773a67038", "message": "Fix spring not working tests", "committedDate": "2020-05-22T14:42:36Z", "type": "commit"}]}