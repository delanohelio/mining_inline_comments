{"pr_number": 843, "pr_title": "PLANNER-1960: Use Thread.currentThread().getContextClassLoader() when loading Drools for Quarkus", "pr_createdAt": "2020-07-20T16:37:50Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/843", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxMzM0NA==", "url": "https://github.com/kiegroup/optaplanner/pull/843#discussion_r458813344", "bodyText": "We do indeed need to use the Thread.currentThread().getContextClassLoader() in quarkus (Stuart Douglas did a simiar change a few months ago for the quarkus extension). Great that you've find the fix.\nI'd rather not change the default ScoreDirectorFactoryConfig logic for that - it can have side effects in other enviromnents, but instead we need to make sure that quarkus extension passes it's classloader.", "author": "ge0ffrey", "createdAt": "2020-07-22T13:58:59Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java", "diffHunk": "@@ -421,7 +421,8 @@ public ScoreDirectorFactoryConfig withAssertionScoreDirectorFactory(\n             KieResources kieResources = kieServices.getResources();\n             KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\n             if (!ConfigUtils.isEmptyCollection(scoreDrlList)) {\n-                ClassLoader actualClassLoader = (classLoader != null) ? classLoader : getClass().getClassLoader();\n+                ClassLoader actualClassLoader =\n+                        (classLoader != null) ? classLoader : Thread.currentThread().getContextClassLoader();", "originalCommit": "20c8474c04a7bec32e6d381b9cdfad75f29ace03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNTA1OA==", "url": "https://github.com/kiegroup/optaplanner/pull/843#discussion_r458815058", "bodyText": "@Christopher-Chianelli Can you try making this change in OptaPlannerBeanProvider instead?\nThe SolverFactory.create() method called there, also accept a ClassLoader as 2th parameter. The other create calls reuse that SolverFactory instance.", "author": "ge0ffrey", "createdAt": "2020-07-22T14:01:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxMzM0NA=="}], "type": "inlineReview", "revised_code": {"commit": "53fc0238a893b9a3e06ef36c9f5f22441ac8e55f", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java b/optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java\nindex fd410d348..5712aece6 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/config/score/director/ScoreDirectorFactoryConfig.java\n\n@@ -421,8 +421,7 @@ public class ScoreDirectorFactoryConfig extends AbstractConfig<ScoreDirectorFact\n             KieResources kieResources = kieServices.getResources();\n             KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\n             if (!ConfigUtils.isEmptyCollection(scoreDrlList)) {\n-                ClassLoader actualClassLoader =\n-                        (classLoader != null) ? classLoader : Thread.currentThread().getContextClassLoader();\n+                ClassLoader actualClassLoader = (classLoader != null) ? classLoader : getClass().getClassLoader();\n                 for (String scoreDrl : scoreDrlList) {\n                     if (scoreDrl == null) {\n                         throw new IllegalArgumentException(\"The scoreDrl (\" + scoreDrl + \") cannot be null.\");\n"}}, {"oid": "c5438e3da3967e43a743f67b0f3dec7042bb6bd9", "url": "https://github.com/kiegroup/optaplanner/commit/c5438e3da3967e43a743f67b0f3dec7042bb6bd9", "message": "PLANNER-1960: Use Thread.currentThread().getContextClassLoader() when loading Drools for Quarkus\n\nSee https://github.com/quarkusio/quarkus/issues/2531 for details:\nResources inside the deployment are not on the system class path in dev mode, as we need a new class loader to enable hot deployment.", "committedDate": "2020-07-22T14:05:38Z", "type": "commit"}, {"oid": "53fc0238a893b9a3e06ef36c9f5f22441ac8e55f", "url": "https://github.com/kiegroup/optaplanner/commit/53fc0238a893b9a3e06ef36c9f5f22441ac8e55f", "message": "Set Classloader in OptaPlannerBeanProvider\n\nNote: for Drools to work, you need\nto add the following exclusion to optaplanner-quarkus:\n\n        <exclusion>\n          <groupId>org.kie.kogito</groupId>\n          <artifactId>drools-core-static</artifactId>\n        </exclusion>\n\nand add the following dependency to your project:\n\n    <dependency>\n      <groupId>org.kie.kogito</groupId>\n      <artifactId>drools-core-dynamic</artifactId>\n    </dependency>", "committedDate": "2020-07-22T17:21:45Z", "type": "commit"}, {"oid": "53fc0238a893b9a3e06ef36c9f5f22441ac8e55f", "url": "https://github.com/kiegroup/optaplanner/commit/53fc0238a893b9a3e06ef36c9f5f22441ac8e55f", "message": "Set Classloader in OptaPlannerBeanProvider\n\nNote: for Drools to work, you need\nto add the following exclusion to optaplanner-quarkus:\n\n        <exclusion>\n          <groupId>org.kie.kogito</groupId>\n          <artifactId>drools-core-static</artifactId>\n        </exclusion>\n\nand add the following dependency to your project:\n\n    <dependency>\n      <groupId>org.kie.kogito</groupId>\n      <artifactId>drools-core-dynamic</artifactId>\n    </dependency>", "committedDate": "2020-07-22T17:21:45Z", "type": "forcePushed"}]}