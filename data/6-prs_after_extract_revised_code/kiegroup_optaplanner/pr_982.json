{"pr_number": 982, "pr_title": "PLANNER-2212 Minimize the occurrence of match weight exceptions", "pr_createdAt": "2020-10-21T14:17:28Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/982", "timeline": [{"oid": "fc51266b603a44a53c4624945218389ef75c01ac", "url": "https://github.com/kiegroup/optaplanner/commit/fc51266b603a44a53c4624945218389ef75c01ac", "message": "Fix existing exceptions", "committedDate": "2020-10-21T14:04:36Z", "type": "commit"}, {"oid": "5be31d7a4c562c63782e2af25340ee64865fa19c", "url": "https://github.com/kiegroup/optaplanner/commit/5be31d7a4c562c63782e2af25340ee64865fa19c", "message": "Minimize the occurrence of the exception", "committedDate": "2020-10-21T14:12:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyOTc5Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r509329796", "bodyText": "If we want to do this (and the jury is out on that), then we 'd want to comment here clearly why we're sweeping this under the mat.", "author": "ge0ffrey", "createdAt": "2020-10-21T14:20:51Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java", "diffHunk": "@@ -105,7 +105,11 @@ protected static void impactScore(DroolsConstraint constraint, Drools drools, Ab\n             BigDecimal impact) {\n         RuleContext kcontext = (RuleContext) drools;\n         constraint.assertCorrectImpact(impact);\n-        scoreHolder.impactScore(kcontext, impact);\n+        try {\n+            scoreHolder.impactScore(kcontext, impact);\n+        } catch (UnsupportedOperationException exception) {\n+\n+        }", "originalCommit": "5be31d7a4c562c63782e2af25340ee64865fa19c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMTUxMw==", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r509331513", "bodyText": "Yeah, sorry, this catch shouldn't be there at all. :-)", "author": "triceo", "createdAt": "2020-10-21T14:22:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMyOTc5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b924203d67f290f7542d3ba3db8e684a8776c781", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java\nindex 067711ed8..4a4d6a6e8 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/drools/common/rules/AbstractRuleAssembler.java\n\n@@ -105,11 +105,7 @@ abstract class AbstractRuleAssembler<Predicate_> implements RuleAssembler,\n             BigDecimal impact) {\n         RuleContext kcontext = (RuleContext) drools;\n         constraint.assertCorrectImpact(impact);\n-        try {\n-            scoreHolder.impactScore(kcontext, impact);\n-        } catch (UnsupportedOperationException exception) {\n-\n-        }\n+        scoreHolder.impactScore(kcontext, impact);\n     }\n \n     int getExpectedGroupByCount() {\n"}}, {"oid": "b924203d67f290f7542d3ba3db8e684a8776c781", "url": "https://github.com/kiegroup/optaplanner/commit/b924203d67f290f7542d3ba3db8e684a8776c781", "message": "Remove needless catch", "committedDate": "2020-10-21T14:35:58Z", "type": "commit"}, {"oid": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994", "url": "https://github.com/kiegroup/optaplanner/commit/7daa0ba0e1f0e5c54acdb851916b196b9b2c0994", "message": "Address code review comments", "committedDate": "2020-10-22T10:58:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwODkyOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/982#discussion_r515908929", "bodyText": "nitpick: Typically we don't end the Maybe sentences with a question mark (?), but with a dot (.).", "author": "ge0ffrey", "createdAt": "2020-11-02T11:27:59Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java", "diffHunk": "@@ -104,6 +105,22 @@ public void impactScore(RuleContext kcontext, int weightMultiplier) {\n         matchExecutor.accept(kcontext, weightMultiplier);\n     }\n \n+    @Override\n+    public void impactScore(RuleContext kcontext, long weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a long weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeLong() to penalize()?\");\n+    }\n+\n+    @Override\n+    public void impactScore(RuleContext kcontext, BigDecimal weightMultiplier) {\n+        throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n+                + \"), the scoreHolder class (\" + getClass()\n+                + \") does not support a BigDecimal weightMultiplier (\" + weightMultiplier + \").\\n\"\n+                + \"If you're using constraint streams, maybe switch from penalizeBigDecimal() to penalize()?\");", "originalCommit": "7daa0ba0e1f0e5c54acdb851916b196b9b2c0994", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "93f185b31c94daada2e45a31be44001d99749192", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java\nindex 0a92562a8..cf7a51fe1 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/simple/SimpleScoreHolderImpl.java\n\n@@ -110,7 +110,7 @@ public final class SimpleScoreHolderImpl extends AbstractScoreHolder<SimpleScore\n         throw new UnsupportedOperationException(\"In the rule (\" + kcontext.getRule().getName()\n                 + \"), the scoreHolder class (\" + getClass()\n                 + \") does not support a long weightMultiplier (\" + weightMultiplier + \").\\n\"\n-                + \"If you're using constraint streams, maybe switch from penalizeLong() to penalize()?\");\n+                + \"If you're using constraint streams, maybe switch from penalizeLong() to penalize().\");\n     }\n \n     @Override\n"}}, {"oid": "93f185b31c94daada2e45a31be44001d99749192", "url": "https://github.com/kiegroup/optaplanner/commit/93f185b31c94daada2e45a31be44001d99749192", "message": "Remove question marks", "committedDate": "2020-11-02T12:01:48Z", "type": "commit"}]}