{"pr_number": 1030, "pr_title": "PLANNER-2241 Add missing Javadocs to ConstraintCollectors", "pr_createdAt": "2020-11-11T11:18:46Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/1030", "timeline": [{"oid": "9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "url": "https://github.com/kiegroup/optaplanner/commit/9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "message": "PLANNER-2241 Add missing Javadocs to ConstraintCollectors", "committedDate": "2020-11-11T11:17:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2NzU3Nw==", "url": "https://github.com/kiegroup/optaplanner/pull/1030#discussion_r522867577", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Uniqueness is determined by equality (see {@link #equals(Object)}).\n          \n          \n            \n                 * Uniqueness is determined by {@link #equals(Object) equality}.", "author": "ge0ffrey", "createdAt": "2020-11-13T10:39:48Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java", "diffHunk": "@@ -157,10 +187,23 @@\n     // countDistinct\n     // ************************************************************************\n \n+    /**\n+     * As defined by {@link #countDistinct(Function)}, with {@link Function#identity()} as the argument.\n+     */\n     public static <A> UniConstraintCollector<A, ?, Integer> countDistinct() {\n         return countDistinct(Function.identity());\n     }\n \n+    /**\n+     * Returns a collector that counts a number of unique elements in a group.\n+     * Uniqueness is determined by equality (see {@link #equals(Object)}).", "originalCommit": "9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "487364794fafa0ba1090c225f7bc6a33010aa8a0", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\nindex d92c81e5f3..dfb0338124 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\n@@ -196,7 +196,7 @@ public final class ConstraintCollectors {\n \n     /**\n      * Returns a collector that counts a number of unique elements in a group.\n-     * Uniqueness is determined by equality (see {@link #equals(Object)}).\n+     * Uniqueness is determined by {@link #equals(Object) equality}.\n      * <p>\n      * For example, {@code [Ann(age = 20), Beth(age = 25), Cathy(age = 30), David(age = 30), Eric(age = 20)]} with\n      * {@code .groupBy(countDistinct(Person::getAge))} returns {@code 3}, one for age 20, 25 and 30 each.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2ODExOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1030#discussion_r522868119", "bodyText": "Pretty sure this is a bug: \"number of distinct\"", "author": "ge0ffrey", "createdAt": "2020-11-13T10:40:48Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java", "diffHunk": "@@ -301,6 +365,15 @@ private static Runnable innerCountDistinctLong(CountDistinctLongResultContainer\n     // sum\n     // ************************************************************************\n \n+    /**\n+     * Returns a collector that sums a number of distinct elements in a group.", "originalCommit": "9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2ODU2Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/1030#discussion_r522868562", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a collector that sums a number of distinct elements in a group.\n          \n          \n            \n                 * Returns a collector that sums an {@code int} property of the elements that are being grouped.", "author": "ge0ffrey", "createdAt": "2020-11-13T10:41:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2ODExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "18148275a5b8266fdca7edacd752648f971f1a15", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\nindex d92c81e5f3..9f5bf3c38a 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\n@@ -366,7 +366,7 @@ public final class ConstraintCollectors {\n     // ************************************************************************\n \n     /**\n-     * Returns a collector that sums a number of distinct elements in a group.\n+     * Returns a collector that sums an {@code int} property of the elements that are being grouped. \n      * <p>\n      * For example, {@code [Ann(age = 20), Beth(age = 25), Cathy(age = 30), David(age = 30), Eric(age = 20)]} with\n      * {@code .groupBy(sum(Person::getAge))} returns {@code 125}.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2OTA3Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/1030#discussion_r522869076", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a collector that counts a number of unique elements in a group.\n          \n          \n            \n                 * Returns a collector that counts the number of unique elements that are being grouped.", "author": "ge0ffrey", "createdAt": "2020-11-13T10:42:40Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java", "diffHunk": "@@ -157,10 +187,23 @@\n     // countDistinct\n     // ************************************************************************\n \n+    /**\n+     * As defined by {@link #countDistinct(Function)}, with {@link Function#identity()} as the argument.\n+     */\n     public static <A> UniConstraintCollector<A, ?, Integer> countDistinct() {\n         return countDistinct(Function.identity());\n     }\n \n+    /**\n+     * Returns a collector that counts a number of unique elements in a group.", "originalCommit": "9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "487364794fafa0ba1090c225f7bc6a33010aa8a0", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\nindex d92c81e5f3..dfb0338124 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\n@@ -196,7 +196,7 @@ public final class ConstraintCollectors {\n \n     /**\n      * Returns a collector that counts a number of unique elements in a group.\n-     * Uniqueness is determined by equality (see {@link #equals(Object)}).\n+     * Uniqueness is determined by {@link #equals(Object) equality}.\n      * <p>\n      * For example, {@code [Ann(age = 20), Beth(age = 25), Cathy(age = 30), David(age = 30), Eric(age = 20)]} with\n      * {@code .groupBy(countDistinct(Person::getAge))} returns {@code 3}, one for age 20, 25 and 30 each.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg2OTI1MQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1030#discussion_r522869251", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns a collector that counts a number of elements in a group.\n          \n          \n            \n                 * Returns a collector that counts the number of elements that are being grouped.", "author": "ge0ffrey", "createdAt": "2020-11-13T10:43:02Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java", "diffHunk": "@@ -73,6 +73,15 @@\n     // count\n     // ************************************************************************\n \n+    /**\n+     * Returns a collector that counts a number of elements in a group.", "originalCommit": "9f4b9ba8ca3f8ca16539ce60587ac3230f28ff6f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "898dddb83ae7bb1dba6ca26899a85b5262e94599", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\nindex d92c81e5f3..284daab27d 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\n@@ -74,7 +74,7 @@ public final class ConstraintCollectors {\n     // ************************************************************************\n \n     /**\n-     * Returns a collector that counts a number of elements in a group.\n+     * Returns a collector that counts the number of elements that are being grouped.\n      * <p>\n      * For example, {@code [Ann(age = 20), Beth(age = 25), Cathy(age = 30), David(age = 30), Eric(age = 20)]} with\n      * {@code .groupBy(count())} returns {@code 5}.\n"}}, {"oid": "487364794fafa0ba1090c225f7bc6a33010aa8a0", "url": "https://github.com/kiegroup/optaplanner/commit/487364794fafa0ba1090c225f7bc6a33010aa8a0", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>", "committedDate": "2020-11-13T10:52:56Z", "type": "commit"}, {"oid": "18148275a5b8266fdca7edacd752648f971f1a15", "url": "https://github.com/kiegroup/optaplanner/commit/18148275a5b8266fdca7edacd752648f971f1a15", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>", "committedDate": "2020-11-13T10:53:12Z", "type": "commit"}, {"oid": "2adb850780ccadad86eee608046f05f2a2874f4a", "url": "https://github.com/kiegroup/optaplanner/commit/2adb850780ccadad86eee608046f05f2a2874f4a", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>", "committedDate": "2020-11-13T10:53:21Z", "type": "commit"}, {"oid": "898dddb83ae7bb1dba6ca26899a85b5262e94599", "url": "https://github.com/kiegroup/optaplanner/commit/898dddb83ae7bb1dba6ca26899a85b5262e94599", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/api/score/stream/ConstraintCollectors.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>", "committedDate": "2020-11-13T10:53:29Z", "type": "commit"}]}