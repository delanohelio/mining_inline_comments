{"pr_number": 794, "pr_title": "PLANNER-1991 ScoreHolder-related deprecations", "pr_createdAt": "2020-06-01T06:57:07Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/794", "timeline": [{"oid": "11949597a7341dc06b6c444d8af25f0737dbc27c", "url": "https://github.com/kiegroup/optaplanner/commit/11949597a7341dc06b6c444d8af25f0737dbc27c", "message": "Base deprecations", "committedDate": "2020-06-01T06:34:41Z", "type": "commit"}, {"oid": "41a9d33b4be7a96d8a1ca1cb5c215d47e28f9290", "url": "https://github.com/kiegroup/optaplanner/commit/41a9d33b4be7a96d8a1ca1cb5c215d47e28f9290", "message": "Deprecate one more class", "committedDate": "2020-06-01T06:40:11Z", "type": "commit"}, {"oid": "958580c10c8538115d959d4ee0abfd47f4a867fc", "url": "https://github.com/kiegroup/optaplanner/commit/958580c10c8538115d959d4ee0abfd47f4a867fc", "message": "Deal with the impact of deprecation", "committedDate": "2020-06-01T06:47:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NjUzNg==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433176536", "bodyText": "I don't think we can deprecate the actual ScoreHolders, like this one. As that means we're forcing people in scoreDRL to use deprecated code, with no alternative to migrate to.\nWhat we can do is deprecate the methods we don't want them to use, and once we branch 8.0, turn BendableScoreHolder etc into an interface with the exact same full class name while only remaining the methods that we allow them to use.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:15:38Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java", "diffHunk": "@@ -30,7 +30,9 @@\n \n /**\n  * @see BendableScore\n+ * @deprecated to be replaced by an interface of the same name, removing many methods\n  */\n+@Deprecated\n public class BendableScoreHolder extends AbstractScoreHolder<BendableScore> {", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\nindex 0ed9720425..a7221c6394 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\n\n@@ -28,11 +28,6 @@ import org.optaplanner.core.api.domain.constraintweight.ConstraintWeight;\n import org.optaplanner.core.api.domain.solution.PlanningScore;\n import org.optaplanner.core.api.score.holder.AbstractScoreHolder;\n \n-/**\n- * @see BendableScore\n- * @deprecated to be replaced by an interface of the same name, removing many methods\n- */\n-@Deprecated\n public class BendableScoreHolder extends AbstractScoreHolder<BendableScore> {\n \n     protected final Map<Rule, BiConsumer<RuleContext, Integer>> matchExecutorByNumberMap = new LinkedHashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzE1NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433177155", "bodyText": "Let's reference ScoreManager because if they're using this, they probably want to learn about ScoreManager.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:17:21Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java", "diffHunk": "@@ -50,15 +50,19 @@\n      * @param initScore {@code <= 0}, managed by OptaPlanner, needed as a parameter in the {@link Score}'s creation\n      *        method, see {@link Score#getInitScore()}\n      * @return never null, the {@link Score} of the working {@link PlanningSolution}\n+     * @deprecated for removal from public API", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\nindex afb520706b..c6cbd1dd38 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n\n@@ -50,7 +51,7 @@ public interface ScoreHolder<Score_ extends Score<Score_>> {\n      * @param initScore {@code <= 0}, managed by OptaPlanner, needed as a parameter in the {@link Score}'s creation\n      *        method, see {@link Score#getInitScore()}\n      * @return never null, the {@link Score} of the working {@link PlanningSolution}\n-     * @deprecated for removal from public API\n+     * @deprecated for removal from public API, see {@link ScoreManager}.\n      */\n     @Deprecated(/* forRemoval = true */)\n     Score_ extractScore(int initScore);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzIzNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433177235", "bodyText": "Let's reference ScoreManager because if they're using this, they probably want to learn about ScoreManager.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:17:33Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java", "diffHunk": "@@ -81,7 +87,9 @@\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} is false\n      * @see ScoreDirector#getConstraintMatchTotals()\n+     * @deprecated for removal from public API", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzUwNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433177505", "bodyText": "Even though those getConstraintMatchTotals() methods aren't there yet, they will end up on ScoreManager. Might as well already reference it.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:18:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzIzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\nindex afb520706b..c6cbd1dd38 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n\n@@ -87,7 +88,7 @@ public interface ScoreHolder<Score_ extends Score<Score_>> {\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} is false\n      * @see ScoreDirector#getConstraintMatchTotals()\n-     * @deprecated for removal from public API\n+     * @deprecated for removal from public API, see {@link ScoreManager}\n      */\n     @Deprecated(/* forRemoval = true */)\n     Collection<ConstraintMatchTotal> getConstraintMatchTotals();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzI2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433177269", "bodyText": "Let's reference ScoreManager because if they're using this, they probably want to learn about ScoreManager.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:17:37Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java", "diffHunk": "@@ -92,7 +100,9 @@\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} is false\n      * @see ScoreDirector#getConstraintMatchTotalMap()\n+     * @deprecated for removal from public API", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\nindex afb520706b..c6cbd1dd38 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n\n@@ -100,7 +101,7 @@ public interface ScoreHolder<Score_ extends Score<Score_>> {\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} is false\n      * @see ScoreDirector#getConstraintMatchTotalMap()\n-     * @deprecated for removal from public API\n+     * @deprecated for removal from public API, see {@link ScoreManager}\n      */\n     @Deprecated(/* forRemoval = true */)\n     Map<String, ConstraintMatchTotal> getConstraintMatchTotalMap();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3NzMwMw==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433177303", "bodyText": "Let's reference ScoreManager because if they're using this, they probably want to learn about ScoreManager.", "author": "ge0ffrey", "createdAt": "2020-06-01T11:17:41Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java", "diffHunk": "@@ -103,7 +113,9 @@\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} returns false\n      * @see ScoreDirector#getIndictmentMap()\n+     * @deprecated for removal from public API", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\nindex afb520706b..c6cbd1dd38 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/holder/ScoreHolder.java\n\n@@ -113,7 +114,7 @@ public interface ScoreHolder<Score_ extends Score<Score_>> {\n      * @return never null\n      * @throws IllegalStateException if {@link #isConstraintMatchEnabled()} returns false\n      * @see ScoreDirector#getIndictmentMap()\n-     * @deprecated for removal from public API\n+     * @deprecated for removal from public API, see {@link ScoreManager}\n      */\n     @Deprecated(/* forRemoval = true */)\n     Map<Object, Indictment> getIndictmentMap();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3ODUxMA==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433178510", "bodyText": "I am not sure about these changes.\nIn 8.0, where we have DefaultBendableScoreHolder implements BendableScoreHolder, we'll want to return BendableScoreHolder here (not DefaultBendableScoreHolder nor just ScoreHolder). Or wait - optaplanner-core will need something that has extractScore(), so it will need to return AbstractScoreHolder or InnerScoreHolder or DefaultBendableScoreHolder anyway...", "author": "ge0ffrey", "createdAt": "2020-06-01T11:20:53Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/bendable/BendableScoreDefinition.java", "diffHunk": "@@ -109,7 +110,7 @@ public BendableScoreInliner buildScoreInliner(boolean constraintMatchEnabled) {\n     }\n \n     @Override\n-    public BendableScoreHolder buildScoreHolder(boolean constraintMatchEnabled) {\n+    public ScoreHolder buildScoreHolder(boolean constraintMatchEnabled) {", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3ODcyNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433178725", "bodyText": "ok to change like this or to leave as is. your call - the real work with be in the 8.x branch", "author": "ge0ffrey", "createdAt": "2020-06-01T11:21:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3ODUxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3OTIyOQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433179229", "bodyText": "The real reason they are deprecated is because \"floating point numbers are not associative (A + B + C == C + B + A) and therefore they are not compatible with incremental score calculation\".", "author": "ge0ffrey", "createdAt": "2020-06-01T11:22:47Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/hardsoftdouble/HardSoftDoubleScoreDefinition.java", "diffHunk": "@@ -20,11 +20,16 @@\n \n import org.optaplanner.core.api.score.buildin.hardsoftdouble.HardSoftDoubleScore;\n import org.optaplanner.core.api.score.buildin.hardsoftdouble.HardSoftDoubleScoreHolder;\n+import org.optaplanner.core.api.score.holder.ScoreHolder;\n import org.optaplanner.core.config.score.trend.InitializingScoreTrendLevel;\n import org.optaplanner.core.impl.score.definition.AbstractScoreDefinition;\n import org.optaplanner.core.impl.score.inliner.ScoreInliner;\n import org.optaplanner.core.impl.score.trend.InitializingScoreTrend;\n \n+/**\n+ * @deprecated Double-based scores are deprecated as floating point numbers can't represent a decimal number correctly.", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/hardsoftdouble/HardSoftDoubleScoreDefinition.java b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/hardsoftdouble/HardSoftDoubleScoreDefinition.java\nindex 9be1989d1d..84b588c5ce 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/hardsoftdouble/HardSoftDoubleScoreDefinition.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/buildin/hardsoftdouble/HardSoftDoubleScoreDefinition.java\n\n@@ -27,7 +27,8 @@ import org.optaplanner.core.impl.score.inliner.ScoreInliner;\n import org.optaplanner.core.impl.score.trend.InitializingScoreTrend;\n \n /**\n- * @deprecated Double-based scores are deprecated as floating point numbers can't represent a decimal number correctly.\n+ * @deprecated Double-based scores are deprecated as floating point numbers are not associative (A + B + C == C + B + A)\n+ *             and therefore they are not compatible with incremental score calculation.\n  */\n @Deprecated(/* forRemoval = true */)\n public class HardSoftDoubleScoreDefinition extends AbstractScoreDefinition<HardSoftDoubleScore> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3OTkxOA==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433179918", "bodyText": "Would it be possible to prefix such comments with // TODO remove in 8.0?\nThe reason I like the \"8.0\" there is because we'll do a find in path for \"8.0\" after branching", "author": "ge0ffrey", "createdAt": "2020-06-01T11:24:30Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirector.java", "diffHunk": "@@ -82,6 +82,9 @@ private void resetKieSession() {\n         }\n     }\n \n+    // The scoreHolder method is not actually deprecated for removal.\n+    // It will only be moved to a different type at a time when we can make that change in public API.\n+    @SuppressWarnings(\"deprecation\")", "originalCommit": "958580c10c8538115d959d4ee0abfd47f4a867fc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f72e7675b11a14d8cd417cb5de8764036097edfd", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirector.java b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirector.java\nindex c1ed55fed9..2de27cb1ea 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirector.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/drools/DroolsScoreDirector.java\n\n@@ -82,6 +82,7 @@ public class DroolsScoreDirector<Solution_>\n         }\n     }\n \n+    // TODO remove in 8.0\n     // The scoreHolder method is not actually deprecated for removal.\n     // It will only be moved to a different type at a time when we can make that change in public API.\n     @SuppressWarnings(\"deprecation\")\n"}}, {"oid": "f72e7675b11a14d8cd417cb5de8764036097edfd", "url": "https://github.com/kiegroup/optaplanner/commit/f72e7675b11a14d8cd417cb5de8764036097edfd", "message": "Resolve code review comments", "committedDate": "2020-06-01T11:45:49Z", "type": "commit"}, {"oid": "28928b328ce24f4e54084d32b472f989a6591b8a", "url": "https://github.com/kiegroup/optaplanner/commit/28928b328ce24f4e54084d32b472f989a6591b8a", "message": "Finishing touches", "committedDate": "2020-06-01T11:47:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NDQ2NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/794#discussion_r433854465", "bodyText": "It's still deprecated, but the others are not?", "author": "ge0ffrey", "createdAt": "2020-06-02T12:58:30Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java", "diffHunk": "@@ -31,6 +31,7 @@\n /**\n  * @see BendableScore\n  */\n+@Deprecated", "originalCommit": "28928b328ce24f4e54084d32b472f989a6591b8a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "df8e3113b82f2a834fc90a2e6c3a28e0d3a98fdf", "chunk": "diff --git a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\nindex 8fe454c94d..a7884880cc 100644\n--- a/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\n+++ b/optaplanner-core/src/main/java/org/optaplanner/core/api/score/buildin/bendable/BendableScoreHolder.java\n\n@@ -31,7 +31,6 @@ import org.optaplanner.core.api.score.holder.AbstractScoreHolder;\n /**\n  * @see BendableScore\n  */\n-@Deprecated\n public class BendableScoreHolder extends AbstractScoreHolder<BendableScore> {\n \n     protected final Map<Rule, BiConsumer<RuleContext, Integer>> matchExecutorByNumberMap = new LinkedHashMap<>();\n"}}, {"oid": "df8e3113b82f2a834fc90a2e6c3a28e0d3a98fdf", "url": "https://github.com/kiegroup/optaplanner/commit/df8e3113b82f2a834fc90a2e6c3a28e0d3a98fdf", "message": "Don't deprecate BendableScoreHolder", "committedDate": "2020-06-02T13:38:29Z", "type": "commit"}]}