{"pr_number": 374, "pr_title": "Allow delayed subscription to channel handled by emitters", "pr_createdAt": "2020-01-14T08:53:08Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374", "timeline": [{"oid": "4e0a8a32e4b299ba591927466056b8e2145e27bc", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/4e0a8a32e4b299ba591927466056b8e2145e27bc", "message": "allow delayed subscription to channel handled by emitters", "committedDate": "2020-01-14T08:50:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3ODE4NQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366878185", "bodyText": "\"No one\" or \"Nothing\"?", "author": "kenfinnigan", "createdAt": "2020-01-15T13:37:33Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterImpl.java", "diffHunk": "@@ -123,33 +124,34 @@ boolean isConnected() {\n         if (msg == null) {\n             throw new IllegalArgumentException(\"`null` is not a valid value\");\n         }\n-        FlowableEmitter<Message<? extends T>> emitter = verify(internal);\n+        FlowableEmitter<Message<? extends T>> emitter = verify(internal, name);\n         emitter.onNext(msg);\n \n     }\n \n-    static <T> FlowableEmitter<Message<? extends T>> verify(AtomicReference<FlowableEmitter<Message<? extends T>>> reference) {\n+    static <T> FlowableEmitter<Message<? extends T>> verify(AtomicReference<FlowableEmitter<Message<? extends T>>> reference,\n+            String name) {\n         FlowableEmitter<Message<? extends T>> emitter = reference.get();\n         if (emitter == null) {\n-            throw new IllegalStateException(\"Stream not yet connected\");\n+            throw new IllegalStateException(\"No one subscribed to channel \" + name);", "originalCommit": "4e0a8a32e4b299ba591927466056b8e2145e27bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg5MDU3MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366890571", "bodyText": "How about \"No subscriber found for the channel \"?", "author": "Emily-Jiang", "createdAt": "2020-01-15T14:02:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3ODE4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxOTQ3NA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366919474", "bodyText": "Much better, let me change this!", "author": "cescoffier", "createdAt": "2020-01-15T14:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3ODE4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "455069f60c1ef9683e0dcf4d8fb0bcf593e49514", "chunk": "diff --git a/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterImpl.java b/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterImpl.java\nindex e6010cd0f..ff63aa844 100644\n--- a/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterImpl.java\n+++ b/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterImpl.java\n\n@@ -133,7 +133,7 @@ public class EmitterImpl<T> implements Emitter<T> {\n             String name) {\n         FlowableEmitter<Message<? extends T>> emitter = reference.get();\n         if (emitter == null) {\n-            throw new IllegalStateException(\"No one subscribed to channel \" + name);\n+            throw new IllegalStateException(\"No subscriber found for the channel \" + name);\n         }\n         if (emitter.isCancelled()) {\n             throw new IllegalStateException(\"The subscription to \" + name + \" has been cancelled\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3ODUyOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366878529", "bodyText": "Warning or just a trace?\nHow important is it for developers/debugging to know nothing is subscribed on creation?", "author": "kenfinnigan", "createdAt": "2020-01-15T13:38:21Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/ReactiveMessagingExtension.java", "diffHunk": "@@ -110,9 +110,11 @@ void afterDeploymentValidation(@Observes AfterDeploymentValidation done, BeanMan\n             for (InjectionPoint ip : emitterInjectionPoints) {\n                 String name = ChannelProducer.getChannelName(ip);\n                 EmitterImpl<?> emitter = (EmitterImpl<?>) registry.getEmitter(name);\n-                if (!emitter.isConnected()) {\n-                    done.addDeploymentProblem(\n-                            new DeploymentException(\"No channel found for name: \" + name + \", injection point: \" + ip));\n+                if (!emitter.isSubscribed()) {\n+                    // Subscription may happen later, just print a warning.\n+                    // Attempting an emission without being subscribed would result in an error.\n+                    LOGGER.warn(\"No subscriber for channel {}  attached to the emitter {}.{}\", name,", "originalCommit": "4e0a8a32e4b299ba591927466056b8e2145e27bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMDQ2NQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366920465", "bodyText": "It can be important. In the previous version, it was failing the deployment, that's why I went for warning.", "author": "cescoffier", "createdAt": "2020-01-15T14:56:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3ODUyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg5MTcxNQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366891715", "bodyText": "I see what you meant. This will impact spec and tck change because the validation is at runtime instead of startup time.", "author": "Emily-Jiang", "createdAt": "2020-01-15T14:05:02Z", "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "diffHunk": "@@ -137,14 +141,16 @@ public void testWithNull() {\n         assertThat(bean.hasCaughtNullMessage()).isTrue();\n     }\n \n-    @Test(expected = DeploymentException.class)\n+    @Test(expected = IllegalStateException.class)\n     public void testWithMissingStream() {\n-        installInitializeAndGet(BeanWithMissingStream.class);\n+        // The error is only thrown when a message is emitted as the subscription can be delayed.\n+        installInitializeAndGet(BeanWithMissingStream.class).emitter().send(Message.of(\"foo\"));\n     }\n \n-    @Test(expected = DeploymentException.class)\n+    @Test(expected = IllegalStateException.class)", "originalCommit": "4e0a8a32e4b299ba591927466056b8e2145e27bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkyMTYxOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/374#discussion_r366921619", "bodyText": "Yes, That's what I meant. This is actually required for eclipse/microprofile-reactive-messaging#3 where the subscription is handler by the user.", "author": "cescoffier", "createdAt": "2020-01-15T14:58:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg5MTcxNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "455069f60c1ef9683e0dcf4d8fb0bcf593e49514", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/455069f60c1ef9683e0dcf4d8fb0bcf593e49514", "message": "improve error message", "committedDate": "2020-01-17T11:14:22Z", "type": "commit"}]}