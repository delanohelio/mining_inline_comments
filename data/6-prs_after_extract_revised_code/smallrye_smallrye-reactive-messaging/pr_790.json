{"pr_number": 790, "pr_title": "Improvement of the throttled commit strategy (and make it the default)", "pr_createdAt": "2020-10-04T07:29:49Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790", "timeline": [{"oid": "7a1d89b3eeb26747b4fc2c88a2a091697a0715df", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/7a1d89b3eeb26747b4fc2c88a2a091697a0715df", "message": "Capture the Vert.x context used by the Vert.x Kafka Client earlier to avoid performance penalties", "committedDate": "2020-10-04T06:54:14Z", "type": "commit"}, {"oid": "bf2bdc5d22b2bf469ad2cc08fdfb3c4b8e3ae335", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/bf2bdc5d22b2bf469ad2cc08fdfb3c4b8e3ae335", "message": "Commit handlers may need to execute some actions when partitions are revoked\n\nTypically, commit the processed offsets.", "committedDate": "2020-10-04T06:55:11Z", "type": "commit"}, {"oid": "b942b62676817fe6c60dcda90bdff1fe1cd9724b", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/b942b62676817fe6c60dcda90bdff1fe1cd9724b", "message": "Fix rebalancing in the throttled commit strategy\n\nBecause of the execution model used by the Vert.x Kafka client, we may have started consuming records before the partitions assigned callback is invoked.\nAlso, when partitions are revoked, it must commit the processed offsets.  Unfortunately, with the current execution model, we cannot block the revocation, and the commit is a best-effort.", "committedDate": "2020-10-04T06:58:31Z", "type": "commit"}, {"oid": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/db6983a533f68c1d8974a2e7623d78474e4b4d37", "message": "Switch to the throttled commit strategy as default", "committedDate": "2020-10-04T06:59:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499245113", "bodyText": "Why is turning the keySet into a HashSet necessary?", "author": "pcasaes", "createdAt": "2020-10-04T13:09:57Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -105,11 +104,50 @@ private OffsetStore getOffsetStore(TopicPartition topicPartition) {\n      */\n     @Override\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n-        offsetStores.clear();\n+        stopFlushAndCheckHealthTimer();\n+\n+        // Remove all handled partitions that are not in the given list of partitions\n+        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTI1Mw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499245253", "bodyText": "Because the key set is a live view, and removing from it may trigger a ConcurrentModificationException.", "author": "cescoffier", "createdAt": "2020-10-04T13:11:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODYwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499248609", "bodyText": "But it's all running in the same Vert.X context, no?", "author": "pcasaes", "createdAt": "2020-10-04T13:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODgwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499248809", "bodyText": "It's my understanding that the Vert.X Kafka Client calls revoked and assigned within the context.", "author": "pcasaes", "createdAt": "2020-10-04T13:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzczOA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499253738", "bodyText": "No, it can come from the remove just below. It's always safer to create a copy if you want to remove. Another solution would be to create a temporary Set, collect the keys to remove and remove outside of the loop. Both require an additional set, but this variant avoids another loop.", "author": "cescoffier", "createdAt": "2020-10-04T14:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDc5NQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254795", "bodyText": "Gotcha!", "author": "pcasaes", "createdAt": "2020-10-04T14:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NTExMw=="}], "type": "inlineReview", "revised_code": {"commit": "8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "chunk": "diff --git a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\nindex 0185d002f..1dfbc9538 100644\n--- a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n+++ b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n\n@@ -106,16 +106,7 @@ public class KafkaThrottledLatestProcessedCommit extends ContextHolder implement\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n         stopFlushAndCheckHealthTimer();\n \n-        // Remove all handled partitions that are not in the given list of partitions\n-        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n-            if (!partitions.contains(partition)) {\n-                offsetStores.remove(partition);\n-            }\n-        }\n-\n-        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n-\n-        if (!offsetStores.isEmpty()) {\n+        if (!partitions.isEmpty() || !offsetStores.isEmpty()) {\n             startFlushAndCheckHealthTimer();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499246731", "bodyText": "This is something I got wrong. From the documentation:\n\nThe list of partitions that are now assigned to the consumer (previously owned partitions will NOT be included, i.e. this list will only include newly added partitions)\n\nhttps://kafka.apache.org/24/javadoc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html#onPartitionsAssigned-java.util.Collection-\nThis needs to be used in conjunction with revoked to get the full picture\n\npartitions - The list of partitions that were assigned to the consumer and now have been reassigned to other consumers (may not include all currently assigned partitions, i.e. there may still be some partitions left)\n\nhttps://kafka.apache.org/24/javadoc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html#onPartitionsRevoked-java.util.Collection-\nIf the idea is to remove partitions from the store then that should be done in partitionsRevoked.", "author": "pcasaes", "createdAt": "2020-10-04T13:27:26Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -105,11 +104,50 @@ private OffsetStore getOffsetStore(TopicPartition topicPartition) {\n      */\n     @Override\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n-        offsetStores.clear();\n+        stopFlushAndCheckHealthTimer();\n+\n+        // Remove all handled partitions that are not in the given list of partitions", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDA5OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254099", "bodyText": "Hum... ok, I should not remove the partitions.\nHowever, before we were Clearing the full store was wrong.\nThe problem is that in some cases I received records BEFORE this callback is called. This is because of the scheduling in the event loop.", "author": "cescoffier", "createdAt": "2020-10-04T14:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDQxNg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254416", "bodyText": "Yeah, it was wrong.\n\nThis is something I got wrong", "author": "pcasaes", "createdAt": "2020-10-04T14:48:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NjcxNA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499256714", "bodyText": "The problem is that in some cases I received records BEFORE this callback is called.\n\nPerhaps we should use the pause/fetch strategy we use for the user supplied consumer re-balance as well. In this case we'd have to return a Uni.", "author": "pcasaes", "createdAt": "2020-10-04T15:10:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NzA0NA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499257044", "bodyText": "That would not always work, I've seen this issue when the application starts, where we are not in a pause/resume cycle.\nLet's revisit this when we have the blocking callbacks. We are trying to work around an issue that should not be an issue...", "author": "cescoffier", "createdAt": "2020-10-04T15:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "chunk": "diff --git a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\nindex 0185d002f..1dfbc9538 100644\n--- a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n+++ b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n\n@@ -106,16 +106,7 @@ public class KafkaThrottledLatestProcessedCommit extends ContextHolder implement\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n         stopFlushAndCheckHealthTimer();\n \n-        // Remove all handled partitions that are not in the given list of partitions\n-        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n-            if (!partitions.contains(partition)) {\n-                offsetStores.remove(partition);\n-            }\n-        }\n-\n-        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n-\n-        if (!offsetStores.isEmpty()) {\n+        if (!partitions.isEmpty() || !offsetStores.isEmpty()) {\n             startFlushAndCheckHealthTimer();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njc1OQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499246759", "bodyText": "Concerning the comment left on the partitionsAssigned method. After committing we should remove partitions from the store.", "author": "pcasaes", "createdAt": "2020-10-04T13:27:48Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -105,11 +104,50 @@ private OffsetStore getOffsetStore(TopicPartition topicPartition) {\n      */\n     @Override\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n-        offsetStores.clear();\n+        stopFlushAndCheckHealthTimer();\n+\n+        // Remove all handled partitions that are not in the given list of partitions\n+        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n+            if (!partitions.contains(partition)) {\n+                offsetStores.remove(partition);\n+            }\n+        }\n+\n+        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n+\n+        if (!offsetStores.isEmpty()) {\n+            startFlushAndCheckHealthTimer();\n+        }\n+    }\n \n+    /**\n+     * Revoked partitions.\n+     * This method is called from a Vert.x event loop (the one used by the Kafka client)\n+     *\n+     * @param partitions the partitions that we will no longer receive\n+     */\n+    @Override\n+    public void partitionsRevoked(Set<TopicPartition> partitions) {\n         stopFlushAndCheckHealthTimer();\n \n-        if (!partitions.isEmpty()) {\n+        // Remove all handled partitions that are not in the given list of partitions\n+        Map<TopicPartition, OffsetAndMetadata> toCommit = new HashMap<>();\n+        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n+            if (!partitions.contains(partition)) {\n+                OffsetStore store = offsetStores.remove(partition);\n+                long largestOffset = store.clearLesserSequentiallyProcessedOffsetsAndReturnLargestOffset();\n+                if (largestOffset > -1) {\n+                    toCommit.put(partition, new OffsetAndMetadata(largestOffset + 1L, null));\n+                }\n+            }\n+        }\n+\n+        if (!toCommit.isEmpty()) {\n+            // Commit the offsets\n+            consumer.getDelegate().commit(toCommit);\n+        }", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDIwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254209", "bodyText": "They have been already removed in OffsetStore store = offsetStores.remove(partition);\nThe commit happens after the removal.", "author": "cescoffier", "createdAt": "2020-10-04T14:45:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDgxMQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254811", "bodyText": "I see. nice!", "author": "pcasaes", "createdAt": "2020-10-04T14:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "chunk": "diff --git a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\nindex 0185d002f..1dfbc9538 100644\n--- a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n+++ b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n\n@@ -106,16 +106,7 @@ public class KafkaThrottledLatestProcessedCommit extends ContextHolder implement\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n         stopFlushAndCheckHealthTimer();\n \n-        // Remove all handled partitions that are not in the given list of partitions\n-        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n-            if (!partitions.contains(partition)) {\n-                offsetStores.remove(partition);\n-            }\n-        }\n-\n-        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n-\n-        if (!offsetStores.isEmpty()) {\n+        if (!partitions.isEmpty() || !offsetStores.isEmpty()) {\n             startFlushAndCheckHealthTimer();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njk2NQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499246965", "bodyText": "If we are not adding partitions to the store in this method then we need to start the time if either that store or partitions aren't empty.", "author": "pcasaes", "createdAt": "2020-10-04T13:29:27Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -105,11 +104,50 @@ private OffsetStore getOffsetStore(TopicPartition topicPartition) {\n      */\n     @Override\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n-        offsetStores.clear();\n+        stopFlushAndCheckHealthTimer();\n+\n+        // Remove all handled partitions that are not in the given list of partitions\n+        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n+            if (!partitions.contains(partition)) {\n+                offsetStores.remove(partition);\n+            }\n+        }\n+\n+        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n+\n+        if (!offsetStores.isEmpty()) {\n+            startFlushAndCheckHealthTimer();\n+        }", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDI4MQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254281", "bodyText": "Yes!", "author": "cescoffier", "createdAt": "2020-10-04T14:46:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njk2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2MjQ0Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499262442", "bodyText": "Done!", "author": "cescoffier", "createdAt": "2020-10-04T16:10:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0Njk2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "chunk": "diff --git a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\nindex 0185d002f..1dfbc9538 100644\n--- a/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n+++ b/smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java\n\n@@ -106,16 +106,7 @@ public class KafkaThrottledLatestProcessedCommit extends ContextHolder implement\n     public void partitionsAssigned(Set<TopicPartition> partitions) {\n         stopFlushAndCheckHealthTimer();\n \n-        // Remove all handled partitions that are not in the given list of partitions\n-        for (TopicPartition partition : new HashSet<>(offsetStores.keySet())) {\n-            if (!partitions.contains(partition)) {\n-                offsetStores.remove(partition);\n-            }\n-        }\n-\n-        // We cannot commit the removed offsets as we are not assigned to this partition anymore.\n-\n-        if (!offsetStores.isEmpty()) {\n+        if (!partitions.isEmpty() || !offsetStores.isEmpty()) {\n             startFlushAndCheckHealthTimer();\n         }\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NzMwOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499247309", "bodyText": "Nice!", "author": "pcasaes", "createdAt": "2020-10-04T13:32:58Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/KafkaThrottledLatestProcessedCommit.java", "diffHunk": "@@ -282,13 +320,54 @@ boolean hasTooManyMessagesWithoutAck() {\n \n     public static class TooManyMessagesWithoutAckException extends Exception {\n         public TooManyMessagesWithoutAckException() {\n-            super(\"Too Many Messages without Ack\");\n+            super(\"Too Many Messages without acknowledgement\");\n         }\n     }\n \n     @Override\n     public void terminate() {\n-        // TODO Force commit sync.\n+        commitAllAndAwait();\n+        offsetStores.clear();", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODA2Ng==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499248066", "bodyText": "Will we be living with this as a final solution or are we going to work with Vert.X to get access to the context properly?", "author": "pcasaes", "createdAt": "2020-10-04T13:40:12Z", "path": "smallrye-reactive-messaging-kafka/src/main/java/io/smallrye/reactive/messaging/kafka/commit/ContextHolder.java", "diffHunk": "@@ -15,24 +19,29 @@ public ContextHolder(Vertx vertx) {\n         this.vertx = vertx;\n     }\n \n-    public Context getContext() {\n-        Context ctx = this.context;\n-        if (ctx == null) {\n-            synchronized (this) {\n-                ctx = this.context;\n-                if (ctx == null) {\n-                    this.context = ctx = vertx.getOrCreateContext();\n-                }\n+    public void capture(KafkaReadStream<?, ?> stream) {\n+        if (!(stream instanceof KafkaReadStreamImpl)) {\n+            throw new IllegalArgumentException(\"Cannot capture the context - not a KafkaReadStreamImpl\");\n+        } else {\n+            try {\n+                Field field = KafkaReadStreamImpl.class.getDeclaredField(\"context\");\n+                field.setAccessible(true);\n+                context = new Context((io.vertx.core.Context) field.get(stream));\n+            } catch (Exception e) {\n+                throw new IllegalArgumentException(\"Cannot capture the context\", e);\n             }\n         }", "originalCommit": "db6983a533f68c1d8974a2e7623d78474e4b4d37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDcwMw==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/790#discussion_r499254703", "bodyText": "That's a good question.\nWe are going to go with this for now.\nThere are multiple things:\n\nWe need to switch to a blocking rebalance listener - this is done using a hack too (see my other branch - that need to be reworked completely BTW).\nWe only use the Vert.x client to get a Multi of Record. That part is not that complicated, so starting to see if we need to remove it completely or not.\nThis code is not changed in Vert.x 3.9 nor Vert.x 4.x (for now).\n\nI've done a list of improvements to applied in the upstream Vert.x client. Exposing the context needs to be added. Generally, we don't do this in Vert.x as we expect the client creation to be called form an event loop (and so you can capture the context from a creation site), but in our case, it's not the case, and the client creates its own context.", "author": "cescoffier", "createdAt": "2020-10-04T14:50:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0ODA2Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "710f52ad525b15d0676be22dcd129c075334d3c3", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/710f52ad525b15d0676be22dcd129c075334d3c3", "message": "Explicitely mention that the user must manage the offset commit in the rebalance listener", "committedDate": "2020-10-04T16:09:49Z", "type": "commit"}, {"oid": "8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/8f6b0274c3ae4799f64acdfea9e12793d9cdb930", "message": "Do not clear partitions in the partitionAssigned handling in the throttled commit strategy", "committedDate": "2020-10-04T16:10:32Z", "type": "commit"}]}