{"pr_number": 563, "pr_title": "Fixes #471", "pr_createdAt": "2020-05-27T20:23:14Z", "pr_url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563", "timeline": [{"oid": "c8e907b2e6988ec2f80f32891391404ab5df1d96", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/c8e907b2e6988ec2f80f32891391404ab5df1d96", "message": "Fixes #471\n\nAdds support for `@Broadcast` on `Emitter` to broadcast to all subscribers", "committedDate": "2020-05-27T20:22:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431795939", "bodyText": "Should we make all the fields final and public?\nThat would avoid getters, and be \"like a record\".", "author": "cescoffier", "createdAt": "2020-05-28T12:26:13Z", "path": "smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.smallrye.reactive.messaging.extension;\n+\n+import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n+\n+import io.smallrye.reactive.messaging.annotations.Broadcast;\n+\n+public class EmitterConfiguration {\n+    private final String name;\n+    private OnOverflow.Strategy overflowBufferStrategy = null;", "originalCommit": "c8e907b2e6988ec2f80f32891391404ab5df1d96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgxOTkyMg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431819922", "bodyText": "It would mean the constructor setting values to null based on what's based in vs setting the default on the field itself.\nIs that ok?", "author": "kenfinnigan", "createdAt": "2020-05-28T13:07:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMTk2Mg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431821962", "bodyText": "The constructor would have to set the fields to null / false/ -1.\nI don't have a strong opinion about it, I'm not sure it simplifies much.", "author": "cescoffier", "createdAt": "2020-05-28T13:10:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyNDU3OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431824578", "bodyText": "So... Leave or change? I don't mind", "author": "kenfinnigan", "createdAt": "2020-05-28T13:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTgzNg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431831836", "bodyText": "I will include the change for now", "author": "kenfinnigan", "createdAt": "2020-05-28T13:25:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTkzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "40b31b152d13c8f4f3047c7c1c62c9d6f929bfdb", "chunk": "diff --git a/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java b/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java\nindex a0e9ca07b..ec5079246 100644\n--- a/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java\n+++ b/smallrye-reactive-messaging-provider/src/main/java/io/smallrye/reactive/messaging/extension/EmitterConfiguration.java\n\n@@ -5,11 +5,11 @@ import org.eclipse.microprofile.reactive.messaging.OnOverflow;\n import io.smallrye.reactive.messaging.annotations.Broadcast;\n \n public class EmitterConfiguration {\n-    private final String name;\n-    private OnOverflow.Strategy overflowBufferStrategy = null;\n-    private long overflowBufferSize = -1;\n-    private Boolean broadcast = Boolean.FALSE;\n-    private int numberOfSubscriberBeforeConnecting = -1;\n+    public final String name;\n+    public final OnOverflow.Strategy overflowBufferStrategy;\n+    public final long overflowBufferSize;\n+    public final Boolean broadcast;\n+    public final int numberOfSubscriberBeforeConnecting;\n \n     public EmitterConfiguration(String name, OnOverflow onOverflow, Broadcast broadcast) {\n         this.name = name;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431798010", "bodyText": "Should we define an Overflow literal?", "author": "cescoffier", "createdAt": "2020-05-28T12:30:00Z", "path": "smallrye-reactive-messaging-provider/src/test/java/io/smallrye/reactive/messaging/inject/EmitterInjectionTest.java", "diffHunk": "@@ -581,7 +583,24 @@ public void consume(final String b) {\n \n     @Test // Reproduce #511\n     public void testWeCanHaveSeveralSubscribers() {\n-        EmitterImpl<String> emitter = new EmitterImpl<>(\"my-channel\", \"BUFFER\", 128, 128);\n+        OnOverflow overflow = new OnOverflow() {", "originalCommit": "c8e907b2e6988ec2f80f32891391404ab5df1d96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgyMjk3OA==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431822978", "bodyText": "It's in a test, so not sure if it's that important", "author": "kenfinnigan", "createdAt": "2020-05-28T13:11:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMjgwMg==", "url": "https://github.com/smallrye/smallrye-reactive-messaging/pull/563#discussion_r431832802", "bodyText": "Right, we can keep it like this.", "author": "cescoffier", "createdAt": "2020-05-28T13:26:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5ODAxMA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "40b31b152d13c8f4f3047c7c1c62c9d6f929bfdb", "url": "https://github.com/smallrye/smallrye-reactive-messaging/commit/40b31b152d13c8f4f3047c7c1c62c9d6f929bfdb", "message": "Add missing documentation and minor update based on feedback", "committedDate": "2020-05-28T13:56:58Z", "type": "commit"}]}