{"pr_number": 816, "pr_title": "fix(client): adding support to provide a plain okhttp client with sys\u2026", "pr_createdAt": "2020-10-30T22:17:05Z", "pr_url": "https://github.com/spinnaker/kork/pull/816", "timeline": [{"oid": "649c5af96930b848091b50bc692ee09e82943d9c", "url": "https://github.com/spinnaker/kork/commit/649c5af96930b848091b50bc692ee09e82943d9c", "message": "fix(client): adding support to provide a plain okhttp client with system defaulted ssl socket factory", "committedDate": "2020-11-02T22:04:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM5NDgwMQ==", "url": "https://github.com/spinnaker/kork/pull/816#discussion_r516394801", "bodyText": "Hm, I feel like I'm missing something here.  So is it assumed that a PlainServiceEndpoint will have a keystore and a truststore?", "author": "jonsie", "createdAt": "2020-11-03T02:17:23Z", "path": "kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/DefaultOkHttpClientBuilderProvider.java", "diffHunk": "@@ -71,10 +72,11 @@ public DefaultOkHttpClientBuilderProvider(\n   }\n \n   protected OkHttpClient.Builder setSSLSocketFactory(\n-      OkHttpClient.Builder builder, ServiceEndpoint service) {\n+      OkHttpClient.Builder builder, ServiceEndpoint serviceEndpoint) {\n \n-    if (okHttpClientConfigurationProperties.getKeyStore() == null\n-        && okHttpClientConfigurationProperties.getTrustStore() == null) {\n+    if ((okHttpClientConfigurationProperties.getKeyStore() == null\n+            && okHttpClientConfigurationProperties.getTrustStore() == null)\n+        || serviceEndpoint instanceof PlainServiceEndpoint) {", "originalCommit": "649c5af96930b848091b50bc692ee09e82943d9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1NTc0MQ==", "url": "https://github.com/spinnaker/kork/pull/816#discussion_r516455741", "bodyText": "We will assign system defaults to both and we will not use the keystore and truststore provided in the app configuration.", "author": "srekapalli", "createdAt": "2020-11-03T06:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM5NDgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f400210d14fbe2cc876b22d2804cb70171a04aaf", "chunk": "diff --git a/kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/DefaultOkHttpClientBuilderProvider.java b/kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/DefaultOkHttpClientBuilderProvider.java\nindex d684173e..9c762670 100644\n--- a/kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/DefaultOkHttpClientBuilderProvider.java\n+++ b/kork-web/src/main/java/com/netflix/spinnaker/config/okhttp3/DefaultOkHttpClientBuilderProvider.java\n\n@@ -76,7 +75,7 @@ public class DefaultOkHttpClientBuilderProvider implements OkHttpClientBuilderPr\n \n     if ((okHttpClientConfigurationProperties.getKeyStore() == null\n             && okHttpClientConfigurationProperties.getTrustStore() == null)\n-        || serviceEndpoint instanceof PlainServiceEndpoint) {\n+        || serviceEndpoint.isUseDefaultSslSocketFactory()) {\n       return builder;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1Njc0Mg==", "url": "https://github.com/spinnaker/kork/pull/816#discussion_r516456742", "bodyText": "Not sure about Plain but otherwise this seems reasonable to me.\nMaybe Simple or Basic?", "author": "ajordens", "createdAt": "2020-11-03T06:59:21Z", "path": "kork-web/src/main/java/com/netflix/spinnaker/config/PlainServiceEndpoint.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package com.netflix.spinnaker.config;\n+\n+import java.util.Map;\n+import javax.annotation.Nonnull;\n+\n+/**\n+ * Represents a service endpoint URL and name.\n+ *\n+ * <p>If a client is constructed using this type, system defaults will be used for socket factory\n+ * and trust manager.\n+ */\n+public class PlainServiceEndpoint extends DefaultServiceEndpoint {", "originalCommit": "649c5af96930b848091b50bc692ee09e82943d9c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzMjc0NQ==", "url": "https://github.com/spinnaker/kork/pull/816#discussion_r518432745", "bodyText": "I ended up modifying to be another attribute on the service endpoint instead of a separate data type.", "author": "srekapalli", "createdAt": "2020-11-05T23:29:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1Njc0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f400210d14fbe2cc876b22d2804cb70171a04aaf", "chunk": "diff --git a/kork-web/src/main/java/com/netflix/spinnaker/config/PlainServiceEndpoint.java b/kork-web/src/main/java/com/netflix/spinnaker/config/PlainServiceEndpoint.java\ndeleted file mode 100644\nindex b89470ad..00000000\n--- a/kork-web/src/main/java/com/netflix/spinnaker/config/PlainServiceEndpoint.java\n+++ /dev/null\n\n@@ -1,39 +0,0 @@\n-/*\n- * Copyright 2020 Netflix, Inc.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- *\n- */\n-\n-package com.netflix.spinnaker.config;\n-\n-import java.util.Map;\n-import javax.annotation.Nonnull;\n-\n-/**\n- * Represents a service endpoint URL and name.\n- *\n- * <p>If a client is constructed using this type, system defaults will be used for socket factory\n- * and trust manager.\n- */\n-public class PlainServiceEndpoint extends DefaultServiceEndpoint {\n-\n-  public PlainServiceEndpoint(@Nonnull String name, @Nonnull String baseUrl) {\n-    super(name, baseUrl);\n-  }\n-\n-  public PlainServiceEndpoint(\n-      @Nonnull String name, @Nonnull String baseUrl, @Nonnull Map<String, String> config) {\n-    super(name, baseUrl, config, true);\n-  }\n-}\n"}}, {"oid": "f400210d14fbe2cc876b22d2804cb70171a04aaf", "url": "https://github.com/spinnaker/kork/commit/f400210d14fbe2cc876b22d2804cb70171a04aaf", "message": "fix(client): adding support to provide a plain okhttp client with system defaulted ssl socket factory", "committedDate": "2020-11-05T23:25:36Z", "type": "forcePushed"}, {"oid": "31f10fe91a133c55a9b39a90f3b22fc808d1c8a8", "url": "https://github.com/spinnaker/kork/commit/31f10fe91a133c55a9b39a90f3b22fc808d1c8a8", "message": "fix(client): adding support to provide a plain okhttp client with system defaulted ssl socket factory", "committedDate": "2020-11-06T03:26:56Z", "type": "commit"}, {"oid": "31f10fe91a133c55a9b39a90f3b22fc808d1c8a8", "url": "https://github.com/spinnaker/kork/commit/31f10fe91a133c55a9b39a90f3b22fc808d1c8a8", "message": "fix(client): adding support to provide a plain okhttp client with system defaulted ssl socket factory", "committedDate": "2020-11-06T03:26:56Z", "type": "forcePushed"}, {"oid": "45e8e1b410a60e3c1743d194119bc619b45a1f25", "url": "https://github.com/spinnaker/kork/commit/45e8e1b410a60e3c1743d194119bc619b45a1f25", "message": "Merge branch 'master' into add_plain_okhttp", "committedDate": "2020-11-06T05:14:28Z", "type": "commit"}]}