{"pr_number": 506, "pr_title": "feat(plugins): Constructor dependency injection for extensions", "pr_createdAt": "2020-02-06T23:59:57Z", "pr_url": "https://github.com/spinnaker/kork/pull/506", "timeline": [{"oid": "189eb43ef60adaebca6a251bff08b41c1416ed9b", "url": "https://github.com/spinnaker/kork/commit/189eb43ef60adaebca6a251bff08b41c1416ed9b", "message": "feat(plugins): Constructor dependency injection for extensions", "committedDate": "2020-02-07T00:17:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3NzA3MQ==", "url": "https://github.com/spinnaker/kork/pull/506#discussion_r377277071", "bodyText": "I'm not actually seeing this used anywhere.  What are the plans for this?", "author": "jonsie", "createdAt": "2020-02-10T19:44:21Z", "path": "kork-plugins-api/src/main/java/com/netflix/spinnaker/kork/plugins/api/Injectable.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package com.netflix.spinnaker.kork.plugins.api;\n+\n+import java.lang.annotation.*;\n+\n+/**\n+ * A marker annotation that documents a type as being injectable into an Extension.\n+ *\n+ * <p>Any class in the Plugins API with this annotation will be available for injection into an\n+ * Extension at initialization time.\n+ *\n+ * <pre>{@code\n+ * @Extension\n+ * class MyExtension {\n+ *\n+ *   private final HttpClientProvider httpClientProvider;\n+ *\n+ *   public MyExtension(HttpClientProvider httpClientProvider) {\n+ *     this.httpClientProvider = httpClientProvider;\n+ *   }\n+ * }\n+ * }</pre>\n+ */\n+@Target(ElementType.TYPE)\n+@Retention(RetentionPolicy.CLASS)\n+@Documented\n+public @interface Injectable {}", "originalCommit": "189eb43ef60adaebca6a251bff08b41c1416ed9b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3OTU1OQ==", "url": "https://github.com/spinnaker/kork/pull/506#discussion_r377279559", "bodyText": "You're right, it's not used in this PR. It would be used for SDKs, such as HttpClient and so-on. It's a marker annotation that informs plugin developers what is available for injection, and could be used to auto-generate docs on what is available. It's possible that we could tie it back into the DependencyProviders, but I'm not sure if there's value at this point.", "author": "robzienert", "createdAt": "2020-02-10T19:49:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3NzA3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "00ad18752349d168b0db47e8004a9936570a2743", "chunk": "diff --git a/kork-plugins-api/src/main/java/com/netflix/spinnaker/kork/plugins/api/Injectable.java b/kork-plugins-api/src/main/java/com/netflix/spinnaker/kork/plugins/api/Injectable.java\nindex 3807b136..dfb21594 100644\n--- a/kork-plugins-api/src/main/java/com/netflix/spinnaker/kork/plugins/api/Injectable.java\n+++ b/kork-plugins-api/src/main/java/com/netflix/spinnaker/kork/plugins/api/Injectable.java\n\n@@ -28,11 +28,15 @@ import java.lang.annotation.*;\n  * @Extension\n  * class MyExtension {\n  *\n+ *   private final MyConfig config;\n  *   private final HttpClientProvider httpClientProvider;\n  *\n- *   public MyExtension(HttpClientProvider httpClientProvider) {\n+ *   public MyExtension(MyConfig config, HttpClientProvider httpClientProvider) {\n+ *     this.config = config;\n  *     this.httpClientProvider = httpClientProvider;\n  *   }\n+ *\n+ *   public static class MyConfig {}\n  * }\n  * }</pre>\n  */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MTA5Nw==", "url": "https://github.com/spinnaker/kork/pull/506#discussion_r377281097", "bodyText": "extensionExtensionInitializer -- probably a typo.", "author": "jonsie", "createdAt": "2020-02-10T19:52:20Z", "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java", "diffHunk": "@@ -86,10 +92,10 @@ public static ConfigResolver springEnvironmentConfigResolver(\n   public static SpinnakerPluginManager pluginManager(\n       PluginStatusProvider pluginStatusProvider,\n       ApplicationContext applicationContext,\n-      ConfigResolver configResolver) {\n+      ExtensionInitializer extensionExtensionInitializer) {\n     return new SpinnakerPluginManager(\n         pluginStatusProvider,\n-        configResolver,\n+        extensionExtensionInitializer,", "originalCommit": "189eb43ef60adaebca6a251bff08b41c1416ed9b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00ad18752349d168b0db47e8004a9936570a2743", "chunk": "diff --git a/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java b/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\nindex 6dbe6f2e..7fb700cc 100644\n--- a/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\n+++ b/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\n\n@@ -92,10 +97,10 @@ public class PluginsAutoConfiguration {\n   public static SpinnakerPluginManager pluginManager(\n       PluginStatusProvider pluginStatusProvider,\n       ApplicationContext applicationContext,\n-      ExtensionInitializer extensionExtensionInitializer) {\n+      ExtensionInitializer extensionInitializer) {\n     return new SpinnakerPluginManager(\n         pluginStatusProvider,\n-        extensionExtensionInitializer,\n+        extensionInitializer,\n         Objects.requireNonNull(\n             applicationContext.getEnvironment().getProperty(\"spring.application.name\")),\n         Paths.get(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjU2OQ==", "url": "https://github.com/spinnaker/kork/pull/506#discussion_r377282569", "bodyText": "It wont be long before we build up another DependencyProvider, so let's make the DependencyProvider objects separate beans and then add them to this extensionInjector factory so we keep the arguments clean (i.e. -- ConfigResolver is a dependency for ConfigDependencyProvider and not ExtensionInitializer).", "author": "jonsie", "createdAt": "2020-02-10T19:55:05Z", "path": "kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java", "diffHunk": "@@ -74,6 +74,12 @@ public static ConfigResolver springEnvironmentConfigResolver(\n     return new SpringEnvironmentConfigResolver(environment);\n   }\n \n+  @Bean\n+  ExtensionInitializer extensionsInjector(ConfigResolver configResolver) {", "originalCommit": "189eb43ef60adaebca6a251bff08b41c1416ed9b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "00ad18752349d168b0db47e8004a9936570a2743", "chunk": "diff --git a/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java b/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\nindex 6dbe6f2e..7fb700cc 100644\n--- a/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\n+++ b/kork-plugins/src/main/java/com/netflix/spinnaker/config/PluginsAutoConfiguration.java\n\n@@ -75,9 +76,13 @@ public class PluginsAutoConfiguration {\n   }\n \n   @Bean\n-  ExtensionInitializer extensionsInjector(ConfigResolver configResolver) {\n-    return new ConstructorExtensionInitializer(\n-        Arrays.asList(new ConfigDependencyProvider(configResolver)));\n+  ConfigDependencyProvider configDependencyProvider(ConfigResolver configResolver) {\n+    return new ConfigDependencyProvider(configResolver);\n+  }\n+\n+  @Bean\n+  ExtensionInitializer extensionsInjector(List<DependencyProvider> dependencyProviders) {\n+    return new ConstructorExtensionInitializer(dependencyProviders);\n   }\n \n   @Bean\n"}}, {"oid": "00ad18752349d168b0db47e8004a9936570a2743", "url": "https://github.com/spinnaker/kork/commit/00ad18752349d168b0db47e8004a9936570a2743", "message": "feat(plugins): Constructor dependency injection for extensions", "committedDate": "2020-02-11T19:12:38Z", "type": "forcePushed"}, {"oid": "b9317b44bd19dd04a7e5affc22fedb210c8ebe39", "url": "https://github.com/spinnaker/kork/commit/b9317b44bd19dd04a7e5affc22fedb210c8ebe39", "message": "feat(plugins): Constructor dependency injection for extensions", "committedDate": "2020-02-12T07:17:45Z", "type": "commit"}, {"oid": "b9317b44bd19dd04a7e5affc22fedb210c8ebe39", "url": "https://github.com/spinnaker/kork/commit/b9317b44bd19dd04a7e5affc22fedb210c8ebe39", "message": "feat(plugins): Constructor dependency injection for extensions", "committedDate": "2020-02-12T07:17:45Z", "type": "forcePushed"}, {"oid": "d21feb897d2e380179212dcbc2de11c72a9ff88f", "url": "https://github.com/spinnaker/kork/commit/d21feb897d2e380179212dcbc2de11c72a9ff88f", "message": "Merge branch 'master' into di", "committedDate": "2020-02-13T20:48:21Z", "type": "commit"}, {"oid": "8e1998e0cdaf66de3db93a82d0eb2e9334fea08f", "url": "https://github.com/spinnaker/kork/commit/8e1998e0cdaf66de3db93a82d0eb2e9334fea08f", "message": "Merge branch 'master' into di", "committedDate": "2020-02-13T20:54:22Z", "type": "commit"}]}