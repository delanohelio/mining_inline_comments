{"pr_number": 2098, "pr_title": "Javadoc updates", "pr_createdAt": "2020-02-29T16:40:04Z", "pr_url": "https://github.com/SpongePowered/SpongeAPI/pull/2098", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzOTkwNg==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2098#discussion_r386039906", "bodyText": "Missing A value of one indicates the platform default. (copied from the method below)", "author": "ImMorpheus", "createdAt": "2020-02-29T16:45:18Z", "path": "src/main/java/org/spongepowered/api/world/explosion/Explosion.java", "diffHunk": "@@ -92,30 +93,37 @@ static Builder builder() {\n     boolean shouldDamageEntities();\n \n     /**\n-     * Gets the number of rays cast per length of each side of the explosion bounding box.\n+     * Gets a value that indicates the relative strength of an explosion.\n      *\n-     * @return The number of rays cast per length of each side of the explosion bounding box\n+     * @return The resolution of the explosion.\n      */\n     default int getResolution() {\n         return 16;\n     }\n \n     /**\n-     * <pre>\n-     * A numerical representation of variation in blast strength per ray.\n-     * The blast strength of a ray is calculated as {@code (1 * [variation]) * [radius]}\n-     * 0.0 = No Variation.\n-     * 1.0 = +/-0.3 Variation (Vanilla Behaviour).\n-     * </pre>\n+     * Gets an indication of the randomness of the form of the explosion.\n      *\n-     * @return A numerical representation of variation in blast strength per ray\n+     * <p>This value indicates how close to being symmetrical the explosion is.\n+     * A value of zero indicates a completely symmetrical blast (in all three\n+     * dimensions). A larger value indicates a lower likelihood of symmetry.</p>", "originalCommit": "82e06a0b4383e0aaf1dba1b5854412e5be756e35", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b3236fa8281059ff30e74b59d5bcffe9bae60803", "chunk": "diff --git a/src/main/java/org/spongepowered/api/world/explosion/Explosion.java b/src/main/java/org/spongepowered/api/world/explosion/Explosion.java\nindex 704982289..bd79946de 100644\n--- a/src/main/java/org/spongepowered/api/world/explosion/Explosion.java\n+++ b/src/main/java/org/spongepowered/api/world/explosion/Explosion.java\n\n@@ -93,37 +92,30 @@ static Builder builder() {\n     boolean shouldDamageEntities();\n \n     /**\n-     * Gets a value that indicates the relative strength of an explosion.\n+     * Gets the number of rays cast per length of each side of the explosion bounding box.\n      *\n-     * @return The resolution of the explosion.\n+     * @return The number of rays cast per length of each side of the explosion bounding box\n      */\n     default int getResolution() {\n         return 16;\n     }\n \n     /**\n-     * Gets an indication of the randomness of the form of the explosion.\n+     * <pre>\n+     * A numerical representation of variation in blast strength per ray.\n+     * The blast strength of a ray is calculated as {@code (1 * [variation]) * [radius]}\n+     * 0.0 = No Variation.\n+     * 1.0 = +/-0.3 Variation (Vanilla Behaviour).\n+     * </pre>\n      *\n-     * <p>This value indicates how close to being symmetrical the explosion is.\n-     * A value of zero indicates a completely symmetrical blast (in all three\n-     * dimensions). A larger value indicates a lower likelihood of symmetry.</p>\n-     *\n-     * <p>Note, this is a hint to the implementation. Implementations may not\n-     * provide the means to produce semi-random form explosions.</p>\n-     *\n-     * @return The potential randomness of the form of the explosion.\n+     * @return A numerical representation of variation in blast strength per ray\n      */\n     default float getRandomness() {\n         return 1;\n     }\n \n     /**\n-     * Gets the relative strength of the knockback applied to nearby\n-     * objects that can be knocked back.\n-     *\n-     * <p>Note that the default behavior and strength is not defined here. A\n-     * return value of 1 simply indicates the default behavior which is\n-     * implementation dependent.</p>\n+     * Knockback multiplier for entities effected by the explosion.\n      *\n      * @return The multiple by which the knockback of entities will be changed\n      */\n"}}, {"oid": "b3236fa8281059ff30e74b59d5bcffe9bae60803", "url": "https://github.com/SpongePowered/SpongeAPI/commit/b3236fa8281059ff30e74b59d5bcffe9bae60803", "message": "Add requiringPermissionWeak to GenericArguments\n\n* Also don't put [] around usage text that is empty when wrapping element in \"optional\" or \"optionalWeak\"\n\nSee #2083", "committedDate": "2020-03-14T12:20:01Z", "type": "commit"}, {"oid": "847fcde1e41b7eed5f463337efeced97be0c6c45", "url": "https://github.com/SpongePowered/SpongeAPI/commit/847fcde1e41b7eed5f463337efeced97be0c6c45", "message": "Update Explosion and sound event javadocs", "committedDate": "2020-03-14T12:23:34Z", "type": "commit"}, {"oid": "847fcde1e41b7eed5f463337efeced97be0c6c45", "url": "https://github.com/SpongePowered/SpongeAPI/commit/847fcde1e41b7eed5f463337efeced97be0c6c45", "message": "Update Explosion and sound event javadocs", "committedDate": "2020-03-14T12:23:34Z", "type": "forcePushed"}]}