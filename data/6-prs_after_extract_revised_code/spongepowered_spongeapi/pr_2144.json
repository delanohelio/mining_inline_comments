{"pr_number": 2144, "pr_title": "[API-8] Add missing Living value accessors", "pr_createdAt": "2020-07-02T20:42:21Z", "pr_url": "https://github.com/SpongePowered/SpongeAPI/pull/2144", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NTkxNQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2144#discussion_r449295915", "bodyText": "Only do Value.\nI now remember the discussion ages ago. Getting a Value doesn't mean setting the value will actually set it back on the data holder. You have to offer it back. A DataProvider in common can reject it.\nNothing should stop your Value from not being written to how you like though.\n@gabizou", "author": "Zidane", "createdAt": "2020-07-02T22:39:03Z", "path": "src/main/java/org/spongepowered/api/entity/living/Living.java", "diffHunk": "@@ -78,6 +78,22 @@\n         return this.requireValue(Keys.HEAD_ROTATION).asMutable();\n     }\n \n+    /**\n+     * {@link Keys#EYE_HEIGHT}\n+     * @return The height of the eyes\n+     */\n+    default Value.Immutable<Double> eyeHeight() {", "originalCommit": "ca03afef6c681433800186873be5ba9a91fd951d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODE4MA==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2144#discussion_r449298180", "bodyText": "Fixed", "author": "ItsDoot", "createdAt": "2020-07-02T22:47:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NTkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b4e1399486d064bc81f813ecc379575586b3bea5", "chunk": "diff --git a/src/main/java/org/spongepowered/api/entity/living/Living.java b/src/main/java/org/spongepowered/api/entity/living/Living.java\nindex 320967789..e5eeeb54e 100644\n--- a/src/main/java/org/spongepowered/api/entity/living/Living.java\n+++ b/src/main/java/org/spongepowered/api/entity/living/Living.java\n\n@@ -82,24 +82,24 @@\n      * {@link Keys#EYE_HEIGHT}\n      * @return The height of the eyes\n      */\n-    default Value.Immutable<Double> eyeHeight() {\n-        return this.requireValue(Keys.EYE_HEIGHT).asImmutable();\n+    default Value<Double> eyeHeight() {\n+        return this.requireValue(Keys.EYE_HEIGHT);\n     }\n \n     /**\n      * {@link Keys#EYE_POSITION}\n      * @return The position of the eyes\n      */\n-    default Value.Immutable<Vector3d> eyePosition() {\n-        return this.requireValue(Keys.EYE_POSITION).asImmutable();\n+    default Value<Vector3d> eyePosition() {\n+        return this.requireValue(Keys.EYE_POSITION);\n     }\n \n     /**\n      * {@link Keys#LAST_DAMAGE_RECEIVED}\n      * @return The last damage received\n      */\n-    default Optional<Value.Immutable<Double>> lastDamageReceived() {\n-        return this.getValue(Keys.LAST_DAMAGE_RECEIVED).map(Value::asImmutable);\n+    default Optional<Value<Double>> lastDamageReceived() {\n+        return this.getValue(Keys.LAST_DAMAGE_RECEIVED);\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3ODI1NQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2144#discussion_r449778255", "bodyText": "@gabizou\nCan you give some guidance on how the Values in these interfaces should be returned to consumers?\nLike, should they always be Value.Mutable? Just Value? Does it depend on what it is returning and what you can do with it in the game?", "author": "Zidane", "createdAt": "2020-07-04T14:36:26Z", "path": "src/main/java/org/spongepowered/api/entity/living/Living.java", "diffHunk": "@@ -47,6 +48,22 @@\n  */\n public interface Living extends AttributeHolder, Entity, EntityProjectileSource, TeamMember {\n \n+    /**\n+     * {@link Keys#ABSORPTION}\n+     * @return The amount of {@link org.spongepowered.api.effect.potion.PotionEffectTypes#ABSORPTION}\n+     */\n+    default BoundedValue.Mutable<Double> absorption() {\n+        return this.requireValue(Keys.ABSORPTION).asMutable();\n+    }\n+\n+    /**\n+     * {@link Keys#ACTIVE_ITEM}\n+     * @return The active item, such as food being eaten\n+     */\n+    default Value.Mutable<ItemStackSnapshot> activeItem() {", "originalCommit": "55ce942d18ea508eecaed28748bf0bc0d6b63910", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0NjQyOQ==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2144#discussion_r454746429", "bodyText": "I am preferring they're always Mutable from entities. It does make sense that they are reflective of their Key variables, but at the end of the day, the developer is likely to want to mutate the value and maybe offer it back, or present it to another entity after mutation.", "author": "gabizou", "createdAt": "2020-07-15T02:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3ODI1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "a5ed544fa669ac695fe78163656502aca653a23d", "chunk": "diff --git a/src/main/java/org/spongepowered/api/entity/living/Living.java b/src/main/java/org/spongepowered/api/entity/living/Living.java\nindex 363b4bda4..be7d82b10 100644\n--- a/src/main/java/org/spongepowered/api/entity/living/Living.java\n+++ b/src/main/java/org/spongepowered/api/entity/living/Living.java\n\n@@ -48,27 +46,11 @@\n  */\n public interface Living extends AttributeHolder, Entity, EntityProjectileSource, TeamMember {\n \n-    /**\n-     * {@link Keys#ABSORPTION}\n-     * @return The amount of {@link org.spongepowered.api.effect.potion.PotionEffectTypes#ABSORPTION}\n-     */\n-    default BoundedValue.Mutable<Double> absorption() {\n-        return this.requireValue(Keys.ABSORPTION).asMutable();\n-    }\n-\n-    /**\n-     * {@link Keys#ACTIVE_ITEM}\n-     * @return The active item, such as food being eaten\n-     */\n-    default Value.Mutable<ItemStackSnapshot> activeItem() {\n-        return this.requireValue(Keys.ACTIVE_ITEM).asMutable();\n-    }\n-\n     /**\n      * {@link Keys#HEALTH}\n      * @return The health value\n      */\n-    default BoundedValue.Mutable<Double> health() {\n+    default Value.Mutable<Double> health() {\n         return this.requireValue(Keys.HEALTH).asMutable();\n     }\n \n"}}, {"oid": "a5ed544fa669ac695fe78163656502aca653a23d", "url": "https://github.com/SpongePowered/SpongeAPI/commit/a5ed544fa669ac695fe78163656502aca653a23d", "message": "Add Living#eyeHeight and Living#eyePosition", "committedDate": "2020-08-24T23:21:11Z", "type": "commit"}, {"oid": "b4e1399486d064bc81f813ecc379575586b3bea5", "url": "https://github.com/SpongePowered/SpongeAPI/commit/b4e1399486d064bc81f813ecc379575586b3bea5", "message": "Return `Value` instead of `Value.Immutable`", "committedDate": "2020-08-24T23:21:12Z", "type": "commit"}, {"oid": "be0488fc0bf4d68723d6e0d00aa4dfd3215d1afa", "url": "https://github.com/SpongePowered/SpongeAPI/commit/be0488fc0bf4d68723d6e0d00aa4dfd3215d1afa", "message": "Add Living#fallDistance", "committedDate": "2020-08-24T23:21:12Z", "type": "commit"}, {"oid": "b7dbd5ee1a6a8dd640c5f8be01ebef9d0b76b937", "url": "https://github.com/SpongePowered/SpongeAPI/commit/b7dbd5ee1a6a8dd640c5f8be01ebef9d0b76b937", "message": "Add more missing value accessors", "committedDate": "2020-08-24T23:23:14Z", "type": "commit"}, {"oid": "b7dbd5ee1a6a8dd640c5f8be01ebef9d0b76b937", "url": "https://github.com/SpongePowered/SpongeAPI/commit/b7dbd5ee1a6a8dd640c5f8be01ebef9d0b76b937", "message": "Add more missing value accessors", "committedDate": "2020-08-24T23:23:14Z", "type": "forcePushed"}]}