{"pr_number": 853, "pr_title": "feat: add fromToExclusive in Interval", "pr_createdAt": "2020-04-12T16:50:37Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/853", "timeline": [{"oid": "cc6ef44b4aa41873cf67bbfdc261f0c67475e798", "url": "https://github.com/eclipse/eclipse-collections/commit/cc6ef44b4aa41873cf67bbfdc261f0c67475e798", "message": "feat: add fromUntilTo in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-12T17:05:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0ODQ4OA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407648488", "bodyText": "should the name be fromToExclusive()?", "author": "nikhilnanivadekar", "createdAt": "2020-04-13T18:48:51Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java", "diffHunk": "@@ -176,6 +176,26 @@ public static Interval fromTo(int from, int to)\n         return Interval.fromToBy(from, to, -1);\n     }\n \n+    /**\n+     * Returns an Interval starting from the value from until the specified value to (exclusive) with a step value of 1\n+     */\n+    public static Interval fromUntilTo(int from, int to)", "originalCommit": "cc6ef44b4aa41873cf67bbfdc261f0c67475e798", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNTQ0OA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407725448", "bodyText": "I thought you were okay with some other signature for the API. Let me use fromToExclusive", "author": "sendilkumarn", "createdAt": "2020-04-13T21:14:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0ODQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzczMzAyNw==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407733027", "bodyText": "I am fine with the naming. Naming is hard, so I\u2019ll let others also opine on naming", "author": "nikhilnanivadekar", "createdAt": "2020-04-13T21:30:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0ODQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzNDM2OA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r413434368", "bodyText": "I like fromToExclusive better.  @motlin what's your opinion here?", "author": "donraab", "createdAt": "2020-04-23T01:02:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0ODQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzNjg1Nw==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r414136857", "bodyText": "Took the until inspiration from the Kotlin. Changed the API to fromToExclusive to align with other APIs. :)", "author": "sendilkumarn", "createdAt": "2020-04-23T21:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0ODQ4OA=="}], "type": "inlineReview", "revised_code": {"commit": "9bff57989a389ecefb87fb932bb8f786898b099b", "chunk": "diff --git a/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java b/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\nindex 4b73bb9f..d582c377 100644\n--- a/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\n+++ b/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\n\n@@ -179,7 +179,7 @@ public final class Interval\n     /**\n      * Returns an Interval starting from the value from until the specified value to (exclusive) with a step value of 1\n      */\n-    public static Interval fromUntilTo(int from, int to)\n+    public static Interval fromToExclusive(int from, int to)\n     {\n         if (to == Integer.MIN_VALUE)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407649522", "bodyText": "This will not work for negatives. For negatives it needs to be to+1", "author": "nikhilnanivadekar", "createdAt": "2020-04-13T18:50:44Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java", "diffHunk": "@@ -176,6 +176,26 @@ public static Interval fromTo(int from, int to)\n         return Interval.fromToBy(from, to, -1);\n     }\n \n+    /**\n+     * Returns an Interval starting from the value from until the specified value to (exclusive) with a step value of 1\n+     */\n+    public static Interval fromUntilTo(int from, int to)\n+    {\n+        if (to == Integer.MIN_VALUE)\n+        {\n+            throw new IllegalArgumentException(\"to cannot be the Integer minimum value \" + Integer.MIN_VALUE);\n+        }\n+\n+        int until = to - 1;", "originalCommit": "cc6ef44b4aa41873cf67bbfdc261f0c67475e798", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNDc1NA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407724754", "bodyText": "I think this should be to - 1 even for negatives.\n// For example this is what will happen in the Kotlin's until\nfor (i in -10 until -1) {   \n    print(i) // -10-9-8-7-6-5-4-3-2\n}", "author": "sendilkumarn", "createdAt": "2020-04-13T21:13:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMDU0OA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415130548", "bodyText": "Hi @sendilkumarn , I think @nikhilnanivadekar comment above is why Interval.fromToExclusive(0, -9) is returning a size of 11.", "author": "donraab", "createdAt": "2020-04-25T19:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzMzUxOA==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415133518", "bodyText": "This is tricky especially because we support both forward and reverse interval generation in the same API.\nHow about this,\nif (to < 0) {\n    if (from <  to) {\n        to = to - 1;\n    } else {\n       to = to + 1;\n    }\n} \n\nInterval.fromToExclusive(0, -9)  => 0, -1, -2, -3, -4, -5, -6, -7, -8 \n\nInterval.fromToExclusive(-10, -5)  => -10, -9, -8, -7, -6\n\n\nWhat do you think? I guess this is how range in python works", "author": "sendilkumarn", "createdAt": "2020-04-25T20:03:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNTEzOQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415135139", "bodyText": "What about the following?\nInterval.fromToExclusive(10, 0)\nInterval.fromToExclusive(100, 50)", "author": "donraab", "createdAt": "2020-04-25T20:13:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MjY1Nw==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415152657", "bodyText": "Interval.fromToExclusive(10, 0) // 10, 9, 8, 7, 6, 5, 4, 3, 2, 1\nInterval.fromToExclusive(100, 50)  // 100, 99, ..... 51", "author": "sendilkumarn", "createdAt": "2020-04-25T21:56:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY0OTUyMg=="}], "type": "inlineReview", "revised_code": {"commit": "9bff57989a389ecefb87fb932bb8f786898b099b", "chunk": "diff --git a/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java b/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\nindex 4b73bb9f..d582c377 100644\n--- a/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\n+++ b/eclipse-collections/src/main/java/org/eclipse/collections/impl/list/Interval.java\n\n@@ -179,7 +179,7 @@ public final class Interval\n     /**\n      * Returns an Interval starting from the value from until the specified value to (exclusive) with a step value of 1\n      */\n-    public static Interval fromUntilTo(int from, int to)\n+    public static Interval fromToExclusive(int from, int to)\n     {\n         if (to == Integer.MIN_VALUE)\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1MDMzMg==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r407650332", "bodyText": "Please add tests for:\n\nnegative numbers\npositive to negative numbers\nnegative to positive numbers\nInteger.MIN to Integer.MAX\nInteger.MAX to Integer.MIN\nTests to show parity with IntStream().range()", "author": "nikhilnanivadekar", "createdAt": "2020-04-13T18:52:13Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java", "diffHunk": "@@ -53,6 +53,21 @@ public void into()\n         Assert.assertEquals(10, sum);\n     }\n \n+    @Test\n+    public void fromUntilTo()\n+    {\n+        Interval interval = Interval.from(1);", "originalCommit": "cc6ef44b4aa41873cf67bbfdc261f0c67475e798", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "915c1a389d80a2326869a1bc919d69566150533f", "chunk": "diff --git a/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java b/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\nindex 34203dc9..006ed3e4 100644\n--- a/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\n+++ b/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\n\n@@ -54,18 +55,34 @@ public class IntervalTest\n     }\n \n     @Test\n-    public void fromUntilTo()\n+    public void fromToExclusive()\n     {\n         Interval interval = Interval.from(1);\n         Interval interval2 = interval.to(10);\n \n-        Verify.assertEqualsAndHashCode(interval, Interval.fromUntilTo(1, 2));\n-        Verify.assertEqualsAndHashCode(interval2, Interval.fromUntilTo(1, 11));\n+        Verify.assertEqualsAndHashCode(interval, Interval.fromToExclusive(1, 2));\n+        Verify.assertEqualsAndHashCode(interval2, Interval.fromToExclusive(1, 11));\n \n-        Verify.assertThrows(IllegalArgumentException.class, () -> Interval.fromUntilTo(Integer.MIN_VALUE, Integer.MAX_VALUE));\n+        Verify.assertThrows(IllegalArgumentException.class, () -> Interval.fromToExclusive(Integer.MIN_VALUE, Integer.MAX_VALUE));\n+        Verify.assertThrows(IllegalArgumentException.class, () -> Interval.fromToExclusive(Integer.MAX_VALUE, Integer.MIN_VALUE));\n \n-        Verify.assertSize(Integer.MAX_VALUE, Interval.fromUntilTo(Integer.MIN_VALUE + 1, 0));\n-        Verify.assertSize(Integer.MAX_VALUE, Interval.fromUntilTo(0, Integer.MAX_VALUE));\n+        Verify.assertSize(Integer.MAX_VALUE, Interval.fromToExclusive(Integer.MIN_VALUE + 1, 0));\n+        Verify.assertSize(Integer.MAX_VALUE, Interval.fromToExclusive(0, Integer.MAX_VALUE));\n+        Verify.assertSize(20, Interval.fromToExclusive(-10, 10));\n+        Verify.assertSize(20, Interval.fromToExclusive(9, -9));\n+    }\n+\n+    @Test\n+    public void fromToExculsiveMatchesIntStreamRange() {\n+        IntStream range = IntStream.range(0, 10);\n+        IntStream range1 = IntStream.range(-10, 10);\n+        IntStream range2 = IntStream.range(0, Integer.MAX_VALUE);\n+        IntStream range3 = IntStream.range(Integer.MIN_VALUE, 0);\n+\n+        Verify.assertEqualsAndHashCode(range.toArray(), Interval.fromToExclusive(0, 10).toArray());\n+        Verify.assertEqualsAndHashCode(range1.toArray(), Interval.fromToExclusive(-10, 10).toArray());\n+        Verify.assertEqualsAndHashCode(range2.toArray(), Interval.fromToExclusive(0, Integer.MAX_VALUE).toArray());\n+        Verify.assertEqualsAndHashCode(range3.toArray(), Interval.fromToExclusive(Integer.MIN_VALUE, 0).toArray());\n     }\n \n     @Test\n"}}, {"oid": "915c1a389d80a2326869a1bc919d69566150533f", "url": "https://github.com/eclipse/eclipse-collections/commit/915c1a389d80a2326869a1bc919d69566150533f", "message": "feat: add fromUntilTo in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-19T15:33:49Z", "type": "forcePushed"}, {"oid": "91743e71c97d2c0c50297b3b0e2e57f99a5b4bab", "url": "https://github.com/eclipse/eclipse-collections/commit/91743e71c97d2c0c50297b3b0e2e57f99a5b4bab", "message": "feat: add fromUntilTo in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-19T16:03:01Z", "type": "forcePushed"}, {"oid": "802bd78be32570cf122aa4d761a85d93d3d1766f", "url": "https://github.com/eclipse/eclipse-collections/commit/802bd78be32570cf122aa4d761a85d93d3d1766f", "message": "feat: add fromUntilTo in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-22T21:57:13Z", "type": "forcePushed"}, {"oid": "0d913055c587a4ef4e08fbf9bfa329f9dd1b3182", "url": "https://github.com/eclipse/eclipse-collections/commit/0d913055c587a4ef4e08fbf9bfa329f9dd1b3182", "message": "feat: add fromUntilTo in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-22T23:59:19Z", "type": "forcePushed"}, {"oid": "9bff57989a389ecefb87fb932bb8f786898b099b", "url": "https://github.com/eclipse/eclipse-collections/commit/9bff57989a389ecefb87fb932bb8f786898b099b", "message": "feat: add fromToExclusive in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-23T21:27:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEyODA4OQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415128089", "bodyText": "This looks incorrect. Interval.fromTo(0, -10) has a size of 11 right above. I would expect Interval.fromToExclusive(0, -9) to return a size of 9.", "author": "donraab", "createdAt": "2020-04-25T19:31:17Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java", "diffHunk": "@@ -467,8 +506,10 @@ public void size()\n         Verify.assertSize(12, Interval.fromToBy(1, 100, 9));\n         Verify.assertSize(10, Interval.fromToBy(1, 100, 10));\n         Verify.assertSize(11, Interval.fromTo(0, 10));\n+        Verify.assertSize(11, Interval.fromToExclusive(0, 11));\n         Verify.assertSize(1, Interval.zero());\n         Verify.assertSize(11, Interval.fromTo(0, -10));\n+        Verify.assertSize(11, Interval.fromToExclusive(0, -9));", "originalCommit": "9bff57989a389ecefb87fb932bb8f786898b099b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwMTc3Mg==", "url": "https://github.com/eclipse/eclipse-collections/pull/853#discussion_r415301772", "bodyText": "Updated", "author": "sendilkumarn", "createdAt": "2020-04-26T12:41:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEyODA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0b63d13ffca8fce4429c0cd3be40702e18c21eb1", "chunk": "diff --git a/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java b/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\nindex 825485ed..f04281bf 100644\n--- a/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\n+++ b/unit-tests/src/test/java/org/eclipse/collections/impl/list/IntervalTest.java\n\n@@ -509,7 +525,7 @@ public class IntervalTest\n         Verify.assertSize(11, Interval.fromToExclusive(0, 11));\n         Verify.assertSize(1, Interval.zero());\n         Verify.assertSize(11, Interval.fromTo(0, -10));\n-        Verify.assertSize(11, Interval.fromToExclusive(0, -9));\n+        Verify.assertSize(9, Interval.fromToExclusive(0, -9));\n         Verify.assertSize(3, Interval.evensFromTo(2, -2));\n         Verify.assertSize(2, Interval.oddsFromTo(2, -2));\n \n"}}, {"oid": "0b63d13ffca8fce4429c0cd3be40702e18c21eb1", "url": "https://github.com/eclipse/eclipse-collections/commit/0b63d13ffca8fce4429c0cd3be40702e18c21eb1", "message": "feat: add fromToExclusive in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-26T12:40:32Z", "type": "forcePushed"}, {"oid": "4ecf50950723d9d936a7125c8091c82e432220ca", "url": "https://github.com/eclipse/eclipse-collections/commit/4ecf50950723d9d936a7125c8091c82e432220ca", "message": "feat: add fromToExclusive in Interval\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-26T13:24:17Z", "type": "forcePushed"}, {"oid": "c4ec75a13641696f3e0a505f886b61ac6a9ddadf", "url": "https://github.com/eclipse/eclipse-collections/commit/c4ec75a13641696f3e0a505f886b61ac6a9ddadf", "message": "feat: add fromToExclusive in Interval. closes #743\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-27T06:24:56Z", "type": "forcePushed"}, {"oid": "397e15eb5f406428dbcaebd5d510e22888c2c624", "url": "https://github.com/eclipse/eclipse-collections/commit/397e15eb5f406428dbcaebd5d510e22888c2c624", "message": "feat: add fromToExclusive in Interval. closes #743\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-29T04:58:28Z", "type": "commit"}, {"oid": "397e15eb5f406428dbcaebd5d510e22888c2c624", "url": "https://github.com/eclipse/eclipse-collections/commit/397e15eb5f406428dbcaebd5d510e22888c2c624", "message": "feat: add fromToExclusive in Interval. closes #743\n\nSigned-off-by: sendilkumarn <sendilkumarn@live.com>", "committedDate": "2020-04-29T04:58:28Z", "type": "forcePushed"}]}