{"pr_number": 1012, "pr_title": "Issue# 988: Test Coverage for AtomicCountProcedure", "pr_createdAt": "2020-10-04T21:38:30Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/1012", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MTcxMQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/1012#discussion_r499291711", "bodyText": "Hi @hongliu2020, I would expect the cast to predicate here to be unnecessary. Can you try removing it?", "author": "donraab", "createdAt": "2020-10-04T21:41:20Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020 Goldman Sachs and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n+ * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */\n+\n+package org.eclipse.collections.impl.block.procedure;\n+\n+import org.eclipse.collections.api.block.predicate.Predicate;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class AtomicCountProcedureTest\n+{\n+    private static final int STRING_LENGTH = 5;\n+    private static final int ZERO = STRING_LENGTH - 5;\n+\n+    @Test\n+    public void getCount()\n+    {\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->", "originalCommit": "186daa6611aee1f2a40d2d8a69adf6f3b40298ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ea3f4839b9faeeb5a19b623b3ecbb020ac2990c", "chunk": "diff --git a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\nindex 868e5db4..5027063e 100644\n--- a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n+++ b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n\n@@ -19,12 +19,12 @@ import static org.junit.Assert.assertEquals;\n public class AtomicCountProcedureTest\n {\n     private static final int STRING_LENGTH = 5;\n-    private static final int ZERO = STRING_LENGTH - 5;\n+    private static final int ZERO = 0;\n \n     @Test\n     public void getCount()\n     {\n-        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>( each ->\n                 STRING_LENGTH < each.length());\n \n         atomicCountProcedure.value(\"word\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MTczMw==", "url": "https://github.com/eclipse/eclipse-collections/pull/1012#discussion_r499291733", "bodyText": "Same comment as above on the cast.", "author": "donraab", "createdAt": "2020-10-04T21:41:39Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020 Goldman Sachs and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n+ * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */\n+\n+package org.eclipse.collections.impl.block.procedure;\n+\n+import org.eclipse.collections.api.block.predicate.Predicate;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class AtomicCountProcedureTest\n+{\n+    private static final int STRING_LENGTH = 5;\n+    private static final int ZERO = STRING_LENGTH - 5;\n+\n+    @Test\n+    public void getCount()\n+    {\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->\n+                STRING_LENGTH < each.length());\n+\n+        atomicCountProcedure.value(\"word\");\n+        assertEquals(0,  atomicCountProcedure.getCount());\n+\n+        atomicCountProcedure.value(\"america\");\n+        assertEquals(1, atomicCountProcedure.getCount());\n+    }\n+\n+    @Test(expected = ArithmeticException.class)\n+    public void predicateException()\n+    {\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->", "originalCommit": "186daa6611aee1f2a40d2d8a69adf6f3b40298ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ea3f4839b9faeeb5a19b623b3ecbb020ac2990c", "chunk": "diff --git a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\nindex 868e5db4..5027063e 100644\n--- a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n+++ b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n\n@@ -19,12 +19,12 @@ import static org.junit.Assert.assertEquals;\n public class AtomicCountProcedureTest\n {\n     private static final int STRING_LENGTH = 5;\n-    private static final int ZERO = STRING_LENGTH - 5;\n+    private static final int ZERO = 0;\n \n     @Test\n     public void getCount()\n     {\n-        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>( each ->\n                 STRING_LENGTH < each.length());\n \n         atomicCountProcedure.value(\"word\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjMwMA==", "url": "https://github.com/eclipse/eclipse-collections/pull/1012#discussion_r499292300", "bodyText": "I would recommend inlining 0 as it will be more self explanatory.", "author": "donraab", "createdAt": "2020-10-04T21:47:51Z", "path": "unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright (c) 2020 Goldman Sachs and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * and Eclipse Distribution License v. 1.0 which accompany this distribution.\n+ * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n+ * and the Eclipse Distribution License is available at\n+ * http://www.eclipse.org/org/documents/edl-v10.php.\n+ */\n+\n+package org.eclipse.collections.impl.block.procedure;\n+\n+import org.eclipse.collections.api.block.predicate.Predicate;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class AtomicCountProcedureTest\n+{\n+    private static final int STRING_LENGTH = 5;\n+    private static final int ZERO = STRING_LENGTH - 5;", "originalCommit": "186daa6611aee1f2a40d2d8a69adf6f3b40298ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3ea3f4839b9faeeb5a19b623b3ecbb020ac2990c", "chunk": "diff --git a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\nindex 868e5db4..5027063e 100644\n--- a/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n+++ b/unit-tests/src/test/java/org/eclipse/collections/impl/block/procedure/AtomicCountProcedureTest.java\n\n@@ -19,12 +19,12 @@ import static org.junit.Assert.assertEquals;\n public class AtomicCountProcedureTest\n {\n     private static final int STRING_LENGTH = 5;\n-    private static final int ZERO = STRING_LENGTH - 5;\n+    private static final int ZERO = 0;\n \n     @Test\n     public void getCount()\n     {\n-        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>((Predicate<String>) each ->\n+        AtomicCountProcedure<String> atomicCountProcedure = new AtomicCountProcedure<>( each ->\n                 STRING_LENGTH < each.length());\n \n         atomicCountProcedure.value(\"word\");\n"}}, {"oid": "3ea3f4839b9faeeb5a19b623b3ecbb020ac2990c", "url": "https://github.com/eclipse/eclipse-collections/commit/3ea3f4839b9faeeb5a19b623b3ecbb020ac2990c", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-06T00:41:46Z", "type": "forcePushed"}, {"oid": "25151d00e08abfe5d745de80db94477d74a8ad87", "url": "https://github.com/eclipse/eclipse-collections/commit/25151d00e08abfe5d745de80db94477d74a8ad87", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-06T01:08:06Z", "type": "forcePushed"}, {"oid": "4d7c9b5ee6fe83b4342391913e3d2459489eb992", "url": "https://github.com/eclipse/eclipse-collections/commit/4d7c9b5ee6fe83b4342391913e3d2459489eb992", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-06T01:43:07Z", "type": "forcePushed"}, {"oid": "931f9330d2f608e196cbdff70eb3c1a22f22cd23", "url": "https://github.com/eclipse/eclipse-collections/commit/931f9330d2f608e196cbdff70eb3c1a22f22cd23", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-17T14:39:14Z", "type": "forcePushed"}, {"oid": "e29ff9eb7fe30300e2df453a845c92cf7440736f", "url": "https://github.com/eclipse/eclipse-collections/commit/e29ff9eb7fe30300e2df453a845c92cf7440736f", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-17T15:06:13Z", "type": "forcePushed"}, {"oid": "39a082e3550cbe5cd04cb20979c9d9c818ebc39a", "url": "https://github.com/eclipse/eclipse-collections/commit/39a082e3550cbe5cd04cb20979c9d9c818ebc39a", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-17T19:47:25Z", "type": "forcePushed"}, {"oid": "81920e7274b8bc2d9a9268cbcee13abcca0c5d41", "url": "https://github.com/eclipse/eclipse-collections/commit/81920e7274b8bc2d9a9268cbcee13abcca0c5d41", "message": "Merge branch 'testcoverage-atomicprocedure' of https://github.com/hongliu2020/eclipse-collections into testcoverage-atomicprocedure\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-17T19:20:29Z", "type": "forcePushed"}, {"oid": "6bfbdc50a0148ef1463e69efb9e8587f7d389986", "url": "https://github.com/eclipse/eclipse-collections/commit/6bfbdc50a0148ef1463e69efb9e8587f7d389986", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-18T02:10:54Z", "type": "forcePushed"}, {"oid": "76e3000b2e2ca824d77004eff5495836a95b32cc", "url": "https://github.com/eclipse/eclipse-collections/commit/76e3000b2e2ca824d77004eff5495836a95b32cc", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-18T02:18:21Z", "type": "forcePushed"}, {"oid": "f1b5b8d8514f2fcd323cf2aa89bfc713485eb53d", "url": "https://github.com/eclipse/eclipse-collections/commit/f1b5b8d8514f2fcd323cf2aa89bfc713485eb53d", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-18T14:41:50Z", "type": "commit"}, {"oid": "f1b5b8d8514f2fcd323cf2aa89bfc713485eb53d", "url": "https://github.com/eclipse/eclipse-collections/commit/f1b5b8d8514f2fcd323cf2aa89bfc713485eb53d", "message": "Test Coverage for AtomicCountProcedure - Closes #988\n\nSigned-off-by: hongliu2020 <hong.liu@bnymellon.com>", "committedDate": "2020-10-18T14:41:50Z", "type": "forcePushed"}]}