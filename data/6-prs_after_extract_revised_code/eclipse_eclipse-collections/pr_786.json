{"pr_number": 786, "pr_title": "Fix Bug #677 - Optimize removeIf() for UnifiedMap.", "pr_createdAt": "2020-01-12T03:50:08Z", "pr_url": "https://github.com/eclipse/eclipse-collections/pull/786", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556256", "bodyText": "there is a subtle bug here. It would be good to have a test for it. The bug is this: chIndex is incremented unconditionally, even if the predicate matches. So if we have 3 elements, a, b, and c, if a matches, the chain look likes c, b, but c is no longer put through the predicate because the index will move on.", "author": "mohrezaei", "createdAt": "2020-01-12T04:00:04Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "originalCommit": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjQ5MQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556491", "bodyText": "Ah, got it. Let me add a test case for it and fix it.", "author": "digsb", "createdAt": "2020-01-12T04:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5MjYxNw==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365592617", "bodyText": "Thanks for Pointing this out. Fixed it.", "author": "digsb", "createdAt": "2020-01-12T15:57:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDEyMA==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365594120", "bodyText": "Style nitpick... now with the refactoring of the for-loop, I think you could move the condition chain[chIndex] != null into the loop condition.", "author": "motlin", "createdAt": "2020-01-12T16:20:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NjI1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "chunk": "diff --git a/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java b/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\nindex 3163fbd3..90df8584 100644\n--- a/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\n+++ b/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\n\n@@ -1049,14 +1049,22 @@ public class UnifiedMap<K, V> extends AbstractMutableMap<K, V>\n             if (cur == CHAINED_KEY)\n             {\n                 Object[] chain = (Object[]) this.table[index + 1];\n-                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                for (int chIndex = 0; chIndex < chain.length; )\n                 {\n+                    if (chain[chIndex] == null)\n+                    {\n+                        break;\n+                    }\n                     K key = this.nonSentinel(chain[chIndex]);\n                     V value = (V) chain[chIndex + 1];\n                     if (predicate.accept(key, value))\n                     {\n                         this.overwriteWithLastElementFromChain(chain, index, chIndex);\n                     }\n+                    else\n+                    {\n+                        chIndex += 2;\n+                    }\n                 }\n             }\n             else\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Njc4NQ==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365556785", "bodyText": "also, if chain[chIndex] == null, break the loop immediately.", "author": "mohrezaei", "createdAt": "2020-01-12T04:19:23Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,40 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;\n+        for (int index = 0; index < this.table.length; index += 2)\n         {\n-            Entry<K, V> entry = iterator.next();\n-            if (predicate.accept(entry.getKey(), entry.getValue()))\n+            Object cur = this.table[index];\n+            if (cur == null)\n+            {\n+                continue;\n+            }\n+            if (cur == CHAINED_KEY)\n             {\n-                iterator.remove();\n+                Object[] chain = (Object[]) this.table[index + 1];\n+                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                {\n+                    K key = this.nonSentinel(chain[chIndex]);", "originalCommit": "68cfb6df25b5627b13b5ac8d2c67abf6c1c140dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5MjYyNg==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365592626", "bodyText": "Thanks for Pointing this out. Fixed it.", "author": "digsb", "createdAt": "2020-01-12T15:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Njc4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "chunk": "diff --git a/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java b/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\nindex 3163fbd3..90df8584 100644\n--- a/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\n+++ b/eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java\n\n@@ -1049,14 +1049,22 @@ public class UnifiedMap<K, V> extends AbstractMutableMap<K, V>\n             if (cur == CHAINED_KEY)\n             {\n                 Object[] chain = (Object[]) this.table[index + 1];\n-                for (int chIndex = 0; chIndex < chain.length; chIndex += 2)\n+                for (int chIndex = 0; chIndex < chain.length; )\n                 {\n+                    if (chain[chIndex] == null)\n+                    {\n+                        break;\n+                    }\n                     K key = this.nonSentinel(chain[chIndex]);\n                     V value = (V) chain[chIndex + 1];\n                     if (predicate.accept(key, value))\n                     {\n                         this.overwriteWithLastElementFromChain(chain, index, chIndex);\n                     }\n+                    else\n+                    {\n+                        chIndex += 2;\n+                    }\n                 }\n             }\n             else\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDQ5Mw==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365594493", "bodyText": "I'm curious about occupied vs size(). Is there an advantage to one over the other?", "author": "motlin", "createdAt": "2020-01-12T16:26:26Z", "path": "eclipse-collections/src/main/java/org/eclipse/collections/impl/map/mutable/UnifiedMap.java", "diffHunk": "@@ -1038,17 +1038,48 @@ public V removeKey(K key)\n     @Override\n     public boolean removeIf(Predicate2<? super K, ? super V> predicate)\n     {\n-        int previousSize = this.size();\n-        Iterator<Entry<K, V>> iterator = this.entrySet().iterator();\n-        while (iterator.hasNext())\n+        int previousOccupied = this.occupied;", "originalCommit": "8a2804b8dcbb7ee496cb6880dd65048d273d8dc2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3NDUxMw==", "url": "https://github.com/eclipse/eclipse-collections/pull/786#discussion_r365774513", "bodyText": "size() is just a wrapper around occupied, so though of using the field directly.", "author": "digsb", "createdAt": "2020-01-13T12:19:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU5NDQ5Mw=="}], "type": "inlineReview", "revised_code": null}, {"oid": "1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "url": "https://github.com/eclipse/eclipse-collections/commit/1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "message": "Fix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>\n\nFix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>\n\nFix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>", "committedDate": "2020-01-13T07:59:23Z", "type": "commit"}, {"oid": "1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "url": "https://github.com/eclipse/eclipse-collections/commit/1596cfef0f66556cd3740f61722a2fc8c1a57cb8", "message": "Fix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>\n\nFix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>\n\nFix Bug #677 - Optimize removeIf() for UnifiedMap.\n\nSigned-off-by: Digant Bhavsar <digantbhavsar@gmail.com>", "committedDate": "2020-01-13T07:59:23Z", "type": "forcePushed"}]}