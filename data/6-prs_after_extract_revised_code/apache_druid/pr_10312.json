{"pr_number": 10312, "pr_title": "Optimize large InDimFilters", "pr_createdAt": "2020-08-24T05:16:16Z", "pr_url": "https://github.com/apache/druid/pull/10312", "timeline": [{"oid": "a14f3807d34edd0a0e22c3e01b4fc69164d634e7", "url": "https://github.com/apache/druid/commit/a14f3807d34edd0a0e22c3e01b4fc69164d634e7", "message": "Optimize large InDimFilters\n\nFor large InDimFilters, in default mode, the filter does a linear check of the\nset to see if it contains either an empty or null. If it does, the empties are\nconverted to nulls by passing through the entire list again.\n\nInstead of this, in default mode, we attempt to remove an empty string from the\nvalues that are passed to the InDimFilter. If an empty string was removed, we\nadd null to the set", "committedDate": "2020-08-24T05:04:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MzA1Mw==", "url": "https://github.com/apache/druid/pull/10312#discussion_r475353053", "bodyText": "Nice finding, but this can lead to incorrect result in default mode since null will be always added no matter whether an empty string is in values or not.", "author": "jihoonson", "createdAt": "2020-08-24T05:38:19Z", "path": "processing/src/main/java/org/apache/druid/query/filter/InDimFilter.java", "diffHunk": "@@ -143,10 +142,11 @@ private InDimFilter(\n \n     // The values set can be huge. Try to avoid copying the set if possible.\n     // Note that we may still need to copy values to a list for caching. See getCacheKey().\n-    if ((NullHandling.sqlCompatible() || values.stream().noneMatch(NullHandling::needsEmptyToNull))) {\n+    if (NullHandling.sqlCompatible() || !values.remove(\"\")) {\n       this.values = values;\n     } else {\n-      this.values = values.stream().map(NullHandling::emptyToNullIfNeeded).collect(Collectors.toSet());\n+      values.add(null);", "originalCommit": "a14f3807d34edd0a0e22c3e01b4fc69164d634e7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1NDczNA==", "url": "https://github.com/apache/druid/pull/10312#discussion_r475354734", "bodyText": "I think the if condition on line 145 works such that it only enters this else block if there was an empty string already in the set. I should add unit tests here, because I had to think a lot about how the ordering of the if statements affected the code flow \ud83d\ude05 and how nulls and empty strings work in the different modes...\nWhat I want to happen here is:\n\nIf it's sqlCompatible mode, just use the values as is\nIf it's default mode (ie not sql compatible mode) attempt to remove empty string\nIf an empty string was removed add null\nIf no empty  string was removed, use values as is", "author": "suneet-s", "createdAt": "2020-08-24T05:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1OTczMA==", "url": "https://github.com/apache/druid/pull/10312#discussion_r475359730", "bodyText": "Oh sorry, you're right. I misread the code. It would be nice to add some comment about what we want to do here since it's not much intuitive.", "author": "jihoonson", "createdAt": "2020-08-24T06:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2MTUwOQ==", "url": "https://github.com/apache/druid/pull/10312#discussion_r475361509", "bodyText": "In most likelihood, the values is a HashSet which is internally backed by a HashMap and hence remove, contains will be much faster than linear scan.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  values.add(null);\n          \n          \n            \n                  if ((NullHandling.sqlCompatible()) {\n          \n          \n            \n                  this.values = values;\n          \n          \n            \n                } else if (values.remove(\"\")) {\n          \n          \n            \n                    values.add(null);\n          \n          \n            \n                }", "author": "abhishekagarwal87", "createdAt": "2020-08-24T06:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MzA1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc4NTAxMw==", "url": "https://github.com/apache/druid/pull/10312#discussion_r475785013", "bodyText": "I've re-written the if statement to hopefully be easier to follow.", "author": "suneet-s", "createdAt": "2020-08-24T17:39:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1MzA1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "61fe33ebf762764bb89108ddd966937f3313be71", "chunk": "diff --git a/processing/src/main/java/org/apache/druid/query/filter/InDimFilter.java b/processing/src/main/java/org/apache/druid/query/filter/InDimFilter.java\nindex a80560e332..fb9099cbb8 100644\n--- a/processing/src/main/java/org/apache/druid/query/filter/InDimFilter.java\n+++ b/processing/src/main/java/org/apache/druid/query/filter/InDimFilter.java\n\n@@ -142,12 +142,12 @@ public class InDimFilter extends AbstractOptimizableDimFilter implements Filter\n \n     // The values set can be huge. Try to avoid copying the set if possible.\n     // Note that we may still need to copy values to a list for caching. See getCacheKey().\n-    if (NullHandling.sqlCompatible() || !values.remove(\"\")) {\n-      this.values = values;\n-    } else {\n+    if (!NullHandling.sqlCompatible() && values.remove(\"\")) {\n+      // In Non sql compatible mode, empty strings should be converted to nulls for the filter.\n+      // In sql compatible mode, empty strings and nulls should be treated differently\n       values.add(null);\n-      this.values = values;\n     }\n+    this.values = values;\n \n     this.dimension = Preconditions.checkNotNull(dimension, \"dimension cannot be null\");\n     this.extractionFn = extractionFn;\n"}}, {"oid": "61fe33ebf762764bb89108ddd966937f3313be71", "url": "https://github.com/apache/druid/commit/61fe33ebf762764bb89108ddd966937f3313be71", "message": "code review", "committedDate": "2020-08-24T17:33:59Z", "type": "commit"}, {"oid": "e37f79ea984185e572bdbf5e2b7f8e17a9475023", "url": "https://github.com/apache/druid/commit/e37f79ea984185e572bdbf5e2b7f8e17a9475023", "message": "Revert \"code review\"\n\nThis reverts commit 61fe33ebf762764bb89108ddd966937f3313be71.", "committedDate": "2020-08-24T18:53:08Z", "type": "commit"}, {"oid": "997c038bacb8c4fcdc95cce0b1c5e49e2377005d", "url": "https://github.com/apache/druid/commit/997c038bacb8c4fcdc95cce0b1c5e49e2377005d", "message": "code review - less brittle", "committedDate": "2020-08-24T18:58:13Z", "type": "commit"}]}