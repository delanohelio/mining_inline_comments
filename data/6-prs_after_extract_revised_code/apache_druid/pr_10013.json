{"pr_number": 10013, "pr_title": "Add NonnullPair", "pr_createdAt": "2020-06-10T07:06:20Z", "pr_url": "https://github.com/apache/druid/pull/10013", "timeline": [{"oid": "2eee4911bace934093cca69cddd0248cfd65778f", "url": "https://github.com/apache/druid/commit/2eee4911bace934093cca69cddd0248cfd65778f", "message": "Add NonnullPair", "committedDate": "2020-06-10T06:55:24Z", "type": "commit"}, {"oid": "f9910f0a755a80df2f2219c84baa0845b80beda8", "url": "https://github.com/apache/druid/commit/f9910f0a755a80df2f2219c84baa0845b80beda8", "message": "new line", "committedDate": "2020-06-10T07:04:41Z", "type": "commit"}, {"oid": "adb29652433e438947bfb1d8dcd4cb14d8c0ebd3", "url": "https://github.com/apache/druid/commit/adb29652433e438947bfb1d8dcd4cb14d8c0ebd3", "message": "test", "committedDate": "2020-06-10T07:05:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTgxMA==", "url": "https://github.com/apache/druid/pull/10013#discussion_r438345810", "bodyText": "For consistency, should this have the same shape as Pair where lhs and rhs are just public fields?  (or should it look like this class?)", "author": "clintropolis", "createdAt": "2020-06-10T19:03:27Z", "path": "core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.java.util.common;\n+\n+import com.google.common.base.Preconditions;\n+\n+public class NonnullPair<L, R> extends Pair<L, R>\n+{\n+  public NonnullPair(L lhs, R rhs)\n+  {\n+    super(Preconditions.checkNotNull(lhs, \"lhs\"), Preconditions.checkNotNull(rhs, \"rhs\"));\n+  }\n+\n+  public L left()", "originalCommit": "adb29652433e438947bfb1d8dcd4cb14d8c0ebd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjAxMw==", "url": "https://github.com/apache/druid/pull/10013#discussion_r444642013", "bodyText": "I think it would be better to encapsulate them in Pair in terms of OOP (maybe aesthetically better too), but I don't really have a strong preference here since both fields in Pair are final. Pair is already in use everywhere so I changed NonnullPair to be consistent.", "author": "jihoonson", "createdAt": "2020-06-24T04:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTgxMA=="}], "type": "inlineReview", "revised_code": {"commit": "ba4a502089b453a1a669c5d8759a72ded042ec16", "chunk": "diff --git a/core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java b/core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java\nindex 2a04590c1a..71c7e30d55 100644\n--- a/core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java\n+++ b/core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java\n\n@@ -21,20 +21,45 @@ package org.apache.druid.java.util.common;\n \n import com.google.common.base.Preconditions;\n \n-public class NonnullPair<L, R> extends Pair<L, R>\n+import java.util.Objects;\n+\n+public class NonnullPair<L, R>\n {\n+  public final L lhs;\n+  public final R rhs;\n+\n   public NonnullPair(L lhs, R rhs)\n   {\n-    super(Preconditions.checkNotNull(lhs, \"lhs\"), Preconditions.checkNotNull(rhs, \"rhs\"));\n+    this.lhs = Preconditions.checkNotNull(lhs, \"lhs\");\n+    this.rhs = Preconditions.checkNotNull(rhs, \"rhs\");\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    NonnullPair<?, ?> that = (NonnullPair<?, ?>) o;\n+    return Objects.equals(lhs, that.lhs) &&\n+           Objects.equals(rhs, that.rhs);\n   }\n \n-  public L left()\n+  @Override\n+  public int hashCode()\n   {\n-    return lhs;\n+    return Objects.hash(lhs, rhs);\n   }\n \n-  public R right()\n+  @Override\n+  public String toString()\n   {\n-    return rhs;\n+    return \"NonnullPair{\" +\n+           \"lhs=\" + lhs +\n+           \", rhs=\" + rhs +\n+           '}';\n   }\n }\n"}}, {"oid": "ba4a502089b453a1a669c5d8759a72ded042ec16", "url": "https://github.com/apache/druid/commit/ba4a502089b453a1a669c5d8759a72ded042ec16", "message": "make it consistent", "committedDate": "2020-06-24T04:44:00Z", "type": "commit"}]}