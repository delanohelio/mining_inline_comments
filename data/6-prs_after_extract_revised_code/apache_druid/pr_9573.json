{"pr_number": 9573, "pr_title": "Fix some flaws of KafkaEmitter", "pr_createdAt": "2020-03-27T09:50:38Z", "pr_url": "https://github.com/apache/druid/pull/9573", "timeline": [{"oid": "19537d2af69f987a9cf45367774abd8b07db51be", "url": "https://github.com/apache/druid/commit/19537d2af69f987a9cf45367774abd8b07db51be", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T09:35:28Z", "type": "commit"}, {"oid": "c17052e6898318d71225fad003453cc054d9228b", "url": "https://github.com/apache/druid/commit/c17052e6898318d71225fad003453cc054d9228b", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T09:35:39Z", "type": "commit"}, {"oid": "047635bd13a858211499c85662452ca6b4d9c4d2", "url": "https://github.com/apache/druid/commit/047635bd13a858211499c85662452ca6b4d9c4d2", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T13:16:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1NDEwNg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r403854106", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                catch (InterruptedException e) {\n          \n          \n            \n                catch (Throwable e) {", "author": "himanshug", "createdAt": "2020-04-06T06:25:25Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,21 +120,21 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n     catch (InterruptedException e) {", "originalCommit": "047635bd13a858211499c85662452ca6b4d9c4d2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f493e70581ec5f9230864b9e606496f26968773", "chunk": "diff --git a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\nindex afa8e41403..2965dc5e49 100644\n--- a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n+++ b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\n@@ -137,7 +137,7 @@ public class KafkaEmitter implements Emitter\n         producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");\n     }\n   }\n"}}, {"oid": "0f493e70581ec5f9230864b9e606496f26968773", "url": "https://github.com/apache/druid/commit/0f493e70581ec5f9230864b9e606496f26968773", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>", "committedDate": "2020-04-08T06:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405729389", "bodyText": "on any  exception  from the block inside while(true) { ... } would lead to event emission getting stopped. Does it make sense to have a try-catch inside there to ignore exceptions except for InterruptedException so that emitting stops only on thread interrupt which would happen when druid is shutting down.", "author": "himanshug", "createdAt": "2020-04-08T18:30:51Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "originalCommit": "0f493e70581ec5f9230864b9e606496f26968773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwMzQwMQ==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405903401", "bodyText": "@himanshug, thanks for the review. As the potential exceptions from the producer are handled in the callback, so in my opinion, currently the while(true) { ... } block is already supposed to raised the InterruptedException only.", "author": "yuanlihan", "createdAt": "2020-04-09T01:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjY0Mg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405966642", "bodyText": "sounds reasonable, however I would still make slight log messaage change just in case.", "author": "himanshug", "createdAt": "2020-04-09T05:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU2NTE3Mg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r406565172", "bodyText": "thanks @himanshug, it's more clear now.", "author": "yuanlihan", "createdAt": "2020-04-10T01:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "chunk": "diff --git a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\nindex 2965dc5e49..ceb21c3975 100644\n--- a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n+++ b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\n@@ -138,7 +138,7 @@ public class KafkaEmitter implements Emitter\n       }\n     }\n     catch (Throwable e) {\n-      log.warn(e, \"Failed to take record from queue!\");\n+      log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");\n     }\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjYyMg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405966622", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.warn(e, \"Failed to take record from queue!\");\n          \n          \n            \n                  log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");", "author": "himanshug", "createdAt": "2020-04-09T05:37:57Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "originalCommit": "0f493e70581ec5f9230864b9e606496f26968773", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "chunk": "diff --git a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\nindex 2965dc5e49..ceb21c3975 100644\n--- a/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n+++ b/extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\n@@ -138,7 +138,7 @@ public class KafkaEmitter implements Emitter\n       }\n     }\n     catch (Throwable e) {\n-      log.warn(e, \"Failed to take record from queue!\");\n+      log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");\n     }\n   }\n \n"}}, {"oid": "89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "url": "https://github.com/apache/druid/commit/89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>", "committedDate": "2020-04-10T01:39:32Z", "type": "commit"}]}