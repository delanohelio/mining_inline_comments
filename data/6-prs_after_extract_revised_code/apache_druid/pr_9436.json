{"pr_number": 9436, "pr_title": "added number of bins parameter", "pr_createdAt": "2020-02-28T20:12:48Z", "pr_url": "https://github.com/apache/druid/pull/9436", "timeline": [{"oid": "42d287b3fd8236ad234c0b29c4879ce9f1756ee9", "url": "https://github.com/apache/druid/commit/42d287b3fd8236ad234c0b29c4879ce9f1756ee9", "message": "added number of bins parameter", "committedDate": "2020-02-28T19:57:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MDEyMA==", "url": "https://github.com/apache/druid/pull/9436#discussion_r417740120", "bodyText": "Since this.numBins will be ignored if splitPoints is set, it'd be best to throw an error in the constructor if both are provided.  Could you please add one (an error message like \"Cannot accept both 'numBins' and 'splitPoints'\").", "author": "gianm", "createdAt": "2020-04-30T04:00:02Z", "path": "extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java", "diffHunk": "@@ -29,45 +29,68 @@\n import org.apache.druid.query.aggregation.PostAggregator;\n import org.apache.druid.query.cache.CacheKeyBuilder;\n \n+import javax.annotation.Nullable;\n import java.util.Arrays;\n import java.util.Comparator;\n import java.util.Map;\n import java.util.Set;\n \n public class DoublesSketchToHistogramPostAggregator implements PostAggregator\n {\n+  static final int DEFAULT_NUM_BINS = 10;\n \n   private final String name;\n   private final PostAggregator field;\n   private final double[] splitPoints;\n+  private final Integer numBins;\n \n   @JsonCreator\n   public DoublesSketchToHistogramPostAggregator(\n       @JsonProperty(\"name\") final String name,\n       @JsonProperty(\"field\") final PostAggregator field,\n-      @JsonProperty(\"splitPoints\") final double[] splitPoints)\n+      @JsonProperty(\"splitPoints\") @Nullable final double[] splitPoints,\n+      @JsonProperty(\"numBins\") @Nullable final Integer numBins)\n   {\n     this.name = Preconditions.checkNotNull(name, \"name is null\");\n     this.field = Preconditions.checkNotNull(field, \"field is null\");\n-    this.splitPoints = Preconditions.checkNotNull(splitPoints, \"array of split points is null\");\n+    this.splitPoints = splitPoints;\n+    this.numBins = numBins;\n   }\n \n   @Override\n   public Object compute(final Map<String, Object> combinedAggregators)\n   {\n     final DoublesSketch sketch = (DoublesSketch) field.compute(combinedAggregators);\n+    final int numBins = splitPoints != null ? splitPoints.length + 1 :", "originalCommit": "42d287b3fd8236ad234c0b29c4879ce9f1756ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79d9460767cefe90d1f9be50523e7165fccc6435", "chunk": "diff --git a/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java b/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\nindex 633b80c7fd..16a235c665 100644\n--- a/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\n+++ b/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\n\n@@ -55,6 +56,9 @@ public class DoublesSketchToHistogramPostAggregator implements PostAggregator\n     this.field = Preconditions.checkNotNull(field, \"field is null\");\n     this.splitPoints = splitPoints;\n     this.numBins = numBins;\n+    if (splitPoints != null && numBins != null) {\n+      throw new IAE(\"Cannot accept both 'splitPoints' and 'numBins'\");\n+    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MDYwMw==", "url": "https://github.com/apache/druid/pull/9436#discussion_r417740603", "bodyText": "Suggest doing @JsonInclude(JsonInclude.Include.NON_NULL) so the serialized form is cleaner when numBins is null.\n(It would make sense to add this to getSplitPoints too.)", "author": "gianm", "createdAt": "2020-04-30T04:02:14Z", "path": "extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java", "diffHunk": "@@ -87,6 +110,12 @@ public PostAggregator getField()\n     return splitPoints;\n   }\n \n+  @JsonProperty\n+  public Integer getNumBins()", "originalCommit": "42d287b3fd8236ad234c0b29c4879ce9f1756ee9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "79d9460767cefe90d1f9be50523e7165fccc6435", "chunk": "diff --git a/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java b/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\nindex 633b80c7fd..16a235c665 100644\n--- a/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\n+++ b/extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java\n\n@@ -105,12 +109,14 @@ public class DoublesSketchToHistogramPostAggregator implements PostAggregator\n   }\n \n   @JsonProperty\n+  @JsonInclude(JsonInclude.Include.NON_NULL)\n   public double[] getSplitPoints()\n   {\n     return splitPoints;\n   }\n \n   @JsonProperty\n+  @JsonInclude(JsonInclude.Include.NON_NULL)\n   public Integer getNumBins()\n   {\n     return numBins;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MTQ0NQ==", "url": "https://github.com/apache/druid/pull/9436#discussion_r417741445", "bodyText": "Please add an EqualsVerifier test too. We don't have them everywhere yet but we're trying to add them in patches that adjust equals or hashCode implementations. Check out InFilterTest for an example. It looks like this.\n  @Test\n  public void testEquals()\n  {\n    EqualsVerifier.forClass(InFilter.class)\n                  .usingGetClass()\n                  .withNonnullFields(\"dimension\", \"values\")\n                  .withIgnoredFields(\"longPredicateSupplier\", \"floatPredicateSupplier\", \"doublePredicateSupplier\")\n                  .verify();\n  }", "author": "gianm", "createdAt": "2020-04-30T04:05:53Z", "path": "extensions-core/datasketches/src/main/java/org/apache/druid/query/aggregation/datasketches/quantiles/DoublesSketchToHistogramPostAggregator.java", "diffHunk": "@@ -125,14 +155,26 @@ public boolean equals(final Object o)\n     if (!Arrays.equals(splitPoints, that.splitPoints)) {\n       return false;\n     }\n-    return field.equals(that.field);\n+    if (!field.equals(that.field)) {\n+      return false;\n+    }\n+    if (numBins == null && that.numBins == null) {", "originalCommit": "42d287b3fd8236ad234c0b29c4879ce9f1756ee9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4NzIxNg==", "url": "https://github.com/apache/druid/pull/9436#discussion_r419687216", "bodyText": "It seems to me that this EqualsVerifier is not visible in this branch. Perhaps it was added to some pom file later. Would you like me to merge from master or rebase?", "author": "AlexanderSaydakov", "createdAt": "2020-05-04T19:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MTQ0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NjE0Mg==", "url": "https://github.com/apache/druid/pull/9436#discussion_r419696142", "bodyText": "You might need to add this to the datasketches pom:\n    <dependency>\n      <groupId>nl.jqno.equalsverifier</groupId>\n      <artifactId>equalsverifier</artifactId>\n      <scope>test</scope>\n    </dependency>", "author": "gianm", "createdAt": "2020-05-04T20:07:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MTQ0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NjY0MQ==", "url": "https://github.com/apache/druid/pull/9436#discussion_r419696641", "bodyText": "Merging from master would be useful too if your branch is old enough that it doesn't have equalsverifier in the master pom.", "author": "gianm", "createdAt": "2020-05-04T20:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MTQ0NQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "79d9460767cefe90d1f9be50523e7165fccc6435", "url": "https://github.com/apache/druid/commit/79d9460767cefe90d1f9be50523e7165fccc6435", "message": "addressed review points", "committedDate": "2020-05-04T20:44:22Z", "type": "commit"}, {"oid": "303c8bcb726cb1b54f217ee21f56059109068311", "url": "https://github.com/apache/druid/commit/303c8bcb726cb1b54f217ee21f56059109068311", "message": "Merge branch 'master' into datasketches_histogram_num_bins", "committedDate": "2020-05-04T20:46:51Z", "type": "commit"}, {"oid": "44aed1101adb566b2cafb0b64b2fb2aba0f425fd", "url": "https://github.com/apache/druid/commit/44aed1101adb566b2cafb0b64b2fb2aba0f425fd", "message": "test equals", "committedDate": "2020-05-04T21:51:17Z", "type": "commit"}]}