{"pr_number": 10144, "pr_title": "Follow-up for RetryQueryRunner fix", "pr_createdAt": "2020-07-06T23:13:04Z", "pr_url": "https://github.com/apache/druid/pull/10144", "timeline": [{"oid": "964833e4ad61868c4253356d13ca829f74e62ecc", "url": "https://github.com/apache/druid/commit/964833e4ad61868c4253356d13ca829f74e62ecc", "message": "address comments; use guice instead of query context", "committedDate": "2020-07-06T23:07:08Z", "type": "commit"}, {"oid": "c2c929cc884191b49ee751a63de6f5ec7dd4d8b4", "url": "https://github.com/apache/druid/commit/c2c929cc884191b49ee751a63de6f5ec7dd4d8b4", "message": "typo", "committedDate": "2020-07-07T05:24:16Z", "type": "commit"}, {"oid": "2ebedc17e4f4b272dc0df958c4a3580adab47089", "url": "https://github.com/apache/druid/commit/2ebedc17e4f4b272dc0df958c4a3580adab47089", "message": "QueryResource tests", "committedDate": "2020-07-07T19:20:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MTk4OA==", "url": "https://github.com/apache/druid/pull/10144#discussion_r451171988", "bodyText": "It looks like this should work, but why not create a reasonable ResponseContextConfig and bind it directly to ResponseContextConfig.class? Seems like that would be simpler.", "author": "gianm", "createdAt": "2020-07-07T22:09:03Z", "path": "services/src/main/java/org/apache/druid/cli/CliBroker.java", "diffHunk": "@@ -102,6 +103,12 @@ public CliBroker()\n           binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(8282);\n           binder.bindConstant().annotatedWith(PruneLoadSpec.class).to(true);\n           binder.bindConstant().annotatedWith(PruneLastCompactionState.class).to(true);\n+          binder.bindConstant()", "originalCommit": "2ebedc17e4f4b272dc0df958c4a3580adab47089", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NzI4Mg==", "url": "https://github.com/apache/druid/pull/10144#discussion_r451257282", "bodyText": "Ah, there was only one constant to bind at first (shouldFailOnTruncatedResponseContext), and so I just added a constant binding. Later, to make the test coverage check happier, I added another constant maxResponseContextHeaderSize and just copy-pasted existing code \ud83d\ude05. Changed to directly bind the context class.", "author": "jihoonson", "createdAt": "2020-07-08T03:12:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3MTk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "278917c85cdcbd61a7aede7cdb66336a6d0044bf", "chunk": "diff --git a/services/src/main/java/org/apache/druid/cli/CliBroker.java b/services/src/main/java/org/apache/druid/cli/CliBroker.java\nindex f1f22e7c67..88d3ff9abb 100644\n--- a/services/src/main/java/org/apache/druid/cli/CliBroker.java\n+++ b/services/src/main/java/org/apache/druid/cli/CliBroker.java\n\n@@ -103,12 +103,7 @@ public class CliBroker extends ServerRunnable\n           binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(8282);\n           binder.bindConstant().annotatedWith(PruneLoadSpec.class).to(true);\n           binder.bindConstant().annotatedWith(PruneLastCompactionState.class).to(true);\n-          binder.bindConstant()\n-                .annotatedWith(Names.named(ResponseContextConfig.SHOUD_FAIL_ON_TRUNCATED_RESPONSE_CONTEXT_PROPERTY))\n-                .to(false);\n-          binder.bindConstant()\n-                .annotatedWith(Names.named(ResponseContextConfig.MAX_RESPONSE_CONTEXT_HEADER_SIZE))\n-                .to(ResponseContextConfig.DEFAULT_RESPONSE_CTX_HEADER_LEN_LIMIT);\n+          binder.bind(ResponseContextConfig.class).toInstance(ResponseContextConfig.newConfig(false));\n \n           binder.bind(CachingClusteredClient.class).in(LazySingleton.class);\n           LifecycleModule.register(binder, BrokerServerView.class);\n"}}, {"oid": "278917c85cdcbd61a7aede7cdb66336a6d0044bf", "url": "https://github.com/apache/druid/commit/278917c85cdcbd61a7aede7cdb66336a6d0044bf", "message": "address comments", "committedDate": "2020-07-08T03:08:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyMzU5Ng==", "url": "https://github.com/apache/druid/pull/10144#discussion_r451323596", "bodyText": "should this be any QueryException?", "author": "clintropolis", "createdAt": "2020-07-08T06:58:53Z", "path": "server/src/main/java/org/apache/druid/server/QueryResource.java", "diffHunk": "@@ -309,6 +309,11 @@ public void write(OutputStream outputStream) throws WebApplicationException\n             .header(HEADER_RESPONSE_CONTEXT, serializationResult.getResult())\n             .build();\n       }\n+      catch (QueryInterruptedException e) {", "originalCommit": "278917c85cdcbd61a7aede7cdb66336a6d0044bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fba858a92047e72a09531dac3694ecc7cf7f9ed4", "chunk": "diff --git a/server/src/main/java/org/apache/druid/server/QueryResource.java b/server/src/main/java/org/apache/druid/server/QueryResource.java\nindex 2761b84308..cb8746c2d8 100644\n--- a/server/src/main/java/org/apache/druid/server/QueryResource.java\n+++ b/server/src/main/java/org/apache/druid/server/QueryResource.java\n\n@@ -309,7 +310,7 @@ public class QueryResource implements QueryCountStatsProvider\n             .header(HEADER_RESPONSE_CONTEXT, serializationResult.getResult())\n             .build();\n       }\n-      catch (QueryInterruptedException e) {\n+      catch (QueryException e) {\n         // make sure to close yielder if anything happened before starting to serialize the response.\n         yielder.close();\n         throw e;\n"}}, {"oid": "fba858a92047e72a09531dac3694ecc7cf7f9ed4", "url": "https://github.com/apache/druid/commit/fba858a92047e72a09531dac3694ecc7cf7f9ed4", "message": "catch queryException", "committedDate": "2020-07-08T17:22:48Z", "type": "commit"}, {"oid": "4725cd535ccb95216c0c67d67d2c659dacabf2f4", "url": "https://github.com/apache/druid/commit/4725cd535ccb95216c0c67d67d2c659dacabf2f4", "message": "fix spell check", "committedDate": "2020-07-08T18:58:29Z", "type": "commit"}]}