{"pr_number": 9814, "pr_title": "add flag to flattenSpec to keep null columns", "pr_createdAt": "2020-05-03T21:17:08Z", "pr_url": "https://github.com/apache/druid/pull/9814", "timeline": [{"oid": "0b3553e27afa8e87b2edf1ae5ea1514a970bfade", "url": "https://github.com/apache/druid/commit/0b3553e27afa8e87b2edf1ae5ea1514a970bfade", "message": "add flag to flattenSpec to keep null columns", "committedDate": "2020-05-06T20:02:07Z", "type": "commit"}, {"oid": "1645ab0c1c36741100b0ee9eb09c51ee7f0f93ea", "url": "https://github.com/apache/druid/commit/1645ab0c1c36741100b0ee9eb09c51ee7f0f93ea", "message": "remove changes to inputFormat interface", "committedDate": "2020-05-06T20:02:07Z", "type": "commit"}, {"oid": "d76704bfc2d7caa851173ec5bf5b488cc4b1308c", "url": "https://github.com/apache/druid/commit/d76704bfc2d7caa851173ec5bf5b488cc4b1308c", "message": "add comment", "committedDate": "2020-05-06T20:02:07Z", "type": "commit"}, {"oid": "e1b6e974fa8e5c4ab7dd5eaae000a22ce6882b45", "url": "https://github.com/apache/druid/commit/e1b6e974fa8e5c4ab7dd5eaae000a22ce6882b45", "message": "change comment message", "committedDate": "2020-05-06T20:02:07Z", "type": "commit"}, {"oid": "a023c695adb1ea5dd3f444ac39deb0fe8b1201f0", "url": "https://github.com/apache/druid/commit/a023c695adb1ea5dd3f444ac39deb0fe8b1201f0", "message": "update web console e2e test", "committedDate": "2020-05-06T20:02:07Z", "type": "commit"}, {"oid": "b0557cebd8dfbbccfbe83a2f6d191b69adbaa047", "url": "https://github.com/apache/druid/commit/b0557cebd8dfbbccfbe83a2f6d191b69adbaa047", "message": "move keepNullColmns to JSONParseSpec", "committedDate": "2020-05-06T20:05:22Z", "type": "commit"}, {"oid": "25cb492d1bb1f0276356f455cfcb32ad0406ade7", "url": "https://github.com/apache/druid/commit/25cb492d1bb1f0276356f455cfcb32ad0406ade7", "message": "fix merge conflicts", "committedDate": "2020-05-06T20:38:20Z", "type": "commit"}, {"oid": "25cb492d1bb1f0276356f455cfcb32ad0406ade7", "url": "https://github.com/apache/druid/commit/25cb492d1bb1f0276356f455cfcb32ad0406ade7", "message": "fix merge conflicts", "committedDate": "2020-05-06T20:38:20Z", "type": "forcePushed"}, {"oid": "8420c7e95322785ab6bd42d52b6351cd73f460a1", "url": "https://github.com/apache/druid/commit/8420c7e95322785ab6bd42d52b6351cd73f460a1", "message": "fix tests", "committedDate": "2020-05-06T21:42:06Z", "type": "commit"}, {"oid": "6f830b796e2df03a730ffc2b057749a931547439", "url": "https://github.com/apache/druid/commit/6f830b796e2df03a730ffc2b057749a931547439", "message": "set keepNullColumns to false by default", "committedDate": "2020-05-06T22:52:38Z", "type": "commit"}, {"oid": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "url": "https://github.com/apache/druid/commit/0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "message": "fix lgtm", "committedDate": "2020-05-07T00:05:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5NzU4Mw==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421697583", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final Boolean keepNullColumns;\n          \n          \n            \n              private final boolean keepNullColumns;\n          \n      \n    \n    \n  \n\nThis way the class does not need to worry about nullability issues everywhere, it can just be handled in the constructor.", "author": "suneet-s", "createdAt": "2020-05-07T18:10:59Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java", "diffHunk": "@@ -37,46 +37,48 @@\n {\n   private final ObjectMapper objectMapper;\n   private final Map<String, Boolean> featureSpec;\n+  private final Boolean keepNullColumns;", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "chunk": "diff --git a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\nindex a8ef805a1d..46820e176d 100644\n--- a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n+++ b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n\n@@ -37,7 +37,7 @@ public class JSONParseSpec extends NestedDataParseSpec<JSONPathSpec>\n {\n   private final ObjectMapper objectMapper;\n   private final Map<String, Boolean> featureSpec;\n-  private final Boolean keepNullColumns;\n+  private final boolean keepNullColumns;\n \n   @JsonCreator\n   public JSONParseSpec(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5ODQ5NQ==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421698495", "bodyText": "Missing corresponding update to hashCode. Can you add an EqualsVerifier test for this class please.", "author": "suneet-s", "createdAt": "2020-05-07T18:12:33Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java", "diffHunk": "@@ -98,7 +106,7 @@ public boolean equals(final Object o)\n       return false;\n     }\n     final JSONParseSpec that = (JSONParseSpec) o;\n-    return Objects.equals(featureSpec, that.featureSpec);\n+    return Objects.equals(featureSpec, that.featureSpec) && Objects.equals(keepNullColumns, that.keepNullColumns);", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "chunk": "diff --git a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\nindex a8ef805a1d..46820e176d 100644\n--- a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n+++ b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n\n@@ -112,7 +112,7 @@ public class JSONParseSpec extends NestedDataParseSpec<JSONPathSpec>\n   @Override\n   public int hashCode()\n   {\n-    return Objects.hash(super.hashCode(), featureSpec);\n+    return Objects.hash(super.hashCode(), featureSpec, getKeepNullColumns());\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgxODQxMw==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421818413", "bodyText": "Can be boolean here too.", "author": "jihoonson", "createdAt": "2020-05-07T21:56:53Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java", "diffHunk": "@@ -85,6 +87,12 @@ public ParseSpec withDimensionsSpec(DimensionsSpec spec)\n     return featureSpec;\n   }\n \n+  @JsonProperty\n+  public Boolean getKeepNullColumns()", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "chunk": "diff --git a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\nindex a8ef805a1d..46820e176d 100644\n--- a/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n+++ b/core/src/main/java/org/apache/druid/data/input/impl/JSONParseSpec.java\n\n@@ -88,7 +88,7 @@ public class JSONParseSpec extends NestedDataParseSpec<JSONPathSpec>\n   }\n \n   @JsonProperty\n-  public Boolean getKeepNullColumns()\n+  public boolean getKeepNullColumns()\n   {\n     return keepNullColumns;\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY5ODk0Nw==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421698947", "bodyText": "Same comments in this file as JsonParseSpec", "author": "suneet-s", "createdAt": "2020-05-07T18:13:24Z", "path": "core/src/main/java/org/apache/druid/data/input/impl/JsonInputFormat.java", "diffHunk": "@@ -39,16 +39,19 @@\n {\n   private final Map<String, Boolean> featureSpec;\n   private final ObjectMapper objectMapper;\n+  private final boolean keepNullColumns;", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg3OTA0MQ==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421879041", "bodyText": "nit: it would be easier to read if you made false a constant at the top of this test, like DO_NOT_KEEP_NULL_COLUMNS", "author": "suneet-s", "createdAt": "2020-05-08T01:05:03Z", "path": "core/src/test/java/org/apache/druid/data/input/impl/InputRowParserSerdeTest.java", "diffHunk": "@@ -52,7 +52,8 @@ public void testStringInputRowParserSerde() throws Exception\n             new TimestampSpec(\"timestamp\", \"iso\", null),\n             new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"foo\", \"bar\")), null, null),\n             null,\n-            null\n+            null,\n+            false", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "chunk": "diff --git a/core/src/test/java/org/apache/druid/data/input/impl/InputRowParserSerdeTest.java b/core/src/test/java/org/apache/druid/data/input/impl/InputRowParserSerdeTest.java\nindex 8c3d350347..bd46eb275b 100644\n--- a/core/src/test/java/org/apache/druid/data/input/impl/InputRowParserSerdeTest.java\n+++ b/core/src/test/java/org/apache/druid/data/input/impl/InputRowParserSerdeTest.java\n\n@@ -53,7 +53,7 @@ public class InputRowParserSerdeTest\n             new DimensionsSpec(DimensionsSpec.getDefaultSchemas(ImmutableList.of(\"foo\", \"bar\")), null, null),\n             null,\n             null,\n-            false\n+            null\n         ),\n         null\n     );\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4MDAyOA==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421880028", "bodyText": "Is there a test where keepNull is true, but there aren't any null columns?", "author": "suneet-s", "createdAt": "2020-05-08T01:08:35Z", "path": "core/src/test/java/org/apache/druid/data/input/impl/JsonReaderTest.java", "diffHunk": "@@ -132,4 +135,46 @@ public void testParseRowWithConditional() throws IOException\n       Assert.assertEquals(numExpectedIterations, numActualIterations);\n     }\n   }\n+\n+  @Test\n+  public void testParseRowKeepNullColumns() throws IOException\n+  {\n+    final JsonInputFormat format = new JsonInputFormat(\n+        new JSONPathSpec(\n+            true,\n+            ImmutableList.of(\n+                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"path_omg\", \"$.o.mg\")\n+            )\n+        ),\n+        null,\n+        true\n+    );\n+\n+    final ByteEntity source = new ByteEntity(\n+        StringUtils.toUtf8(\"{\\\"timestamp\\\":\\\"2019-01-01\\\",\\\"bar\\\":null,\\\"foo\\\":\\\"x\\\",\\\"o\\\":{\\\"mg\\\":null}}\")", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "chunk": "diff --git a/core/src/test/java/org/apache/druid/data/input/impl/JsonReaderTest.java b/core/src/test/java/org/apache/druid/data/input/impl/JsonReaderTest.java\nindex aaf6738444..a0c1955784 100644\n--- a/core/src/test/java/org/apache/druid/data/input/impl/JsonReaderTest.java\n+++ b/core/src/test/java/org/apache/druid/data/input/impl/JsonReaderTest.java\n\n@@ -177,4 +177,88 @@ public class JsonReaderTest\n       Assert.assertEquals(numExpectedIterations, numActualIterations);\n     }\n   }\n+\n+  @Test\n+  public void testKeepNullColumnsWithNoNullValues() throws IOException\n+  {\n+    final JsonInputFormat format = new JsonInputFormat(\n+        new JSONPathSpec(\n+            true,\n+            ImmutableList.of(\n+                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"path_omg\", \"$.o.mg\")\n+            )\n+        ),\n+        null,\n+        true\n+    );\n+\n+    final ByteEntity source = new ByteEntity(\n+        StringUtils.toUtf8(\"{\\\"timestamp\\\":\\\"2019-01-01\\\",\\\"bar\\\":1,\\\"foo\\\":\\\"x\\\",\\\"o\\\":{\\\"mg\\\":\\\"a\\\"}}\")\n+    );\n+\n+    final InputEntityReader reader = format.createReader(\n+        new InputRowSchema(\n+            new TimestampSpec(\"timestamp\", \"iso\", null),\n+            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.emptyList())),\n+            Collections.emptyList()\n+        ),\n+        source,\n+        null\n+    );\n+    final int numExpectedIterations = 1;\n+    try (CloseableIterator<InputRow> iterator = reader.read()) {\n+      int numActualIterations = 0;\n+      while (iterator.hasNext()) {\n+        final InputRow row = iterator.next();\n+        Assert.assertEquals(Arrays.asList(\"path_omg\", \"timestamp\", \"bar\", \"foo\"), row.getDimensions());\n+        Assert.assertEquals(\"1\", Iterables.getOnlyElement(row.getDimension(\"bar\")));\n+        Assert.assertEquals(\"x\", Iterables.getOnlyElement(row.getDimension(\"foo\")));\n+        Assert.assertEquals(\"a\", Iterables.getOnlyElement(row.getDimension(\"path_omg\")));\n+        numActualIterations++;\n+      }\n+      Assert.assertEquals(numExpectedIterations, numActualIterations);\n+    }\n+  }\n+\n+  @Test\n+  public void testFalseKeepNullColumns() throws IOException\n+  {\n+    final JsonInputFormat format = new JsonInputFormat(\n+        new JSONPathSpec(\n+            true,\n+            ImmutableList.of(\n+                new JSONPathFieldSpec(JSONPathFieldType.PATH, \"path_omg\", \"$.o.mg\")\n+            )\n+        ),\n+        null,\n+        false\n+    );\n+\n+    final ByteEntity source = new ByteEntity(\n+        StringUtils.toUtf8(\"{\\\"timestamp\\\":\\\"2019-01-01\\\",\\\"bar\\\":null,\\\"foo\\\":\\\"x\\\",\\\"o\\\":{\\\"mg\\\":\\\"a\\\"}}\")\n+    );\n+\n+    final InputEntityReader reader = format.createReader(\n+        new InputRowSchema(\n+            new TimestampSpec(\"timestamp\", \"iso\", null),\n+            new DimensionsSpec(DimensionsSpec.getDefaultSchemas(Collections.emptyList())),\n+            Collections.emptyList()\n+        ),\n+        source,\n+        null\n+    );\n+    final int numExpectedIterations = 1;\n+    try (CloseableIterator<InputRow> iterator = reader.read()) {\n+      int numActualIterations = 0;\n+      while (iterator.hasNext()) {\n+        final InputRow row = iterator.next();\n+        Assert.assertEquals(Arrays.asList(\"path_omg\", \"timestamp\", \"foo\"), row.getDimensions());\n+        Assert.assertTrue(row.getDimension(\"bar\").isEmpty());\n+        Assert.assertEquals(\"x\", Iterables.getOnlyElement(row.getDimension(\"foo\")));\n+        Assert.assertEquals(\"a\", Iterables.getOnlyElement(row.getDimension(\"path_omg\")));\n+        numActualIterations++;\n+      }\n+      Assert.assertEquals(numExpectedIterations, numActualIterations);\n+    }\n+  }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4MDk4OQ==", "url": "https://github.com/apache/druid/pull/9814#discussion_r421880989", "bodyText": "WOW - I didn't realize we used so many constructors! Maybe one day, I'll get around to using mockito to make this refactoring less painful in the future.", "author": "suneet-s", "createdAt": "2020-05-08T01:11:51Z", "path": "server/src/test/java/org/apache/druid/segment/realtime/plumber/RealtimePlumberSchoolTest.java", "diffHunk": "@@ -161,6 +162,7 @@ public void setUp() throws Exception\n                     new TimestampSpec(\"timestamp\", \"auto\", null),\n                     new DimensionsSpec(null, null, null),\n                     null,\n+                    null,", "originalCommit": "0bbc518f39263cd24653ec5a5c2470cefd4ff8d4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "6bb036d4091b9a677c592dd9be5258a98eb50a7e", "url": "https://github.com/apache/druid/commit/6bb036d4091b9a677c592dd9be5258a98eb50a7e", "message": "change Boolean to boolean, add keepNullColumns to hash, add tests for keepKeepNullColumns false + true with no nuulul columns", "committedDate": "2020-05-08T06:50:39Z", "type": "commit"}, {"oid": "aea0c46ef6bc2358e55f65ffc2f9f93da7ecbf31", "url": "https://github.com/apache/druid/commit/aea0c46ef6bc2358e55f65ffc2f9f93da7ecbf31", "message": "Add equals verifier tests", "committedDate": "2020-05-08T16:26:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NDUwMw==", "url": "https://github.com/apache/druid/pull/9814#discussion_r422264503", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                           // If the keepNullValues is set on the JSONParseSpec then null values should not be filtered out\n          \n          \n            \n                                           // Root fields are any keys whose values are not one of\n          \n          \n            \n                                           // 1. an object\n          \n          \n            \n                                           // 2. null values and the spec asks to not preserve null values\n          \n          \n            \n                                           // 3. a non flat list json array\n          \n      \n    \n    \n  \n\nI meant something like spelling out how we discover root fields. There are a bunch of nots and ands and ors that I can't come up with a statement that clearly defines what this is trying to do.\nThis really isn't part of your change, but if you figured out what this is actually doing, you'll help all future devs with a comment", "author": "suneet-s", "createdAt": "2020-05-08T17:15:59Z", "path": "core/src/main/java/org/apache/druid/java/util/common/parsers/JSONFlattenerMaker.java", "diffHunk": "@@ -53,16 +53,24 @@\n                    .options(EnumSet.of(Option.SUPPRESS_EXCEPTIONS))\n                    .build();\n \n+  private final boolean keepNullValues;\n+\n   private final CharsetEncoder enc = StandardCharsets.UTF_8.newEncoder();\n \n+  public JSONFlattenerMaker(boolean keepNullValues)\n+  {\n+    this.keepNullValues = keepNullValues;\n+  }\n+\n   @Override\n   public Iterable<String> discoverRootFields(final JsonNode obj)\n   {\n     return FluentIterable.from(() -> obj.fields())\n                          .filter(\n                              entry -> {\n                                final JsonNode val = entry.getValue();\n-                               return !(val.isObject() || val.isNull() || (val.isArray() && !isFlatList(val)));\n+                               // If the keepNullValues is set on the JSONParseSpec then null values should not be filtered out", "originalCommit": "aea0c46ef6bc2358e55f65ffc2f9f93da7ecbf31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5NTQzOA==", "url": "https://github.com/apache/druid/pull/9814#discussion_r422395438", "bodyText": "This is defined in the contract of FlattenerMaker.discoverRootFields(). Maybe the javadoc of this method could say {@inheritDoc} instead of having a duplicate description. I think this is optional.", "author": "jihoonson", "createdAt": "2020-05-08T21:59:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NDUwMw=="}], "type": "inlineReview", "revised_code": null}]}