{"pr_number": 9858, "pr_title": "druid.storage.maxListingLength should default to 1000 for s3", "pr_createdAt": "2020-05-12T18:41:11Z", "pr_url": "https://github.com/apache/druid/pull/9858", "timeline": [{"oid": "731c4369b7697b150f259045ff42ffc703f7ef8b", "url": "https://github.com/apache/druid/commit/731c4369b7697b150f259045ff42ffc703f7ef8b", "message": "druid.storage.maxListingLength should default to 1000 for s3", "committedDate": "2020-05-12T18:36:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4MDM5NQ==", "url": "https://github.com/apache/druid/pull/9858#discussion_r423980395", "bodyText": "Are there any tests that verify the default / min and max ?\nAlso how is the setter used below? it doesn't look like it checks that the passed in maxListingLength is within the provided bounds.\nIt would be good if you linked to the AWS documentation that lists the max as 1000 so we can update it in the future if that changes", "author": "suneet-s", "createdAt": "2020-05-12T19:28:53Z", "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -35,7 +36,8 @@\n    */\n   @JsonProperty\n   @Min(1)\n-  private int maxListingLength = 1024;\n+  @Max(1000)\n+  private int maxListingLength = 1000;", "originalCommit": "731c4369b7697b150f259045ff42ffc703f7ef8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2NDI5OA==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424064298", "bodyText": "Addressed. Good suggestion.", "author": "zachjsh", "createdAt": "2020-05-12T22:13:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4MDM5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "489195b0156648b08ab07e9e86f96f3ee503b8f2", "chunk": "diff --git a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\nindex c704d8c642..c5f04c13be 100644\n--- a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n+++ b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n\n@@ -30,17 +32,33 @@ import javax.validation.constraints.Min;\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/DeleteObjectsRequest.html\n+   */\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MAX = 1000;\n+\n   /**\n    * The maximum number of input files matching a given prefix to retrieve\n-   * from Amazon S3 at a time.\n+   * or delete Amazon S3 at a time.\n    */\n   @JsonProperty\n-  @Min(1)\n-  @Max(1000)\n-  private int maxListingLength = 1000;\n+  @Min(MAX_LISTING_LENGTH_MIN)\n+  @Max(MAX_LISTING_LENGTH_MAX)\n+  private int maxListingLength = MAX_LISTING_LENGTH_MAX;\n \n+  @VisibleForTesting\n   public void setMaxListingLength(int maxListingLength)\n   {\n+    if (maxListingLength < MAX_LISTING_LENGTH_MIN || maxListingLength > MAX_LISTING_LENGTH_MAX) {\n+      throw new IAE(\"valid values for maxListingLength are between [%d, %d]\", MAX_LISTING_LENGTH_MIN,\n+                    MAX_LISTING_LENGTH_MAX\n+      );\n+    }\n     this.maxListingLength = maxListingLength;\n   }\n \n"}}, {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2", "url": "https://github.com/apache/druid/commit/489195b0156648b08ab07e9e86f96f3ee503b8f2", "message": "* Address review comments", "committedDate": "2020-05-12T22:11:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424571184", "bodyText": "Does this only affect deleting objects? If the API allows you to list more than 1000 objects, I think a better fix would be in S3Utils#deleteObjectsInPath to check if keysToDelete.size() >= Math.min(1000, config.getMaxListingLength())\nYou could even extract Math.min(1000, config.getMaxListingLength()) to a JsonIgnore function in this config file. This way there's a clear distinction between listing many files and the number of files you're allowed to delete in a single request", "author": "suneet-s", "createdAt": "2020-05-13T16:27:09Z", "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -29,16 +32,33 @@\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/DeleteObjectsRequest.html", "originalCommit": "489195b0156648b08ab07e9e86f96f3ee503b8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5NzQ4MA==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424797480", "bodyText": "It's not super clear whether or not list objects API is limited on the server side to a max of 1000, From https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html#API_ListObjects_RequestSyntax\n\nSets the maximum number of keys returned in the response. By default the API returns up to 1,000 key names. The response might contain fewer keys but will never contain more.", "author": "clintropolis", "createdAt": "2020-05-14T00:00:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwMDk3Mg==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424800972", "bodyText": "Yeah I think we should leave both listing and deleting to max of 1000 keys. I can add the link to this documentation in the javadocs as well. Let me know if this sounds reasonable to you.", "author": "zachjsh", "createdAt": "2020-05-14T00:12:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyOTI2MA==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424829260", "bodyText": "This seems ok to me, 1k is probably enough to list even if it isn't the true maximum limit the API can handle.", "author": "clintropolis", "createdAt": "2020-05-14T02:02:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA=="}], "type": "inlineReview", "revised_code": {"commit": "4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "chunk": "diff --git a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\nindex c5f04c13be..2d2e788763 100644\n--- a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n+++ b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n\n@@ -36,8 +36,9 @@ public class S3InputDataConfig\n   static final int MAX_LISTING_LENGTH_MIN = 1;\n \n   /**\n-   * AWS S3 only allows deleting 1000 elements at a time:\n-   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/DeleteObjectsRequest.html\n+   * AWS S3 only allows listing and deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html#API_ListObjects_RequestSyntax\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjects.html#API_DeleteObjects_RequestSyntax\n    */\n   @VisibleForTesting\n   static final int MAX_LISTING_LENGTH_MAX = 1000;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyOTgyNQ==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424829825", "bodyText": "super nit: since each of these variables is only used once and tied to a specific test, maybe this would be slightly clearer what is going on here to instead make a static function that wraps the StringUtils.format and just call it inline for all of the tests.", "author": "clintropolis", "createdAt": "2020-05-14T02:04:43Z", "path": "extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.storage.s3;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.druid.java.util.common.IAE;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class S3InputDataConfigTest\n+{\n+  private static final int MAX_LISTING_LENGTH_TOO_LOW = S3InputDataConfig.MAX_LISTING_LENGTH_MIN - 1;\n+  private static final int MAX_LISTING_LENGTH_TOO_HIGH = S3InputDataConfig.MAX_LISTING_LENGTH_MAX + 1;\n+  private static final String INPUT_DATA_TEMPLATE_JSON_STR =\n+      \"{\\n\"\n+      + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n+      + \"}\";\n+  private static final String INPUT_DATA_MAX_LISTING_LENGTH_TOO_LOW_JSON_STR =", "originalCommit": "489195b0156648b08ab07e9e86f96f3ee503b8f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzNDA4Nw==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424834087", "bodyText": "Fixed", "author": "zachjsh", "createdAt": "2020-05-14T02:21:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyOTgyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "chunk": "diff --git a/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java b/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\nindex 2357e1d9aa..04dde6d580 100644\n--- a/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\n+++ b/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\n\n@@ -34,17 +34,6 @@ public class S3InputDataConfigTest\n       \"{\\n\"\n       + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n       + \"}\";\n-  private static final String INPUT_DATA_MAX_LISTING_LENGTH_TOO_LOW_JSON_STR =\n-      StringUtils.format(INPUT_DATA_TEMPLATE_JSON_STR, MAX_LISTING_LENGTH_TOO_LOW);\n-\n-  private static final String INPUT_DATA_MAX_LISTING_LENGTH_TOO_HIGH_JSON_STR =\n-      StringUtils.format(INPUT_DATA_TEMPLATE_JSON_STR, MAX_LISTING_LENGTH_TOO_HIGH);\n-\n-  private static final String INPUT_DATA_MAX_LISTING_LENGTH_MIN_JSON_STR =\n-      StringUtils.format(INPUT_DATA_TEMPLATE_JSON_STR, S3InputDataConfig.MAX_LISTING_LENGTH_MIN);\n-\n-  private static final String INPUT_DATA_MAX_LISTING_LENGTH_MAX_JSON_STR =\n-      StringUtils.format(INPUT_DATA_TEMPLATE_JSON_STR, S3InputDataConfig.MAX_LISTING_LENGTH_MAX);\n \n   public static final ObjectMapper JSON_MAPPER = new ObjectMapper();\n   private S3InputDataConfig inputDataConfig;\n"}}, {"oid": "4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "url": "https://github.com/apache/druid/commit/4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "message": "* Address review comments", "committedDate": "2020-05-14T02:20:20Z", "type": "commit"}, {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "url": "https://github.com/apache/druid/commit/572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "message": "Merge remote-tracking branch 'origin/master' into max_listing_default", "committedDate": "2020-05-14T02:20:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4ODAxNQ==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424888015", "bodyText": "nit : \"or delete from Amazon S3\"", "author": "surekhasaharan", "createdAt": "2020-05-14T05:59:57Z", "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -29,16 +32,34 @@\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows listing and deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html#API_ListObjects_RequestSyntax\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjects.html#API_DeleteObjects_RequestSyntax\n+   */\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MAX = 1000;\n+\n   /**\n    * The maximum number of input files matching a given prefix to retrieve\n-   * from Amazon S3 at a time.\n+   * or delete Amazon S3 at a time.", "originalCommit": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTc2Mg==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424939762", "bodyText": "fixed", "author": "zachjsh", "createdAt": "2020-05-14T07:54:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4ODAxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3de0eb190fe83dc12179481792862d9af7529404", "chunk": "diff --git a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\nindex 2d2e788763..7847ceb86f 100644\n--- a/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n+++ b/extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java\n\n@@ -45,7 +45,7 @@ public class S3InputDataConfig\n \n   /**\n    * The maximum number of input files matching a given prefix to retrieve\n-   * or delete Amazon S3 at a time.\n+   * or delete from Amazon S3 at a time.\n    */\n   @JsonProperty\n   @Min(MAX_LISTING_LENGTH_MIN)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5MTA0Nw==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424891047", "bodyText": "JSON_MAPPER can be private as well", "author": "surekhasaharan", "createdAt": "2020-05-14T06:09:23Z", "path": "extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.storage.s3;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.druid.java.util.common.IAE;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class S3InputDataConfigTest\n+{\n+  private static final int MAX_LISTING_LENGTH_TOO_LOW = S3InputDataConfig.MAX_LISTING_LENGTH_MIN - 1;\n+  private static final int MAX_LISTING_LENGTH_TOO_HIGH = S3InputDataConfig.MAX_LISTING_LENGTH_MAX + 1;\n+  private static final String INPUT_DATA_TEMPLATE_JSON_STR =\n+      \"{\\n\"\n+      + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n+      + \"}\";\n+\n+  public static final ObjectMapper JSON_MAPPER = new ObjectMapper();", "originalCommit": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTcxOA==", "url": "https://github.com/apache/druid/pull/9858#discussion_r424939718", "bodyText": "fixed", "author": "zachjsh", "createdAt": "2020-05-14T07:54:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5MTA0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3de0eb190fe83dc12179481792862d9af7529404", "chunk": "diff --git a/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java b/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\nindex 04dde6d580..ab6185cd4c 100644\n--- a/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\n+++ b/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java\n\n@@ -35,7 +35,7 @@ public class S3InputDataConfigTest\n       + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n       + \"}\";\n \n-  public static final ObjectMapper JSON_MAPPER = new ObjectMapper();\n+  private static final ObjectMapper JSON_MAPPER = new ObjectMapper();\n   private S3InputDataConfig inputDataConfig;\n \n   @Test\n"}}, {"oid": "3de0eb190fe83dc12179481792862d9af7529404", "url": "https://github.com/apache/druid/commit/3de0eb190fe83dc12179481792862d9af7529404", "message": "* Address comments", "committedDate": "2020-05-14T07:54:08Z", "type": "commit"}]}