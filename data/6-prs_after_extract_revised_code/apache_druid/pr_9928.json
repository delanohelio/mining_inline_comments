{"pr_number": 9928, "pr_title": "Fix various processing buffer leaks and simplify BlockingPool.", "pr_createdAt": "2020-05-26T19:01:06Z", "pr_url": "https://github.com/apache/druid/pull/9928", "timeline": [{"oid": "5d876365a8f83f3522eca6df3c97116fc9a1b168", "url": "https://github.com/apache/druid/commit/5d876365a8f83f3522eca6df3c97116fc9a1b168", "message": "- GroupByQueryEngineV2: Fix leak of intermediate processing buffer when\n  exceptions are thrown before result sequence is created.\n- PooledTopNAlgorithm: Fix leak of intermediate processing buffer when\n  exceptions are thrown before the PooledTopNParams object is created.\n- BlockingPool: Remove unused \"take\" methods.", "committedDate": "2020-05-26T18:59:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgwNjUxNQ==", "url": "https://github.com/apache/druid/pull/9928#discussion_r430806515", "bodyText": "What line can throw an exception? Or is this more like to be safer?", "author": "jihoonson", "createdAt": "2020-05-27T01:31:52Z", "path": "processing/src/main/java/org/apache/druid/query/topn/PooledTopNAlgorithm.java", "diffHunk": "@@ -243,27 +240,38 @@ public PooledTopNParams makeInitParams(ColumnSelectorPlus selectorPlus, Cursor c\n       }\n     };\n \n-    final int numBytesToWorkWith = resultsBuf.remaining();\n-    final int[] aggregatorSizes = new int[query.getAggregatorSpecs().size()];\n-    int numBytesPerRecord = 0;\n+    final ResourceHolder<ByteBuffer> resultsBufHolder = bufferPool.take();\n \n-    for (int i = 0; i < query.getAggregatorSpecs().size(); ++i) {\n-      aggregatorSizes[i] = query.getAggregatorSpecs().get(i).getMaxIntermediateSizeWithNulls();\n-      numBytesPerRecord += aggregatorSizes[i];\n-    }\n+    try {\n+      final ByteBuffer resultsBuf = resultsBufHolder.get();\n+      resultsBuf.clear();\n+\n+      final int numBytesToWorkWith = resultsBuf.remaining();\n+      final int[] aggregatorSizes = new int[query.getAggregatorSpecs().size()];\n+      int numBytesPerRecord = 0;\n \n-    final int numValuesPerPass = numBytesPerRecord > 0 ? numBytesToWorkWith / numBytesPerRecord : cardinality;\n-\n-    return PooledTopNParams.builder()\n-                           .withSelectorPlus(selectorPlus)\n-                           .withCursor(cursor)\n-                           .withResultsBufHolder(resultsBufHolder)\n-                           .withResultsBuf(resultsBuf)\n-                           .withArrayProvider(arrayProvider)\n-                           .withNumBytesPerRecord(numBytesPerRecord)\n-                           .withNumValuesPerPass(numValuesPerPass)\n-                           .withAggregatorSizes(aggregatorSizes)\n-                           .build();\n+      for (int i = 0; i < query.getAggregatorSpecs().size(); ++i) {\n+        aggregatorSizes[i] = query.getAggregatorSpecs().get(i).getMaxIntermediateSizeWithNulls();\n+        numBytesPerRecord += aggregatorSizes[i];\n+      }\n+\n+      final int numValuesPerPass = numBytesPerRecord > 0 ? numBytesToWorkWith / numBytesPerRecord : cardinality;", "originalCommit": "5d876365a8f83f3522eca6df3c97116fc9a1b168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1MzcwOQ==", "url": "https://github.com/apache/druid/pull/9928#discussion_r430853709", "bodyText": "It's mostly for good practice (when you get a buffer, you better make sure you either free it or pass it along to someone that will free it). I don't think any lines here are very likely to throw exceptions. However, it is possible. I think the most likely is this one:\n         aggregatorSizes[i] = query.getAggregatorSpecs().get(i).getMaxIntermediateSizeWithNulls();\nAn aggregator could potentially throw an exception from that method for some reason (maybe illegal state, or something). It isn't in the control of the query engine. However, I don't have any examples of where this can actually happen.", "author": "gianm", "createdAt": "2020-05-27T04:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgwNjUxNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "870c9215452460b83d10077719aa8dde5c83289b", "url": "https://github.com/apache/druid/commit/870c9215452460b83d10077719aa8dde5c83289b", "message": "Merge branch 'master' into fix-buffer-leaks", "committedDate": "2020-06-02T02:23:23Z", "type": "commit"}, {"oid": "2653d2adedb88446611dee9a8c4bccbbb5c21688", "url": "https://github.com/apache/druid/commit/2653d2adedb88446611dee9a8c4bccbbb5c21688", "message": "Add tests to verify that buffers have been returned.", "committedDate": "2020-06-02T02:46:47Z", "type": "commit"}]}