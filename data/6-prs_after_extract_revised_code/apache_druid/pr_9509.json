{"pr_number": 9509, "pr_title": "add kinesis lag metric", "pr_createdAt": "2020-03-12T10:07:10Z", "pr_url": "https://github.com/apache/druid/pull/9509", "timeline": [{"oid": "101c2b3728379332d25e4cda356c1fac984b5e74", "url": "https://github.com/apache/druid/commit/101c2b3728379332d25e4cda356c1fac984b5e74", "message": "add kinesis lag metric", "committedDate": "2020-03-12T09:51:35Z", "type": "commit"}, {"oid": "646a70bb81cf173efc6198d278febf45dcc0051f", "url": "https://github.com/apache/druid/commit/646a70bb81cf173efc6198d278febf45dcc0051f", "message": "fixes", "committedDate": "2020-03-12T11:40:13Z", "type": "commit"}, {"oid": "ac70fc3abc5c54b634f0410eff082b9089d77a64", "url": "https://github.com/apache/druid/commit/ac70fc3abc5c54b634f0410eff082b9089d77a64", "message": "heh", "committedDate": "2020-03-12T22:47:07Z", "type": "commit"}, {"oid": "19a8904993e677ac521eeda0c37a30bfd4dd30b1", "url": "https://github.com/apache/druid/commit/19a8904993e677ac521eeda0c37a30bfd4dd30b1", "message": "Merge remote-tracking branch 'upstream/master' into kinesis-lag-metric", "committedDate": "2020-03-16T10:49:37Z", "type": "commit"}, {"oid": "e529f2c0a8083cfeba9e12321182b7967d89383b", "url": "https://github.com/apache/druid/commit/e529f2c0a8083cfeba9e12321182b7967d89383b", "message": "do it right this time", "committedDate": "2020-03-17T01:17:32Z", "type": "commit"}, {"oid": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a", "url": "https://github.com/apache/druid/commit/7d116d5fee9a16a6bf02744102b8251f0cefbc1a", "message": "more test", "committedDate": "2020-03-17T01:26:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwODgwNA==", "url": "https://github.com/apache/druid/pull/9509#discussion_r393408804", "bodyText": "The number of partitions can be on the order of hundreds, would it make sense to avoid streams here for performance (I remember various issues in the past around stream perf)", "author": "jon-wei", "createdAt": "2020-03-17T02:20:25Z", "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "diffHunk": "@@ -637,6 +688,25 @@ public void close()\n     this.closed = true;\n   }\n \n+  @VisibleForTesting\n+  public Map<String, Long> getPartitionTimeLag()\n+  {\n+    return partitionResources.entrySet()\n+                             .stream()\n+                             .collect(\n+                                 Collectors.toMap(k -> k.getKey().getPartitionId(), k -> k.getValue().getPartitionTimeLag())\n+                             );\n+  }\n+\n+  public Map<String, Long> getPartitionTimeLag(Map<String, String> currentOffsets)\n+  {\n+    return partitionResources.entrySet()", "originalCommit": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f25f41da70e98f72fa09e7d273231489f08e7fbd", "chunk": "diff --git a/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java b/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\nindex f445532286..e7ec59a734 100644\n--- a/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\n+++ b/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\n\n@@ -688,8 +689,9 @@ public class KinesisRecordSupplier implements RecordSupplier<String, String>\n     this.closed = true;\n   }\n \n+  // this is only used for tests\n   @VisibleForTesting\n-  public Map<String, Long> getPartitionTimeLag()\n+  Map<String, Long> getPartitionTimeLag()\n   {\n     return partitionResources.entrySet()\n                              .stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwOTg5MQ==", "url": "https://github.com/apache/druid/pull/9509#discussion_r393409891", "bodyText": "'lag'of -> 'lag' of", "author": "jon-wei", "createdAt": "2020-03-17T02:25:01Z", "path": "indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java", "diffHunk": "@@ -3158,18 +3167,35 @@ protected abstract void updateLatestSequenceFromStream(\n       Set<StreamPartition<PartitionIdType>> partitions\n   );\n \n+  /**\n+   * Gets 'lag' of currently processed offset behind latest offset as a measure of difference between offsets.\n+   */\n+  @Nullable\n+  protected abstract Map<PartitionIdType, Long> getPartitionRecordLag();\n+\n+  /**\n+   * Gets 'lag'of currently processed offset behind latest offset as a measure of the difference in time inserted.", "originalCommit": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f25f41da70e98f72fa09e7d273231489f08e7fbd", "chunk": "diff --git a/indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java b/indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java\nindex 4502c65219..948b687ea5 100644\n--- a/indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java\n+++ b/indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java\n\n@@ -3174,14 +3174,14 @@ public abstract class SeekableStreamSupervisor<PartitionIdType, SequenceOffsetTy\n   protected abstract Map<PartitionIdType, Long> getPartitionRecordLag();\n \n   /**\n-   * Gets 'lag'of currently processed offset behind latest offset as a measure of the difference in time inserted.\n+   * Gets 'lag' of currently processed offset behind latest offset as a measure of the difference in time inserted.\n    */\n   @Nullable\n   protected abstract Map<PartitionIdType, Long> getPartitionTimeLag();\n \n   protected Map<PartitionIdType, SequenceOffsetType> getHighestCurrentOffsets()\n   {\n-    if (!spec.isSuspended() || (activelyReadingTaskGroups.size() > 0 || pendingCompletionTaskGroups.size() > 0)) {\n+    if (!spec.isSuspended() || activelyReadingTaskGroups.size() > 0 || pendingCompletionTaskGroups.size() > 0) {\n       return activelyReadingTaskGroups\n           .values()\n           .stream()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMjM5OQ==", "url": "https://github.com/apache/druid/pull/9509#discussion_r393412399", "bodyText": "behing -> behind", "author": "jon-wei", "createdAt": "2020-03-17T02:35:19Z", "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "diffHunk": "@@ -148,6 +149,53 @@ void stopBackgroundFetch()\n       stopRequested = true;\n     }\n \n+    long getPartitionTimeLag()\n+    {\n+      return currentLagMillis;\n+    }\n+\n+    long getPartitionTimeLag(String offset)\n+    {\n+      // if not started (fetching records in background), fetch lag ourself with a throw-away iterator\n+      if (!started) {\n+        try {\n+          final String iteratorType;\n+          final String offsetToUse;\n+          if (offset == null || KinesisSupervisor.NOT_SET.equals(offset)) {\n+            // this should probably check if will start processing earliest or latest rather than assuming earliest\n+            // if latest we could skip this because latest will not be behing latest so lag is 0.", "originalCommit": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f25f41da70e98f72fa09e7d273231489f08e7fbd", "chunk": "diff --git a/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java b/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\nindex f445532286..e7ec59a734 100644\n--- a/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\n+++ b/extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java\n\n@@ -163,7 +164,7 @@ public class KinesisRecordSupplier implements RecordSupplier<String, String>\n           final String offsetToUse;\n           if (offset == null || KinesisSupervisor.NOT_SET.equals(offset)) {\n             // this should probably check if will start processing earliest or latest rather than assuming earliest\n-            // if latest we could skip this because latest will not be behing latest so lag is 0.\n+            // if latest we could skip this because latest will not be behind latest so lag is 0.\n             iteratorType = ShardIteratorType.TRIM_HORIZON.toString();\n             offsetToUse = null;\n           } else {\n"}}, {"oid": "f25f41da70e98f72fa09e7d273231489f08e7fbd", "url": "https://github.com/apache/druid/commit/f25f41da70e98f72fa09e7d273231489f08e7fbd", "message": "split out supervisor report lags into lagMillis, remove latest offsets from kinesis supervisor report since always null, review stuffs", "committedDate": "2020-03-17T03:15:36Z", "type": "commit"}]}