{"pr_number": 9594, "pr_title": "Fix double count ssl connection metrics", "pr_createdAt": "2020-03-31T12:39:52Z", "pr_url": "https://github.com/apache/druid/pull/9594", "timeline": [{"oid": "55667bb0e8bef3ffb5d20bf89e869034ec800909", "url": "https://github.com/apache/druid/commit/55667bb0e8bef3ffb5d20bf89e869034ec800909", "message": "fix double counted jetty/numOpenConnections metric for ssl connections", "committedDate": "2020-03-31T07:43:30Z", "type": "commit"}, {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70", "url": "https://github.com/apache/druid/commit/111cc1f61fbc3f51d0de1cc730f409b4c91a2a70", "message": "tests", "committedDate": "2020-03-31T12:22:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYzMjM1NA==", "url": "https://github.com/apache/druid/pull/9594#discussion_r402632354", "bodyText": "Maybe there is some better way for waiting here rather than sleeping.. Maybe we can do like\nwhile (jsm.getActiveConnections() == 0) {\n  Thread.sleep(100);\n}\nAssert.assertEquals(1, jsm.getActiveConnections());\ngo.get();", "author": "jihoonson", "createdAt": "2020-04-02T22:27:55Z", "path": "server/src/test/java/org/apache/druid/server/initialization/JettyTest.java", "diffHunk": "@@ -311,4 +430,69 @@ public void testGzipRequestDecompression() throws Exception\n         new InputStreamResponseHandler()\n     ).get()), Charset.defaultCharset()));\n   }\n+\n+  @Test\n+  public void testNumConnectionsMetricHttp() throws Exception\n+  {\n+    String text = \"hello\";\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(out)) {\n+      gzipOutputStream.write(text.getBytes(Charset.defaultCharset()));\n+    }\n+    Request request = new Request(HttpMethod.POST, new URL(\"http://localhost:\" + port + \"/slow/hello\"));\n+    request.setHeader(\"Content-Encoding\", \"gzip\");\n+    request.setContent(MediaType.TEXT_PLAIN, out.toByteArray());\n+\n+    JettyServerModule jsm = inj.getInstance(JettyServerModule.class);\n+    Assert.assertEquals(0, jsm.getActiveConnections());\n+    ListenableFuture<InputStream> go = client.go(\n+        request,\n+        new InputStreamResponseHandler()\n+    );\n+    // sad\n+    Thread.sleep(100);", "originalCommit": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a69f46e1d274e190bc3e3e1e06146a58f27fffe6", "chunk": "diff --git a/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java b/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java\nindex b4021fde36..64ccd14876 100644\n--- a/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java\n+++ b/server/src/test/java/org/apache/druid/server/initialization/JettyTest.java\n\n@@ -439,22 +444,23 @@ public class JettyTest extends BaseJettyTest\n     try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(out)) {\n       gzipOutputStream.write(text.getBytes(Charset.defaultCharset()));\n     }\n-    Request request = new Request(HttpMethod.POST, new URL(\"http://localhost:\" + port + \"/slow/hello\"));\n+    Request request = new Request(HttpMethod.GET, new URL(\"http://localhost:\" + port + \"/latched/hello\"));\n     request.setHeader(\"Content-Encoding\", \"gzip\");\n     request.setContent(MediaType.TEXT_PLAIN, out.toByteArray());\n \n-    JettyServerModule jsm = inj.getInstance(JettyServerModule.class);\n+    JettyServerModule jsm = injector.getInstance(JettyServerModule.class);\n+    latchedRequestState.reset();\n+\n     Assert.assertEquals(0, jsm.getActiveConnections());\n     ListenableFuture<InputStream> go = client.go(\n         request,\n         new InputStreamResponseHandler()\n     );\n-    // sad\n-    Thread.sleep(100);\n+    latchedRequestState.clientWaitForServerToStartRequest();\n     Assert.assertEquals(1, jsm.getActiveConnections());\n+    latchedRequestState.clientReadyToFinishRequest();\n     go.get();\n-    // it can take a bit to close the connection\n-    Thread.sleep(1000);\n+    waitForJettyServerModuleActiveConnectionsZero(jsm);\n     Assert.assertEquals(0, jsm.getActiveConnections());\n   }\n \n"}}, {"oid": "a69f46e1d274e190bc3e3e1e06146a58f27fffe6", "url": "https://github.com/apache/druid/commit/a69f46e1d274e190bc3e3e1e06146a58f27fffe6", "message": "more better", "committedDate": "2020-04-03T01:33:50Z", "type": "commit"}, {"oid": "e4768b7e91001052289540227d4f048d26dae7aa", "url": "https://github.com/apache/druid/commit/e4768b7e91001052289540227d4f048d26dae7aa", "message": "style", "committedDate": "2020-04-03T08:07:19Z", "type": "commit"}]}