{"pr_number": 8246, "pr_title": "Improvements to XpressNet turnouts.  Apply immediatePipedOutputStream anywhere applicable", "pr_createdAt": "2020-03-15T16:54:45Z", "pr_url": "https://github.com/JMRI/JMRI/pull/8246", "timeline": [{"oid": "4a520c49ba8b1b9449a0d4a08e8ccb97cc68227f", "url": "https://github.com/JMRI/JMRI/commit/4a520c49ba8b1b9449a0d4a08e8ccb97cc68227f", "message": "linting", "committedDate": "2020-03-12T04:18:17Z", "type": "commit"}, {"oid": "71f4a84f72312ac0fb14601060aff5340c21414e", "url": "https://github.com/JMRI/JMRI/commit/71f4a84f72312ac0fb14601060aff5340c21414e", "message": "add message queue for \"on\" and status request messages", "committedDate": "2020-03-12T04:19:20Z", "type": "commit"}, {"oid": "3ac9ef5d1119877120b876541e7327a0a7ffe915", "url": "https://github.com/JMRI/JMRI/commit/3ac9ef5d1119877120b876541e7327a0a7ffe915", "message": "fix XNetTurnoutTests; apply ImmediatePipeOutputStream everywhere applicable", "committedDate": "2020-03-12T05:11:52Z", "type": "commit"}, {"oid": "a3778c5fd32df0515e0106d974401da1ee411e3b", "url": "https://github.com/JMRI/JMRI/commit/a3778c5fd32df0515e0106d974401da1ee411e3b", "message": "add private constructor for file of constants", "committedDate": "2020-03-15T01:17:59Z", "type": "commit"}, {"oid": "ff675281792cacdfda3076f1f4da99e1ec934a92", "url": "https://github.com/JMRI/JMRI/commit/ff675281792cacdfda3076f1f4da99e1ec934a92", "message": "turnout work", "committedDate": "2020-03-15T04:26:24Z", "type": "commit"}, {"oid": "6dfa53021eb88d60cc108e5da88574dd31ef1993", "url": "https://github.com/JMRI/JMRI/commit/6dfa53021eb88d60cc108e5da88574dd31ef1993", "message": "whitespace", "committedDate": "2020-03-15T04:27:47Z", "type": "commit"}, {"oid": "53c5602fd50d94a7342211f9648aad6e40f9ade4", "url": "https://github.com/JMRI/JMRI/commit/53c5602fd50d94a7342211f9648aad6e40f9ade4", "message": "linting", "committedDate": "2020-03-15T04:28:40Z", "type": "commit"}, {"oid": "77715d65d48a0c413900cb94f14bc6bc7dd60def", "url": "https://github.com/JMRI/JMRI/commit/77715d65d48a0c413900cb94f14bc6bc7dd60def", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI into development", "committedDate": "2020-03-15T04:29:57Z", "type": "commit"}, {"oid": "0e5384195c30bd1723aba06da0a3d333eb3f3b07", "url": "https://github.com/JMRI/JMRI/commit/0e5384195c30bd1723aba06da0a3d333eb3f3b07", "message": "remove inadvertantly commited file", "committedDate": "2020-03-15T13:37:53Z", "type": "commit"}, {"oid": "88c3109c08a330c433b2b92307362c00bc9c3ef0", "url": "https://github.com/JMRI/JMRI/commit/88c3109c08a330c433b2b92307362c00bc9c3ef0", "message": "fix test", "committedDate": "2020-03-15T15:44:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NjU0NQ==", "url": "https://github.com/JMRI/JMRI/pull/8246#discussion_r392696545", "bodyText": "Can you rename this class from ImmediatePipeOutputStream to ImmediatePipedOutputStream (Piped instead of Pipe)?", "author": "rhwood", "createdAt": "2020-03-15T17:51:39Z", "path": "java/src/jmri/util/ImmediatePipeOutputStream.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package jmri.util;\n+\n+import java.io.IOException;\n+import java.io.PipedInputStream;\n+import java.io.PipedOutputStream;\n+\n+/**\n+ * Makes a workaround for standard {@link PipedOutputStream} wait.\n+ * <p>The {@link PipedInputStream#read()}, in case the receive buffer is\n+ * empty at the time of the call, waits for up to 1000ms.\n+ * {@link PipedOutputStream#write(int)} does call <code>sink.receive</code>,\n+ * but does not <code>notify()</code> the sink object so that read's\n+ * wait() terminates.\n+ * </p><p>\n+ * As a result, the read side of the pipe waits full 1000ms even though data\n+ * become available during the wait.\n+ * </p><p>\n+ * The workaround is to simply {@link PipedOutputStream#flush} after write,\n+ * which returns from wait()s immediately.\n+ * </p>\n+ */\n+public class ImmediatePipeOutputStream extends PipedOutputStream {", "originalCommit": "88c3109c08a330c433b2b92307362c00bc9c3ef0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d75e532c69c64978759dba6dce2eb66322115c87", "chunk": "diff --git a/java/src/jmri/util/ImmediatePipeOutputStream.java b/java/src/jmri/util/ImmediatePipedOutputStream.java\nsimilarity index 88%\nrename from java/src/jmri/util/ImmediatePipeOutputStream.java\nrename to java/src/jmri/util/ImmediatePipedOutputStream.java\nindex 44d54f2e86..0f6e08c586 100644\n--- a/java/src/jmri/util/ImmediatePipeOutputStream.java\n+++ b/java/src/jmri/util/ImmediatePipedOutputStream.java\n\n@@ -11,15 +11,17 @@ import java.io.PipedOutputStream;\n  * {@link PipedOutputStream#write(int)} does call <code>sink.receive</code>,\n  * but does not <code>notify()</code> the sink object so that read's\n  * wait() terminates.\n- * </p><p>\n+ * <p>\n  * As a result, the read side of the pipe waits full 1000ms even though data\n  * become available during the wait.\n- * </p><p>\n+ * <p>\n  * The workaround is to simply {@link PipedOutputStream#flush} after write,\n  * which returns from wait()s immediately.\n- * </p>\n+ *\n+ * @author Svata Dedic Copyright (C) 2020\n  */\n-public class ImmediatePipeOutputStream extends PipedOutputStream {\n+\n+public class ImmediatePipedOutputStream extends PipedOutputStream {\n     @Override\n     public void write(byte[] b, int off, int len) throws IOException {\n         super.write(b, off, len);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NjY0NQ==", "url": "https://github.com/JMRI/JMRI/pull/8246#discussion_r392696645", "bodyText": "The terminating </p> is not needed in Javadocs, and just makes it harder to read. Can you remove these?", "author": "rhwood", "createdAt": "2020-03-15T17:52:50Z", "path": "java/src/jmri/util/ImmediatePipeOutputStream.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package jmri.util;\n+\n+import java.io.IOException;\n+import java.io.PipedInputStream;\n+import java.io.PipedOutputStream;\n+\n+/**\n+ * Makes a workaround for standard {@link PipedOutputStream} wait.\n+ * <p>The {@link PipedInputStream#read()}, in case the receive buffer is\n+ * empty at the time of the call, waits for up to 1000ms.\n+ * {@link PipedOutputStream#write(int)} does call <code>sink.receive</code>,\n+ * but does not <code>notify()</code> the sink object so that read's\n+ * wait() terminates.\n+ * </p><p>", "originalCommit": "88c3109c08a330c433b2b92307362c00bc9c3ef0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwMDY5MA==", "url": "https://github.com/JMRI/JMRI/pull/8246#discussion_r392700690", "bodyText": "I will fix that, but that actually was copied verbatim from what @svatoun wrote in #8213.", "author": "pabender", "createdAt": "2020-03-15T18:41:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NjY0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d75e532c69c64978759dba6dce2eb66322115c87", "chunk": "diff --git a/java/src/jmri/util/ImmediatePipeOutputStream.java b/java/src/jmri/util/ImmediatePipedOutputStream.java\nsimilarity index 88%\nrename from java/src/jmri/util/ImmediatePipeOutputStream.java\nrename to java/src/jmri/util/ImmediatePipedOutputStream.java\nindex 44d54f2e86..0f6e08c586 100644\n--- a/java/src/jmri/util/ImmediatePipeOutputStream.java\n+++ b/java/src/jmri/util/ImmediatePipedOutputStream.java\n\n@@ -11,15 +11,17 @@ import java.io.PipedOutputStream;\n  * {@link PipedOutputStream#write(int)} does call <code>sink.receive</code>,\n  * but does not <code>notify()</code> the sink object so that read's\n  * wait() terminates.\n- * </p><p>\n+ * <p>\n  * As a result, the read side of the pipe waits full 1000ms even though data\n  * become available during the wait.\n- * </p><p>\n+ * <p>\n  * The workaround is to simply {@link PipedOutputStream#flush} after write,\n  * which returns from wait()s immediately.\n- * </p>\n+ *\n+ * @author Svata Dedic Copyright (C) 2020\n  */\n-public class ImmediatePipeOutputStream extends PipedOutputStream {\n+\n+public class ImmediatePipedOutputStream extends PipedOutputStream {\n     @Override\n     public void write(byte[] b, int off, int len) throws IOException {\n         super.write(b, off, len);\n"}}, {"oid": "d75e532c69c64978759dba6dce2eb66322115c87", "url": "https://github.com/JMRI/JMRI/commit/d75e532c69c64978759dba6dce2eb66322115c87", "message": "rename class; fix javadoc; add author attribution", "committedDate": "2020-03-15T18:46:16Z", "type": "commit"}, {"oid": "1ddc1eff7ef1d5921b4dc3feb7c4c05c90eea925", "url": "https://github.com/JMRI/JMRI/commit/1ddc1eff7ef1d5921b4dc3feb7c4c05c90eea925", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI into development", "committedDate": "2020-03-15T19:23:51Z", "type": "commit"}, {"oid": "dca2c599a91f7919de163b070fd75f345db80718", "url": "https://github.com/JMRI/JMRI/commit/dca2c599a91f7919de163b070fd75f345db80718", "message": "Merge branch 'development' of github.com:pabender/JMRI into development", "committedDate": "2020-03-15T19:36:37Z", "type": "commit"}, {"oid": "92ed0dd6376383706ea061b755383f2aea8b5524", "url": "https://github.com/JMRI/JMRI/commit/92ed0dd6376383706ea061b755383f2aea8b5524", "message": "restore removed cucumber step definition", "committedDate": "2020-03-15T19:42:36Z", "type": "commit"}, {"oid": "d0239ceea8d90a29b3f12e7789b53ecdb3edd376", "url": "https://github.com/JMRI/JMRI/commit/d0239ceea8d90a29b3f12e7789b53ecdb3edd376", "message": "Readd imports", "committedDate": "2020-03-15T19:59:54Z", "type": "commit"}, {"oid": "ed9be2b91028c8fde0588b5ee37e8d30b7e44e90", "url": "https://github.com/JMRI/JMRI/commit/ed9be2b91028c8fde0588b5ee37e8d30b7e44e90", "message": "update column positions", "committedDate": "2020-03-15T21:58:43Z", "type": "commit"}, {"oid": "270775af5788dca11fb07ac66be6a96280e67530", "url": "https://github.com/JMRI/JMRI/commit/270775af5788dca11fb07ac66be6a96280e67530", "message": "find columns using names in header row", "committedDate": "2020-03-16T02:35:11Z", "type": "commit"}]}