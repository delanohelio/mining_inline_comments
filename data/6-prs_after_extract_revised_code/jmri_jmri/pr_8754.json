{"pr_number": 8754, "pr_title": "client-side panels: support rosterEntries in blocks and memories", "pr_createdAt": "2020-06-29T20:49:07Z", "pr_url": "https://github.com/JMRI/JMRI/pull/8754", "timeline": [{"oid": "2754a10c7a454af5edf8738a4945b79d3f3661f1", "url": "https://github.com/JMRI/JMRI/commit/2754a10c7a454af5edf8738a4945b79d3f3661f1", "message": "client-side panels: support rosterEntries in blocks and memories", "committedDate": "2020-06-29T20:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0NjIzMA==", "url": "https://github.com/JMRI/JMRI/pull/8754#discussion_r447246230", "bodyText": "@rhwood I'd appreciate suggestions for handling the id here. (last parm, set to 0 for now)", "author": "mstevetodd", "createdAt": "2020-06-29T20:51:14Z", "path": "java/src/jmri/server/json/memory/JsonMemoryHttpService.java", "diffHunk": "@@ -50,6 +53,9 @@ public ObjectNode doGet(Memory memory, String name, String type, JsonRequest req\n                 } else if (val instanceof jmri.Reporter) {\n                     ObjectNode reporterValue = reporterService.doGet((jmri.Reporter) val, name, REPORTER, request);\n                     data.set(VALUE, reporterValue);\n+                } else if (val instanceof jmri.BasicRosterEntry) {\n+                    ObjectNode rosterValue = (ObjectNode) rosterService.getRosterEntry(request.locale, ((BasicRosterEntry) val).getId(), 0);", "originalCommit": "2754a10c7a454af5edf8738a4945b79d3f3661f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1MTIwNQ==", "url": "https://github.com/JMRI/JMRI/pull/8754#discussion_r447251205", "bodyText": "Use request.id instead of 0.  request is a JsonRequest and will have the correct value for any context (the JsonRequest is a container  for data about the JSON message which avoids many methods needing 6 or more parameters).", "author": "rhwood", "createdAt": "2020-06-29T21:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0NjIzMA=="}], "type": "inlineReview", "revised_code": {"commit": "4f6a9549388f62942ff6582cce954a8a831e3632", "chunk": "diff --git a/java/src/jmri/server/json/memory/JsonMemoryHttpService.java b/java/src/jmri/server/json/memory/JsonMemoryHttpService.java\nindex a32ef66e92..5ba2ce4d65 100644\n--- a/java/src/jmri/server/json/memory/JsonMemoryHttpService.java\n+++ b/java/src/jmri/server/json/memory/JsonMemoryHttpService.java\n\n@@ -54,7 +54,7 @@ public class JsonMemoryHttpService extends JsonNamedBeanHttpService<Memory> {\n                     ObjectNode reporterValue = reporterService.doGet((jmri.Reporter) val, name, REPORTER, request);\n                     data.set(VALUE, reporterValue);\n                 } else if (val instanceof jmri.BasicRosterEntry) {\n-                    ObjectNode rosterValue = (ObjectNode) rosterService.getRosterEntry(request.locale, ((BasicRosterEntry) val).getId(), 0);\n+                    ObjectNode rosterValue = (ObjectNode) rosterService.getRosterEntry(request.locale, ((BasicRosterEntry) val).getId(), request.id);\n                     data.set(VALUE, rosterValue);\n                 } else {\n                     // send string for types not explicitly handled\n"}}, {"oid": "4f6a9549388f62942ff6582cce954a8a831e3632", "url": "https://github.com/JMRI/JMRI/commit/4f6a9549388f62942ff6582cce954a8a831e3632", "message": "set request id properly", "committedDate": "2020-06-29T22:06:18Z", "type": "commit"}]}