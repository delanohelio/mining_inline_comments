{"pr_number": 8814, "pr_title": "Remove references to Apps from JmriConfigurationManager", "pr_createdAt": "2020-07-09T01:58:06Z", "pr_url": "https://github.com/JMRI/JMRI/pull/8814", "timeline": [{"oid": "d8eb86979d5221e8acb794d28ade3186383a568f", "url": "https://github.com/JMRI/JMRI/commit/d8eb86979d5221e8acb794d28ade3186383a568f", "message": "linting", "committedDate": "2020-07-08T11:59:24Z", "type": "commit"}, {"oid": "bea533a0de82d883afe38ef5c83fde97fa8f1702", "url": "https://github.com/JMRI/JMRI/commit/bea533a0de82d883afe38ef5c83fde97fa8f1702", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI", "committedDate": "2020-07-08T13:58:45Z", "type": "commit"}, {"oid": "cb1c147a4e7961c8b4d3f81ac2433881b63a4e31", "url": "https://github.com/JMRI/JMRI/commit/cb1c147a4e7961c8b4d3f81ac2433881b63a4e31", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI", "committedDate": "2020-07-08T16:09:11Z", "type": "commit"}, {"oid": "814503824749fc333d7acfd020643b1ccb2e0047", "url": "https://github.com/JMRI/JMRI/commit/814503824749fc333d7acfd020643b1ccb2e0047", "message": "remove reference to apps from JmriConfigurationManager", "committedDate": "2020-07-08T23:33:26Z", "type": "commit"}, {"oid": "82c115c7a40de39f877fc8fe3e009fc4a350158a", "url": "https://github.com/JMRI/JMRI/commit/82c115c7a40de39f877fc8fe3e009fc4a350158a", "message": "add warning about changes", "committedDate": "2020-07-09T02:05:57Z", "type": "commit"}, {"oid": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "url": "https://github.com/JMRI/JMRI/commit/55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "message": "update correct file", "committedDate": "2020-07-09T02:07:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3ODYzNg==", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452078636", "bodyText": "Do you intend to leave this reference to apps intact?", "author": "rhwood", "createdAt": "2020-07-09T09:14:50Z", "path": "java/src/jmri/jmrit/roster/swing/RosterFrame.java", "diffHunk": "@@ -140,58 +140,58 @@ public RosterFrame(String name, String menubarFile, String toolbarFile) {\n     }\n \n     int clickDelay = 0;\n-    JRadioButtonMenuItem contextEdit = new JRadioButtonMenuItem(Bundle.getMessage(\"ButtonEdit\"));\n-    JRadioButtonMenuItem contextOps = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingOnMain\"));\n-    JRadioButtonMenuItem contextService = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingTrack\"));\n-    JTextPane dateUpdated = new JTextPane();\n-    JTextPane dccAddress = new JTextPane();\n-    JTextPane decoderFamily = new JTextPane();\n-    JTextPane decoderModel = new JTextPane();\n-    JRadioButton edit = new JRadioButton(Bundle.getMessage(\"EditOnly\"));\n-    JTextPane filename = new JTextPane();\n+    final JRadioButtonMenuItem contextEdit = new JRadioButtonMenuItem(Bundle.getMessage(\"ButtonEdit\"));\n+    final JRadioButtonMenuItem contextOps = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingOnMain\"));\n+    final JRadioButtonMenuItem contextService = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingTrack\"));\n+    final JTextPane dateUpdated = new JTextPane();\n+    final JTextPane dccAddress = new JTextPane();\n+    final JTextPane decoderFamily = new JTextPane();\n+    final JTextPane decoderModel = new JTextPane();\n+    final JRadioButton edit = new JRadioButton(Bundle.getMessage(\"EditOnly\"));\n+    final JTextPane filename = new JTextPane();\n     JLabel firstHelpLabel;\n     //int firstTimeAddedEntry = 0x00;\n     int groupSplitPaneLocation = 0;\n     RosterGroupsPanel groups;\n     boolean hideGroups = false;\n     boolean hideRosterImage = false;\n-    JTextPane id = new JTextPane();\n+    final JTextPane id = new JTextPane();\n     boolean inStartProgrammer = false;\n     ResizableImagePanel locoImage;\n     JTextPane maxSpeed = new JTextPane();\n-    JTextPane mfg = new JTextPane();\n-    ProgModeSelector modePanel = new ProgServiceModeComboBox();\n-    JTextPane model = new JTextPane();\n-    JLabel operationsModeProgrammerLabel = new JLabel();\n-    JRadioButton ops = new JRadioButton(Bundle.getMessage(\"ProgrammingOnMain\"));\n+    final JTextPane mfg = new JTextPane();\n+    final ProgModeSelector modePanel = new ProgServiceModeComboBox();\n+    final JTextPane model = new JTextPane();\n+    final JLabel operationsModeProgrammerLabel = new JLabel();\n+    final JRadioButton ops = new JRadioButton(Bundle.getMessage(\"ProgrammingOnMain\"));\n     ConnectionConfig opsModeProCon = null;\n-    JTextPane owner = new JTextPane();\n+    final JTextPane owner = new JTextPane();\n     UserPreferencesManager prefsMgr;\n-    JButton prog1Button = new JButton(Bundle.getMessage(\"Program\"));\n-    JButton prog2Button = new JButton(Bundle.getMessage(\"BasicProgrammer\"));\n+    final JButton prog1Button = new JButton(Bundle.getMessage(\"Program\"));\n+    final JButton prog2Button = new JButton(Bundle.getMessage(\"BasicProgrammer\"));\n     ActionListener programModeListener;\n \n     // These are the names of the programmer _files_, not what should be displayed to the user\n     String programmer1 = \"Comprehensive\"; // NOI18N\n     String programmer2 = \"Basic\"; // NOI18N\n \n-    java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle(\"apps.AppsBundle\");\n+    final java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle(\"apps.AppsBundle\");", "originalCommit": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE0OTQ4NQ==", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452149485", "bodyText": "We'll fix that, along with any other references to bundles, but the first goal is to make the code compile separately.\nI missed it in my other PR.", "author": "pabender", "createdAt": "2020-07-09T11:28:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3ODYzNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4MDE3OQ==", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452080179", "bodyText": "Given that 3 other classes in jmri also use TabbedPreferencesAction, it would be better to provide a preferences window launching action that does not rely on apps instead of breaking apart JmriConfigurationManager.", "author": "rhwood", "createdAt": "2020-07-09T09:17:27Z", "path": "java/src/apps/AppsConfigurationManager.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package apps;\n+\n+import apps.gui3.tabbedpreferences.EditConnectionPreferencesDialog;\n+import apps.gui3.tabbedpreferences.TabbedPreferencesAction;\n+import jmri.Application;\n+import jmri.implementation.JmriConfigurationManager;\n+\n+import javax.swing.*;\n+\n+public class AppsConfigurationManager extends JmriConfigurationManager {\n+\n+    @Override\n+    protected void displayErrorListDialog(Object list) {\n+        super.displayErrorListDialog(list);\n+        (new TabbedPreferencesAction()).actionPerformed();", "originalCommit": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1MDA3OA==", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452150078", "bodyText": "Cleaning up JmriConfigurationManager needed to be done in any case.\nI will look into those other uses you mention.", "author": "pabender", "createdAt": "2020-07-09T11:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4MDE3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4362d2fc3054f9712a09106701e5c3d3b07c58cd", "chunk": "diff --git a/java/src/apps/AppsConfigurationManager.java b/java/src/apps/AppsConfigurationManager.java\nindex eb5eabfdc5..55b6a9a58b 100644\n--- a/java/src/apps/AppsConfigurationManager.java\n+++ b/java/src/apps/AppsConfigurationManager.java\n\n@@ -9,12 +9,6 @@ import javax.swing.*;\n \n public class AppsConfigurationManager extends JmriConfigurationManager {\n \n-    @Override\n-    protected void displayErrorListDialog(Object list) {\n-        super.displayErrorListDialog(list);\n-        (new TabbedPreferencesAction()).actionPerformed();\n-    }\n-\n     @Override\n     protected boolean isEditDialogRestart() {\n         return EditConnectionPreferencesDialog.showDialog();\n"}}, {"oid": "4362d2fc3054f9712a09106701e5c3d3b07c58cd", "url": "https://github.com/JMRI/JMRI/commit/4362d2fc3054f9712a09106701e5c3d3b07c58cd", "message": "use a preferences action factory to gain access to tabbed preferences where required.", "committedDate": "2020-07-09T14:36:46Z", "type": "commit"}, {"oid": "23cc9e5567c221ab0de7838d479c4b82a50728c8", "url": "https://github.com/JMRI/JMRI/commit/23cc9e5567c221ab0de7838d479c4b82a50728c8", "message": "use correct key", "committedDate": "2020-07-09T17:22:44Z", "type": "commit"}, {"oid": "f72fb429a0845f0cce4fef8d58aaa9d8bdbf40a0", "url": "https://github.com/JMRI/JMRI/commit/f72fb429a0845f0cce4fef8d58aaa9d8bdbf40a0", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI", "committedDate": "2020-07-14T01:00:12Z", "type": "commit"}, {"oid": "e2fcde6fed5c1b83a7aa81f0f1ddce51dea8943f", "url": "https://github.com/JMRI/JMRI/commit/e2fcde6fed5c1b83a7aa81f0f1ddce51dea8943f", "message": "remove accidentally added additional whitespace", "committedDate": "2020-07-14T04:01:44Z", "type": "commit"}]}