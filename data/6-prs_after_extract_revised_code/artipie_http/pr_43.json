{"pr_number": 43, "pr_title": "Added RsStatus class with most commonly used HTTP response status codes", "pr_createdAt": "2020-02-19T11:45:09Z", "pr_url": "https://github.com/artipie/http/pull/43", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTczMTM1Ng==", "url": "https://github.com/artipie/http/pull/43#discussion_r381731356", "bodyText": "@olegmoz  Well, this class looks obvious but according to EO principles, this design is bad.\nTake a look at https://www.yegor256.com/2015/07/06/public-static-literals.html\n@g4s8 @yegor256  WDYT???", "author": "fanifieiev", "createdAt": "2020-02-20T04:09:57Z", "path": "src/main/java/com/artipie/http/rs/RsStatus.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+/**\n+ * HTTP response status code.\n+ * See <a href=\"https://tools.ietf.org/html/rfc2616#section-6.1.1\">RFC 2616 6.1.1 Status Code and Reason Phrase</a>\n+ *\n+ * @since 0.4\n+ */\n+public final class RsStatus {", "originalCommit": "87af58ecf81aab072528d6e5bde9c0ed2cd26a15", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgzNDU3MA==", "url": "https://github.com/artipie/http/pull/43#discussion_r381834570", "bodyText": "@fanifieiev talked with @yegor256 and he seems to be ok with having such class. I personally do not see any way around having such constants, it's just nature of HTTP", "author": "olegmoz", "createdAt": "2020-02-20T07:59:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTczMTM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgzNDY1Ng==", "url": "https://github.com/artipie/http/pull/43#discussion_r381834656", "bodyText": "@g4s8 what do you think?", "author": "olegmoz", "createdAt": "2020-02-20T07:59:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTczMTM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTMxNg==", "url": "https://github.com/artipie/http/pull/43#discussion_r382059316", "bodyText": "@olegmoz Has @yegor256 approved this design???? Hm, surprised.\nSo, if we go this way, I propose to make this class as Enumeration, it is still static but looks better.", "author": "fanifieiev", "createdAt": "2020-02-20T15:08:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTczMTM1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU2ODQ1Mg==", "url": "https://github.com/artipie/http/pull/43#discussion_r382568452", "bodyText": "@fanifieiev changed it to enum, please review", "author": "olegmoz", "createdAt": "2020-02-21T13:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTczMTM1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5123213f9da906b2d04d44245e4fbb7a558274cd", "chunk": "diff --git a/src/main/java/com/artipie/http/rs/RsStatus.java b/src/main/java/com/artipie/http/rs/RsStatus.java\nindex b074a8f..c2d1cb3 100644\n--- a/src/main/java/com/artipie/http/rs/RsStatus.java\n+++ b/src/main/java/com/artipie/http/rs/RsStatus.java\n\n@@ -29,94 +29,94 @@ package com.artipie.http.rs;\n  *\n  * @since 0.4\n  */\n-public final class RsStatus {\n+public enum RsStatus {\n \n     /**\n      * OK.\n      */\n-    public static final RsStatus OK = new RsStatus(\"200\");\n+    OK(\"200\"),\n \n     /**\n      * Created.\n      */\n-    public static final RsStatus CREATED = new RsStatus(\"201\");\n+    CREATED(\"201\"),\n \n     /**\n      * Accepted.\n      */\n-    public static final RsStatus ACCEPTED = new RsStatus(\"202\");\n+    ACCEPTED(\"202\"),\n \n     /**\n      * Moved Permanently.\n      */\n-    public static final RsStatus MOVED_PERMANENTLY = new RsStatus(\"301\");\n+    MOVED_PERMANENTLY(\"301\"),\n \n     /**\n      * Found.\n      */\n-    public static final RsStatus FOUND = new RsStatus(\"302\");\n+    FOUND(\"302\"),\n \n     /**\n      * Not Modified.\n      */\n-    public static final RsStatus NOT_MODIFIED = new RsStatus(\"304\");\n+    NOT_MODIFIED(\"304\"),\n \n     /**\n      * Temporary Redirect.\n      */\n     @SuppressWarnings(\"PMD.LongVariable\")\n-    public static final RsStatus TEMPORARY_REDIRECT = new RsStatus(\"307\");\n+    TEMPORARY_REDIRECT(\"307\"),\n \n     /**\n      * Bad Request.\n      */\n-    public static final RsStatus BAD_REQUEST = new RsStatus(\"400\");\n+    BAD_REQUEST(\"400\"),\n \n     /**\n      * Unauthorized.\n      */\n-    public static final RsStatus UNAUTHORIZED = new RsStatus(\"401\");\n+    UNAUTHORIZED(\"401\"),\n \n     /**\n      * Forbidden.\n      */\n-    public static final RsStatus FORBIDDEN = new RsStatus(\"403\");\n+    FORBIDDEN(\"403\"),\n \n     /**\n      * Not Found.\n      */\n-    public static final RsStatus NOT_FOUND = new RsStatus(\"404\");\n+    NOT_FOUND(\"404\"),\n \n     /**\n      * Method Not Allowed.\n      */\n     @SuppressWarnings(\"PMD.LongVariable\")\n-    public static final RsStatus METHOD_NOT_ALLOWED = new RsStatus(\"405\");\n+    METHOD_NOT_ALLOWED(\"405\"),\n \n     /**\n      * Request Time-out.\n      */\n-    public static final RsStatus REQUEST_TIMEOUT = new RsStatus(\"408\");\n+    REQUEST_TIMEOUT(\"408\"),\n \n     /**\n      * Conflict.\n      */\n-    public static final RsStatus CONFLICT = new RsStatus(\"409\");\n+    CONFLICT(\"409\"),\n \n     /**\n      * Internal Server Error.\n      */\n-    public static final RsStatus INTERNAL_ERROR = new RsStatus(\"500\");\n+    INTERNAL_ERROR(\"500\"),\n \n     /**\n      * Not Implemented.\n      */\n-    public static final RsStatus NOT_IMPLEMENTED = new RsStatus(\"501\");\n+    NOT_IMPLEMENTED(\"501\"),\n \n     /**\n      * Service Unavailable.\n      */\n-    public static final RsStatus UNAVAILABLE = new RsStatus(\"503\");\n+    UNAVAILABLE(\"503\");\n \n     /**\n      * Code value.\n"}}, {"oid": "72178bc82e80c789a794ff1e0c0d07a27738cf82", "url": "https://github.com/artipie/http/commit/72178bc82e80c789a794ff1e0c0d07a27738cf82", "message": "Added RsStatus class with most commonly used HTTP response status codes", "committedDate": "2020-02-20T12:57:08Z", "type": "forcePushed"}, {"oid": "f01020aa045a66f7f64c87fe01979e47c104c63d", "url": "https://github.com/artipie/http/commit/f01020aa045a66f7f64c87fe01979e47c104c63d", "message": "Added RsStatus class with most commonly used HTTP response status codes", "committedDate": "2020-02-21T08:47:48Z", "type": "commit"}, {"oid": "f01020aa045a66f7f64c87fe01979e47c104c63d", "url": "https://github.com/artipie/http/commit/f01020aa045a66f7f64c87fe01979e47c104c63d", "message": "Added RsStatus class with most commonly used HTTP response status codes", "committedDate": "2020-02-21T08:47:48Z", "type": "forcePushed"}, {"oid": "5123213f9da906b2d04d44245e4fbb7a558274cd", "url": "https://github.com/artipie/http/commit/5123213f9da906b2d04d44245e4fbb7a558274cd", "message": "Changes by review, changed RsStatus to enum", "committedDate": "2020-02-21T12:59:36Z", "type": "commit"}, {"oid": "53d70494593ca893f6ddd80ae3a1220fe54e4024", "url": "https://github.com/artipie/http/commit/53d70494593ca893f6ddd80ae3a1220fe54e4024", "message": "Merge remote-tracking branch 'origin/master' into status-codes\n\n# Conflicts:\n#\tsrc/main/java/com/artipie/http/hm/RsHasStatus.java\n#\tsrc/test/java/com/artipie/http/hm/RsHasBodyTest.java", "committedDate": "2020-02-25T12:34:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzNjI0NA==", "url": "https://github.com/artipie/http/pull/43#discussion_r385536244", "bodyText": "@olegmoz what is the point of using String here? Status code is a number, so I'd use int here.", "author": "g4s8", "createdAt": "2020-02-28T07:02:27Z", "path": "src/main/java/com/artipie/http/rs/RsStatus.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+/**\n+ * HTTP response status code.\n+ * See <a href=\"https://tools.ietf.org/html/rfc2616#section-6.1.1\">RFC 2616 6.1.1 Status Code and Reason Phrase</a>\n+ *\n+ * @since 0.4\n+ */\n+public enum RsStatus {\n+\n+    /**\n+     * OK.\n+     */\n+    OK(\"200\"),\n+\n+    /**\n+     * Created.\n+     */\n+    CREATED(\"201\"),\n+\n+    /**\n+     * Accepted.\n+     */\n+    ACCEPTED(\"202\"),\n+\n+    /**\n+     * Moved Permanently.\n+     */\n+    MOVED_PERMANENTLY(\"301\"),\n+\n+    /**\n+     * Found.\n+     */\n+    FOUND(\"302\"),\n+\n+    /**\n+     * Not Modified.\n+     */\n+    NOT_MODIFIED(\"304\"),\n+\n+    /**\n+     * Temporary Redirect.\n+     */\n+    @SuppressWarnings(\"PMD.LongVariable\")\n+    TEMPORARY_REDIRECT(\"307\"),\n+\n+    /**\n+     * Bad Request.\n+     */\n+    BAD_REQUEST(\"400\"),\n+\n+    /**\n+     * Unauthorized.\n+     */\n+    UNAUTHORIZED(\"401\"),\n+\n+    /**\n+     * Forbidden.\n+     */\n+    FORBIDDEN(\"403\"),\n+\n+    /**\n+     * Not Found.\n+     */\n+    NOT_FOUND(\"404\"),\n+\n+    /**\n+     * Method Not Allowed.\n+     */\n+    @SuppressWarnings(\"PMD.LongVariable\")\n+    METHOD_NOT_ALLOWED(\"405\"),\n+\n+    /**\n+     * Request Time-out.\n+     */\n+    REQUEST_TIMEOUT(\"408\"),\n+\n+    /**\n+     * Conflict.\n+     */\n+    CONFLICT(\"409\"),\n+\n+    /**\n+     * Internal Server Error.\n+     */\n+    INTERNAL_ERROR(\"500\"),\n+\n+    /**\n+     * Not Implemented.\n+     */\n+    NOT_IMPLEMENTED(\"501\"),\n+\n+    /**\n+     * Service Unavailable.\n+     */\n+    UNAVAILABLE(\"503\");\n+\n+    /**\n+     * Code value.\n+     */\n+    private final String string;", "originalCommit": "53d70494593ca893f6ddd80ae3a1220fe54e4024", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU0MDAwNQ==", "url": "https://github.com/artipie/http/pull/43#discussion_r385540005", "bodyText": "@g4s8 actually I think that String makes more sense - we do not do arithmetics with codes. Only thing we do with them is print to response and compare if codes are identical.", "author": "olegmoz", "createdAt": "2020-02-28T07:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzNjI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MTY5OQ==", "url": "https://github.com/artipie/http/pull/43#discussion_r385771699", "bodyText": "@olegmoz Kirill(@g4s8 ) is absolutely right. Sorry to have missed that.\nEven though there is no much difference, but according to specification w3org, it is required that the http status code is a 3-digit integer(have a look at the paragraph 6.1.1 Status Code and Reason Phrase)", "author": "fanifieiev", "createdAt": "2020-02-28T15:49:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzNjI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIzMTA4Ng==", "url": "https://github.com/artipie/http/pull/43#discussion_r386231086", "bodyText": "@fanifieiev that's right about spec, but I do not see how it makes you use int in your program? HTTP operates with byte strings, not with numbers", "author": "olegmoz", "createdAt": "2020-03-02T07:30:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUzNjI0NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fd9e318fee5b891606274c42d589940589c1cc1f", "url": "https://github.com/artipie/http/commit/fd9e318fee5b891606274c42d589940589c1cc1f", "message": "Merge branch 'master' into status-codes", "committedDate": "2020-02-28T14:57:31Z", "type": "commit"}]}