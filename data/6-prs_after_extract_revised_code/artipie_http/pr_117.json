{"pr_number": 117, "pr_title": "Not found response created", "pr_createdAt": "2020-04-13T12:48:41Z", "pr_url": "https://github.com/artipie/http/pull/117", "timeline": [{"oid": "2cdb18a4631091b9561414cdfefc36b1fcd69622", "url": "https://github.com/artipie/http/commit/2cdb18a4631091b9561414cdfefc36b1fcd69622", "message": "Not found response created", "committedDate": "2020-04-13T11:36:15Z", "type": "commit"}, {"oid": "844cabb9011e230d88946a477ecf1f25932569d1", "url": "https://github.com/artipie/http/commit/844cabb9011e230d88946a477ecf1f25932569d1", "message": "correction to make build pass", "committedDate": "2020-04-14T17:28:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzkyOA==", "url": "https://github.com/artipie/http/pull/117#discussion_r408643928", "bodyText": "@olenagerasimova why using JSON here? I'd not put any volatile date to default 404 response. Same for headers", "author": "g4s8", "createdAt": "2020-04-15T07:43:56Z", "path": "src/main/java/com/artipie/http/Response.java", "diffHunk": "@@ -44,6 +47,17 @@\n         Flowable.empty()\n     );\n \n+    /**\n+     * Not found response.\n+     */\n+    Response NOT_FOUND = con -> con.accept(\n+        RsStatus.NOT_FOUND,\n+        new ListOf<java.util.Map.Entry<String, String>>(\n+            new MapEntry<>(\"Content-Type\", \"application/json\")\n+        ),\n+        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))", "originalCommit": "844cabb9011e230d88946a477ecf1f25932569d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43866e7ae6144cf069d4f49d67fc5ca983969004", "chunk": "diff --git a/src/main/java/com/artipie/http/Response.java b/src/main/java/com/artipie/http/Response.java\nindex fb1a803..1da28c8 100644\n--- a/src/main/java/com/artipie/http/Response.java\n+++ b/src/main/java/com/artipie/http/Response.java\n\n@@ -40,24 +37,15 @@ public interface Response {\n \n     /**\n      * Empty response.\n+     * @deprecated Use {@link com.artipie.http.rs.StandardRs#EMPTY}.\n      */\n+    @Deprecated\n     Response EMPTY = con -> con.accept(\n         RsStatus.OK,\n         Collections.emptyList(),\n         Flowable.empty()\n     );\n \n-    /**\n-     * Not found response.\n-     */\n-    Response NOT_FOUND = con -> con.accept(\n-        RsStatus.NOT_FOUND,\n-        new ListOf<java.util.Map.Entry<String, String>>(\n-            new MapEntry<>(\"Content-Type\", \"application/json\")\n-        ),\n-        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))\n-    );\n-\n     /**\n      * Send the response.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NTU4MA==", "url": "https://github.com/artipie/http/pull/117#discussion_r408645580", "bodyText": "@olenagerasimova Maybe we can move it to some enum which implements Response interface isntead of using interface fields? E.g.:\nenum StandardResponses implements Response {\n    NOT_FOUND(new RsWithStatus(RsStatus.NOT_FOUND));\n\n   private final Response origin;\n   StandardResponses(Response origin) {\n      this.origin = origin;\n   }\n   @Override\n   send(COnnection con) {\n     this.origin.send(con);\n   }\n}", "author": "g4s8", "createdAt": "2020-04-15T07:46:47Z", "path": "src/main/java/com/artipie/http/Response.java", "diffHunk": "@@ -44,6 +47,17 @@\n         Flowable.empty()\n     );\n \n+    /**\n+     * Not found response.\n+     */\n+    Response NOT_FOUND = con -> con.accept(", "originalCommit": "844cabb9011e230d88946a477ecf1f25932569d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43866e7ae6144cf069d4f49d67fc5ca983969004", "chunk": "diff --git a/src/main/java/com/artipie/http/Response.java b/src/main/java/com/artipie/http/Response.java\nindex fb1a803..1da28c8 100644\n--- a/src/main/java/com/artipie/http/Response.java\n+++ b/src/main/java/com/artipie/http/Response.java\n\n@@ -40,24 +37,15 @@ public interface Response {\n \n     /**\n      * Empty response.\n+     * @deprecated Use {@link com.artipie.http.rs.StandardRs#EMPTY}.\n      */\n+    @Deprecated\n     Response EMPTY = con -> con.accept(\n         RsStatus.OK,\n         Collections.emptyList(),\n         Flowable.empty()\n     );\n \n-    /**\n-     * Not found response.\n-     */\n-    Response NOT_FOUND = con -> con.accept(\n-        RsStatus.NOT_FOUND,\n-        new ListOf<java.util.Map.Entry<String, String>>(\n-            new MapEntry<>(\"Content-Type\", \"application/json\")\n-        ),\n-        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))\n-    );\n-\n     /**\n      * Send the response.\n      *\n"}}, {"oid": "43866e7ae6144cf069d4f49d67fc5ca983969004", "url": "https://github.com/artipie/http/commit/43866e7ae6144cf069d4f49d67fc5ca983969004", "message": "Standard responses created", "committedDate": "2020-04-15T13:22:28Z", "type": "commit"}, {"oid": "abebe675a012f3af66805f29a52ac70498b5872b", "url": "https://github.com/artipie/http/commit/abebe675a012f3af66805f29a52ac70498b5872b", "message": "Replaced deprecated usages", "committedDate": "2020-04-15T13:26:28Z", "type": "commit"}, {"oid": "8135dc4a8712dc0d5ea745819495f2e3d478ede8", "url": "https://github.com/artipie/http/commit/8135dc4a8712dc0d5ea745819495f2e3d478ede8", "message": "empty resp corrected", "committedDate": "2020-04-15T13:32:38Z", "type": "commit"}]}