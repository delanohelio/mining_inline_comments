{"pr_number": 159, "pr_title": "#144 - Code coverage improvements", "pr_createdAt": "2020-05-27T02:26:39Z", "pr_url": "https://github.com/artipie/http/pull/159", "timeline": [{"oid": "82947a32d87875cda936947a5241a18d7c68be02", "url": "https://github.com/artipie/http/commit/82947a32d87875cda936947a5241a18d7c68be02", "message": "Code coverage improvements", "committedDate": "2020-05-27T02:22:33Z", "type": "commit"}, {"oid": "6c4c5ab317e17c6ffcaca8f54719c6aca78a9357", "url": "https://github.com/artipie/http/commit/6c4c5ab317e17c6ffcaca8f54719c6aca78a9357", "message": "Update pom.xml", "committedDate": "2020-05-27T13:01:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNzM2MA==", "url": "https://github.com/artipie/http/pull/159#discussion_r431737360", "bodyText": "@marceloamadeu let's inline this variable.", "author": "carlosmiranda", "createdAt": "2020-05-28T10:30:18Z", "path": "src/test/java/com/artipie/http/rs/HeaderTest.java", "diffHunk": "@@ -73,8 +74,19 @@ void shouldTrimValueLeadingWhitespaces(final String original, final String expec\n         );\n     }\n \n+    @Test\n+    void toStringHeader() throws Exception {\n+        final String name = \"name\";", "originalCommit": "6c4c5ab317e17c6ffcaca8f54719c6aca78a9357", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e1ce7b6af8e0bfa2d8a636a23311951822c84d6", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/HeaderTest.java b/src/test/java/com/artipie/http/rs/HeaderTest.java\nindex 5805055..3afa4fc 100644\n--- a/src/test/java/com/artipie/http/rs/HeaderTest.java\n+++ b/src/test/java/com/artipie/http/rs/HeaderTest.java\n\n@@ -76,10 +76,8 @@ final class HeaderTest {\n \n     @Test\n     void toStringHeader() throws Exception {\n-        final String name = \"name\";\n-        final String value = \"value\";\n         MatcherAssert.assertThat(\n-            new Header(name, value).toString(),\n+            new Header(\"name\", \"value\").toString(),\n             new IsEqual<>(\"name: value\")\n         );\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNzQxNw==", "url": "https://github.com/artipie/http/pull/159#discussion_r431737417", "bodyText": "@marceloamadeu let's inline this variable.", "author": "carlosmiranda", "createdAt": "2020-05-28T10:30:25Z", "path": "src/test/java/com/artipie/http/rs/HeaderTest.java", "diffHunk": "@@ -73,8 +74,19 @@ void shouldTrimValueLeadingWhitespaces(final String original, final String expec\n         );\n     }\n \n+    @Test\n+    void toStringHeader() throws Exception {\n+        final String name = \"name\";\n+        final String value = \"value\";", "originalCommit": "6c4c5ab317e17c6ffcaca8f54719c6aca78a9357", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e1ce7b6af8e0bfa2d8a636a23311951822c84d6", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/HeaderTest.java b/src/test/java/com/artipie/http/rs/HeaderTest.java\nindex 5805055..3afa4fc 100644\n--- a/src/test/java/com/artipie/http/rs/HeaderTest.java\n+++ b/src/test/java/com/artipie/http/rs/HeaderTest.java\n\n@@ -76,10 +76,8 @@ final class HeaderTest {\n \n     @Test\n     void toStringHeader() throws Exception {\n-        final String name = \"name\";\n-        final String value = \"value\";\n         MatcherAssert.assertThat(\n-            new Header(name, value).toString(),\n+            new Header(\"name\", \"value\").toString(),\n             new IsEqual<>(\"name: value\")\n         );\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczOTU0MA==", "url": "https://github.com/artipie/http/pull/159#discussion_r431739540", "bodyText": "@marceloamadeu is nesting two RsWithStatus here really necessary for testing toString capability?", "author": "carlosmiranda", "createdAt": "2020-05-28T10:34:39Z", "path": "src/test/java/com/artipie/http/rs/RsWithStatusTest.java", "diffHunk": "@@ -41,4 +43,15 @@ void usesStatus() throws Exception {\n             new RsHasStatus(status)\n         );\n     }\n+\n+    @Test\n+    void toStringRsWithStatus() throws Exception {\n+        final RsStatus status = RsStatus.OK;\n+        final Response origin = new RsWithStatus(RsStatus.OK);", "originalCommit": "6c4c5ab317e17c6ffcaca8f54719c6aca78a9357", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3e1ce7b6af8e0bfa2d8a636a23311951822c84d6", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/RsWithStatusTest.java b/src/test/java/com/artipie/http/rs/RsWithStatusTest.java\nindex 5ae4ec9..1e392fa 100644\n--- a/src/test/java/com/artipie/http/rs/RsWithStatusTest.java\n+++ b/src/test/java/com/artipie/http/rs/RsWithStatusTest.java\n\n@@ -45,12 +44,10 @@ final class RsWithStatusTest {\n     }\n \n     @Test\n-    void toStringRsWithStatus() throws Exception {\n-        final RsStatus status = RsStatus.OK;\n-        final Response origin = new RsWithStatus(RsStatus.OK);\n+    void toStringRsWithStatus() {\n         MatcherAssert.assertThat(\n-            new RsWithStatus(origin, status).toString(),\n-            new IsEqual<>(\"RsWithStatus{status=OK, origin=RsWithStatus{status=OK, origin=EMPTY}}\")\n+            new RsWithStatus(RsStatus.OK).toString(),\n+            new IsEqual<>(\"RsWithStatus{status=OK, origin=EMPTY}\")\n         );\n     }\n \n"}}, {"oid": "3e1ce7b6af8e0bfa2d8a636a23311951822c84d6", "url": "https://github.com/artipie/http/commit/3e1ce7b6af8e0bfa2d8a636a23311951822c84d6", "message": "Corrections", "committedDate": "2020-05-28T13:06:50Z", "type": "commit"}, {"oid": "f7c68e9c4dcb41bb2d4dd217e3dd8e4f1f162c62", "url": "https://github.com/artipie/http/commit/f7c68e9c4dcb41bb2d4dd217e3dd8e4f1f162c62", "message": "Update gitlinter.yaml", "committedDate": "2020-05-28T13:14:06Z", "type": "commit"}, {"oid": "c41e8243d2855d9c0575d5a4fe0e06c7c8d6eeff", "url": "https://github.com/artipie/http/commit/c41e8243d2855d9c0575d5a4fe0e06c7c8d6eeff", "message": "Delete ResponseMatcher.java", "committedDate": "2020-05-28T13:15:51Z", "type": "commit"}, {"oid": "1a07ee10254c1167befc2369b3371334cdffe90a", "url": "https://github.com/artipie/http/commit/1a07ee10254c1167befc2369b3371334cdffe90a", "message": "Delete ResponseMatcherTest.java", "committedDate": "2020-05-28T13:16:10Z", "type": "commit"}, {"oid": "31f518d03c4aa01187f410b532561527d307434c", "url": "https://github.com/artipie/http/commit/31f518d03c4aa01187f410b532561527d307434c", "message": "Update SliceDownloadTest.java", "committedDate": "2020-05-28T13:21:13Z", "type": "commit"}, {"oid": "5b364e587775006d6f04446da8a007094d76e251", "url": "https://github.com/artipie/http/commit/5b364e587775006d6f04446da8a007094d76e251", "message": "Update RsWithBodyTest.java", "committedDate": "2020-05-28T13:31:16Z", "type": "commit"}, {"oid": "3989c9afb7a8abb2652bf13feb3228bebf546a8c", "url": "https://github.com/artipie/http/commit/3989c9afb7a8abb2652bf13feb3228bebf546a8c", "message": "Merge branch 'master' into 144", "committedDate": "2020-05-29T09:21:17Z", "type": "commit"}, {"oid": "5be5f463be62ef0bf6a6dcf135be73f16d322c24", "url": "https://github.com/artipie/http/commit/5be5f463be62ef0bf6a6dcf135be73f16d322c24", "message": "Merge branch 'master' into 144", "committedDate": "2020-05-29T09:26:37Z", "type": "commit"}, {"oid": "f6ff1c132cbc94e6e67bdffbee969a237638b07c", "url": "https://github.com/artipie/http/commit/f6ff1c132cbc94e6e67bdffbee969a237638b07c", "message": "Merge branch 'master' into 144", "committedDate": "2020-05-29T13:48:20Z", "type": "commit"}]}