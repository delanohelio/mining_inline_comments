{"pr_number": 44, "pr_title": "Added RsMethod class with all HTTP methods", "pr_createdAt": "2020-02-19T12:05:12Z", "pr_url": "https://github.com/artipie/http/pull/44", "timeline": [{"oid": "91407ffdf881dad3cb16754a1db41ae6f7fbc971", "url": "https://github.com/artipie/http/commit/91407ffdf881dad3cb16754a1db41ae6f7fbc971", "message": "Added RsMethod class with all HTTP methods", "committedDate": "2020-02-20T12:45:13Z", "type": "forcePushed"}, {"oid": "68ecc32aed9f8d856ee3fbf305cfaa1929e83d5a", "url": "https://github.com/artipie/http/commit/68ecc32aed9f8d856ee3fbf305cfaa1929e83d5a", "message": "Added RsMethod class with all HTTP methods", "committedDate": "2020-02-21T08:46:51Z", "type": "forcePushed"}, {"oid": "98f9b36f415fce668291e9321b973c302025282b", "url": "https://github.com/artipie/http/commit/98f9b36f415fce668291e9321b973c302025282b", "message": "Added RsMethod class with all HTTP methods", "committedDate": "2020-02-25T13:41:01Z", "type": "commit"}, {"oid": "98f9b36f415fce668291e9321b973c302025282b", "url": "https://github.com/artipie/http/commit/98f9b36f415fce668291e9321b973c302025282b", "message": "Added RsMethod class with all HTTP methods", "committedDate": "2020-02-25T13:41:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0NDc1MA==", "url": "https://github.com/artipie/http/pull/44#discussion_r384244750", "bodyText": "@olegmoz let's make this an enum instead of a bunch of constants.", "author": "carlosmiranda", "createdAt": "2020-02-26T02:32:40Z", "path": "src/main/java/com/artipie/http/rq/RqMethod.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rq;\n+\n+/**\n+ * HTTP request method.\n+ * See <a href=\"https://tools.ietf.org/html/rfc2616#section-5.1.1\">RFC 2616 5.1.1 Method</a>\n+ *\n+ * @since 0.4\n+ */\n+public final class RqMethod {", "originalCommit": "98f9b36f415fce668291e9321b973c302025282b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2a9010c09808d5f891ea5aa74e039874cde557e4", "chunk": "diff --git a/src/main/java/com/artipie/http/rq/RqMethod.java b/src/main/java/com/artipie/http/rq/RqMethod.java\nindex e3ac499..2bbac0d 100644\n--- a/src/main/java/com/artipie/http/rq/RqMethod.java\n+++ b/src/main/java/com/artipie/http/rq/RqMethod.java\n\n@@ -23,53 +23,61 @@\n  */\n package com.artipie.http.rq;\n \n+import java.util.EnumSet;\n+import java.util.Set;\n+\n /**\n  * HTTP request method.\n  * See <a href=\"https://tools.ietf.org/html/rfc2616#section-5.1.1\">RFC 2616 5.1.1 Method</a>\n  *\n  * @since 0.4\n  */\n-public final class RqMethod {\n+public enum RqMethod {\n \n     /**\n      * OPTIONS.\n      */\n-    public static final RqMethod OPTIONS = new RqMethod(\"OPTIONS\");\n+    OPTIONS(\"OPTIONS\"),\n \n     /**\n      * GET.\n      */\n-    public static final RqMethod GET = new RqMethod(\"GET\");\n+    GET(\"GET\"),\n \n     /**\n      * HEAD.\n      */\n-    public static final RqMethod HEAD = new RqMethod(\"HEAD\");\n+    HEAD(\"HEAD\"),\n \n     /**\n      * POST.\n      */\n-    public static final RqMethod POST = new RqMethod(\"POST\");\n+    POST(\"POST\"),\n \n     /**\n      * PUT.\n      */\n-    public static final RqMethod PUT = new RqMethod(\"PUT\");\n+    PUT(\"PUT\"),\n \n     /**\n      * DELETE.\n      */\n-    public static final RqMethod DELETE = new RqMethod(\"DELETE\");\n+    DELETE(\"DELETE\"),\n \n     /**\n      * TRACE.\n      */\n-    public static final RqMethod TRACE = new RqMethod(\"TRACE\");\n+    TRACE(\"TRACE\"),\n \n     /**\n      * CONNECT.\n      */\n-    public static final RqMethod CONNECT = new RqMethod(\"CONNECT\");\n+    CONNECT(\"CONNECT\");\n+\n+    /**\n+     * Set of all existing methods.\n+     */\n+    public static final Set<RqMethod> ALL = EnumSet.allOf(RqMethod.class);\n \n     /**\n      * String value.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0NTc3NA==", "url": "https://github.com/artipie/http/pull/44#discussion_r384245774", "bodyText": "@olegmoz Once we change RqMethod into an enum, let's:\n\nMake this into an EnumSet. e.g. EnumSet.of(RqMethod.OPTIONS, RqMethod.GET...)\nMove methods into a final static field - it should not need to be initialized every time we call method().", "author": "carlosmiranda", "createdAt": "2020-02-26T02:36:50Z", "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -60,8 +62,19 @@ public RequestLineFrom(final String line) {\n      * Request method.\n      * @return Method name\n      */\n-    public String method() {\n-        return this.part(0);\n+    public RqMethod method() {\n+        final Collection<RqMethod> methods = Arrays.asList(", "originalCommit": "98f9b36f415fce668291e9321b973c302025282b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2a9010c09808d5f891ea5aa74e039874cde557e4", "chunk": "diff --git a/src/main/java/com/artipie/http/rq/RequestLineFrom.java b/src/main/java/com/artipie/http/rq/RequestLineFrom.java\nindex 84f2b50..44bb9d6 100644\n--- a/src/main/java/com/artipie/http/rq/RequestLineFrom.java\n+++ b/src/main/java/com/artipie/http/rq/RequestLineFrom.java\n\n@@ -63,12 +61,8 @@ public final class RequestLineFrom {\n      * @return Method name\n      */\n     public RqMethod method() {\n-        final Collection<RqMethod> methods = Arrays.asList(\n-            RqMethod.OPTIONS, RqMethod.GET, RqMethod.HEAD, RqMethod.POST, RqMethod.PUT,\n-            RqMethod.DELETE, RqMethod.TRACE, RqMethod.CONNECT\n-        );\n         final String string = this.part(0);\n-        return methods\n+        return RqMethod.ALL\n             .stream()\n             .filter(method -> method.value().equals(string))\n             .findAny()\n"}}, {"oid": "2a9010c09808d5f891ea5aa74e039874cde557e4", "url": "https://github.com/artipie/http/commit/2a9010c09808d5f891ea5aa74e039874cde557e4", "message": "Changed RsMethod to be enum", "committedDate": "2020-02-26T08:37:40Z", "type": "commit"}]}