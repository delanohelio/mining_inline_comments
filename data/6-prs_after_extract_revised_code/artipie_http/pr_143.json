{"pr_number": 143, "pr_title": "For #37 test for RsWithBody", "pr_createdAt": "2020-05-06T18:07:38Z", "pr_url": "https://github.com/artipie/http/pull/143", "timeline": [{"oid": "a0647b13b4da500792a294a4a0f15662a2976129", "url": "https://github.com/artipie/http/commit/a0647b13b4da500792a294a4a0f15662a2976129", "message": "For #37 test for RsWithBody", "committedDate": "2020-05-06T18:06:36Z", "type": "commit"}, {"oid": "b7b73c1ca06fbe22e1e17aeae055a58e03a8ead7", "url": "https://github.com/artipie/http/commit/b7b73c1ca06fbe22e1e17aeae055a58e03a8ead7", "message": "#37 added jacoco", "committedDate": "2020-05-07T06:01:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcxMDEwMw==", "url": "https://github.com/artipie/http/pull/143#discussion_r421710103", "bodyText": "@olenagerasimova this can be simplified to:\nMatchers.allOf(\n  new RsHasBody(body.getBytes()),\n  new RsHasStatus(RsStatus.OK)\n)", "author": "Vatavuk", "createdAt": "2020-05-07T18:32:24Z", "path": "src/test/java/com/artipie/http/rs/RsWithBodyTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.hm.RsHasBody;\n+import com.artipie.http.hm.RsHasStatus;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.AllOf;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link RsWithBody}.\n+ * @since 0.9\n+ */\n+final class RsWithBodyTest {\n+\n+    @Test\n+    void createsOkWithBody() {\n+        final byte[] body = \"abc\".getBytes();\n+        MatcherAssert.assertThat(\n+            new RsWithBody(ByteBuffer.wrap(body)),\n+            new AllOf<>(", "originalCommit": "b7b73c1ca06fbe22e1e17aeae055a58e03a8ead7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b07ce0330ac42fb0bcc431de3fccdb65480d44a", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\nindex f654369..8e6d623 100644\n--- a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n+++ b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n\n@@ -27,10 +27,8 @@ import com.artipie.http.hm.RsHasBody;\n import com.artipie.http.hm.RsHasStatus;\n import java.nio.ByteBuffer;\n import java.nio.charset.StandardCharsets;\n-import org.cactoos.list.ListOf;\n-import org.hamcrest.Matcher;\n import org.hamcrest.MatcherAssert;\n-import org.hamcrest.core.AllOf;\n+import org.hamcrest.Matchers;\n import org.junit.jupiter.api.Test;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcxMDM3OA==", "url": "https://github.com/artipie/http/pull/143#discussion_r421710378", "bodyText": "@olenagerasimova same as in previous comment", "author": "Vatavuk", "createdAt": "2020-05-07T18:32:53Z", "path": "src/test/java/com/artipie/http/rs/RsWithBodyTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.hm.RsHasBody;\n+import com.artipie.http.hm.RsHasStatus;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.AllOf;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link RsWithBody}.\n+ * @since 0.9\n+ */\n+final class RsWithBodyTest {\n+\n+    @Test\n+    void createsOkWithBody() {\n+        final byte[] body = \"abc\".getBytes();\n+        MatcherAssert.assertThat(\n+            new RsWithBody(ByteBuffer.wrap(body)),\n+            new AllOf<>(\n+                new ListOf<Matcher<? super RsWithBody>>(\n+                    new RsHasBody(body),\n+                    new RsHasStatus(RsStatus.OK)\n+                )\n+            )\n+        );\n+    }\n+\n+    @Test\n+    void appendsBody() {\n+        final String body = \"def\";\n+        MatcherAssert.assertThat(\n+            new RsWithBody(new RsWithStatus(RsStatus.CREATED), body, StandardCharsets.UTF_8),\n+            new AllOf<>(", "originalCommit": "b7b73c1ca06fbe22e1e17aeae055a58e03a8ead7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b07ce0330ac42fb0bcc431de3fccdb65480d44a", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\nindex f654369..8e6d623 100644\n--- a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n+++ b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n\n@@ -27,10 +27,8 @@ import com.artipie.http.hm.RsHasBody;\n import com.artipie.http.hm.RsHasStatus;\n import java.nio.ByteBuffer;\n import java.nio.charset.StandardCharsets;\n-import org.cactoos.list.ListOf;\n-import org.hamcrest.Matcher;\n import org.hamcrest.MatcherAssert;\n-import org.hamcrest.core.AllOf;\n+import org.hamcrest.Matchers;\n import org.junit.jupiter.api.Test;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczMTcwMw==", "url": "https://github.com/artipie/http/pull/143#discussion_r421731703", "bodyText": "@olenagerasimova test name is not clear, can you rephrase it", "author": "Vatavuk", "createdAt": "2020-05-07T19:10:15Z", "path": "src/test/java/com/artipie/http/rs/RsWithBodyTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.hm.RsHasBody;\n+import com.artipie.http.hm.RsHasStatus;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.AllOf;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link RsWithBody}.\n+ * @since 0.9\n+ */\n+final class RsWithBodyTest {\n+\n+    @Test\n+    void createsOkWithBody() {", "originalCommit": "b7b73c1ca06fbe22e1e17aeae055a58e03a8ead7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9b07ce0330ac42fb0bcc431de3fccdb65480d44a", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\nindex f654369..8e6d623 100644\n--- a/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n+++ b/src/test/java/com/artipie/http/rs/RsWithBodyTest.java\n\n@@ -27,10 +27,8 @@ import com.artipie.http.hm.RsHasBody;\n import com.artipie.http.hm.RsHasStatus;\n import java.nio.ByteBuffer;\n import java.nio.charset.StandardCharsets;\n-import org.cactoos.list.ListOf;\n-import org.hamcrest.Matcher;\n import org.hamcrest.MatcherAssert;\n-import org.hamcrest.core.AllOf;\n+import org.hamcrest.Matchers;\n import org.junit.jupiter.api.Test;\n \n /**\n"}}, {"oid": "9b07ce0330ac42fb0bcc431de3fccdb65480d44a", "url": "https://github.com/artipie/http/commit/9b07ce0330ac42fb0bcc431de3fccdb65480d44a", "message": "#37 CR", "committedDate": "2020-05-08T05:11:31Z", "type": "commit"}, {"oid": "7c4349a44e1bc647cc27b6a31f65ae27e726741c", "url": "https://github.com/artipie/http/commit/7c4349a44e1bc647cc27b6a31f65ae27e726741c", "message": "Merge branch 'master' into 37", "committedDate": "2020-05-08T06:41:14Z", "type": "commit"}, {"oid": "81b89665af826fde8559237e8ba689afd01ac58e", "url": "https://github.com/artipie/http/commit/81b89665af826fde8559237e8ba689afd01ac58e", "message": "#37 fix xcop", "committedDate": "2020-05-08T07:22:18Z", "type": "commit"}]}