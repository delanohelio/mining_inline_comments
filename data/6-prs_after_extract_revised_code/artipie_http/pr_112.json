{"pr_number": 112, "pr_title": "Basic Auth, tests", "pr_createdAt": "2020-04-08T12:41:36Z", "pr_url": "https://github.com/artipie/http/pull/112", "timeline": [{"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997", "url": "https://github.com/artipie/http/commit/e3422cd5e3b2004c9044bed22b8abf5996b21997", "message": "Issue12: Basic Auth, tests", "committedDate": "2020-04-08T12:31:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzA2Nw==", "url": "https://github.com/artipie/http/pull/112#discussion_r407217067", "bodyText": "@IlyaMoskva use regex matching to extract username and password instead of string manipulation. This will be more readable and less verbose.", "author": "Vatavuk", "createdAt": "2020-04-12T15:55:16Z", "path": "src/main/java/com/artipie/http/auth/BasicIdentities.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import com.artipie.http.rq.RqHeaders;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.text.Base64Decoded;\n+\n+/**\n+ * BasicIdentities. Implementation of {@link Identities} for Basic authorization.\n+ *\n+ * @since 0.8\n+ * @checkstyle NestedIfDepthCheck (500 lines)\n+ */\n+public final class BasicIdentities implements Identities {\n+\n+    /**\n+     * Concrete implementation for User Identification.\n+     */\n+    private final IdentityProvider idprovider;\n+\n+    /**\n+     * Ctor.\n+     * @param idprovider Concrete implementation for User Identification.\n+     */\n+    BasicIdentities(final IdentityProvider idprovider) {\n+        this.idprovider = idprovider;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"PMD.AvoidDeeplyNestedIfStmts\")\n+    public Optional<String> user(final String line,\n+        final Iterable<Map.Entry<String, String>> headers) {\n+        final String prefix = \"Basic \";\n+        Optional<String> result = Optional.empty();\n+        final RqHeaders hdrs = new RqHeaders(headers, \"Authorization\");\n+        if (!hdrs.isEmpty()) {\n+            final String cred = hdrs.get(0);\n+            if (cred.startsWith(prefix)) {\n+                final String credentials =\n+                    new Base64Decoded(cred.substring(prefix.length())).toString();\n+                final int delimiter = credentials.indexOf(':');", "originalCommit": "e3422cd5e3b2004c9044bed22b8abf5996b21997", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTAzNQ==", "url": "https://github.com/artipie/http/pull/112#discussion_r407591035", "bodyText": "Fixed, thanks", "author": "IlyaMoskva", "createdAt": "2020-04-13T17:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzA2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "7092da36a71b658010d92240b382415195d27100", "chunk": "diff --git a/src/main/java/com/artipie/http/auth/BasicIdentities.java b/src/main/java/com/artipie/http/auth/BasicIdentities.java\nindex 7c2b6f2..b1d5813 100644\n--- a/src/main/java/com/artipie/http/auth/BasicIdentities.java\n+++ b/src/main/java/com/artipie/http/auth/BasicIdentities.java\n\n@@ -39,14 +39,14 @@ public final class BasicIdentities implements Identities {\n     /**\n      * Concrete implementation for User Identification.\n      */\n-    private final IdentityProvider idprovider;\n+    private final Authentication auth;\n \n     /**\n      * Ctor.\n-     * @param idprovider Concrete implementation for User Identification.\n+     * @param auth Concrete implementation for User Identification.\n      */\n-    BasicIdentities(final IdentityProvider idprovider) {\n-        this.idprovider = idprovider;\n+    BasicIdentities(final Authentication auth) {\n+        this.auth = auth;\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzI3MA==", "url": "https://github.com/artipie/http/pull/112#discussion_r407217270", "bodyText": "@IlyaMoskva why login? why not just username?", "author": "Vatavuk", "createdAt": "2020-04-12T15:57:30Z", "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {\n+\n+    /**\n+     * Check does user exist.\n+     * @param login Username\n+     * @param password Base64 encoded password\n+     */\n+    void verify(String login, String password);", "originalCommit": "e3422cd5e3b2004c9044bed22b8abf5996b21997", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTE2Ng==", "url": "https://github.com/artipie/http/pull/112#discussion_r407591166", "bodyText": "Good catch, fixed", "author": "IlyaMoskva", "createdAt": "2020-04-13T17:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzI3MA=="}], "type": "inlineReview", "revised_code": {"commit": "7092da36a71b658010d92240b382415195d27100", "chunk": "diff --git a/src/main/java/com/artipie/http/auth/IdentityProvider.java b/src/main/java/com/artipie/http/auth/Authentication.java\nsimilarity index 88%\nrename from src/main/java/com/artipie/http/auth/IdentityProvider.java\nrename to src/main/java/com/artipie/http/auth/Authentication.java\nindex effabf6..1b15aa7 100644\n--- a/src/main/java/com/artipie/http/auth/IdentityProvider.java\n+++ b/src/main/java/com/artipie/http/auth/Authentication.java\n\n@@ -24,16 +24,16 @@\n package com.artipie.http.auth;\n \n /**\n- * Authorization mechanism to verify user.\n+ * Authentication mechanism to verify user.\n  * @since 0.6\n  */\n-public interface IdentityProvider {\n+public interface Authentication {\n \n     /**\n      * Check does user exist.\n-     * @param login Username\n+     * @param username Username\n      * @param password Base64 encoded password\n      */\n-    void verify(String login, String password);\n+    void verify(String username, String password);\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzUwNQ==", "url": "https://github.com/artipie/http/pull/112#discussion_r407217505", "bodyText": "@IlyaMoskva It's ugly name, provider suffix is redundant. Every class provides something. How about simple Authentication or UserVerification or something like that.", "author": "Vatavuk", "createdAt": "2020-04-12T15:59:27Z", "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {", "originalCommit": "e3422cd5e3b2004c9044bed22b8abf5996b21997", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTM2Mg==", "url": "https://github.com/artipie/http/pull/112#discussion_r407591362", "bodyText": "hm... Ok, You're right. Fixed", "author": "IlyaMoskva", "createdAt": "2020-04-13T17:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7092da36a71b658010d92240b382415195d27100", "chunk": "diff --git a/src/main/java/com/artipie/http/auth/IdentityProvider.java b/src/main/java/com/artipie/http/auth/Authentication.java\nsimilarity index 88%\nrename from src/main/java/com/artipie/http/auth/IdentityProvider.java\nrename to src/main/java/com/artipie/http/auth/Authentication.java\nindex effabf6..1b15aa7 100644\n--- a/src/main/java/com/artipie/http/auth/IdentityProvider.java\n+++ b/src/main/java/com/artipie/http/auth/Authentication.java\n\n@@ -24,16 +24,16 @@\n package com.artipie.http.auth;\n \n /**\n- * Authorization mechanism to verify user.\n+ * Authentication mechanism to verify user.\n  * @since 0.6\n  */\n-public interface IdentityProvider {\n+public interface Authentication {\n \n     /**\n      * Check does user exist.\n-     * @param login Username\n+     * @param username Username\n      * @param password Base64 encoded password\n      */\n-    void verify(String login, String password);\n+    void verify(String username, String password);\n \n }\n"}}, {"oid": "7092da36a71b658010d92240b382415195d27100", "url": "https://github.com/artipie/http/commit/7092da36a71b658010d92240b382415195d27100", "message": "Auth: Fix after CR", "committedDate": "2020-04-13T17:02:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3Nzk0Ng==", "url": "https://github.com/artipie/http/pull/112#discussion_r407677946", "bodyText": "@IlyaMoskva since 0.8", "author": "Vatavuk", "createdAt": "2020-04-13T19:44:19Z", "path": "src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.iterable.IterableOf;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link BasicIdentities}.\n+ *\n+ * @since 0.6", "originalCommit": "7092da36a71b658010d92240b382415195d27100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NDg1Mw==", "url": "https://github.com/artipie/http/pull/112#discussion_r407684853", "bodyText": "Fixed", "author": "IlyaMoskva", "createdAt": "2020-04-13T19:57:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3Nzk0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "2ab528be8cb78f7903ea554fad7f1a1957b320ca", "chunk": "diff --git a/src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java b/src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java\nindex 488e3d8..aff9141 100644\n--- a/src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java\n+++ b/src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java\n\n@@ -34,7 +34,7 @@ import org.junit.jupiter.api.Test;\n /**\n  * Test case for {@link BasicIdentities}.\n  *\n- * @since 0.6\n+ * @since 0.8\n  */\n @SuppressWarnings(\"PMD.AvoidDeeplyNestedIfStmts\")\n class BasicIdentitiesTest {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA2Mg==", "url": "https://github.com/artipie/http/pull/112#discussion_r407678062", "bodyText": "@IlyaMoskva since 0.8", "author": "Vatavuk", "createdAt": "2020-04-13T19:44:34Z", "path": "src/main/java/com/artipie/http/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authentication mechanism to verify user.\n+ * @since 0.6", "originalCommit": "7092da36a71b658010d92240b382415195d27100", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NDk2Mw==", "url": "https://github.com/artipie/http/pull/112#discussion_r407684963", "bodyText": "Fixed", "author": "IlyaMoskva", "createdAt": "2020-04-13T19:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2ab528be8cb78f7903ea554fad7f1a1957b320ca", "chunk": "diff --git a/src/main/java/com/artipie/http/auth/Authentication.java b/src/main/java/com/artipie/http/auth/Authentication.java\nindex 1b15aa7..e864517 100644\n--- a/src/main/java/com/artipie/http/auth/Authentication.java\n+++ b/src/main/java/com/artipie/http/auth/Authentication.java\n\n@@ -25,7 +25,7 @@ package com.artipie.http.auth;\n \n /**\n  * Authentication mechanism to verify user.\n- * @since 0.6\n+ * @since 0.8\n  */\n public interface Authentication {\n \n"}}, {"oid": "2ab528be8cb78f7903ea554fad7f1a1957b320ca", "url": "https://github.com/artipie/http/commit/2ab528be8cb78f7903ea554fad7f1a1957b320ca", "message": "Auth: version 0.6->0.8", "committedDate": "2020-04-13T19:56:31Z", "type": "commit"}, {"oid": "52dddcc7e7ea2a0e6caa2edc852758731f9a3feb", "url": "https://github.com/artipie/http/commit/52dddcc7e7ea2a0e6caa2edc852758731f9a3feb", "message": "Auth: typed array to avoid warning.", "committedDate": "2020-04-14T10:43:21Z", "type": "commit"}, {"oid": "e79a979ea078e530fb4c602327db1532bee0e6bd", "url": "https://github.com/artipie/http/commit/e79a979ea078e530fb4c602327db1532bee0e6bd", "message": "Auth: varargs", "committedDate": "2020-04-14T13:04:58Z", "type": "commit"}]}