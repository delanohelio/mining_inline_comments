{"pr_number": 179, "pr_title": "#174 - Added ContentType header class", "pr_createdAt": "2020-06-18T13:10:35Z", "pr_url": "https://github.com/artipie/http/pull/179", "timeline": [{"oid": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "url": "https://github.com/artipie/http/commit/ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "message": "#174 - Added ContentType header class", "committedDate": "2020-06-18T11:22:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzOTkzOA==", "url": "https://github.com/artipie/http/pull/179#discussion_r442239938", "bodyText": "@olegmoz since 0.11", "author": "Vatavuk", "createdAt": "2020-06-18T13:49:11Z", "path": "src/main/java/com/artipie/http/rs/ContentType.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.rq.RqHeaders;\n+\n+/**\n+ * Content-Type header.\n+ *\n+ * @since 0.10", "originalCommit": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39412ecae845800b1bd5ed861f2eec6437b1468b", "chunk": "diff --git a/src/main/java/com/artipie/http/rs/ContentType.java b/src/main/java/com/artipie/http/rs/ContentType.java\nindex 5621878..8c1f0db 100644\n--- a/src/main/java/com/artipie/http/rs/ContentType.java\n+++ b/src/main/java/com/artipie/http/rs/ContentType.java\n\n@@ -29,7 +29,7 @@ import com.artipie.http.rq.RqHeaders;\n /**\n  * Content-Type header.\n  *\n- * @since 0.10\n+ * @since 0.11\n  */\n public final class ContentType extends Header.Wrap {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MDIxMg==", "url": "https://github.com/artipie/http/pull/179#discussion_r442240212", "bodyText": "@olegmoz since 0.11", "author": "Vatavuk", "createdAt": "2020-06-18T13:49:32Z", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10", "originalCommit": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39412ecae845800b1bd5ed861f2eec6437b1468b", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/ContentTypeTest.java b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\nindex 253191e..cc5f913 100644\n--- a/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n+++ b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n\n@@ -32,7 +32,7 @@ import org.junit.jupiter.api.Test;\n /**\n  * Test case for {@link ContentType}.\n  *\n- * @since 0.10\n+ * @since 0.11\n  */\n public final class ContentTypeTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MDc5NQ==", "url": "https://github.com/artipie/http/pull/179#discussion_r442240795", "bodyText": "@olegmoz let's add one test that will extract content type when multiple Content-Type headers exist", "author": "Vatavuk", "createdAt": "2020-06-18T13:50:17Z", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10\n+ */\n+public final class ContentTypeTest {\n+\n+    @Test\n+    void shouldHaveExpectedName() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getKey(),\n+            new IsEqual<>(\"Content-Type\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldHaveExpectedValue() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getValue(),\n+            new IsEqual<>(\"10\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldExtractValueFromHeaders() {", "originalCommit": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39412ecae845800b1bd5ed861f2eec6437b1468b", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/ContentTypeTest.java b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\nindex 253191e..cc5f913 100644\n--- a/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n+++ b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n\n@@ -32,7 +32,7 @@ import org.junit.jupiter.api.Test;\n /**\n  * Test case for {@link ContentType}.\n  *\n- * @since 0.10\n+ * @since 0.11\n  */\n public final class ContentTypeTest {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MjIxMw==", "url": "https://github.com/artipie/http/pull/179#discussion_r442242213", "bodyText": "@olegmoz add one test that will fail to extract content type when there exist at least one header of different type.", "author": "Vatavuk", "createdAt": "2020-06-18T13:52:05Z", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10\n+ */\n+public final class ContentTypeTest {\n+\n+    @Test\n+    void shouldHaveExpectedName() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getKey(),\n+            new IsEqual<>(\"Content-Type\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldHaveExpectedValue() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getValue(),\n+            new IsEqual<>(\"10\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldExtractValueFromHeaders() {\n+        final String value = \"application/octet-stream\";\n+        final ContentType header = new ContentType(\n+            new Headers.From(\n+                new Header(\"Content-Length\", \"11\"),\n+                new Header(\"content-type\", value),\n+                new Header(\"X-Something\", \"Some Value\")\n+            )\n+        );\n+        MatcherAssert.assertThat(header.getValue(), new IsEqual<>(value));\n+    }\n+\n+    @Test\n+    void shouldFailToExtractValueFromEmptyHeaders() {", "originalCommit": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39412ecae845800b1bd5ed861f2eec6437b1468b", "chunk": "diff --git a/src/test/java/com/artipie/http/rs/ContentTypeTest.java b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\nindex 253191e..cc5f913 100644\n--- a/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n+++ b/src/test/java/com/artipie/http/rs/ContentTypeTest.java\n\n@@ -32,7 +32,7 @@ import org.junit.jupiter.api.Test;\n /**\n  * Test case for {@link ContentType}.\n  *\n- * @since 0.10\n+ * @since 0.11\n  */\n public final class ContentTypeTest {\n \n"}}, {"oid": "39412ecae845800b1bd5ed861f2eec6437b1468b", "url": "https://github.com/artipie/http/commit/39412ecae845800b1bd5ed861f2eec6437b1468b", "message": "#174 - Changes by review", "committedDate": "2020-06-18T14:34:32Z", "type": "commit"}]}