{"pr_number": 264, "pr_title": "QFJ-905 - adding support for MULTIPLECHARVALUE", "pr_createdAt": "2020-03-11T08:41:09Z", "pr_url": "https://github.com/quickfix-j/quickfixj/pull/264", "timeline": [{"oid": "b447fa2d09b6b8379edb158956e2b0f32fc0c3a5", "url": "https://github.com/quickfix-j/quickfixj/commit/b447fa2d09b6b8379edb158956e2b0f32fc0c3a5", "message": "QFJ-905 - adding support for MULTIPLECHARVALUE", "committedDate": "2020-03-10T19:10:27Z", "type": "commit"}, {"oid": "b51aefef17fc3089fdc0d84e4f950fc185aba0a6", "url": "https://github.com/quickfix-j/quickfixj/commit/b51aefef17fc3089fdc0d84e4f950fc185aba0a6", "message": "QFJ-905 changed wildcard imports to single class imports", "committedDate": "2020-03-17T12:06:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDA5MQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394000091", "bodyText": "I am asking myself if we could use String.join() or respectively StringJoiner here.  We can also pass a delimiter there and hence would not need the loop and the code would be cleaner. What do you think?", "author": "chrjohn", "createdAt": "2020-03-17T22:11:39Z", "path": "quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package quickfix.field.converter;\n+\n+import quickfix.FieldConvertError;\n+\n+/**\n+ * Converts between character array and string.\n+ */\n+public class CharArrayConverter {\n+\n+    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";\n+\n+    public static String convert(char... chars) {\n+        if (chars.length == 0) {\n+            throw new IllegalArgumentException(\"empty character array\");\n+        }\n+\n+        StringBuilder builder = new StringBuilder(chars.length * 2 - 1);\n+        builder.append(chars[0]);", "originalCommit": "b51aefef17fc3089fdc0d84e4f950fc185aba0a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMzgwMw==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394003803", "bodyText": "OK, just realized that we would need to convert the char to CharSequence or wrap it in String.valueOf( char ) then.", "author": "chrjohn", "createdAt": "2020-03-17T22:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NTMyNQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394195325", "bodyText": "I was thinking about the same, but StringBuilder was better.", "author": "the-thing", "createdAt": "2020-03-18T09:06:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzOTgwOQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394239809", "bodyText": "Because of the needed char to String conversion? Or because of other reasons?", "author": "chrjohn", "createdAt": "2020-03-18T10:20:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDA5MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI4MTA2Mw==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394281063", "bodyText": "Yes - because java.util.StringJoiner#add requires java.lang.CharSequence", "author": "the-thing", "createdAt": "2020-03-18T11:35:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwMDA5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "chunk": "diff --git a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\nindex 6294fc98..174483e4 100644\n--- a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n+++ b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n\n@@ -2,12 +2,14 @@ package quickfix.field.converter;\n \n import quickfix.FieldConvertError;\n \n+import java.util.Arrays;\n+\n /**\n  * Converts between character array and string.\n  */\n public class CharArrayConverter {\n \n-    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";\n+    private static final String CHAR_ARRAY_REGEX = \"\\\\S( \\\\S)*\";\n \n     public static String convert(char... chars) {\n         if (chars.length == 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwNTMzOA==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394005338", "bodyText": "We could use a Matcher here and re-use the Pattern. OTOH this would not be thread-safe anymore and we would need synchronization or ThreadLocal. Probably not worth to be changed.", "author": "chrjohn", "createdAt": "2020-03-17T22:24:47Z", "path": "quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package quickfix.field.converter;\n+\n+import quickfix.FieldConvertError;\n+\n+/**\n+ * Converts between character array and string.\n+ */\n+public class CharArrayConverter {\n+\n+    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";\n+\n+    public static String convert(char... chars) {\n+        if (chars.length == 0) {\n+            throw new IllegalArgumentException(\"empty character array\");\n+        }\n+\n+        StringBuilder builder = new StringBuilder(chars.length * 2 - 1);\n+        builder.append(chars[0]);\n+\n+        for (int i = 1; i < chars.length; i++) {\n+            builder.append(' ').append(chars[i]);\n+        }\n+\n+        return builder.toString();\n+    }\n+\n+    public static char[] convert(String value) throws FieldConvertError {\n+        if (!value.matches(CHAR_ARRAY_REGEX)) {", "originalCommit": "b51aefef17fc3089fdc0d84e4f950fc185aba0a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NDk2Mg==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r394194962", "bodyText": "Yes. Matchers are thread safe, but patterns are not so at the end we still have to create local pattern which is essentially what String class does. Garbage creation in QuickFIX is probably one of the biggest complaint people make, but this probably requires refactoring in other places more.", "author": "the-thing", "createdAt": "2020-03-18T09:05:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwNTMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "chunk": "diff --git a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\nindex 6294fc98..174483e4 100644\n--- a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n+++ b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n\n@@ -2,12 +2,14 @@ package quickfix.field.converter;\n \n import quickfix.FieldConvertError;\n \n+import java.util.Arrays;\n+\n /**\n  * Converts between character array and string.\n  */\n public class CharArrayConverter {\n \n-    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";\n+    private static final String CHAR_ARRAY_REGEX = \"\\\\S( \\\\S)*\";\n \n     public static String convert(char... chars) {\n         if (chars.length == 0) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5MTE1OQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r395191159", "bodyText": "I think this regex needs to be changed to comply to the definition as per the FIX spec of character since it would not match punctuation: https://fiximate.fixtrading.org/en/FIX.5.0SP2_EP255/fix_datatypes.html\n\nSingle character value, can include any alphanumeric character or punctuation except the delimiter. All char fields are case sensitive (i.e. m != M).\n\nTBH there seems to be no field which has a char value which would not match that regex. However, I think we should adhere to the spec here.", "author": "chrjohn", "createdAt": "2020-03-19T17:17:43Z", "path": "quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package quickfix.field.converter;\n+\n+import quickfix.FieldConvertError;\n+\n+/**\n+ * Converts between character array and string.\n+ */\n+public class CharArrayConverter {\n+\n+    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";", "originalCommit": "b51aefef17fc3089fdc0d84e4f950fc185aba0a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwMDY2Mg==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r395300662", "bodyText": "\"Single character value, can include any alphanumeric character or punctuation except the delimiter. All char fields are case sensitive (i.e. m != M).\"\nIt would make sens that a char is any ascii char at the end, except the | delimiter of course...", "author": "charlesbr1", "createdAt": "2020-03-19T20:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5MTE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMwNzMzMQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/264#discussion_r395307331", "bodyText": "Have a look at the latest commit guys. I added more specific test cases and I think that's what you both guys proposing.\nI kept the separator to single space character because quickfix.DataDictionary#isFieldValue supports it.", "author": "the-thing", "createdAt": "2020-03-19T20:41:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE5MTE1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "chunk": "diff --git a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\nindex 6294fc98..174483e4 100644\n--- a/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n+++ b/quickfixj-core/src/main/java/quickfix/field/converter/CharArrayConverter.java\n\n@@ -2,12 +2,14 @@ package quickfix.field.converter;\n \n import quickfix.FieldConvertError;\n \n+import java.util.Arrays;\n+\n /**\n  * Converts between character array and string.\n  */\n public class CharArrayConverter {\n \n-    private static final String CHAR_ARRAY_REGEX = \"[A-Za-z0-9]( [A-Za-z0-9])*\";\n+    private static final String CHAR_ARRAY_REGEX = \"\\\\S( \\\\S)*\";\n \n     public static String convert(char... chars) {\n         if (chars.length == 0) {\n"}}, {"oid": "8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "url": "https://github.com/quickfix-j/quickfixj/commit/8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "message": "QFJ-905 added non whitespace character matching", "committedDate": "2020-03-19T20:43:37Z", "type": "commit"}, {"oid": "8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "url": "https://github.com/quickfix-j/quickfixj/commit/8bc58074b1d18396d6aa8d0f343ffbcf9ea15fd1", "message": "QFJ-905 added non whitespace character matching", "committedDate": "2020-03-19T20:43:37Z", "type": "forcePushed"}]}