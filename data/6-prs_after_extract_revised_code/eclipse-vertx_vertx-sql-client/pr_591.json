{"pr_number": 591, "pr_title": "Fixes for initial compatibility with Hibernate RX", "pr_createdAt": "2020-04-13T20:35:36Z", "pr_url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591", "timeline": [{"oid": "4d892c41a52c37f18f93d601d9e3a741b1fd51b2", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/4d892c41a52c37f18f93d601d9e3a741b1fd51b2", "message": "Fix issue encoding null values", "committedDate": "2020-04-13T20:33:54Z", "type": "commit"}, {"oid": "20376cc6be4d95bb82087a98c6a7fa8e2b66a08f", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/20376cc6be4d95bb82087a98c6a7fa8e2b66a08f", "message": "Handling for columns renamed in queries", "committedDate": "2020-04-13T20:34:39Z", "type": "commit"}, {"oid": "6e9d39e55cbba400095715dde61545efd7b68c3f", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/6e9d39e55cbba400095715dde61545efd7b68c3f", "message": "Fix issue encoding a Java float into a DB2 FLOAT column type", "committedDate": "2020-04-13T21:26:29Z", "type": "commit"}, {"oid": "c735c41d96bd61ac3c6c4b5de6358541a38b3780", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c735c41d96bd61ac3c6c4b5de6358541a38b3780", "message": "Fixes for storing a Java byte into a SMALLINT column", "committedDate": "2020-04-14T20:30:19Z", "type": "commit"}, {"oid": "04105053de4b3e11927079fc9eddfed3482ce579", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/04105053de4b3e11927079fc9eddfed3482ce579", "message": "Fix for storing Buffer and ByteBuf into binary columns", "committedDate": "2020-04-14T20:33:59Z", "type": "commit"}, {"oid": "1737c7d6a8bc6fa8fb2aecffcf7802c270b3f82c", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/1737c7d6a8bc6fa8fb2aecffcf7802c270b3f82c", "message": "Remove NOT NULL contstraint on basicdatatype table", "committedDate": "2020-04-14T21:18:23Z", "type": "forcePushed"}, {"oid": "77bd99dea649e70df0d8f4b04e2d43e6c1655390", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/77bd99dea649e70df0d8f4b04e2d43e6c1655390", "message": "Disable new TCK test for MSSQL as it requires further investigation", "committedDate": "2020-04-14T21:50:10Z", "type": "commit"}, {"oid": "77bd99dea649e70df0d8f4b04e2d43e6c1655390", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/77bd99dea649e70df0d8f4b04e2d43e6c1655390", "message": "Disable new TCK test for MSSQL as it requires further investigation", "committedDate": "2020-04-14T21:50:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MTk5NA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r408461994", "bodyText": "CC @vietj for this change. Do you think this is OK? From experimenting with the API returning null in these getters causes very confusing behavior, so I think it's good to be as lenient as possible here.", "author": "aguibert", "createdAt": "2020-04-14T22:00:52Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/Tuple.java", "diffHunk": "@@ -468,6 +469,12 @@ default Buffer getBuffer(int pos) {\n     if (val instanceof Buffer) {\n       return (Buffer) val;\n     }\n+    if (val instanceof ByteBuf) {\n+      return Buffer.buffer((ByteBuf) val);\n+    }\n+    if (val instanceof byte[]) {\n+      return Buffer.buffer((byte[]) val);\n+    }", "originalCommit": "77bd99dea649e70df0d8f4b04e2d43e6c1655390", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MjY5Ng==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r408462696", "bodyText": "CC @BillyYccc for this change. I'm adding testNullValues to the common TCK in this PR, but it fails for MSSQL. Can you please investigate this when you have time?", "author": "aguibert", "createdAt": "2020-04-14T22:02:35Z", "path": "vertx-mssql-client/src/test/java/io/vertx/mssqlclient/tck/MSSQLBinaryDataTypeEncodeTest.java", "diffHunk": "@@ -57,5 +57,13 @@ public void testDecimal(TestContext ctx) {\n     //TODO do we need wrapped type?\n     super.testDecimal(ctx);\n   }\n+  \n+  @Test\n+  @Ignore // TODO: Investigate this issue and enable the test \n+  // (unfortunately it wasn't as simple as removing the NOT NULL constraints in init.sql)\n+  @Override\n+  public void testNullValues(TestContext ctx) {\n+    super.testNullValues(ctx);\n+  }  ", "originalCommit": "77bd99dea649e70df0d8f4b04e2d43e6c1655390", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxMjQxMg==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r408512412", "bodyText": "I think it's not supported in the client for now.", "author": "BillyYccc", "createdAt": "2020-04-15T00:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2MjY5Ng=="}], "type": "inlineReview", "revised_code": null}, {"oid": "2639d7426277b4f91977e0e1907631419eec6eb0", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/2639d7426277b4f91977e0e1907631419eec6eb0", "message": "Disable sequence tests for DB2/z until implemented", "committedDate": "2020-04-14T23:07:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NDE0Ng==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r409194146", "bodyText": "If inputRow[i] can be null, should that be checked before lines 1204-107 where it could cause a NPE?  Or is the case where it would be null mutually exclusive from when it would be cast as a byte[] or ByteBuf?", "author": "gjwatts", "createdAt": "2020-04-15T23:34:32Z", "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/DRDAQueryRequest.java", "diffHunk": "@@ -1193,11 +1199,17 @@ private Hashtable computeProtocolTypesAndLengths(\n                     break;\n                 case Types.BINARY:\n                 case Types.VARBINARY:\n-                    byte[] ba = (byte[]) inputRow[i];\n-                    if (ba == null) {\n+//                    byte[] ba = (byte[]) inputRow[i];\n+                \tint length = -1;\n+                \tif (inputRow[i] instanceof byte[]) {\n+                \t\tlength = ((byte[]) inputRow[i]).length;\n+                \t} else if (inputRow[i] instanceof ByteBuf) {\n+                \t\tlength = ((ByteBuf) inputRow[i]).readableBytes();\n+                \t}\n+                    if (inputRow[i] == null) {", "originalCommit": "2639d7426277b4f91977e0e1907631419eec6eb0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg1Nzc3MA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r409857770", "bodyText": "good question, I had to double check on this and the statement if (null instanceof byte[]) evaluates to false so we don't need the extra null check", "author": "aguibert", "createdAt": "2020-04-16T21:25:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NDE0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NDIwOQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/591#discussion_r409194209", "bodyText": "Same as above", "author": "gjwatts", "createdAt": "2020-04-15T23:34:43Z", "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/DRDAQueryRequest.java", "diffHunk": "@@ -1215,11 +1227,17 @@ private Hashtable computeProtocolTypesAndLengths(\n                     }\n                     break;\n                 case Types.LONGVARBINARY:\n-                    ba = (byte[]) inputRow[i];\n-                    if (ba == null) {\n+//                    ba = (byte[]) inputRow[i];\n+                \tlength = -1;\n+                \tif (inputRow[i] instanceof byte[]) {\n+                \t\tlength = ((byte[]) inputRow[i]).length;\n+                \t} else if (inputRow[i] instanceof ByteBuf) {\n+                \t\tlength = ((ByteBuf) inputRow[i]).readableBytes();\n+                \t}\n+                    if (inputRow[i] == null) {", "originalCommit": "2639d7426277b4f91977e0e1907631419eec6eb0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}