{"pr_number": 665, "pr_title": "Initial database metadata API", "pr_createdAt": "2020-05-28T05:57:11Z", "pr_url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTY1Mw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431635653", "bodyText": "DatabaseMetadata , metadata is a single word (https://en.wikipedia.org/wiki/Metadata)", "author": "vietj", "createdAt": "2020-05-28T07:30:05Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.vertx.sqlclient.spi;\n+\n+import io.vertx.codegen.annotations.VertxGen;\n+\n+/**\n+ * Contains static metadata about the backend database server \n+ */\n+@VertxGen\n+public interface DatabaseMetaData {", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5NDc0Mw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431894743", "bodyText": "This will be a fun review comment to fix on a case since I'm on a case insensitive OS \ud83d\ude43", "author": "aguibert", "createdAt": "2020-05-28T14:46:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI5NzIwMA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r432297200", "bodyText": "sometimes I do have the same issue to deal with, here is how I deal with:\n1/ rename the file to something else like Foo\n2/ commit\n3/ rename Foo to the old name with case sensitivity change\n4/ commit\n5/ squash commits", "author": "vietj", "createdAt": "2020-05-29T07:14:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTY1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\nindex 4ac27319..a65abb45 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n\n@@ -6,21 +6,29 @@ import io.vertx.codegen.annotations.VertxGen;\n  * Contains static metadata about the backend database server \n  */\n @VertxGen\n-public interface DatabaseMetaData {\n+public interface DatabaseMetadata {\n   \n   /**\n    * @return The product name of the backend database server\n    */\n-  public String getDatabaseProductName();\n+  public String productName();\n+  \n+  /**\n+   * @return The full version string for the backend database server.\n+   * This may be useful for for parsing more subtle aspects of the version string.\n+   * For simple information like database major and minor version, use {@link #majorVersion()}\n+   * and {@link #minorVersion()} instead.\n+   */\n+  public String fullVersion();\n   \n   /**\n    * @return The major version of the backend database server\n    */\n-  public int getDatabaseMajorVersion();\n+  public int majorVersion();\n   \n   /**\n    * @return The minor version of the backend database server\n    */\n-  public int getDatabaseMinorVersion();\n+  public int minorVersion();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTgzOQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431635839", "bodyText": "simply productName(), no need to prefix with database as we are in a class prefixed Database", "author": "vietj", "createdAt": "2020-05-28T07:30:26Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.vertx.sqlclient.spi;\n+\n+import io.vertx.codegen.annotations.VertxGen;\n+\n+/**\n+ * Contains static metadata about the backend database server \n+ */\n+@VertxGen\n+public interface DatabaseMetaData {\n+  \n+  /**\n+   * @return The product name of the backend database server\n+   */\n+  public String getDatabaseProductName();", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\nindex 4ac27319..a65abb45 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n\n@@ -6,21 +6,29 @@ import io.vertx.codegen.annotations.VertxGen;\n  * Contains static metadata about the backend database server \n  */\n @VertxGen\n-public interface DatabaseMetaData {\n+public interface DatabaseMetadata {\n   \n   /**\n    * @return The product name of the backend database server\n    */\n-  public String getDatabaseProductName();\n+  public String productName();\n+  \n+  /**\n+   * @return The full version string for the backend database server.\n+   * This may be useful for for parsing more subtle aspects of the version string.\n+   * For simple information like database major and minor version, use {@link #majorVersion()}\n+   * and {@link #minorVersion()} instead.\n+   */\n+  public String fullVersion();\n   \n   /**\n    * @return The major version of the backend database server\n    */\n-  public int getDatabaseMajorVersion();\n+  public int majorVersion();\n   \n   /**\n    * @return The minor version of the backend database server\n    */\n-  public int getDatabaseMinorVersion();\n+  public int minorVersion();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjM2NQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431636365", "bodyText": "simply majorVersion(), no need to prefix with database as we are in a class prefixed Database", "author": "vietj", "createdAt": "2020-05-28T07:31:31Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.vertx.sqlclient.spi;\n+\n+import io.vertx.codegen.annotations.VertxGen;\n+\n+/**\n+ * Contains static metadata about the backend database server \n+ */\n+@VertxGen\n+public interface DatabaseMetaData {\n+  \n+  /**\n+   * @return The product name of the backend database server\n+   */\n+  public String getDatabaseProductName();\n+  \n+  /**\n+   * @return The major version of the backend database server\n+   */\n+  public int getDatabaseMajorVersion();", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\nindex 4ac27319..a65abb45 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n\n@@ -6,21 +6,29 @@ import io.vertx.codegen.annotations.VertxGen;\n  * Contains static metadata about the backend database server \n  */\n @VertxGen\n-public interface DatabaseMetaData {\n+public interface DatabaseMetadata {\n   \n   /**\n    * @return The product name of the backend database server\n    */\n-  public String getDatabaseProductName();\n+  public String productName();\n+  \n+  /**\n+   * @return The full version string for the backend database server.\n+   * This may be useful for for parsing more subtle aspects of the version string.\n+   * For simple information like database major and minor version, use {@link #majorVersion()}\n+   * and {@link #minorVersion()} instead.\n+   */\n+  public String fullVersion();\n   \n   /**\n    * @return The major version of the backend database server\n    */\n-  public int getDatabaseMajorVersion();\n+  public int majorVersion();\n   \n   /**\n    * @return The minor version of the backend database server\n    */\n-  public int getDatabaseMinorVersion();\n+  public int minorVersion();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjQ0Nw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431636447", "bodyText": "simply minorVersion(), no need to prefix with database as we are in a class prefixed Database", "author": "vietj", "createdAt": "2020-05-28T07:31:39Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.vertx.sqlclient.spi;\n+\n+import io.vertx.codegen.annotations.VertxGen;\n+\n+/**\n+ * Contains static metadata about the backend database server \n+ */\n+@VertxGen\n+public interface DatabaseMetaData {\n+  \n+  /**\n+   * @return The product name of the backend database server\n+   */\n+  public String getDatabaseProductName();\n+  \n+  /**\n+   * @return The major version of the backend database server\n+   */\n+  public int getDatabaseMajorVersion();\n+  \n+  /**\n+   * @return The minor version of the backend database server\n+   */\n+  public int getDatabaseMinorVersion();", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\nindex 4ac27319..a65abb45 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/spi/DatabaseMetaData.java\n\n@@ -6,21 +6,29 @@ import io.vertx.codegen.annotations.VertxGen;\n  * Contains static metadata about the backend database server \n  */\n @VertxGen\n-public interface DatabaseMetaData {\n+public interface DatabaseMetadata {\n   \n   /**\n    * @return The product name of the backend database server\n    */\n-  public String getDatabaseProductName();\n+  public String productName();\n+  \n+  /**\n+   * @return The full version string for the backend database server.\n+   * This may be useful for for parsing more subtle aspects of the version string.\n+   * For simple information like database major and minor version, use {@link #majorVersion()}\n+   * and {@link #minorVersion()} instead.\n+   */\n+  public String fullVersion();\n   \n   /**\n    * @return The major version of the backend database server\n    */\n-  public int getDatabaseMajorVersion();\n+  public int majorVersion();\n   \n   /**\n    * @return The minor version of the backend database server\n    */\n-  public int getDatabaseMinorVersion();\n+  public int minorVersion();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjg0Mw==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431636843", "bodyText": "rename to databaseMetadata() - I'm wondering if that should not be directly on SqlClient", "author": "vietj", "createdAt": "2020-05-28T07:32:28Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/SqlConnection.java", "diffHunk": "@@ -88,5 +89,7 @@\n    * @param handler the completion handler\n    */\n   void close(Handler<AsyncResult<Void>> handler);\n+  \n+  DatabaseMetaData getDatabaseMetaData();", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4NTMwMA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431885300", "bodyText": "Usually exposing such metadata is an internal feature for those users, I think it's better to keep the SqlClient API simple.", "author": "BillyYccc", "createdAt": "2020-05-28T14:35:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjg0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkzNzkxNQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431937915", "bodyText": "The SqlClient is more focused on one-shot operations, whereas obtaining DB metadata isn't really a one-shot operation, it's mainly something that would make sense to obtain after you've obtained a connection (like in JDBC).\nAlso, I'm considering the new metadata class as an SPI, which also supports @BillyYccc 's comment about keeping it off of the \"golden path\" API usage", "author": "aguibert", "createdAt": "2020-05-28T15:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNjg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/SqlConnection.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/SqlConnection.java\nindex edcba41e..39a31e9d 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/SqlConnection.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/SqlConnection.java\n\n@@ -90,6 +90,9 @@ public interface SqlConnection extends SqlClient {\n    */\n   void close(Handler<AsyncResult<Void>> handler);\n   \n-  DatabaseMetaData getDatabaseMetaData();\n+  /**\n+   * @return The static metadata about the backend database server for this connection\n+   */\n+  DatabaseMetadata databaseMetadata();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4MDQ5Mg==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431880492", "bodyText": "I think I need to rewrite the parser sometime later as it does not consider the situations of different database version semantics.", "author": "BillyYccc", "createdAt": "2020-05-28T14:30:38Z", "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.vertx.mysqlclient.impl;\n+\n+import io.vertx.sqlclient.spi.DatabaseMetaData;\n+\n+public class MySQLDatabaseMetaData implements DatabaseMetaData {\n+  \n+  private final int majorVersion;\n+  private final int minorVersion;\n+  private final int microVersion;\n+  \n+  public MySQLDatabaseMetaData(String serverVersion) {\n+    // we assume the server version follows ${major}.${minor}.${micro} in https://dev.mysql.com/doc/refman/8.0/en/which-version.html\n+    String[] versionNumbers = serverVersion.split(\"\\\\.\");\n+    majorVersion = Integer.parseInt(versionNumbers[0]);\n+    minorVersion = Integer.parseInt(versionNumbers[1]);\n+    // we should truncate the possible suffixes here\n+    String releaseVersion = versionNumbers[2];\n+    int indexOfFirstSeparator = releaseVersion.indexOf(\"-\");\n+    if (indexOfFirstSeparator != -1) {\n+      // handle unstable release suffixes\n+      String releaseNumberString = releaseVersion.substring(0, indexOfFirstSeparator);\n+      microVersion = Integer.parseInt(releaseNumberString);\n+    } else {\n+      microVersion = Integer.parseInt(versionNumbers[2]);\n+    }\n+  }\n+\n+  @Override\n+  public String getDatabaseProductName() {\n+    return \"MySQL\"; // TODO: Should this return MariaDB sometimes?", "originalCommit": "569eb4d2bd8e2bba656bcedd5b8aa959154c21d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4MjY1OA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r431882658", "bodyText": "Ok, at the moment it didn't seem like there was any MariaDB-specific code in the MySQL driver, aside from URL parsing.", "author": "aguibert", "createdAt": "2020-05-28T14:32:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg4MDQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c671fe2ede20312b6217472b16e78cf40ca1a204", "chunk": "diff --git a/vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetaData.java b/vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetaData.java\nindex 8c43a040..964ede96 100644\n--- a/vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetaData.java\n+++ b/vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetaData.java\n\n@@ -1,14 +1,14 @@\n package io.vertx.mysqlclient.impl;\n \n-import io.vertx.sqlclient.spi.DatabaseMetaData;\n+import io.vertx.sqlclient.spi.DatabaseMetadata;\n \n-public class MySQLDatabaseMetaData implements DatabaseMetaData {\n+public class MySQLDatabaseMetadata implements DatabaseMetadata {\n   \n   private final int majorVersion;\n   private final int minorVersion;\n   private final int microVersion;\n   \n-  public MySQLDatabaseMetaData(String serverVersion) {\n+  public MySQLDatabaseMetadata(String serverVersion) {\n     // we assume the server version follows ${major}.${minor}.${micro} in https://dev.mysql.com/doc/refman/8.0/en/which-version.html\n     String[] versionNumbers = serverVersion.split(\"\\\\.\");\n     majorVersion = Integer.parseInt(versionNumbers[0]);\n"}}, {"oid": "c671fe2ede20312b6217472b16e78cf40ca1a204", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c671fe2ede20312b6217472b16e78cf40ca1a204", "message": "Initial database metadata API", "committedDate": "2020-05-28T18:33:41Z", "type": "commit"}, {"oid": "ea444bb3c932ad9bbddea59165781afba02be1d9", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/ea444bb3c932ad9bbddea59165781afba02be1d9", "message": "Handling for MariaDB versions", "committedDate": "2020-05-28T18:34:10Z", "type": "forcePushed"}, {"oid": "d9ffef6296cf2f758e7ce4d078ff163c693c8fb9", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/d9ffef6296cf2f758e7ce4d078ff163c693c8fb9", "message": "Handling for MariaDB versions", "committedDate": "2020-05-28T23:21:47Z", "type": "forcePushed"}, {"oid": "c56cb017496e700f8564a362f8b2b82f358d68da", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c56cb017496e700f8564a362f8b2b82f358d68da", "message": "Handling for MariaDB versions", "committedDate": "2020-05-29T02:30:24Z", "type": "commit"}, {"oid": "c56cb017496e700f8564a362f8b2b82f358d68da", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/c56cb017496e700f8564a362f8b2b82f358d68da", "message": "Handling for MariaDB versions", "committedDate": "2020-05-29T02:30:24Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5ODQ5Mg==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r432398492", "bodyText": "There're a wide range of database servers supporting MySQL C/S protocol such as Percona, Vitess, TiDB... and their reponse version strings differ much. Don't worry about this, I will fix this in another PR since the version string is also used to control the EOF header flag setting in MySQL.", "author": "BillyYccc", "createdAt": "2020-05-29T10:32:58Z", "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/MySQLDatabaseMetadata.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.vertx.mysqlclient.impl;\n+\n+import java.util.Objects;\n+\n+import io.vertx.sqlclient.spi.DatabaseMetadata;\n+\n+public class MySQLDatabaseMetadata implements DatabaseMetadata {\n+  \n+  private final String fullVersion;\n+  private final boolean isMariaDB;\n+  private final int majorVersion;\n+  private final int minorVersion;\n+  private final int microVersion;\n+  \n+  public MySQLDatabaseMetadata(String serverVersion) {\n+    fullVersion = serverVersion;\n+    isMariaDB = serverVersion.toUpperCase().contains(\"MARIADB\");  \n+    String[] versionNumbers;\n+    if (!isMariaDB) {\n+      // we assume the server version follows ${major}.${minor}.${micro} in https://dev.mysql.com/doc/refman/8.0/en/which-version.html\n+      versionNumbers = serverVersion.split(\"\\\\.\");\n+    } else {\n+      // server version follows ${junk}-${major}.${minor}.${micro}-MariaDB-${junk}\n+      String[] parts = serverVersion.split(\"-\");\n+      versionNumbers = parts[1].split(\"\\\\.\");\n+    }\n+    majorVersion = Integer.parseInt(versionNumbers[0]);\n+    minorVersion = Integer.parseInt(versionNumbers[1]);\n+    // we should truncate the possible suffixes here\n+    String releaseVersion = versionNumbers[2];\n+    int indexOfFirstSeparator = releaseVersion.indexOf(\"-\");\n+    if (indexOfFirstSeparator != -1) {\n+      // handle unstable release suffixes\n+      String releaseNumberString = releaseVersion.substring(0, indexOfFirstSeparator);\n+      microVersion = Integer.parseInt(releaseNumberString);\n+    } else {\n+      microVersion = Integer.parseInt(versionNumbers[2]);\n+    }\n+  }\n+  \n+  public boolean isMariaDB() {\n+    return isMariaDB;\n+  }\n+\n+  @Override\n+  public String productName() {\n+    return isMariaDB ? \"MariaDB\" : \"MySQL\";", "originalCommit": "c56cb017496e700f8564a362f8b2b82f358d68da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyOTk4NQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r432429985", "bodyText": "I think we should in the doc clearly tells which database are tested and that other is a best effort support", "author": "vietj", "createdAt": "2020-05-29T11:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5ODQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzNTE4MA==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/665#discussion_r432435180", "bodyText": "There is something like what you describe in https://vertx.io/docs/vertx-mysql-client/java/#_mysql_and_mariadb_version_support_matrix\nI got a repo for testing basic features with more databases in https://github.com/BillyYccc/vertx-mysql-client-compatibility-testkit which is so-called best effort support", "author": "BillyYccc", "createdAt": "2020-05-29T11:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5ODQ5Mg=="}], "type": "inlineReview", "revised_code": null}]}