{"pr_number": 662, "pr_title": "Make recycling pooled connection events emitted on the eventloop context associated with connection pool", "pr_createdAt": "2020-05-27T19:39:28Z", "pr_url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/662", "timeline": [{"oid": "30be4a2d2476cdc3c2e0c01826c79478f7cc35bc", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/30be4a2d2476cdc3c2e0c01826c79478f7cc35bc", "message": "fix polling null from the available pooled connections\n\nSigned-off-by: Billy Yuan <billy112487983@gmail.com>", "committedDate": "2020-05-27T19:28:56Z", "type": "commit"}, {"oid": "2cbb5177792db22d0e2c5ff9f71008c029600822", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/2cbb5177792db22d0e2c5ff9f71008c029600822", "message": "stress the pool test checking acquiring pooled connections working properly\n\nSigned-off-by: Billy Yuan <billy112487983@gmail.com>", "committedDate": "2020-05-27T19:30:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTIxMQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/662#discussion_r431635211", "bodyText": "did you check this case can happen ? this code is single threaded, i.e always the same thread shall access the pool (perhaps it does not and in that case it's a bug), so the expression available.size() > 0 being true implies that proxy != null is true as well", "author": "vietj", "createdAt": "2020-05-28T07:29:14Z", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java", "diffHunk": "@@ -242,6 +242,10 @@ private void check() {\n         while (waiters.size() > 0) {\n           if (available.size() > 0) {\n             PooledConnection proxy = available.poll();\n+            if (proxy == null) {", "originalCommit": "2cbb5177792db22d0e2c5ff9f71008c029600822", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3OTI4NQ==", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/662#discussion_r431979285", "bodyText": "Yes the connection pool actions should be all emitted on the eventloop context associated with the pool so it should be impossible for that to happen.\nBut I found it incorrect for the closing method which might cause different threads access the states in connection pool. The close method is not called on the associated context\n\n  \n    \n      vertx-sql-client/vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java\n    \n    \n        Lines 171 to 186\n      in\n      04f1f41\n    \n    \n    \n    \n\n        \n          \n           public void close(Holder holder, Promise<Void> promise) { \n        \n\n        \n          \n             if (holder != this.holder) { \n        \n\n        \n          \n               String msg; \n        \n\n        \n          \n               if (this.holder == null) { \n        \n\n        \n          \n                 msg = \"Connection released twice\"; \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                 msg = \"Connection released by \" + holder + \" owned by \" + this.holder; \n        \n\n        \n          \n               } \n        \n\n        \n          \n               // Log it ? \n        \n\n        \n          \n               promise.fail(msg); \n        \n\n        \n          \n               return; \n        \n\n        \n          \n             } \n        \n\n        \n          \n             this.holder = null; \n        \n\n        \n          \n             release(this); \n        \n\n        \n          \n             promise.complete(); \n        \n\n        \n          \n           }", "author": "BillyYccc", "createdAt": "2020-05-28T16:47:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzNTIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ce65f3e87ec4dc8cc48de03ecc8cd3c17f48f3c", "chunk": "diff --git a/vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java b/vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java\nindex 613f5f35..b9c115d9 100644\n--- a/vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java\n+++ b/vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/pool/ConnectionPool.java\n\n@@ -242,10 +250,6 @@ public class ConnectionPool {\n         while (waiters.size() > 0) {\n           if (available.size() > 0) {\n             PooledConnection proxy = available.poll();\n-            if (proxy == null) {\n-              // available is empty?\n-              return;\n-            }\n             Handler<AsyncResult<Connection>> waiter = waiters.poll();\n             waiter.handle(Future.succeededFuture(proxy));\n           } else {\n"}}, {"oid": "4ce65f3e87ec4dc8cc48de03ecc8cd3c17f48f3c", "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/4ce65f3e87ec4dc8cc48de03ecc8cd3c17f48f3c", "message": "make recycling pooled connection events emitted on the eventloop context associated with connection pool\n\nSigned-off-by: Billy Yuan <billy112487983@gmail.com>", "committedDate": "2020-05-28T16:48:44Z", "type": "commit"}]}