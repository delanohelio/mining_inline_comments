{"pr_number": 8456, "pr_title": "Register ownership for newly created dashboards / eventdefinitions", "pr_createdAt": "2020-07-01T09:53:25Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/8456", "timeline": [{"oid": "ebded39f5207b647825db07879c1fc165bf5fa8e", "url": "https://github.com/Graylog2/graylog2-server/commit/ebded39f5207b647825db07879c1fc165bf5fa8e", "message": "WIP: Register ownership for newly created views", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "fb1ab0ac1f587f01ea51cd9a2cbca6bcfb8adf80", "url": "https://github.com/Graylog2/graylog2-server/commit/fb1ab0ac1f587f01ea51cd9a2cbca6bcfb8adf80", "message": "remove stale file", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "692bba6025dd2324a6874558a25a28d100972fe6", "url": "https://github.com/Graylog2/graylog2-server/commit/692bba6025dd2324a6874558a25a28d100972fe6", "message": "Do user lookup from within EntityOwnerShipService", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "fd76a675eb1bb51efebf4c74703f3c6cfc875716", "url": "https://github.com/Graylog2/graylog2-server/commit/fd76a675eb1bb51efebf4c74703f3c6cfc875716", "message": "Add license", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "5da13a426b4493cf97ff04260ec11b55dff6ec35", "url": "https://github.com/Graylog2/graylog2-server/commit/5da13a426b4493cf97ff04260ec11b55dff6ec35", "message": "Make it more explicit that GrantsAuthorizingRealm does no authorization\n\nFound, while reading the shiro docs.\nTechnically, it shouldnt make a difference, but better safe than sorry.", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "dd10121123f505c7a325aed509ebb82caf07c97c", "url": "https://github.com/Graylog2/graylog2-server/commit/dd10121123f505c7a325aed509ebb82caf07c97c", "message": "Register ownership for EventDefinitions", "committedDate": "2020-07-07T07:55:32Z", "type": "commit"}, {"oid": "81da8ed4fcd4952c04ddef98844e7e2d337b1734", "url": "https://github.com/Graylog2/graylog2-server/commit/81da8ed4fcd4952c04ddef98844e7e2d337b1734", "message": "role -> capability", "committedDate": "2020-07-07T08:12:38Z", "type": "commit"}, {"oid": "4602d26bfbf141b7467fa14f3b7c8f28e7d144c6", "url": "https://github.com/Graylog2/graylog2-server/commit/4602d26bfbf141b7467fa14f3b7c8f28e7d144c6", "message": "Introduce UserContext helper\n\nThis allows us to access the current user context\nfrom anywhere, whithout having to pass it through from the\ncalling RestResource.\n\nShiro binds the current user to a ThreadContext, which is\naccessible from anywhere.\n\nWe also provide a UserContext#runAs() method,\nthat can be used to create a temporary user context\nto run code with.", "committedDate": "2020-07-07T15:14:40Z", "type": "commit"}, {"oid": "4602d26bfbf141b7467fa14f3b7c8f28e7d144c6", "url": "https://github.com/Graylog2/graylog2-server/commit/4602d26bfbf141b7467fa14f3b7c8f28e7d144c6", "message": "Introduce UserContext helper\n\nThis allows us to access the current user context\nfrom anywhere, whithout having to pass it through from the\ncalling RestResource.\n\nShiro binds the current user to a ThreadContext, which is\naccessible from anywhere.\n\nWe also provide a UserContext#runAs() method,\nthat can be used to create a temporary user context\nto run code with.", "committedDate": "2020-07-07T15:14:40Z", "type": "forcePushed"}, {"oid": "ea7aba17c9cf02a54f4e910525822b4bdb207812", "url": "https://github.com/Graylog2/graylog2-server/commit/ea7aba17c9cf02a54f4e910525822b4bdb207812", "message": "Use registerNewEventDefinition", "committedDate": "2020-07-07T15:33:22Z", "type": "commit"}, {"oid": "bf324b3ae400fdaca15dc8076abeb990e41c20ca", "url": "https://github.com/Graylog2/graylog2-server/commit/bf324b3ae400fdaca15dc8076abeb990e41c20ca", "message": "add licenses", "committedDate": "2020-07-08T08:40:02Z", "type": "commit"}, {"oid": "d3b2e2bf17fd0bcf8ab57d805a4541eb4b8eefc2", "url": "https://github.com/Graylog2/graylog2-server/commit/d3b2e2bf17fd0bcf8ab57d805a4541eb4b8eefc2", "message": "Remove nautic reference from EntityOwner_Ship_Service", "committedDate": "2020-07-08T08:59:43Z", "type": "commit"}, {"oid": "1091fefd793565779857bb05636947a5c65c89a3", "url": "https://github.com/Graylog2/graylog2-server/commit/1091fefd793565779857bb05636947a5c65c89a3", "message": "Return permissions from Grants to the frontend\n\nThe frontend code gets the current user permissions\nfrom the UsersResource.\nWe also need to add the permissions from grants\nfor the frontend to function.", "committedDate": "2020-07-08T10:05:29Z", "type": "commit"}, {"oid": "696f3aab1f56a78139987d85bbe05a13ce2ffbc6", "url": "https://github.com/Graylog2/graylog2-server/commit/696f3aab1f56a78139987d85bbe05a13ce2ffbc6", "message": "Rewrite UserContext handling\n\nInstead of creating the UserContext from Shiro's ThreadLocalStorage,\nadd support via jersey/hk2 per request method context injection.\n\nThis unfortunatly only works for methods. Field and constructor\ninjection doesn't seem to work.\n\nAdditionally:\n - add ownership support for EventDefinitions.\n - Add contentpack support for ownership registration", "committedDate": "2020-07-13T14:52:04Z", "type": "commit"}, {"oid": "cb934265c161d1be8eac4eacf8f7862e4d7cf48e", "url": "https://github.com/Graylog2/graylog2-server/commit/cb934265c161d1be8eac4eacf8f7862e4d7cf48e", "message": "Merge remote-tracking branch 'origin/feature/permissions' into entity-ownership-service", "committedDate": "2020-07-14T12:17:40Z", "type": "commit"}, {"oid": "beef330c84ae68f3a42410403eae0060b7465b72", "url": "https://github.com/Graylog2/graylog2-server/commit/beef330c84ae68f3a42410403eae0060b7465b72", "message": "add licenses", "committedDate": "2020-07-14T12:40:12Z", "type": "commit"}, {"oid": "f8a516e816ff379666d6b08bfa627795f9cbfeba", "url": "https://github.com/Graylog2/graylog2-server/commit/f8a516e816ff379666d6b08bfa627795f9cbfeba", "message": "Fix ViewsResourceTest", "committedDate": "2020-07-14T13:25:47Z", "type": "commit"}, {"oid": "e6d74193db737bd548a9f30c21be4456d5022ec0", "url": "https://github.com/Graylog2/graylog2-server/commit/e6d74193db737bd548a9f30c21be4456d5022ec0", "message": "Merge remote-tracking branch 'origin/feature/permissions' into entity-ownership-service", "committedDate": "2020-07-15T10:06:00Z", "type": "commit"}, {"oid": "f118aaf9649f2ace5b302e56648a6d2a3dad41f8", "url": "https://github.com/Graylog2/graylog2-server/commit/f118aaf9649f2ace5b302e56648a6d2a3dad41f8", "message": "Fix UserContextTest", "committedDate": "2020-07-15T10:17:46Z", "type": "commit"}, {"oid": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "url": "https://github.com/Graylog2/graylog2-server/commit/84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "message": "Cleanup and consistency / remove testing artifact from RestPermissions", "committedDate": "2020-07-15T10:51:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTk5Mg==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456515992", "bodyText": "Shouldn't we add the read permissions to the VIEW capability as well?", "author": "bernd", "createdAt": "2020-07-17T15:30:28Z", "path": "graylog2-server/src/main/java/org/graylog/security/BuiltinCapabilities.java", "diffHunk": "@@ -53,7 +53,9 @@ public BuiltinCapabilities() {\n                                 RestPermissions.STREAMS_EDIT,\n                                 RestPermissions.STREAMS_CHANGESTATE,\n                                 RestPermissions.DASHBOARDS_READ,\n-                                RestPermissions.DASHBOARDS_EDIT\n+                                RestPermissions.DASHBOARDS_EDIT,\n+                                RestPermissions.EVENT_DEFINITIONS_READ,", "originalCommit": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY5NjA2MQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r458696061", "bodyText": "ah, good catch", "author": "mpfz0r", "createdAt": "2020-07-22T10:32:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNTk5Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxNzA2Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456517067", "bodyText": "How about removing the commented code? Or at least add a comment why this is commented and should stay.", "author": "bernd", "createdAt": "2020-07-17T15:32:19Z", "path": "graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security;\n+\n+import org.glassfish.hk2.utilities.binding.AbstractBinder;\n+import org.glassfish.jersey.process.internal.RequestScoped;\n+\n+public class UserContextBinder extends AbstractBinder {\n+    @Override\n+    protected void configure() {\n+        bindFactory(UserContextFactory.class)\n+                .to(UserContext.class)\n+//                .proxy(true)", "originalCommit": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a5b40db84ac3117512976703148f2cb947fa2c1", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java b/graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java\nindex c8e50962a0..9dc70375d6 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/UserContextBinder.java\n\n@@ -19,13 +19,14 @@ package org.graylog.security;\n import org.glassfish.hk2.utilities.binding.AbstractBinder;\n import org.glassfish.jersey.process.internal.RequestScoped;\n \n+// TODO this only works for method injection.\n+// In theory, by using proxies, it should also work for constructors, etc.\n+// See: https://stackoverflow.com/a/38060472\n public class UserContextBinder extends AbstractBinder {\n     @Override\n     protected void configure() {\n         bindFactory(UserContextFactory.class)\n                 .to(UserContext.class)\n-//                .proxy(true)\n-//                .proxyForSameScope(false)\n                 .in(RequestScoped.class);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTE3Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519177", "bodyText": "I think we should use GRNTypes.EVENT_DEFINITION.type() here instead of using the ModelTypes.", "author": "bernd", "createdAt": "2020-07-17T15:36:02Z", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {\n+    private static final Logger LOG = LoggerFactory.getLogger(EntityOwnershipService.class);\n+\n+    private final DBGrantService dbGrantService;\n+    private final GRNRegistry grnRegistry;\n+\n+\n+    @Inject\n+    public EntityOwnershipService(DBGrantService dbGrantService,\n+                                  GRNRegistry grnRegistry) {\n+        this.dbGrantService = dbGrantService;\n+        this.grnRegistry = grnRegistry;\n+    }\n+\n+    public void registerNewEventDefinition(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.EVENT_DEFINITION_V1.name(), id);", "originalCommit": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a5b40db84ac3117512976703148f2cb947fa2c1", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\nindex 29e15c9063..acc6f38804 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n\n@@ -18,10 +18,10 @@ package org.graylog.security.entities;\n \n import org.graylog.grn.GRN;\n import org.graylog.grn.GRNRegistry;\n+import org.graylog.grn.GRNTypes;\n import org.graylog.security.Capability;\n import org.graylog.security.DBGrantService;\n import org.graylog.security.GrantDTO;\n-import org.graylog2.contentpacks.model.ModelTypes;\n import org.graylog2.plugin.database.users.User;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTM4MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519380", "bodyText": "Same as above, let's use GRNTypes.DASHBOARD.type() here.", "author": "bernd", "createdAt": "2020-07-17T15:36:23Z", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {\n+    private static final Logger LOG = LoggerFactory.getLogger(EntityOwnershipService.class);\n+\n+    private final DBGrantService dbGrantService;\n+    private final GRNRegistry grnRegistry;\n+\n+\n+    @Inject\n+    public EntityOwnershipService(DBGrantService dbGrantService,\n+                                  GRNRegistry grnRegistry) {\n+        this.dbGrantService = dbGrantService;\n+        this.grnRegistry = grnRegistry;\n+    }\n+\n+    public void registerNewEventDefinition(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.EVENT_DEFINITION_V1.name(), id);\n+        registerNewEntity(grn, user);\n+    }\n+\n+    public void registerNewView(String id, User user) {\n+        final GRN grn = grnRegistry.newGRN(ModelTypes.DASHBOARD_V2.name(), id);", "originalCommit": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a5b40db84ac3117512976703148f2cb947fa2c1", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\nindex 29e15c9063..acc6f38804 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n\n@@ -18,10 +18,10 @@ package org.graylog.security.entities;\n \n import org.graylog.grn.GRN;\n import org.graylog.grn.GRNRegistry;\n+import org.graylog.grn.GRNTypes;\n import org.graylog.security.Capability;\n import org.graylog.security.DBGrantService;\n import org.graylog.security.GrantDTO;\n-import org.graylog2.contentpacks.model.ModelTypes;\n import org.graylog2.plugin.database.users.User;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUxOTkwOA==", "url": "https://github.com/Graylog2/graylog2-server/pull/8456#discussion_r456519908", "bodyText": "How about writing a test for this class? \ud83d\ude04 Thanks!", "author": "bernd", "createdAt": "2020-07-17T15:37:23Z", "path": "graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.security.entities;\n+\n+import org.graylog.grn.GRN;\n+import org.graylog.grn.GRNRegistry;\n+import org.graylog.security.Capability;\n+import org.graylog.security.DBGrantService;\n+import org.graylog.security.GrantDTO;\n+import org.graylog2.contentpacks.model.ModelTypes;\n+import org.graylog2.plugin.database.users.User;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class EntityOwnershipService {", "originalCommit": "84fa60f65ae5f877ec8e5bfab73ae59aee14b65b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7a5b40db84ac3117512976703148f2cb947fa2c1", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\nindex 29e15c9063..acc6f38804 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/entities/EntityOwnershipService.java\n\n@@ -18,10 +18,10 @@ package org.graylog.security.entities;\n \n import org.graylog.grn.GRN;\n import org.graylog.grn.GRNRegistry;\n+import org.graylog.grn.GRNTypes;\n import org.graylog.security.Capability;\n import org.graylog.security.DBGrantService;\n import org.graylog.security.GrantDTO;\n-import org.graylog2.contentpacks.model.ModelTypes;\n import org.graylog2.plugin.database.users.User;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n"}}, {"oid": "7a5b40db84ac3117512976703148f2cb947fa2c1", "url": "https://github.com/Graylog2/graylog2-server/commit/7a5b40db84ac3117512976703148f2cb947fa2c1", "message": "Fix review comments, add EntityOwnershipServiceTest", "committedDate": "2020-07-22T11:41:15Z", "type": "commit"}, {"oid": "1e8e2daa3a9bbc00f83f14276d5311573b703918", "url": "https://github.com/Graylog2/graylog2-server/commit/1e8e2daa3a9bbc00f83f14276d5311573b703918", "message": "Merge remote-tracking branch 'origin/feature/permissions' into entity-ownership-service", "committedDate": "2020-07-22T13:23:06Z", "type": "commit"}]}