{"pr_number": 9385, "pr_title": "Display synced users section on every authentication service details page", "pr_createdAt": "2020-11-06T12:05:08Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/9385", "timeline": [{"oid": "62516fb42cfcb6a2af699edc5009b184d2259088", "url": "https://github.com/Graylog2/graylog2-server/commit/62516fb42cfcb6a2af699edc5009b184d2259088", "message": "Refactor endpoint to get users for an auth service\n\nIt's now possible to get users for every authentication backend instead\nof only the active one.\n\nRefs Graylog2/graylog-plugin-enterprise#1912", "committedDate": "2020-11-08T12:34:33Z", "type": "commit"}, {"oid": "676e67a15889f075a703e541799d6353571fd86c", "url": "https://github.com/Graylog2/graylog2-server/commit/676e67a15889f075a703e541799d6353571fd86c", "message": "Load synced users on auth backend details page by backend id", "committedDate": "2020-11-08T12:49:28Z", "type": "commit"}, {"oid": "c8f4551abcc70c32f76a520e861c61580f61568b", "url": "https://github.com/Graylog2/graylog2-server/commit/c8f4551abcc70c32f76a520e861c61580f61568b", "message": "Load synced teams on auth backend details page by backend id", "committedDate": "2020-11-08T13:09:45Z", "type": "commit"}, {"oid": "cd2af512eb32713597312a9217771c3a4ea838a5", "url": "https://github.com/Graylog2/graylog2-server/commit/cd2af512eb32713597312a9217771c3a4ea838a5", "message": "Display synced teams section and synced users section on details page of disabled authentication backends", "committedDate": "2020-11-08T13:18:18Z", "type": "commit"}, {"oid": "cd2af512eb32713597312a9217771c3a4ea838a5", "url": "https://github.com/Graylog2/graylog2-server/commit/cd2af512eb32713597312a9217771c3a4ea838a5", "message": "Display synced teams section and synced users section on details page of disabled authentication backends", "committedDate": "2020-11-08T13:18:18Z", "type": "forcePushed"}, {"oid": "4ed1e604050cf00ac3b8ea78434830e190d1d2ee", "url": "https://github.com/Graylog2/graylog2-server/commit/4ed1e604050cf00ac3b8ea78434830e190d1d2ee", "message": "Fix user edit link in synced users overview", "committedDate": "2020-11-09T08:32:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMzM2Mg==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519823362", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ApiOperation(\"Get paginated users for active authentication service backend\")\n          \n          \n            \n                @ApiOperation(\"Get paginated users for an authentication service backend\")", "author": "mpfz0r", "createdAt": "2020-11-09T13:43:52Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java", "diffHunk": "@@ -138,6 +166,55 @@ public void delete(@ApiParam(name = \"backendId\", required = true) @PathParam(\"ba\n         dbService.delete(config.id());\n     }\n \n+    @GET\n+    @Path(\"{backendId}/users\")\n+    @ApiOperation(\"Get paginated users for active authentication service backend\")", "originalCommit": "4ed1e604050cf00ac3b8ea78434830e190d1d2ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0Mzg4OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519943889", "bodyText": "thanks!", "author": "bernd", "createdAt": "2020-11-09T16:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyMzM2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "f1db5bf0075e30758be69b5dbace7c9dbe5fc5a8", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\nindex 6e5fed746e..3dbae50a88 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n\n@@ -168,8 +168,8 @@ public class AuthServiceBackendsResource extends RestResource {\n \n     @GET\n     @Path(\"{backendId}/users\")\n-    @ApiOperation(\"Get paginated users for active authentication service backend\")\n-    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_LIST})\n+    @ApiOperation(\"Get paginated users for an authentication service backend\")\n+    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_READ})\n     public PaginatedResponse<UserOverviewDTO> getUsers(\n             @ApiParam(name = \"page\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n             @ApiParam(name = \"per_page\") @QueryParam(\"per_page\") @DefaultValue(\"50\") int perPage,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyODUxNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519828516", "bodyText": "I'd prefer it if we used USERS_READ.\nOr even GranteeService.getVisibleUsers()", "author": "mpfz0r", "createdAt": "2020-11-09T13:51:38Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java", "diffHunk": "@@ -138,6 +166,55 @@ public void delete(@ApiParam(name = \"backendId\", required = true) @PathParam(\"ba\n         dbService.delete(config.id());\n     }\n \n+    @GET\n+    @Path(\"{backendId}/users\")\n+    @ApiOperation(\"Get paginated users for active authentication service backend\")\n+    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_LIST})", "originalCommit": "4ed1e604050cf00ac3b8ea78434830e190d1d2ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzNDcwNQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519934705", "bodyText": "I opted for USERS_READ. I think we need to have a larger discussion about fine grained permission checks. The UI somehow needs to handle this as well. We probably need placeholder user objects if the requesting user is not allowed to read a user. Otherwise there would be no indicator that there are users for that backend.", "author": "bernd", "createdAt": "2020-11-09T16:15:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyODUxNg=="}], "type": "inlineReview", "revised_code": {"commit": "f1db5bf0075e30758be69b5dbace7c9dbe5fc5a8", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\nindex 6e5fed746e..3dbae50a88 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n\n@@ -168,8 +168,8 @@ public class AuthServiceBackendsResource extends RestResource {\n \n     @GET\n     @Path(\"{backendId}/users\")\n-    @ApiOperation(\"Get paginated users for active authentication service backend\")\n-    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_LIST})\n+    @ApiOperation(\"Get paginated users for an authentication service backend\")\n+    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_READ})\n     public PaginatedResponse<UserOverviewDTO> getUsers(\n             @ApiParam(name = \"page\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n             @ApiParam(name = \"per_page\") @QueryParam(\"per_page\") @DefaultValue(\"50\") int perPage,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyODk0MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519828940", "bodyText": "should be checking roles:read", "author": "mpfz0r", "createdAt": "2020-11-09T13:52:15Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java", "diffHunk": "@@ -138,6 +166,55 @@ public void delete(@ApiParam(name = \"backendId\", required = true) @PathParam(\"ba\n         dbService.delete(config.id());\n     }\n \n+    @GET\n+    @Path(\"{backendId}/users\")\n+    @ApiOperation(\"Get paginated users for active authentication service backend\")\n+    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_LIST})\n+    public PaginatedResponse<UserOverviewDTO> getUsers(\n+            @ApiParam(name = \"page\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n+            @ApiParam(name = \"per_page\") @QueryParam(\"per_page\") @DefaultValue(\"50\") int perPage,\n+            @ApiParam(name = \"query\") @QueryParam(\"query\") @DefaultValue(\"\") String query,\n+            @ApiParam(name = \"sort\", value = \"The field to sort the result on\", required = true, allowableValues = \"username,full_name,email\")\n+            @DefaultValue(UserOverviewDTO.FIELD_FULL_NAME) @QueryParam(\"sort\") String sort,\n+            @ApiParam(name = \"order\", value = \"The sort direction\", allowableValues = \"asc, desc\")\n+            @DefaultValue(\"asc\") @QueryParam(\"order\") String order,\n+            @ApiParam(name = \"backendId\", required = true) @PathParam(\"backendId\") @NotBlank String backendId\n+    ) {\n+        final AuthServiceBackendDTO activeConfig = loadConfig(backendId);\n+\n+        final PaginatedList<UserOverviewDTO> userList = userService.findPaginatedByAuthServiceBackend(\n+                parseSearchQuery(query), page, perPage, sort, order, activeConfig.id());\n+\n+        return PaginatedResponse.create(\n+                \"users\",\n+                userList,\n+                query,\n+                Collections.singletonMap(\"roles\", createRoleContext(userList.delegate()))\n+        );\n+    }\n+\n+    private Map<String, Object> createRoleContext(List<UserOverviewDTO> userList) {\n+        final Set<String> roleIds = userList.stream()\n+                .flatMap(user -> user.roles().stream())\n+                .collect(Collectors.toSet());\n+        try {\n+            return roleService.findIdMap(roleIds).values()", "originalCommit": "4ed1e604050cf00ac3b8ea78434830e190d1d2ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzMzIxOQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9385#discussion_r519933219", "bodyText": "Good catch, thanks! \ud83d\udc4d", "author": "bernd", "createdAt": "2020-11-09T16:13:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgyODk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "f1db5bf0075e30758be69b5dbace7c9dbe5fc5a8", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\nindex 6e5fed746e..3dbae50a88 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/rest/AuthServiceBackendsResource.java\n\n@@ -168,8 +168,8 @@ public class AuthServiceBackendsResource extends RestResource {\n \n     @GET\n     @Path(\"{backendId}/users\")\n-    @ApiOperation(\"Get paginated users for active authentication service backend\")\n-    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_LIST})\n+    @ApiOperation(\"Get paginated users for an authentication service backend\")\n+    @RequiresPermissions({RestPermissions.AUTH_SERVICE_GLOBAL_CONFIG_READ, RestPermissions.USERS_READ})\n     public PaginatedResponse<UserOverviewDTO> getUsers(\n             @ApiParam(name = \"page\") @QueryParam(\"page\") @DefaultValue(\"1\") int page,\n             @ApiParam(name = \"per_page\") @QueryParam(\"per_page\") @DefaultValue(\"50\") int perPage,\n"}}, {"oid": "33f13fd6242a592001bbe0757d3fff41fa242b6f", "url": "https://github.com/Graylog2/graylog2-server/commit/33f13fd6242a592001bbe0757d3fff41fa242b6f", "message": "Merge remote-tracking branch 'origin/master' into fix/enterprise-issue-1912", "committedDate": "2020-11-09T15:58:59Z", "type": "commit"}, {"oid": "f1db5bf0075e30758be69b5dbace7c9dbe5fc5a8", "url": "https://github.com/Graylog2/graylog2-server/commit/f1db5bf0075e30758be69b5dbace7c9dbe5fc5a8", "message": "Fix permissions and API description", "committedDate": "2020-11-09T16:12:39Z", "type": "commit"}]}