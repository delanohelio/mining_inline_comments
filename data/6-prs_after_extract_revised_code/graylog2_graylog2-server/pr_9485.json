{"pr_number": 9485, "pr_title": "Finish support for multiple LDAP / AD servers", "pr_createdAt": "2020-11-13T14:42:55Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/9485", "timeline": [{"oid": "6dc9d81d03b66b01a9c57b885b708cf04278969b", "url": "https://github.com/Graylog2/graylog2-server/commit/6dc9d81d03b66b01a9c57b885b708cf04278969b", "message": "Finish support for multiple ldap / AD servers\n\n - Add support to verify against multiple hosts in DefaultX509TrustManager\n\n - modify connection test to support and test multiple servers\n\n - remove validation for single server\n\nFixes #1046", "committedDate": "2020-11-13T14:29:43Z", "type": "commit"}, {"oid": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "url": "https://github.com/Graylog2/graylog2-server/commit/78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "message": "Remove yet another validation", "committedDate": "2020-11-13T14:56:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxMTU1MA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533611550", "bodyText": "How about validating that the servers list is not empty? That way we can prevent errors later on.", "author": "bernd", "createdAt": "2020-12-01T17:57:53Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java", "diffHunk": "@@ -80,9 +80,6 @@\n \n     @Override\n     public void validate(ValidationResult result) {\n-        if (servers().size() > 1) {", "originalCommit": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5a9b68db6d4a262ccb63227225a828b92ff84f7", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java\nindex 0629ae1bb8..af2b2c90be 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackendConfig.java\n\n@@ -80,6 +80,9 @@ public abstract class ADAuthServiceBackendConfig implements AuthServiceBackendCo\n \n     @Override\n     public void validate(ValidationResult result) {\n+        if (servers().isEmpty()) {\n+            result.addError(FIELD_SERVERS, \"Server list cannot be empty.\");\n+        }\n         if (isBlank(userSearchBase())) {\n             result.addError(FIELD_USER_SEARCH_BASE, \"User search base cannot be empty.\");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTE0OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621149", "bodyText": "Can we remove this comment?", "author": "bernd", "createdAt": "2020-12-01T18:13:33Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java", "diffHunk": "@@ -191,14 +195,42 @@ public AuthServiceBackendDTO prepareConfigUpdate(AuthServiceBackendDTO existingB\n     public AuthServiceBackendTestResult testConnection(@Nullable AuthServiceBackendDTO existingBackendConfig) {\n         final ADAuthServiceBackendConfig testConfig = buildTestConfig(existingBackendConfig);\n \n-        try (final LDAPConnection connection = ldapConnector.connect(testConfig.getLDAPConnectorConfig())) {\n+        final LDAPConnectorConfig config = testConfig.getLDAPConnectorConfig();\n+\n+        if (config.serverList().size() == 1) {\n+            return testSingleConnection(config, config.serverList().get(0));\n+        }\n+\n+        // Test each server separately, so we can see the result for each\n+        final List<AuthServiceBackendTestResult> testResults = config.serverList().stream().map(server -> testSingleConnection(config, server)).collect(Collectors.toList());\n+\n+        if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n+            return AuthServiceBackendTestResult\n+                    .createFailure(\"Test failure\",\n+                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));", "originalCommit": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5a9b68db6d4a262ccb63227225a828b92ff84f7", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\nindex 72c2e60001..bd8e18aac7 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/ADAuthServiceBackend.java\n\n@@ -207,7 +209,6 @@ public class ADAuthServiceBackend implements AuthServiceBackend {\n         if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n             return AuthServiceBackendTestResult\n                     .createFailure(\"Test failure\",\n-                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));\n                             testResults.stream().map(r -> {\n                                 if (r.isSuccess()) {\n                                     return r.message();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTI0OA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621248", "bodyText": "Can we remove this comment?", "author": "bernd", "createdAt": "2020-12-01T18:13:43Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java", "diffHunk": "@@ -171,14 +175,42 @@ public AuthServiceBackendDTO prepareConfigUpdate(AuthServiceBackendDTO existingB\n     public AuthServiceBackendTestResult testConnection(@Nullable AuthServiceBackendDTO existingBackendConfig) {\n         final LDAPAuthServiceBackendConfig testConfig = buildTestConfig(existingBackendConfig);\n \n-        try (final LDAPConnection connection = ldapConnector.connect(testConfig.getLDAPConnectorConfig())) {\n+        final LDAPConnectorConfig config = testConfig.getLDAPConnectorConfig();\n+\n+        if (config.serverList().size() == 1) {\n+            return testSingleConnection(config, config.serverList().get(0));\n+        }\n+\n+        // Test each server separately, so we can see the result for each\n+        final List<AuthServiceBackendTestResult> testResults = config.serverList().stream().map(server -> testSingleConnection(config, server)).collect(Collectors.toList());\n+\n+        if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n+            return AuthServiceBackendTestResult\n+                    .createFailure(\"Test failure\",\n+                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));", "originalCommit": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5a9b68db6d4a262ccb63227225a828b92ff84f7", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java\nindex 33f3119b93..f65839b728 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackend.java\n\n@@ -187,7 +189,6 @@ public class LDAPAuthServiceBackend implements AuthServiceBackend {\n         if (testResults.stream().anyMatch(res -> !res.isSuccess())) {\n             return AuthServiceBackendTestResult\n                     .createFailure(\"Test failure\",\n-                            //testResults.stream().map(AuthServiceBackendTestResult::errors).flatMap(Collection::stream).collect(Collectors.toList()));\n                             testResults.stream().map(r -> {\n                                 if (r.isSuccess()) {\n                                     return r.message();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMTU3NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533621575", "bodyText": "Same as for the AD config, how about checking if the list is not empty?", "author": "bernd", "createdAt": "2020-12-01T18:14:13Z", "path": "graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java", "diffHunk": "@@ -84,9 +84,6 @@\n \n     @Override\n     public void validate(ValidationResult result) {\n-        if (servers().size() > 1) {", "originalCommit": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b5a9b68db6d4a262ccb63227225a828b92ff84f7", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java\nindex 773b4c8719..9e0534c8af 100644\n--- a/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java\n+++ b/graylog2-server/src/main/java/org/graylog/security/authservice/backend/LDAPAuthServiceBackendConfig.java\n\n@@ -84,6 +84,9 @@ public abstract class LDAPAuthServiceBackendConfig implements AuthServiceBackend\n \n     @Override\n     public void validate(ValidationResult result) {\n+        if (servers().isEmpty()) {\n+            result.addError(FIELD_SERVERS, \"Server list cannot be empty.\");\n+        }\n         if (isBlank(userSearchBase())) {\n             result.addError(FIELD_USER_SEARCH_BASE, \"User search base cannot be empty.\");\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r533632021", "bodyText": "Is it actually okay to just check if the certificate matches any host in our list? I was wondering if this can be an issue because we don't know which host is giving us the certificate. So a host could give us the certificate of another host from our list.", "author": "bernd", "createdAt": "2020-12-01T18:30:50Z", "path": "graylog2-server/src/main/java/org/graylog2/security/DefaultX509TrustManager.java", "diffHunk": "@@ -107,10 +119,12 @@ private void validateHostnames(X509Certificate[] x509Certificates, String s) thr\n     }\n \n     private boolean certificateMatchesHostname(X509Certificate x509Certificate) {\n-        try {\n-            return this.authorizer.verify(this.host, x509Certificate);\n-        } catch (IOException e) {\n-            return false;\n-        }\n+        return this.hosts.stream().anyMatch(host -> {\n+            try {\n+                return this.authorizer.verify(host, x509Certificate);", "originalCommit": "78bd4fbe53cd9dbf704c8ef66f5e645f8b636441", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAyNjg0NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r534026845", "bodyText": "That's difficult to implement. I've added a javadoc comment to point this out.\nHowever, in our scenario, if I trust to talk to any of the servers in the list, it shouldn't matter which certificate they provide.", "author": "mpfz0r", "createdAt": "2020-12-02T09:42:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA4NzgwOA==", "url": "https://github.com/Graylog2/graylog2-server/pull/9485#discussion_r534087808", "bodyText": "Thanks! \ud83d\udc4d", "author": "bernd", "createdAt": "2020-12-02T11:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYzMjAyMQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a6f2bd84503e8281ae98a96c58a8c15c49fc1279", "url": "https://github.com/Graylog2/graylog2-server/commit/a6f2bd84503e8281ae98a96c58a8c15c49fc1279", "message": "Merge remote-tracking branch 'origin/master' into support-multiple-ldap-servers", "committedDate": "2020-12-02T08:55:26Z", "type": "commit"}, {"oid": "b5a9b68db6d4a262ccb63227225a828b92ff84f7", "url": "https://github.com/Graylog2/graylog2-server/commit/b5a9b68db6d4a262ccb63227225a828b92ff84f7", "message": "Fix review comments\n\n - remove dead code\n - keep server list validation\n - add javadoc for X509ExtendedTrustManager", "committedDate": "2020-12-02T09:39:59Z", "type": "commit"}]}