{"pr_number": 7725, "pr_title": "Extract IndexLookup from ElasticsearchBackend", "pr_createdAt": "2020-03-19T17:35:12Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7725", "timeline": [{"oid": "5488d174283656f8694bb9aabf2f8c1f1a2c83f8", "url": "https://github.com/Graylog2/graylog2-server/commit/5488d174283656f8694bb9aabf2f8c1f1a2c83f8", "message": "Extract IndexLookup from ElasticsearchBackend\n\nPreviously the lookup of indices for streams and time range was done\nin ElasticsearchBackend by loading indices, streams, and then finding\nmatches. It was impossible to reuse this logic elsewhere.\nFurthermore this made ElasticsearchBackend harder to test, because\na lot of setup was required to make sure that proper inddex ranges and\nstreams are loaded during the test.\n\nThis commit:\n- Extracts that logic into a separate class `IndexLookup`\n- Simplifies tests for ElasticsearchBackend accordingly\n- Adds tests for `IndexLookup`", "committedDate": "2020-03-19T17:26:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMzcwNA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7725#discussion_r395503704", "bodyText": "just a nitpick, but wouldn't it be more readable if the private function comes after the test?", "author": "kmerz", "createdAt": "2020-03-20T08:54:29Z", "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/IndexLookupTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+/**\n+ * This file is part of Graylog.\n+ *\n+ * Graylog is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Graylog is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Graylog.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+package org.graylog.plugins.views.search.elasticsearch;\n+\n+import org.graylog2.indexer.ranges.IndexRange;\n+import org.graylog2.indexer.ranges.IndexRangeService;\n+import org.graylog2.plugin.database.Persisted;\n+import org.graylog2.plugin.indexer.searches.timeranges.InvalidRangeParametersException;\n+import org.graylog2.plugin.indexer.searches.timeranges.RelativeRange;\n+import org.graylog2.plugin.streams.Stream;\n+import org.graylog2.streams.StreamService;\n+import org.joda.time.DateTime;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n+\n+import static java.util.Collections.emptySet;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.RETURNS_DEEP_STUBS;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+class IndexLookupTest {\n+\n+    private IndexRangeService indexRangeService;\n+    private StreamService streamService;\n+    private IndexLookup sut;\n+\n+    @BeforeEach\n+    void setUp() {\n+        indexRangeService = mock(IndexRangeService.class);\n+        streamService = mock(StreamService.class);\n+        sut = new IndexLookup(indexRangeService, streamService);\n+    }\n+\n+    @Test\n+    void findsIndicesBelongingToStreamsInTimeRange() {\n+\n+        Set<String> streamIds = mockStreams(\"s-1\", \"s-2\");\n+\n+        List<IndexRange> indexRanges = mockSomeIndexRanges();\n+\n+        IndexRange matchingIndexRange = indexRanges.get(0);\n+\n+        sut.indexRangeContainsOneOfStreams = (i, s) -> i.equals(matchingIndexRange);\n+\n+        Set<String> result = sut.indexNamesForStreamsInTimeRange(streamIds, someTimeRange());\n+\n+        assertThat(result).containsExactly(matchingIndexRange.indexName());\n+    }\n+\n+    private RelativeRange someTimeRange() {", "originalCommit": "5488d174283656f8694bb9aabf2f8c1f1a2c83f8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwNzgxOA==", "url": "https://github.com/Graylog2/graylog2-server/pull/7725#discussion_r395507818", "bodyText": "\ud83d\udc4d Yup, moved it down. I placed it after the first usage in the first test, but I agree that it should go with the other helpers to the bottom of the file.", "author": "alex-konn", "createdAt": "2020-03-20T09:03:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMzcwNA=="}], "type": "inlineReview", "revised_code": {"commit": "cbb176334500984619d80b75dc4bb7ea404bb83d", "chunk": "diff --git a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/IndexLookupTest.java b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/IndexLookupTest.java\nindex bd80b23990..cb490f2a68 100644\n--- a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/IndexLookupTest.java\n+++ b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/IndexLookupTest.java\n\n@@ -72,14 +72,6 @@ class IndexLookupTest {\n         assertThat(result).containsExactly(matchingIndexRange.indexName());\n     }\n \n-    private RelativeRange someTimeRange() {\n-        try {\n-            return RelativeRange.create(1);\n-        } catch (InvalidRangeParametersException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n     @Test\n     void returnsEmptySetForEmptyStreamIds() {\n         Set<String> result = sut.indexNamesForStreamsInTimeRange(emptySet(), someTimeRange());\n"}}, {"oid": "cbb176334500984619d80b75dc4bb7ea404bb83d", "url": "https://github.com/Graylog2/graylog2-server/commit/cbb176334500984619d80b75dc4bb7ea404bb83d", "message": "Moved private mehod in test after test methods", "committedDate": "2020-03-20T09:02:16Z", "type": "commit"}]}