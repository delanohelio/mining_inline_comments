{"pr_number": 7569, "pr_title": "Using field type of sort field for unmapped type in message list.", "pr_createdAt": "2020-02-27T12:52:57Z", "pr_url": "https://github.com/Graylog2/graylog2-server/pull/7569", "timeline": [{"oid": "321f48ae18290b7625231e079c34d1c8ccd075db", "url": "https://github.com/Graylog2/graylog2-server/commit/321f48ae18290b7625231e079c34d1c8ccd075db", "message": "Adding license header.", "committedDate": "2020-03-03T10:47:28Z", "type": "forcePushed"}, {"oid": "6f72390ea889bb5309c2a0faf4b6fad6701fa2e6", "url": "https://github.com/Graylog2/graylog2-server/commit/6f72390ea889bb5309c2a0faf4b6fad6701fa2e6", "message": "Extracting retrieval of field types to separate class.", "committedDate": "2020-03-04T09:14:08Z", "type": "forcePushed"}, {"oid": "f3ac45f8618c53c110c4105802a57c91f8b13bf5", "url": "https://github.com/Graylog2/graylog2-server/commit/f3ac45f8618c53c110c4105802a57c91f8b13bf5", "message": "Add field for field types in query context.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "3e7d5dfa4cce35ed0e55421794bd5ffd49308cda", "url": "https://github.com/Graylog2/graylog2-server/commit/3e7d5dfa4cce35ed0e55421794bd5ffd49308cda", "message": "Add method for retrieving field types for set of stream ids.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "4044a91602882f32f220665a8ff343a9e3aa35dc", "url": "https://github.com/Graylog2/graylog2-server/commit/4044a91602882f32f220665a8ff343a9e3aa35dc", "message": "Add missing dependency in tests.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "abcdfda9dd678f33f4537917f9ee131fd4c96359", "url": "https://github.com/Graylog2/graylog2-server/commit/abcdfda9dd678f33f4537917f9ee131fd4c96359", "message": "Use field types from context to generate unmapped type for message sort", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "3fc67c13b71718b849d5428f833da65b92188bf0", "url": "https://github.com/Graylog2/graylog2-server/commit/3fc67c13b71718b849d5428f833da65b92188bf0", "message": "Adding tests for `ESMessageList`.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "32b9cd0695ca4cdf27eb2dd5a3d049089b5d4531", "url": "https://github.com/Graylog2/graylog2-server/commit/32b9cd0695ca4cdf27eb2dd5a3d049089b5d4531", "message": "Adding tests for `ElasticsearchBackend`.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "6db322bbfb3e36d9642395e71b545cca96a493f6", "url": "https://github.com/Graylog2/graylog2-server/commit/6db322bbfb3e36d9642395e71b545cca96a493f6", "message": "Adding license header.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "3b2861dfa3bb329933e918e90e4a493b0c63cd6a", "url": "https://github.com/Graylog2/graylog2-server/commit/3b2861dfa3bb329933e918e90e4a493b0c63cd6a", "message": "Extracting retrieval of field types to separate class.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "84d8b8dfd145af187d1600f2f6705b78cdc82924", "url": "https://github.com/Graylog2/graylog2-server/commit/84d8b8dfd145af187d1600f2f6705b78cdc82924", "message": "Adding stream to message list.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "url": "https://github.com/Graylog2/graylog2-server/commit/473e7fe19e5f53bb64036b1536da5ffa6aac8194", "message": "Adding license header.", "committedDate": "2020-03-04T09:22:14Z", "type": "commit"}, {"oid": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "url": "https://github.com/Graylog2/graylog2-server/commit/473e7fe19e5f53bb64036b1536da5ffa6aac8194", "message": "Adding license header.", "committedDate": "2020-03-04T09:22:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDYwNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387814606", "bodyText": "It's unclear at first glance where \"stream1\" and \"someField\" come from.\nI'd suggest either declaring them in variables at the start of test and passing them down or extracting them from the messageList object.", "author": "alex-konn", "createdAt": "2020-03-04T17:19:17Z", "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));", "originalCommit": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDYzMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184632", "bodyText": "I decided to pass them to the method generating the message list, so they are close to the assertion.", "author": "dennisoelkers", "createdAt": "2020-03-05T09:52:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNDYwNg=="}], "type": "inlineReview", "revised_code": {"commit": "971123d2396b8ffa4e8a678e7f64653429fd78be", "chunk": "diff --git a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\nindex 5303f5eec6..f03871a23d 100644\n--- a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\n+++ b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\n\n@@ -96,7 +96,7 @@ public class ESMessageListTest {\n     public void passesTypeOfSortingFieldAsUnmappedType() {\n         final MessageList messageList = someMessageListWithSorting();\n         final ESGeneratedQueryContext context = mockQueryContext(messageList);\n-        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));\n+        when(context.fieldType(Collections.singleton(\"stream1\"), \"somefield\")).thenReturn(Optional.of(\"long\"));\n \n         final ESGeneratedQueryContext queryContext = generateQueryPartWithContextFor(messageList, true, Collections.emptySet(), context);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTAyNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387815026", "bodyText": "Pass in allFieldTypes directly instead of both the context and the stream IDs.", "author": "alex-konn", "createdAt": "2020-03-04T17:20:01Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {", "originalCommit": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDY3Nw==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184677", "bodyText": "\u2705", "author": "dennisoelkers", "createdAt": "2020-03-05T09:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxNTAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "971123d2396b8ffa4e8a678e7f64653429fd78be", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java b/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\nindex e69b906315..a6a86a72dc 100644\n--- a/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\n+++ b/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\n\n@@ -90,17 +92,12 @@ public class ESMessageList implements ESSearchTypeHandler<MessageList> {\n                 : messageList.effectiveStreams();\n \n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(\n-                SortBuilders.fieldSort(sort.field())\n-                        .order(sort.order())\n-                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n-        ));\n-    }\n-\n-    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {\n-        final Map<String, Set<String>> allFieldTypes = firstNonNull(queryContext.fieldTypes(effectiveStreamIds), Collections.emptyMap());\n-        final Set<String> fieldTypes = allFieldTypes.get(sort.field());\n-        return fieldTypes == null || fieldTypes.size() > 1 ? null : fieldTypes.stream().findFirst().orElse(null);\n+        sorts.forEach(sort -> {\n+            final FieldSortBuilder fieldSort = SortBuilders.fieldSort(sort.field())\n+                    .order(sort.order());\n+            final Optional<String> fieldType = queryContext.fieldType(effectiveStreamIds, sort.field());\n+            searchSourceBuilder.sort(fieldType.map(fieldSort::unmappedType).orElse(fieldSort));\n+        });\n     }\n \n     private void applyHighlightingIfActivated(SearchSourceBuilder searchSourceBuilder, SearchJob job, Query query) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODExMg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387818112", "bodyText": "I'd suggest pushing the null check down to ESGeneratedQueryContext or even FieldTypesLookup.\nI even think all of the logic in this method could be pushed down to FieldTypesLookup. Instead of asking for all field types for these streams, ask explicitly for the type of the field, i.e., FieldTypesLookup#getType(String fieldName, Set<String> streamIds). That would encapsulate all this stuff in FieldTypesLookup and this method could be replaced with: queryContext.getFieldType(sort.field(), effectiveStreamIds)", "author": "alex-konn", "createdAt": "2020-03-04T17:25:29Z", "path": "graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java", "diffHunk": "@@ -83,8 +85,22 @@ public void doGenerateQueryPart(SearchJob job, Query query, MessageList messageL\n \n         applyHighlightingIfActivated(searchSourceBuilder, job, query);\n \n+        final Set<String> effectiveStreamIds = messageList.effectiveStreams().isEmpty()\n+                ? query.usedStreamIds()\n+                : messageList.effectiveStreams();\n+\n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(sort.field(), sort.order()));\n+        sorts.forEach(sort -> searchSourceBuilder.sort(\n+                SortBuilders.fieldSort(sort.field())\n+                        .order(sort.order())\n+                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n+        ));\n+    }\n+\n+    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {\n+        final Map<String, Set<String>> allFieldTypes = firstNonNull(queryContext.fieldTypes(effectiveStreamIds), Collections.emptyMap());", "originalCommit": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDczNg==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184736", "bodyText": "Good idea! \u2705", "author": "dennisoelkers", "createdAt": "2020-03-05T09:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODExMg=="}], "type": "inlineReview", "revised_code": {"commit": "971123d2396b8ffa4e8a678e7f64653429fd78be", "chunk": "diff --git a/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java b/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\nindex e69b906315..a6a86a72dc 100644\n--- a/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\n+++ b/graylog2-server/src/main/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageList.java\n\n@@ -90,17 +92,12 @@ public class ESMessageList implements ESSearchTypeHandler<MessageList> {\n                 : messageList.effectiveStreams();\n \n         final List<Sort> sorts = firstNonNull(messageList.sort(), Collections.singletonList(Sort.create(Message.FIELD_TIMESTAMP, SortOrder.DESC)));\n-        sorts.forEach(sort -> searchSourceBuilder.sort(\n-                SortBuilders.fieldSort(sort.field())\n-                        .order(sort.order())\n-                        .unmappedType(unmappedTypeForSort(sort, queryContext, effectiveStreamIds))\n-        ));\n-    }\n-\n-    private String unmappedTypeForSort(Sort sort, ESGeneratedQueryContext queryContext, Set<String> effectiveStreamIds) {\n-        final Map<String, Set<String>> allFieldTypes = firstNonNull(queryContext.fieldTypes(effectiveStreamIds), Collections.emptyMap());\n-        final Set<String> fieldTypes = allFieldTypes.get(sort.field());\n-        return fieldTypes == null || fieldTypes.size() > 1 ? null : fieldTypes.stream().findFirst().orElse(null);\n+        sorts.forEach(sort -> {\n+            final FieldSortBuilder fieldSort = SortBuilders.fieldSort(sort.field())\n+                    .order(sort.order());\n+            final Optional<String> fieldType = queryContext.fieldType(effectiveStreamIds, sort.field());\n+            searchSourceBuilder.sort(fieldType.map(fieldSort::unmappedType).orElse(fieldSort));\n+        });\n     }\n \n     private void applyHighlightingIfActivated(SearchSourceBuilder searchSourceBuilder, SearchJob job, Query query) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTU1NQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r387825555", "bodyText": "This and the next test would become obsolete, if you followed my suggestion above to move that logic into FieldTypeLookup. I would add a few simpler unit tests for FieldTypesLookup instead.", "author": "alex-konn", "createdAt": "2020-03-04T17:38:44Z", "path": "graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java", "diffHunk": "@@ -88,6 +92,47 @@ public void appliesDecoratorsToQueryStringIfHighlightingActivated() {\n         JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.highlight.highlight_query.query_string.query\").isEqualTo(\"Foobar!\");\n     }\n \n+    @Test\n+    public void passesTypeOfSortingFieldAsUnmappedType() {\n+        final MessageList messageList = someMessageListWithSorting();\n+        final ESGeneratedQueryContext context = mockQueryContext(messageList);\n+        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));\n+\n+        final ESGeneratedQueryContext queryContext = generateQueryPartWithContextFor(messageList, true, Collections.emptySet(), context);\n+\n+        final DocumentContext doc = JsonPath.parse(queryContext.searchSourceBuilder(messageList).toString());\n+        JsonPathAssert.assertThat(doc).jsonPathAsString(\"$.sort[0].somefield.unmapped_type\").isEqualTo(\"long\");\n+    }\n+\n+    @Test", "originalCommit": "473e7fe19e5f53bb64036b1536da5ffa6aac8194", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE4NDc4OQ==", "url": "https://github.com/Graylog2/graylog2-server/pull/7569#discussion_r388184789", "bodyText": "\u2705", "author": "dennisoelkers", "createdAt": "2020-03-05T09:53:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNTU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "971123d2396b8ffa4e8a678e7f64653429fd78be", "chunk": "diff --git a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\nindex 5303f5eec6..f03871a23d 100644\n--- a/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\n+++ b/graylog2-server/src/test/java/org/graylog/plugins/views/search/elasticsearch/searchtypes/ESMessageListTest.java\n\n@@ -96,7 +96,7 @@ public class ESMessageListTest {\n     public void passesTypeOfSortingFieldAsUnmappedType() {\n         final MessageList messageList = someMessageListWithSorting();\n         final ESGeneratedQueryContext context = mockQueryContext(messageList);\n-        when(context.fieldTypes(Collections.singleton(\"stream1\"))).thenReturn(Collections.singletonMap(\"somefield\", Collections.singleton(\"long\")));\n+        when(context.fieldType(Collections.singleton(\"stream1\"), \"somefield\")).thenReturn(Optional.of(\"long\"));\n \n         final ESGeneratedQueryContext queryContext = generateQueryPartWithContextFor(messageList, true, Collections.emptySet(), context);\n \n"}}, {"oid": "971123d2396b8ffa4e8a678e7f64653429fd78be", "url": "https://github.com/Graylog2/graylog2-server/commit/971123d2396b8ffa4e8a678e7f64653429fd78be", "message": "Encapsulating field type lookup logic in `FieldTypesLookup`.", "committedDate": "2020-03-05T09:47:47Z", "type": "commit"}, {"oid": "928f5049d61757edd0391dbae7f0f35014edfe30", "url": "https://github.com/Graylog2/graylog2-server/commit/928f5049d61757edd0391dbae7f0f35014edfe30", "message": "Making use of constants in tests more explicit.", "committedDate": "2020-03-05T09:52:16Z", "type": "commit"}, {"oid": "928f5049d61757edd0391dbae7f0f35014edfe30", "url": "https://github.com/Graylog2/graylog2-server/commit/928f5049d61757edd0391dbae7f0f35014edfe30", "message": "Making use of constants in tests more explicit.", "committedDate": "2020-03-05T09:52:16Z", "type": "forcePushed"}]}