{"pr_number": 784, "pr_title": "Fixes alias handling for ImportHandlers.", "pr_createdAt": "2020-06-16T14:06:37Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/784", "timeline": [{"oid": "28bece0532ae5dfddc688ff6f17a816f00fc8143", "url": "https://github.com/scireum/sirius-biz/commit/28bece0532ae5dfddc688ff6f17a816f00fc8143", "message": "Organizes imports.", "committedDate": "2020-06-16T13:06:55Z", "type": "commit"}, {"oid": "968e52e42998b34e00d8d18b39fcea44636af3a3", "url": "https://github.com/scireum/sirius-biz/commit/968e52e42998b34e00d8d18b39fcea44636af3a3", "message": "Refactors common logic into a base class.", "committedDate": "2020-06-16T13:08:39Z", "type": "commit"}, {"oid": "d3345f31ae50824a91f5927c690bf4e0f9ce151f", "url": "https://github.com/scireum/sirius-biz/commit/d3345f31ae50824a91f5927c690bf4e0f9ce151f", "message": "Makes the export of an ID optional as this might confuse users.\n\nIf a database ID is present, we ONLY try to resolve a record using the ID\nand discarding all other fields.", "committedDate": "2020-06-16T13:09:47Z", "type": "commit"}, {"oid": "f0e57bf5e7e8009e6fc1bea59b8af37ab5c29b76", "url": "https://github.com/scireum/sirius-biz/commit/f0e57bf5e7e8009e6fc1bea59b8af37ab5c29b76", "message": "Updates to the latest sirius kernel.", "committedDate": "2020-06-16T14:02:25Z", "type": "commit"}, {"oid": "3a6fb58f4a0c78dce11f3cebe4aa41ca3c3ef175", "url": "https://github.com/scireum/sirius-biz/commit/3a6fb58f4a0c78dce11f3cebe4aa41ca3c3ef175", "message": "Removes a duplicate alias which is already added vis the Property -> FieldDefinition transformers.\n\nOtherwise the aliases won't show up in the help screen.", "committedDate": "2020-06-16T14:03:32Z", "type": "commit"}, {"oid": "c6739b8bc2f5ef3a987194168a96e8aa9a06c1aa", "url": "https://github.com/scireum/sirius-biz/commit/c6739b8bc2f5ef3a987194168a96e8aa9a06c1aa", "message": "Removes an unnecessary null check.", "committedDate": "2020-06-16T14:04:19Z", "type": "commit"}, {"oid": "f65fa4ee6d889c661dc5fed27a039fe061586e48", "url": "https://github.com/scireum/sirius-biz/commit/f65fa4ee6d889c661dc5fed27a039fe061586e48", "message": "Fixes a typo.", "committedDate": "2020-06-16T14:04:30Z", "type": "commit"}, {"oid": "c3dfc239b08104bd74849ae676944221e1baa2bf", "url": "https://github.com/scireum/sirius-biz/commit/c3dfc239b08104bd74849ae676944221e1baa2bf", "message": "Updates to the latest sirius dependencies.", "committedDate": "2020-06-16T14:28:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMTM2NA==", "url": "https://github.com/scireum/sirius-biz/pull/784#discussion_r441301364", "bodyText": "Geh\u00f6rt zu #785", "author": "jmuscireum", "createdAt": "2020-06-17T06:08:26Z", "path": "src/main/java/sirius/biz/storage/layer3/BlockwiseIterator.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer3;\n+\n+import sirius.kernel.commons.Limit;\n+\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+\n+class BlockwiseIterator implements Iterator<VirtualFile> {", "originalCommit": "c3dfc239b08104bd74849ae676944221e1baa2bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87df2ef4e33bff15ff7004cfd0be9960f6d096a5", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/BlockwiseIterator.java b/src/main/java/sirius/biz/storage/layer3/BlockwiseIterator.java\ndeleted file mode 100644\nindex e9b05cdf..00000000\n--- a/src/main/java/sirius/biz/storage/layer3/BlockwiseIterator.java\n+++ /dev/null\n\n@@ -1,59 +0,0 @@\n-/*\n- * Made with all the love in the world\n- * by scireum in Remshalden, Germany\n- *\n- * Copyright by scireum GmbH\n- * http://www.scireum.de - info@scireum.de\n- */\n-\n-package sirius.biz.storage.layer3;\n-\n-import sirius.kernel.commons.Limit;\n-\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.NoSuchElementException;\n-\n-class BlockwiseIterator implements Iterator<VirtualFile> {\n-\n-    private static final int BLOCK_SIZE = 1000;\n-\n-    private VirtualFile virtualFile;\n-    private int nextStart = 0;\n-    private Iterator<VirtualFile> currentBlock;\n-\n-    protected BlockwiseIterator(VirtualFile virtualFile) {\n-        this.virtualFile = virtualFile;\n-        this.currentBlock = fetchNextBlock();\n-    }\n-\n-    private Iterator<VirtualFile> fetchNextBlock() {\n-        List<VirtualFile> buffer = new ArrayList<>();\n-        virtualFile.children(new FileSearch(buffer::add).withLimit(new Limit(nextStart, BLOCK_SIZE)));\n-        if (buffer.isEmpty()) {\n-            return null;\n-        }\n-\n-        nextStart += buffer.size();\n-        return buffer.iterator();\n-    }\n-\n-    @Override\n-    public boolean hasNext() {\n-        return currentBlock != null;\n-    }\n-\n-    @Override\n-    public VirtualFile next() {\n-        if (currentBlock != null && !currentBlock.hasNext()) {\n-            currentBlock = fetchNextBlock();\n-        }\n-\n-        if (currentBlock == null) {\n-            throw new NoSuchElementException();\n-        }\n-\n-        return currentBlock.next();\n-    }\n-}\n"}}, {"oid": "87df2ef4e33bff15ff7004cfd0be9960f6d096a5", "url": "https://github.com/scireum/sirius-biz/commit/87df2ef4e33bff15ff7004cfd0be9960f6d096a5", "message": "Removes a prematurely committed file.", "committedDate": "2020-06-17T07:34:36Z", "type": "commit"}]}