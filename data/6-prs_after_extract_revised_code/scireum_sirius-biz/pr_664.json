{"pr_number": 664, "pr_title": "Allows for a BooleanParameter to be nullable/optional", "pr_createdAt": "2020-01-17T09:47:07Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/664", "timeline": [{"oid": "dfe60f40daef36c4a900341c0a9157bf4bdbc6e5", "url": "https://github.com/scireum/sirius-biz/commit/dfe60f40daef36c4a900341c0a9157bf4bdbc6e5", "message": "Allows for a BooleanParameter to be nullable/optional\n\nThere are cases where we need to know if the parameter is selected at all and not always default to false.\nDefault value is false unless markNullable is used.\n\nFixes: OX-5522", "committedDate": "2020-01-17T09:46:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1MzQ5NQ==", "url": "https://github.com/scireum/sirius-biz/pull/664#discussion_r367853495", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional\");\n          \n          \n            \n                            \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional.\");", "author": "meg1502", "createdAt": "2020-01-17T09:57:31Z", "path": "src/main/java/sirius/biz/jobs/params/BooleanParameter.java", "diffHunk": "@@ -47,18 +50,41 @@ protected String checkAndTransformValue(Value input) {\n         if (isRequired() && !input.asBoolean()) {\n             return null;\n         }\n-\n+        if (nullable && !resolveFromString(input).isPresent()) {\n+            return null;\n+        }\n         return NLS.toMachineString(input.asBoolean());\n     }\n \n+    /**\n+     * Marks the parameter as boolean.\n+     * <p>\n+     * This allows for a tri-state boolean where a job parameter can also receive\n+     * {@code null} when a value is not selected instead of being defaulted to false.\n+     *\n+     * @return the parameter itself for fluent method calls\n+     */\n+    public BooleanParameter markNullable() {\n+        this.nullable = true;\n+        return self();\n+    }\n+\n     @Override\n     public BooleanParameter markRequired() {\n         throw new UnsupportedOperationException(\n-                \"A boolean parameter must not be marked as required as it is inherently so!\");\n+                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional\");", "originalCommit": "dfe60f40daef36c4a900341c0a9157bf4bdbc6e5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6730a9ec67f2c2a18c70d68d9e501e0d528155ea", "chunk": "diff --git a/src/main/java/sirius/biz/jobs/params/BooleanParameter.java b/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\nindex 6ec8bb12..aabd30e3 100644\n--- a/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\n+++ b/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\n\n@@ -72,7 +72,7 @@ public class BooleanParameter extends Parameter<Boolean, BooleanParameter> {\n     @Override\n     public BooleanParameter markRequired() {\n         throw new UnsupportedOperationException(\n-                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional\");\n+                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional.\");\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NzA1OQ==", "url": "https://github.com/scireum/sirius-biz/pull/664#discussion_r367857059", "bodyText": "this does not match the parsing of input.asBoolean which is used when the parameter is required, as $NLS.yes is also considerd as true (and $NLS.no as false)\n->\nif the parameter is required i will get true for \"yes\"\nif the parameter is nullable i will get null for \"yes\"", "author": "meg1502", "createdAt": "2020-01-17T10:05:36Z", "path": "src/main/java/sirius/biz/jobs/params/BooleanParameter.java", "diffHunk": "@@ -47,18 +50,41 @@ protected String checkAndTransformValue(Value input) {\n         if (isRequired() && !input.asBoolean()) {\n             return null;\n         }\n-\n+        if (nullable && !resolveFromString(input).isPresent()) {\n+            return null;\n+        }\n         return NLS.toMachineString(input.asBoolean());\n     }\n \n+    /**\n+     * Marks the parameter as boolean.\n+     * <p>\n+     * This allows for a tri-state boolean where a job parameter can also receive\n+     * {@code null} when a value is not selected instead of being defaulted to false.\n+     *\n+     * @return the parameter itself for fluent method calls\n+     */\n+    public BooleanParameter markNullable() {\n+        this.nullable = true;\n+        return self();\n+    }\n+\n     @Override\n     public BooleanParameter markRequired() {\n         throw new UnsupportedOperationException(\n-                \"A boolean parameter must not be marked as required as it is inherently so!\");\n+                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional\");\n     }\n \n     @Override\n-    protected Optional<Boolean> resolveFromString(Value input) {\n+    public boolean isRequired() {\n+        return !nullable;\n+    }\n+\n+    @Override\n+    protected Optional<Boolean> resolveFromString(@Nonnull Value input) {\n+        if (nullable && !(\"true\".equalsIgnoreCase(input.asString()) || \"false\".equalsIgnoreCase(input.asString()))) {", "originalCommit": "dfe60f40daef36c4a900341c0a9157bf4bdbc6e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1OTUwMg==", "url": "https://github.com/scireum/sirius-biz/pull/664#discussion_r367859502", "bodyText": "my suggestion:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (nullable && !(\"true\".equalsIgnoreCase(input.asString()) || \"false\".equalsIgnoreCase(input.asString()))) {\n          \n          \n            \n                    if (nullable && !input.isFilled()) {", "author": "meg1502", "createdAt": "2020-01-17T10:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NzA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1OTc0Nw==", "url": "https://github.com/scireum/sirius-biz/pull/664#discussion_r367859747", "bodyText": "Cannot use input.asBoolean here (is actually the whole point of it), because it evaluates anything else as false. In this usage case (and the actual values of the selectBoolean template) only allow (and expect) true or false.", "author": "idlira", "createdAt": "2020-01-17T10:11:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NzA1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2MDY4MQ==", "url": "https://github.com/scireum/sirius-biz/pull/664#discussion_r367860681", "bodyText": "but \"yes\" and \"no\" should still be parsed as booleans, and null should possibly only be returned if the value is not filled at all?", "author": "meg1502", "createdAt": "2020-01-17T10:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg1NzA1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6730a9ec67f2c2a18c70d68d9e501e0d528155ea", "chunk": "diff --git a/src/main/java/sirius/biz/jobs/params/BooleanParameter.java b/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\nindex 6ec8bb12..aabd30e3 100644\n--- a/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\n+++ b/src/main/java/sirius/biz/jobs/params/BooleanParameter.java\n\n@@ -72,7 +72,7 @@ public class BooleanParameter extends Parameter<Boolean, BooleanParameter> {\n     @Override\n     public BooleanParameter markRequired() {\n         throw new UnsupportedOperationException(\n-                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional\");\n+                \"A boolean parameter must not be marked as required as it is inherently so. Use markNullable() to make the parameter optional.\");\n     }\n \n     @Override\n"}}, {"oid": "6730a9ec67f2c2a18c70d68d9e501e0d528155ea", "url": "https://github.com/scireum/sirius-biz/commit/6730a9ec67f2c2a18c70d68d9e501e0d528155ea", "message": "Typo\n\nCo-Authored-By: meg1502 <meg@scireum.de>", "committedDate": "2020-01-17T10:10:12Z", "type": "commit"}, {"oid": "13fa64260f1f8bbcaafd3956d861eeb91db282db", "url": "https://github.com/scireum/sirius-biz/commit/13fa64260f1f8bbcaafd3956d861eeb91db282db", "message": "Returns optional only when the value is not filled\n\nThis way it behaves the same as in the non-nullable case.\nStrings such as yes, no will still be evaluated as boolean.\nForeign strings will be evaluated as false.", "committedDate": "2020-01-17T10:27:04Z", "type": "commit"}]}