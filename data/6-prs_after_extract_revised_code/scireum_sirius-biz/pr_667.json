{"pr_number": 667, "pr_title": "Adds a method to retrieve the query from the page helper", "pr_createdAt": "2020-01-21T12:52:28Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/667", "timeline": [{"oid": "e361047ad15bf04651d3c26896d21711fc8ee61a", "url": "https://github.com/scireum/sirius-biz/commit/e361047ad15bf04651d3c26896d21711fc8ee61a", "message": "Adds a method to retrieve the query from the page helper\n\nUseful to be used by Batch Jobs to reuse the current query/filters from a page.", "committedDate": "2020-01-21T12:50:16Z", "type": "commit"}, {"oid": "bd3e818de0ede497cb3bd675a6a2b6e8b5962f2f", "url": "https://github.com/scireum/sirius-biz/commit/bd3e818de0ede497cb3bd675a6a2b6e8b5962f2f", "message": "Removes duplicated code", "committedDate": "2020-01-21T12:57:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NTc3Nw==", "url": "https://github.com/scireum/sirius-biz/pull/667#discussion_r369495777", "bodyText": "couldn't we then kill iterate and iterateAll as these as 100% redundant to query.iteratAll etc...", "author": "andyHa", "createdAt": "2020-01-22T11:02:38Z", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -392,6 +388,19 @@ public void iterateAllTotalItems(Consumer<E> consumer) {\n         });\n     }\n \n+    /**\n+     * Returns the underlying query for this page helper including all given facets.\n+     *\n+     * @return the {@link Query} object\n+     */\n+    public Q buildUnderlyingQuery() {", "originalCommit": "bd3e818de0ede497cb3bd675a6a2b6e8b5962f2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzNDE4MA==", "url": "https://github.com/scireum/sirius-biz/pull/667#discussion_r369534180", "bodyText": "Sound logical. Will rip'em off...", "author": "idlira", "createdAt": "2020-01-22T12:35:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NTc3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "1c7504a6598f5f094474de1a56d04588574bf7a3", "chunk": "diff --git a/src/main/java/sirius/biz/web/BasePageHelper.java b/src/main/java/sirius/biz/web/BasePageHelper.java\nindex 4c4bc02c..4ae21378 100644\n--- a/src/main/java/sirius/biz/web/BasePageHelper.java\n+++ b/src/main/java/sirius/biz/web/BasePageHelper.java\n\n@@ -359,35 +359,6 @@ public abstract class BasePageHelper<E extends BaseEntity<?>, C extends Constrai\n         return result;\n     }\n \n-    /**\n-     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n-     * <p>\n-     * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.\n-     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n-     * using the same query and facet suppliers as the view that is to be exported.\n-     *\n-     * @param resultHandler the handler to be invoked for each item in the result\n-     */\n-    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n-        buildUnderlyingQuery().iterate(resultHandler);\n-    }\n-\n-    /**\n-     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n-     * <p>\n-     * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.\n-     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n-     * using the same query and facet suppliers as the view that is to be exported.\n-     *\n-     * @param consumer the handler to be invoked for each item in the result\n-     */\n-    public void iterateAllTotalItems(Consumer<E> consumer) {\n-        iterateTotalItems(r -> {\n-            consumer.accept(r);\n-            return true;\n-        });\n-    }\n-\n     /**\n      * Returns the underlying query for this page helper including all given facets.\n      *\n"}}, {"oid": "1c7504a6598f5f094474de1a56d04588574bf7a3", "url": "https://github.com/scireum/sirius-biz/commit/1c7504a6598f5f094474de1a56d04588574bf7a3", "message": "Removes unnecessary methods\n\nUse .buildUnderlyingQuery().(iterate|iterateAll) instead.", "committedDate": "2020-01-22T12:33:57Z", "type": "commit"}]}