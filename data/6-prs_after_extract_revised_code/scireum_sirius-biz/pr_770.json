{"pr_number": 770, "pr_title": "SE-9718 Adds a cache for resolving blobs by path", "pr_createdAt": "2020-06-04T07:06:11Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/770", "timeline": [{"oid": "a42bc67ef071f49eb541391ed3e3792b9ab89801", "url": "https://github.com/scireum/sirius-biz/commit/a42bc67ef071f49eb541391ed3e3792b9ab89801", "message": "Adds a cache for resolving blobs by path\n\nBecause S2 needs to resolve files for public viewing using the path,\nthis leads to a lot of database lookups. To counter this we now employ\na cache.\n\nFixes: SE-9718", "committedDate": "2020-06-04T06:35:12Z", "type": "commit"}, {"oid": "1ff2c509de602ab217e51254d48d72d8ab821de1", "url": "https://github.com/scireum/sirius-biz/commit/1ff2c509de602ab217e51254d48d72d8ab821de1", "message": "Moves the deletes into the abstract class\n\nThis allows the cache handling to happen in one place.\n\nFixes: SE-9718", "committedDate": "2020-06-04T07:01:09Z", "type": "commit"}, {"oid": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "url": "https://github.com/scireum/sirius-biz/commit/754b8a4b443a5273f4ec82304a3c9b17160a6071", "message": "Also clear the path cache when updating a blob\n\nThis might update the filename. Thus we need to clear the cache.\n\nFixes: SE-9718", "committedDate": "2020-06-04T07:01:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0NTgwMQ==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435045801", "bodyText": "shouldn't the bucket name be in here somewhere?", "author": "andyHa", "createdAt": "2020-06-04T07:25:33Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -298,6 +313,13 @@ public Directory getRoot(String tenantId) {\n         if (Strings.isEmpty(path)) {\n             return Optional.empty();\n         }\n+\n+        String cacheKey = tenantId + \"-\" + ensureRelativePath(path);", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2593500d818c0c13aa4417fbd77693fb9135eb99", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\nindex 69fc50f7..fd9c13c0 100644\n--- a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n+++ b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n\n@@ -314,9 +314,13 @@ public abstract class BasicBlobStorageSpace<B extends Blob & OptimisticCreate, D\n             return Optional.empty();\n         }\n \n-        String cacheKey = tenantId + \"-\" + ensureRelativePath(path);\n+        return Optional.ofNullable(blobByPathCache.get(determinePathCacheKey(tenantId, path),\n+                                                       ignored -> fetchByPath(tenantId, path)));\n+    }\n \n-        return Optional.ofNullable(blobByPathCache.get(cacheKey, ignored -> fetchByPath(tenantId, path)));\n+    @Nonnull\n+    private String determinePathCacheKey(String tenantId, String path) {\n+        return spaceName + \"-\" + tenantId + \"-\" + ensureRelativePath(path);\n     }\n \n     protected Blob fetchByPath(String tenantId, @Nonnull String path) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0NjQxMw==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435046413", "bodyText": "looks redundant to the code above", "author": "andyHa", "createdAt": "2020-06-04T07:26:42Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -332,6 +354,12 @@ public Blob findOrCreateByPath(String tenantId, String path) {\n             throw new IllegalArgumentException(\"An empty path was provided!\");\n         }\n \n+        String cacheKey = tenantId + \"-\" + ensureRelativePath(path);", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2593500d818c0c13aa4417fbd77693fb9135eb99", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\nindex 69fc50f7..fd9c13c0 100644\n--- a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n+++ b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n\n@@ -354,9 +358,8 @@ public abstract class BasicBlobStorageSpace<B extends Blob & OptimisticCreate, D\n             throw new IllegalArgumentException(\"An empty path was provided!\");\n         }\n \n-        String cacheKey = tenantId + \"-\" + ensureRelativePath(path);\n-\n-        return blobByPathCache.get(cacheKey, ignored -> fetchOrCreateByPath(tenantId, path));\n+        return blobByPathCache.get(determinePathCacheKey(tenantId, path),\n+                                   ignored -> fetchOrCreateByPath(tenantId, path));\n     }\n \n     protected Blob fetchOrCreateByPath(String tenantId, @Nonnull String path) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0Njc2Nw==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435046767", "bodyText": "is this intentionally exposed as public. the official way is Directory.delete()", "author": "andyHa", "createdAt": "2020-06-04T07:27:22Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -701,6 +730,24 @@ private void handleTenantMismatch(Object objectToModify, D newParent) {\n                         .handle();\n     }\n \n+    /**\n+     * Deletes the given directory.\n+     *\n+     * @param directory the directory to delete\n+     */\n+    public void deleteDirectory(D directory) {", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEwNjY2Nw==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435106667", "bodyText": "Otherwise it is not possible to call deleteDirectory from SQLDirectory and MongoDirectory.", "author": "jmuscireum", "createdAt": "2020-06-04T09:10:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0Njc2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNzMxNQ==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435117315", "bodyText": "k", "author": "andyHa", "createdAt": "2020-06-04T09:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0Njc2Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0Njk5OA==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435046998", "bodyText": "s.a. Blob.delete()", "author": "andyHa", "createdAt": "2020-06-04T07:27:45Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -770,6 +821,24 @@ public void move(B blob, @Nullable D newParent) {\n      */\n     protected abstract void updateBlobParent(B blob, D newParent);\n \n+    /**\n+     * Deletes the given blob.\n+     *\n+     * @param blob the blob to delete\n+     */\n+    public void delete(B blob) {", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0NzcyNA==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435047724", "bodyText": "only if name changes?", "author": "andyHa", "createdAt": "2020-06-04T07:28:58Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -841,6 +912,8 @@ public void updateContent(B blob, @Nullable String filename, File file) {\n                 blob.fetchVariants().forEach(BlobVariant::delete);\n                 getPhysicalSpace().delete(previousPhysicalId.get());\n             }\n+\n+            blobByPathCache.clear();", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ef0d3c450dd92b0018a36428753d172c45638030", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\nindex 69fc50f7..eed2c6ce 100644\n--- a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n+++ b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n\n@@ -913,7 +916,9 @@ public abstract class BasicBlobStorageSpace<B extends Blob & OptimisticCreate, D\n                 getPhysicalSpace().delete(previousPhysicalId.get());\n             }\n \n-            blobByPathCache.clear();\n+            if (Strings.isFilled(filename)) {\n+                blobByPathCache.clear();\n+            }\n         } catch (Exception e) {\n             try {\n                 getPhysicalSpace().delete(nextPhysicalId);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0Nzc5MQ==", "url": "https://github.com/scireum/sirius-biz/pull/770#discussion_r435047791", "bodyText": "s.a.", "author": "andyHa", "createdAt": "2020-06-04T07:29:05Z", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -891,6 +964,8 @@ public void updateContent(B blob, String filename, InputStream data, long conten\n                 blob.fetchVariants().forEach(BlobVariant::delete);\n                 getPhysicalSpace().delete(previousPhysicalId.get());\n             }\n+\n+            blobByPathCache.clear();", "originalCommit": "754b8a4b443a5273f4ec82304a3c9b17160a6071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ef0d3c450dd92b0018a36428753d172c45638030", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\nindex 69fc50f7..eed2c6ce 100644\n--- a/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n+++ b/src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java\n\n@@ -965,7 +970,9 @@ public abstract class BasicBlobStorageSpace<B extends Blob & OptimisticCreate, D\n                 getPhysicalSpace().delete(previousPhysicalId.get());\n             }\n \n-            blobByPathCache.clear();\n+            if (Strings.isFilled(filename)) {\n+                blobByPathCache.clear();\n+            }\n         } catch (Exception e) {\n             try {\n                 getPhysicalSpace().delete(nextPhysicalId);\n"}}, {"oid": "2593500d818c0c13aa4417fbd77693fb9135eb99", "url": "https://github.com/scireum/sirius-biz/commit/2593500d818c0c13aa4417fbd77693fb9135eb99", "message": "Also use the space name inside the cache key\n\nThe space name needs to be part of the key, as there might be files\nwith the same path in different spaces.\n\nFixes: SE-9718", "committedDate": "2020-06-04T09:04:24Z", "type": "commit"}, {"oid": "ef0d3c450dd92b0018a36428753d172c45638030", "url": "https://github.com/scireum/sirius-biz/commit/ef0d3c450dd92b0018a36428753d172c45638030", "message": "Only clear the cache when updating a blob if the name was changed\n\nFixes: SE-9718", "committedDate": "2020-06-04T09:05:12Z", "type": "commit"}]}