{"pr_number": 669, "pr_title": "Adds new creation methods for MutableVirtualFile to offer a safe variant ", "pr_createdAt": "2020-01-21T17:25:17Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/669", "timeline": [{"oid": "38ee78c8dcc8f22cba5a756ff93f07a07efd40bd", "url": "https://github.com/scireum/sirius-biz/commit/38ee78c8dcc8f22cba5a756ff93f07a07efd40bd", "message": "Adds new creation methods for MutableVirtualFile to offer a safe variant\n\nFixes: OX-5616", "committedDate": "2020-01-21T17:19:32Z", "type": "commit"}, {"oid": "da8fabf1528212c4bcc3de1b242b0cd5e00ded7f", "url": "https://github.com/scireum/sirius-biz/commit/da8fabf1528212c4bcc3de1b242b0cd5e00ded7f", "message": "Removes public access to the MutableVirtualFile Constructor\n\nFixes: OX-5616", "committedDate": "2020-01-21T17:24:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369401413", "bodyText": "Do we need to make sure these file names are also Windows-compatible? If so, we should include a few more characters to the list.\n\nLinux/Unix: / (forward slash)\nWindows: < (less than) > (greater than) : (colon - sometimes works, but is actually NTFS Alternate Data Streams) \" (double quote) / (forward slash) \\ (backslash) | (vertical bar or pipe) ? ( question mark) * (asterisk)", "author": "idlira", "createdAt": "2020-01-22T07:21:40Z", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -40,15 +42,44 @@ protected MutableVirtualFile() {\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n      *\n-     * @param parent the parent of the file\n-     * @param name   the name of the file\n+     * @see #create(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n      */\n     protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n         super(parent, name);\n     }\n \n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains '/'\n+     */\n+    public static MutableVirtualFile create(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any '/' chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replace('/', '_'));", "originalCommit": "da8fabf1528212c4bcc3de1b242b0cd5e00ded7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5MDE3NQ==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369490175", "bodyText": "I think we only have to regard the SFTP restrictions for filenames", "author": "sabieber", "createdAt": "2020-01-22T10:50:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NDU5Nw==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369494597", "bodyText": "Maybe blocking some more restricted characters would be a sane approach and wouldn't hurt too much(?)\nhttps://en.wikipedia.org/wiki/Filename has a good table - and everythign except . and \" \" seems dangerous. Maybe we provide three methods one that crashes, one that replaces and one that accepts everything (while trusting the caller) to properly check and format the string(?)", "author": "andyHa", "createdAt": "2020-01-22T10:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw=="}], "type": "inlineReview", "revised_code": {"commit": "365c7454c65ee18e08cae6339390b6cbfbdd0c32", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\nindex 50686b13..8fa36e65 100644\n--- a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n+++ b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n\n@@ -44,7 +44,7 @@ public class MutableVirtualFile extends VirtualFile {\n     /**\n      * Use the static factory methods to obtain a new instance.\n      *\n-     * @see #create(VirtualFile, String)\n+     * @see #checkedCreate(VirtualFile, String)\n      * @see #safeCreate(VirtualFile, String)\n      */\n     protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n"}}, {"oid": "365c7454c65ee18e08cae6339390b6cbfbdd0c32", "url": "https://github.com/scireum/sirius-biz/commit/365c7454c65ee18e08cae6339390b6cbfbdd0c32", "message": "Adds a another method for unsafe file creations\n\nFixes: OX-5616", "committedDate": "2020-01-27T15:12:55Z", "type": "commit"}, {"oid": "07361fa584c2fc25049fbca7a79e9c61cfc602cd", "url": "https://github.com/scireum/sirius-biz/commit/07361fa584c2fc25049fbca7a79e9c61cfc602cd", "message": "Replaces more illegal chars\n\nFixes: OX-5616", "committedDate": "2020-01-27T15:33:48Z", "type": "commit"}, {"oid": "904c362498daba81db6501d121cd2ff6111d7fa6", "url": "https://github.com/scireum/sirius-biz/commit/904c362498daba81db6501d121cd2ff6111d7fa6", "message": "Merge remote-tracking branch 'remotes/origin/master' into meg/OX-5616\n\n# Conflicts:\n#\tsrc/main/java/sirius/biz/storage/layer3/uplink/ftp/FTPUplink.java\n#\tsrc/main/java/sirius/biz/storage/layer3/uplink/sftp/SFTPUplink.java", "committedDate": "2020-01-27T15:34:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMzcxNQ==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371313715", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n          \n          \n            \n                 * @throws IllegalArgumentException if the given name is empty or contains an {@link #REGEX_ILLEGAL_FILE_CHARS illegal} char", "author": "andyHa", "createdAt": "2020-01-27T15:39:15Z", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char", "originalCommit": "904c362498daba81db6501d121cd2ff6111d7fa6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c7987a72e001bd9a348644a5606c538b69c3bdf", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\nindex a9c945ce..6ce63607 100644\n--- a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n+++ b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n\n@@ -59,7 +59,7 @@ public class MutableVirtualFile extends VirtualFile {\n      * @param parent the parent of the file\n      * @param name   the name of the file\n      * @return a new instance of this class\n-     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n+     * @throws IllegalArgumentException if the given name is empty or contains an {@link #REGEX_ILLEGAL_FILE_CHARS illegal} char\n      */\n     public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n         if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMzg4OQ==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371313889", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n          \n          \n            \n                 * Replaces any {@link #REGEX_ILLEGAL_FILE_CHARS illegal} chars in the given String and if the given String is empty, <tt>null</tt> is returned.", "author": "andyHa", "createdAt": "2020-01-27T15:39:32Z", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n      */\n-    public MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n-        super(parent, name);\n+    public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n+            throw new IllegalArgumentException(\"A filename must be filled and must not contain illegal charachters.\");\n+        }\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.", "originalCommit": "904c362498daba81db6501d121cd2ff6111d7fa6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c7987a72e001bd9a348644a5606c538b69c3bdf", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\nindex a9c945ce..6ce63607 100644\n--- a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n+++ b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n\n@@ -59,7 +59,7 @@ public class MutableVirtualFile extends VirtualFile {\n      * @param parent the parent of the file\n      * @param name   the name of the file\n      * @return a new instance of this class\n-     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n+     * @throws IllegalArgumentException if the given name is empty or contains an {@link #REGEX_ILLEGAL_FILE_CHARS illegal} char\n      */\n     public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n         if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxNDA1Mw==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371314053", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * or {@link #safeCreate(VirtualFile, String)} to account for illegal characters.\n          \n          \n            \n                 * or {@link #safeCreate(VirtualFile, String)} to account for {@link #REGEX_ILLEGAL_FILE_CHARS illegal} characters.", "author": "andyHa", "createdAt": "2020-01-27T15:39:48Z", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n      */\n-    public MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n-        super(parent, name);\n+    public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n+            throw new IllegalArgumentException(\"A filename must be filled and must not contain illegal charachters.\");\n+        }\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replaceAll(REGEX_ILLEGAL_FILE_CHARS, \"_\"));\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * This method should only be used if you know what you are doing. In most cases use either {@link #checkedCreate(VirtualFile, String)}\n+     * or {@link #safeCreate(VirtualFile, String)} to account for illegal characters.", "originalCommit": "904c362498daba81db6501d121cd2ff6111d7fa6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6c7987a72e001bd9a348644a5606c538b69c3bdf", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\nindex a9c945ce..6ce63607 100644\n--- a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n+++ b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n\n@@ -59,7 +59,7 @@ public class MutableVirtualFile extends VirtualFile {\n      * @param parent the parent of the file\n      * @param name   the name of the file\n      * @return a new instance of this class\n-     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n+     * @throws IllegalArgumentException if the given name is empty or contains an {@link #REGEX_ILLEGAL_FILE_CHARS illegal} char\n      */\n     public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n         if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n"}}, {"oid": "6c7987a72e001bd9a348644a5606c538b69c3bdf", "url": "https://github.com/scireum/sirius-biz/commit/6c7987a72e001bd9a348644a5606c538b69c3bdf", "message": "Links regex pattern in javadoc\n\nCo-Authored-By: Andreas Haufler <aha@scireum.de>", "committedDate": "2020-01-27T15:41:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxNTA0MQ==", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371315041", "bodyText": "Add javadoc here and explain here these characters came from (e.g. link to https://en.wikipedia.org/wiki/Filename)", "author": "andyHa", "createdAt": "2020-01-27T15:41:33Z", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";", "originalCommit": "904c362498daba81db6501d121cd2ff6111d7fa6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "714665fb84245bec6601cd17344a591a68fcf30e", "chunk": "diff --git a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\nindex a9c945ce..5a969ee0 100644\n--- a/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n+++ b/src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java\n\n@@ -37,6 +37,12 @@ public class MutableVirtualFile extends VirtualFile {\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+\n+    /**\n+     * Regular Expressions that matches any charachter that is not allowed for creating a new file.\n+     * <p>\n+     * These chars are prohibited as they might be reserved by the file system as indicated here: https://en.wikipedia.org/wiki/Filename#Reserved_characters_and_words\n+     */\n     private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n"}}, {"oid": "714665fb84245bec6601cd17344a591a68fcf30e", "url": "https://github.com/scireum/sirius-biz/commit/714665fb84245bec6601cd17344a591a68fcf30e", "message": "Adds javadoc to RegEx\n\nFixes: OX-5616", "committedDate": "2020-01-27T15:47:49Z", "type": "commit"}, {"oid": "203765bfd084ea394f515ff5eb072b2417d5c8a2", "url": "https://github.com/scireum/sirius-biz/commit/203765bfd084ea394f515ff5eb072b2417d5c8a2", "message": "Merge remote-tracking branch 'origin/meg/OX-5616' into meg/OX-5616", "committedDate": "2020-01-27T15:48:00Z", "type": "commit"}]}