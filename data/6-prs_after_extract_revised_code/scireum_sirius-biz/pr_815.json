{"pr_number": 815, "pr_title": "Fixed ArrayIndexOutOfBoundsException and possible NPE", "pr_createdAt": "2020-07-07T14:36:16Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/815", "timeline": [{"oid": "476affcfa17d928e20bc54bf50ade8c551fe42fa", "url": "https://github.com/scireum/sirius-biz/commit/476affcfa17d928e20bc54bf50ade8c551fe42fa", "message": "Fixed ArrayIndexOutOfBoundsExc and possible NPE", "committedDate": "2020-07-07T14:35:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw==", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r450915437", "bodyText": ".flatMap(row -> row.getValue(\"numberOfDays\")).asOptionalInt()).orElse(0);", "author": "andyHa", "createdAt": "2020-07-07T14:38:17Z", "path": "src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java", "diffHunk": "@@ -70,29 +70,30 @@\n     @Override\n     public void compute(LocalDate date, U entity) throws Exception {\n         LocalDate lowerLimit = date.minusDays(observationPeriodDays);\n-        int numberOfActiveDays = eventRecorder.getDatabase()\n-                                              .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n-                                                           + \" FROM useractivityevent\"\n-                                                           + \" WHERE userData_userId = ${userId}\"\n-                                                           + \"   AND eventDate > ${lowerLimit}\"\n-                                                           + \"   AND eventDate <= ${upperLimit}\")\n-                                              .set(\"userId\", entity.getUniqueName())\n-                                              .set(\"lowerLimit\", lowerLimit)\n-                                              .set(\"upperLimit\", date)\n-                                              .queryFirst()\n-                                              .getValue(\"numberOfDays\")\n-                                              .asInt(0);\n+        eventRecorder.getDatabase()\n+                     .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n+                                  + \" FROM useractivityevent\"\n+                                  + \" WHERE userData_userId = ${userId}\"\n+                                  + \"   AND eventDate > ${lowerLimit}\"\n+                                  + \"   AND eventDate <= ${upperLimit}\")\n+                     .set(\"userId\", entity.getUniqueName())\n+                     .set(\"lowerLimit\", lowerLimit)\n+                     .set(\"upperLimit\", date)\n+                     .first()\n+                     .ifPresent(row -> {", "originalCommit": "476affcfa17d928e20bc54bf50ade8c551fe42fa", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTc1Ng==", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r450915756", "bodyText": "sonst wirds nie auf 0 / false gesetzt", "author": "andyHa", "createdAt": "2020-07-07T14:38:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMzg1NQ==", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r451313855", "bodyText": "Danke sch\u00f6n. Ist korrigiert.", "author": "marvinwoop", "createdAt": "2020-07-08T06:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw=="}], "type": "inlineReview", "revised_code": {"commit": "d5b00c2b2b99170081539884a958d1c09cf059bf", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java b/src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java\nindex fff5875d..e48c0037 100644\n--- a/src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java\n+++ b/src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java\n\n@@ -70,30 +70,30 @@ public abstract class UserAccountActivityMetricComputer<U extends BaseEntity<?>\n     @Override\n     public void compute(LocalDate date, U entity) throws Exception {\n         LocalDate lowerLimit = date.minusDays(observationPeriodDays);\n-        eventRecorder.getDatabase()\n-                     .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n-                                  + \" FROM useractivityevent\"\n-                                  + \" WHERE userData_userId = ${userId}\"\n-                                  + \"   AND eventDate > ${lowerLimit}\"\n-                                  + \"   AND eventDate <= ${upperLimit}\")\n-                     .set(\"userId\", entity.getUniqueName())\n-                     .set(\"lowerLimit\", lowerLimit)\n-                     .set(\"upperLimit\", date)\n-                     .first()\n-                     .ifPresent(row -> {\n-                         int numberOfActiveDays = row.getValue(\"numberOfDays\").asInt(0);\n \n-                         int activityRateInPercent = numberOfActiveDays * 100 / observationPeriodDays;\n-                         metrics.updateMonthlyMetric(entity, METRIC_USER_ACTIVITY, date, activityRateInPercent);\n+        int numberOfActiveDays = eventRecorder.getDatabase()\n+                                              .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n+                                                           + \" FROM useractivityevent\"\n+                                                           + \" WHERE userData_userId = ${userId}\"\n+                                                           + \"   AND eventDate > ${lowerLimit}\"\n+                                                           + \"   AND eventDate <= ${upperLimit}\")\n+                                              .set(\"userId\", entity.getUniqueName())\n+                                              .set(\"lowerLimit\", lowerLimit)\n+                                              .set(\"upperLimit\", date)\n+                                              .first()\n+                                              .flatMap(row -> row.getValue(\"numberOfDays\").asOptionalInt())\n+                                              .orElse(0);\n \n-                         if (date.getMonthValue() == LocalDate.now().getMonthValue()) {\n-                             entity.getPerformanceData()\n-                                   .modify()\n-                                   .set(getActiveUserFlag(), numberOfActiveDays >= minDaysForActiveUsers)\n-                                   .set(getFrequentUserFlag(), numberOfActiveDays >= minDaysForFrequentUsers)\n-                                   .commit();\n-                         }\n-                     });\n+        int activityRateInPercent = numberOfActiveDays * 100 / observationPeriodDays;\n+        metrics.updateMonthlyMetric(entity, METRIC_USER_ACTIVITY, date, activityRateInPercent);\n+\n+        if (date.getMonthValue() == LocalDate.now().getMonthValue()) {\n+            entity.getPerformanceData()\n+                  .modify()\n+                  .set(getActiveUserFlag(), numberOfActiveDays >= minDaysForActiveUsers)\n+                  .set(getFrequentUserFlag(), numberOfActiveDays >= minDaysForFrequentUsers)\n+                  .commit();\n+        }\n     }\n \n     protected abstract PerformanceFlag getActiveUserFlag();\n"}}, {"oid": "d5b00c2b2b99170081539884a958d1c09cf059bf", "url": "https://github.com/scireum/sirius-biz/commit/d5b00c2b2b99170081539884a958d1c09cf059bf", "message": "Changed clickhouse fetch logic.", "committedDate": "2020-07-08T06:34:11Z", "type": "commit"}]}