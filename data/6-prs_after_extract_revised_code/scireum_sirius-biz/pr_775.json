{"pr_number": 775, "pr_title": "BREAKING: Improves the admin UI and permission management", "pr_createdAt": "2020-06-12T13:30:09Z", "pr_url": "https://github.com/scireum/sirius-biz/pull/775", "timeline": [{"oid": "75f35f9aff1bb7be35ee0902d32738f4c8b176b6", "url": "https://github.com/scireum/sirius-biz/commit/75f35f9aff1bb7be35ee0902d32738f4c8b176b6", "message": "Adds some convenience methods and makes PackageData aware of its scope.\n\nThis simplifies some UIs and checks.", "committedDate": "2020-06-12T13:16:57Z", "type": "commit"}, {"oid": "8d684432be459e8cbe275275bbde81c18e0cb089", "url": "https://github.com/scireum/sirius-biz/commit/8d684432be459e8cbe275275bbde81c18e0cb089", "message": "Warns if packages are available but none is assigned to the target entity.", "committedDate": "2020-06-12T13:17:45Z", "type": "commit"}, {"oid": "c7bd7cb31d68643a35d20b743c4dad0cdd569b46", "url": "https://github.com/scireum/sirius-biz/commit/c7bd7cb31d68643a35d20b743c4dad0cdd569b46", "message": "Adds the possibility to provide a short description for packages and upgrades.", "committedDate": "2020-06-12T13:18:27Z", "type": "commit"}, {"oid": "b2a7140dbcc57ff9e229c9a46aa5f88678804eda", "url": "https://github.com/scireum/sirius-biz/commit/b2a7140dbcc57ff9e229c9a46aa5f88678804eda", "message": "BREAKING: Reverts a nullability check.\n\nThe API was changed to fully handle null arguments (which seems quite counter intuitive).\nTherefore we now make it explicit, that null is not accepted for most parameters.", "committedDate": "2020-06-12T13:19:25Z", "type": "commit"}, {"oid": "4322239fe0ecc0b5e0bdd8cd481cecabf791e963", "url": "https://github.com/scireum/sirius-biz/commit/4322239fe0ecc0b5e0bdd8cd481cecabf791e963", "message": "Splits the tenant admin UI into several pages.", "committedDate": "2020-06-12T13:20:36Z", "type": "commit"}, {"oid": "4983172bfa859bcbf28425e91a1caf8ac7127b55", "url": "https://github.com/scireum/sirius-biz/commit/4983172bfa859bcbf28425e91a1caf8ac7127b55", "message": "Fixes a rendering issue (removes a superfluous row-div).", "committedDate": "2020-06-12T13:21:07Z", "type": "commit"}, {"oid": "86f56fea8b032ba4b44d593917539d4bd87cb423", "url": "https://github.com/scireum/sirius-biz/commit/86f56fea8b032ba4b44d593917539d4bd87cb423", "message": "Improves the output of available packages and upgrades.", "committedDate": "2020-06-12T13:21:29Z", "type": "commit"}, {"oid": "b9aa22189d22a6ee2c323e988c6d3f81195404ac", "url": "https://github.com/scireum/sirius-biz/commit/b9aa22189d22a6ee2c323e988c6d3f81195404ac", "message": "Properly splits an extension so separater concerns.", "committedDate": "2020-06-12T13:22:14Z", "type": "commit"}, {"oid": "33a31416c8f08daa326f4c595e60dc9b621f09bd", "url": "https://github.com/scireum/sirius-biz/commit/33a31416c8f08daa326f4c595e60dc9b621f09bd", "message": "Provides a translation used in the admin UI.", "committedDate": "2020-06-12T13:22:40Z", "type": "commit"}, {"oid": "1848608da007cd20e4a0bbcd92a43211c45bc543", "url": "https://github.com/scireum/sirius-biz/commit/1848608da007cd20e4a0bbcd92a43211c45bc543", "message": "Provides the scope to use for tenant packages and upgrades.", "committedDate": "2020-06-12T13:22:59Z", "type": "commit"}, {"oid": "31b5e47b033f999bded0e3f69084b5c9fc8cd5dc", "url": "https://github.com/scireum/sirius-biz/commit/31b5e47b033f999bded0e3f69084b5c9fc8cd5dc", "message": "BREAKING: Splits the user-management permissions.\n\nWe now distinguish between \"managing users of any tenant\" and \"managing\nusers of the system tenant\" as this is entirely another game.\n\nPreviously, every user of the system tenant with the role \"user-administrator\"\nwas system administrator. We now introduced now a extra role and also an\nextra permission which controls if users of the system tenant may be\nupdated.\n\nTo achieve backwards compatibility, add this to the application.conf:\n\n        \"flag-system-tenant-member+user-administrator\" {\n            priority = 10\n\t    system-administrator = true\n        }", "committedDate": "2020-06-12T13:27:35Z", "type": "commit"}, {"oid": "e2d772bb5c60a496f3f31f419e5d1b15b662a742", "url": "https://github.com/scireum/sirius-biz/commit/e2d772bb5c60a496f3f31f419e5d1b15b662a742", "message": "Removes and marks legacy permissions.", "committedDate": "2020-06-12T13:27:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3ODU5Mw==", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r439978593", "bodyText": "--> Tenants.java dann muss man das nicht \u00fcberall nachimplementieren", "author": "qw3ry", "createdAt": "2020-06-15T07:27:03Z", "path": "src/main/java/sirius/biz/tenants/UserAccountController.java", "diffHunk": "@@ -119,6 +125,14 @@ public void accounts(WebContext webContext) {\n         webContext.respondWith().template(\"/templates/biz/tenants/user-accounts.html.pasta\", accounts, getUserClass());\n     }\n \n+    protected void assertProperUserManagementPermission() {\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            assertPermission(PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            assertPermission(PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }\n+    }", "originalCommit": "31b5e47b033f999bded0e3f69084b5c9fc8cd5dc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "986e33f8d51b6f38af8a7eff0768dec300b9583b", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/UserAccountController.java b/src/main/java/sirius/biz/tenants/UserAccountController.java\nindex 3d2d88d4..2c359fbc 100644\n--- a/src/main/java/sirius/biz/tenants/UserAccountController.java\n+++ b/src/main/java/sirius/biz/tenants/UserAccountController.java\n\n@@ -125,11 +125,20 @@ public abstract class UserAccountController<I, T extends BaseEntity<I> & Tenant<\n         webContext.respondWith().template(\"/templates/biz/tenants/user-accounts.html.pasta\", accounts, getUserClass());\n     }\n \n-    protected void assertProperUserManagementPermission() {\n-        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n-            assertPermission(PERMISSION_MANAGE_SYSTEM_USERS);\n+    /**\n+     * Ensures that the current user is permitted to manage the user accounts for the current tenant.\n+     * <p>\n+     * This is made public so that other controllers which enhance the user management can re-use the logic.\n+     */\n+    public static void assertProperUserManagementPermission() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        boolean isCurrentTenantSystemTenant = currentUser.tryAs(Tenant.class)\n+                                                         .map(tenant -> tenant.hasPermission(Tenant.PERMISSION_SYSTEM_TENANT))\n+                                                         .orElse(false);\n+        if (isCurrentTenantSystemTenant) {\n+            currentUser.assertPermission(PERMISSION_MANAGE_SYSTEM_USERS);\n         } else {\n-            assertPermission(PERMISSION_MANAGE_USER_ACCOUNTS);\n+            currentUser.assertPermission(PERMISSION_MANAGE_USER_ACCOUNTS);\n         }\n     }\n \n"}}, {"oid": "986e33f8d51b6f38af8a7eff0768dec300b9583b", "url": "https://github.com/scireum/sirius-biz/commit/986e33f8d51b6f38af8a7eff0768dec300b9583b", "message": "Permits to re-use a common permission check.\n\nThis check is kind of specific to the user management.\nTherefore it is provided as static method rather than a\nmethod in Tenants. It is however intended to be reused\nin case an additional controller contributes to the user\nmanagement.", "committedDate": "2020-06-15T08:10:22Z", "type": "commit"}, {"oid": "57edbc6c78f75c859b4dda9602d7f62b5688d81f", "url": "https://github.com/scireum/sirius-biz/commit/57edbc6c78f75c859b4dda9602d7f62b5688d81f", "message": "Checks if the current user is logged in before trying to access its tenant.", "committedDate": "2020-06-15T08:10:46Z", "type": "commit"}, {"oid": "85c28443fad760dd6752b6ba4dd6fc02e027c79e", "url": "https://github.com/scireum/sirius-biz/commit/85c28443fad760dd6752b6ba4dd6fc02e027c79e", "message": "Uses the proper getter to determine is a package is selectable.", "committedDate": "2020-06-15T08:11:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODcwNw==", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008707", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "author": "qw3ry", "createdAt": "2020-06-15T08:23:51Z", "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java", "diffHunk": "@@ -10,27 +10,43 @@\n \n import sirius.biz.jobs.JobFactory;\n import sirius.biz.jobs.batch.file.EntityExportJobFactory;\n+import sirius.biz.tenants.Tenant;\n import sirius.biz.tenants.UserAccountController;\n import sirius.db.jdbc.SmartQuery;\n+import sirius.kernel.di.std.Part;\n import sirius.kernel.di.std.Register;\n import sirius.web.http.QueryString;\n import sirius.web.security.Permission;\n+import sirius.web.security.UserContext;\n+import sirius.web.security.UserInfo;\n \n import javax.annotation.Nonnull;\n \n /**\n  * Provides an export for {@link SQLUserAccount user accounts}.\n  */\n @Register(classes = JobFactory.class, framework = SQLTenants.FRAMEWORK_TENANTS_JDBC)\n-@Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class SQLUserAccountExportJobFactory extends EntityExportJobFactory<SQLUserAccount, SmartQuery<SQLUserAccount>> {\n \n+    @Part\n+    private SQLTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"export-sql-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "originalCommit": "85c28443fad760dd6752b6ba4dd6fc02e027c79e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java b/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java\nindex 16b83149..2050def2 100644\n--- a/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java\n+++ b/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java\n\n@@ -39,12 +39,7 @@ public class SQLUserAccountExportJobFactory extends EntityExportJobFactory<SQLUs\n \n     @Override\n     protected void checkPermissions() {\n-        UserInfo currentUser = UserContext.getCurrentUser();\n-        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n-        } else {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n-        }\n+        UserAccountController.assertProperUserManagementPermission();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODc3NA==", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008774", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "author": "qw3ry", "createdAt": "2020-06-15T08:23:59Z", "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java", "diffHunk": "@@ -25,12 +29,25 @@\n @Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class SQLUserAccountImportJobFactory extends EntityImportJobFactory {\n \n+    @Part\n+    private SQLTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"import-sql-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }\n+    }", "originalCommit": "85c28443fad760dd6752b6ba4dd6fc02e027c79e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java b/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java\nindex d90305ab..e13f4061 100644\n--- a/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java\n+++ b/src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java\n\n@@ -40,12 +40,7 @@ public class SQLUserAccountImportJobFactory extends EntityImportJobFactory {\n \n     @Override\n     protected void checkPermissions() {\n-        UserInfo currentUser = UserContext.getCurrentUser();\n-        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n-        } else {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n-        }\n+        UserAccountController.assertProperUserManagementPermission();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODg0Mw==", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008843", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "author": "qw3ry", "createdAt": "2020-06-15T08:24:06Z", "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java", "diffHunk": "@@ -10,28 +10,45 @@\n \n import sirius.biz.jobs.JobFactory;\n import sirius.biz.jobs.batch.file.EntityExportJobFactory;\n+import sirius.biz.tenants.Tenant;\n import sirius.biz.tenants.UserAccountController;\n import sirius.db.mongo.MongoQuery;\n+import sirius.kernel.di.std.Part;\n import sirius.kernel.di.std.Register;\n import sirius.web.http.QueryString;\n import sirius.web.security.Permission;\n+import sirius.web.security.UserContext;\n+import sirius.web.security.UserInfo;\n \n import javax.annotation.Nonnull;\n \n /**\n  * Provides an export for {@link MongoUserAccount user accounts}.\n  */\n @Register(classes = JobFactory.class, framework = MongoTenants.FRAMEWORK_TENANTS_MONGO)\n-@Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class MongoUserAccountExportJobFactory\n         extends EntityExportJobFactory<MongoUserAccount, MongoQuery<MongoUserAccount>> {\n \n+    @Part\n+    private MongoTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"export-mongo-user-accounts\";\n     }\n \n+\n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "originalCommit": "85c28443fad760dd6752b6ba4dd6fc02e027c79e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java b/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java\nindex 7730a6c4..3b147faa 100644\n--- a/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java\n+++ b/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java\n\n@@ -41,12 +41,7 @@ public class MongoUserAccountExportJobFactory\n \n     @Override\n     protected void checkPermissions() {\n-        UserInfo currentUser = UserContext.getCurrentUser();\n-        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n-        } else {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n-        }\n+        UserAccountController.assertProperUserManagementPermission();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODkyNQ==", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008925", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "author": "qw3ry", "createdAt": "2020-06-15T08:24:14Z", "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java", "diffHunk": "@@ -25,18 +29,30 @@\n @Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class MongoUserAccountImportJobFactory extends EntityImportJobFactory {\n \n+    @Part\n+    private MongoTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"import-mongo-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "originalCommit": "85c28443fad760dd6752b6ba4dd6fc02e027c79e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "chunk": "diff --git a/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java b/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java\nindex abfeb98b..e895cf6b 100644\n--- a/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java\n+++ b/src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java\n\n@@ -40,12 +37,7 @@ public class MongoUserAccountImportJobFactory extends EntityImportJobFactory {\n \n     @Override\n     protected void checkPermissions() {\n-        UserInfo currentUser = UserContext.getCurrentUser();\n-        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n-        } else {\n-            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n-        }\n+        UserAccountController.assertProperUserManagementPermission();\n     }\n \n     @Override\n"}}, {"oid": "8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "url": "https://github.com/scireum/sirius-biz/commit/8db5e1e6c3e1e55cb96d28002615ccff9eeb177d", "message": "Re-uses code for the proper permission check.", "committedDate": "2020-06-15T08:37:08Z", "type": "commit"}, {"oid": "f75f244359dd8bc61164924a549f09268c8db457", "url": "https://github.com/scireum/sirius-biz/commit/f75f244359dd8bc61164924a549f09268c8db457", "message": "Removes a startup warning in the tests.", "committedDate": "2020-06-15T08:39:00Z", "type": "commit"}, {"oid": "f516ea5c25ec0117dbb675bb95cd23183ca5fbb1", "url": "https://github.com/scireum/sirius-biz/commit/f516ea5c25ec0117dbb675bb95cd23183ca5fbb1", "message": "Adds proper parameters for the test scenario.", "committedDate": "2020-06-15T08:40:55Z", "type": "commit"}]}