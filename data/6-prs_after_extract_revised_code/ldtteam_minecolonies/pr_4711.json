{"pr_number": 4711, "pr_title": "Raiders and other Fixes", "pr_createdAt": "2020-04-22T18:14:38Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/4711", "timeline": [{"oid": "33c51725ce9a8dfaac3a3169f9416aae8f7f9a3e", "url": "https://github.com/ldtteam/minecolonies/commit/33c51725ce9a8dfaac3a3169f9416aae8f7f9a3e", "message": "Fix Raider pathing and spawnpoints\nFix Lumberjack stuck in leaves\nFix using deprecated isBlockLoaded instead of isBLockPresent", "committedDate": "2020-04-22T17:12:44Z", "type": "commit"}, {"oid": "284a06f707e13cce861a90fcb3e5e2a978412a0e", "url": "https://github.com/ldtteam/minecolonies/commit/284a06f707e13cce861a90fcb3e5e2a978412a0e", "message": "remove logs", "committedDate": "2020-04-22T17:37:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MDI4NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413250285", "bodyText": "If they are not constants, lowercase", "author": "Raycoms", "createdAt": "2020-04-22T19:13:44Z", "path": "src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.minecolonies.api.entity.pathfinding;\n+\n+/**\n+ * Configuration values for pathing, used by pathjobs and normally set through the navigator\n+ */\n+public class PathingOptions\n+{\n+    /**\n+     * Additional cost of jumping and dropping - base 1.\n+     */\n+    public double JUMP_DROP_COST = 2.0D;\n+\n+    /**\n+     * Cost improvement of paths - base 1.\n+     */\n+    public double ON_PATH_COST = 0.1D;\n+\n+    /**\n+     * Cost improvement of paths - base 1.\n+     */\n+    public double ON_RAIL_COST = 0.01D;\n+\n+    /**\n+     * The rails exit cost.\n+     */\n+    public double RAILS_EXIT_COST = 5;\n+\n+    /**\n+     * Additional cost of swimming - base 1.\n+     */\n+    public double SWIM_COST = 1.5D;\n+\n+    /**\n+     * Additional cost enter entering water\n+     */\n+    public double SWIM_COST_ENTER = 25D;\n+\n+    /**\n+     * Whether to use minecart rail pathing\n+     */\n+    private boolean canUseRails  = false;\n+    /**\n+     * Can swim\n+     */\n+    private boolean canSwim      = false;\n+    /**\n+     * Allowed to enter doors?\n+     */\n+    private boolean enterDoors   = false;\n+    /**\n+     * Allowed to open doors?\n+     */\n+    private boolean canOpenDoors = false;\n+\n+    public PathingOptions()\n+    {}\n+\n+    public boolean canOpenDoors()\n+    {\n+        return canOpenDoors;\n+    }\n+\n+    public void setCanOpenDoors(final boolean canOpenDoors)\n+    {\n+        this.canOpenDoors = canOpenDoors;\n+    }\n+\n+    public boolean canUseRails()\n+    {\n+        return canUseRails;\n+    }\n+\n+    public void setCanUseRails(final boolean canUseRails)\n+    {\n+        this.canUseRails = canUseRails;\n+    }\n+\n+    public boolean canSwim()\n+    {\n+        return canSwim;\n+    }\n+\n+    public void setCanSwim(final boolean canSwim)\n+    {\n+        this.canSwim = canSwim;\n+    }\n+\n+    public boolean canEnterDoors()\n+    {\n+        return enterDoors;\n+    }\n+\n+    public void setEnterDoors(final boolean enterDoors)\n+    {\n+        this.enterDoors = enterDoors;\n+    }\n+\n+    public PathingOptions withStartSwimCost(final double startSwimCost)\n+    {\n+        SWIM_COST_ENTER = startSwimCost;\n+        return this;\n+    }\n+\n+    public PathingOptions withSwimCost(final double swimCost)\n+    {\n+        SWIM_COST = swimCost;", "originalCommit": "284a06f707e13cce861a90fcb3e5e2a978412a0e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "383d8c648405b8f50c7a94994ea632dbcfc25eb8", "chunk": "diff --git a/src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java b/src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java\nindex ea236d5fd9..2179169267 100644\n--- a/src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java\n+++ b/src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java\n\n@@ -8,32 +8,32 @@ public class PathingOptions\n     /**\n      * Additional cost of jumping and dropping - base 1.\n      */\n-    public double JUMP_DROP_COST = 2.0D;\n+    public double jumpDropCost = 2.0D;\n \n     /**\n      * Cost improvement of paths - base 1.\n      */\n-    public double ON_PATH_COST = 0.1D;\n+    public double onPathCost = 0.1D;\n \n     /**\n      * Cost improvement of paths - base 1.\n      */\n-    public double ON_RAIL_COST = 0.01D;\n+    public double onRailCost = 0.01D;\n \n     /**\n      * The rails exit cost.\n      */\n-    public double RAILS_EXIT_COST = 5;\n+    public double railsExitCost = 5;\n \n     /**\n      * Additional cost of swimming - base 1.\n      */\n-    public double SWIM_COST = 1.5D;\n+    public double swimCost = 1.5D;\n \n     /**\n      * Additional cost enter entering water\n      */\n-    public double SWIM_COST_ENTER = 25D;\n+    public double swimCostEnter = 25D;\n \n     /**\n      * Whether to use minecart rail pathing\n"}}, {"oid": "11f73e15816822e77b725eab74aeedfab0148445", "url": "https://github.com/ldtteam/minecolonies/commit/11f73e15816822e77b725eab74aeedfab0148445", "message": "Merge branch 'version/1.15' into raiderFix", "committedDate": "2020-04-22T19:20:05Z", "type": "commit"}, {"oid": "cbc55765a9f92ad7b356807b06841c18f1fb1837", "url": "https://github.com/ldtteam/minecolonies/commit/cbc55765a9f92ad7b356807b06841c18f1fb1837", "message": "Merge remote-tracking branch 'origin/version/1.15' into raiderfix", "committedDate": "2020-04-22T19:43:18Z", "type": "commit"}, {"oid": "383d8c648405b8f50c7a94994ea632dbcfc25eb8", "url": "https://github.com/ldtteam/minecolonies/commit/383d8c648405b8f50c7a94994ea632dbcfc25eb8", "message": "adjust naming", "committedDate": "2020-04-22T19:45:51Z", "type": "commit"}, {"oid": "a144ab250a0390e55b7ae0f2da55802a47386cb3", "url": "https://github.com/ldtteam/minecolonies/commit/a144ab250a0390e55b7ae0f2da55802a47386cb3", "message": "Merge remote-tracking branch 'remotes/origin/raiderFix' into raiderfix", "committedDate": "2020-04-22T19:51:38Z", "type": "commit"}, {"oid": "318ab3c6ed8d42f5d3c61bad6662ff300d7a37af", "url": "https://github.com/ldtteam/minecolonies/commit/318ab3c6ed8d42f5d3c61bad6662ff300d7a37af", "message": "remove unnecessary dependency", "committedDate": "2020-04-23T07:20:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNzAyNg==", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413627026", "bodyText": "Why was this removed?", "author": "OrionDevelopment", "createdAt": "2020-04-23T08:41:31Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -113,10 +113,6 @@ public void serializeToView(@NotNull final PacketBuffer buf)\n     @Override\n     public int getClaimRadius(final int newLevel)\n     {\n-        if (newLevel + 1 < MineColonies.getConfig().getCommon().minTownHallPadding.get())", "originalCommit": "318ab3c6ed8d42f5d3c61bad6662ff300d7a37af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NTg5NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413655895", "bodyText": "ah because we're always claiming the initial radius when creating the colony now", "author": "someaddons", "createdAt": "2020-04-23T09:22:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNzAyNg=="}], "type": "inlineReview", "revised_code": null}]}