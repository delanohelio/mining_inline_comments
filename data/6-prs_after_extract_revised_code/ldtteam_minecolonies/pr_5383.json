{"pr_number": 5383, "pr_title": "Upgrade the cook, and a few more recipes", "pr_createdAt": "2020-07-13T22:17:17Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5383", "timeline": [{"oid": "51e7fabfba71e8ccc7ad798ba94ba3e4db246ad0", "url": "https://github.com/ldtteam/minecolonies/commit/51e7fabfba71e8ccc7ad798ba94ba3e4db246ad0", "message": "Move pressure plates to Mechanic", "committedDate": "2020-07-13T13:54:00Z", "type": "commit"}, {"oid": "6b6c6b5b5b9069c08527c39cb7ccad754a76ea1b", "url": "https://github.com/ldtteam/minecolonies/commit/6b6c6b5b5b9069c08527c39cb7ccad754a76ea1b", "message": "Add Composted Dirt to farmer", "committedDate": "2020-07-13T13:54:25Z", "type": "commit"}, {"oid": "a24e2226fe3f8c55b2e3899b9ba18cbc1d008d3c", "url": "https://github.com/ldtteam/minecolonies/commit/a24e2226fe3f8c55b2e3899b9ba18cbc1d008d3c", "message": "Clean up unused imports", "committedDate": "2020-07-13T13:57:41Z", "type": "commit"}, {"oid": "fd702bc9018f8b06668d892b538802b8e9edaf72", "url": "https://github.com/ldtteam/minecolonies/commit/fd702bc9018f8b06668d892b538802b8e9edaf72", "message": "More import cleanup", "committedDate": "2020-07-13T14:04:04Z", "type": "commit"}, {"oid": "c23f4f0fbe62ef1a004835e624a07f3c1ab784e9", "url": "https://github.com/ldtteam/minecolonies/commit/c23f4f0fbe62ef1a004835e624a07f3c1ab784e9", "message": "Add clay block to clay ball conversion to crusher", "committedDate": "2020-07-13T22:06:36Z", "type": "commit"}, {"oid": "78857d4d9a50e6124165b41ae9b493b3a3d541b5", "url": "https://github.com/ldtteam/minecolonies/commit/78857d4d9a50e6124165b41ae9b493b3a3d541b5", "message": "Enhance cook for smeltable recipes", "committedDate": "2020-07-13T22:07:21Z", "type": "commit"}, {"oid": "e92403c6ab7b0f66584dad31a65ccd8f0eb5114d", "url": "https://github.com/ldtteam/minecolonies/commit/e92403c6ab7b0f66584dad31a65ccd8f0eb5114d", "message": "Enable crafters to better handle 'tools' like pots", "committedDate": "2020-07-13T22:08:18Z", "type": "commit"}, {"oid": "60f20a13b9563a32f73a005cd0ce49b2b1435dd8", "url": "https://github.com/ldtteam/minecolonies/commit/60f20a13b9563a32f73a005cd0ce49b2b1435dd8", "message": "Keep Cook from processing ingredients", "committedDate": "2020-07-13T22:08:49Z", "type": "commit"}, {"oid": "e082f0be87813e34b6a515895602b3f5255dbe97", "url": "https://github.com/ldtteam/minecolonies/commit/e082f0be87813e34b6a515895602b3f5255dbe97", "message": "Fix typo", "committedDate": "2020-07-14T03:41:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE2OTI3NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r454169275", "bodyText": "javadoc", "author": "Raycoms", "createdAt": "2020-07-14T07:49:08Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCrusher.java", "diffHunk": "@@ -123,6 +127,30 @@ private void loadCrusherMode()\n         }\n     }\n \n+    private void loadCurrentRecipes()", "originalCommit": "e082f0be87813e34b6a515895602b3f5255dbe97", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "89bdd421cff6832b964867289e7318af3b4f85b7", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCrusher.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCrusher.java\nindex 1ebb0c22dc..1f9295dcd8 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCrusher.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCrusher.java\n\n@@ -127,6 +127,9 @@ public class BuildingCrusher extends AbstractBuildingCrafter\n         }\n     }\n \n+    /**\n+     * Reload all of the current crusher recipes\n+     */\n     private void loadCurrentRecipes()\n     {\n         if(!super.recipes.isEmpty())\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MDUzNg==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r454170536", "bodyText": "I'm nt a fan at all of this. Adding a lot of automatic recipes slows down the colony (each time a request is executed all recipes have to be checked). Why do we need this explicitly?", "author": "Raycoms", "createdAt": "2020-07-14T07:51:24Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java", "diffHunk": "@@ -175,6 +182,34 @@ public boolean canBeGathered()\n         return toKeep;\n     }\n \n+    // Adding request system aware versions of the furnace recipes, to make keeping stock easier, and allow crafting chains. \n+    // To find what to add, we'll run through the predefined ingredients, and if any of them are smeltable, we'll add the recipe\n+    // Something to consider in the future is adding the concept of 'free' recipes that don't count against the building limit. \n+    @Override\n+    public void checkForWorkerSpecificRecipes()\n+    {\n+\n+        ResourceLocation ingredients = new ResourceLocation(\"minecolonies\", this.getJobName().toLowerCase().concat(\"_ingredient\"));\n+\n+        for (final Item item : ItemTags.getCollection().getOrCreate(ingredients).getAllElements())\n+        {\n+            final ItemStack smeltingResult = FurnaceRecipes.getInstance().getSmeltingResult(new ItemStack(item, 1));\n+            if (ItemStackUtils.CAN_EAT.test(smeltingResult))\n+            {\n+\n+                final IRecipeStorage storage = StandardFactoryController.getInstance().getNewInstance(\n+                    TypeConstants.RECIPE,\n+                    StandardFactoryController.getInstance().getNewInstance(TypeConstants.ITOKEN),\n+                    ImmutableList.of(new ItemStack(item, 1)),\n+                    1,\n+                    smeltingResult,\n+                    Blocks.FURNACE);\n+          \n+                addRecipeToList(IColonyManager.getInstance().getRecipeManager().checkOrAddRecipe(storage));\n+            }\n+        }\n+    }\n+    ", "originalCommit": "e082f0be87813e34b6a515895602b3f5255dbe97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxODcwMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r454418703", "bodyText": "In a vanilla world, we really don't. Once you add in modpacks, there are a lot of recipes that require cooked foods that can't be fulfilled today. As we discussed in Discord, I'll look at the temporary recipe via resolver.", "author": "Mekle001", "createdAt": "2020-07-14T14:54:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MDUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "b200efca67aba247ba77467d24d9c43f7e1647dd", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\nindex 04af179c66..776931a070 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n\n@@ -181,35 +222,7 @@ public class BuildingCook extends AbstractBuildingFurnaceUser\n         toKeep.putAll(recipeOutputs.entrySet().stream().collect(Collectors.toMap(key -> (stack -> stack.isItemEqual(key.getKey().getItemStack())), Map.Entry::getValue)));\n         return toKeep;\n     }\n-\n-    // Adding request system aware versions of the furnace recipes, to make keeping stock easier, and allow crafting chains. \n-    // To find what to add, we'll run through the predefined ingredients, and if any of them are smeltable, we'll add the recipe\n-    // Something to consider in the future is adding the concept of 'free' recipes that don't count against the building limit. \n-    @Override\n-    public void checkForWorkerSpecificRecipes()\n-    {\n-\n-        ResourceLocation ingredients = new ResourceLocation(\"minecolonies\", this.getJobName().toLowerCase().concat(\"_ingredient\"));\n-\n-        for (final Item item : ItemTags.getCollection().getOrCreate(ingredients).getAllElements())\n-        {\n-            final ItemStack smeltingResult = FurnaceRecipes.getInstance().getSmeltingResult(new ItemStack(item, 1));\n-            if (ItemStackUtils.CAN_EAT.test(smeltingResult))\n-            {\n-\n-                final IRecipeStorage storage = StandardFactoryController.getInstance().getNewInstance(\n-                    TypeConstants.RECIPE,\n-                    StandardFactoryController.getInstance().getNewInstance(TypeConstants.ITOKEN),\n-                    ImmutableList.of(new ItemStack(item, 1)),\n-                    1,\n-                    smeltingResult,\n-                    Blocks.FURNACE);\n-          \n-                addRecipeToList(IColonyManager.getInstance().getRecipeManager().checkOrAddRecipe(storage));\n-            }\n-        }\n-    }\n-    \n+   \n     @Override\n     public boolean canRecipeBeAdded(final IToken<?> token)\n     {\n"}}, {"oid": "89bdd421cff6832b964867289e7318af3b4f85b7", "url": "https://github.com/ldtteam/minecolonies/commit/89bdd421cff6832b964867289e7318af3b4f85b7", "message": "Review Feedback", "committedDate": "2020-07-14T14:07:17Z", "type": "commit"}, {"oid": "8917011ccd1a5c706c25109655f66741d6f027c4", "url": "https://github.com/ldtteam/minecolonies/commit/8917011ccd1a5c706c25109655f66741d6f027c4", "message": "Add recipe lookup support for output", "committedDate": "2020-07-16T03:57:00Z", "type": "commit"}, {"oid": "b200efca67aba247ba77467d24d9c43f7e1647dd", "url": "https://github.com/ldtteam/minecolonies/commit/b200efca67aba247ba77467d24d9c43f7e1647dd", "message": "Add on-demand recipe support for smelting", "committedDate": "2020-07-16T05:15:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTQzMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r455581431", "bodyText": "I would only query this if ISFOOD", "author": "Raycoms", "createdAt": "2020-07-16T07:50:55Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java", "diffHunk": "@@ -141,6 +138,50 @@ public boolean canBeGathered()\n         return builder.build();\n     }\n \n+    @Override\n+    @Nullable\n+    public IRecipeStorage getFirstRecipe(final Predicate<ItemStack> stackPredicate)\n+    {\n+        //First, do the normal check against taught recipes, and return those if found\n+        IRecipeStorage storage = super.getFirstRecipe(stackPredicate);\n+        if(storage != null)\n+        {\n+            return storage;\n+        }\n+\n+        //If we didn't have a stored recipe, see if there is a smelting recipe that is also a food output, and use it. ", "originalCommit": "b200efca67aba247ba77467d24d9c43f7e1647dd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgxNzI5Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r455817296", "bodyText": "Given that we don't know what the item is until after the query, I'm not sure how to limit it. We could do a combined predicate, though I don't see any advantage to that, and this code is clearer.", "author": "Mekle001", "createdAt": "2020-07-16T14:12:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyMjA3Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r455822072", "bodyText": "I think there was one getFirstRecipe that gets an itemStack too. Where we could intercept.", "author": "Raycoms", "createdAt": "2020-07-16T14:18:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTQzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg1MjQ0OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r455852448", "bodyText": "I had done that, and pulled it, because it's used rarely, and at the abstract level it just wraps the predicate version.  That is actually what I did first, and it didn't actually let things work, because the predicate is used almost everywhere.", "author": "Mekle001", "createdAt": "2020-07-16T14:58:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTQzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "c7e217f375fc09b59c766fedebd4448843f03662", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\nindex 776931a070..15c7fc4ba9 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n\n@@ -142,6 +175,11 @@ public class BuildingCook extends AbstractBuildingFurnaceUser\n     @Nullable\n     public IRecipeStorage getFirstRecipe(final Predicate<ItemStack> stackPredicate)\n     {\n+        if (getBuildingLevel() < 3)\n+        {\n+            return null;\n+        }\n+\n         //First, do the normal check against taught recipes, and return those if found\n         IRecipeStorage storage = super.getFirstRecipe(stackPredicate);\n         if(storage != null)\n"}}, {"oid": "591537766ccc3462a4b1960437649e919cb0847c", "url": "https://github.com/ldtteam/minecolonies/commit/591537766ccc3462a4b1960437649e919cb0847c", "message": "Merge branch 'version/1.15' into bettercook", "committedDate": "2020-07-16T20:03:20Z", "type": "commit"}, {"oid": "c7e217f375fc09b59c766fedebd4448843f03662", "url": "https://github.com/ldtteam/minecolonies/commit/c7e217f375fc09b59c766fedebd4448843f03662", "message": "Add an assistant for the Cook, to do all crafting", "committedDate": "2020-07-18T15:08:07Z", "type": "commit"}, {"oid": "159148e3ff18f2b6187c42425d63a6356d3ae9d8", "url": "https://github.com/ldtteam/minecolonies/commit/159148e3ff18f2b6187c42425d63a6356d3ae9d8", "message": "Merge branch 'version/1.15' into bettercook", "committedDate": "2020-07-18T15:08:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgwMDI2Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r456800267", "bodyText": "javadoc", "author": "Raycoms", "createdAt": "2020-07-18T15:27:12Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java", "diffHunk": "@@ -77,6 +84,16 @@ public BuildingCook(final IColony c, final BlockPos l)\n         keepX.put(FurnaceTileEntity::isFuel, new Tuple<>(STACKSIZE, true));\n     }\n \n+    public boolean getIsCooking()", "originalCommit": "c7e217f375fc09b59c766fedebd4448843f03662", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "39e66d6959da198388a10f54827b34249dee3018", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\nindex 15c7fc4ba9..654d15dd99 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n\n@@ -84,11 +84,19 @@ public class BuildingCook extends AbstractBuildingSmelterCrafter\n         keepX.put(FurnaceTileEntity::isFuel, new Tuple<>(STACKSIZE, true));\n     }\n \n+    /**\n+     * Get the status of the assistant processing requests\n+     * @return true if currently crafting\n+     */\n     public boolean getIsCooking()\n     {\n         return isCooking;\n     }\n \n+    /**\n+     * Record the state of the assistant processing requests\n+     * @param cookingState true if currently crafting\n+     */\n     public void setIsCooking(final boolean cookingState)\n     {\n         isCooking = cookingState;\n"}}, {"oid": "39e66d6959da198388a10f54827b34249dee3018", "url": "https://github.com/ldtteam/minecolonies/commit/39e66d6959da198388a10f54827b34249dee3018", "message": "Review Feedback", "committedDate": "2020-07-18T15:29:38Z", "type": "commit"}, {"oid": "ba7c2f8a7b2a0c84b87c0f389f58ebf5eff56f83", "url": "https://github.com/ldtteam/minecolonies/commit/ba7c2f8a7b2a0c84b87c0f389f58ebf5eff56f83", "message": "Merge branch 'version/1.15' into bettercook", "committedDate": "2020-07-19T22:56:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3ODg0MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r460378840", "bodyText": "hm I think this can cause issues, e.g. if the assistant stops working or is fired for some reason", "author": "someaddons", "createdAt": "2020-07-25T07:54:10Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java", "diffHunk": "@@ -73,6 +84,24 @@ public BuildingCook(final IColony c, final BlockPos l)\n         keepX.put(FurnaceTileEntity::isFuel, new Tuple<>(STACKSIZE, true));\n     }\n \n+    /**\n+     * Get the status of the assistant processing requests\n+     * @return true if currently crafting\n+     */\n+    public boolean getIsCooking()\n+    {\n+        return isCooking;\n+    }\n+\n+    /**\n+     * Record the state of the assistant processing requests\n+     * @param cookingState true if currently crafting\n+     */\n+    public void setIsCooking(final boolean cookingState)\n+    {\n+        isCooking = cookingState;", "originalCommit": "ba7c2f8a7b2a0c84b87c0f389f58ebf5eff56f83", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ2Nzc4Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r460467782", "bodyText": "Good point. Will add citizen tracking too.", "author": "Mekle001", "createdAt": "2020-07-26T02:12:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3ODg0MA=="}], "type": "inlineReview", "revised_code": {"commit": "e572a336275791b8d4b89e95a8dda7010c905763", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\nindex 654d15dd99..3fc6f8ee2e 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n\n@@ -90,7 +95,7 @@ public class BuildingCook extends AbstractBuildingSmelterCrafter\n      */\n     public boolean getIsCooking()\n     {\n-        return isCooking;\n+        return isCooking && hasAssistant;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3ODg1OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5383#discussion_r460378858", "bodyText": "formatting", "author": "someaddons", "createdAt": "2020-07-25T07:54:22Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java", "diffHunk": "@@ -90,6 +119,12 @@ public int getMaxBuildingLevel()\n     @Override\n     public IJob<?> createJob(final ICitizenData citizen)\n     {\n+        for (final ICitizenData leadCitizen : getAssignedCitizen())    {", "originalCommit": "ba7c2f8a7b2a0c84b87c0f389f58ebf5eff56f83", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e572a336275791b8d4b89e95a8dda7010c905763", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\nindex 654d15dd99..3fc6f8ee2e 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCook.java\n\n@@ -119,15 +124,27 @@ public class BuildingCook extends AbstractBuildingSmelterCrafter\n     @Override\n     public IJob<?> createJob(final ICitizenData citizen)\n     {\n-        for (final ICitizenData leadCitizen : getAssignedCitizen())    {\n+        for (final ICitizenData leadCitizen : getAssignedCitizen())\n+        {\n             if (leadCitizen.getJob() instanceof JobCook)   \n             {\n+                hasAssistant = true;\n                 return new JobCookAssistant(citizen);\n             }\n         }\n         return new JobCook(citizen);\n     }\n \n+    @Override\n+    public void removeCitizen(final ICitizenData citizen)\n+    {\n+        if(citizen.getJob() instanceof JobCookAssistant)\n+        {\n+            hasAssistant = false;\n+        }\n+        super.removeCitizen(citizen);\n+    }\n+\n     @NotNull\n     @Override\n     public String getJobName()\n"}}, {"oid": "daa26657343b6e2209b7c6466a05a9d263476c97", "url": "https://github.com/ldtteam/minecolonies/commit/daa26657343b6e2209b7c6466a05a9d263476c97", "message": "Merge branch 'version/1.15' into bettercook", "committedDate": "2020-07-25T15:29:54Z", "type": "commit"}, {"oid": "e572a336275791b8d4b89e95a8dda7010c905763", "url": "https://github.com/ldtteam/minecolonies/commit/e572a336275791b8d4b89e95a8dda7010c905763", "message": "Review feedback", "committedDate": "2020-07-26T02:14:06Z", "type": "commit"}, {"oid": "e0f7ca9268ac068b401d51b1d96d9e077d28fcdd", "url": "https://github.com/ldtteam/minecolonies/commit/e0f7ca9268ac068b401d51b1d96d9e077d28fcdd", "message": "Put a timeout on isCooking", "committedDate": "2020-07-27T21:44:18Z", "type": "commit"}]}