{"pr_number": 5064, "pr_title": "Feature/structure rework", "pr_createdAt": "2020-05-23T14:52:46Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5064", "timeline": [{"oid": "f6ff95aaa66e222297ac0c1c5125f1cd3f862348", "url": "https://github.com/ldtteam/minecolonies/commit/f6ff95aaa66e222297ac0c1c5125f1cd3f862348", "message": "Part 1 of structure rework adaptation", "committedDate": "2020-05-20T21:47:16Z", "type": "commit"}, {"oid": "f89be76eb858064e598fc5fd8b0668eaf3f96320", "url": "https://github.com/ldtteam/minecolonies/commit/f89be76eb858064e598fc5fd8b0668eaf3f96320", "message": "part 2", "committedDate": "2020-05-20T22:35:06Z", "type": "commit"}, {"oid": "f51aee5abc5d8244727bcc259e8ec9390818c9de", "url": "https://github.com/ldtteam/minecolonies/commit/f51aee5abc5d8244727bcc259e8ec9390818c9de", "message": "Finish integration", "committedDate": "2020-05-23T14:47:19Z", "type": "commit"}, {"oid": "caab836a8221c980d7f1ab78b61fbe00ddc8bab8", "url": "https://github.com/ldtteam/minecolonies/commit/caab836a8221c980d7f1ab78b61fbe00ddc8bab8", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/structure-rework", "committedDate": "2020-05-23T14:47:23Z", "type": "commit"}, {"oid": "bb0eec564be763070621b0f81b362050d736bb26", "url": "https://github.com/ldtteam/minecolonies/commit/bb0eec564be763070621b0f81b362050d736bb26", "message": "250 is better", "committedDate": "2020-05-23T14:56:21Z", "type": "commit"}, {"oid": "bb0eec564be763070621b0f81b362050d736bb26", "url": "https://github.com/ldtteam/minecolonies/commit/bb0eec564be763070621b0f81b362050d736bb26", "message": "250 is better", "committedDate": "2020-05-23T14:56:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzE2OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553169", "bodyText": "bad javadoc^^", "author": "someaddons", "createdAt": "2020-05-23T14:59:30Z", "path": "src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.api.util.Log;\n+import com.ldtteam.structurize.management.Manager;\n+import com.ldtteam.structurize.placement.StructurePlacer;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.placement.structure.IStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.ldtteam.structurize.util.TickedWorldOperation;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java b/src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\nsimilarity index 89%\nrename from src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java\nrename to src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\nindex cacb286976..3e06475f50 100644\n--- a/src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java\n+++ b/src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\n\n@@ -28,9 +28,10 @@ import org.jetbrains.annotations.Nullable;\n import java.util.List;\n \n /**\n- * Interface for using the structure codebase.\n+ * Minecolonies specific creative structure handler.\n+ * Main difference related to registering blocks to colonies.\n  */\n-public final class MCCreativeStructureHandler extends CreativeStructureHandler\n+public final class CreativeBuildingStructureHandler extends CreativeStructureHandler\n {\n     /**\n      * The building associated with this placement.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzE5Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553193", "bodyText": "bad javadoc^^", "author": "someaddons", "createdAt": "2020-05-23T14:59:47Z", "path": "src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java b/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\nindex 7974cc564b..a7128abd6f 100644\n--- a/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\n+++ b/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\n\n@@ -4,7 +4,6 @@ import com.ldtteam.structures.blueprints.v1.Blueprint;\n import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n import com.ldtteam.structurize.util.PlacementSettings;\n import com.minecolonies.api.blocks.ModBlocks;\n-import com.minecolonies.api.colony.buildings.IBuilding;\n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n import net.minecraft.block.Blocks;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzI4Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553287", "bodyText": "this looks like an unused building field, do we need this?", "author": "someaddons", "createdAt": "2020-05-23T15:00:55Z", "path": "src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.\n+ */\n+public final class LoadOnlyStructureHandler extends CreativeStructureHandler\n+{\n+    /**\n+     * The building associated with this placement.\n+     */\n+    private IBuilding building;", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java b/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\nindex 7974cc564b..a7128abd6f 100644\n--- a/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\n+++ b/src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java\n\n@@ -4,7 +4,6 @@ import com.ldtteam.structures.blueprints.v1.Blueprint;\n import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n import com.ldtteam.structurize.util.PlacementSettings;\n import com.minecolonies.api.blocks.ModBlocks;\n-import com.minecolonies.api.colony.buildings.IBuilding;\n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n import net.minecraft.block.Blocks;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1NDA5OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429554099", "bodyText": "how about just \"CreativeBuildingStructureHandler\"", "author": "someaddons", "createdAt": "2020-05-23T15:11:50Z", "path": "src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.api.util.Log;\n+import com.ldtteam.structurize.management.Manager;\n+import com.ldtteam.structurize.placement.StructurePlacer;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.placement.structure.IStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.ldtteam.structurize.util.TickedWorldOperation;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.\n+ */\n+public final class MCCreativeStructureHandler extends CreativeStructureHandler", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java b/src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\nsimilarity index 89%\nrename from src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java\nrename to src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\nindex cacb286976..3e06475f50 100644\n--- a/src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java\n+++ b/src/api/java/com/minecolonies/api/util/CreativeBuildingStructureHandler.java\n\n@@ -28,9 +28,10 @@ import org.jetbrains.annotations.Nullable;\n import java.util.List;\n \n /**\n- * Interface for using the structure codebase.\n+ * Minecolonies specific creative structure handler.\n+ * Main difference related to registering blocks to colonies.\n  */\n-public final class MCCreativeStructureHandler extends CreativeStructureHandler\n+public final class CreativeBuildingStructureHandler extends CreativeStructureHandler\n {\n     /**\n      * The building associated with this placement.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjQwNA==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429566404", "bodyText": "isnt this the same as our config setting?", "author": "someaddons", "createdAt": "2020-05-23T18:09:04Z", "path": "src/api/java/com/minecolonies/api/util/constant/CitizenConstants.java", "diffHunk": "@@ -257,4 +257,45 @@\n      * Noon day time.\n      */\n     public static final int NOON = 6000;\n+\n+    /**\n+     * The minimum range to keep from the current building place.\n+     */\n+    public static final int MIN_ADDITIONAL_RANGE_TO_BUILD = 3;\n+\n+    /**\n+     * String which shows if something is a waypoint.\n+     */\n+    public static final String WAYPOINT_STRING = \"infrastructure\";\n+\n+    /**\n+     * Amount of xp the builder gains each building (Will increase by attribute modifiers additionally).\n+     */\n+    public static final double XP_EACH_BUILDING = 10.0D;\n+\n+    /**\n+     * Increase this value to make the building speed slower.\n+     * Used to balance worker level speed increase.\n+     */\n+    public static final int PROGRESS_MULTIPLIER = 10;", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzYxOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429613619", "bodyText": "Idk, I just moved this around, I didn't create this in this PR.", "author": "Raycoms", "createdAt": "2020-05-24T08:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjQwNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjkyMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429566923", "bodyText": "tried out pirate ships? :)", "author": "someaddons", "createdAt": "2020-05-23T18:15:59Z", "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java", "diffHunk": "@@ -165,10 +166,10 @@ public static boolean canSpawnPirateEventAt(final IColony colony, final BlockPos\n         final World world = colony.getWorld();\n         final String shipSize = ShipSize.getShipForRaidLevel(raidLevel).schematicName;\n \n-        final Structure structure = new Structure(colony.getWorld(), Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings());\n-        structure.rotate(BlockPosUtil.getRotationFromRotations(rotation), colony.getWorld(), spawnPoint, Mirror.NONE);\n+        final MCCreativeStructureHandler structure = new MCCreativeStructureHandler(colony.getWorld(), spawnPoint, Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings(), true);\n+        structure.getBluePrint().rotateWithMirror(BlockPosUtil.getRotationFromRotations(rotation), Mirror.NONE, colony.getWorld());", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzYzMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429613633", "bodyText": "Yes, they're working fine.", "author": "Raycoms", "createdAt": "2020-05-24T08:44:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjkyMw=="}], "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java b/src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java\nindex 694ae74b18..772ef5b2d9 100644\n--- a/src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java\n\n@@ -166,7 +167,8 @@ public final class PirateEventUtils\n         final World world = colony.getWorld();\n         final String shipSize = ShipSize.getShipForRaidLevel(raidLevel).schematicName;\n \n-        final MCCreativeStructureHandler structure = new MCCreativeStructureHandler(colony.getWorld(), spawnPoint, Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings(), true);\n+        final CreativeBuildingStructureHandler\n+          structure = new CreativeBuildingStructureHandler(colony.getWorld(), spawnPoint, Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings(), true);\n         structure.getBluePrint().rotateWithMirror(BlockPosUtil.getRotationFromRotations(rotation), Mirror.NONE, colony.getWorld());\n \n         return canPlaceShipAt(spawnPoint, structure.getBluePrint(), world) || canPlaceShipAt(spawnPoint.down(), structure.getBluePrint(), world);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NzE5OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429567199", "bodyText": "not sure if the 3 down offset still fits with the changed saving above", "author": "someaddons", "createdAt": "2020-05-23T18:19:51Z", "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -100,12 +103,12 @@ public boolean spawnTemporaryStructure(\n \n         backupSchematics.put(targetSpawnPoint.down(3), eventID);\n \n-        InstantStructurePlacer.loadAndPlaceStructureWithRotation(world,\n+        MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(world,\n           schematicPath,\n           targetSpawnPoint.down(3),", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzY0OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429613649", "bodyText": "It worked fine for me.", "author": "Raycoms", "createdAt": "2020-05-24T08:45:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NzE5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java b/src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java\nindex 4ff1521e2f..2920bc5abc 100644\n--- a/src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java\n\n@@ -103,7 +103,7 @@ public class EventStructureManager implements IEventStructureManager\n \n         backupSchematics.put(targetSpawnPoint.down(3), eventID);\n \n-        MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(world,\n+        CreativeBuildingStructureHandler.loadAndPlaceStructureWithRotation(world,\n           schematicPath,\n           targetSpawnPoint.down(3),\n           BlockPosUtil.getRotationFromRotations(rotations),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjQyMA==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429572420", "bodyText": "forgotten log entry?", "author": "someaddons", "createdAt": "2020-05-23T19:35:06Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java", "diffHunk": "@@ -0,0 +1,316 @@\n+package com.minecolonies.coremod.entity.ai.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.AbstractStructureHandler;\n+import com.ldtteam.structurize.util.BlockUtils;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.util.ItemStackUtils;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.ToolType;\n+import com.minecolonies.coremod.MineColonies;\n+import com.minecolonies.coremod.colony.jobs.AbstractJobStructure;\n+import com.minecolonies.coremod.entity.ai.basic.AbstractEntityAIStructure;\n+import com.minecolonies.coremod.util.WorkerUtil;\n+import net.minecraft.block.*;\n+import net.minecraft.inventory.EquipmentSlotType;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Hand;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.world.World;\n+import net.minecraftforge.items.IItemHandler;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static com.minecolonies.api.util.constant.CitizenConstants.RUN_AWAY_SPEED;\n+\n+/**\n+ * Represents a build task for the StructureIterator AI.\n+ * <p>\n+ * It internally uses a structure it transparently loads.\n+ */\n+public class BuildingStructureHandler extends AbstractStructureHandler\n+{\n+    /**\n+     * Amount of xp the builder gains for placing a block.\n+     */\n+    private static final double XP_EACH_BLOCK = 0.1D;\n+\n+    /**\n+     * The structure AI handling this task.\n+     */\n+    private final AbstractEntityAIStructure<? extends AbstractJobStructure> structureAI;\n+\n+    /**\n+     * The total number of stages.\n+     */\n+    private final Stage[] stages;\n+\n+    /**\n+     * The building associated with this placement.\n+     */\n+    private IBuilding building;\n+\n+    /**\n+     * The current structure stage.\n+     */\n+    private int stage;\n+\n+    /**\n+     * The minecolonies AI specific creative structure placer.\n+     * @param world the world.\n+     * @param worldPos the pos it is placed at.\n+     * @param structureName the name of the structure.\n+     * @param settings the placement settings.\n+     * @param entityAIStructure the AI handling this structure.\n+     */\n+    public BuildingStructureHandler(final World world, final BlockPos worldPos, final String structureName, final PlacementSettings settings, final AbstractEntityAIStructure<? extends AbstractJobStructure> entityAIStructure, final Stage[] stages)\n+    {\n+        super(world, worldPos, structureName, settings);\n+        setupBuilding();\n+        this.structureAI= entityAIStructure;\n+        this.stages = stages;\n+        this.stage = 0;\n+    }\n+\n+    /**\n+     * The minecolonies AI specific creative structure placer.\n+     * @param world the world.\n+     * @param worldPos the pos it is placed at.\n+     * @param blueprint the blueprint.\n+     * @param settings the placement settings.\n+     * @param entityAIStructure the AI handling this structure.\n+     */\n+    public BuildingStructureHandler(final World world, final BlockPos worldPos, final Blueprint blueprint, final PlacementSettings settings, final AbstractEntityAIStructure<? extends AbstractJobStructure> entityAIStructure, final Stage[] stages)\n+    {\n+        super(world, worldPos, blueprint, settings);\n+        setupBuilding();\n+        this.structureAI= entityAIStructure;\n+        this.stages = stages;\n+        this.stage = 0;\n+    }\n+\n+    /**\n+     * Setup the building to register things to.\n+     */\n+    private void setupBuilding()\n+    {\n+        final IColony colony = IColonyManager.getInstance().getColonyByPosFromWorld(getWorld(), getWorldPos());\n+        if (colony != null)\n+        {\n+            this.building = colony.getBuildingManager().getBuilding(getWorldPos());\n+        }\n+    }\n+\n+    /**\n+     * Get the current stage we're in.\n+     *\n+     * @return the current Stage.\n+     */\n+    @Nullable\n+    public Stage getStage()\n+    {\n+        if (this.stage >= stages.length)\n+        {\n+            return null;\n+        }\n+        return stages[stage];\n+    }\n+\n+    /**\n+     * Go to the next stage.\n+     */\n+    public boolean nextStage()\n+    {\n+        return ++this.stage < stages.length;\n+    }\n+\n+    /**\n+     * Set the current stage from memory.\n+     * @param stage the stage to set.\n+     */\n+    public void setStage(final Stage stage)\n+    {\n+        for (int i = 0; i < stages.length; i++)\n+        {\n+            if (stages[i] == stage)\n+            {\n+                this.stage = i;\n+                return;\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void prePlacementLogic(final BlockPos worldPos, final BlockState blockState)\n+    {\n+        WorkerUtil.faceBlock(worldPos, structureAI.getWorker());\n+        //Move out of the way when placing blocks\n+        final ItemStack item = BlockUtils.getItemStackFromBlockState(blockState);\n+        structureAI.getWorker().setItemStackToSlot(EquipmentSlotType.MAINHAND, item == null ? ItemStackUtils.EMPTY : item);\n+\n+        if (MathHelper.floor(structureAI.getWorker().getPosX()) == worldPos.getX()\n+              && MathHelper.abs(worldPos.getY() - (int) structureAI.getWorker().getPosY()) <= 1\n+              && MathHelper.floor(structureAI.getWorker().getPosZ()) == worldPos.getZ()\n+              && structureAI.getWorker().getNavigator().noPath())\n+        {\n+            structureAI.getWorker().getNavigator().moveAwayFromXYZ(worldPos, RUN_AWAY_SPEED, 1);\n+        }\n+\n+        structureAI.getWorker().swingArm(Hand.MAIN_HAND);\n+    }\n+\n+    @Nullable\n+    @Override\n+    public IItemHandler getInventory()\n+    {\n+        return structureAI.getWorker().getInventoryCitizen();\n+    }\n+\n+    @Override\n+    public void triggerSuccess(final BlockPos pos, final List<ItemStack> list, final boolean placement)\n+    {\n+        final BlockState state = getBluePrint().getBlockState(pos);\n+        final BlockPos worldPos = getProgressPosInWorld(pos);\n+        if (building != null)\n+        {\n+            building.registerBlockPosition(getBluePrint().getBlockState(pos), worldPos, this.getWorld());\n+        }\n+\n+        if (placement)\n+        {\n+            structureAI.getWorker().getCitizenExperienceHandler().addExperience(XP_EACH_BLOCK);\n+\n+            for (final ItemStack stack : list)\n+            {\n+                structureAI.reduceNeededResources(stack);\n+            }\n+        }\n+\n+        if (state.getBlock() == ModBlocks.blockWayPoint)\n+        {\n+            structureAI.getWorker().getCitizenColonyHandler().getColony().addWayPoint(worldPos, state);\n+        }\n+        Log.getLogger().warn(\"success\" + pos.toString());", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java b/src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java\nindex 8713625e46..f7f0cc40fd 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java\n\n@@ -9,7 +9,6 @@ import com.minecolonies.api.colony.IColony;\n import com.minecolonies.api.colony.IColonyManager;\n import com.minecolonies.api.colony.buildings.IBuilding;\n import com.minecolonies.api.util.ItemStackUtils;\n-import com.minecolonies.api.util.Log;\n import com.minecolonies.api.util.constant.ToolType;\n import com.minecolonies.coremod.MineColonies;\n import com.minecolonies.coremod.colony.jobs.AbstractJobStructure;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429572509", "bodyText": "is this really needed? does the place not normally load the placed's TE data?", "author": "someaddons", "createdAt": "2020-05-23T19:36:22Z", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java", "diffHunk": "@@ -173,8 +180,21 @@ public void onExecute(final NetworkEvent.Context ctxIn, final boolean isLogicalS\n             if (isHut)\n             {\n                 handleHut(CompatibilityUtils.getWorldFromEntity(player), player, sn, rotation, pos, mirror, state, complete);\n-                InstantStructurePlacer.loadAndPlaceStructureWithRotation(player.world, structureName,\n-                  pos, BlockPosUtil.getRotationFromRotations(rotation), mirror ? Mirror.FRONT_BACK : Mirror.NONE, complete);\n+                final Blueprint blueprint = MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(player.world, structureName,\n+                  pos, BlockPosUtil.getRotationFromRotations(rotation), mirror ? Mirror.FRONT_BACK : Mirror.NONE, !complete, player);\n+\n+                final TileEntity tileEntity = player.world.getTileEntity(pos);", "originalCommit": "bb0eec564be763070621b0f81b362050d736bb26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxMzczOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429613739", "bodyText": "Not of the one at the offset pos.", "author": "Raycoms", "createdAt": "2020-05-24T08:46:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxNzYxMA==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429617610", "bodyText": "offset pos? you mean the anchor position? why is it excluded? :D", "author": "someaddons", "createdAt": "2020-05-24T09:36:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MjA4OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429642088", "bodyText": "because the block gets placed first, to be placed with the right level data", "author": "Raycoms", "createdAt": "2020-05-24T14:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MzQ2Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429643466", "bodyText": "ye but upon that placement it should read the schematics TE data or not?", "author": "someaddons", "createdAt": "2020-05-24T14:39:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0MzYyMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429643623", "bodyText": "No, that's why I've added this here.", "author": "Raycoms", "createdAt": "2020-05-24T14:41:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java b/src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java\nindex 1b2dfb19aa..a6178e78cb 100644\n--- a/src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java\n+++ b/src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java\n\n@@ -180,7 +180,7 @@ public class BuildToolPasteMessage implements IMessage\n             if (isHut)\n             {\n                 handleHut(CompatibilityUtils.getWorldFromEntity(player), player, sn, rotation, pos, mirror, state, complete);\n-                final Blueprint blueprint = MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(player.world, structureName,\n+                final Blueprint blueprint = CreativeBuildingStructureHandler.loadAndPlaceStructureWithRotation(player.world, structureName,\n                   pos, BlockPosUtil.getRotationFromRotations(rotation), mirror ? Mirror.FRONT_BACK : Mirror.NONE, !complete, player);\n \n                 final TileEntity tileEntity = player.world.getTileEntity(pos);\n"}}, {"oid": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "url": "https://github.com/ldtteam/minecolonies/commit/c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "message": "adjust to review", "committedDate": "2020-05-24T08:53:55Z", "type": "commit"}, {"oid": "e7cb28f5f18445614092e311fb5dfc18cf21bef4", "url": "https://github.com/ldtteam/minecolonies/commit/e7cb28f5f18445614092e311fb5dfc18cf21bef4", "message": "dman leaves can_eat and not isFood behind", "committedDate": "2020-05-25T12:21:31Z", "type": "commit"}, {"oid": "c2957fcc3b758820d5716be5459bdfe6913d4f62", "url": "https://github.com/ldtteam/minecolonies/commit/c2957fcc3b758820d5716be5459bdfe6913d4f62", "message": "fix some oddities with structure placement", "committedDate": "2020-05-25T17:02:42Z", "type": "commit"}, {"oid": "3a87e47e2cb0cbdd3c410f7b688e47520091c5c7", "url": "https://github.com/ldtteam/minecolonies/commit/3a87e47e2cb0cbdd3c410f7b688e47520091c5c7", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/structure-rework", "committedDate": "2020-05-25T18:25:58Z", "type": "commit"}, {"oid": "3256311a7c06d880d887a754affb37d3083df313", "url": "https://github.com/ldtteam/minecolonies/commit/3256311a7c06d880d887a754affb37d3083df313", "message": "setup properties", "committedDate": "2020-05-25T18:26:14Z", "type": "commit"}]}