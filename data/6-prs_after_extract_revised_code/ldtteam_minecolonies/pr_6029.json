{"pr_number": 6029, "pr_title": "Invfixes", "pr_createdAt": "2020-11-03T23:55:31Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/6029", "timeline": [{"oid": "adc6876f9bc83d82d67caa821b4c8040c8f2e972", "url": "https://github.com/ldtteam/minecolonies/commit/adc6876f9bc83d82d67caa821b4c8040c8f2e972", "message": "Improve citizen inventory free slots and stop damaging items within without notice", "committedDate": "2020-11-03T22:55:21Z", "type": "commit"}, {"oid": "8a5c6e3aa1935c30b485c945a9845cfabc3bf6ff", "url": "https://github.com/ldtteam/minecolonies/commit/8a5c6e3aa1935c30b485c945a9845cfabc3bf6ff", "message": "Fix cap invalidate only upon change\nFix racks(and their chunk) beeing marked dirty from the buildings getCap call all the time", "committedDate": "2020-11-03T23:31:24Z", "type": "commit"}, {"oid": "03d7e3a860f992949056f9b22d3b37146c8b6551", "url": "https://github.com/ldtteam/minecolonies/commit/03d7e3a860f992949056f9b22d3b37146c8b6551", "message": "add freeslot counter", "committedDate": "2020-11-03T23:50:35Z", "type": "commit"}, {"oid": "07a805ec401cdfbc1dd39f66fa9b1cec2353251f", "url": "https://github.com/ldtteam/minecolonies/commit/07a805ec401cdfbc1dd39f66fa9b1cec2353251f", "message": "fix check", "committedDate": "2020-11-03T23:57:29Z", "type": "commit"}, {"oid": "3085f5b6041ab06d1866d071e28896575f3da513", "url": "https://github.com/ldtteam/minecolonies/commit/3085f5b6041ab06d1866d071e28896575f3da513", "message": "add capability returns", "committedDate": "2020-11-04T00:22:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517171085", "bodyText": "Ehm, shouldn't we avoid returning this cached value here?", "author": "Raycoms", "createdAt": "2020-11-04T08:30:32Z", "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java", "diffHunk": "@@ -447,13 +445,13 @@ public void rotate(final Rotation rotationIn)\n     @Override\n     public <T> LazyOptional<T> getCapability(@Nonnull final Capability<T> capability, final Direction dir)\n     {\n-        if (lastOptional != null)\n-        {\n-            lastOptional.invalidate();\n-        }\n-\n         if (capability == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)\n         {\n+            if (lastOptional != null && lastOptional.isPresent())\n+            {\n+                return (LazyOptional<T>) lastOptional;", "originalCommit": "3085f5b6041ab06d1866d071e28896575f3da513", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIyMDc1NA==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517220754", "bodyText": "No why?", "author": "OrionDevelopment", "createdAt": "2020-11-04T09:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIyMzYxNw==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517223617", "bodyText": "I have a feeling I'm talking to a wall. I discussed this 2 weeks ago and removed this caching stuff.", "author": "Raycoms", "createdAt": "2020-11-04T09:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIyOTUwMg==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517229502", "bodyText": "Because you think it will break understood.\nBut I have no evidence that it will. It works for tons of other mods, even for vanilla. So come up with evidence that it will break.\nHe invalidates the cache when the single or double status changes. Which is the only relevant thing, in my eyes.", "author": "OrionDevelopment", "createdAt": "2020-11-04T10:05:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIzMDE3Mg==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517230172", "bodyText": "No no, not I think it will break, it did break in numerous cases and items were lost, not detected by dman, duped, etc", "author": "Raycoms", "createdAt": "2020-11-04T10:06:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzIzMTEwNg==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517231106", "bodyText": "I'm talking with someaddons about this and forge does it completely different for chests too, (no simple cache like this) so we should probably copy this behaviour", "author": "Raycoms", "createdAt": "2020-11-04T10:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1ODQ2Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517258466", "bodyText": "If that is the case, then go for it. I would follow the example of the chests and just stick with that.\nI thought they cached it that is why I confused. If they do not then disregard my opinion.", "author": "OrionDevelopment", "createdAt": "2020-11-04T10:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1OTk3OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/6029#discussion_r517259979", "bodyText": "their lazyoptional basically queries the tileEntity from the world =D", "author": "Raycoms", "createdAt": "2020-11-04T10:55:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE3MTA4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "569c759e9310da80dd0f980157f91d0aa0f27c54", "chunk": "diff --git a/src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java b/src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java\nindex e28bf9c0c..851a9a10e 100755\n--- a/src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java\n+++ b/src/api/java/com/minecolonies/api/tileentities/TileEntityRack.java\n\n@@ -445,39 +448,45 @@ public class TileEntityRack extends AbstractTileEntityRack\n     @Override\n     public <T> LazyOptional<T> getCapability(@Nonnull final Capability<T> capability, final Direction dir)\n     {\n-        if (capability == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)\n+        if (!removed && capability == CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)\n         {\n             if (lastOptional != null && lastOptional.isPresent())\n             {\n-                return (LazyOptional<T>) lastOptional;\n+                return lastOptional.cast();\n             }\n \n             if (single)\n             {\n-                lastOptional = LazyOptional.of(() -> inventory);\n-                return (LazyOptional<T>) lastOptional;\n+                lastOptional = LazyOptional.of(() ->\n+                {\n+                    if (this.isRemoved())\n+                    {\n+                        return new RackInventory(0);\n+                    }\n+\n+                    return new CombinedItemHandler(RACK, getInventory());\n+                });\n+                return lastOptional.cast();\n             }\n-            else if (getOtherChest() != null)\n+            else\n             {\n-                if (isMain())\n-                {\n-                    lastOptional = LazyOptional.of(() -> new CombinedItemHandler(RACK, inventory, getOtherChest().getInventory()));\n-                    return (LazyOptional<T>) lastOptional;\n-                }\n-                else\n+                lastOptional = LazyOptional.of(() ->\n                 {\n-                    if (getOtherChest().isMain())\n+                    if (this.isRemoved())\n                     {\n-                        lastOptional = getOtherChest().getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY);\n-                        return (LazyOptional<T>) lastOptional;\n+                        return new RackInventory(0);\n                     }\n-                    else\n+\n+                    final AbstractTileEntityRack other = getOtherChest();\n+                    if (other == null)\n                     {\n-                        setMain(true);\n-                        lastOptional = LazyOptional.of(() -> new CombinedItemHandler(RACK, inventory, getOtherChest().getInventory()));\n-                        return (LazyOptional<T>) lastOptional;\n+                        return new CombinedItemHandler(RACK, getInventory());\n                     }\n-                }\n+\n+                    return new CombinedItemHandler(RACK, getInventory(), other.getInventory());\n+                });\n+\n+                return lastOptional.cast();\n             }\n         }\n         return super.getCapability(capability, dir);\n"}}, {"oid": "569c759e9310da80dd0f980157f91d0aa0f27c54", "url": "https://github.com/ldtteam/minecolonies/commit/569c759e9310da80dd0f980157f91d0aa0f27c54", "message": "Fix capability invalidtes to be like chests\nFix Building cap returning values when the TE was removed\nFix Enchanter doing animations serverside and not calling super tick\nFix CombinedHandler not having isItemValid implemented", "committedDate": "2020-11-04T18:58:10Z", "type": "commit"}]}