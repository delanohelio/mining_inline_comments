{"pr_number": 6288, "pr_title": "Low-hanging Fruit: UI improvements, off-hand build wand, crafter recipe adds, and expanding raid command capabilities.", "pr_createdAt": "2020-12-23T22:47:52Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/6288", "timeline": [{"oid": "73d497119c54a8c5727e832334cbced4aaf02cd4", "url": "https://github.com/ldtteam/minecolonies/commit/73d497119c54a8c5727e832334cbced4aaf02cd4", "message": "- Adds expanded message on completion of deconstruction to warn to use the hut GUI to pick up the block if intending to retain level, from https://github.com/ldtteam/minecolonies-features/issues/215\n\n- Adds a progress message at 25 citizens, pointing players to the University research.\n\n- Adds disabled/enabled button functionality and tooltips for Warehouse Upgrade, from https://github.com/ldtteam/minecolonies-features/issues/222 .  Also similar for Sort.\n\n- Adds a time check to WAREHOUSE_FULL messages, to reduce message spamming, and gives different messages depending on whether the warehouse can still be upgraded (in which case it can't use emerald blocks) or not.\n\n- Adds glowstone dust as an output to the mechanic, for https://github.com/ldtteam/minecolonies-features/issues/176 , and sets glowstone (block) as non-reducible to avoid potential surprises to datapack makers. Added a few other exclusions for storage-like blocks that Forge does not inherently tag, for similar reasons.\n\n- Adds Blackstone and Polished Blackstone (and polished blackstone slab/bricks) as usable ingredients to the Stonemason, and Polished Basalt to the Stonesmelter's outputs, for #6231.\n\n- Allows use of build tool in off-hand, from #6232.\n\n- Initial work to recognize Pillager Patrol spawn events.", "committedDate": "2020-12-23T01:05:20Z", "type": "commit"}, {"oid": "6c66a785c5e3e214fbbb37c8b13e64f1aa4f8c28", "url": "https://github.com/ldtteam/minecolonies/commit/6c66a785c5e3e214fbbb37c8b13e64f1aa4f8c28", "message": "- Removes concrete layer from Jungle Archery 1.\n\n- Removes duplicate sendPlayersMessage for WorkOrderBuildRemovals.\n\n- Removes Illager Patrol event handler precursor work.\n\n- Add a third count to the Town Hall's citizen summary page, indicating the maximum limit of colonists from research, from https://github.com/ldtteam/minecolonies-features/issues/200\n\n- Adds an optional argument to raid-now, raid-now-all, raid-tonight, and raid-tonight-all to force the raid to be a specific type, from https://github.com/ldtteam/minecolonies-features/issues/212 .\n\n- Adds a raid event for pirates without a ship, only runable by manual raid commands for now.", "committedDate": "2020-12-23T22:32:15Z", "type": "commit"}, {"oid": "ad38fa012f60f283664017ddeb38f0de93d39d76", "url": "https://github.com/ldtteam/minecolonies/commit/ad38fa012f60f283664017ddeb38f0de93d39d76", "message": "Fixes newlines for posix-compliance.", "committedDate": "2020-12-23T22:41:02Z", "type": "commit"}, {"oid": "485f8183137aaff0102923dae9735882a0ee46ca", "url": "https://github.com/ldtteam/minecolonies/commit/485f8183137aaff0102923dae9735882a0ee46ca", "message": "Merge branch 'version/1.16.3' into version/1.16.3-features-217", "committedDate": "2020-12-23T22:49:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNzYzMw==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548307633", "bodyText": "sortButton.disable and add disable texture to xml", "author": "Nightenom", "createdAt": "2020-12-23T22:53:48Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java", "diffHunk": "@@ -119,8 +120,14 @@ public void onOpened()\n     {\n         if (building.getBuildingLevel() < BUILDING_LEVEL_FOR_SORTING)\n         {\n-            findPaneOfTypeByID(SORT_WAREHOUSE_BUTTON, ButtonImage.class).hide();\n+            final ButtonImage sortButton = findPaneOfTypeByID(SORT_WAREHOUSE_BUTTON, ButtonImage.class);\n+            final List<IFormattableTextComponent> hoverText = new ArrayList<>();\n+            hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.1\", BUILDING_LEVEL_FOR_SORTING));\n+            hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.2\", BUILDING_LEVEL_FOR_SORTING));\n+            sortButton.setHoverToolTip(hoverText);\n+            sortButton.setImage(new ResourceLocation(Constants.MOD_ID, \"textures/gui/builderhut/builder_button_medium_large_disabled.png\"));", "originalCommit": "485f8183137aaff0102923dae9735882a0ee46ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4006fa3034883117fa2f5c703bd6c50b12361238", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\nindex 5e7590f47b..8ef5fb0f6c 100755\n--- a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n+++ b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n\n@@ -125,7 +125,7 @@ public class WindowHutWareHouse extends AbstractWindowBuilding<BuildingWareHouse\n             hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.1\", BUILDING_LEVEL_FOR_SORTING));\n             hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.2\", BUILDING_LEVEL_FOR_SORTING));\n             sortButton.setHoverToolTip(hoverText);\n-            sortButton.setImage(new ResourceLocation(Constants.MOD_ID, \"textures/gui/builderhut/builder_button_medium_large_disabled.png\"));\n+            sortButton.disable();\n         }\n \n         super.onOpened();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNzkzNA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548307934", "bodyText": "probably might be worth using \\n instead, I also think that tooltip renderer has auto wrapping but not sure about that", "author": "Nightenom", "createdAt": "2020-12-23T22:55:02Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java", "diffHunk": "@@ -119,8 +120,14 @@ public void onOpened()\n     {\n         if (building.getBuildingLevel() < BUILDING_LEVEL_FOR_SORTING)\n         {\n-            findPaneOfTypeByID(SORT_WAREHOUSE_BUTTON, ButtonImage.class).hide();\n+            final ButtonImage sortButton = findPaneOfTypeByID(SORT_WAREHOUSE_BUTTON, ButtonImage.class);\n+            final List<IFormattableTextComponent> hoverText = new ArrayList<>();\n+            hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.1\", BUILDING_LEVEL_FOR_SORTING));\n+            hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.2\", BUILDING_LEVEL_FOR_SORTING));", "originalCommit": "485f8183137aaff0102923dae9735882a0ee46ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMxMTU1OA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548311558", "bodyText": "Is there a particular trick to getting translation text components to like \\n?  I couldn't figure out how to escape them being parsed.\nI did see the underlying tooltip rendering's autowrapping, but I couldn't find how to toggle it on; Pane and descendents pretty consistently use renderToolTip over renderWrappedToolTip.", "author": "gattsuru", "createdAt": "2020-12-23T23:03:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNzkzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ2NDEwMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548464101", "bodyText": "No, this is fine.", "author": "Raycoms", "createdAt": "2020-12-24T09:25:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNzkzNA=="}], "type": "inlineReview", "revised_code": {"commit": "4006fa3034883117fa2f5c703bd6c50b12361238", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\nindex 5e7590f47b..8ef5fb0f6c 100755\n--- a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n+++ b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n\n@@ -125,7 +125,7 @@ public class WindowHutWareHouse extends AbstractWindowBuilding<BuildingWareHouse\n             hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.1\", BUILDING_LEVEL_FOR_SORTING));\n             hoverText.add(new TranslationTextComponent(\"com.minecolonies.coremod.gui.warehouse.sort.disabled.2\", BUILDING_LEVEL_FOR_SORTING));\n             sortButton.setHoverToolTip(hoverText);\n-            sortButton.setImage(new ResourceLocation(Constants.MOD_ID, \"textures/gui/builderhut/builder_button_medium_large_disabled.png\"));\n+            sortButton.disable();\n         }\n \n         super.onOpened();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwODIwOA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548308208", "bodyText": "variable name", "author": "Nightenom", "createdAt": "2020-12-23T22:56:05Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java", "diffHunk": "@@ -208,9 +226,12 @@ private void updateResourcePane()\n         neededLabel.setLabelText(resource.getAvailable() + \" / \" + resource.getAmount());\n         findPaneOfTypeByID(RESOURCE_QUANTITY_MISSING, Label.class).setLabelText(Integer.toString(resource.getAmount() - resource.getAvailable()));\n \n-        final ItemStack image = new ItemStack(resource.getItem(), 1);\n-        image.setTag(resource.getItemStack().getTag());\n-        findPaneOfTypeByID(RESOURCE_ICON, ItemIcon.class).setItem(image);\n+        if(building.getBuildingLevel() >= building.getBuildingMaxLevel())\n+        {\n+            final ItemStack image = new ItemStack(resource.getItem(), 1);", "originalCommit": "485f8183137aaff0102923dae9735882a0ee46ca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4006fa3034883117fa2f5c703bd6c50b12361238", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\nindex 5e7590f47b..8ef5fb0f6c 100755\n--- a/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n+++ b/src/main/java/com/minecolonies/coremod/client/gui/WindowHutWareHouse.java\n\n@@ -228,9 +228,9 @@ public class WindowHutWareHouse extends AbstractWindowBuilding<BuildingWareHouse\n \n         if(building.getBuildingLevel() >= building.getBuildingMaxLevel())\n         {\n-            final ItemStack image = new ItemStack(resource.getItem(), 1);\n-            image.setTag(resource.getItemStack().getTag());\n-            findPaneOfTypeByID(RESOURCE_ICON, ItemIcon.class).setItem(image);\n+            final ItemStack resourceStackOfOne = new ItemStack(resource.getItem(), 1);\n+            resourceStackOfOne.setTag(resource.getItemStack().getTag());\n+            findPaneOfTypeByID(RESOURCE_ICON, ItemIcon.class).setItem(resourceStackOfOne);\n         }\n     }\n \n"}}, {"oid": "4006fa3034883117fa2f5c703bd6c50b12361238", "url": "https://github.com/ldtteam/minecolonies/commit/4006fa3034883117fa2f5c703bd6c50b12361238", "message": "Fixes variable name, comparison check, and uses the .disable call instead resetting the image on sortButton.", "committedDate": "2020-12-24T00:16:15Z", "type": "commit"}, {"oid": "1f432e98f3136556885a0936b64fbe447785541a", "url": "https://github.com/ldtteam/minecolonies/commit/1f432e98f3136556885a0936b64fbe447785541a", "message": "Merge branch 'version/1.16.3-features-217' of https://github.com/gattsuru/minecolonies into version/1.16.3-features-217", "committedDate": "2020-12-24T00:16:46Z", "type": "commit"}, {"oid": "46936f6e424b1d14a565772252a045675db8cc2b", "url": "https://github.com/ldtteam/minecolonies/commit/46936f6e424b1d14a565772252a045675db8cc2b", "message": "Apply suggestions from code review\r\n\r\nGrammar, spelling, and accuracy changes from code review.\n\nCo-authored-by: ravenbuilder934 <sabrinajamie@outlook.com>", "committedDate": "2020-12-24T00:19:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ2NDYwNA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548464604", "bodyText": "While you're on this, there is a small bug here that was reported, citizensSize is also the count limit, instead of the total number of existing citizens", "author": "Raycoms", "createdAt": "2020-12-24T09:26:21Z", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowTownHall.java", "diffHunk": "@@ -591,10 +591,11 @@ private void createAndSetStatistics()\n \n         findPaneOfTypeByID(HAPPINESS_LABEL, Label.class).setLabelText(roundedHappiness);\n         final int citizensSize = townHall.getColony().getCitizenCountLimit();\n+        final AdditionModifierResearchEffect citizenCapBoost = this.building.getColony().getResearchManager().getResearchEffects().getEffect(CAP, AdditionModifierResearchEffect.class);\n+        final int citizensCap = (int)(Math.min(MineColonies.getConfig().getServer().maxCitizenPerColony.get(), citizenCapBoost != null ? 25 + citizenCapBoost.getEffect() : 25));\n \n-        final String numberOfCitizens =\n-          LanguageHandler.format(COM_MINECOLONIES_COREMOD_GUI_TOWNHALL_POPULATION_TOTALCITIZENS, citizensSize, townHall.getColony().getCitizenCountLimit());\n-        findPaneOfTypeByID(TOTAL_CITIZENS_LABEL, Label.class).setLabelText(numberOfCitizens);\n+        findPaneOfTypeByID(TOTAL_CITIZENS_LABEL, Label.class).setLabelText\n+                     (LanguageHandler.format(COM_MINECOLONIES_COREMOD_GUI_TOWNHALL_POPULATION_TOTALCITIZENS, citizensSize, townHall.getColony().getCitizenCountLimit(), citizensCap));", "originalCommit": "46936f6e424b1d14a565772252a045675db8cc2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "084ffd7ac56daeb82e81f5019337384440af8ab7", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/client/gui/WindowTownHall.java b/src/main/java/com/minecolonies/coremod/client/gui/WindowTownHall.java\nindex b29884a971..1a462f28cb 100755\n--- a/src/main/java/com/minecolonies/coremod/client/gui/WindowTownHall.java\n+++ b/src/main/java/com/minecolonies/coremod/client/gui/WindowTownHall.java\n\n@@ -590,12 +590,24 @@ public class WindowTownHall extends AbstractWindowBuilding<ITownHallView>\n         final String roundedHappiness = df.format(building.getColony().getOverallHappiness());\n \n         findPaneOfTypeByID(HAPPINESS_LABEL, Label.class).setLabelText(roundedHappiness);\n-        final int citizensSize = townHall.getColony().getCitizenCountLimit();\n+        final int citizensSize = townHall.getColony().getCitizens().size();\n         final AdditionModifierResearchEffect citizenCapBoost = this.building.getColony().getResearchManager().getResearchEffects().getEffect(CAP, AdditionModifierResearchEffect.class);\n         final int citizensCap = (int)(Math.min(MineColonies.getConfig().getServer().maxCitizenPerColony.get(), citizenCapBoost != null ? 25 + citizenCapBoost.getEffect() : 25));\n \n-        findPaneOfTypeByID(TOTAL_CITIZENS_LABEL, Label.class).setLabelText\n-                     (LanguageHandler.format(COM_MINECOLONIES_COREMOD_GUI_TOWNHALL_POPULATION_TOTALCITIZENS, citizensSize, townHall.getColony().getCitizenCountLimit(), citizensCap));\n+        if(citizensSize < citizensCap)\n+        {\n+            findPaneOfTypeByID(TOTAL_CITIZENS_LABEL, Label.class).setLabelText\n+                                                                    (LanguageHandler.format(COM_MINECOLONIES_COREMOD_GUI_TOWNHALL_POPULATION_TOTALCITIZENS,\n+                                                                      citizensSize,\n+                                                                      Math.max(citizensSize, townHall.getColony().getCitizenCountLimit())));\n+        }\n+        else\n+        {\n+            findPaneOfTypeByID(TOTAL_CITIZENS_LABEL, Label.class).setLabelText\n+                                                                    (LanguageHandler.format(COM_MINECOLONIES_COREMOD_GUI_TOWNHALL_POPULATION_TOTALCITIZENS_MAXED,\n+                                                                      citizensSize,\n+                                                                      citizensCap));\n+        }\n \n         int children = 0;\n         final Map<String, Tuple<Integer, Integer>> jobMaxCountMap = new HashMap<>();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NDQxMA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548474410", "bodyText": "just use the world ticks here for timing I'd say.", "author": "Raycoms", "createdAt": "2020-12-24T09:56:28Z", "path": "src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java", "diffHunk": "@@ -119,7 +126,18 @@ public void dumpInventoryIntoWareHouse(@NotNull final InventoryCitizen inventory\n             @Nullable final TileEntity chest = searchRightChestForStack(stack);\n             if (chest == null)\n             {\n-                LanguageHandler.sendPlayersMessage(getColony().getMessagePlayerEntities(), COM_MINECOLONIES_COREMOD_WAREHOUSE_FULL);\n+                if(System.currentTimeMillis() - lastNotification > FIVE_MINUTES_IN_MILLIS)", "originalCommit": "46936f6e424b1d14a565772252a045675db8cc2b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "084ffd7ac56daeb82e81f5019337384440af8ab7", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java b/src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java\nindex b8493e2e4d..87af35eb7a 100755\n--- a/src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java\n+++ b/src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java\n\n@@ -126,9 +126,9 @@ public class TileEntityWareHouse extends AbstractTileEntityWareHouse\n             @Nullable final TileEntity chest = searchRightChestForStack(stack);\n             if (chest == null)\n             {\n-                if(System.currentTimeMillis() - lastNotification > FIVE_MINUTES_IN_MILLIS)\n+                if(world.getGameTime() - lastNotification > TICKS_FIVE_MIN)\n                 {\n-                    lastNotification = System.currentTimeMillis();\n+                    lastNotification = world.getGameTime();\n                     if(getBuilding().getBuildingLevel() == getBuilding().getMaxBuildingLevel())\n                     {\n                         LanguageHandler.sendPlayersMessage(getColony().getMessagePlayerEntities(), COM_MINECOLONIES_COREMOD_WAREHOUSE_FULL_MAX_UPGRADE);\n"}}, {"oid": "084ffd7ac56daeb82e81f5019337384440af8ab7", "url": "https://github.com/ldtteam/minecolonies/commit/084ffd7ac56daeb82e81f5019337384440af8ab7", "message": "Changes WindowTownHall to show current count of citizens a little smarter.  Updates a few javadocs related to citizen max counts.\n\nChanges Warehouse tile entity to use world.getGameTime instead of system time.", "committedDate": "2020-12-24T16:40:01Z", "type": "commit"}, {"oid": "98ff6e5a553cf4bc0f0c4215ea109e4b31fb94e4", "url": "https://github.com/ldtteam/minecolonies/commit/98ff6e5a553cf4bc0f0c4215ea109e4b31fb94e4", "message": "Switches the Town Hall's information page Citizen Count from using Minecraft \u00a7 codes to instead split the label in two pieces and using a little smarter.  Also adds (short) tooltips for most limiting states.", "committedDate": "2020-12-24T19:54:24Z", "type": "commit"}, {"oid": "c8c6771db72288089b4974edcbddec563e01f28e", "url": "https://github.com/ldtteam/minecolonies/commit/c8c6771db72288089b4974edcbddec563e01f28e", "message": "Update src/main/resources/assets/minecolonies/lang/en_us.json\n\nCo-authored-by: ravenbuilder934 <sabrinajamie@outlook.com>", "committedDate": "2020-12-24T20:11:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc0Mzg3MA==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548743870", "bodyText": "So, emerald block makes sense at level 5, but a warehouse full at level 4 this message is confusing.", "author": "Mekle001", "createdAt": "2020-12-24T20:22:52Z", "path": "src/main/java/com/minecolonies/coremod/tileentities/TileEntityWareHouse.java", "diffHunk": "@@ -119,7 +126,18 @@ public void dumpInventoryIntoWareHouse(@NotNull final InventoryCitizen inventory\n             @Nullable final TileEntity chest = searchRightChestForStack(stack);\n             if (chest == null)\n             {\n-                LanguageHandler.sendPlayersMessage(getColony().getMessagePlayerEntities(), COM_MINECOLONIES_COREMOD_WAREHOUSE_FULL);\n+                if(world.getGameTime() - lastNotification > TICKS_FIVE_MIN)\n+                {\n+                    lastNotification = world.getGameTime();\n+                    if(getBuilding().getBuildingLevel() == getBuilding().getMaxBuildingLevel())\n+                    {\n+                        LanguageHandler.sendPlayersMessage(getColony().getMessagePlayerEntities(), COM_MINECOLONIES_COREMOD_WAREHOUSE_FULL_MAX_UPGRADE);", "originalCommit": "c8c6771db72288089b4974edcbddec563e01f28e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc0NjAyMg==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548746022", "bodyText": "It should only give the \"The Warehouse is full, please use an emerald block to make more space in the racks!\" message at level five.  At level four, it will give \"The Warehouse is full, please upgrade it!\".  Did I goof that up, or does the level four or lower message need different wording?\nI guess it might make sense to add a third message for when the warehouse is T5 and has all of its emerald upgrades, if that's the concern.", "author": "gattsuru", "createdAt": "2020-12-24T20:41:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc0Mzg3MA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5Mzk0Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548893947", "bodyText": "Small nitpick if you are going to push something else before merge:\nThis value should be something like TICKS_SECOND * SECONDS_A_MINUTE * 5\nYou can fix the above too", "author": "Nightenom", "createdAt": "2020-12-25T17:11:26Z", "path": "src/api/java/com/minecolonies/api/util/constant/Constants.java", "diffHunk": "@@ -47,6 +47,7 @@\n     public static final int    UPDATE_FLAG                      = 0x03;\n     public static final int    TICKS_HOUR                       = TICKS_SECOND * SECONDS_A_MINUTE * SECONDS_A_MINUTE;\n     public static final int    TICKS_FOURTY_MIN                 = 48000;\n+    public static final int    TICKS_FIVE_MIN                   = 6000;", "originalCommit": "c8c6771db72288089b4974edcbddec563e01f28e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fafa077f66968a54826da73f2c425704644c585", "chunk": "diff --git a/src/api/java/com/minecolonies/api/util/constant/Constants.java b/src/api/java/com/minecolonies/api/util/constant/Constants.java\nindex 269c31188d..8a95c8e789 100755\n--- a/src/api/java/com/minecolonies/api/util/constant/Constants.java\n+++ b/src/api/java/com/minecolonies/api/util/constant/Constants.java\n\n@@ -45,9 +45,9 @@ public final class Constants\n     public static final double WHOLE_CIRCLE                     = 360.0;\n     public static final double HALF_A_CIRCLE                    = 180;\n     public static final int    UPDATE_FLAG                      = 0x03;\n-    public static final int    TICKS_HOUR                       = TICKS_SECOND * SECONDS_A_MINUTE * SECONDS_A_MINUTE;\n-    public static final int    TICKS_FOURTY_MIN                 = 48000;\n-    public static final int    TICKS_FIVE_MIN                   = 6000;\n+    public static final int    TICKS_HOUR                       = TICKS_SECOND * SECONDS_A_MINUTE * 60;\n+    public static final int    TICKS_FOURTY_MIN                 = TICKS_SECOND * SECONDS_A_MINUTE * 40;\n+    public static final int    TICKS_FIVE_MIN                   = TICKS_SECOND * SECONDS_A_MINUTE * 5;\n     public static final int    MAX_PARAMS_IRECIPESTORAGE        = 9;\n     public static final int    MIN_PARAMS_IRECIPESTORAGE        = 3;\n     public static final int    PARAMS_ITEMSTORAGE               = 2;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDY4NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548894685", "bodyText": "This method and the command build seems to be dupe code to me, might be worth to merge \"raid now\" and \"raid tonight\" into one command with a boolean flag.\nAt least try to make common logic abstract.", "author": "Nightenom", "createdAt": "2020-12-25T17:19:19Z", "path": "src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java", "diffHunk": "@@ -36,6 +41,32 @@ public int onExecute(final CommandContext<CommandSource> context)\n         return 0;\n     }\n \n+    /**", "originalCommit": "c8c6771db72288089b4974edcbddec563e01f28e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5fafa077f66968a54826da73f2c425704644c585", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java b/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java\ndeleted file mode 100755\nindex ee73a0ec73..0000000000\n--- a/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java\n+++ /dev/null\n\n@@ -1,96 +0,0 @@\n-package com.minecolonies.coremod.commands.colonycommands;\n-\n-import com.ldtteam.structurize.util.LanguageHandler;\n-import com.minecolonies.api.colony.IColony;\n-import com.minecolonies.api.colony.IColonyManager;\n-import com.minecolonies.api.util.Log;\n-import com.minecolonies.coremod.commands.commandTypes.IMCCommand;\n-import com.minecolonies.coremod.commands.commandTypes.IMCOPCommand;\n-import com.mojang.brigadier.arguments.BoolArgumentType;\n-import com.mojang.brigadier.arguments.IntegerArgumentType;\n-import com.mojang.brigadier.arguments.StringArgumentType;\n-import com.mojang.brigadier.builder.LiteralArgumentBuilder;\n-import com.mojang.brigadier.context.CommandContext;\n-import net.minecraft.command.CommandSource;\n-import net.minecraft.command.ISuggestionProvider;\n-\n-import static com.minecolonies.coremod.commands.CommandArgumentNames.COLONYID_ARG;\n-import static com.minecolonies.coremod.commands.CommandArgumentNames.RAID_TYPE_ARG;\n-\n-public class CommandRaidNow implements IMCOPCommand\n-{\n-    /**\n-     * What happens when the command is executed after preConditions are successful.\n-     *\n-     * @param context the context of the command execution\n-     */\n-    @Override\n-    public int onExecute(final CommandContext<CommandSource> context)\n-    {\n-        // Colony\n-        final int colonyID = IntegerArgumentType.getInteger(context, COLONYID_ARG);\n-        final IColony colony = IColonyManager.getInstance().getColonyByDimension(colonyID, context.getSource().getWorld().getDimensionKey());\n-        if (colony == null)\n-        {\n-            context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.colonyidnotfound\", colonyID), true);\n-            return 0;\n-        }\n-\n-        colony.getRaiderManager().raiderEvent();\n-        context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.raidnow.success\", colony.getName()), true);\n-        return 0;\n-    }\n-\n-    /**\n-     * What happens when the command is executed with the optional raidtype argument.\n-     * @param context the context of the command execution.\n-     * @return\n-     */\n-    public int runSpecificRaid(final CommandContext<CommandSource> context)\n-    {\n-        if(!checkPreCondition(context))\n-        {\n-            return 0;\n-        }\n-\n-        // Colony\n-        final int colonyID = IntegerArgumentType.getInteger(context, COLONYID_ARG);\n-        final IColony colony = IColonyManager.getInstance().getColonyByDimension(colonyID, context.getSource().getWorld().getDimensionKey());\n-        if (colony == null)\n-        {\n-            context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.colonyidnotfound\", colonyID), true);\n-            return 0;\n-        }\n-\n-        colony.getRaiderManager().raiderEvent(StringArgumentType.getString(context, RAID_TYPE_ARG));\n-        context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.raidnow.success\", colony.getName()), true);\n-        return 0;\n-    }\n-\n-    /**\n-     * Name string of the command.\n-     */\n-    @Override\n-    public String getName()\n-    {\n-        return \"raid-now\";\n-    }\n-\n-    @Override\n-    public LiteralArgumentBuilder<CommandSource> build()\n-    {\n-        String[] s = new String[5];\n-        s[0] = \"pirate\";\n-        s[1] = \"egyptian\";\n-        s[2] = \"amazon\";\n-        s[3] = \"norsemen\";\n-        s[4] = \"barbarian\";\n-\n-        return IMCCommand.newLiteral(getName())\n-                 .then(IMCCommand.newArgument(COLONYID_ARG, IntegerArgumentType.integer(1))\n-                         .then(IMCCommand.newArgument(RAID_TYPE_ARG, StringArgumentType.string())\n-                         .suggests((ctx, builder) -> ISuggestionProvider.suggest(s, builder))\n-                         .executes(this::runSpecificRaid))\n-                         .executes(this::checkPreConditionAndExecute));\n-    }\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDc5Nw==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548894797", "bodyText": "This should be probably handled from some kind of registry or at least a list of raid types", "author": "Nightenom", "createdAt": "2020-12-25T17:21:17Z", "path": "src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java", "diffHunk": "@@ -48,7 +79,18 @@ public String getName()\n     @Override\n     public LiteralArgumentBuilder<CommandSource> build()\n     {\n+        String[] s = new String[5];", "originalCommit": "c8c6771db72288089b4974edcbddec563e01f28e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwNjkzNw==", "url": "https://github.com/ldtteam/minecolonies/pull/6288#discussion_r548906937", "bodyText": "If a registry, any preferences on where to put it?  It's not exactly com.minecolonies.api.entities or com.minecolonies.api.colony.colonyEvents, but feels a little ostentatious making a separate package like com.minecolonies.api.colony.raidTypes to carry five strings.", "author": "gattsuru", "createdAt": "2020-12-25T19:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5NDc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5fafa077f66968a54826da73f2c425704644c585", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java b/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java\ndeleted file mode 100755\nindex ee73a0ec73..0000000000\n--- a/src/main/java/com/minecolonies/coremod/commands/colonycommands/CommandRaidNow.java\n+++ /dev/null\n\n@@ -1,96 +0,0 @@\n-package com.minecolonies.coremod.commands.colonycommands;\n-\n-import com.ldtteam.structurize.util.LanguageHandler;\n-import com.minecolonies.api.colony.IColony;\n-import com.minecolonies.api.colony.IColonyManager;\n-import com.minecolonies.api.util.Log;\n-import com.minecolonies.coremod.commands.commandTypes.IMCCommand;\n-import com.minecolonies.coremod.commands.commandTypes.IMCOPCommand;\n-import com.mojang.brigadier.arguments.BoolArgumentType;\n-import com.mojang.brigadier.arguments.IntegerArgumentType;\n-import com.mojang.brigadier.arguments.StringArgumentType;\n-import com.mojang.brigadier.builder.LiteralArgumentBuilder;\n-import com.mojang.brigadier.context.CommandContext;\n-import net.minecraft.command.CommandSource;\n-import net.minecraft.command.ISuggestionProvider;\n-\n-import static com.minecolonies.coremod.commands.CommandArgumentNames.COLONYID_ARG;\n-import static com.minecolonies.coremod.commands.CommandArgumentNames.RAID_TYPE_ARG;\n-\n-public class CommandRaidNow implements IMCOPCommand\n-{\n-    /**\n-     * What happens when the command is executed after preConditions are successful.\n-     *\n-     * @param context the context of the command execution\n-     */\n-    @Override\n-    public int onExecute(final CommandContext<CommandSource> context)\n-    {\n-        // Colony\n-        final int colonyID = IntegerArgumentType.getInteger(context, COLONYID_ARG);\n-        final IColony colony = IColonyManager.getInstance().getColonyByDimension(colonyID, context.getSource().getWorld().getDimensionKey());\n-        if (colony == null)\n-        {\n-            context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.colonyidnotfound\", colonyID), true);\n-            return 0;\n-        }\n-\n-        colony.getRaiderManager().raiderEvent();\n-        context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.raidnow.success\", colony.getName()), true);\n-        return 0;\n-    }\n-\n-    /**\n-     * What happens when the command is executed with the optional raidtype argument.\n-     * @param context the context of the command execution.\n-     * @return\n-     */\n-    public int runSpecificRaid(final CommandContext<CommandSource> context)\n-    {\n-        if(!checkPreCondition(context))\n-        {\n-            return 0;\n-        }\n-\n-        // Colony\n-        final int colonyID = IntegerArgumentType.getInteger(context, COLONYID_ARG);\n-        final IColony colony = IColonyManager.getInstance().getColonyByDimension(colonyID, context.getSource().getWorld().getDimensionKey());\n-        if (colony == null)\n-        {\n-            context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.colonyidnotfound\", colonyID), true);\n-            return 0;\n-        }\n-\n-        colony.getRaiderManager().raiderEvent(StringArgumentType.getString(context, RAID_TYPE_ARG));\n-        context.getSource().sendFeedback(LanguageHandler.buildChatComponent(\"com.minecolonies.command.raidnow.success\", colony.getName()), true);\n-        return 0;\n-    }\n-\n-    /**\n-     * Name string of the command.\n-     */\n-    @Override\n-    public String getName()\n-    {\n-        return \"raid-now\";\n-    }\n-\n-    @Override\n-    public LiteralArgumentBuilder<CommandSource> build()\n-    {\n-        String[] s = new String[5];\n-        s[0] = \"pirate\";\n-        s[1] = \"egyptian\";\n-        s[2] = \"amazon\";\n-        s[3] = \"norsemen\";\n-        s[4] = \"barbarian\";\n-\n-        return IMCCommand.newLiteral(getName())\n-                 .then(IMCCommand.newArgument(COLONYID_ARG, IntegerArgumentType.integer(1))\n-                         .then(IMCCommand.newArgument(RAID_TYPE_ARG, StringArgumentType.string())\n-                         .suggests((ctx, builder) -> ISuggestionProvider.suggest(s, builder))\n-                         .executes(this::runSpecificRaid))\n-                         .executes(this::checkPreConditionAndExecute));\n-    }\n-}\n"}}, {"oid": "5fafa077f66968a54826da73f2c425704644c585", "url": "https://github.com/ldtteam/minecolonies/commit/5fafa077f66968a54826da73f2c425704644c585", "message": "Adds a very simple registry of raid types.  It might eventually be worth expanding to manage raid entities and sounds, but for now, it's just names.\n\nUnifies raid-now and raid-tonight, and raid-All-now and raid-All-tonight.  These also use the RaidTypeRegistry to populate suggestions, and to apply their results in RaidManager.", "committedDate": "2020-12-26T01:31:37Z", "type": "commit"}, {"oid": "2d4d388fa9e434e061173c413afabadfe5808f76", "url": "https://github.com/ldtteam/minecolonies/commit/2d4d388fa9e434e061173c413afabadfe5808f76", "message": "Scraps RaidTypeRegistry and implementation, moves \"raid\" and \"raid-All\" commands to use ColonyEventTypeRegistry instead.  Cleans up some logic flow.", "committedDate": "2020-12-27T03:20:16Z", "type": "commit"}, {"oid": "b92e9c7158f279d1f952775d6b2216282befc2eb", "url": "https://github.com/ldtteam/minecolonies/commit/b92e9c7158f279d1f952775d6b2216282befc2eb", "message": "Merge branch 'version/1.16.3' into version/1.16.3-features-217", "committedDate": "2020-12-27T09:07:46Z", "type": "commit"}]}