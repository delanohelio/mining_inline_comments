{"pr_number": 5481, "pr_title": "Guard improvements", "pr_createdAt": "2020-07-31T09:42:25Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/5481", "timeline": [{"oid": "5cd65626075e6bcaea0900cb39c0153ba32359ee", "url": "https://github.com/ldtteam/minecolonies/commit/5cd65626075e6bcaea0900cb39c0153ba32359ee", "message": "Hotfix recruitment failing for equal amounts of items", "committedDate": "2020-07-20T22:38:36Z", "type": "commit"}, {"oid": "8699cd4e98431f722a2f7d5b7c88e3d8acc2bf98", "url": "https://github.com/ldtteam/minecolonies/commit/8699cd4e98431f722a2f7d5b7c88e3d8acc2bf98", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into betterGuards", "committedDate": "2020-07-23T08:03:22Z", "type": "commit"}, {"oid": "eee63871412e44dcc9e0a38e16390a2ae2eba2fc", "url": "https://github.com/ldtteam/minecolonies/commit/eee63871412e44dcc9e0a38e16390a2ae2eba2fc", "message": "Guard stuff", "committedDate": "2020-07-29T16:49:26Z", "type": "commit"}, {"oid": "f84fa59b8a2dc99580115f2da64e28c48ad9f7e5", "url": "https://github.com/ldtteam/minecolonies/commit/f84fa59b8a2dc99580115f2da64e28c48ad9f7e5", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into betterGuards", "committedDate": "2020-07-29T16:49:59Z", "type": "commit"}, {"oid": "1d298f24284c5ed9e8bcc11057889c58d1ebf7bc", "url": "https://github.com/ldtteam/minecolonies/commit/1d298f24284c5ed9e8bcc11057889c58d1ebf7bc", "message": "Fix guard armor handling", "committedDate": "2020-07-31T09:39:43Z", "type": "commit"}, {"oid": "fa7781ef509ec10e1a3d90e3e355759e51fbc401", "url": "https://github.com/ldtteam/minecolonies/commit/fa7781ef509ec10e1a3d90e3e355759e51fbc401", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into betterGuards", "committedDate": "2020-07-31T09:40:18Z", "type": "commit"}, {"oid": "7bc203cfee8c36578849dca48535faf2f03c5425", "url": "https://github.com/ldtteam/minecolonies/commit/7bc203cfee8c36578849dca48535faf2f03c5425", "message": "some fixes", "committedDate": "2020-07-31T10:20:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNjcwMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463536702", "bodyText": "why not call the function hasWorkerOpenRequests for this part?", "author": "Raycoms", "createdAt": "2020-07-31T10:36:49Z", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java", "diffHunk": "@@ -1148,6 +1162,26 @@ public boolean hasWorkerOpenRequestsFiltered(@NotNull final ICitizenData citizen\n         return getOpenRequests(citizen).stream().anyMatch(selectionPredicate);\n     }\n \n+    @Override\n+    public boolean hasOpenSyncRequest(@NotNull final ICitizenData citizen)\n+    {\n+        final Map<Integer, Collection<IToken<?>>> requestIds = getOpenRequestsByCitizen();\n+        if (!requestIds.containsKey(citizen.getId()))", "originalCommit": "7bc203cfee8c36578849dca48535faf2f03c5425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODY3Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463538673", "bodyText": "ye thats simpler", "author": "someaddons", "createdAt": "2020-07-31T10:41:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNjcwMg=="}], "type": "inlineReview", "revised_code": {"commit": "704717205c800571903d032ae945039726e235da", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java b/src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java\nindex bcd57d1b45..7f5e0d5856 100755\n--- a/src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java\n+++ b/src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java\n\n@@ -1165,8 +1165,7 @@ public abstract class AbstractBuilding extends AbstractBuildingContainer impleme\n     @Override\n     public boolean hasOpenSyncRequest(@NotNull final ICitizenData citizen)\n     {\n-        final Map<Integer, Collection<IToken<?>>> requestIds = getOpenRequestsByCitizen();\n-        if (!requestIds.containsKey(citizen.getId()))\n+        if (!hasWorkerOpenRequests(citizen))\n         {\n             return false;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463537521", "bodyText": "This here is important, we should re-request if the pickup failed.", "author": "Raycoms", "createdAt": "2020-07-31T10:38:56Z", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java", "diffHunk": "@@ -577,25 +548,32 @@ private IAIState lookForRequests()\n                     );\n                     return NEEDS_ITEM;\n                 }\n-                else", "originalCommit": "7bc203cfee8c36578849dca48535faf2f03c5425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MTI3MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463541270", "bodyText": "shouldnt the normal AI handle that? Like if the request is completed and gets removed but it did not get the item it wanted, it naturally would run into re-requesting", "author": "someaddons", "createdAt": "2020-07-31T10:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Mjg1Mw==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463542853", "bodyText": "Not necessarily very timely. I think it's a neat speed improvement to have it here without any backlash.", "author": "Raycoms", "createdAt": "2020-07-31T10:51:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NDEzMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463544132", "bodyText": "ok", "author": "someaddons", "createdAt": "2020-07-31T10:55:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "704717205c800571903d032ae945039726e235da", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java b/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java\nindex fc6c405814..dcfe63da47 100755\n--- a/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java\n\n@@ -548,6 +550,19 @@ public abstract class AbstractEntityAIBasic<J extends AbstractJob<?, J>, B exten\n                     );\n                     return NEEDS_ITEM;\n                 }\n+                else\n+                {\n+                    //Seems like somebody else picked up our stack.\n+                    //Lets try this again.\n+                    if (async)\n+                    {\n+                        worker.getCitizenData().createRequestAsync(firstDeliverableRequest.getRequest());\n+                    }\n+                    else\n+                    {\n+                        worker.getCitizenData().createRequest(firstDeliverableRequest.getRequest());\n+                    }\n+                }\n             }\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463538416", "bodyText": "Potentially this should be more generic. Make it a set or a list, etc. So that this can be extended if needed.", "author": "Raycoms", "createdAt": "2020-07-31T10:41:10Z", "path": "src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java", "diffHunk": "@@ -1436,6 +1435,7 @@ public void callForHelp(final Entity attacker, final int guardHelpRange)\n \n         long guardDistance = guardHelpRange;\n         AbstractEntityCitizen guard = null;\n+        AbstractEntityCitizen secondGuard = null;", "originalCommit": "7bc203cfee8c36578849dca48535faf2f03c5425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NDY4NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463544684", "bodyText": "hm I wanted to avoid having to sort a complete list and compare it all again", "author": "someaddons", "createdAt": "2020-07-31T10:56:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjI2MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463546260", "bodyText": "could make it a map citizen id to Entity for quick access", "author": "Raycoms", "createdAt": "2020-07-31T11:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NzYwMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463547601", "bodyText": "I'm sorting them by distance here, don't think a map would help with that :D", "author": "someaddons", "createdAt": "2020-07-31T11:04:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0OTAwOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463549009", "bodyText": "That should be relatively simple. Make it an ordered list by distance such that you can always just poll the last one out each round. That would probably make even the existing one easier.", "author": "Raycoms", "createdAt": "2020-07-31T11:07:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg=="}], "type": "inlineReview", "revised_code": {"commit": "c6702f029ed35f933a4e3f997d54612646a56049", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java b/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\nindex d00d2c6b3d..deb7e08c10 100755\n--- a/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\n\n@@ -1434,8 +1434,8 @@ public class EntityCitizen extends AbstractEntityCitizen\n         callForHelpCooldown = CALL_HELP_CD;\n \n         long guardDistance = guardHelpRange;\n-        AbstractEntityCitizen guard = null;\n-        AbstractEntityCitizen secondGuard = null;\n+\n+        List<AbstractEntityCitizen> possibleGuards = new ArrayList<>();\n \n         for (final ICitizenData entry : getCitizenColonyHandler().getColony().getCitizenManager().getCitizens())\n         {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODY4MA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463538680", "bodyText": "This means they can go stairs up and down though, right?", "author": "Raycoms", "createdAt": "2020-07-31T10:41:46Z", "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package com.minecolonies.coremod.entity.pathfinding;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.RayTraceContext;\n+import net.minecraft.util.math.RayTraceResult;\n+import net.minecraft.util.math.Vec3d;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Pathing job for moving into vision of the given entity\n+ */\n+public class PathJobCanSee extends AbstractPathJob\n+{\n+    /**\n+     * The entity to see\n+     */\n+    private final LivingEntity lookTarget;\n+\n+    /**\n+     * The entity to move\n+     */\n+    private final LivingEntity searchingEntity;\n+\n+    public PathJobCanSee(\n+      final LivingEntity searchingEntity,\n+      final LivingEntity lookTarget,\n+      final World world,\n+      @NotNull final BlockPos start, final int range)\n+    {\n+        super(world, start, start, range, searchingEntity);\n+\n+        this.searchingEntity = searchingEntity;\n+        this.lookTarget = lookTarget;\n+    }\n+\n+    @Override\n+    protected double computeHeuristic(final BlockPos pos)\n+    {\n+        return searchingEntity.getPosition().manhattanDistance(pos);\n+    }\n+\n+    @Override\n+    protected boolean isAtDestination(final Node n)\n+    {\n+        return canSeeTargetFromPos(n.pos);\n+    }\n+\n+    /**\n+     * Calculate the distance to the target.\n+     *\n+     * @param n Node to test.\n+     * @return double of the distance.\n+     */\n+    @Override\n+    protected double getNodeResultScore(@NotNull final Node n)\n+    {\n+        //  For Result Score lower is better\n+        return lookTarget.getPosition().manhattanDistance(n.pos);\n+    }\n+\n+    private boolean canSeeTargetFromPos(final BlockPos pos)\n+    {\n+        Vec3d vec3d = new Vec3d(pos.getX(), pos.getZ() + searchingEntity.getEyeHeight(), pos.getZ());\n+        Vec3d vec3d1 = new Vec3d(lookTarget.getPosX(), lookTarget.getPosYEye(), lookTarget.getPosZ());\n+        return this.world.rayTraceBlocks(new RayTraceContext(vec3d, vec3d1, RayTraceContext.BlockMode.COLLIDER, RayTraceContext.FluidMode.NONE, searchingEntity)).getType()\n+                 == RayTraceResult.Type.MISS;\n+    }\n+\n+    @Override\n+    protected boolean isPassable(@NotNull final BlockState block)\n+    {\n+        if (block.getBlock() == Blocks.LADDER)", "originalCommit": "7bc203cfee8c36578849dca48535faf2f03c5425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MjY3Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463542676", "bodyText": "ye stairs would work, you often got stairs as rooftop aswell so can't exclude those.", "author": "someaddons", "createdAt": "2020-07-31T10:51:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEzMw==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463543133", "bodyText": "Maybe we should add something like \"max 5y difference\" or so. So they don't climb walls down if it has stairs.", "author": "Raycoms", "createdAt": "2020-07-31T10:52:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODY4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NDA2NQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463544065", "bodyText": "ye gonna add that as destination condition", "author": "someaddons", "createdAt": "2020-07-31T10:54:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODY4MA=="}], "type": "inlineReview", "revised_code": {"commit": "704717205c800571903d032ae945039726e235da", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\nindex c280aeb9b0..f441fe7547 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\n\n@@ -46,6 +46,11 @@ public class PathJobCanSee extends AbstractPathJob\n     @Override\n     protected boolean isAtDestination(final Node n)\n     {\n+        if (Math.abs(start.getY() - n.pos.getY()) > 6)\n+        {\n+            return false;\n+        }\n+\n         return canSeeTargetFromPos(n.pos);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODkxMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463538912", "bodyText": "There is already a horizontal directions array in vanilla you can query afaik", "author": "Raycoms", "createdAt": "2020-07-31T10:42:20Z", "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobWalkRandomEdge.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package com.minecolonies.coremod.entity.pathfinding;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Walks to a random edge block nearby, a block next to air. Does not use ladders\n+ */\n+public class PathJobWalkRandomEdge extends AbstractPathJob\n+{\n+    private static final Direction[] directions = {Direction.NORTH, Direction.SOUTH, Direction.EAST, Direction.WEST};", "originalCommit": "7bc203cfee8c36578849dca48535faf2f03c5425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzQzNQ==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463543435", "bodyText": "hm only seeing a private one", "author": "someaddons", "createdAt": "2020-07-31T10:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODkxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NTMyMg==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463545322", "bodyText": "Direction.Plane.HORIZONTAL", "author": "Raycoms", "createdAt": "2020-07-31T10:58:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODkxMg=="}], "type": "inlineReview", "revised_code": {"commit": "704717205c800571903d032ae945039726e235da", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobWalkRandomEdge.java b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobWalkRandomEdge.java\nindex b2540883e7..508d698e22 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobWalkRandomEdge.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobWalkRandomEdge.java\n\n@@ -36,9 +36,14 @@ public class PathJobWalkRandomEdge extends AbstractPathJob\n     @Override\n     protected boolean isAtDestination(final Node n)\n     {\n+        if (Math.abs(start.getY() - n.pos.getY()) > 6)\n+        {\n+            return false;\n+        }\n+\n         if (entity.get().getRNG().nextInt(NODE_EDGE_CHANCE) == 0)\n         {\n-            for (final Direction direction : directions)\n+            for (final Direction direction : Direction.Plane.HORIZONTAL.)\n             {\n                 if (world.isAirBlock(n.pos.down().offset(direction)))\n                 {\n"}}, {"oid": "704717205c800571903d032ae945039726e235da", "url": "https://github.com/ldtteam/minecolonies/commit/704717205c800571903d032ae945039726e235da", "message": "adjust to review", "committedDate": "2020-07-31T11:05:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1NA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463556954", "bodyText": "I don't see a problem going up, I think the problem is only going down imo", "author": "Raycoms", "createdAt": "2020-07-31T11:29:21Z", "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.minecolonies.coremod.entity.pathfinding;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.RayTraceContext;\n+import net.minecraft.util.math.RayTraceResult;\n+import net.minecraft.util.math.Vec3d;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Pathing job for moving into vision of the given entity\n+ */\n+public class PathJobCanSee extends AbstractPathJob\n+{\n+    /**\n+     * The entity to see\n+     */\n+    private final LivingEntity lookTarget;\n+\n+    /**\n+     * The entity to move\n+     */\n+    private final LivingEntity searchingEntity;\n+\n+    public PathJobCanSee(\n+      final LivingEntity searchingEntity,\n+      final LivingEntity lookTarget,\n+      final World world,\n+      @NotNull final BlockPos start, final int range)\n+    {\n+        super(world, start, start, range, searchingEntity);\n+\n+        this.searchingEntity = searchingEntity;\n+        this.lookTarget = lookTarget;\n+    }\n+\n+    @Override\n+    protected double computeHeuristic(final BlockPos pos)\n+    {\n+        return searchingEntity.getPosition().manhattanDistance(pos);\n+    }\n+\n+    @Override\n+    protected boolean isAtDestination(final Node n)\n+    {\n+        if (Math.abs(start.getY() - n.pos.getY()) > 6)", "originalCommit": "704717205c800571903d032ae945039726e235da", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU2MjM1OA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463562358", "bodyText": "but some might want to station them not on the highest but inbetween somewhere", "author": "someaddons", "createdAt": "2020-07-31T11:43:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU5MDc3Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463590776", "bodyText": "Let's say I did that. I'd be fine for them to go a bit up to hit the target, but not to go much further down (compared to the guarding position)", "author": "Raycoms", "createdAt": "2020-07-31T12:49:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1NA=="}], "type": "inlineReview", "revised_code": {"commit": "41de047eb5ee6589a6174a42b02ebee6ded274c0", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\nindex f441fe7547..37b917ad64 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/pathfinding/PathJobCanSee.java\n\n@@ -46,7 +46,7 @@ public class PathJobCanSee extends AbstractPathJob\n     @Override\n     protected boolean isAtDestination(final Node n)\n     {\n-        if (Math.abs(start.getY() - n.pos.getY()) > 6)\n+        if (start.getY() - n.pos.getY() > 6)\n         {\n             return false;\n         }\n"}}, {"oid": "388145cb744ec920b5d6d23122d9ca6639718263", "url": "https://github.com/ldtteam/minecolonies/commit/388145cb744ec920b5d6d23122d9ca6639718263", "message": "Fix ranger not pickup up arrows, fix walking to building after eating/sickness etc unless there is an important other task", "committedDate": "2020-07-31T12:01:03Z", "type": "commit"}, {"oid": "0dcb617bb7ce67b2e554ef6acf050520d1afbd64", "url": "https://github.com/ldtteam/minecolonies/commit/0dcb617bb7ce67b2e554ef6acf050520d1afbd64", "message": "fix typo", "committedDate": "2020-07-31T12:12:20Z", "type": "commit"}, {"oid": "c6702f029ed35f933a4e3f997d54612646a56049", "url": "https://github.com/ldtteam/minecolonies/commit/c6702f029ed35f933a4e3f997d54612646a56049", "message": "fix research config, fix 2. closest guard", "committedDate": "2020-07-31T12:36:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU4NzIzOA==", "url": "https://github.com/ldtteam/minecolonies/pull/5481#discussion_r463587238", "bodyText": "int i = 0; ;\nwhile (i < CALL_GUARDS_CONSTANT && i < possibleGuards.size)\ncallToHelpAti?", "author": "Raycoms", "createdAt": "2020-07-31T12:42:00Z", "path": "src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java", "diffHunk": "@@ -1447,15 +1447,21 @@ public void callForHelp(final Entity attacker, final int guardHelpRange)\n                 if (entry.getJob() instanceof AbstractJobGuard && entry.getId() != citizenData.getId() && tdist < guardDistance && entry.getJob().getWorkerAI() != null\n                       && ((AbstractEntityAIGuard<?, ?>) entry.getJob().getWorkerAI()).canHelp())\n                 {\n-                    guardDistance = tdist;\n-                    guard = entry.getEntity().get();\n+                    possibleGuards.add(entry.getEntity().get());\n                 }\n             }\n         }\n \n-        if (guard != null)\n+        Collections.sort(possibleGuards, Comparator.comparingInt(guard -> (int) getPosition().distanceSq(guard.getPosition())));", "originalCommit": "c6702f029ed35f933a4e3f997d54612646a56049", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1863bf1799af9d649398adab8dc222dcbdb36960", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java b/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\nindex deb7e08c10..78d1a3a3ea 100755\n--- a/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/citizen/EntityCitizen.java\n\n@@ -1433,18 +1434,15 @@ public class EntityCitizen extends AbstractEntityCitizen\n \n         callForHelpCooldown = CALL_HELP_CD;\n \n-        long guardDistance = guardHelpRange;\n-\n         List<AbstractEntityCitizen> possibleGuards = new ArrayList<>();\n \n         for (final ICitizenData entry : getCitizenColonyHandler().getColony().getCitizenManager().getCitizens())\n         {\n             if (entry.getEntity().isPresent())\n             {\n-                final long tdist = BlockPosUtil.getDistanceSquared(entry.getEntity().get().getPosition(), getPosition());\n-\n                 // Checking for guard nearby\n-                if (entry.getJob() instanceof AbstractJobGuard && entry.getId() != citizenData.getId() && tdist < guardDistance && entry.getJob().getWorkerAI() != null\n+                if (entry.getJob() instanceof AbstractJobGuard && entry.getId() != citizenData.getId()\n+                      && BlockPosUtil.getDistanceSquared(entry.getEntity().get().getPosition(), getPosition()) < guardHelpRange && entry.getJob().getWorkerAI() != null\n                       && ((AbstractEntityAIGuard<?, ?>) entry.getJob().getWorkerAI()).canHelp())\n                 {\n                     possibleGuards.add(entry.getEntity().get());\n"}}, {"oid": "0850a752bee0b0eb32b94c4b415d3cdddbc0c2e6", "url": "https://github.com/ldtteam/minecolonies/commit/0850a752bee0b0eb32b94c4b415d3cdddbc0c2e6", "message": "Fix chunk loaded check issue", "committedDate": "2020-07-31T12:53:35Z", "type": "commit"}, {"oid": "1863bf1799af9d649398adab8dc222dcbdb36960", "url": "https://github.com/ldtteam/minecolonies/commit/1863bf1799af9d649398adab8dc222dcbdb36960", "message": "Fix chunk loaded check issue", "committedDate": "2020-07-31T13:15:14Z", "type": "commit"}, {"oid": "f1647dc2ebcd44065827744bb8561aa6cda35609", "url": "https://github.com/ldtteam/minecolonies/commit/f1647dc2ebcd44065827744bb8561aa6cda35609", "message": "fix citizens ignoring collisions forever", "committedDate": "2020-07-31T13:21:15Z", "type": "commit"}, {"oid": "41de047eb5ee6589a6174a42b02ebee6ded274c0", "url": "https://github.com/ldtteam/minecolonies/commit/41de047eb5ee6589a6174a42b02ebee6ded274c0", "message": "allow up", "committedDate": "2020-07-31T13:25:45Z", "type": "commit"}, {"oid": "e4e9dcd40c3fafe64837729654c075f6245f12b3", "url": "https://github.com/ldtteam/minecolonies/commit/e4e9dcd40c3fafe64837729654c075f6245f12b3", "message": "fix regen", "committedDate": "2020-07-31T13:39:16Z", "type": "commit"}, {"oid": "b411783c222dd29052a942304fd12adb8781165b", "url": "https://github.com/ldtteam/minecolonies/commit/b411783c222dd29052a942304fd12adb8781165b", "message": "allow ladders", "committedDate": "2020-07-31T13:41:11Z", "type": "commit"}, {"oid": "609d4ec3afedad614addccf930513a8ff12d5782", "url": "https://github.com/ldtteam/minecolonies/commit/609d4ec3afedad614addccf930513a8ff12d5782", "message": "max 3", "committedDate": "2020-07-31T13:51:57Z", "type": "commit"}, {"oid": "8a9c693492a6d2ed7bf0410ea00da565b1c6e061", "url": "https://github.com/ldtteam/minecolonies/commit/8a9c693492a6d2ed7bf0410ea00da565b1c6e061", "message": "Fix knight skills", "committedDate": "2020-07-31T14:37:46Z", "type": "commit"}, {"oid": "4388fd4fe269469366d83893a62edbbacab3fad9", "url": "https://github.com/ldtteam/minecolonies/commit/4388fd4fe269469366d83893a62edbbacab3fad9", "message": "use target position", "committedDate": "2020-07-31T14:41:25Z", "type": "commit"}, {"oid": "e9603602615b312463d24701d707fdbce707b5fe", "url": "https://github.com/ldtteam/minecolonies/commit/e9603602615b312463d24701d707fdbce707b5fe", "message": "Fix teleporting into wall, fix teleporting when not needed", "committedDate": "2020-07-31T16:23:25Z", "type": "commit"}, {"oid": "2629bee93fa42fdd94fd202efa2a99a7ea65e46c", "url": "https://github.com/ldtteam/minecolonies/commit/2629bee93fa42fdd94fd202efa2a99a7ea65e46c", "message": "save raid night counter, remove TH button", "committedDate": "2020-08-01T21:28:03Z", "type": "commit"}, {"oid": "f6a1e78187fef675cebd791503af911e3a83d112", "url": "https://github.com/ldtteam/minecolonies/commit/f6a1e78187fef675cebd791503af911e3a83d112", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into betterGuards\n\n# Conflicts:\n#\tsrc/main/java/com/minecolonies/coremod/network/messages/client/UpdateChunkRangeCapabilityMessage.java", "committedDate": "2020-08-01T21:29:09Z", "type": "commit"}, {"oid": "99be45dfcbdcd79c2f15d4c6643d60350789e5db", "url": "https://github.com/ldtteam/minecolonies/commit/99be45dfcbdcd79c2f15d4c6643d60350789e5db", "message": "fix button y", "committedDate": "2020-08-01T21:36:01Z", "type": "commit"}]}