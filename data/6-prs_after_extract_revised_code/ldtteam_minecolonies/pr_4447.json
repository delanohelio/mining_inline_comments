{"pr_number": 4447, "pr_title": "Feature/skill rework", "pr_createdAt": "2020-03-16T17:35:09Z", "pr_url": "https://github.com/ldtteam/minecolonies/pull/4447", "timeline": [{"oid": "759bd13b275c3e47002c0107ff3e0ef4026ccd86", "url": "https://github.com/ldtteam/minecolonies/commit/759bd13b275c3e47002c0107ff3e0ef4026ccd86", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature-fix/#4435", "committedDate": "2020-03-15T11:06:23Z", "type": "commit"}, {"oid": "890cb9e2d9ac56c9fe0ef17536981e91b2800bde", "url": "https://github.com/ldtteam/minecolonies/commit/890cb9e2d9ac56c9fe0ef17536981e91b2800bde", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/skill-rework", "committedDate": "2020-03-15T11:24:48Z", "type": "commit"}, {"oid": "f64d88b1fd49b0f4d500ea5309367dc6611b7679", "url": "https://github.com/ldtteam/minecolonies/commit/f64d88b1fd49b0f4d500ea5309367dc6611b7679", "message": "Rework citizen entity handling, should avoid fake citizens.", "committedDate": "2020-03-15T12:58:29Z", "type": "commit"}, {"oid": "d7a4a937a43f10d9ff57a4a48f8ca6cad5a6ecfb", "url": "https://github.com/ldtteam/minecolonies/commit/d7a4a937a43f10d9ff57a4a48f8ca6cad5a6ecfb", "message": "Merge remote-tracking branch 'remotes/origin/version/1.15' into fixFakes\n\n# Conflicts:\n#\tsrc/api/java/com/minecolonies/api/util/InventoryUtils.java", "committedDate": "2020-03-15T13:10:31Z", "type": "commit"}, {"oid": "2c6ddaeeaef32096e2634684dabe6ab9f1248e59", "url": "https://github.com/ldtteam/minecolonies/commit/2c6ddaeeaef32096e2634684dabe6ab9f1248e59", "message": "Inittial skill system setup", "committedDate": "2020-03-15T14:25:41Z", "type": "commit"}, {"oid": "6d4d53eff59e4def92ede77f60b3a1bd1e786ed2", "url": "https://github.com/ldtteam/minecolonies/commit/6d4d53eff59e4def92ede77f60b3a1bd1e786ed2", "message": "Merge remote-tracking branch 'origin/fixFakes' into feature/skill-rework", "committedDate": "2020-03-15T14:26:17Z", "type": "commit"}, {"oid": "8e0c19494ea54b12c639742215b45bf947eee2f2", "url": "https://github.com/ldtteam/minecolonies/commit/8e0c19494ea54b12c639742215b45bf947eee2f2", "message": "Further setup of new skill system", "committedDate": "2020-03-15T20:38:38Z", "type": "commit"}, {"oid": "f590a4ac833ea66dae8492c3fe1b3fdd36bd2169", "url": "https://github.com/ldtteam/minecolonies/commit/f590a4ac833ea66dae8492c3fe1b3fdd36bd2169", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/skill-rework", "committedDate": "2020-03-15T22:13:57Z", "type": "commit"}, {"oid": "d1a7eb6708dd46ccddf288d4e9cd2906bd40bf34", "url": "https://github.com/ldtteam/minecolonies/commit/d1a7eb6708dd46ccddf288d4e9cd2906bd40bf34", "message": "Further setup", "committedDate": "2020-03-15T22:14:05Z", "type": "commit"}, {"oid": "ed148bff0d67f5dd3bb6d48bcf7154997bb10820", "url": "https://github.com/ldtteam/minecolonies/commit/ed148bff0d67f5dd3bb6d48bcf7154997bb10820", "message": "Basically finish skill rework and assign nw skills", "committedDate": "2020-03-16T12:10:23Z", "type": "commit"}, {"oid": "0381f95f765a7e78d6acdb2c4ecb5bf95ec37274", "url": "https://github.com/ldtteam/minecolonies/commit/0381f95f765a7e78d6acdb2c4ecb5bf95ec37274", "message": "Wrap up new skill system", "committedDate": "2020-03-16T17:29:32Z", "type": "commit"}, {"oid": "8e77bdb67ffca8c4e869effcd834369aca2f6e2c", "url": "https://github.com/ldtteam/minecolonies/commit/8e77bdb67ffca8c4e869effcd834369aca2f6e2c", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/skill-rework", "committedDate": "2020-03-16T17:29:35Z", "type": "commit"}, {"oid": "5555daa3fc808fe433e37531af23d4a6baad12df", "url": "https://github.com/ldtteam/minecolonies/commit/5555daa3fc808fe433e37531af23d4a6baad12df", "message": "Fix doc", "committedDate": "2020-03-16T18:58:24Z", "type": "commit"}, {"oid": "927eab9926d091079ce7e656414d209bd4b2421a", "url": "https://github.com/ldtteam/minecolonies/commit/927eab9926d091079ce7e656414d209bd4b2421a", "message": "Fix #4445", "committedDate": "2020-03-16T19:31:18Z", "type": "commit"}, {"oid": "e2dd9bb6a4837d3ef9ec12297192a7ed0af80944", "url": "https://github.com/ldtteam/minecolonies/commit/e2dd9bb6a4837d3ef9ec12297192a7ed0af80944", "message": "fix enchanter", "committedDate": "2020-03-16T21:24:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNzI0Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393337246", "bodyText": "hm why are we rerouting requests through here now? and some might cause an NPE with no work building", "author": "someaddons", "createdAt": "2020-03-16T22:10:09Z", "path": "src/main/java/com/minecolonies/coremod/colony/CitizenData.java", "diffHunk": "@@ -1635,4 +974,43 @@ public void triggerInteraction(@NotNull final IInteractionResponseHandler handle\n             markDirty();\n         }\n     }\n+\n+    @Override\n+    public int getJobModifier()\n+    {\n+        return getCitizenSkillHandler().getJobModifier(this);\n+    }\n+\n+    // --------------------------- Request Handling --------------------------- //", "originalCommit": "927eab9926d091079ce7e656414d209bd4b2421a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODAwMw==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393338003", "bodyText": "Oh, because doing citizenData.getHandler.get seemed a lot of chaining and cluttering elsewhere.", "author": "Raycoms", "createdAt": "2020-03-16T22:12:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNzI0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzODI1OQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393338259", "bodyText": "final IBuilding workBuilding = data.getWorkBuilding();\n        if (workBuilding instanceof AbstractBuildingWorker)\n        {\n\nIt shouldn't", "author": "Raycoms", "createdAt": "2020-03-16T22:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzMzNzI0Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM0ODcyMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393348721", "bodyText": "I think this is off now, would give a child nearly capped \"experience\" stats, maybe set a max amount they can inherit, like 5?", "author": "someaddons", "createdAt": "2020-03-16T22:38:23Z", "path": "src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java", "diffHunk": "@@ -0,0 +1,252 @@\n+package com.minecolonies.coremod.entity.citizen.citizenhandlers;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n+import com.minecolonies.api.entity.citizen.Skill;\n+import com.minecolonies.api.entity.citizen.citizenhandlers.ICitizenSkillHandler;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker;\n+import com.minecolonies.coremod.network.messages.VanillaParticleMessage;\n+import com.minecolonies.coremod.util.ExperienceUtils;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.particles.ParticleTypes;\n+import net.minecraft.util.Tuple;\n+import net.minecraftforge.common.util.Constants;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+\n+import static com.minecolonies.api.util.constant.CitizenConstants.MAX_CITIZEN_LEVEL;\n+import static com.minecolonies.api.util.constant.NbtTagConstants.*;\n+import static com.minecolonies.api.util.constant.NbtTagConstants.TAG_LEVEL_MAP;\n+\n+/**\n+ * The citizen skill handler of the citizen.\n+ */\n+public class CitizenSkillHandler implements ICitizenSkillHandler\n+{\n+    /**\n+     * Chance to level up intelligence.\n+     */\n+    private static final int CHANCE_TO_LEVEL = 50;\n+\n+    /**\n+     * Defines how much child stats very from parents average(+ or -).\n+     */\n+    private static final int CHILD_STATS_VARIANCE = 3;\n+\n+    /**\n+     * Skill map.\n+     */\n+    public Map<Skill, Tuple<Integer, Double>> skillMap        = new HashMap<>();\n+\n+    @Override\n+    public void init(final int levelCap)\n+    {\n+        if (levelCap <= 1)\n+        {\n+            for (final Skill skill : Skill.values())\n+            {\n+                skillMap.put(skill, new Tuple<>(1, 0.0D));\n+            }\n+        }\n+        else\n+        {\n+            final Random random = new Random();\n+            for (final Skill skill : Skill.values())\n+            {\n+                skillMap.put(skill, new Tuple<>(random.nextInt(levelCap - 1) + 1, 0.0D));\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void init(@NotNull final ICitizenData mom, @NotNull final ICitizenData dad, final Random rand)\n+    {\n+        for (final Skill skill : Skill.values())\n+        {\n+            skillMap.put(skill, new Tuple<>((mom.getCitizenSkillHandler().getLevel(skill) + dad.getCitizenSkillHandler().getLevel(skill)) / 2 + rand.nextInt(CHILD_STATS_VARIANCE) - rand.nextInt(CHILD_STATS_VARIANCE), 0.0D));", "originalCommit": "e2dd9bb6a4837d3ef9ec12297192a7ed0af80944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM0OTEyMQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393349121", "bodyText": "Good that you mentioned it, yes.", "author": "Raycoms", "createdAt": "2020-03-16T22:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM0ODcyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e88eb1a3a2313ebe61a7398a12f41191d23d4a48", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java b/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\nindex 7fce621e1..d6dba3a29 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\n\n@@ -40,6 +40,11 @@ public class CitizenSkillHandler implements ICitizenSkillHandler\n      */\n     private static final int CHILD_STATS_VARIANCE = 3;\n \n+    /**\n+     * Max inheritance of stats.\n+     */\n+    private static final int MAX_INHERITANCE = 10;\n+\n     /**\n      * Skill map.\n      */\n"}}, {"oid": "e88eb1a3a2313ebe61a7398a12f41191d23d4a48", "url": "https://github.com/ldtteam/minecolonies/commit/e88eb1a3a2313ebe61a7398a12f41191d23d4a48", "message": "Setup a max inheritance", "committedDate": "2020-03-16T22:45:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MTQ0OA==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393351448", "bodyText": "hm can we make this a for loop? kinda don't like that it can get stuck depending on what ExperienceUtils.getXPNeededForNextLevel returns, incase we somehow got to the max level", "author": "someaddons", "createdAt": "2020-03-16T22:46:41Z", "path": "src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java", "diffHunk": "@@ -0,0 +1,252 @@\n+package com.minecolonies.coremod.entity.citizen.citizenhandlers;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n+import com.minecolonies.api.entity.citizen.Skill;\n+import com.minecolonies.api.entity.citizen.citizenhandlers.ICitizenSkillHandler;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker;\n+import com.minecolonies.coremod.network.messages.VanillaParticleMessage;\n+import com.minecolonies.coremod.util.ExperienceUtils;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.particles.ParticleTypes;\n+import net.minecraft.util.Tuple;\n+import net.minecraftforge.common.util.Constants;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Random;\n+\n+import static com.minecolonies.api.util.constant.CitizenConstants.MAX_CITIZEN_LEVEL;\n+import static com.minecolonies.api.util.constant.NbtTagConstants.*;\n+import static com.minecolonies.api.util.constant.NbtTagConstants.TAG_LEVEL_MAP;\n+\n+/**\n+ * The citizen skill handler of the citizen.\n+ */\n+public class CitizenSkillHandler implements ICitizenSkillHandler\n+{\n+    /**\n+     * Chance to level up intelligence.\n+     */\n+    private static final int CHANCE_TO_LEVEL = 50;\n+\n+    /**\n+     * Defines how much child stats very from parents average(+ or -).\n+     */\n+    private static final int CHILD_STATS_VARIANCE = 3;\n+\n+    /**\n+     * Skill map.\n+     */\n+    public Map<Skill, Tuple<Integer, Double>> skillMap        = new HashMap<>();\n+\n+    @Override\n+    public void init(final int levelCap)\n+    {\n+        if (levelCap <= 1)\n+        {\n+            for (final Skill skill : Skill.values())\n+            {\n+                skillMap.put(skill, new Tuple<>(1, 0.0D));\n+            }\n+        }\n+        else\n+        {\n+            final Random random = new Random();\n+            for (final Skill skill : Skill.values())\n+            {\n+                skillMap.put(skill, new Tuple<>(random.nextInt(levelCap - 1) + 1, 0.0D));\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void init(@NotNull final ICitizenData mom, @NotNull final ICitizenData dad, final Random rand)\n+    {\n+        for (final Skill skill : Skill.values())\n+        {\n+            skillMap.put(skill, new Tuple<>((mom.getCitizenSkillHandler().getLevel(skill) + dad.getCitizenSkillHandler().getLevel(skill)) / 2 + rand.nextInt(CHILD_STATS_VARIANCE) - rand.nextInt(CHILD_STATS_VARIANCE), 0.0D));\n+        }\n+    }\n+\n+    @NotNull\n+    @Override\n+    public CompoundNBT write()\n+    {\n+        final CompoundNBT compoundNBT = new CompoundNBT();\n+\n+        @NotNull final ListNBT levelTagList = new ListNBT();\n+        for (@NotNull final Map.Entry<Skill, Tuple<Integer, Double>> entry : skillMap.entrySet())\n+        {\n+            @NotNull final CompoundNBT levelCompound = new CompoundNBT();\n+            levelCompound.putInt(TAG_SKILL, entry.getKey().ordinal());\n+            levelCompound.putInt(TAG_LEVEL, entry.getValue().getA());\n+            levelCompound.putDouble(TAG_EXPERIENCE, entry.getValue().getB());\n+            levelTagList.add(levelCompound);\n+        }\n+        compoundNBT.put(TAG_LEVEL_MAP, levelTagList);\n+\n+        return compoundNBT;\n+    }\n+\n+    @Override\n+    public void read(@NotNull final CompoundNBT compoundNBT)\n+    {\n+        final ListNBT levelTagList = compoundNBT.getList(TAG_LEVEL_MAP, Constants.NBT.TAG_COMPOUND);\n+        for (int i = 0; i < levelTagList.size(); ++i)\n+        {\n+            final CompoundNBT levelExperienceAtJob = levelTagList.getCompound(i);\n+            skillMap.put(Skill.values()[levelExperienceAtJob.getInt(TAG_SKILL)],\n+              new Tuple<>(Math.min(levelExperienceAtJob.getInt(TAG_LEVEL), MAX_CITIZEN_LEVEL), levelExperienceAtJob.getDouble(TAG_EXPERIENCE)));\n+        }\n+    }\n+\n+    @Override\n+    public void tryLevelUpIntelligence(@NotNull final Random random, final int customChance, @NotNull final ICitizenData citizen)\n+    {\n+        if ((customChance > 0 && random.nextInt(customChance) > 0) || (customChance < 1 && random.nextInt(CHANCE_TO_LEVEL) > 0))\n+        {\n+            return;\n+        }\n+\n+        final int levelCap = (int) citizen.getCitizenHappinessHandler().getHappiness();\n+        if (skillMap.get(Skill.Intelligence).getB() < levelCap * 9)\n+        {\n+            addXpToSkill(Skill.Intelligence, 10, citizen);\n+        }\n+    }\n+\n+    @Override\n+    public int getLevel(@NotNull final Skill skill)\n+    {\n+        return skillMap.get(skill).getA();\n+    }\n+\n+    @Override\n+    public void incrementLevel(@NotNull final Skill skill, final int level)\n+    {\n+        final Tuple<Integer, Double> current = skillMap.get(skill);\n+        skillMap.put(skill, new Tuple<>(Math.min(MAX_CITIZEN_LEVEL, Math.max(current.getA() + level, 1)), current.getB()));\n+    }\n+\n+    @Override\n+    public void addXpToSkill(final Skill skill, final double xp, final ICitizenData data)\n+    {\n+        final Tuple<Integer, Double> tuple = skillMap.get(skill);\n+        int level = tuple.getA();\n+        final double currentXp = tuple.getB();\n+\n+        final IBuilding home = data.getHomeBuilding();\n+\n+        final double citizenHutLevel = home == null ? 0 : home.getBuildingLevel();\n+        final double citizenHutMaxLevel = home == null ? 5 : home.getMaxBuildingLevel();\n+\n+        if ((citizenHutLevel < citizenHutMaxLevel && Math.pow(2.0, citizenHutLevel + 1.0) <= level) || level >= MAX_CITIZEN_LEVEL)\n+        {\n+            return;\n+        }\n+\n+        double xpToLevelUp = Math.min(Double.MAX_VALUE, currentXp + xp);\n+        while (xpToLevelUp > 0)", "originalCommit": "e2dd9bb6a4837d3ef9ec12297192a7ed0af80944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1Mjc5MQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393352791", "bodyText": "getXPNeededForNextLevel is infinite, even over the max. So that shouldn't be a problem.", "author": "Raycoms", "createdAt": "2020-03-16T22:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MTQ0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MzIyOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393353229", "bodyText": "kk", "author": "someaddons", "createdAt": "2020-03-16T22:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MTQ0OA=="}], "type": "inlineReview", "revised_code": {"commit": "bdfd52bb16147d0b780aa473fe072b614d78defc", "chunk": "diff --git a/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java b/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\nindex 7fce621e1..0128c915f 100644\n--- a/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\n+++ b/src/main/java/com/minecolonies/coremod/entity/citizen/citizenhandlers/CitizenSkillHandler.java\n\n@@ -3,6 +3,7 @@ package com.minecolonies.coremod.entity.citizen.citizenhandlers;\n import com.google.common.collect.ImmutableMap;\n import com.minecolonies.api.colony.ICitizenData;\n import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.views.IBuildingView;\n import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n import com.minecolonies.api.entity.citizen.Skill;\n import com.minecolonies.api.entity.citizen.citizenhandlers.ICitizenSkillHandler;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjEyOQ==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393352129", "bodyText": "this isnt needed, same as above", "author": "someaddons", "createdAt": "2020-03-16T22:48:49Z", "path": "src/main/java/com/minecolonies/coremod/placementhandlers/MinecoloniesPlacementHandlers.java", "diffHunk": "@@ -155,9 +155,11 @@ public Object handle(\n                 {\n                     handleTileEntityPlacement(tileEntityData, world, pos);\n                 }\n+\n+                entity = world.getTileEntity(pos);", "originalCommit": "e2dd9bb6a4837d3ef9ec12297192a7ed0af80944", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjQzMw==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393352433", "bodyText": "Unless a new tileEntity was placed, right?", "author": "Raycoms", "createdAt": "2020-03-16T22:49:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1Mjk5Ng==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393352996", "bodyText": "oh you're right, better leave it then", "author": "someaddons", "createdAt": "2020-03-16T22:51:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjEyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1NDAzNA==", "url": "https://github.com/ldtteam/minecolonies/pull/4447#discussion_r393354034", "bodyText": "It grows quadratic as well, so it should be fine", "author": "Raycoms", "createdAt": "2020-03-16T22:55:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM1MjEyOQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "bdfd52bb16147d0b780aa473fe072b614d78defc", "url": "https://github.com/ldtteam/minecolonies/commit/bdfd52bb16147d0b780aa473fe072b614d78defc", "message": "Fix modifier", "committedDate": "2020-03-17T15:11:52Z", "type": "commit"}, {"oid": "f5a8d6a0a8da6be66dc710f5a89af77cef67d38c", "url": "https://github.com/ldtteam/minecolonies/commit/f5a8d6a0a8da6be66dc710f5a89af77cef67d38c", "message": "Fix up GUI", "committedDate": "2020-03-17T18:19:52Z", "type": "commit"}, {"oid": "6289a1e0ba2eab58ee37d6d20a7a9884cc799140", "url": "https://github.com/ldtteam/minecolonies/commit/6289a1e0ba2eab58ee37d6d20a7a9884cc799140", "message": "remove log, this is no error", "committedDate": "2020-03-18T09:31:38Z", "type": "commit"}, {"oid": "a02b611b157a792bb681ea5af91f17d63ac1c32e", "url": "https://github.com/ldtteam/minecolonies/commit/a02b611b157a792bb681ea5af91f17d63ac1c32e", "message": "avoid student crash", "committedDate": "2020-03-18T16:41:07Z", "type": "commit"}, {"oid": "adc7083dd0e691cd7b6098688ef47cefc94a06fb", "url": "https://github.com/ldtteam/minecolonies/commit/adc7083dd0e691cd7b6098688ef47cefc94a06fb", "message": "avoid pathing through carpet", "committedDate": "2020-03-18T19:11:46Z", "type": "commit"}, {"oid": "a4ded30f5cbbac60bcfd581c84932ab3d6d0d912", "url": "https://github.com/ldtteam/minecolonies/commit/a4ded30f5cbbac60bcfd581c84932ab3d6d0d912", "message": "fix claim bug", "committedDate": "2020-03-19T09:57:37Z", "type": "commit"}, {"oid": "a7c39a16e294cfc325f8b9fb0abf0a519ea1ba20", "url": "https://github.com/ldtteam/minecolonies/commit/a7c39a16e294cfc325f8b9fb0abf0a519ea1ba20", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/skill-rework", "committedDate": "2020-03-19T14:28:53Z", "type": "commit"}, {"oid": "11f78b68bc6cd3daacf71f1cbc5e2159bb1db7b6", "url": "https://github.com/ldtteam/minecolonies/commit/11f78b68bc6cd3daacf71f1cbc5e2159bb1db7b6", "message": "fix", "committedDate": "2020-03-19T15:42:52Z", "type": "commit"}]}