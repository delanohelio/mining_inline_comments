{"pr_number": 1764, "pr_title": "LTI Context Role Prefix", "pr_createdAt": "2020-08-12T15:05:21Z", "pr_url": "https://github.com/opencast/opencast/pull/1764", "timeline": [{"oid": "03b4ddefdb9a69856724d39178256c65b1d15896", "url": "https://github.com/opencast/opencast/commit/03b4ddefdb9a69856724d39178256c65b1d15896", "message": "LTI Context Role Prefix\n\nThis patch allows defining a prefix for LTI context based roles based on\nOAuth consumer keys.\n\nThe LTI context (e.g. the course identifier) is used to generate context\nroles like \u201c12345_Learner\u201d.  If multiple LTI consumers are used, this\ncan clash, causing users from one consumer to get access to content from\nanother consumer. The prefix can be used to prevent this by generating\ncontext roles like \u201cPREFIX1_123_Learner\u201d and \u201cPREFIX2_123_Learner\u201d\ninstead.\n\nThe default is to use no prefix, making LTI in Opencast behave exactly\nthe way it used to.", "committedDate": "2020-08-25T14:14:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2MTgzMQ==", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r481061831", "bodyText": "The group is never added! Is anybody relying on having groups like ROLE_GROUP_Learner,\nROLE_GROUP_Instructor? I don't think this was advertised. And as far as I know, no role provider adds these roles.\nI suggest to remove the two above lines and create a new PR if this feature is needed.", "author": "mtneug", "createdAt": "2020-09-01T11:17:03Z", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -405,31 +425,27 @@ public Authentication createAuthentication(HttpServletRequest request, ConsumerA\n    * @param userAuthorities\n    *          Collection to append to.\n    */\n-  private void enrichRoleGrants(String roles, String context, Collection<GrantedAuthority> userAuthorities) {\n-    // Roles could be a list\n+  private void enrichRoleGrants(String roles, String context, final String rolePrefix,\n+      Collection<GrantedAuthority> userAuthorities) {\n     if (roles != null) {\n+      // Roles could be a list\n       String[] roleList = roles.split(\",\");\n \n       // Use a generic context and learner if none is given:\n       context = StringUtils.isBlank(context) ? DEFAULT_CONTEXT : context;\n \n-      for (String learner : roleList) {\n+      for (final String ltiRole : roleList) {\n         // Build the role\n-        String role;\n-        String group;\n-        if (learner.equals(customRoleName)) {\n-          for (String rolename : customRoles) {\n-            userAuthorities.add(new SimpleGrantedAuthority(rolename));\n+        if (ltiRole.equals(customRoleName)) {\n+          for (String roleName : customRoles) {\n+            userAuthorities.add(new SimpleGrantedAuthority(roleName));\n           }\n         }\n \n-        if (StringUtils.isBlank(learner)) {\n-          role = context + \"_\" + DEFAULT_LEARNER;\n-        } else {\n-          role = context + \"_\" + learner;\n-          group = \"ROLE_GROUP_\" + learner.toUpperCase();\n-          logger.debug(\"Adding group: {}\", group);\n-        }\n+        final String normalizedLtiRole = StringUtils.defaultIfBlank(ltiRole, DEFAULT_LEARNER);\n+        final String role = rolePrefix + context + \"_\" + normalizedLtiRole;\n+        final String group = \"ROLE_GROUP_\" + rolePrefix + normalizedLtiRole.toUpperCase();\n+        logger.debug(\"Adding group: {}\", group);", "originalCommit": "03b4ddefdb9a69856724d39178256c65b1d15896", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3OTM4Mg==", "url": "https://github.com/opencast/opencast/pull/1764#discussion_r483479382", "bodyText": "Interesting. You are right. I just modified the old code where the group role is created:\n\n  \n    \n      opencast/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n    \n    \n        Lines 428 to 432\n      in\n      18e4e5f\n    \n    \n    \n    \n\n        \n          \n           } else { \n        \n\n        \n          \n             role = context + \"_\" + learner; \n        \n\n        \n          \n             group = \"ROLE_GROUP_\" + learner.toUpperCase(); \n        \n\n        \n          \n             logger.debug(\"Adding group: {}\", group); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nBut even here it's never actually used. Will remove it.", "author": "lkiesow", "createdAt": "2020-09-04T08:47:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2MTgzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8f15bee2362a712da96f14349d1139d1cbcef3de", "chunk": "diff --git a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\nindex 2d5449d623..cbf0880935 100644\n--- a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n+++ b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n\n@@ -444,8 +444,6 @@ public class LtiLaunchAuthenticationHandler implements OAuthAuthenticationHandle\n \n         final String normalizedLtiRole = StringUtils.defaultIfBlank(ltiRole, DEFAULT_LEARNER);\n         final String role = rolePrefix + context + \"_\" + normalizedLtiRole;\n-        final String group = \"ROLE_GROUP_\" + rolePrefix + normalizedLtiRole.toUpperCase();\n-        logger.debug(\"Adding group: {}\", group);\n \n         // Make sure to not accept ROLE_\u2026\n         if (role.trim().toUpperCase().startsWith(\"ROLE_\")) {\n"}}, {"oid": "8f15bee2362a712da96f14349d1139d1cbcef3de", "url": "https://github.com/opencast/opencast/commit/8f15bee2362a712da96f14349d1139d1cbcef3de", "message": "LTI Context Role Prefix\n\nThis patch allows defining a prefix for LTI context based roles based on\nOAuth consumer keys.\n\nThe LTI context (e.g. the course identifier) is used to generate context\nroles like \u201c12345_Learner\u201d.  If multiple LTI consumers are used, this\ncan clash, causing users from one consumer to get access to content from\nanother consumer. The prefix can be used to prevent this by generating\ncontext roles like \u201cPREFIX1_123_Learner\u201d and \u201cPREFIX2_123_Learner\u201d\ninstead.\n\nThe default is to use no prefix, making LTI in Opencast behave exactly\nthe way it used to.", "committedDate": "2020-09-04T08:54:52Z", "type": "commit"}, {"oid": "8f15bee2362a712da96f14349d1139d1cbcef3de", "url": "https://github.com/opencast/opencast/commit/8f15bee2362a712da96f14349d1139d1cbcef3de", "message": "LTI Context Role Prefix\n\nThis patch allows defining a prefix for LTI context based roles based on\nOAuth consumer keys.\n\nThe LTI context (e.g. the course identifier) is used to generate context\nroles like \u201c12345_Learner\u201d.  If multiple LTI consumers are used, this\ncan clash, causing users from one consumer to get access to content from\nanother consumer. The prefix can be used to prevent this by generating\ncontext roles like \u201cPREFIX1_123_Learner\u201d and \u201cPREFIX2_123_Learner\u201d\ninstead.\n\nThe default is to use no prefix, making LTI in Opencast behave exactly\nthe way it used to.", "committedDate": "2020-09-04T08:54:52Z", "type": "forcePushed"}]}