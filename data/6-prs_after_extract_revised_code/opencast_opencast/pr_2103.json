{"pr_number": 2103, "pr_title": "Only persist users with specific LTI role", "pr_createdAt": "2020-11-26T09:39:09Z", "pr_url": "https://github.com/opencast/opencast/pull/2103", "timeline": [{"oid": "503a0df7c11fee93592dce01ae8deff740c95519", "url": "https://github.com/opencast/opencast/commit/503a0df7c11fee93592dce01ae8deff740c95519", "message": "Only persist users with specific LTI role", "committedDate": "2021-03-18T14:48:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI1MDcyMA==", "url": "https://github.com/opencast/opencast/pull/2103#discussion_r597250720", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /** Contains the LTI roles where a JpaUserReference shall be created. The default is 'instructor'. */\n          \n          \n            \n              /** LTI roles a user must have so a JpaUserReference is created. */", "author": "lkiesow", "createdAt": "2021-03-18T21:21:35Z", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -160,8 +162,8 @@\n   /** concurrent attemtps */\n   private Map<String, Boolean> activePersistenceTransactions = new ConcurrentHashMap<>(128);\n \n-  /** Determines whether a JpaUserReference should be created on lti login */\n-  private boolean createJpaUserReference = true;\n+  /** Contains the LTI roles where a JpaUserReference shall be created. The default is 'instructor'. */", "originalCommit": "503a0df7c11fee93592dce01ae8deff740c95519", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzk5NDA0MA==", "url": "https://github.com/opencast/opencast/pull/2103#discussion_r613994040", "bodyText": "The key \"createJpaUserReference\" is included again (default true).", "author": "marwyg", "createdAt": "2021-04-15T11:40:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI1MDcyMA=="}], "type": "inlineReview", "revised_code": {"commit": "0bf56a7ecbdbe182ee250469147c90f4343abfd4", "chunk": "diff --git a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\nindex 4f36046e4e..92a10f73a3 100644\n--- a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n+++ b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n\n@@ -162,7 +165,10 @@ public class LtiLaunchAuthenticationHandler implements OAuthAuthenticationHandle\n   /** concurrent attemtps */\n   private Map<String, Boolean> activePersistenceTransactions = new ConcurrentHashMap<>(128);\n \n-  /** Contains the LTI roles where a JpaUserReference shall be created. The default is 'instructor'. */\n+  /** Determines whether a JpaUserReference should be created on lti login */\n+  private boolean createJpaUserReference = true;\n+\n+  /** LTI roles a user must have, so a JpaUserReference is created */\n   private List<String> ltiRolesForUserCreation;\n \n   @Reference(name = \"UserDetailsService\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI1MzY0OQ==", "url": "https://github.com/opencast/opencast/pull/2103#discussion_r597253649", "bodyText": "Actually set the default you claim to set:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ltiRolesForUserCreation = extractLtiRolesForUserCreation(\n          \n          \n            \n                        (String) properties.get(LTI_ROLES_TO_CREATE_JPA_USER_REFERENCES_FROM));\n          \n          \n            \n                ltiRolesForUserCreation = extractLtiRolesForUserCreation(\n          \n          \n            \n                        Objects.toString(properties.get(LTI_ROLES_TO_CREATE_JPA_USER_REFERENCES_FROM), \"*\");", "author": "lkiesow", "createdAt": "2021-03-18T21:27:06Z", "path": "modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java", "diffHunk": "@@ -237,9 +239,8 @@ protected void activate(ComponentContext cc) {\n       usernameBlacklist.add(username);\n     }\n \n-    createJpaUserReference = BooleanUtils.toBooleanDefaultIfNull(\n-      BooleanUtils.toBooleanObject(StringUtils.trimToNull((String) properties.get(CREATE_JPA_USER_REFERENCE_KEY))),\n-      true);\n+    ltiRolesForUserCreation = extractLtiRolesForUserCreation(\n+            (String) properties.get(LTI_ROLES_TO_CREATE_JPA_USER_REFERENCES_FROM));", "originalCommit": "503a0df7c11fee93592dce01ae8deff740c95519", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzk5NDgwOA==", "url": "https://github.com/opencast/opencast/pull/2103#discussion_r613994808", "bodyText": "The default (*) is set programmatically now.", "author": "marwyg", "createdAt": "2021-04-15T11:41:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzI1MzY0OQ=="}], "type": "inlineReview", "revised_code": {"commit": "0bf56a7ecbdbe182ee250469147c90f4343abfd4", "chunk": "diff --git a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\nindex 4f36046e4e..92a10f73a3 100644\n--- a/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n+++ b/modules/security-lti/src/main/java/org/opencastproject/security/lti/LtiLaunchAuthenticationHandler.java\n\n@@ -239,8 +245,13 @@ public class LtiLaunchAuthenticationHandler implements OAuthAuthenticationHandle\n       usernameBlacklist.add(username);\n     }\n \n+    String createJpaUserRefStr = (String) properties.get(CREATE_JPA_USER_REFERENCE_KEY);\n+    createJpaUserReference = BooleanUtils.toBooleanDefaultIfNull(\n+            BooleanUtils.toBooleanObject(StringUtils.trimToNull(createJpaUserRefStr)),\n+            true);\n+\n     ltiRolesForUserCreation = extractLtiRolesForUserCreation(\n-            (String) properties.get(LTI_ROLES_TO_CREATE_JPA_USER_REFERENCES_FROM));\n+            Objects.toString(properties.get(LTI_ROLES_TO_CREATE_JPA_USER_REFERENCES_FROM), \"*\"));\n \n     customRoleName = StringUtils.trimToNull((String) properties.get(CUSTOM_ROLE_NAME));\n     if (customRoleName != null) {\n"}}, {"oid": "0bf56a7ecbdbe182ee250469147c90f4343abfd4", "url": "https://github.com/opencast/opencast/commit/0bf56a7ecbdbe182ee250469147c90f4343abfd4", "message": "Only persist users with specific LTI role", "committedDate": "2021-04-15T11:34:03Z", "type": "commit"}, {"oid": "0bf56a7ecbdbe182ee250469147c90f4343abfd4", "url": "https://github.com/opencast/opencast/commit/0bf56a7ecbdbe182ee250469147c90f4343abfd4", "message": "Only persist users with specific LTI role", "committedDate": "2021-04-15T11:34:03Z", "type": "forcePushed"}]}