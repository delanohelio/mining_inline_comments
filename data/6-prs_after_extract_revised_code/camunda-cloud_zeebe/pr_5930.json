{"pr_number": 5930, "pr_title": "feat(broker): a job worker is optional", "pr_createdAt": "2020-11-27T11:10:19Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5930", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MTI1Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r531581253", "bodyText": "Not sure this is useful, can you explain when someone would want this log message?", "author": "npepinpe", "createdAt": "2020-11-27T12:44:07Z", "path": "engine/src/main/java/io/zeebe/engine/processing/job/JobBatchActivateProcessor.java", "diffHunk": "@@ -130,6 +133,9 @@ private void collectJobsToActivate(\n         (key, jobRecord) -> {\n           int remainingAmount = amount.get();\n           final long deadline = record.getTimestamp() + value.getTimeout();\n+          if (value.getWorkerBuffer().capacity() == 0) {\n+            LOGGER.trace(String.format(\"A job worker for a record: %s is anonymous.\", value));", "originalCommit": "401685fc35abc71fb262914c974960848f51599a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2MTcyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r532361729", "bodyText": "I'm thinking about this part from the issue(#5819):\n\nwe should also accept that it is absent on the broker side and simply log the client as anonymous.\n\nSo, did I add this logging in the wrong place? :)", "author": "aivinog1", "createdAt": "2020-11-30T05:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MTI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0NTEwNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r557545104", "bodyText": "Ah, sorry - I know we used to log the worker during activation. I meant here wherever we are logging the name, we should just log anonymous if there is no name. If we had no logging anywhere related to this then that's fine, just ignore it \ud83d\ude42\nSo here we could remove this entirely", "author": "npepinpe", "createdAt": "2021-01-14T16:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MTI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODMwOTI1OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r558309259", "bodyText": "Done", "author": "aivinog1", "createdAt": "2021-01-15T13:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MTI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "b5f6e84d1fc24abd060887cc4c720425f85353e7", "chunk": "diff --git a/engine/src/main/java/io/zeebe/engine/processing/job/JobBatchActivateProcessor.java b/engine/src/main/java/io/zeebe/engine/processing/job/JobBatchActivateProcessor.java\nindex b3d9e7dce4..395531e1fd 100644\n--- a/engine/src/main/java/io/zeebe/engine/processing/job/JobBatchActivateProcessor.java\n+++ b/engine/src/main/java/io/zeebe/engine/processing/job/JobBatchActivateProcessor.java\n\n@@ -133,9 +128,6 @@ public final class JobBatchActivateProcessor implements TypedRecordProcessor<Job\n         (key, jobRecord) -> {\n           int remainingAmount = amount.get();\n           final long deadline = record.getTimestamp() + value.getTimeout();\n-          if (value.getWorkerBuffer().capacity() == 0) {\n-            LOGGER.trace(String.format(\"A job worker for a record: %s is anonymous.\", value));\n-          }\n           jobRecord.setDeadline(deadline).setWorker(value.getWorkerBuffer());\n \n           // fetch and set variables, required here to already have the full size of the job record\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NjMwNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r531586305", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldNotRejectEmptyWorker() {\n          \n          \n            \n              public void shouldAcceptEmptyWorker() {\n          \n      \n    \n    \n  \n\nI find its always better to test the positive, i.e. it works without a worker, as opposed to it doesn't not work without a worker \ud83d\ude09 I know it's just semantics, but I think it's a little clearer.", "author": "npepinpe", "createdAt": "2020-11-27T12:55:32Z", "path": "engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java", "diffHunk": "@@ -111,16 +111,49 @@ public void shouldRejectInvalidType() {\n   }\n \n   @Test\n-  public void shouldRejectInvalidWorker() {\n+  public void shouldNotRejectEmptyWorker() {", "originalCommit": "401685fc35abc71fb262914c974960848f51599a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUyMzYwOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r555523609", "bodyText": "Done", "author": "aivinog1", "createdAt": "2021-01-12T05:33:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4NjMwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b5f6e84d1fc24abd060887cc4c720425f85353e7", "chunk": "diff --git a/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java b/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\nindex 2190e62352..bb4233a8b0 100644\n--- a/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\n+++ b/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\n\n@@ -111,17 +112,9 @@ public final class ActivateJobsTest {\n   }\n \n   @Test\n-  public void shouldNotRejectEmptyWorker() {\n+  public void shouldAcceptEmptyWorker() {\n     // given\n     ENGINE.deployment().withXmlResource(PROCESS_ID, MODEL_SUPPLIER.apply(taskType)).deploy();\n-    final long firstInstanceKey = createWorkflowInstances(3, \"{'foo':'bar'}\").get(0);\n-\n-    final long expectedJobKey =\n-        jobRecords(JobIntent.CREATED)\n-            .withType(taskType)\n-            .filter(r -> r.getValue().getWorkflowInstanceKey() == firstInstanceKey)\n-            .getFirst()\n-            .getKey();\n \n     final Duration timeout = Duration.ofMinutes(12);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMjk0NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r531612944", "bodyText": "I think it's fine to not test these things - we already have tests covering this. Rule of thumb is to have many tests, each asserting as little as possible (the ideal is one assertion per test, but obviously that's not always possible). So in this case, what is our test covering? What are the things that we really need to assert?\nI would argue only care that one job was activated, and that its worker is nothing. The rest isn't important.", "author": "npepinpe", "createdAt": "2020-11-27T13:49:35Z", "path": "engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java", "diffHunk": "@@ -111,16 +111,49 @@ public void shouldRejectInvalidType() {\n   }\n \n   @Test\n-  public void shouldRejectInvalidWorker() {\n+  public void shouldNotRejectEmptyWorker() {\n+    // given\n+    ENGINE.deployment().withXmlResource(PROCESS_ID, MODEL_SUPPLIER.apply(taskType)).deploy();\n+    final long firstInstanceKey = createWorkflowInstances(3, \"{'foo':'bar'}\").get(0);\n+\n+    final long expectedJobKey =\n+        jobRecords(JobIntent.CREATED)\n+            .withType(taskType)\n+            .filter(r -> r.getValue().getWorkflowInstanceKey() == firstInstanceKey)\n+            .getFirst()\n+            .getKey();\n+\n+    final Duration timeout = Duration.ofMinutes(12);\n+\n     // when\n     final Record<JobBatchRecordValue> batchRecord =\n-        ENGINE.jobs().withType(taskType).byWorker(\"\").expectRejection().activate();\n+        ENGINE\n+            .jobs()\n+            .withType(taskType)\n+            .withTimeout(timeout.toMillis())\n+            .withMaxJobsToActivate(1)\n+            .activate();\n+\n+    final List<JobRecordValue> jobs = batchRecord.getValue().getJobs();\n+    final List<Long> jobKeys = batchRecord.getValue().getJobKeys();\n \n     // then\n-    assertThat(batchRecord)\n-        .hasRejectionType(RejectionType.INVALID_ARGUMENT)\n-        .hasRejectionReason(\n-            \"Expected to activate job batch with worker to be present, but it was blank\");\n+    assertThat(batchRecord.getIntent()).isEqualTo(JobBatchIntent.ACTIVATED);\n+\n+    assertThat(jobKeys).hasSize(1);", "originalCommit": "401685fc35abc71fb262914c974960848f51599a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM2MzI2MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r532363261", "bodyText": "I agree, will fix that. By the way, what do you think about parameterized tests? We can simply reuse some tests that already exist, but with different worker name.", "author": "aivinog1", "createdAt": "2020-11-30T05:59:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMjk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUyNDE5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r555524198", "bodyText": "I decided to not use parameterized tests in that case. I removed unnecessary parts.", "author": "aivinog1", "createdAt": "2021-01-12T05:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMjk0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0NjY0Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5930#discussion_r557546642", "bodyText": "We'll be refactoring parts of the engine and how we process job, so I imagine some of the tests will change - best not to modify too much now \ud83d\ude42", "author": "npepinpe", "createdAt": "2021-01-14T16:57:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMjk0NA=="}], "type": "inlineReview", "revised_code": {"commit": "b5f6e84d1fc24abd060887cc4c720425f85353e7", "chunk": "diff --git a/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java b/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\nindex 2190e62352..bb4233a8b0 100644\n--- a/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\n+++ b/engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java\n\n@@ -111,17 +112,9 @@ public final class ActivateJobsTest {\n   }\n \n   @Test\n-  public void shouldNotRejectEmptyWorker() {\n+  public void shouldAcceptEmptyWorker() {\n     // given\n     ENGINE.deployment().withXmlResource(PROCESS_ID, MODEL_SUPPLIER.apply(taskType)).deploy();\n-    final long firstInstanceKey = createWorkflowInstances(3, \"{'foo':'bar'}\").get(0);\n-\n-    final long expectedJobKey =\n-        jobRecords(JobIntent.CREATED)\n-            .withType(taskType)\n-            .filter(r -> r.getValue().getWorkflowInstanceKey() == firstInstanceKey)\n-            .getFirst()\n-            .getKey();\n \n     final Duration timeout = Duration.ofMinutes(12);\n \n"}}, {"oid": "b5f6e84d1fc24abd060887cc4c720425f85353e7", "url": "https://github.com/camunda-cloud/zeebe/commit/b5f6e84d1fc24abd060887cc4c720425f85353e7", "message": "feat(broker): a job worker is optional", "committedDate": "2021-01-19T05:12:50Z", "type": "commit"}, {"oid": "b5f6e84d1fc24abd060887cc4c720425f85353e7", "url": "https://github.com/camunda-cloud/zeebe/commit/b5f6e84d1fc24abd060887cc4c720425f85353e7", "message": "feat(broker): a job worker is optional", "committedDate": "2021-01-19T05:12:50Z", "type": "forcePushed"}]}