{"pr_number": 4278, "pr_title": "chore(logstreams): add snapshot checksum verification", "pr_createdAt": "2020-04-08T13:10:13Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4278", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1MTA0MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407951041", "bodyText": "This can be problematic. Snapshot can be too large to fit in memory.", "author": "deepthidevaki", "createdAt": "2020-04-14T08:18:09Z", "path": "logstreams/src/main/java/io/zeebe/logstreams/state/StateSnapshotController.java", "diffHunk": "@@ -72,13 +73,23 @@ public void replicateLatestSnapshot(final Consumer<Runnable> executor) {\n       LOG.debug(\"Start replicating latest snapshot {}\", latestSnapshotDirectory);\n \n       try (final var stream = Files.list(latestSnapshotDirectory)) {\n-        final var files = stream.collect(Collectors.toList());\n-        for (final var file : files) {\n+        final ByteArrayOutputStream outStream = new ByteArrayOutputStream();\n+        final var paths = stream.sorted().collect(Collectors.toList());\n+        for (final var path : paths) {\n+          outStream.write(Files.readAllBytes(path));", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1OTMzNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407959335", "bodyText": "One way to calculate checksums for a directory is to calculate checksum for each file, then calculate checksum of the checksums.", "author": "deepthidevaki", "createdAt": "2020-04-14T08:31:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1MTA0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/logstreams/src/main/java/io/zeebe/logstreams/state/StateSnapshotController.java b/logstreams/src/main/java/io/zeebe/logstreams/state/StateSnapshotController.java\nindex 0c6251e1e..8f89ece5c 100644\n--- a/logstreams/src/main/java/io/zeebe/logstreams/state/StateSnapshotController.java\n+++ b/logstreams/src/main/java/io/zeebe/logstreams/state/StateSnapshotController.java\n\n@@ -73,13 +76,8 @@ public class StateSnapshotController implements SnapshotController {\n       LOG.debug(\"Start replicating latest snapshot {}\", latestSnapshotDirectory);\n \n       try (final var stream = Files.list(latestSnapshotDirectory)) {\n-        final ByteArrayOutputStream outStream = new ByteArrayOutputStream();\n         final var paths = stream.sorted().collect(Collectors.toList());\n-        for (final var path : paths) {\n-          outStream.write(Files.readAllBytes(path));\n-        }\n-\n-        final long snapshotChecksum = SnapshotChunkUtil.createChecksum(outStream.toByteArray());\n+        final long combinedChecksum = getCombinedChecksum(paths);\n \n         for (final var path : paths) {\n           executor.accept(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1MTM3Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407951376", "bodyText": "\ud83d\udc4d", "author": "deepthidevaki", "createdAt": "2020-04-14T08:18:44Z", "path": "broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java", "diffHunk": "@@ -81,6 +84,10 @@ public void write(final MutableDirectBuffer buffer, final int offset) {\n         .chunkName(chunkName)\n         .checksum(checksum)\n         .putContent(content, 0, content.capacity());\n+\n+    if (encoder.sbeSchemaVersion() >= SnapshotChunkEncoder.snapshotChecksumSinceVersion()) {", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java b/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\nindex dc0b5d51b..610209014 100644\n--- a/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\n\n@@ -83,11 +83,8 @@ public final class SnapshotChunkImpl\n         .snapshotId(snapshotId)\n         .chunkName(chunkName)\n         .checksum(checksum)\n+        .snapshotChecksum(snapshotChecksum)\n         .putContent(content, 0, content.capacity());\n-\n-    if (encoder.sbeSchemaVersion() >= SnapshotChunkEncoder.snapshotChecksumSinceVersion()) {\n-      encoder.snapshotChecksum(snapshotChecksum);\n-    }\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1Mjg1OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407952858", "bodyText": "What will happen, if sender and receiver has different schema versions?", "author": "deepthidevaki", "createdAt": "2020-04-14T08:21:12Z", "path": "broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java", "diffHunk": "@@ -91,6 +98,9 @@ public void wrap(final DirectBuffer buffer, final int offset, final int length)\n     snapshotId = decoder.snapshotId();\n     chunkName = decoder.chunkName();\n     checksum = decoder.checksum();\n+    if (decoder.sbeSchemaVersion() >= SnapshotChunkDecoder.snapshotChecksumSinceVersion()) {", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE0ODc4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r408148786", "bodyText": "I didn't come up with a way to test this easily but when the receiver is older than the sender it should not even read the snapshot checksum. If it's newer than the sender, then the message's version is checked and the null value is used instead. Actually this check is redundant because it's already done in snapshotChecksum(), so I'll remove it", "author": "MiguelPires", "createdAt": "2020-04-14T13:46:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1Mjg1OA=="}], "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java b/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\nindex dc0b5d51b..610209014 100644\n--- a/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/engine/impl/SnapshotChunkImpl.java\n\n@@ -98,9 +95,7 @@ public final class SnapshotChunkImpl\n     snapshotId = decoder.snapshotId();\n     chunkName = decoder.chunkName();\n     checksum = decoder.checksum();\n-    if (decoder.sbeSchemaVersion() >= SnapshotChunkDecoder.snapshotChecksumSinceVersion()) {\n-      snapshotChecksum = decoder.snapshotChecksum();\n-    }\n+    snapshotChecksum = decoder.snapshotChecksum();\n \n     if (decoder.contentLength() > 0) {\n       decoder.wrapContent(content);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk1NTA4Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407955082", "bodyText": "Can we move the checksum logic to a single place?", "author": "deepthidevaki", "createdAt": "2020-04-14T08:25:00Z", "path": "logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java", "diffHunk": "@@ -46,6 +50,26 @@ public void invalidateSnapshot(final String snapshotId) {\n     storage.getPendingDirectoryFor(snapshotId).ifPresent(this::deletePendingSnapshot);\n   }\n \n+  @Override\n+  public Optional<Long> getPendingSnapshotChecksum(final String snapshotId) {", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java b/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\nindex 5c842b391..616d7682d 100644\n--- a/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\n+++ b/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\n\n@@ -41,8 +41,9 @@ final class FileSnapshotConsumer implements SnapshotConsumer {\n   }\n \n   @Override\n-  public boolean completeSnapshot(final String snapshotId) {\n-    return storage.getPendingDirectoryFor(snapshotId).flatMap(storage::commitSnapshot).isPresent();\n+  public boolean completeSnapshot(final String snapshotId, final long snapshotChecksum) {\n+    return verifySnapshot(snapshotId, snapshotChecksum)\n+        && storage.getPendingDirectoryFor(snapshotId).flatMap(storage::commitSnapshot).isPresent();\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk2NTU2MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407965560", "bodyText": "Shouldn't it test that the snapshot is not committed/made valid?", "author": "deepthidevaki", "createdAt": "2020-04-14T08:41:50Z", "path": "logstreams/src/test/java/io/zeebe/logstreams/state/FailingSnapshotChunkReplicationTest.java", "diffHunk": "@@ -112,6 +113,43 @@ public void shouldNotMarkSnapshotAsValidIfNotReceivedAllChunks() throws Exceptio\n     assertThat(receiverStorage.exists(replicatedChunks.get(0).getSnapshotId())).isFalse();\n   }\n \n+  @Test\n+  public void shouldSnapshotWithWrongChecksum() throws Exception {\n+    // given\n+    final InterruptedReplicator replicator = new InterruptedReplicator();\n+    setup(replicator);\n+\n+    receiverSnapshotController.consumeReplicatedSnapshots();\n+    replicatorSnapshotController.takeSnapshot(1);\n+\n+    // when\n+    replicatorSnapshotController.replicateLatestSnapshot(Runnable::run);\n+    final List<SnapshotChunk> pendingChunks = new ArrayList<>(replicator.unsentSnapshots);\n+\n+    final Path pendingSnapshot =\n+        receiverStorage.getPendingDirectoryFor(pendingChunks.get(0).getSnapshotId()).orElseThrow();\n+    final List<Path> snapshotChunks = Files.list(pendingSnapshot).collect(Collectors.toList());\n+    assertThat(snapshotChunks).hasSize(pendingChunks.get(0).getTotalCount() - 1);\n+    snapshotChunks.forEach(\n+        p -> {\n+          try {\n+            Files.delete(p);\n+          } catch (IOException e) {\n+            e.printStackTrace();\n+          }\n+        });\n+\n+    replicator.count = 0;\n+    pendingChunks.forEach(replicator::replicate);\n+\n+    // then\n+    assertThat(\n+            receiverStorage\n+                .getPendingDirectoryFor(pendingChunks.get(0).getSnapshotId())\n+                .orElseThrow())\n+        .doesNotExist();", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/logstreams/src/test/java/io/zeebe/logstreams/state/FailingSnapshotChunkReplicationTest.java b/logstreams/src/test/java/io/zeebe/logstreams/state/FailingSnapshotChunkReplicationTest.java\nindex dcd56c3c9..b93e64e52 100644\n--- a/logstreams/src/test/java/io/zeebe/logstreams/state/FailingSnapshotChunkReplicationTest.java\n+++ b/logstreams/src/test/java/io/zeebe/logstreams/state/FailingSnapshotChunkReplicationTest.java\n\n@@ -148,6 +148,7 @@ public final class FailingSnapshotChunkReplicationTest {\n                 .getPendingDirectoryFor(pendingChunks.get(0).getSnapshotId())\n                 .orElseThrow())\n         .doesNotExist();\n+    assertThat(receiverStorage.exists(pendingChunks.get(0).getSnapshotId())).isFalse();\n   }\n \n   private final class FlakyReplicator implements SnapshotReplication {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3MDc5Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r407970796", "bodyText": "Checksum verification can be part of completeSnapshot(), right?", "author": "deepthidevaki", "createdAt": "2020-04-14T08:50:13Z", "path": "logstreams/src/main/java/io/zeebe/logstreams/state/ReplicationController.java", "diffHunk": "@@ -103,7 +109,12 @@ private void validateWhenReceivedAllChunks(\n \n   private boolean tryToMarkSnapshotAsValid(\n       final SnapshotChunk snapshotChunk, final ReplicationContext context) {\n-    if (snapshotConsumer.completeSnapshot(snapshotChunk.getSnapshotId())) {\n+    final Optional<Long> pendingChecksum =\n+        snapshotConsumer.getPendingSnapshotChecksum(snapshotChunk.getSnapshotId());\n+\n+    if (pendingChecksum.isPresent()\n+        && snapshotChunk.getSnapshotChecksum() == pendingChecksum.get()\n+        && snapshotConsumer.completeSnapshot(snapshotChunk.getSnapshotId())) {", "originalCommit": "4db5137b8bfd2481269b61f6f014875a124e9b70", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/logstreams/src/main/java/io/zeebe/logstreams/state/ReplicationController.java b/logstreams/src/main/java/io/zeebe/logstreams/state/ReplicationController.java\nindex cf7951e34..96e87087b 100644\n--- a/logstreams/src/main/java/io/zeebe/logstreams/state/ReplicationController.java\n+++ b/logstreams/src/main/java/io/zeebe/logstreams/state/ReplicationController.java\n\n@@ -109,12 +108,8 @@ final class ReplicationController {\n \n   private boolean tryToMarkSnapshotAsValid(\n       final SnapshotChunk snapshotChunk, final ReplicationContext context) {\n-    final Optional<Long> pendingChecksum =\n-        snapshotConsumer.getPendingSnapshotChecksum(snapshotChunk.getSnapshotId());\n-\n-    if (pendingChecksum.isPresent()\n-        && snapshotChunk.getSnapshotChecksum() == pendingChecksum.get()\n-        && snapshotConsumer.completeSnapshot(snapshotChunk.getSnapshotId())) {\n+    if (snapshotConsumer.completeSnapshot(\n+        snapshotChunk.getSnapshotId(), snapshotChunk.getSnapshotChecksum())) {\n       final var elapsed = System.currentTimeMillis() - context.startTimestamp;\n       receivedSnapshots.remove(snapshotChunk.getSnapshotId());\n       metrics.decrementCount();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYxOTc1Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4278#discussion_r408619757", "bodyText": "I would suggest  completeSnapshot(final String snapshotId, final long snapshotChecksum)", "author": "deepthidevaki", "createdAt": "2020-04-15T06:56:10Z", "path": "logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java", "diffHunk": "@@ -37,15 +41,35 @@ public boolean consumeSnapshotChunk(final SnapshotChunk chunk) {\n   }\n \n   @Override\n-  public boolean completeSnapshot(final String snapshotId) {\n-    return storage.getPendingDirectoryFor(snapshotId).flatMap(storage::commitSnapshot).isPresent();\n+  public boolean completeSnapshot(final SnapshotChunk snapshotChunk) {\n+    return verifySnapshot(snapshotChunk)", "originalCommit": "f4f3f533371b139a1a1e02534089535946c0d1af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "chunk": "diff --git a/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java b/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\nindex bcdfc7d76..616d7682d 100644\n--- a/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\n+++ b/logstreams/src/main/java/io/zeebe/logstreams/state/FileSnapshotConsumer.java\n\n@@ -41,12 +41,9 @@ final class FileSnapshotConsumer implements SnapshotConsumer {\n   }\n \n   @Override\n-  public boolean completeSnapshot(final SnapshotChunk snapshotChunk) {\n-    return verifySnapshot(snapshotChunk)\n-        && storage\n-            .getPendingDirectoryFor(snapshotChunk.getSnapshotId())\n-            .flatMap(storage::commitSnapshot)\n-            .isPresent();\n+  public boolean completeSnapshot(final String snapshotId, final long snapshotChecksum) {\n+    return verifySnapshot(snapshotId, snapshotChecksum)\n+        && storage.getPendingDirectoryFor(snapshotId).flatMap(storage::commitSnapshot).isPresent();\n   }\n \n   @Override\n"}}, {"oid": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "url": "https://github.com/camunda-cloud/zeebe/commit/ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "message": "chore(logstreams): add snapshot checksum verification", "committedDate": "2020-04-15T15:06:08Z", "type": "commit"}, {"oid": "ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "url": "https://github.com/camunda-cloud/zeebe/commit/ab73d49ec2f79cd2c231ee2bc78f9042a8a8df60", "message": "chore(logstreams): add snapshot checksum verification", "committedDate": "2020-04-15T15:06:08Z", "type": "forcePushed"}]}