{"pr_number": 6011, "pr_title": "[Backport stable/0.25] Fixes outdated topology when no new leader is assigned", "pr_createdAt": "2020-12-14T18:17:20Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/6011", "timeline": [{"oid": "01eef26104bdddb90932df51cabf5e6e419aa053", "url": "https://github.com/camunda-cloud/zeebe/commit/01eef26104bdddb90932df51cabf5e6e419aa053", "message": "deps(parent): bump assertJ version for #failure()", "committedDate": "2020-12-14T19:40:06Z", "type": "forcePushed"}, {"oid": "c526bf632639f29985c6a9c6fae47c96348745ff", "url": "https://github.com/camunda-cloud/zeebe/commit/c526bf632639f29985c6a9c6fae47c96348745ff", "message": "chore(parent): bump assertJ version for #failure()", "committedDate": "2020-12-14T19:41:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543101428", "bodyText": "Topology does not have partition health in this version. You can remove this test.", "author": "deepthidevaki", "createdAt": "2020-12-15T07:17:14Z", "path": "gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java", "diffHunk": "@@ -174,6 +177,52 @@ public void shouldUpdateTopologyOnBrokerRemoveAndDirectlyRejoin() {\n     assertThat(topologyManager.getTopology().getLeaderForPartition(1)).isEqualTo(leaderId);\n   }\n \n+  @Test\n+  public void shouldUpdateTopologyOnPartitionHealth() {\n+    final int brokerId = 0;\n+    final int partition = 0;\n+    final BrokerInfo broker = createBroker(brokerId);\n+    broker.setPartitionHealthy(partition);\n+    topologyManager.event(createMemberAddedEvent(broker));\n+    waitUntil(() -> topologyManager.getTopology() != null);\n+    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isTrue();", "originalCommit": "c526bf632639f29985c6a9c6fae47c96348745ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE4MDIyNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543180227", "bodyText": "I'm surprised the cherry pick included this test as well, I don't think I had added it as part of the original PR? \ud83e\udd14", "author": "npepinpe", "createdAt": "2020-12-15T09:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMwMjI3Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/6011#discussion_r543302273", "bodyText": "I have also seen that behavior before. This https://stackoverflow.com/a/19001323 explains it. I did not expect this semantics of cherry-pick.", "author": "deepthidevaki", "createdAt": "2020-12-15T12:31:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwMTQyOA=="}], "type": "inlineReview", "revised_code": {"commit": "999cd224b55ae5b848a8c56471ede537839e054f", "chunk": "diff --git a/gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java b/gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java\nindex 1f446d968..687907cac 100644\n--- a/gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java\n+++ b/gateway/src/test/java/io/zeebe/gateway/topology/TopologyUpdateTest.java\n\n@@ -177,23 +177,6 @@ public final class TopologyUpdateTest {\n     assertThat(topologyManager.getTopology().getLeaderForPartition(1)).isEqualTo(leaderId);\n   }\n \n-  @Test\n-  public void shouldUpdateTopologyOnPartitionHealth() {\n-    final int brokerId = 0;\n-    final int partition = 0;\n-    final BrokerInfo broker = createBroker(brokerId);\n-    broker.setPartitionHealthy(partition);\n-    topologyManager.event(createMemberAddedEvent(broker));\n-    waitUntil(() -> topologyManager.getTopology() != null);\n-    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isTrue();\n-\n-    final BrokerInfo updatedBroker = createBroker(0);\n-    updatedBroker.setPartitionUnhealthy(partition);\n-    topologyManager.event(createMemberUpdateEvent(updatedBroker));\n-    waitUntil(() -> !topologyManager.getTopology().isPartitionHealthy(brokerId, partition));\n-    assertThat(topologyManager.getTopology().isPartitionHealthy(brokerId, partition)).isFalse();\n-  }\n-\n   @Test\n   public void shouldUpdateTopologyOnLeaderRemoval() {\n     // given\n"}}, {"oid": "999cd224b55ae5b848a8c56471ede537839e054f", "url": "https://github.com/camunda-cloud/zeebe/commit/999cd224b55ae5b848a8c56471ede537839e054f", "message": "fix(gateway): fix outdated leader when no other leader\n\n- fixes an issue in the gateway topology when the old leader becomes\n  follower, and no new node is elected leader yet, by removing the new\n  follower if it's still identified as the leader", "committedDate": "2020-12-15T12:25:46Z", "type": "commit"}, {"oid": "750a9e4b0b98171fac34c52806bc2c6e7416161a", "url": "https://github.com/camunda-cloud/zeebe/commit/750a9e4b0b98171fac34c52806bc2c6e7416161a", "message": "chore(test-util): update definition of complete topology\n\n- TopologyAssert#isComplete now also checks that all partitions have a\n  leader", "committedDate": "2020-12-15T12:25:47Z", "type": "commit"}, {"oid": "eae6ac73d21523692e4ab55878ae30e6fdae18c7", "url": "https://github.com/camunda-cloud/zeebe/commit/eae6ac73d21523692e4ab55878ae30e6fdae18c7", "message": "chore(qa): add topology fault tolerance tests", "committedDate": "2020-12-15T12:25:47Z", "type": "commit"}, {"oid": "6d37ab0de49b4def9aa788a969df5da5e5a991b1", "url": "https://github.com/camunda-cloud/zeebe/commit/6d37ab0de49b4def9aa788a969df5da5e5a991b1", "message": "chore(parent): bump assertJ version for #failure()", "committedDate": "2020-12-15T12:25:47Z", "type": "commit"}, {"oid": "6d37ab0de49b4def9aa788a969df5da5e5a991b1", "url": "https://github.com/camunda-cloud/zeebe/commit/6d37ab0de49b4def9aa788a969df5da5e5a991b1", "message": "chore(parent): bump assertJ version for #failure()", "committedDate": "2020-12-15T12:25:47Z", "type": "forcePushed"}]}