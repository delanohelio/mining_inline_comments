{"pr_number": 5939, "pr_title": "Ignore DebugLogExporter if ZEEEB_DEBUG is false", "pr_createdAt": "2020-11-28T10:46:22Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5939", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzOTE5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532439198", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldDisableDebugLogExporter() {\n          \n          \n            \n              public void shouldNotRegisterDebugLogExporter() {", "author": "pihme", "createdAt": "2020-11-30T09:04:41Z", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "originalCommit": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "chunk": "diff --git a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\nindex 00295084a8..ad1fcb6e88 100644\n--- a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n+++ b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n\n@@ -237,14 +239,17 @@ public final class BrokerCfgTest {\n   @Test\n   public void shouldEnableDebugLogExporter() {\n     // given\n+    final var expectedId = DebugLogExporter.defaultExporterId();\n+    final var expectedConfig = DebugLogExporter.defaultConfig();\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter();\n+    assertWithDefaultConfigurations(\n+        cfg -> assertThat(cfg.getExporters()).containsEntry(expectedId, expectedConfig));\n   }\n \n   @Test\n-  public void shouldDisableDebugLogExporter() {\n+  public void shouldNotRegisterDebugLogExporter() {\n     // given\n     environment.put(ENV_DEBUG_EXPORTER, \"false\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532440730", "bodyText": "Is it deliberate that the literal is used here? (as opposed to using DebugLogExporter.defaultConfig();", "author": "pihme", "createdAt": "2020-11-30T09:07:23Z", "path": "broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java", "diffHunk": "@@ -20,7 +20,7 @@\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig(false));\n+      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());", "originalCommit": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MjA5NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532572095", "bodyText": "I don't understand - do you mean the exporter ID? This is using DebugLogExporter.defaultConfig().", "author": "npepinpe", "createdAt": "2020-11-30T12:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MzA5Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532573096", "bodyText": "I mean the key in the map", "author": "pihme", "createdAt": "2020-11-30T12:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3Mzc2OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532573768", "bodyText": "Ah, no I just refactored the usage - I can't really speak for the original intent, and I was unaware we had a DebugLogExporter.defaultExporterId(), but I can use it \ud83d\udc4d", "author": "npepinpe", "createdAt": "2020-11-30T12:51:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MDczMA=="}], "type": "inlineReview", "revised_code": {"commit": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "chunk": "diff --git a/broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java b/broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java\nindex 640a80ebe6..39d457e6c7 100644\n--- a/broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java\n+++ b/broker/src/test/java/io/zeebe/broker/test/EmbeddedBrokerConfigurator.java\n\n@@ -20,7 +20,9 @@ import java.util.function.Consumer;\n public final class EmbeddedBrokerConfigurator {\n \n   public static final Consumer<BrokerCfg> DEBUG_EXPORTER =\n-      cfg -> cfg.getExporters().put(\"DebugLogExporter\", DebugLogExporter.defaultConfig());\n+      cfg ->\n+          cfg.getExporters()\n+              .put(DebugLogExporter.defaultExporterId(), DebugLogExporter.defaultConfig());\n \n   public static final Consumer<BrokerCfg> HTTP_EXPORTER =\n       cfg -> cfg.getExporters().put(\"DebugHttpExporter\", DebugHttpExporter.defaultConfig());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532442077", "bodyText": "Is there a test case that verifies the debug exporter is not enabled if the environment variable doesn't exist?", "author": "pihme", "createdAt": "2020-11-30T09:09:45Z", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -240,16 +240,20 @@ public void shouldEnableDebugLogExporter() {\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter(false);\n+    assertDefaultDebugLogExporter();\n   }\n \n   @Test\n-  public void shouldEnableDebugLogExporterWithPrettyOption() {\n+  public void shouldDisableDebugLogExporter() {", "originalCommit": "378f56e49f4f02c18b25cd11aaa55a02233c1bdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU3MTY0Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532571647", "bodyText": "No, and honestly I was on the fence about the worth of this test - on one hand, the normal state is to not have the exporter. On the other hand, previous versions would include it regardless of the value, so I did want a \"regression\" test to ensure the behaviour was changed.\nHowever, now that I think about it, we could simply have a test which checks there are no exporters by default (we have several other default tests, but none for exporters).", "author": "npepinpe", "createdAt": "2020-11-30T12:47:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4MDY5Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532580693", "bodyText": "Added the test and a follow up issue: #5944", "author": "npepinpe", "createdAt": "2020-11-30T13:03:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MjA3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "chunk": "diff --git a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\nindex 00295084a8..ad1fcb6e88 100644\n--- a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n+++ b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n\n@@ -237,14 +239,17 @@ public final class BrokerCfgTest {\n   @Test\n   public void shouldEnableDebugLogExporter() {\n     // given\n+    final var expectedId = DebugLogExporter.defaultExporterId();\n+    final var expectedConfig = DebugLogExporter.defaultConfig();\n     environment.put(ENV_DEBUG_EXPORTER, \"true\");\n \n     // then\n-    assertDefaultDebugLogExporter();\n+    assertWithDefaultConfigurations(\n+        cfg -> assertThat(cfg.getExporters()).containsEntry(expectedId, expectedConfig));\n   }\n \n   @Test\n-  public void shouldDisableDebugLogExporter() {\n+  public void shouldNotRegisterDebugLogExporter() {\n     // given\n     environment.put(ENV_DEBUG_EXPORTER, \"false\");\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyNjc1MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532626751", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void assertDefaultDebugLogExporter() {\n          \n          \n            \n              private void assertDebugLogExporterRegistered() {\n          \n      \n    \n    \n  \n\nThe name is confusing. In line 262  public void shouldHaveNoExportersByDefault() { we test for having no exporter by default.\nHere, with the name Default in it we would be testing that there is an exporter registered. But the only place we call it from is not a vanilla default configuration.", "author": "pihme", "createdAt": "2020-11-30T14:14:49Z", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -836,13 +847,13 @@ private void assertEmbeddedGatewayEnabled(final String configFileName, final boo\n     assertThat(gatewayCfg.isEnable()).isEqualTo(enabled);\n   }\n \n-  private void assertDefaultDebugLogExporter(final boolean prettyPrint) {\n-    assertDebugLogExporter(\"default\", prettyPrint);\n-    assertDebugLogExporter(\"empty\", prettyPrint);\n+  private void assertDefaultDebugLogExporter() {", "originalCommit": "b8db10bf46c8d15a207efd42c45cf9ddfa1328b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "chunk": "diff --git a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\nindex 43518612cc..ad1fcb6e88 100644\n--- a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n+++ b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n\n@@ -847,20 +850,6 @@ public final class BrokerCfgTest {\n     assertThat(gatewayCfg.isEnable()).isEqualTo(enabled);\n   }\n \n-  private void assertDefaultDebugLogExporter() {\n-    assertDebugLogExporter(\"default\");\n-    assertDebugLogExporter(\"empty\");\n-  }\n-\n-  private void assertDebugLogExporter(final String configFileName) {\n-    final ExporterCfg exporterCfg = DebugLogExporter.defaultConfig();\n-    final BrokerCfg brokerCfg = TestConfigReader.readConfig(configFileName, environment);\n-\n-    assertThat(brokerCfg.getExporters().values())\n-        .usingRecursiveFieldByFieldElementComparator()\n-        .contains(exporterCfg);\n-  }\n-\n   private void assertMetricsExporter() {\n     assertMetricsExporter(\"default\");\n     assertMetricsExporter(\"empty\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczNTA5NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5939#discussion_r532735094", "bodyText": "This could be renamed:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void assertWithDefaultConfiguration(\n          \n          \n            \n              private void assertWithConfiguration(", "author": "pihme", "createdAt": "2020-11-30T16:38:22Z", "path": "broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java", "diffHunk": "@@ -892,4 +892,15 @@ private void assertSystemClusterConfiguration(\n     assertThat(cfgCluster.getClusterSize()).isEqualTo(clusterSize);\n     assertThat(cfgCluster.getInitialContactPoints()).isEqualTo(initialContactPoints);\n   }\n+\n+  private void assertWithDefaultConfigurations(final Consumer<BrokerCfg> assertions) {\n+    Stream.of(\"default\", \"empty\")\n+        .forEach(configFileName -> assertWithDefaultConfiguration(assertions, configFileName));\n+  }\n+\n+  private void assertWithDefaultConfiguration(", "originalCommit": "a5b44cf930b9ad543b776d044a97b93891bd5067", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "chunk": "diff --git a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\nindex 679ebf798f..ad1fcb6e88 100644\n--- a/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n+++ b/broker/src/test/java/io/zeebe/broker/system/configuration/BrokerCfgTest.java\n\n@@ -898,7 +898,7 @@ public final class BrokerCfgTest {\n         .forEach(configFileName -> assertWithDefaultConfiguration(assertions, configFileName));\n   }\n \n-  private void assertWithDefaultConfiguration(\n+  private void assertWithConfiguration(\n       final Consumer<BrokerCfg> assertions, final String configFileName) {\n     final BrokerCfg cfg = TestConfigReader.readConfig(configFileName, environment);\n     assertions.accept(cfg);\n"}}, {"oid": "a8c53c9b484a45e704c9fb6a2981d861648da8e0", "url": "https://github.com/camunda-cloud/zeebe/commit/a8c53c9b484a45e704c9fb6a2981d861648da8e0", "message": "chore(broker): ignore debug log exporter if false", "committedDate": "2020-11-30T16:42:19Z", "type": "forcePushed"}, {"oid": "5421d5be487fa5d78b6992fe29036b890c5be6e8", "url": "https://github.com/camunda-cloud/zeebe/commit/5421d5be487fa5d78b6992fe29036b890c5be6e8", "message": "chore(broker): ignore debug log exporter if false", "committedDate": "2020-11-30T16:51:11Z", "type": "commit"}, {"oid": "5421d5be487fa5d78b6992fe29036b890c5be6e8", "url": "https://github.com/camunda-cloud/zeebe/commit/5421d5be487fa5d78b6992fe29036b890c5be6e8", "message": "chore(broker): ignore debug log exporter if false", "committedDate": "2020-11-30T16:51:11Z", "type": "forcePushed"}]}