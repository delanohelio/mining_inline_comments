{"pr_number": 5196, "pr_title": "chore(broker): add more specific logs for taking snapshot", "pr_createdAt": "2020-08-18T14:41:57Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5196", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc2ODU0Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472768543", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Expected to take snapshot for lower bound position {}, but database was closed.\",\n          \n          \n            \n                      \"Expected to take snapshot for last processed position {}, but database was closed.\",", "author": "deepthidevaki", "createdAt": "2020-08-19T06:45:12Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java", "diffHunk": "@@ -71,29 +71,36 @@ public StateControllerImpl(\n   @Override\n   public Optional<TransientSnapshot> takeTransientSnapshot(final long lowerBoundSnapshotPosition) {\n     if (!isDbOpened()) {\n+      LOG.warn(\n+          \"Expected to take snapshot for lower bound position {}, but database was closed.\",", "originalCommit": "3285cd6f6dbf43bd82fe0d607f8a317c79d33b42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5NjU3MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472796570", "bodyText": "Actually I wrote not last processed since it is not really true. Do you think it is confusing to write lower bound?", "author": "Zelldon", "createdAt": "2020-08-19T07:20:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc2ODU0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "09f3013618617efbddc2b48305796b81d4158a60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\nindex 8cea9bec38..73705518f5 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n\n@@ -81,7 +81,7 @@ public class StateControllerImpl implements StateController, PersistedSnapshotLi\n     final var optionalIndexed = entrySupplier.getIndexedEntry(snapshotPosition);\n     if (optionalIndexed.isEmpty()) {\n       LOG.warn(\n-          \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n+          \"Failed to take snapshot. Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n           lowerBoundSnapshotPosition);\n       return Optional.empty();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc3MDE2Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472770162", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n          \n          \n            \n                      \"Failed to take snapshot. Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",", "author": "deepthidevaki", "createdAt": "2020-08-19T06:47:16Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java", "diffHunk": "@@ -71,29 +71,36 @@ public StateControllerImpl(\n   @Override\n   public Optional<TransientSnapshot> takeTransientSnapshot(final long lowerBoundSnapshotPosition) {\n     if (!isDbOpened()) {\n+      LOG.warn(\n+          \"Expected to take snapshot for lower bound position {}, but database was closed.\",\n+          lowerBoundSnapshotPosition);\n       return Optional.empty();\n     }\n \n-    final long exportedPosition = exporterPositionSupplier.applyAsLong(openDb());\n-    final long snapshotPosition = Math.min(exportedPosition, lowerBoundSnapshotPosition);\n-\n+    final long snapshotPosition = determineSnapshotPosition(lowerBoundSnapshotPosition);\n     final var optionalIndexed = entrySupplier.getIndexedEntry(snapshotPosition);\n+    if (optionalIndexed.isEmpty()) {\n+      LOG.warn(\n+          \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",", "originalCommit": "3285cd6f6dbf43bd82fe0d607f8a317c79d33b42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09f3013618617efbddc2b48305796b81d4158a60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\nindex 8cea9bec38..73705518f5 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n\n@@ -81,7 +81,7 @@ public class StateControllerImpl implements StateController, PersistedSnapshotLi\n     final var optionalIndexed = entrySupplier.getIndexedEntry(snapshotPosition);\n     if (optionalIndexed.isEmpty()) {\n       LOG.warn(\n-          \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n+          \"Failed to take snapshot. Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n           lowerBoundSnapshotPosition);\n       return Optional.empty();\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc3MDU1Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472770557", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Based on lowest exporter position '{}' and lower bound snapshot position '{}', determined '{}' as snapshot position.\",\n          \n          \n            \n                    \"Based on lowest exporter position '{}' and last processed position '{}', determined '{}' as snapshot position.\",", "author": "deepthidevaki", "createdAt": "2020-08-19T06:47:53Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java", "diffHunk": "@@ -277,12 +264,23 @@ private ReplicationContext newReplication(\n     return new ReplicationContext(metrics, startTimestamp, transientSnapshot);\n   }\n \n+  private long determineSnapshotPosition(final long lowerBoundSnapshotPosition) {\n+    final long exportedPosition = exporterPositionSupplier.applyAsLong(openDb());\n+    final long snapshotPosition = Math.min(exportedPosition, lowerBoundSnapshotPosition);\n+    LOG.debug(\n+        \"Based on lowest exporter position '{}' and lower bound snapshot position '{}', determined '{}' as snapshot position.\",", "originalCommit": "3285cd6f6dbf43bd82fe0d607f8a317c79d33b42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dd450d1c220f5a0aef888432c06814ef61cba8a9", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\nindex 8cea9bec38..8bc992f844 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n\n@@ -268,7 +290,7 @@ public class StateControllerImpl implements StateController, PersistedSnapshotLi\n     final long exportedPosition = exporterPositionSupplier.applyAsLong(openDb());\n     final long snapshotPosition = Math.min(exportedPosition, lowerBoundSnapshotPosition);\n     LOG.debug(\n-        \"Based on lowest exporter position '{}' and lower bound snapshot position '{}', determined '{}' as snapshot position.\",\n+        \"Based on lowest exporter position '{}' and last processed position '{}', determined '{}' as snapshot position.\",\n         exportedPosition,\n         lowerBoundSnapshotPosition,\n         snapshotPosition);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc4NjAzMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472786030", "bodyText": "Why is this removed?", "author": "deepthidevaki", "createdAt": "2020-08-19T07:07:31Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java", "diffHunk": "@@ -159,26 +166,6 @@ boolean isDbOpened() {\n     return db != null;\n   }\n \n-  private void createSnapshot(final TransientSnapshot snapshot) {", "originalCommit": "3285cd6f6dbf43bd82fe0d607f8a317c79d33b42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09f3013618617efbddc2b48305796b81d4158a60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\nindex 8cea9bec38..73705518f5 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n\n@@ -166,6 +168,26 @@ public class StateControllerImpl implements StateController, PersistedSnapshotLi\n     return db != null;\n   }\n \n+  private void takeSnapshot(final TransientSnapshot snapshot) {\n+    snapshot.take(\n+        snapshotDir -> {\n+          if (db == null) {\n+            LOG.error(\"Expected to take a snapshot, but no database was opened\");\n+            return false;\n+          }\n+\n+          LOG.debug(\"Taking temporary snapshot into {}.\", snapshotDir);\n+          try {\n+            db.createSnapshot(snapshotDir.toFile());\n+          } catch (final Exception e) {\n+            LOG.error(\"Failed to create snapshot of runtime database\", e);\n+            return false;\n+          }\n+\n+          return true;\n+        });\n+  }\n+\n   @Override\n   public void onNewSnapshot(final PersistedSnapshot newPersistedSnapshot) {\n     LOG.debug(\"New snapshot {} was persisted. Start replicating.\", newPersistedSnapshot.getId());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc4NzUxMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472787510", "bodyText": "I think this was removed by mistake \ud83d\ude42 . This is probably why tests are failing.", "author": "deepthidevaki", "createdAt": "2020-08-19T07:09:22Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java", "diffHunk": "@@ -71,29 +71,36 @@ public StateControllerImpl(\n   @Override\n   public Optional<TransientSnapshot> takeTransientSnapshot(final long lowerBoundSnapshotPosition) {\n     if (!isDbOpened()) {\n+      LOG.warn(\n+          \"Expected to take snapshot for lower bound position {}, but database was closed.\",\n+          lowerBoundSnapshotPosition);\n       return Optional.empty();\n     }\n \n-    final long exportedPosition = exporterPositionSupplier.applyAsLong(openDb());\n-    final long snapshotPosition = Math.min(exportedPosition, lowerBoundSnapshotPosition);\n-\n+    final long snapshotPosition = determineSnapshotPosition(lowerBoundSnapshotPosition);\n     final var optionalIndexed = entrySupplier.getIndexedEntry(snapshotPosition);\n+    if (optionalIndexed.isEmpty()) {\n+      LOG.warn(\n+          \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n+          lowerBoundSnapshotPosition);\n+      return Optional.empty();\n+    }\n \n-    final Long previousSnapshotIndex =\n+    final var snapshotIndexedEntry = optionalIndexed.get();\n+    final long previousSnapshotIndex =\n         store.getLatestSnapshot().map(PersistedSnapshot::getCompactionBound).orElse(-1L);\n+    if (snapshotIndexedEntry.index() == previousSnapshotIndex) {\n+      LOG.debug(\n+          \"Previous snapshot was taken for the same indexed entry {}, will not take snapshot.\",\n+          snapshotIndexedEntry);\n+      return Optional.empty();\n+    }\n \n-    final var optTransientSnapshot =\n-        optionalIndexed\n-            .filter(indexed -> indexed.index() != previousSnapshotIndex)\n-            .map(\n-                indexed ->\n-                    store.newTransientSnapshot(\n-                        indexed.index(),\n-                        indexed.entry().term(),\n-                        WallClockTimestamp.from(System.currentTimeMillis())));\n-\n-    optTransientSnapshot.ifPresent(this::createSnapshot);", "originalCommit": "3285cd6f6dbf43bd82fe0d607f8a317c79d33b42", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc5Nzk3MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5196#discussion_r472797971", "bodyText": "Ups :D yeah thanks will revert that \ud83d\ude48", "author": "Zelldon", "createdAt": "2020-08-19T07:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc4NzUxMA=="}], "type": "inlineReview", "revised_code": {"commit": "09f3013618617efbddc2b48305796b81d4158a60", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\nindex 8cea9bec38..73705518f5 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/impl/StateControllerImpl.java\n\n@@ -81,7 +81,7 @@ public class StateControllerImpl implements StateController, PersistedSnapshotLi\n     final var optionalIndexed = entrySupplier.getIndexedEntry(snapshotPosition);\n     if (optionalIndexed.isEmpty()) {\n       LOG.warn(\n-          \"Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n+          \"Failed to take snapshot. Expected to find an indexed entry for given snapshot position {}, but found no matching indexed entry which contains this position.\",\n           lowerBoundSnapshotPosition);\n       return Optional.empty();\n     }\n"}}, {"oid": "09f3013618617efbddc2b48305796b81d4158a60", "url": "https://github.com/camunda-cloud/zeebe/commit/09f3013618617efbddc2b48305796b81d4158a60", "message": "chore(broker): add more specific logs for taking snapshot", "committedDate": "2020-08-19T07:33:46Z", "type": "forcePushed"}, {"oid": "dd450d1c220f5a0aef888432c06814ef61cba8a9", "url": "https://github.com/camunda-cloud/zeebe/commit/dd450d1c220f5a0aef888432c06814ef61cba8a9", "message": "chore(broker): add more specific logs for taking snapshot", "committedDate": "2020-08-19T09:05:24Z", "type": "commit"}, {"oid": "dd450d1c220f5a0aef888432c06814ef61cba8a9", "url": "https://github.com/camunda-cloud/zeebe/commit/dd450d1c220f5a0aef888432c06814ef61cba8a9", "message": "chore(broker): add more specific logs for taking snapshot", "committedDate": "2020-08-19T09:05:24Z", "type": "forcePushed"}]}