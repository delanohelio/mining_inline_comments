{"pr_number": 4128, "pr_title": "chore(broker): step down on failures during leader installation", "pr_createdAt": "2020-03-25T16:46:09Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4128", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NDE0MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398654140", "bodyText": "maybe we can say something about it \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-03-26T15:16:17Z", "path": "broker/src/main/java/io/zeebe/broker/PartitionListener.java", "diffHunk": "@@ -22,8 +25,9 @@\n    * @param partitionId the corresponding partition id\n    * @param term the current term\n    * @param logStream the corresponding log stream\n+   * @return future", "originalCommit": "37ead6141cf9a05f2c38af0a5daf8f18d469294a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f740ad9f696620aa598b75e4260f29328c5d2a26", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/PartitionListener.java b/broker/src/main/java/io/zeebe/broker/PartitionListener.java\nindex b10c793d4..a33b13f61 100644\n--- a/broker/src/main/java/io/zeebe/broker/PartitionListener.java\n+++ b/broker/src/main/java/io/zeebe/broker/PartitionListener.java\n\n@@ -25,7 +25,7 @@ public interface PartitionListener {\n    * @param partitionId the corresponding partition id\n    * @param term the current term\n    * @param logStream the corresponding log stream\n-   * @return future\n+   * @return future that should be completed by the listener\n    */\n   ActorFuture<Void> onBecomingFollower(int partitionId, long term, LogStream logStream);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3NTM2OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398675369", "bodyText": "Btw I think the actor scheduler support a method which accepts multiple future to react on a failure", "author": "Zelldon", "createdAt": "2020-03-26T15:42:34Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -188,12 +190,22 @@ private void leaderTransition(final long newTerm) {\n         .onComplete(\n             (success, error) -> {\n               if (error == null) {\n-                partitionListeners.forEach(\n-                    l -> l.onBecomingLeader(partitionId, newTerm, logStream));\n+                partitionListeners.stream()\n+                    .map(l -> l.onBecomingLeader(partitionId, newTerm, logStream))\n+                    .forEach(\n+                        future ->\n+                            future.onComplete(", "originalCommit": "79a3d2325f8fb1a476311d522effd100e7bfb59b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f740ad9f696620aa598b75e4260f29328c5d2a26", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 65162d48c..b9b819a27 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -190,18 +190,19 @@ public final class ZeebePartition extends Actor\n         .onComplete(\n             (success, error) -> {\n               if (error == null) {\n-                partitionListeners.stream()\n-                    .map(l -> l.onBecomingLeader(partitionId, newTerm, logStream))\n-                    .forEach(\n-                        future ->\n-                            future.onComplete(\n-                                (v, t) -> {\n-                                  // Compare with the current term in case a new role transition\n-                                  // happened\n-                                  if (t != null && this.term == newTerm) {\n-                                    onInstallFailure();\n-                                  }\n-                                }));\n+                final List<ActorFuture<Void>> listenerFutures =\n+                    partitionListeners.stream()\n+                        .map(l -> l.onBecomingLeader(partitionId, newTerm, logStream))\n+                        .collect(Collectors.toList());\n+                actor.runOnCompletion(\n+                    listenerFutures,\n+                    t -> {\n+                      // Compare with the current term in case a new role transition\n+                      // happened\n+                      if (t != null && this.term == newTerm) {\n+                        onInstallFailure();\n+                      }\n+                    });\n                 onRecoveredInternal();\n               } else {\n                 LOG.error(\"Failed to install leader partition {}\", partitionId, error);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3NTY4OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398675689", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // we should probably retry here", "author": "Zelldon", "createdAt": "2020-03-26T15:42:57Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -205,11 +217,11 @@ private void followerTransition(final long newTerm) {\n               if (error == null) {\n                 partitionListeners.forEach(\n                     l -> l.onBecomingFollower(partitionId, newTerm, logStream));\n+                onRecoveredInternal();\n               } else {\n                 LOG.error(\"Failed to install follower partition {}\", partitionId, error);\n-                // TODO https://github.com/zeebe-io/zeebe/issues/3499\n                 // we should probably retry here", "originalCommit": "79a3d2325f8fb1a476311d522effd100e7bfb59b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f740ad9f696620aa598b75e4260f29328c5d2a26", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 65162d48c..b9b819a27 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -215,30 +216,59 @@ public final class ZeebePartition extends Actor\n         .onComplete(\n             (success, error) -> {\n               if (error == null) {\n-                partitionListeners.forEach(\n-                    l -> l.onBecomingFollower(partitionId, newTerm, logStream));\n+                final List<ActorFuture<Void>> listenerFutures =\n+                    partitionListeners.stream()\n+                        .map(l -> l.onBecomingFollower(partitionId, newTerm, logStream))\n+                        .collect(Collectors.toList());\n+                actor.runOnCompletion(\n+                    listenerFutures,\n+                    t -> {\n+                      // Compare with the current term in case a new role transition\n+                      // happened\n+                      if (t != null && this.term == newTerm) {\n+                        onInstallFailure();\n+                      }\n+                    });\n                 onRecoveredInternal();\n               } else {\n                 LOG.error(\"Failed to install follower partition {}\", partitionId, error);\n-                // we should probably retry here\n                 onInstallFailure();\n               }\n             });\n   }\n \n-  private CompletableFuture<Void> inactiveTransition() {\n-    final CompletableFuture<Void> inactiveTransitionFuture = new CompletableFuture<>();\n+  private ActorFuture<Void> inactiveTransition() {\n+    return onTransitionTo(this::transitionToInactive);\n+  }\n+\n+  private void transitionToInactive(final CompletableActorFuture<Void> transitionComplete) {\n+    updateHealthStatus(HealthStatus.UNHEALTHY);\n     closePartition()\n         .onComplete(\n-            (v, t) -> {\n-              if (t != null) {\n-                LOG.error(\"Failed to close partition when transition to inactive role\");\n-                inactiveTransitionFuture.completeExceptionally(t);\n-              } else {\n-                inactiveTransitionFuture.complete(null);\n+            (nothing, error) -> {\n+              if (error != null) {\n+                LOG.error(\"Unexpected exception on transition to inactive role!\", error);\n+                transitionComplete.completeExceptionally(error);\n+                return;\n               }\n+              transitionComplete.complete(null);\n             });\n-    updateHealthStatus(HealthStatus.UNHEALTHY);\n+  }\n+\n+  private CompletableFuture<Void> onRaftFailed() {\n+    final CompletableFuture<Void> inactiveTransitionFuture = new CompletableFuture<>();\n+    actor.run(\n+        () -> {\n+          final ActorFuture<Void> transitionComplete = inactiveTransition();\n+          transitionComplete.onComplete(\n+              (v, t) -> {\n+                if (t != null) {\n+                  inactiveTransitionFuture.completeExceptionally(t);\n+                  return;\n+                }\n+                inactiveTransitionFuture.complete(null);\n+              });\n+        });\n     return inactiveTransitionFuture;\n   }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3ODM3Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398678372", "bodyText": "If we would step down on failure we would try to reinstallt the follower partition right ? Maybe this makes also sense?", "author": "Zelldon", "createdAt": "2020-03-26T15:46:09Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -697,7 +703,19 @@ public void onFailure() {\n \n   @Override\n   public void onRecovered() {\n-    actor.run(() -> updateHealthStatus(HealthStatus.HEALTHY));\n+    actor.run(this::onRecoveredInternal);\n+  }\n+\n+  private void onInstallFailure() {\n+    updateHealthStatus(HealthStatus.UNHEALTHY);\n+    if (atomixRaftPartition.getRole() == Role.LEADER) {\n+      LOG.info(\"Unexpected failures occurred when installing leader services, stepping down\");\n+      atomixRaftPartition.stepDown();", "originalCommit": "79a3d2325f8fb1a476311d522effd100e7bfb59b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDA4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398690086", "bodyText": "Did you mean we step down on all failures? Please see my other comment.", "author": "deepthidevaki", "createdAt": "2020-03-26T16:00:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3ODM3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4MzI0Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398683242", "bodyText": "Why we need to schedule a job here now?", "author": "Zelldon", "createdAt": "2020-03-26T15:52:23Z", "path": "logstreams/src/main/java/io/zeebe/logstreams/impl/log/LogStreamImpl.java", "diffHunk": "@@ -331,17 +337,23 @@ public void addFailureListener(final FailureListener failureListener) {\n \n   @Override\n   public void onFailure() {\n-    if (failureListener != null) {\n-      failureListener.onFailure();\n-    }\n-    closeAsync();\n+    actor.run(", "originalCommit": "79a3d2325f8fb1a476311d522effd100e7bfb59b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY5MDg2Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4128#discussion_r398690867", "bodyText": "This can be called externally by LogStorageAppender when it fails.", "author": "deepthidevaki", "createdAt": "2020-03-26T16:01:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY4MzI0Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f740ad9f696620aa598b75e4260f29328c5d2a26", "url": "https://github.com/camunda-cloud/zeebe/commit/f740ad9f696620aa598b75e4260f29328c5d2a26", "message": "chore(broker): step down on failures during leader installation", "committedDate": "2020-04-01T07:08:45Z", "type": "commit"}, {"oid": "f740ad9f696620aa598b75e4260f29328c5d2a26", "url": "https://github.com/camunda-cloud/zeebe/commit/f740ad9f696620aa598b75e4260f29328c5d2a26", "message": "chore(broker): step down on failures during leader installation", "committedDate": "2020-04-01T07:08:45Z", "type": "forcePushed"}]}