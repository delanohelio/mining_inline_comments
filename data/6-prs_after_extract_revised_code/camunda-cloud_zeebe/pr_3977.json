{"pr_number": 3977, "pr_title": "chore(broker): expose health status via http endpoint", "pr_createdAt": "2020-03-04T13:13:04Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTM2Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871367", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final String baseUrl =\n          \n          \n            \n                    String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n          \n          \n            \n                final String url = baseUrl + \"/health\";\n          \n          \n            \n            \n          \n          \n            \n                try (final CloseableHttpClient client = HttpClients.createDefault()) {\n          \n          \n            \n                  final HttpGet request = new HttpGet(url);\n          \n          \n            \n                  try (final CloseableHttpResponse response = client.execute(request)) {\n          \n          \n            \n                    return response.getStatusLine().getStatusCode() != 503;\n          \n          \n            \n                  }\n          \n          \n            \n                } catch (final IOException e) {\n          \n          \n            \n                  e.printStackTrace();\n          \n          \n            \n                }\n          \n          \n            \n                return false;\n          \n          \n            \n              }\n          \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final var host = monitoringApi.getHost();\n          \n          \n            \n                final var port = monitoringApi.getPort();\n          \n          \n            \n                final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\n          \n          \n            \n                final var client = HttpClient.newHttpClient();\n          \n          \n            \n                final var request = HttpRequest.newBuilder(uri).build();\n          \n          \n            \n            \n          \n          \n            \n                try {\n          \n          \n            \n                  return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\n          \n          \n            \n                } catch (InterruptedException | IOException e) {\n          \n          \n            \n                  LangUtil.rethrowUnchecked(e);\n          \n          \n            \n                  return false; // should not happen\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nJava 11 comes with a build in usable HttpClient (although still no URIBuilder \ud83d\ude44) so we don't need the Apache Components dependency here. We can also reuse it for the other test above.", "author": "npepinpe", "createdAt": "2020-03-06T12:17:39Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());\n             });\n   }\n+\n+  private boolean isBrokerHealthy(final Broker broker) {\n+    final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n+    final String baseUrl =\n+        String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n+    final String url = baseUrl + \"/health\";\n+\n+    try (final CloseableHttpClient client = HttpClients.createDefault()) {\n+      final HttpGet request = new HttpGet(url);\n+      try (final CloseableHttpResponse response = client.execute(request)) {\n+        return response.getStatusLine().getStatusCode() != 503;\n+      }\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+    return false;\n+  }", "originalCommit": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5NTEwMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388895101", "bodyText": "\ud83d\udc4d", "author": "deepthidevaki", "createdAt": "2020-03-06T13:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTM2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "a3624b9322281a9bd12981383d7631fb9a2d2673", "chunk": "diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\nindex e518e5d26d..86f12e9028 100644\n--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\n+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\n\n@@ -78,24 +77,22 @@ public class HealthMonitoringTest {\n               final var filesInSnapshot = snapshot.listFiles();\n               Arrays.stream(filesInSnapshot)\n                   .filter(f -> f.getName().contains(\"MANIFEST\"))\n-                  .forEach(file -> file.delete());\n+                  .forEach(File::delete);\n             });\n   }\n \n   private boolean isBrokerHealthy(final Broker broker) {\n-    final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n-    final String baseUrl =\n-        String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n-    final String url = baseUrl + \"/health\";\n-\n-    try (final CloseableHttpClient client = HttpClients.createDefault()) {\n-      final HttpGet request = new HttpGet(url);\n-      try (final CloseableHttpResponse response = client.execute(request)) {\n-        return response.getStatusLine().getStatusCode() != 503;\n-      }\n-    } catch (final IOException e) {\n-      e.printStackTrace();\n+    final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n+    final var host = monitoringApi.getHost();\n+    final var port = monitoringApi.getPort();\n+    final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\n+    final var client = HttpClient.newHttpClient();\n+    final var request = HttpRequest.newBuilder(uri).build();\n+    try {\n+      return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\n+    } catch (final InterruptedException | IOException e) {\n+      LangUtil.rethrowUnchecked(e);\n+      return false; // should not happen\n     }\n-    return false;\n   }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTg4Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871883", "bodyText": "We should use the method reference syntax wherever possible\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              .forEach(file -> file.delete());\n          \n          \n            \n                              .forEach(File::delete);", "author": "npepinpe", "createdAt": "2020-03-06T12:18:56Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());", "originalCommit": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a3624b9322281a9bd12981383d7631fb9a2d2673", "chunk": "diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\nindex e518e5d26d..86f12e9028 100644\n--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\n+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java\n\n@@ -78,24 +77,22 @@ public class HealthMonitoringTest {\n               final var filesInSnapshot = snapshot.listFiles();\n               Arrays.stream(filesInSnapshot)\n                   .filter(f -> f.getName().contains(\"MANIFEST\"))\n-                  .forEach(file -> file.delete());\n+                  .forEach(File::delete);\n             });\n   }\n \n   private boolean isBrokerHealthy(final Broker broker) {\n-    final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n-    final String baseUrl =\n-        String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n-    final String url = baseUrl + \"/health\";\n-\n-    try (final CloseableHttpClient client = HttpClients.createDefault()) {\n-      final HttpGet request = new HttpGet(url);\n-      try (final CloseableHttpResponse response = client.execute(request)) {\n-        return response.getStatusLine().getStatusCode() != 503;\n-      }\n-    } catch (final IOException e) {\n-      e.printStackTrace();\n+    final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n+    final var host = monitoringApi.getHost();\n+    final var port = monitoringApi.getPort();\n+    final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\n+    final var client = HttpClient.newHttpClient();\n+    final var request = HttpRequest.newBuilder(uri).build();\n+    try {\n+      return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\n+    } catch (final InterruptedException | IOException e) {\n+      LangUtil.rethrowUnchecked(e);\n+      return false; // should not happen\n     }\n-    return false;\n   }\n }\n"}}, {"oid": "a3624b9322281a9bd12981383d7631fb9a2d2673", "url": "https://github.com/camunda-cloud/zeebe/commit/a3624b9322281a9bd12981383d7631fb9a2d2673", "message": "chore(test): fix codestyle", "committedDate": "2020-03-06T13:11:35Z", "type": "forcePushed"}, {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "message": "chore(broker): expose health status via http endpoint", "committedDate": "2020-03-06T13:23:49Z", "type": "commit"}, {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "message": "chore(broker): expose health status via http endpoint", "committedDate": "2020-03-06T13:23:49Z", "type": "forcePushed"}]}