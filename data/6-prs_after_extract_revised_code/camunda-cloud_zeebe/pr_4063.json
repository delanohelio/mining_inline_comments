{"pr_number": 4063, "pr_title": "Remove maxSnapshotCount config setting", "pr_createdAt": "2020-03-17T10:18:34Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4063", "timeline": [{"oid": "8b02113cf038b85108829ddc80379c7beea796d5", "url": "https://github.com/camunda-cloud/zeebe/commit/8b02113cf038b85108829ddc80379c7beea796d5", "message": "chore(broker): remove maxSnapshotCount config setting\n\nThis commit removes the maxSnapshotCount configuration setting from the\nDataCfg. From now on we can asume there is always only a maximum of 1\nsnapshot present at any time.", "committedDate": "2020-03-17T10:51:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393625485", "bodyText": "I think this would work also if the latest is the same as the previous right? It then returns and I think it is a bit misleading that it says waitForNew.. ?", "author": "Zelldon", "createdAt": "2020-03-17T11:56:08Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java", "diffHunk": "@@ -606,16 +610,40 @@ public File getSnapshotsDirectory(final Broker broker) {\n     return new File(dataDir, RAFT_PARTITION_PATH + \"/snapshots\");\n   }\n \n-  public void waitForValidSnapshotAtBroker(final Broker broker) {\n-    waitForValidSnapshotAtBroker(broker, 1);\n+  public DbSnapshotMetadata waitForSnapshotAtBroker(final Broker broker) {\n+    return waitForNewSnapshotAtBroker(broker, null);\n   }\n \n-  void waitForValidSnapshotAtBroker(final Broker broker, final int snapshotCount) {\n+  DbSnapshotMetadata waitForNewSnapshotAtBroker(\n+      final Broker broker, final DbSnapshotMetadata previousSnapshot) {\n+    final var referenceToResult = new AtomicReference<>(Optional.<DbSnapshotMetadata>empty());\n     final File snapshotsDir = getSnapshotsDirectory(broker);\n     waitUntil(\n-        () ->\n-            Optional.ofNullable(snapshotsDir.listFiles()).map(f -> f.length).orElse(0)\n-                >= snapshotCount);\n+        () -> {\n+          final File[] files = snapshotsDir.listFiles();\n+          if (files == null || files.length == 0) {\n+            return false;\n+          }\n+          final Optional<DbSnapshotMetadata> latestSnapshot =\n+              Arrays.stream(files)\n+                  .map(File::toPath)\n+                  .map(DbSnapshotMetadata::ofPath)\n+                  .flatMap(Optional::stream)\n+                  .max(Comparator.naturalOrder());\n+          if (previousSnapshot != null", "originalCommit": "8b02113cf038b85108829ddc80379c7beea796d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2MDI2NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393660265", "bodyText": "No that is not correct. Either previousSnapshot is null, in which case it is enough to just find a snapshot. Or previousSnapshot is not null, in which case latestSnapshot.map(previousSnapshot::compareTo).orElse(0) needs to be -1 for the latest to actually be newer than the previous. The compareTo will return 0 if the previousSnapshot and the latestSnapshot are the same.\nI've tried an early return (with exceptional cases first) approach to this method. So only in the last return return true it will have actually found something and stop waiting.", "author": "korthout", "createdAt": "2020-03-17T13:00:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2NTc3OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393665778", "bodyText": "latestSnapshot.map(previousSnapshot::compareTo).orElse(0)\n\nIs translated to:\nif (latestSnapshot != null)\n{\n\n  return latestsnapshot.compareTo(previousSnapshot); // return 1 when latest bigger, 0 when equal, -1 when smaller\n}\nreturn 0;\n\nOr is it previousSnapshot.compareTo(latestSnapshot) ? \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-03-17T13:09:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MTQxNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393671416", "bodyText": "It's actually:\nlatestSnapshot.map(latestSnapshot -> previousSnapshot.compareTo(latestSnapshot)).orElse(0)", "author": "korthout", "createdAt": "2020-03-17T13:18:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MjczOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393672739", "bodyText": "So,\nif latest is empty, the result 0.\nIf previous is before latest, the result is -1.\nIf previous is the same as latest, the result is 0.\nIf previous is after latest, the result is 1.", "author": "korthout", "createdAt": "2020-03-17T13:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3MzM4Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393673383", "bodyText": "Only the case where previous is before the latest (or in other words, the latest is actually the newest) it stops waiting", "author": "korthout", "createdAt": "2020-03-17T13:21:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4ODAxMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393688010", "bodyText": "Ok sorry I get it now. As you can see it was for me not easy to understand \ud83d\ude05  I always find this streaming api and compare a bit confusing \ud83d\ude05 But might be just me. If it is actually previousSnapshot.compareTo(latestSnapshot) then yes it makes sense otherwise it would not \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-03-17T13:43:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMjA5NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393722094", "bodyText": "Yeah, streaming api can be confusing (just remember that it is a method reference, so in this case it will apply the provided method with the values in the Optional/Stream as argument).\nI have to add that I also wrote it a little confusing, but I wanted to maintain a return early approach. Perhaps I can have another look at it, to make it less confusing.", "author": "korthout", "createdAt": "2020-03-17T14:30:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc0NTU4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393745586", "bodyText": "@Zelldon Would this be more readable?\nfinal Optional<DbSnapshotMetadata> latestSnapshot = ...\nif (latestSnapshot.isEmpty()) {\n  return false;\n}\nif (previousSnapshot != null && previousSnapshot.compareTo(latestSnapshot.get()) > -1) {\n  return false;\n}\n// latestSnapshot is newer than previousSnapshot (or previous is null)\nreferenceToResult.set(latestSnapshot);\nreturn true;\n\nInstead of\nfinal Optional<DbSnapshotMetadata> latestSnapshot = ...\nif (previousSnapshot != null \n    && latestSnapshot.map(previousSnapshot::compareTo).orElse(0) > -1) {\n  return false;\n}\n// latestSnapshot is newer than previousSnapshot (or previous is null)\nreferenceToResult.set(latestSnapshot);\nreturn true;", "author": "korthout", "createdAt": "2020-03-17T15:02:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjQyOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393892428", "bodyText": "Yes I think it is easier from my point of view", "author": "Zelldon", "createdAt": "2020-03-17T18:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMTA1MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r394201051", "bodyText": "Ok, changed it.", "author": "korthout", "createdAt": "2020-03-18T09:16:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNTQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "18f67ba42764aee3a4421b4f5ff1c55e3a63ae8a", "chunk": "diff --git a/qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java b/qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java\nindex e5f3a29573..d5605e29cd 100644\n--- a/qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java\n+++ b/qa/integration-tests/src/test/java/io/zeebe/broker/it/clustering/ClusteringRule.java\n\n@@ -630,8 +630,10 @@ public final class ClusteringRule extends ExternalResource {\n                   .map(DbSnapshotMetadata::ofPath)\n                   .flatMap(Optional::stream)\n                   .max(Comparator.naturalOrder());\n-          if (previousSnapshot != null\n-              && latestSnapshot.map(previousSnapshot::compareTo).orElse(0) > -1) {\n+          if (latestSnapshot.isEmpty()) {\n+            return false;\n+          }\n+          if (previousSnapshot != null && previousSnapshot.compareTo(latestSnapshot.get()) > -1) {\n             return false;\n           }\n           // latestSnapshot is newer than previousSnapshot\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNjgwNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393626807", "bodyText": "Please create a separate issue for this todo and the best would be also to reference it in the todo", "author": "Zelldon", "createdAt": "2020-03-17T11:58:38Z", "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java", "diffHunk": "@@ -146,6 +143,8 @@ public void onNewSnapshot(\n     metrics.incrementSnapshotCount();\n     observeSnapshotSize(snapshot);\n \n+    // todo: simplify now that maxSnapshotCount can only be 1", "originalCommit": "8b02113cf038b85108829ddc80379c7beea796d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY1NzMwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393657300", "bodyText": "Will do \ud83d\udc4d", "author": "korthout", "createdAt": "2020-03-17T12:55:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYyNjgwNw=="}], "type": "inlineReview", "revised_code": {"commit": "3bb045bfb0a23f84fe8a306fb569b4929be51fbd", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\nindex a8b814d87c..1034ec5c3c 100644\n--- a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n+++ b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n\n@@ -145,7 +146,7 @@ public final class AtomixSnapshotStorage implements SnapshotStorage, SnapshotLis\n \n     // todo: simplify now that maxSnapshotCount can only be 1\n     final int maxSnapshotCount = 1;\n-    if (snapshots.size() >= maxSnapshotCount) {\n+    if (snapshots.size() > maxSnapshotCount) {\n       // by the condition it's guaranteed there be a snapshot after skipping maxSnapshotCount - 1\n       @SuppressWarnings(\"squid:S3655\")\n       final var oldest =\n"}}, {"oid": "3bb045bfb0a23f84fe8a306fb569b4929be51fbd", "url": "https://github.com/camunda-cloud/zeebe/commit/3bb045bfb0a23f84fe8a306fb569b4929be51fbd", "message": "chore(broker): remove maxSnapshotCount config setting\n\nThis commit removes the maxSnapshotCount configuration setting from the\nDataCfg. From now on we can asume there is always only a maximum of 1\nsnapshot present at any time.", "committedDate": "2020-03-17T12:54:50Z", "type": "forcePushed"}, {"oid": "f3b19ca40b31dbd806e2bae7e549cfff1c76ba1a", "url": "https://github.com/camunda-cloud/zeebe/commit/f3b19ca40b31dbd806e2bae7e549cfff1c76ba1a", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-17T14:27:24Z", "type": "forcePushed"}, {"oid": "b6ee20965cd1182c3b639b161ad06d80234db612", "url": "https://github.com/camunda-cloud/zeebe/commit/b6ee20965cd1182c3b639b161ad06d80234db612", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-17T14:33:35Z", "type": "forcePushed"}, {"oid": "b05a729df45ef847f9103ca36a10ddd73fde0f4c", "url": "https://github.com/camunda-cloud/zeebe/commit/b05a729df45ef847f9103ca36a10ddd73fde0f4c", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-17T16:28:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgxMDU5MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393810590", "bodyText": "Created #4067 for this", "author": "korthout", "createdAt": "2020-03-17T16:30:48Z", "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java", "diffHunk": "@@ -142,31 +139,17 @@ public SnapshotMetrics getMetrics() {\n   public void onNewSnapshot(\n       final io.atomix.protocols.raft.storage.snapshot.Snapshot snapshot,\n       final SnapshotStore store) {\n-    final var snapshots = store.getSnapshots();\n     metrics.incrementSnapshotCount();\n     observeSnapshotSize(snapshot);\n \n-    if (snapshots.size() >= maxSnapshotCount) {\n-      // by the condition it's guaranteed there be a snapshot after skipping maxSnapshotCount - 1\n-      @SuppressWarnings(\"squid:S3655\")\n-      final var oldest =\n-          snapshots.stream()\n-              .sorted(Comparator.reverseOrder())\n-              .skip(maxSnapshotCount - 1L)\n-              .findFirst()\n-              .get();\n-\n-      LOGGER.info(\n-          \"Max snapshot count reached ({}), purging snapshots older than {}\",\n-          snapshots.size(),\n-          oldest);\n-      store.purgeSnapshots(oldest);\n-\n-      final var optionalConverted = toSnapshot(oldest.getPath());\n-      if (optionalConverted.isPresent()) {\n-        final var converted = optionalConverted.get();\n-        deletionListeners.forEach(listener -> listener.onSnapshotsDeleted(converted));\n-      }\n+    LOGGER.info(\"Purging snapshots older than {}\", snapshot);\n+    store.purgeSnapshots(snapshot);\n+\n+    final var optionalConverted = toSnapshot(snapshot.getPath());\n+    if (optionalConverted.isPresent()) {\n+      final var converted = optionalConverted.get();\n+      // TODO #4067(@korthout): rename onSnapshotsDeleted, because it doesn't always delete", "originalCommit": "b05a729df45ef847f9103ca36a10ddd73fde0f4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjUyOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393892529", "bodyText": "nice thanks", "author": "Zelldon", "createdAt": "2020-03-17T18:39:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgxMDU5MA=="}], "type": "inlineReview", "revised_code": {"commit": "523caf792b78142319e7cad660ac483c2910f015", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\nindex 5eec7d0419..a1b4280d25 100644\n--- a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n+++ b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n\n@@ -142,7 +142,7 @@ public final class AtomixSnapshotStorage implements SnapshotStorage, SnapshotLis\n     metrics.incrementSnapshotCount();\n     observeSnapshotSize(snapshot);\n \n-    LOGGER.info(\"Purging snapshots older than {}\", snapshot);\n+    LOGGER.debug(\"Purging snapshots older than {}\", snapshot);\n     store.purgeSnapshots(snapshot);\n \n     final var optionalConverted = toSnapshot(snapshot.getPath());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjkwNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393892907", "bodyText": "Probably debug level is enough here", "author": "Zelldon", "createdAt": "2020-03-17T18:40:04Z", "path": "broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java", "diffHunk": "@@ -142,31 +139,17 @@ public SnapshotMetrics getMetrics() {\n   public void onNewSnapshot(\n       final io.atomix.protocols.raft.storage.snapshot.Snapshot snapshot,\n       final SnapshotStore store) {\n-    final var snapshots = store.getSnapshots();\n     metrics.incrementSnapshotCount();\n     observeSnapshotSize(snapshot);\n \n-    if (snapshots.size() >= maxSnapshotCount) {\n-      // by the condition it's guaranteed there be a snapshot after skipping maxSnapshotCount - 1\n-      @SuppressWarnings(\"squid:S3655\")\n-      final var oldest =\n-          snapshots.stream()\n-              .sorted(Comparator.reverseOrder())\n-              .skip(maxSnapshotCount - 1L)\n-              .findFirst()\n-              .get();\n-\n-      LOGGER.info(\n-          \"Max snapshot count reached ({}), purging snapshots older than {}\",\n-          snapshots.size(),\n-          oldest);\n-      store.purgeSnapshots(oldest);\n-\n-      final var optionalConverted = toSnapshot(oldest.getPath());\n-      if (optionalConverted.isPresent()) {\n-        final var converted = optionalConverted.get();\n-        deletionListeners.forEach(listener -> listener.onSnapshotsDeleted(converted));\n-      }\n+    LOGGER.info(\"Purging snapshots older than {}\", snapshot);", "originalCommit": "b05a729df45ef847f9103ca36a10ddd73fde0f4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwODc1MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393908751", "bodyText": "Where would we normally draw the line between info and debug?", "author": "korthout", "createdAt": "2020-03-17T19:09:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjkwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0ODI5MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r393948290", "bodyText": "I think it is often not easy to decide. But maybe it helps to think from the user point of view. Does he needs to know it? What is the benefit or what can he do with this knowledge? Maybe also if we keep it on info the more context would be interesting. which dirs have been deleted", "author": "Zelldon", "createdAt": "2020-03-17T20:25:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjkwNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMzU5OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4063#discussion_r394203599", "bodyText": "Agreed. At this location it is not that interesting because purging does not necessarily mean that a snapshot was deleted. This is to be tackled in #4067. I've changed it to debug level now.", "author": "korthout", "createdAt": "2020-03-18T09:20:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5MjkwNw=="}], "type": "inlineReview", "revised_code": {"commit": "523caf792b78142319e7cad660ac483c2910f015", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\nindex 5eec7d0419..a1b4280d25 100644\n--- a/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n+++ b/broker/src/main/java/io/zeebe/broker/clustering/atomix/storage/snapshot/AtomixSnapshotStorage.java\n\n@@ -142,7 +142,7 @@ public final class AtomixSnapshotStorage implements SnapshotStorage, SnapshotLis\n     metrics.incrementSnapshotCount();\n     observeSnapshotSize(snapshot);\n \n-    LOGGER.info(\"Purging snapshots older than {}\", snapshot);\n+    LOGGER.debug(\"Purging snapshots older than {}\", snapshot);\n     store.purgeSnapshots(snapshot);\n \n     final var optionalConverted = toSnapshot(snapshot.getPath());\n"}}, {"oid": "18f67ba42764aee3a4421b4f5ff1c55e3a63ae8a", "url": "https://github.com/camunda-cloud/zeebe/commit/18f67ba42764aee3a4421b4f5ff1c55e3a63ae8a", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-18T09:14:14Z", "type": "forcePushed"}, {"oid": "523caf792b78142319e7cad660ac483c2910f015", "url": "https://github.com/camunda-cloud/zeebe/commit/523caf792b78142319e7cad660ac483c2910f015", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-18T09:18:16Z", "type": "forcePushed"}, {"oid": "f19f7852d5d11c589e46af2cc66894be2b9eff70", "url": "https://github.com/camunda-cloud/zeebe/commit/f19f7852d5d11c589e46af2cc66894be2b9eff70", "message": "chore(broker): remove maxSnapshotCount config setting\n\nThis commit removes the maxSnapshotCount configuration setting from the\nDataCfg. From now on we can asume there is always only a maximum of 1\nsnapshot present at any time.", "committedDate": "2020-03-18T12:35:51Z", "type": "commit"}, {"oid": "13e0e88082c5dec8b4d6134d560cbd9920e31fa4", "url": "https://github.com/camunda-cloud/zeebe/commit/13e0e88082c5dec8b4d6134d560cbd9920e31fa4", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-18T12:36:59Z", "type": "commit"}, {"oid": "13e0e88082c5dec8b4d6134d560cbd9920e31fa4", "url": "https://github.com/camunda-cloud/zeebe/commit/13e0e88082c5dec8b4d6134d560cbd9920e31fa4", "message": "docs(broker): change snapshot config description\n\nRemoving maxSnapshotCount removes the way we discuss deletion of logs\nbecause don't have to consider a count anymore, but can just say that a\nsnapshot is enough. A log is truncated when it is part of a known\nsnapshot.", "committedDate": "2020-03-18T12:36:59Z", "type": "forcePushed"}, {"oid": "8a0071882ccdc2b37e795b24c795205c53807ffb", "url": "https://github.com/camunda-cloud/zeebe/commit/8a0071882ccdc2b37e795b24c795205c53807ffb", "message": "chore(broker): remove maxSnapshots from default config", "committedDate": "2020-03-18T13:16:06Z", "type": "commit"}]}