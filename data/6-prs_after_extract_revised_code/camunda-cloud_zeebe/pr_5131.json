{"pr_number": 5131, "pr_title": "chore(benchmarks): add complete job with variables to worker", "pr_createdAt": "2020-08-07T09:48:29Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5131", "timeline": [{"oid": "27804e470bac7c3e898ca77f770b6868883f9d9a", "url": "https://github.com/camunda-cloud/zeebe/commit/27804e470bac7c3e898ca77f770b6868883f9d9a", "message": "chore(benchmarks): add complete job with variables to worker\n\nThis commit allows the job worker for benchmarks to be configured such\nthat it completes the jobs it's working on with a specific variable.\n\nThis can be configured using: `app.worker.variablesToCompleteJobWith`\nwhich takes a string repressentation of the variables to send along with\nthe CompleteJobCommand.", "committedDate": "2020-08-07T09:45:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MzAwNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5131#discussion_r467763005", "bodyText": "Hm this would change our default logic right?", "author": "Zelldon", "createdAt": "2020-08-10T08:42:54Z", "path": "benchmarks/project/src/main/java/io/zeebe/Worker.java", "diffHunk": "@@ -56,7 +57,7 @@ public void run() {\n                   requestFutures.add(\n                       jobClient\n                           .newCompleteCommand(job.getKey())\n-                          .variables(job.getVariables())\n+                          .variables(variablesToCompleteJobWith)", "originalCommit": "27804e470bac7c3e898ca77f770b6868883f9d9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNTQ3NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5131#discussion_r468515474", "bodyText": "Yes, but only when there is a race condition, otherwise this doesn't change anything. Secondly, it is bad practice to complete jobs with all received variables because of this anyways.", "author": "korthout", "createdAt": "2020-08-11T11:39:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MzAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNjUxNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5131#discussion_r468516517", "bodyText": "how is this a race condition? \ud83d\ude05 You set it to empty now per default \ud83e\udd14", "author": "Zelldon", "createdAt": "2020-08-11T11:40:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MzAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUyOTYzMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5131#discussion_r468529631", "bodyText": "There isn't now, but if this task is parallelised and there is some other change made to those variables in the mean time then it is. That is as well the only change in logic that is possible. Currently, all received variables are sent along with the complete job command and merged into (i.e. overwritten) in the workflow instance. So nothing really happens, because they are overwritten with the same value. We consider this bad practice because it can easily lead to race conditions when you parallelise part of the workflow.\nCompleting the job with no variables, just means that no variables will be merged into the workflow instance", "author": "korthout", "createdAt": "2020-08-11T12:05:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MzAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzOTc4OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5131#discussion_r468539788", "bodyText": "Please lets discuss via zoom", "author": "Zelldon", "createdAt": "2020-08-11T12:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc2MzAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "d3e10c6eafa07656c50273a5184982fdb1bb3be8", "chunk": "diff --git a/benchmarks/project/src/main/java/io/zeebe/Worker.java b/benchmarks/project/src/main/java/io/zeebe/Worker.java\nindex 8299ec957b..1a2b704aa3 100644\n--- a/benchmarks/project/src/main/java/io/zeebe/Worker.java\n+++ b/benchmarks/project/src/main/java/io/zeebe/Worker.java\n\n@@ -55,10 +55,7 @@ public class Worker extends App {\n                     e.printStackTrace();\n                   }\n                   requestFutures.add(\n-                      jobClient\n-                          .newCompleteCommand(job.getKey())\n-                          .variables(variablesToCompleteJobWith)\n-                          .send());\n+                      jobClient.newCompleteCommand(job.getKey()).variables(variables).send());\n                 })\n             .open();\n \n"}}, {"oid": "d3e10c6eafa07656c50273a5184982fdb1bb3be8", "url": "https://github.com/camunda-cloud/zeebe/commit/d3e10c6eafa07656c50273a5184982fdb1bb3be8", "message": "chore(worker): read payload from file", "committedDate": "2020-08-11T13:07:33Z", "type": "commit"}, {"oid": "480d78953d3cbe8ad3d6caf9557a73dde56b6141", "url": "https://github.com/camunda-cloud/zeebe/commit/480d78953d3cbe8ad3d6caf9557a73dde56b6141", "message": "chore(benchmark): support file location for payload", "committedDate": "2020-08-18T09:21:40Z", "type": "commit"}]}