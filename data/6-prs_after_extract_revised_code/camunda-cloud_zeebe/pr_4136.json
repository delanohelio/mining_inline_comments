{"pr_number": 4136, "pr_title": "Add atomix to the project", "pr_createdAt": "2020-03-27T09:49:01Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4136", "timeline": [{"oid": "e76d9256080e4e3331cfdd786210780e9b00ea35", "url": "https://github.com/camunda-cloud/zeebe/commit/e76d9256080e4e3331cfdd786210780e9b00ea35", "message": "chore(project): use new atomix version", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "08bbc8074448137b4b6a0d347dd8edc69fa9f335", "url": "https://github.com/camunda-cloud/zeebe/commit/08bbc8074448137b4b6a0d347dd8edc69fa9f335", "message": "chore(atomix): add atomix to project", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "5f158b30ef5c6cfd9357f4c738d544102bc9b4c4", "url": "https://github.com/camunda-cloud/zeebe/commit/5f158b30ef5c6cfd9357f4c738d544102bc9b4c4", "message": "chore(atomix): fix pom", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "bb3ea1f22e96708da905d86f99ff289c6ca10053", "url": "https://github.com/camunda-cloud/zeebe/commit/bb3ea1f22e96708da905d86f99ff289c6ca10053", "message": "chore(atomix/journal): fix journal test", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "51ff102ea29930c12b5d9df0e12e8a2076a82ee2", "url": "https://github.com/camunda-cloud/zeebe/commit/51ff102ea29930c12b5d9df0e12e8a2076a82ee2", "message": "chore(atomix/cluster): fix flaky test", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "96d253c49ac238f6d9a3a5d9fc8e1378018f13ab", "url": "https://github.com/camunda-cloud/zeebe/commit/96d253c49ac238f6d9a3a5d9fc8e1378018f13ab", "message": "chore(atomix/utils): improve single ctx", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "0f9458a89e00b7d73859225a3f82422d1106fdcc", "url": "https://github.com/camunda-cloud/zeebe/commit/0f9458a89e00b7d73859225a3f82422d1106fdcc", "message": "chore(atomix/cluster): use tempfolder in tests", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "b096756507cf09952e4cf95f57e7cbb61ead3ad4", "url": "https://github.com/camunda-cloud/zeebe/commit/b096756507cf09952e4cf95f57e7cbb61ead3ad4", "message": "chore(atomix/core): fix atomix tests\n\n * Use temp folders\n * use socket utility to get next free socket", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "2dd6d5765ad57388b6a3dde86682594a020e7768", "url": "https://github.com/camunda-cloud/zeebe/commit/2dd6d5765ad57388b6a3dde86682594a020e7768", "message": "chore(atomix): adjust copyright for Zeebe files", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "179259890a1dceebd36e6303eb00c9f37961a3cf", "url": "https://github.com/camunda-cloud/zeebe/commit/179259890a1dceebd36e6303eb00c9f37961a3cf", "message": "chore(atomix): add camunda copyright", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "0388cfecd95002166476433ab7602dcbdd65766a", "url": "https://github.com/camunda-cloud/zeebe/commit/0388cfecd95002166476433ab7602dcbdd65766a", "message": "chore(atomix): add missing license headers", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "b6f0599714aae7103d8a53376aba7c4f305cae02", "url": "https://github.com/camunda-cloud/zeebe/commit/b6f0599714aae7103d8a53376aba7c4f305cae02", "message": "chore(atomix): finalize license plugin cfg\n\n License headers are only changed and added for new files which don't have a license header yet.", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "703c01c9636171d8ea14e89111e1e19ebbfa2ad6", "url": "https://github.com/camunda-cloud/zeebe/commit/703c01c9636171d8ea14e89111e1e19ebbfa2ad6", "message": "chore(atomix): remove unnecessary file", "committedDate": "2020-03-31T20:32:57Z", "type": "commit"}, {"oid": "b6444454bcedb0f466b5ff0673a2608c78d561ba", "url": "https://github.com/camunda-cloud/zeebe/commit/b6444454bcedb0f466b5ff0673a2608c78d561ba", "message": "chore(atomix): simplify atomix pom's", "committedDate": "2020-03-31T20:34:03Z", "type": "commit"}, {"oid": "17a014a16c565a5f578b12ecd6d159b18864a782", "url": "https://github.com/camunda-cloud/zeebe/commit/17a014a16c565a5f578b12ecd6d159b18864a782", "message": "chore(atomix): delete gitignore", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "7acb49cdfb662cd4f8b4e21f98b1f4630251ec67", "url": "https://github.com/camunda-cloud/zeebe/commit/7acb49cdfb662cd4f8b4e21f98b1f4630251ec67", "message": "chore(parent): introduce plugin version variables", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "0082a3d3e41927702e97ed37dd3ee6bcc567854e", "url": "https://github.com/camunda-cloud/zeebe/commit/0082a3d3e41927702e97ed37dd3ee6bcc567854e", "message": "chore(atomix/cluster): fix concurrency issue", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "afbc769eec277cb6f30d614d2ba66e065a1c960e", "url": "https://github.com/camunda-cloud/zeebe/commit/afbc769eec277cb6f30d614d2ba66e065a1c960e", "message": "chore(atomix/cluster): fix overflow issue", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "790ed604d61b003a24fabc78bdf4b78b28048f9f", "url": "https://github.com/camunda-cloud/zeebe/commit/790ed604d61b003a24fabc78bdf4b78b28048f9f", "message": "chore(atomix): add comment for LGTM false positive", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "13c607a23b84289cef4480146384b40e4c391124", "url": "https://github.com/camunda-cloud/zeebe/commit/13c607a23b84289cef4480146384b40e4c391124", "message": "chore(atomix): fix LGTM issues", "committedDate": "2020-03-31T20:34:05Z", "type": "commit"}, {"oid": "13c607a23b84289cef4480146384b40e4c391124", "url": "https://github.com/camunda-cloud/zeebe/commit/13c607a23b84289cef4480146384b40e4c391124", "message": "chore(atomix): fix LGTM issues", "committedDate": "2020-03-31T20:34:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc4NzY1Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r401787652", "bodyText": "Can't tell if it's clever to accept a format or confusing \ud83d\ude05", "author": "npepinpe", "createdAt": "2020-04-01T17:30:11Z", "path": "atomix/cluster/src/main/java/io/atomix/cluster/messaging/impl/NettyMessagingService.java", "diffHunk": "@@ -339,7 +339,7 @@ private boolean loadKeyStores() {\n         logKeyStore(ks, ksLocation, ksPwd);\n       }\n     } catch (final FileNotFoundException e) {\n-      throw new AtomixRuntimeException(\"Could not load cluster keystore: {}\", e.getMessage());\n+      throw new AtomixRuntimeException(\"Could not load cluster keystore: %s\", e.getMessage());", "originalCommit": "13c607a23b84289cef4480146384b40e4c391124", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc5OTU1OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r401799559", "bodyText": "Yeah didn't wanted to rewrite the complete stuff \ud83e\udd37\u200d\u2642\ufe0f", "author": "Zelldon", "createdAt": "2020-04-01T17:50:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc4NzY1Mg=="}], "type": "inlineReview", "revised_code": null}, {"oid": "01e5a7989f36257c5973f2139055e4e808651b71", "url": "https://github.com/camunda-cloud/zeebe/commit/01e5a7989f36257c5973f2139055e4e808651b71", "message": "chore(atomix): adjust README", "committedDate": "2020-04-01T19:38:05Z", "type": "commit"}, {"oid": "6d8d43d6f99f905b1d8fe8f2b90a54e421dfa184", "url": "https://github.com/camunda-cloud/zeebe/commit/6d8d43d6f99f905b1d8fe8f2b90a54e421dfa184", "message": "chore(atomix): use super for method call", "committedDate": "2020-04-01T19:49:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3MTIxMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r402071210", "bodyText": "\ud83d\udc4d", "author": "npepinpe", "createdAt": "2020-04-02T06:08:01Z", "path": "atomix/core/src/test/java/io/atomix/core/AbstractAtomixTest.java", "diffHunk": "@@ -18,64 +18,60 @@\n import io.atomix.cluster.Node;\n import io.atomix.cluster.discovery.BootstrapDiscoveryProvider;\n import io.atomix.cluster.discovery.MulticastDiscoveryProvider;\n-import io.atomix.core.profile.Profile;\n import io.atomix.utils.net.Address;\n+import io.zeebe.test.util.socket.SocketUtil;\n import java.io.File;\n import java.io.IOException;\n-import java.net.ServerSocket;\n-import java.nio.file.FileVisitResult;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.SimpleFileVisitor;\n-import java.nio.file.attribute.BasicFileAttributes;\n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Properties;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.rules.TemporaryFolder;\n \n /** Base Atomix test. */\n public abstract class AbstractAtomixTest {\n-  protected static final File DATA_DIR = new File(System.getProperty(\"user.dir\"), \".data\");", "originalCommit": "b096756507cf09952e4cf95f57e7cbb61ead3ad4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3MTQ1OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r402071459", "bodyText": "\ud83d\udc4d", "author": "npepinpe", "createdAt": "2020-04-02T06:08:42Z", "path": "atomix/core/src/test/java/io/atomix/core/AbstractAtomixTest.java", "diffHunk": "@@ -84,76 +80,30 @@ protected static AtomixBuilder buildAtomix(\n                 : new MulticastDiscoveryProvider());\n   }\n \n-  /** Creates an Atomix instance. */\n-  protected static Atomix createAtomix(\n-      final int id, final List<Integer> bootstrapIds, final Profile... profiles) {\n-    return createAtomix(id, bootstrapIds, new Properties(), profiles);\n+  private Address getAddress(final Integer memberId) {\n+    return addressMap.computeIfAbsent(\n+        memberId,\n+        newId -> {\n+          final var nextInetAddress = SocketUtil.getNextAddress();", "originalCommit": "b096756507cf09952e4cf95f57e7cbb61ead3ad4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3Mzc4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r402073786", "bodyText": "So this will now call AbstractSession#decode instead of LogProxySession#decode, since LocalSession was a non-static inner class. I guess I don't understand the change here \ud83e\udd14", "author": "npepinpe", "createdAt": "2020-04-02T06:15:09Z", "path": "atomix/cluster/src/main/java/io/atomix/primitive/proxy/impl/LogProxySession.java", "diffHunk": "@@ -441,7 +441,7 @@ public void publish(final PrimitiveEvent event) {\n         final Method method = eventMethods.get(event.type());\n         if (method != null) {\n           try {\n-            method.invoke(client, (Object[]) decode(event.value()));\n+            method.invoke(client, (Object[]) super.decode(event.value()));", "originalCommit": "6d8d43d6f99f905b1d8fe8f2b90a54e421dfa184", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA4MDgyNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/4136#discussion_r402080825", "bodyText": "The thing is it also called before the super but it was not explicit. If you inherit a method then you will call it before calling methods from outer scope. If you want to call LocalProxySession#decode you need to write. LocalProxySession.this.decode()", "author": "Zelldon", "createdAt": "2020-04-02T06:34:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3Mzc4Ng=="}], "type": "inlineReview", "revised_code": null}]}