{"pr_number": 5067, "pr_title": "Avoid JVM crashes on closing the broker", "pr_createdAt": "2020-07-28T06:09:20Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5067", "timeline": [{"oid": "b0022e5d2c6776db1444796f135ca9e8f11912a4", "url": "https://github.com/camunda-cloud/zeebe/commit/b0022e5d2c6776db1444796f135ca9e8f11912a4", "message": "chore(util): more logging when closing the actor scheduler", "committedDate": "2020-07-27T11:16:53Z", "type": "commit"}, {"oid": "853a3278cb8317669a405d333f9a1c8765f70e61", "url": "https://github.com/camunda-cloud/zeebe/commit/853a3278cb8317669a405d333f9a1c8765f70e61", "message": "chore(broker): more logging when closing a partition", "committedDate": "2020-07-27T11:20:01Z", "type": "commit"}, {"oid": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "url": "https://github.com/camunda-cloud/zeebe/commit/ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "message": "test(util): add tests to verify the actor behavior on closing", "committedDate": "2020-07-29T11:10:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r462228521", "bodyText": "please don't \ud83d\ude48", "author": "Zelldon", "createdAt": "2020-07-29T11:27:46Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -123,9 +123,9 @@ public ZeebePartition(\n     this.typedRecordProcessorsFactory = typedRecordProcessorsFactory;\n     this.commandApiService = commandApiService;\n     this.partitionListeners = Collections.unmodifiableList(partitionListeners);\n-    this.partitionId = atomixRaftPartition.id().id();\n-    this.scheduler = actorScheduler;\n-    this.maxFragmentSize = (int) brokerCfg.getNetwork().getMaxMessageSizeInBytes();\n+    partitionId = atomixRaftPartition.id().id();", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyOTM1Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r462229357", "bodyText": "Idk whether we ever discussed that but I normally tend to use the this keyword in the ctor. For consistency I would like to keep it. If we decided not to use it then we should remove it everywhere.", "author": "Zelldon", "createdAt": "2020-07-29T11:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzNDE1MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464234150", "bodyText": "This was my IDE. It removes all this if they're not necessary. We never talked about it yet. So, I can remove it.", "author": "saig0", "createdAt": "2020-08-03T07:16:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzNjUyMg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464236522", "bodyText": "Agree, but maybe we need :D I would like to keep the this keyword, but we can discuss this in the team. For now I think it makes it harder to review if we change this. We probably need again a big PR where we remove all of it if we decide to do it.", "author": "Zelldon", "createdAt": "2020-08-03T07:22:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIyODUyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 346439209..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -123,9 +123,9 @@ public final class ZeebePartition extends Actor\n     this.typedRecordProcessorsFactory = typedRecordProcessorsFactory;\n     this.commandApiService = commandApiService;\n     this.partitionListeners = Collections.unmodifiableList(partitionListeners);\n-    partitionId = atomixRaftPartition.id().id();\n-    scheduler = actorScheduler;\n-    maxFragmentSize = (int) brokerCfg.getNetwork().getMaxMessageSizeInBytes();\n+    this.partitionId = atomixRaftPartition.id().id();\n+    this.scheduler = actorScheduler;\n+    this.maxFragmentSize = (int) brokerCfg.getNetwork().getMaxMessageSizeInBytes();\n     this.zeebeIndexMapping = zeebeIndexMapping;\n \n     final var exporterEntries = brokerCfg.getExporters().entrySet();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MTgzNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463541835", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                actor.runOnCompletion(\n          \n          \n            \n                    closePartition(),\n          \n          \n            \n                    (ok, failure) -> {\n          \n          \n            \n                      atomixRaftPartition.removeRoleChangeListener(this);\n          \n          \n            \n                      atomixRaftPartition.getServer().removeCommitListener(this);\n          \n          \n            \n            \n          \n          \n            \n                      criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n          \n          \n            \n                      raftPartitionHealth.close();\n          \n          \n            \n                    });\n          \n          \n            \n                    closePartition().onComplete(\n          \n          \n            \n                    (ok, failure) -> {\n          \n          \n            \n                      atomixRaftPartition.removeRoleChangeListener(this);\n          \n          \n            \n                      atomixRaftPartition.getServer().removeCommitListener(this);\n          \n          \n            \n            \n          \n          \n            \n                      criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n          \n          \n            \n                      raftPartitionHealth.close();\n          \n          \n            \n                    });", "author": "Zelldon", "createdAt": "2020-07-31T10:49:32Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -674,32 +643,16 @@ protected void onActorStarted() {\n   }\n \n   @Override\n-  protected void onActorClosed() {\n-    criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n-    raftPartitionHealth.close();\n-  }\n-\n-  @Override\n-  public void close() {\n-    // this is called from outside so it is safe to call join\n-    final var closeFuture = new CompletableActorFuture<Void>();\n-    actor.call(\n-        () ->\n-            closePartition()\n-                .onComplete(\n-                    (v, t) -> {\n-                      atomixRaftPartition.removeRoleChangeListener(this);\n-                      atomixRaftPartition.getServer().removeCommitListener(this);\n-\n-                      if (t == null) {\n-                        closeFuture.complete(null);\n-                      } else {\n-                        closeFuture.completeExceptionally(t);\n-                      }\n-                    }));\n-    closeFuture.join();\n-\n-    super.close();\n+  protected void onActorClosing() {\n+    actor.runOnCompletion(\n+        closePartition(),\n+        (ok, failure) -> {\n+          atomixRaftPartition.removeRoleChangeListener(this);\n+          atomixRaftPartition.getServer().removeCommitListener(this);\n+\n+          criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n+          raftPartitionHealth.close();\n+        });", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 346439209..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -644,15 +644,15 @@ public final class ZeebePartition extends Actor\n \n   @Override\n   protected void onActorClosing() {\n-    actor.runOnCompletion(\n-        closePartition(),\n-        (ok, failure) -> {\n-          atomixRaftPartition.removeRoleChangeListener(this);\n-          atomixRaftPartition.getServer().removeCommitListener(this);\n-\n-          criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n-          raftPartitionHealth.close();\n-        });\n+    closePartition()\n+        .onComplete(\n+            (ok, failure) -> {\n+              atomixRaftPartition.removeRoleChangeListener(this);\n+              atomixRaftPartition.getServer().removeCommitListener(this);\n+\n+              criticalComponentsHealthMonitor.removeComponent(raftPartitionHealth.getName());\n+              raftPartitionHealth.close();\n+            });\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463543109", "bodyText": "I this the case? You mean because Partition#close and stepdown could close the partition?!", "author": "Zelldon", "createdAt": "2020-07-31T10:52:29Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Mzc2NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463543765", "bodyText": "We could prevent that right? We know when we are in the closing phase.", "author": "Zelldon", "createdAt": "2020-07-31T10:54:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzNjY3Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464236676", "bodyText": "I'm not sure how to prevent this situation.\n\nfirst closePartition() is called by transitionToLeader()\nthen closePartition() is called by onActorClosing()\n\nWhat do you suggest in detail?", "author": "saig0", "createdAt": "2020-08-03T07:22:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MDAwNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464350004", "bodyText": "Ok. I'll extend the code comment \ud83d\udc4d", "author": "saig0", "createdAt": "2020-08-03T11:17:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0MzEwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 346439209..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -668,7 +668,10 @@ public final class ZeebePartition extends Actor\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently on role transition due to closing the actor\n+    // - first, it is called by one of the transitionTo...() methods\n+    // - then it is called by onActorClosing()\n+\n     final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n     Collections.reverse(closingStepsInReverseOrder);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjI1Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463546253", "bodyText": "Ideally we should prevent that; in case of multiple role changes we do this due to waiting of the last transition. I think it makes sense to intorduce a closing flag which is toggled and nothing can be executed anymore, like transition. I think actor scheduler also supports something like that. That some jobs are only executed on starting right?", "author": "Zelldon", "createdAt": "2020-07-31T11:00:28Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed\n+    final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n+    Collections.reverse(closingStepsInReverseOrder);\n+\n+    final var closingPartitionFuture = new CompletableActorFuture<Void>();\n+    stepByStepClosing(closingPartitionFuture, closingStepsInReverseOrder);\n+\n+    return closingPartitionFuture;\n+  }\n+\n+  private void stepByStepClosing(\n+      final CompletableActorFuture<Void> closingFuture, final List<ClosingStep> actorsToClose) {\n+    if (actorsToClose.isEmpty()) {\n+      closingFuture.complete(null);\n+      return;\n+    }\n+\n+    final ClosingStep closingStep = actorsToClose.remove(0);\n+    LOG.debug(\"Closing Zeebe-Partition-{}: {}\", partitionId, closingStep.getName());\n+\n+    final var closeFuture = closingStep.getClosable().closeAsync();\n+    closeFuture.onComplete(\n+        (v, t) -> {\n+          if (t == null) {\n+            LOG.debug(\n+                \"Closing Zeebe-Partition-{}: {} closed successfully\",\n+                partitionId,\n+                closingStep.getName());\n+\n+            // remove the completed step from the list in case that the closing is interrupted", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIzOTUwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464239500", "bodyText": "When actor.close() is called then every scheduled job is canceled. That mean, if closePartition() is called first and actor.close() is called later then this interrupts the closeFuture.onComplete() chain in stepByStepClosing(). So, we need to continue with the closing of the partition.\nWhat exactly do you suggest?", "author": "saig0", "createdAt": "2020-08-03T07:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjI1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI5OTkwNg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464299906", "bodyText": "OK the comments before sounded like it is a problem when we are do the actor closing that the next transition interrupt it?\n\nWhen actor.close() is called then every scheduled job is canceled.\n\nBut partition closing if scheduled will not be interrupted?", "author": "Zelldon", "createdAt": "2020-08-03T09:29:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0NjI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 346439209..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -668,7 +668,10 @@ public final class ZeebePartition extends Actor\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently on role transition due to closing the actor\n+    // - first, it is called by one of the transitionTo...() methods\n+    // - then it is called by onActorClosing()\n+\n     final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n     Collections.reverse(closingStepsInReverseOrder);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Njg1Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463546857", "bodyText": "This is not the blocking task runner right?", "author": "Zelldon", "createdAt": "2020-07-31T11:02:03Z", "path": "util/src/main/java/io/zeebe/util/sched/ActorExecutor.java", "diffHunk": "@@ -70,6 +71,7 @@ public void start() {\n   }\n \n   public CompletableFuture<Void> closeAsync() {\n+    Loggers.ACTOR_LOGGER.debug(\"Closing blocking task runner\");", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI1NTkwMA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464255900", "bodyText": "Not? It is closing the task runner afterward blockingTasksRunner.shutdown().", "author": "saig0", "createdAt": "2020-08-03T08:05:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Njg1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI1Njk2NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464256964", "bodyText": "This was confusing since it is happening in the ActorExeuctor \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-08-03T08:07:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU0Njg1Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1NjY1NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463556655", "bodyText": "So actually we remove the closables already before I thought this was part of the fix?", "author": "Zelldon", "createdAt": "2020-07-31T11:28:33Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -610,39 +601,17 @@ private StreamProcessor createStreamProcessor(final ZeebeDb zeebeDb) {\n     return CompletableActorFuture.completed(null);\n   }\n \n-  private void stepByStepClosing(\n-      final CompletableActorFuture<Void> closingFuture, final List<AsyncClosable> actorsToClose) {\n-    if (actorsToClose.isEmpty()) {\n-      closingFuture.complete(null);\n-      return;\n-    }\n-\n-    final AsyncClosable asyncClosable = actorsToClose.remove(0);", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r463556951", "bodyText": "We remove now twice from two different lists ? \ud83d\ude05", "author": "Zelldon", "createdAt": "2020-07-31T11:29:21Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -710,6 +663,57 @@ protected void handleFailure(final Exception failure) {\n     onInstallFailure();\n   }\n \n+  private void addClosingStep(final String name, final AsyncClosable closable) {\n+    closingSteps.add(new ClosingStep(name, closable));\n+  }\n+\n+  private CompletableActorFuture<Void> closePartition() {\n+    // this method may be called concurrently when the actor is closed\n+    final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n+    Collections.reverse(closingStepsInReverseOrder);\n+\n+    final var closingPartitionFuture = new CompletableActorFuture<Void>();\n+    stepByStepClosing(closingPartitionFuture, closingStepsInReverseOrder);\n+\n+    return closingPartitionFuture;\n+  }\n+\n+  private void stepByStepClosing(\n+      final CompletableActorFuture<Void> closingFuture, final List<ClosingStep> actorsToClose) {\n+    if (actorsToClose.isEmpty()) {\n+      closingFuture.complete(null);\n+      return;\n+    }\n+\n+    final ClosingStep closingStep = actorsToClose.remove(0);", "originalCommit": "ba16a4ea779d9d27d87db8cc66a6346b055fde0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI1NjU4MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464256581", "bodyText": "Yes. We remove the closed item from both lists. Is this not correct?", "author": "saig0", "createdAt": "2020-08-03T08:06:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1Njk1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 346439209..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -668,7 +668,10 @@ public final class ZeebePartition extends Actor\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently on role transition due to closing the actor\n+    // - first, it is called by one of the transitionTo...() methods\n+    // - then it is called by onActorClosing()\n+\n     final var closingStepsInReverseOrder = new ArrayList<>(closingSteps);\n     Collections.reverse(closingStepsInReverseOrder);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg0MzE0Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5067#discussion_r464843142", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // caution: this method may be called concurrently when the actor is closed\n          \n          \n            \n                // caution: this method may be called concurrently on role transition due to closing the actor", "author": "Zelldon", "createdAt": "2020-08-04T07:06:16Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -668,7 +668,10 @@ private void addClosingStep(final String name, final AsyncClosable closable) {\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently when the actor is closed", "originalCommit": "efaae650c5318974bf847bae9170af71dc353fae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "87e492c100e624de8db222f171fae52ee3c755d4", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 38a3d3bed..36e5c009e 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -668,7 +668,7 @@ public final class ZeebePartition extends Actor\n   }\n \n   private CompletableActorFuture<Void> closePartition() {\n-    // caution: this method may be called concurrently when the actor is closed\n+    // caution: this method may be called concurrently on role transition due to closing the actor\n     // - first, it is called by one of the transitionTo...() methods\n     // - then it is called by onActorClosing()\n \n"}}, {"oid": "87e492c100e624de8db222f171fae52ee3c755d4", "url": "https://github.com/camunda-cloud/zeebe/commit/87e492c100e624de8db222f171fae52ee3c755d4", "message": "chore(broker): avoid concurrency in closing the partition\n\n* using actor.close() to interrupt all running jobs (i.e. installing or closing the partition or a part of it)\n* closing the partition in action.onClosing() that blocks the close future until its done", "committedDate": "2020-08-04T07:26:30Z", "type": "commit"}, {"oid": "87e492c100e624de8db222f171fae52ee3c755d4", "url": "https://github.com/camunda-cloud/zeebe/commit/87e492c100e624de8db222f171fae52ee3c755d4", "message": "chore(broker): avoid concurrency in closing the partition\n\n* using actor.close() to interrupt all running jobs (i.e. installing or closing the partition or a part of it)\n* closing the partition in action.onClosing() that blocks the close future until its done", "committedDate": "2020-08-04T07:26:30Z", "type": "forcePushed"}]}