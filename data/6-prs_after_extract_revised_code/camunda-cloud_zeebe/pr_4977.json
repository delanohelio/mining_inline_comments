{"pr_number": 4977, "pr_title": "fix(broker): refactor zeebe partition health monitoring", "pr_createdAt": "2020-07-15T14:17:26Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3NzA2Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455577066", "bodyText": "To organize a little, please place this field next to raftPartitionHealth", "author": "korthout", "createdAt": "2020-07-16T07:46:45Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -112,6 +111,7 @@\n   private long term;\n   private final String raftPartitionName;\n   private StreamProcessor streamProcessor;\n+  private final ZeebePartitionHealth zeebePartitionHealth;", "originalCommit": "70622ef699cc3dc3e9e08df43b74c0fdec152aac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f836edfbc8f914b7460f1904608e549d99f9d10f", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 774a0ef6d3..a96b20d9ef 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -108,10 +108,9 @@ public final class ZeebePartition extends Actor\n   private AtomixLogStorage atomixLogStorage;\n   private long deferredCommitPosition;\n   private final RaftPartitionHealth raftPartitionHealth;\n+  private final ZeebePartitionHealth zeebePartitionHealth;\n   private long term;\n-  private final String raftPartitionName;\n   private StreamProcessor streamProcessor;\n-  private final ZeebePartitionHealth zeebePartitionHealth;\n \n   public ZeebePartition(\n       final BrokerInfo localBroker,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3ODEwOA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455578108", "bodyText": "Here I would appreciate that organisation as well.", "author": "korthout", "createdAt": "2020-07-16T07:47:43Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -154,6 +154,7 @@ public ZeebePartition(\n     raftPartitionHealth = new RaftPartitionHealth(atomixRaftPartition, actor, this::onRaftFailed);\n     healthMetrics = new HealthMetrics(partitionId);\n     healthMetrics.setUnhealthy();\n+    zeebePartitionHealth = new ZeebePartitionHealth(partitionId);", "originalCommit": "70622ef699cc3dc3e9e08df43b74c0fdec152aac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f836edfbc8f914b7460f1904608e549d99f9d10f", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 774a0ef6d3..a96b20d9ef 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -152,9 +150,9 @@ public final class ZeebePartition extends Actor\n     this.actorName = buildActorName(localBroker.getNodeId(), \"ZeebePartition-\" + partitionId);\n     criticalComponentsHealthMonitor = new CriticalComponentsHealthMonitor(actor, LOG);\n     raftPartitionHealth = new RaftPartitionHealth(atomixRaftPartition, actor, this::onRaftFailed);\n+    zeebePartitionHealth = new ZeebePartitionHealth(partitionId);\n     healthMetrics = new HealthMetrics(partitionId);\n     healthMetrics.setUnhealthy();\n-    zeebePartitionHealth = new ZeebePartitionHealth(partitionId);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU3OTc2OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455579768", "bodyText": "I like consistency. So please either create a zeebePartitionName field similar to raftPartitionName, or change raftPartitionName to a getName method as a member of RaftPartitionHealth", "author": "korthout", "createdAt": "2020-07-16T07:49:21Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -665,16 +666,19 @@ public void onActorStarting() {\n     atomixLogStorage = AtomixLogStorage.ofPartition(zeebeIndexMapping, atomixRaftPartition);\n     atomixRaftPartition.getServer().addCommitListener(this);\n     atomixRaftPartition.addRoleChangeListener(this);\n+    criticalComponentsHealthMonitor.addFailureListener(this);\n     onRoleChange(atomixRaftPartition.getRole(), atomixRaftPartition.term());\n-    onRecoveredInternal();\n   }\n \n   @Override\n   protected void onActorStarted() {\n     criticalComponentsHealthMonitor.startMonitoring();\n-    criticalComponentsHealthMonitor.addFailureListener(this);\n-\n     criticalComponentsHealthMonitor.registerComponent(raftPartitionName, raftPartitionHealth);\n+    // Add a component that keep track of health of ZeebePartition. This way\n+    // criticalComponentsHealthMonitor can monitor the health of ZeebePartition similar to other\n+    // components.\n+    criticalComponentsHealthMonitor.registerComponent(\n+        zeebePartitionHealth.getName(), zeebePartitionHealth);", "originalCommit": "70622ef699cc3dc3e9e08df43b74c0fdec152aac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f836edfbc8f914b7460f1904608e549d99f9d10f", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 774a0ef6d3..a96b20d9ef 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -673,7 +671,8 @@ public final class ZeebePartition extends Actor\n   @Override\n   protected void onActorStarted() {\n     criticalComponentsHealthMonitor.startMonitoring();\n-    criticalComponentsHealthMonitor.registerComponent(raftPartitionName, raftPartitionHealth);\n+    criticalComponentsHealthMonitor.registerComponent(\n+        raftPartitionHealth.getName(), raftPartitionHealth);\n     // Add a component that keep track of health of ZeebePartition. This way\n     // criticalComponentsHealthMonitor can monitor the health of ZeebePartition similar to other\n     // components.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU4MTk2Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455581967", "bodyText": "This entire method (i.e. updateHealthStatus) can be inlined, I think that might be better, please just have a look whether that makes sense.", "author": "korthout", "createdAt": "2020-07-16T07:51:28Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java", "diffHunk": "@@ -748,45 +752,38 @@ private void onRecoveredInternal() {\n   }\n \n   private void updateHealthStatus(final HealthStatus newStatus) {\n-    if (healthStatus != newStatus) {\n-      healthStatus = newStatus;\n-      switch (newStatus) {\n-        case HEALTHY:\n-          healthMetrics.setHealthy();\n-          if (failureListener != null) {\n-            failureListener.onRecovered();\n-          }\n-          break;\n-        case UNHEALTHY:\n-          healthMetrics.setUnhealthy();\n-          if (failureListener != null) {\n-            failureListener.onFailure();\n-          }\n-          break;\n-        default:\n-          LOG.warn(\"Unknown health status {}\", newStatus);\n-          break;\n-      }\n-    }\n+    zeebePartitionHealth.setHealthStatus(newStatus);", "originalCommit": "70622ef699cc3dc3e9e08df43b74c0fdec152aac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f836edfbc8f914b7460f1904608e549d99f9d10f", "chunk": "diff --git a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\nindex 774a0ef6d3..a96b20d9ef 100644\n--- a/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n+++ b/broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartition.java\n\n@@ -748,11 +759,7 @@ public final class ZeebePartition extends Actor\n   }\n \n   private void onRecoveredInternal() {\n-    updateHealthStatus(HealthStatus.HEALTHY);\n-  }\n-\n-  private void updateHealthStatus(final HealthStatus newStatus) {\n-    zeebePartitionHealth.setHealthStatus(newStatus);\n+    zeebePartitionHealth.setHealthStatus(HealthStatus.HEALTHY);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455702560", "bodyText": "It's possible that the health status is updated, but that the failure listener is not made aware of this (because failure listener is still null), should we add a delayed onRecover/onFailure to the moment the failure listener is added?\nOf course we also still have the probing part (getHealthStatus), so that part works correctly anyways, but has delay, since its periodically", "author": "korthout", "createdAt": "2020-07-16T10:58:58Z", "path": "broker/src/main/java/io/zeebe/broker/system/partitions/ZeebePartitionHealth.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH under\n+ * one or more contributor license agreements. See the NOTICE file distributed\n+ * with this work for additional information regarding copyright ownership.\n+ * Licensed under the Zeebe Community License 1.0. You may not use this file\n+ * except in compliance with the Zeebe Community License 1.0.\n+ */\n+package io.zeebe.broker.system.partitions;\n+\n+import io.zeebe.util.health.FailureListener;\n+import io.zeebe.util.health.HealthMonitorable;\n+import io.zeebe.util.health.HealthStatus;\n+\n+/**\n+ * Reflects the health of ZeebePartition. The health is updated by ZeebePartition when role\n+ * transitions either succeeded or failed.\n+ */\n+class ZeebePartitionHealth implements HealthMonitorable {\n+  private HealthStatus healthStatus = HealthStatus.UNHEALTHY;\n+  private final String name;\n+  private FailureListener failureListener;\n+\n+  public ZeebePartitionHealth(final int partitionId) {\n+    this.name = \"ZeebePartition-\" + partitionId;\n+  }\n+\n+  @Override\n+  public HealthStatus getHealthStatus() {\n+    return healthStatus;\n+  }\n+\n+  @Override\n+  public void addFailureListener(final FailureListener failureListener) {\n+    this.failureListener = failureListener;\n+  }\n+\n+  void setHealthStatus(final HealthStatus healthStatus) {\n+    final var previousStatus = this.healthStatus;\n+    this.healthStatus = healthStatus;\n+\n+    if (previousStatus != healthStatus && failureListener != null) {", "originalCommit": "70622ef699cc3dc3e9e08df43b74c0fdec152aac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwNDAzNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r455704034", "bodyText": "Also, perhaps we can find a way to remove the duplication between this method, CriticalComponentsHealthMonitor#calculateHealth and ZeebePartition#notifyFailureListenerAndUpdateMetrics?", "author": "korthout", "createdAt": "2020-07-16T11:01:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NDEzNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r456294134", "bodyText": "It's possible that the health status is updated, but that the failure listener is not made aware of this (because failure listener is still null), should we add a delayed onRecover/onFailure to the moment the failure listener is added?\n\nI would like to keep it simple and let it recover in the next probe. Also in this case, we know the failureListener is not null. But the check is added only for safety.", "author": "deepthidevaki", "createdAt": "2020-07-17T08:21:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NzQ3Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/4977#discussion_r456297473", "bodyText": "Also, perhaps we can find a way to remove the duplication between this method, CriticalComponentsHealthMonitor#calculateHealth and ZeebePartition#notifyFailureListenerAndUpdateMetrics?\n\nI removed 'notifyFailureListenerAndUpdateMetrics' and handled these cases directly in  ZeebePartition#onRecovered and onFailure.", "author": "deepthidevaki", "createdAt": "2020-07-17T08:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMjU2MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "f836edfbc8f914b7460f1904608e549d99f9d10f", "url": "https://github.com/camunda-cloud/zeebe/commit/f836edfbc8f914b7460f1904608e549d99f9d10f", "message": "fix(broker): refactor zeebe partition health monitoring", "committedDate": "2020-07-21T08:51:22Z", "type": "commit"}, {"oid": "f836edfbc8f914b7460f1904608e549d99f9d10f", "url": "https://github.com/camunda-cloud/zeebe/commit/f836edfbc8f914b7460f1904608e549d99f9d10f", "message": "fix(broker): refactor zeebe partition health monitoring", "committedDate": "2020-07-21T08:51:22Z", "type": "forcePushed"}]}