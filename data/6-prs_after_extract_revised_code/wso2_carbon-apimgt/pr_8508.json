{"pr_number": 8508, "pr_title": "Modified Admin REST APIs.", "pr_createdAt": "2020-05-14T14:17:11Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8508", "timeline": [{"oid": "a3388f2645c590807d500daf19f9a1923ff618a2", "url": "https://github.com/wso2/carbon-apimgt/commit/a3388f2645c590807d500daf19f9a1923ff618a2", "message": "Modified categories API and blocking condition REST API.", "committedDate": "2020-05-14T13:13:08Z", "type": "commit"}, {"oid": "9523a6ac8027336a9e23e532aac366704a155cc8", "url": "https://github.com/wso2/carbon-apimgt/commit/9523a6ac8027336a9e23e532aac366704a155cc8", "message": "Modified block condition error description.", "committedDate": "2020-05-14T13:28:24Z", "type": "commit"}, {"oid": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "url": "https://github.com/wso2/carbon-apimgt/commit/cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "message": "Removed unnecessary log.", "committedDate": "2020-05-14T14:05:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTY2Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425551667", "bodyText": "Copyright year does not have to be changed for already existing classes", "author": "tgtshanika", "createdAt": "2020-05-15T03:52:44Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n-*  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYxNzk3Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425617972", "bodyText": "fixed with beadab3", "author": "Meruja", "createdAt": "2020-05-15T07:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTY2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\nindex 342ab71eb9f..578cac78f14 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\n\n@@ -1,5 +1,5 @@\n /*\n-*  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*  Copyright (c) 2005-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MTk1Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425551957", "bodyText": "Line length has to be below 120", "author": "tgtshanika", "createdAt": "2020-05-15T03:54:04Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java", "diffHunk": "@@ -957,6 +957,17 @@ boolean updateAPIforStateChange(APIIdentifier identifier, APIStatus newStatus,\n      */\n     String addBlockCondition(String conditionType, String conditionValue) throws APIManagementException;\n \n+    /**\n+     *  Add a block condition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     * @return UUID of the new Block Condition\n+     * @throws APIManagementException\n+     */\n+    String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException;", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\nindex 342ab71eb9f..578cac78f14 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIProvider.java\n\n@@ -966,7 +966,8 @@ public interface APIProvider extends APIManager {\n      * @return UUID of the new Block Condition\n      * @throws APIManagementException\n      */\n-    String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException;\n+    String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)\n+            throws APIManagementException;\n \n     /**\n      * Deletes a block condition given its Id\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MjQ4Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425552483", "bodyText": "Add block condition", "author": "tgtshanika", "createdAt": "2020-05-15T03:56:12Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,34 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * addBlockCondition with condition status", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\nindex 7f13d79d1f2..3b325c1876d 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n\n@@ -6175,13 +6175,14 @@ class APIProviderImpl extends AbstractAPIManager implements APIProvider {\n     }\n \n     /**\n-     * addBlockCondition with condition status\n+     * Add Block Condition with condition status\n      *\n      * @param conditionType type of the condition (IP, Context .. )\n      * @param conditionValue value of the condition\n      * @param conditionStatus status of the condition\n      */\n-    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException {\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)\n+            throws APIManagementException {\n \n         if (APIConstants.BLOCKING_CONDITIONS_USER.equals(conditionType)) {\n             conditionValue = MultitenantUtils.getTenantAwareUsername(conditionValue);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1MjY1MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425552651", "bodyText": "Please maintain 120 line length", "author": "tgtshanika", "createdAt": "2020-05-15T03:56:53Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,34 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * addBlockCondition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     */\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException {", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\nindex 7f13d79d1f2..3b325c1876d 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n\n@@ -6175,13 +6175,14 @@ class APIProviderImpl extends AbstractAPIManager implements APIProvider {\n     }\n \n     /**\n-     * addBlockCondition with condition status\n+     * Add Block Condition with condition status\n      *\n      * @param conditionType type of the condition (IP, Context .. )\n      * @param conditionValue value of the condition\n      * @param conditionStatus status of the condition\n      */\n-    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus) throws APIManagementException {\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)\n+            throws APIManagementException {\n \n         if (APIConstants.BLOCKING_CONDITIONS_USER.equals(conditionType)) {\n             conditionValue = MultitenantUtils.getTenantAwareUsername(conditionValue);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1NTQwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425555407", "bodyText": "Add context information to error messages (block condition type, value)", "author": "tgtshanika", "createdAt": "2020-05-15T04:09:05Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -892,14 +892,11 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n                 RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage =\n-                        \"Error while adding Blocking Condition. Condition type: \" + body.getConditionType() + \", \" +\n-                                \"value: \" + body.getConditionValue();\n+                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\nindex 000b2a847bd..109e6648f71 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n\n@@ -890,13 +895,16 @@ public class ThrottlingApiServiceImpl implements ThrottlingApiService {\n             return Response.created(new URI(RestApiConstants.RESOURCE_PATH_THROTTLING_BLOCK_CONDITIONS + \"/\" + uuid)).entity(dto).build();\n         } catch (APIManagementException e) {\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n-                RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n+                RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \"\n+                        + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();\n+                String errorMessage = \"Error while adding Blocking Condition. Condition type: \"\n+                        + body.getConditionType() + \", \" + \"value: \" + body.getConditionValue() + \". \" + e.getMessage();\n                 RestApiUtil.handleInternalServerError(errorMessage, e, log);\n             }\n         } catch (URISyntaxException | ParseException e) {\n-            String errorMessage = \"Error while retrieving Blocking Condition resource location: \"  + e.getMessage();\n+            String errorMessage = \"Error while retrieving Blocking Condition resource location: Condition type: \"\n+                    + body.getConditionType() + \", \" + \"value: \" + body.getConditionValue() + \". \"  + e.getMessage();\n             RestApiUtil.handleInternalServerError(errorMessage, e, log);\n         }\n         return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU1NTczMw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425555733", "bodyText": "Add block condition context info so that someone can correlate the error messages with corresponding block condition.", "author": "tgtshanika", "createdAt": "2020-05-15T04:10:41Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -892,14 +892,11 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n                 RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage =\n-                        \"Error while adding Blocking Condition. Condition type: \" + body.getConditionType() + \", \" +\n-                                \"value: \" + body.getConditionValue();\n+                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();\n                 RestApiUtil.handleInternalServerError(errorMessage, e, log);\n             }\n         } catch (URISyntaxException | ParseException e) {\n-            String errorMessage =\n-                    \"Error while retrieving Blocking Condition resource location. Condition type: \" + body.getConditionType() + \", value: \" + body.getConditionValue();\n+            String errorMessage = \"Error while retrieving Blocking Condition resource location: \"  + e.getMessage();", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\nindex 000b2a847bd..109e6648f71 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n\n@@ -890,13 +895,16 @@ public class ThrottlingApiServiceImpl implements ThrottlingApiService {\n             return Response.created(new URI(RestApiConstants.RESOURCE_PATH_THROTTLING_BLOCK_CONDITIONS + \"/\" + uuid)).entity(dto).build();\n         } catch (APIManagementException e) {\n             if (RestApiUtil.isDueToResourceAlreadyExists(e)) {\n-                RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \" + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n+                RestApiUtil.handleResourceAlreadyExistsError(\"A black list item with type: \"\n+                        + body.getConditionType() + \", value: \" + body.getConditionValue() + \" already exists\", e, log);\n             } else {\n-                String errorMessage = \"Error while adding Blocking Condition : \" + e.getMessage();\n+                String errorMessage = \"Error while adding Blocking Condition. Condition type: \"\n+                        + body.getConditionType() + \", \" + \"value: \" + body.getConditionValue() + \". \" + e.getMessage();\n                 RestApiUtil.handleInternalServerError(errorMessage, e, log);\n             }\n         } catch (URISyntaxException | ParseException e) {\n-            String errorMessage = \"Error while retrieving Blocking Condition resource location: \"  + e.getMessage();\n+            String errorMessage = \"Error while retrieving Blocking Condition resource location: Condition type: \"\n+                    + body.getConditionType() + \", \" + \"value: \" + body.getConditionValue() + \". \"  + e.getMessage();\n             RestApiUtil.handleInternalServerError(errorMessage, e, log);\n         }\n         return null;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYwODU1MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r425608550", "bodyText": "max line width exceeded", "author": "tgtshanika", "createdAt": "2020-05-15T07:11:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java", "diffHunk": "@@ -875,12 +875,12 @@ public Response throttlingBlacklistPost(BlockingConditionDTO body, String conten\n             //  exists in the system\n             String uuid = null;\n             if (APIConstants.BLOCKING_CONDITIONS_API.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_APPLICATION.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_USER.equals(body.getConditionType())) {\n-                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue());\n+                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue(), body.isConditionStatus());", "originalCommit": "cdc381f57c4b1f771fef0e2a94463b5b2eeba782", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\nindex 000b2a847bd..109e6648f71 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/ThrottlingApiServiceImpl.java\n\n@@ -874,13 +874,18 @@ public class ThrottlingApiServiceImpl implements ThrottlingApiService {\n             //Add the block condition. It will throw BlockConditionAlreadyExistsException if the condition already\n             //  exists in the system\n             String uuid = null;\n-            if (APIConstants.BLOCKING_CONDITIONS_API.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_APPLICATION.equals(body.getConditionType()) || APIConstants.BLOCKING_CONDITIONS_USER.equals(body.getConditionType())) {\n-                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue(), body.isConditionStatus());\n-            } else if (APIConstants.BLOCKING_CONDITIONS_IP.equals(body.getConditionType()) || APIConstants.BLOCK_CONDITION_IP_RANGE.equalsIgnoreCase(body.getConditionType())) {\n+            if (APIConstants.BLOCKING_CONDITIONS_API.equals(body.getConditionType()) ||\n+                    APIConstants.BLOCKING_CONDITIONS_APPLICATION.equals(body.getConditionType()) ||\n+                    APIConstants.BLOCKING_CONDITIONS_USER.equals(body.getConditionType())) {\n+                uuid = apiProvider.addBlockCondition(body.getConditionType(), (String) body.getConditionValue(),\n+                        body.isConditionStatus());\n+            } else if (APIConstants.BLOCKING_CONDITIONS_IP.equals(body.getConditionType()) ||\n+                    APIConstants.BLOCK_CONDITION_IP_RANGE.equalsIgnoreCase(body.getConditionType())) {\n                 if (body.getConditionValue() instanceof Map) {\n                     JSONObject jsonObject = new JSONObject();\n                     jsonObject.putAll((Map) body.getConditionValue());\n-                    uuid = apiProvider.addBlockCondition(body.getConditionType(), jsonObject.toJSONString(), body.isConditionStatus());\n+                    uuid = apiProvider.addBlockCondition(body.getConditionType(), jsonObject.toJSONString(),\n+                            body.isConditionStatus());\n                 }\n             }\n \n"}}, {"oid": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "url": "https://github.com/wso2/carbon-apimgt/commit/beadab38e2bef37fd638ac87ebea3d2abc1168e9", "message": "Fixed reviewed comments.", "committedDate": "2020-05-15T07:30:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTY2OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449859668", "bodyText": "Shall we add the override annotation to this method to indicate this method overrides the method declared in the APIAdmin.java interface?", "author": "hisanhunais", "createdAt": "2020-07-05T10:12:36Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIAdminImpl.java", "diffHunk": "@@ -311,6 +312,18 @@ public void deleteCategory(String categoryID, String username) throws APIManagem\n         return apiMgtDAO.getAllCategories(tenantId);\n     }\n \n+    public List<APICategory> getAPICategoriesOfTenant(int tenantId) throws APIManagementException {", "originalCommit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMjc5Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450332796", "bodyText": "Fixed with d1a24a8", "author": "Meruja", "createdAt": "2020-07-06T16:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTY2OA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTk3Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449859976", "bodyText": "Shall we add descriptions to the java doc comments?", "author": "hisanhunais", "createdAt": "2020-07-05T10:16:22Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIAdmin.java", "diffHunk": "@@ -175,6 +175,15 @@ void updateMonetizationUsagePublishInfo(MonetizationUsagePublishInfo monetizatio\n      */\n     List<APICategory> getAllAPICategoriesOfTenant(int tenantID) throws APIManagementException;\n \n+    /**\n+     * Returns all api categories of the tenant with number of APIs for each category\n+     *\n+     * @param tenantID\n+     * @return", "originalCommit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMzE3MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450333170", "bodyText": "Need to remove @return as it is a void method\nFixed with d1a24a8", "author": "Meruja", "createdAt": "2020-07-06T16:17:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1OTk3Ng=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MDE3Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r449860177", "bodyText": "Shall we add the override annotation here to indicate this method overrides the method declared in the APIProvider.java interface?\nShall we also remove the java docs comments since the comments are already available in the method declared in the APIProvider.java interface?", "author": "hisanhunais", "createdAt": "2020-07-05T10:18:50Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -6174,6 +6174,35 @@ public String addBlockCondition(String conditionType, String conditionValue) thr\n         return createdBlockConditionsDto.getUUID();\n     }\n \n+    /**\n+     * Add Block Condition with condition status\n+     *\n+     * @param conditionType type of the condition (IP, Context .. )\n+     * @param conditionValue value of the condition\n+     * @param conditionStatus status of the condition\n+     */\n+    public String addBlockCondition(String conditionType, String conditionValue, boolean conditionStatus)", "originalCommit": "beadab38e2bef37fd638ac87ebea3d2abc1168e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMzMzI0MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8508#discussion_r450333241", "bodyText": "Fixed with d1a24a8", "author": "Meruja", "createdAt": "2020-07-06T16:17:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg2MDE3Nw=="}], "type": "inlineReview", "revised_code": null}]}