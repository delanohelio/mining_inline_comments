{"pr_number": 8728, "pr_title": "Update API-Service-Catalog-Entry-Mapping to support LoadBalanced/Failover endpoints", "pr_createdAt": "2020-06-11T12:07:52Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8728", "timeline": [{"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "url": "https://github.com/wso2/carbon-apimgt/commit/b825f9bfae0835aeaf55f63be4f2add86705b61d", "message": "Update API-Service-Catalog-Entry-Mapping to support LoadBalanced/Failover endpoints", "committedDate": "2020-06-11T12:15:01Z", "type": "commit"}, {"oid": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "url": "https://github.com/wso2/carbon-apimgt/commit/b825f9bfae0835aeaf55f63be4f2add86705b61d", "message": "Update API-Service-Catalog-Entry-Mapping to support LoadBalanced/Failover endpoints", "committedDate": "2020-06-11T12:15:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDk4MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438740980", "bodyText": "change naming in description", "author": "fazlan-nazeem", "createdAt": "2020-06-11T12:18:42Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -10825,29 +10825,49 @@ public static KeyManagerConnectorConfiguration getKeyManagerConnectorConfigurati\n \n     /**\n      * Extract Endpoint Registry Entry information\n-     * @param endpointConfig\n-     * @return Map\n+     *", "originalCommit": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MjYyMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438762622", "bodyText": "Fixed in 216e08f", "author": "ChamodDamitha", "createdAt": "2020-06-11T12:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0MDk4MA=="}], "type": "inlineReview", "revised_code": {"commit": "216e08f31573e70a482b6f9e3235b139d06c07bf", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\nindex d3dbaf1e6f9..4ce91ba3bdf 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n\n@@ -10824,12 +10824,12 @@ public final class APIUtil {\n     }\n \n     /**\n-     * Extract Endpoint Registry Entry information\n+     * Extract Service Catalog Entry information\n      *\n      * @param endpointConfig Endpoint Config\n      * @return HashSet<String> containing endpoint IDs\n      */\n-    public static HashSet<String> extractEndpointRegistryEntries(String endpointConfig) {\n+    public static HashSet<String> extractServiceCatalogEntries(String endpointConfig) {\n         HashSet<String> serviceCatalogEntries = new HashSet<>();\n         if (StringUtils.isNotEmpty(endpointConfig)) {\n             org.json.JSONObject endpointConfigJSON = new org.json.JSONObject(endpointConfig);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438745492", "bodyText": "since \"validCatalogEndpoints\" is used repetitively, shall we add it to a constant field?", "author": "fazlan-nazeem", "createdAt": "2020-06-11T12:27:42Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -4319,21 +4299,64 @@ public static ApiEndpointValidationResponseDTO sendHttpHEADRequest(String urlVal\n         return apiEndpointValidationResponseDTO;\n     }\n \n-    private boolean validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n-        Object productionCatalogEntry = null;\n-        Object sandboxCatalogEntry = null;\n-        LinkedHashMap productionEps = (LinkedHashMap) endpointConfig.get(\"production_endpoints\");\n-        LinkedHashMap sandboxEps = (LinkedHashMap) endpointConfig.get(\"sandbox_endpoints\");\n-        if (productionEps == null && sandboxEps == null) {\n+    private void validateServiceCatalogEntries(LinkedHashMap endpointConfig) {\n+\n+        Map<String, Boolean> productionEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_PRODUCTION_ENDPOINTS);\n+        Map<String, Boolean> sandboxEndpointStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.API_DATA_SANDBOX_ENDPOINTS);\n+        Map<String, Boolean> productionFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_PRODUCTION_FAILOVERS);\n+        Map<String, Boolean> sandboxFailoverStatus =\n+                validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n+\n+        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (productionEps != null) {\n-            productionCatalogEntry = productionEps.get(\"id\");\n+        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&", "originalCommit": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NjAzOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438746038", "bodyText": "inside the method?", "author": "ChamodDamitha", "createdAt": "2020-06-11T12:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NzcwNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438747706", "bodyText": "to a constant class", "author": "fazlan-nazeem", "createdAt": "2020-06-11T12:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzAwOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763008", "bodyText": "Fixed in 216e08f", "author": "ChamodDamitha", "createdAt": "2020-06-11T12:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0NTQ5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "216e08f31573e70a482b6f9e3235b139d06c07bf", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\nindex 8d3aaa4a2c1..188cbf5177e 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\n\n@@ -4310,14 +4310,15 @@ public class ApisApiServiceImpl implements ApisApiService {\n         Map<String, Boolean> sandboxFailoverStatus =\n                 validateServiceCatalogEndpoint(endpointConfig, APIConstants.ENDPOINT_SANDBOX_FAILOVERS);\n \n-        if (!productionEndpointStatus.get(\"hasEndpoints\") && !sandboxEndpointStatus.get(\"hasEndpoints\")) {\n+        if (!productionEndpointStatus.get(APIConstants.API_ENDPOINT_CONFIG_HAS_ENDPOINTS) &&\n+                !sandboxEndpointStatus.get(APIConstants.API_ENDPOINT_CONFIG_HAS_ENDPOINTS)) {\n             RestApiUtil.handleBadRequest(\"At least one endpoint from Production Endpoint or \" +\n                     \"Sandbox Endpoint must be defined.\", log);\n         }\n-        if (!(productionEndpointStatus.get(\"validCatalogEndpoints\") &&\n-                sandboxEndpointStatus.get(\"validCatalogEndpoints\") &&\n-                productionFailoverStatus.get(\"validCatalogEndpoints\") &&\n-                sandboxFailoverStatus.get(\"validCatalogEndpoints\"))) {\n+        if (!(productionEndpointStatus.get(APIConstants.API_ENDPOINT_CONFIG_VALID_CATALOG_ENDPOINTS) &&\n+                sandboxEndpointStatus.get(APIConstants.API_ENDPOINT_CONFIG_VALID_CATALOG_ENDPOINTS) &&\n+                productionFailoverStatus.get(APIConstants.API_ENDPOINT_CONFIG_VALID_CATALOG_ENDPOINTS) &&\n+                sandboxFailoverStatus.get(APIConstants.API_ENDPOINT_CONFIG_VALID_CATALOG_ENDPOINTS))) {\n \n             RestApiUtil.handleBadRequest(\"'id' is missing in Service Catalog type endpoints\", log);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Njg4Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438746887", "bodyText": "change variable naming here?", "author": "fazlan-nazeem", "createdAt": "2020-06-11T12:30:35Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -881,9 +880,9 @@ private void addAPI(API api, int tenantId) throws APIManagementException {\n         int apiId = apiMgtDAO.addAPI(api, tenantId);\n         addLocalScopes(api.getId(), tenantId, api.getUriTemplates());\n         addURITemplates(apiId, api, tenantId);\n-        Map endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n-        if (endpointRegistryEntries != null) {\n-            apiMgtDAO.addAPIRegistryEntryMappings(apiId, endpointRegistryEntries, null);\n+        HashSet<String> endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n+        if (!endpointRegistryEntries.isEmpty()) {", "originalCommit": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzA2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763064", "bodyText": "Fixed in 216e08f", "author": "ChamodDamitha", "createdAt": "2020-06-11T13:00:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0Njg4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "216e08f31573e70a482b6f9e3235b139d06c07bf", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\nindex 9555567b2e5..aad9b18aab4 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java\n\n@@ -880,9 +880,9 @@ class APIProviderImpl extends AbstractAPIManager implements APIProvider {\n         int apiId = apiMgtDAO.addAPI(api, tenantId);\n         addLocalScopes(api.getId(), tenantId, api.getUriTemplates());\n         addURITemplates(apiId, api, tenantId);\n-        HashSet<String> endpointRegistryEntries = APIUtil.extractEndpointRegistryEntries(api.getEndpointConfig());\n-        if (!endpointRegistryEntries.isEmpty()) {\n-            apiMgtDAO.addAPIServiceCatalogEntryMappings(apiId, endpointRegistryEntries, null);\n+        HashSet<String> serviceCatalogEntries = APIUtil.extractServiceCatalogEntries(api.getEndpointConfig());\n+        if (!serviceCatalogEntries.isEmpty()) {\n+            apiMgtDAO.addAPIServiceCatalogEntryMappings(apiId, serviceCatalogEntries, null);\n         }\n \n         APIEvent apiEvent = new APIEvent(UUID.randomUUID().toString(), System.currentTimeMillis(),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438748966", "bodyText": "Update Javadocs, The set contains failover and sandbox endpoint Ids, right?", "author": "vithu30", "createdAt": "2020-06-11T12:34:35Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -14928,28 +14928,30 @@ public void addAPIRegistryEntryMappings(int apiId, Map endpointRegistryEntries,\n     }\n \n     /**\n-     * @param apiId                   ID of the API created using the Endpoint Registry Entry\n-     * @param endpointRegistryEntries Map contains production and sandbox endpoint ID\n-     * @throws APIManagementException\n+     * @param apiId                   ID of the API created using the Service Catalog Entry\n+     * @param endpointRegistryEntries HashSet contains production and sandbox endpoint IDs", "originalCommit": "b825f9bfae0835aeaf55f63be4f2add86705b61d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MzI3NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438763274", "bodyText": "Fixed in 216e08f", "author": "ChamodDamitha", "createdAt": "2020-06-11T13:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2NDE3OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8728#discussion_r438764178", "bodyText": "Set can contain production/sandbox IDs of Load-balanced/Failover/Normal endpoints", "author": "ChamodDamitha", "createdAt": "2020-06-11T13:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0ODk2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "216e08f31573e70a482b6f9e3235b139d06c07bf", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\nindex 53125cc439b..38c9d940a87 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n\n@@ -14928,17 +14928,17 @@ public class ApiMgtDAO {\n     }\n \n     /**\n-     * @param apiId                   ID of the API created using the Service Catalog Entry\n-     * @param endpointRegistryEntries HashSet contains production and sandbox endpoint IDs\n-     *                                (includes load balanced and failover endpoints)\n+     * @param apiId                 ID of the API created using the Service Catalog Entry\n+     * @param serviceCatalogEntries HashSet contains production and sandbox endpoint IDs\n+     *                              (includes load balanced and failover endpoint IDs)\n      * @throws APIManagementException if failed to update the mapping\n      */\n-    public void updateAPIRegistryEntryMappings(int apiId, HashSet<String> endpointRegistryEntries)\n+    public void updateAPIRegistryEntryMappings(int apiId, HashSet<String> serviceCatalogEntries)\n             throws APIManagementException {\n \n         try (Connection connection = APIMgtDBUtil.getConnection()) {\n             deleteAPIServiceCatalogEntryMappings(apiId, connection);\n-            addAPIServiceCatalogEntryMappings(apiId, endpointRegistryEntries, connection);\n+            addAPIServiceCatalogEntryMappings(apiId, serviceCatalogEntries, connection);\n         } catch (SQLException e) {\n             handleException(\"Error while updating Service Catalog Entry mapping for API with ID: \" + apiId, e);\n         }\n"}}, {"oid": "216e08f31573e70a482b6f9e3235b139d06c07bf", "url": "https://github.com/wso2/carbon-apimgt/commit/216e08f31573e70a482b6f9e3235b139d06c07bf", "message": "Fix review comments", "committedDate": "2020-06-11T12:58:05Z", "type": "commit"}]}