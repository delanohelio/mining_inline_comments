{"pr_number": 8485, "pr_title": " Support x-wso2 Swagger extensions that are already supported by Micro Gateway when importing OAS definitions.", "pr_createdAt": "2020-05-11T12:44:33Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8485", "timeline": [{"oid": "04efaafe682c30e942c98afb373fbda3b1eaab3a", "url": "https://github.com/wso2/carbon-apimgt/commit/04efaafe682c30e942c98afb373fbda3b1eaab3a", "message": "x vendor extensions set when importing through portal", "committedDate": "2020-05-11T12:30:04Z", "type": "commit"}, {"oid": "dfa9fabd1a42db0666d9abfe486ee1176d13a238", "url": "https://github.com/wso2/carbon-apimgt/commit/dfa9fabd1a42db0666d9abfe486ee1176d13a238", "message": "x vendor extensions set when importing through APICTL", "committedDate": "2020-05-11T12:32:05Z", "type": "commit"}, {"oid": "866725d3891a0c656741e6f35b0d129b4d0552d0", "url": "https://github.com/wso2/carbon-apimgt/commit/866725d3891a0c656741e6f35b0d129b4d0552d0", "message": "set basePath when importing OAS definition", "committedDate": "2020-05-11T12:32:44Z", "type": "commit"}, {"oid": "20ecf78573ed36f5d62cf1e7d30224541d36e33b", "url": "https://github.com/wso2/carbon-apimgt/commit/20ecf78573ed36f5d62cf1e7d30224541d36e33b", "message": "Squash parserFiles", "committedDate": "2020-05-12T10:40:06Z", "type": "commit"}, {"oid": "20ecf78573ed36f5d62cf1e7d30224541d36e33b", "url": "https://github.com/wso2/carbon-apimgt/commit/20ecf78573ed36f5d62cf1e7d30224541d36e33b", "message": "Squash parserFiles", "committedDate": "2020-05-12T10:40:06Z", "type": "forcePushed"}, {"oid": "561ce4ad4f7db7d5a7ef6a9e7b7c03533d16949b", "url": "https://github.com/wso2/carbon-apimgt/commit/561ce4ad4f7db7d5a7ef6a9e7b7c03533d16949b", "message": "Removing dependancy", "committedDate": "2020-05-13T07:51:49Z", "type": "commit"}, {"oid": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "url": "https://github.com/wso2/carbon-apimgt/commit/36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "message": "Refactoring some names and NullException handling", "committedDate": "2020-05-14T08:41:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4MTI3Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426381272", "bodyText": "should never catch NPEs. Let's do a pre-check for null without catching an NPE.", "author": "malinthaprasan", "createdAt": "2020-05-18T05:46:15Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1193,16 +1194,21 @@ public String getOASDefinitionWithTierContentAwareProperty(String oasDefinition,\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         Swagger swagger = getSwagger(swaggerContent);\n-        boolean isDefaultIsGiven = true;\n+        boolean isDefaultGiven = true;\n+        try {\n         Map<String, SecuritySchemeDefinition> securityDefinitions = swagger.getSecurityDefinitions();\n         if (securityDefinitions == null) {\n             securityDefinitions = new HashMap<>();\n         }\n         OAuth2Definition checkDefault = (OAuth2Definition) securityDefinitions.get(SWAGGER_SECURITY_SCHEMA_KEY);\n         if (checkDefault == null) {\n-            isDefaultIsGiven = false;\n+            isDefaultGiven = false;\n+        }\n+        return isDefaultGiven;\n+        } catch (NullPointerException e){", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\nindex 4e99cb31dff..f8c02d62588 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n\n@@ -1194,21 +1194,16 @@ public class OAS2Parser extends APIDefinition {\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         Swagger swagger = getSwagger(swaggerContent);\n-        boolean isDefaultGiven = true;\n-        try {\n+\n         Map<String, SecuritySchemeDefinition> securityDefinitions = swagger.getSecurityDefinitions();\n         if (securityDefinitions == null) {\n-            securityDefinitions = new HashMap<>();\n+            return false;\n         }\n         OAuth2Definition checkDefault = (OAuth2Definition) securityDefinitions.get(SWAGGER_SECURITY_SCHEMA_KEY);\n         if (checkDefault == null) {\n-            isDefaultGiven = false;\n-        }\n-        return isDefaultGiven;\n-        } catch (NullPointerException e){\n-            isDefaultGiven = false;\n-            return isDefaultGiven;\n+            return false;\n         }\n+        return true;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODM5MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388390", "bodyText": "StringUtils.isBlank checks string is empty and null both.", "author": "malinthaprasan", "createdAt": "2020-05-18T06:10:47Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\nindex 4e99cb31dff..f8c02d62588 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n\n@@ -1352,13 +1347,13 @@ public class OAS2Parser extends APIDefinition {\n     /**\n      * This method returns api that is attched with api extensions related to micro-gw\n      *\n-     * @param apiDefinition String\n-     * @param api           API\n+     * @param apiDefinition                  String\n+     * @param api                            API\n      * @param isBasepathExtractedFromSwagger boolean\n      * @return URITemplate\n      */\n     @Override\n-    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n         Swagger swagger = getSwagger(apiDefinition);\n         Map<String, Object> extensions = swagger.getVendorExtensions();\n         if (extensions == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODQ2MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388461", "bodyText": "StringUtils.isBlank checks string is empty and null both.", "author": "malinthaprasan", "createdAt": "2020-05-18T06:10:59Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\nindex 4e99cb31dff..f8c02d62588 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n\n@@ -1352,13 +1347,13 @@ public class OAS2Parser extends APIDefinition {\n     /**\n      * This method returns api that is attched with api extensions related to micro-gw\n      *\n-     * @param apiDefinition String\n-     * @param api           API\n+     * @param apiDefinition                  String\n+     * @param api                            API\n      * @param isBasepathExtractedFromSwagger boolean\n      * @return URITemplate\n      */\n     @Override\n-    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n         Swagger swagger = getSwagger(apiDefinition);\n         Map<String, Object> extensions = swagger.getVendorExtensions();\n         if (extensions == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODUwOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388508", "bodyText": "Formatting issue.", "author": "malinthaprasan", "createdAt": "2020-05-18T06:11:09Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {\n+                securityList = APIConstants.DEFAULT_API_SECURITY_OAUTH2 ;\n+            }\n+            if (APIConstants.OPTIONAL.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL;\n+            }\n+            else if (APIConstants.MANDATORY.equals(mutualSSL)) {", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\nindex 4e99cb31dff..f8c02d62588 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n\n@@ -1352,13 +1347,13 @@ public class OAS2Parser extends APIDefinition {\n     /**\n      * This method returns api that is attched with api extensions related to micro-gw\n      *\n-     * @param apiDefinition String\n-     * @param api           API\n+     * @param apiDefinition                  String\n+     * @param api                            API\n      * @param isBasepathExtractedFromSwagger boolean\n      * @return URITemplate\n      */\n     @Override\n-    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n         Swagger swagger = getSwagger(apiDefinition);\n         Map<String, Object> extensions = swagger.getVendorExtensions();\n         if (extensions == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4ODk4OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426388988", "bodyText": "getTrottleTierFromSwagger has a typo", "author": "malinthaprasan", "createdAt": "2020-05-18T06:12:40Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java", "diffHunk": "@@ -1342,4 +1348,76 @@ public Swagger injectOtherResourceScopesToDefaultScheme(Swagger swagger) throws\n         swagger.setPaths(paths);\n         return swagger;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        Swagger swagger = getSwagger(apiDefinition);\n+        Map<String, Object> extensions = swagger.getVendorExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+        //Setup Custom auth header for API\n+        String authHeader = OASParserUtil.getAuthorizationHeaderFromSwagger(extensions);\n+        if (authHeader != null) {\n+            api.setAuthorizationHeader(authHeader);\n+        }\n+        //Setup mutualSSL configuration\n+        String mutualSSL = OASParserUtil.getMutualSSLEnabledFromSwagger(extensions);\n+        if (mutualSSL != null) {\n+            String securityList = api.getApiSecurity();\n+            if (\"\".equals(securityList)) {\n+                securityList = APIConstants.DEFAULT_API_SECURITY_OAUTH2 ;\n+            }\n+            if (APIConstants.OPTIONAL.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL;\n+            }\n+            else if (APIConstants.MANDATORY.equals(mutualSSL)) {\n+                securityList = securityList + \",\" + APIConstants.API_SECURITY_MUTUAL_SSL_MANDATORY;\n+            }\n+            api.setApiSecurity(securityList);\n+        }\n+        //Setup CORSConfigurations\n+        CORSConfiguration corsConfiguration = OASParserUtil.getCorsConfigFromSwagger(extensions);\n+        if (corsConfiguration != null) {\n+            api.setCorsConfiguration(corsConfiguration);\n+        }\n+        //Setup Response cache enabling\n+        boolean responseCacheEnable = OASParserUtil.getResponseCacheFromSwagger(extensions);\n+        if (responseCacheEnable) {\n+            api.setResponseCache(APIConstants.ENABLED);\n+        }\n+        //Setup cache timeOut\n+        int cacheTimeOut = OASParserUtil.getCacheTimeOutFromSwagger(extensions);\n+        if (cacheTimeOut != 0) {\n+            api.setCacheTimeout(cacheTimeOut);\n+        }\n+        //Setup Transports\n+        String transports = OASParserUtil.getTransportsFromSwagger(extensions);\n+        if (transports != null) {\n+            api.setTransports(transports);\n+        }\n+        //Setup Trottlingtiers\n+        String throttleTier = OASParserUtil.getTrottleTierFromSwagger(extensions);", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\nindex 4e99cb31dff..f8c02d62588 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS2Parser.java\n\n@@ -1352,13 +1347,13 @@ public class OAS2Parser extends APIDefinition {\n     /**\n      * This method returns api that is attched with api extensions related to micro-gw\n      *\n-     * @param apiDefinition String\n-     * @param api           API\n+     * @param apiDefinition                  String\n+     * @param api                            API\n      * @param isBasepathExtractedFromSwagger boolean\n      * @return URITemplate\n      */\n     @Override\n-    public API setExtensionsToAPI(String apiDefinition, API api , boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n         Swagger swagger = getSwagger(apiDefinition);\n         Map<String, Object> extensions = swagger.getVendorExtensions();\n         if (extensions == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTM1Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426389353", "bodyText": "Don't ever catch NPEs. We need to have pre-checks for null before executing a code that does an NPE.", "author": "malinthaprasan", "createdAt": "2020-05-18T06:13:46Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1259,12 +1260,17 @@ public String getOASDefinitionWithTierContentAwareProperty(String oasDefinition,\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         OpenAPI openAPI = getOpenAPI(swaggerContent);\n-        boolean isDefaultIsGiven = true;\n-        SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n-        if (checkDefault == null) {\n-            isDefaultIsGiven = false;\n+        boolean isDefaultGiven = true;\n+        try {\n+            SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n+            if (checkDefault == null) {\n+                isDefaultGiven = false;\n+            }\n+            return isDefaultGiven;\n+        } catch (NullPointerException e) {\n+            isDefaultGiven = false;\n+            return isDefaultGiven;\n         }", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\nindex 2374c775102..5ddff7958ee 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\n\n@@ -1260,17 +1260,19 @@ public class OAS3Parser extends APIDefinition {\n      */\n     private boolean isDefaultGiven(String swaggerContent) throws APIManagementException {\n         OpenAPI openAPI = getOpenAPI(swaggerContent);\n-        boolean isDefaultGiven = true;\n-        try {\n-            SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n-            if (checkDefault == null) {\n-                isDefaultGiven = false;\n-            }\n-            return isDefaultGiven;\n-        } catch (NullPointerException e) {\n-            isDefaultGiven = false;\n-            return isDefaultGiven;\n+        Components components = openAPI.getComponents();\n+        if (components == null) {\n+            return false;\n+        }\n+        Map<String, SecurityScheme> securitySchemes = components.getSecuritySchemes();\n+        if (securitySchemes == null) {\n+            return false;\n         }\n+        SecurityScheme checkDefault = openAPI.getComponents().getSecuritySchemes().get(OPENAPI_SECURITY_SCHEMA_KEY);\n+        if (checkDefault == null) {\n+            return false;\n+        }\n+        return true;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM4OTQzMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426389431", "bodyText": "Remove duplicated //", "author": "malinthaprasan", "createdAt": "2020-05-18T06:14:03Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java", "diffHunk": "@@ -1456,4 +1462,75 @@ private OpenAPI injectOtherResourceScopesToDefaultScheme(OpenAPI openAPI) throws\n         return openAPI;\n     }\n \n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param apiDefinition String\n+     * @param api           API\n+     * @param isBasepathExtractedFromSwagger boolean\n+     * @return URITemplate\n+     */\n+    @Override\n+    public API setExtensionsToAPI(String apiDefinition, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        OpenAPI openAPI = getOpenAPI(apiDefinition);\n+        Map<String, Object> extensions = openAPI.getExtensions();\n+        if (extensions == null) {\n+            return api;\n+        }\n+\n+//        //Setup Custom auth header for API", "originalCommit": "36fe5d1f390e72ba7b33a655110ddfb36b8bd67f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\nindex 2374c775102..5ddff7958ee 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OAS3Parser.java\n\n@@ -1465,8 +1467,8 @@ public class OAS3Parser extends APIDefinition {\n     /**\n      * This method returns api that is attched with api extensions related to micro-gw\n      *\n-     * @param apiDefinition String\n-     * @param api           API\n+     * @param apiDefinition                  String\n+     * @param api                            API\n      * @param isBasepathExtractedFromSwagger boolean\n      * @return URITemplate\n      */\n"}}, {"oid": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "url": "https://github.com/wso2/carbon-apimgt/commit/3326e1cdfab564cecd7fa544d40dd4399ff46f73", "message": "Fixes after review", "committedDate": "2020-05-18T07:31:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU1NzUxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8485#discussion_r426557516", "bodyText": "throttleTier", "author": "malinthaprasan", "createdAt": "2020-05-18T11:29:17Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java", "diffHunk": "@@ -1226,4 +1228,176 @@ public static String preProcess(String swaggerContent) throws APIManagementExcep\n         String swaggerContentUpdated = apiDefinition.processOtherSchemeScopes(swaggerContent);\n         return swaggerContentUpdated;\n     }\n+\n+    /**\n+     * This method returns api that is attched with api extensions related to micro-gw\n+     *\n+     * @param swaggerContent String\n+     * @param api            API\n+     * @return URITemplate\n+     */\n+    public static API setExtensionsToAPI(String swaggerContent, API api, boolean isBasepathExtractedFromSwagger) throws APIManagementException {\n+        APIDefinition apiDefinition = getOASParser(swaggerContent);\n+        api = apiDefinition.setExtensionsToAPI(swaggerContent, api, isBasepathExtractedFromSwagger);\n+        return api;\n+    }\n+\n+    /**\n+     * This method returns extension of trottling tier related to micro-gw\n+     *\n+     * @param extensions Map<String, Object> extensions\n+     * @return String String\n+     * @throws APIManagementException throws if an error occurred\n+     */\n+    public static String getBasePathFromSwagger(Map<String, Object> extensions) throws APIManagementException {\n+        String basepath = null;\n+        ObjectMapper mapper = new ObjectMapper();\n+        if (extensions.containsKey(APIConstants.X_WSO2_BASEPATH)) {\n+            Object object = extensions.get(APIConstants.X_WSO2_BASEPATH).toString();\n+            basepath = mapper.convertValue(object, String.class);\n+        }\n+        return basepath;\n+    }\n+\n+    /**\n+     * This method returns extension of trottling tier related to micro-gw\n+     *\n+     * @param extensions Map<String, Object> extensions\n+     * @return String String\n+     * @throws APIManagementException throws if an error occurred\n+     */\n+    public static String getThrottleTierFromSwagger(Map<String, Object> extensions) throws APIManagementException {\n+        String trottleTier = null;\n+        ObjectMapper mapper = new ObjectMapper();\n+        if (extensions.containsKey(APIConstants.X_WSO2_THROTTLING_TIER)) {\n+            Object object = extensions.get(APIConstants.X_WSO2_THROTTLING_TIER).toString();\n+            trottleTier = mapper.convertValue(object, String.class);\n+        }\n+        return trottleTier;", "originalCommit": "3326e1cdfab564cecd7fa544d40dd4399ff46f73", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8a7860bd40dc6a9c5177833d491889b7cdd14f6f", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java\nindex da7685cf9d3..0ecfe4c741b 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/definitions/OASParserUtil.java\n\n@@ -1267,13 +1267,13 @@ public class OASParserUtil {\n      * @throws APIManagementException throws if an error occurred\n      */\n     public static String getThrottleTierFromSwagger(Map<String, Object> extensions) throws APIManagementException {\n-        String trottleTier = null;\n+        String throttleTier = null;\n         ObjectMapper mapper = new ObjectMapper();\n         if (extensions.containsKey(APIConstants.X_WSO2_THROTTLING_TIER)) {\n             Object object = extensions.get(APIConstants.X_WSO2_THROTTLING_TIER).toString();\n-            trottleTier = mapper.convertValue(object, String.class);\n+            throttleTier = mapper.convertValue(object, String.class);\n         }\n-        return trottleTier;\n+        return throttleTier;\n     }\n \n     /**\n"}}, {"oid": "8a7860bd40dc6a9c5177833d491889b7cdd14f6f", "url": "https://github.com/wso2/carbon-apimgt/commit/8a7860bd40dc6a9c5177833d491889b7cdd14f6f", "message": "Fixing typos", "committedDate": "2020-05-18T11:31:29Z", "type": "commit"}, {"oid": "bcedb122f2fb87d967c66bf7f68ba3b89e354227", "url": "https://github.com/wso2/carbon-apimgt/commit/bcedb122f2fb87d967c66bf7f68ba3b89e354227", "message": "Fixing typos.", "committedDate": "2020-05-18T11:37:02Z", "type": "commit"}]}