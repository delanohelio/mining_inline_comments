{"pr_number": 9211, "pr_title": "Add Update Capability for API Policies", "pr_createdAt": "2020-08-19T18:55:39Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9211", "timeline": [{"oid": "d78fee0a9e473bb6321f9e3446977344855a0874", "url": "https://github.com/wso2/carbon-apimgt/commit/d78fee0a9e473bb6321f9e3446977344855a0874", "message": "Add update methods for api Policy", "committedDate": "2020-08-19T08:01:02Z", "type": "commit"}, {"oid": "35c9483b3ea4812a849575c348102180aedb74e2", "url": "https://github.com/wso2/carbon-apimgt/commit/35c9483b3ea4812a849575c348102180aedb74e2", "message": "Refine code", "committedDate": "2020-08-19T18:00:49Z", "type": "commit"}, {"oid": "e971726f2428e47a6a3bfafa26cfd1895f31cd7f", "url": "https://github.com/wso2/carbon-apimgt/commit/e971726f2428e47a6a3bfafa26cfd1895f31cd7f", "message": "Remove unwanted methods", "committedDate": "2020-08-19T18:02:51Z", "type": "commit"}, {"oid": "0d1e7b67e3c7f9b88bb78904651b03eaab67e70c", "url": "https://github.com/wso2/carbon-apimgt/commit/0d1e7b67e3c7f9b88bb78904651b03eaab67e70c", "message": "Remove unwanted queries", "committedDate": "2020-08-19T18:04:19Z", "type": "commit"}, {"oid": "1788459dc274d1c9e95773443995d58c5c7ffbc8", "url": "https://github.com/wso2/carbon-apimgt/commit/1788459dc274d1c9e95773443995d58c5c7ffbc8", "message": "Refine Code", "committedDate": "2020-08-19T18:42:55Z", "type": "commit"}, {"oid": "24c7808a51f98927d3ae08c0f11edbb943ce4215", "url": "https://github.com/wso2/carbon-apimgt/commit/24c7808a51f98927d3ae08c0f11edbb943ce4215", "message": "Remove unwanted queries", "committedDate": "2020-08-19T18:45:43Z", "type": "commit"}, {"oid": "527d760a98cb02cd90164e39397df5bd0996a44c", "url": "https://github.com/wso2/carbon-apimgt/commit/527d760a98cb02cd90164e39397df5bd0996a44c", "message": "Update method Description", "committedDate": "2020-08-19T19:11:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5MTE0NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473591145", "bodyText": "Lets use try with resources statement for creating Connection, PreparedStatement and ResultSet objects so that they will be auto closed on exit, without the need to manage them manually.", "author": "uvindra", "createdAt": "2020-08-20T05:02:53Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,118 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        Connection connection = null;\n+        PreparedStatement updateStatement = null;\n+        PreparedStatement deleteStatement = null ;\n+        PreparedStatement selectStatement = null;\n+        String updateQuery;\n+        int policyId = 0;\n         try {", "originalCommit": "527d760a98cb02cd90164e39397df5bd0996a44c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYwNzI4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473607281", "bodyText": "Fixed cea946a", "author": "Sarangan0219", "createdAt": "2020-08-20T05:29:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU5MTE0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "cea946a138945713c9af8c793cc218167525382f", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\nindex d04a4f56754..5827373df37 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n\n@@ -10525,14 +10522,12 @@ public class ApiMgtDAO {\n      * @throws APIManagementException\n      */\n     public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n-        Connection connection = null;\n         PreparedStatement updateStatement = null;\n         PreparedStatement deleteStatement = null ;\n         PreparedStatement selectStatement = null;\n         String updateQuery;\n         int policyId = 0;\n-        try {\n-            connection = APIMgtDBUtil.getConnection();\n+        try (Connection connection = APIMgtDBUtil.getConnection()) {\n             connection.setAutoCommit(false);\n             if (policy != null) {\n                 if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n"}}, {"oid": "cea946a138945713c9af8c793cc218167525382f", "url": "https://github.com/wso2/carbon-apimgt/commit/cea946a138945713c9af8c793cc218167525382f", "message": "use try with resources", "committedDate": "2020-08-20T05:26:24Z", "type": "commit"}, {"oid": "e37cabc6b88b47586e44dd06001f42a8a9fac298", "url": "https://github.com/wso2/carbon-apimgt/commit/e37cabc6b88b47586e44dd06001f42a8a9fac298", "message": "Refine imports", "committedDate": "2020-08-20T05:29:14Z", "type": "commit"}, {"oid": "ac69c0fa8a7c202a9d45ac30e24258f8a757a95a", "url": "https://github.com/wso2/carbon-apimgt/commit/ac69c0fa8a7c202a9d45ac30e24258f8a757a95a", "message": "Address review Comments", "committedDate": "2020-08-20T06:42:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NTQyNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473655424", "bodyText": "move Prepared statements to the places using with try resource", "author": "tharindu1st", "createdAt": "2020-08-20T06:41:35Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,105 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        PreparedStatement updateStatement = null;", "originalCommit": "e37cabc6b88b47586e44dd06001f42a8a9fac298", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2MTcxOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r473661718", "bodyText": "ac69c0f", "author": "Sarangan0219", "createdAt": "2020-08-20T06:49:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY1NTQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "ac69c0fa8a7c202a9d45ac30e24258f8a757a95a", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\nindex 9f39d1d0aaf..cc111ba0b2c 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n\n@@ -10525,48 +10525,15 @@ public class ApiMgtDAO {\n      * @throws APIManagementException\n      */\n     public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n-        PreparedStatement updateStatement = null;\n-        PreparedStatement deleteStatement = null ;\n-        PreparedStatement selectStatement = null;\n         String updateQuery;\n         int policyId = 0;\n-        try (Connection connection = APIMgtDBUtil.getConnection()) {\n-            connection.setAutoCommit(false);\n-            if (policy != null) {\n-                if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n-                    selectStatement  = connection\n-                            .prepareStatement(SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL);\n-                    selectStatement .setString(1, policy.getPolicyName());\n-                    selectStatement .setInt(2, policy.getTenantId());\n-                } else if (!StringUtils.isBlank(policy.getUUID())) {\n-                    selectStatement = connection\n-                            .prepareStatement(SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_BY_UUID_SQL);\n-                    selectStatement .setString(1, policy.getUUID());\n-                } else {\n-                    String errorMsg =\n-                            \"Policy object doesn't contain mandatory parameters. At least UUID or Name,Tenant Id\"\n-                                    + \" should be provided. Name: \" + policy.getPolicyName()\n-                                    + \", Tenant Id: \" + policy.getTenantId() + \", UUID: \" + policy.getUUID();\n-                    log.error(errorMsg);\n-                    throw new APIManagementException(errorMsg);\n-                }\n-            } else {\n-                String errorMsg = \"Provided Policy to update is null\";\n-                log.error(errorMsg);\n-                throw new APIManagementException(errorMsg);\n-            }\n-\n-            ResultSet resultSet = selectStatement.executeQuery();\n-            if (resultSet.next()) {\n-                policyId = resultSet.getInt(ThrottlePolicyConstants.COLUMN_POLICY_ID);\n-            }\n-            deleteStatement = connection.prepareStatement(SQLConstants.ThrottleSQLConstants.DELETE_CONDITION_GROUP_SQL);\n-            deleteStatement.setInt(1, policyId);\n-            deleteStatement.executeUpdate();\n-\n+        String selectQuery;\n+        if (policy != null) {\n             if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL;\n                 updateQuery = SQLConstants.ThrottleSQLConstants.UPDATE_API_POLICY_SQL;\n             } else if (!StringUtils.isBlank(policy.getUUID())) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_BY_UUID_SQL;\n                 updateQuery = ThrottleSQLConstants.UPDATE_API_POLICY_BY_UUID_SQL;\n             } else {\n                 String errorMsg = \"Policy object doesn't contain mandatory parameters. At least UUID or Name,Tenant Id\"\n"}}, {"oid": "f84c89555026d4a88bd5a2ea1618ab9771ed4518", "url": "https://github.com/wso2/carbon-apimgt/commit/f84c89555026d4a88bd5a2ea1618ab9771ed4518", "message": "Address review Comments", "committedDate": "2020-08-20T06:50:35Z", "type": "commit"}, {"oid": "31a317949d5bfe926cc4dcdbc670648ac4656c11", "url": "https://github.com/wso2/carbon-apimgt/commit/31a317949d5bfe926cc4dcdbc670648ac4656c11", "message": "remove newlines", "committedDate": "2020-08-20T06:51:13Z", "type": "commit"}, {"oid": "2bf06fb069776e6cf86f5cd588a819bf8d989366", "url": "https://github.com/wso2/carbon-apimgt/commit/2bf06fb069776e6cf86f5cd588a819bf8d989366", "message": "Remove mandoty constraint for description", "committedDate": "2020-08-20T07:40:01Z", "type": "commit"}, {"oid": "9798d20e92d815ceb26391aff89a027114313fb2", "url": "https://github.com/wso2/carbon-apimgt/commit/9798d20e92d815ceb26391aff89a027114313fb2", "message": "Add Roll back to transaction", "committedDate": "2020-08-20T07:56:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0MzM0NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551743345", "bodyText": "Shall we fix the spaces here?\nselectStatement .setString(", "author": "tharikaGitHub", "createdAt": "2021-01-05T06:40:21Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -10517,49 +10517,104 @@ private void addAPIPolicy(APIPolicy policy, Connection conn) throws SQLException\n     /**\n      * Update a API level throttling policy to database.\n      * <p>\n-     * policy will be inserted with that policy Id.\n+     * If condition group already exists for the policy, that condition Group will be deleted and condition Group will\n+     * be inserted to the database with old POLICY_ID.\n      * </p>\n      *\n      * @param policy policy object defining the throttle policy\n-     * @throws SQLException\n+     * @throws APIManagementException\n      */\n-    private void updateAPIPolicy(APIPolicy policy, Connection conn) throws SQLException {\n-        ResultSet resultSet = null;\n-        PreparedStatement policyStatement = null;\n-        String addQuery = SQLConstants.ThrottleSQLConstants.INSERT_API_POLICY_WITH_ID_SQL;\n-        int policyId = policy.getPolicyId();\n-\n-        try {\n-            Statement st = conn.createStatement();\n-            String driverName = conn.getMetaData().getDriverName();\n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY ON\");\n+    public APIPolicy updateAPIPolicy(APIPolicy policy) throws APIManagementException {\n+        String updateQuery;\n+        int policyId = 0;\n+        String selectQuery;\n+        if (policy != null) {\n+            if (!StringUtils.isBlank(policy.getPolicyName()) && policy.getTenantId() != -1) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL;\n+                updateQuery = SQLConstants.ThrottleSQLConstants.UPDATE_API_POLICY_SQL;\n+            } else if (!StringUtils.isBlank(policy.getUUID())) {\n+                selectQuery = SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_BY_UUID_SQL;\n+                updateQuery = ThrottleSQLConstants.UPDATE_API_POLICY_BY_UUID_SQL;\n+            } else {\n+                String errorMsg = \"Policy object doesn't contain mandatory parameters. At least UUID or Name,Tenant Id\"\n+                                + \" should be provided. Name: \" + policy.getPolicyName()\n+                                + \", Tenant Id: \" + policy.getTenantId() + \", UUID: \" + policy.getUUID();\n+                log.error(errorMsg);\n+                throw new APIManagementException(errorMsg);\n             }\n-            String dbProductName = conn.getMetaData().getDatabaseProductName();\n-            policyStatement = conn.prepareStatement(addQuery,\n-                    new String[]{DBUtils.getConvertedAutoGeneratedColumnName(dbProductName, \"POLICY_ID\")});\n-            setCommonParametersForPolicy(policyStatement, policy);\n-            policyStatement.setString(12, policy.getUserLevel());\n-            policyStatement.setBoolean(10, true);\n-            policyStatement.setInt(13, policyId);\n-            int updatedRawCount = policyStatement.executeUpdate();\n+        } else {\n+            String errorMsg = \"Provided Policy to update is null\";\n+            log.error(errorMsg);\n+            throw new APIManagementException(errorMsg);\n+        }\n \n-            if (driverName.contains(\"MS SQL\") || driverName.contains(\"Microsoft\")) {\n-                st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY OFF\");\n-            }\n+        try (Connection connection = APIMgtDBUtil.getConnection()) {\n+            connection.setAutoCommit(false);\n+            try ( PreparedStatement selectStatement = connection.prepareStatement(selectQuery);\n+                  PreparedStatement deleteStatement = connection.prepareStatement(SQLConstants\n+                          .ThrottleSQLConstants.DELETE_CONDITION_GROUP_SQL);\n+                  PreparedStatement updateStatement = connection.prepareStatement(updateQuery)) {\n+                if (selectQuery.equals(SQLConstants.ThrottleSQLConstants.GET_API_POLICY_ID_SQL)) {\n+                    selectStatement .setString(1, policy.getPolicyName());", "originalCommit": "9798d20e92d815ceb26391aff89a027114313fb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzE0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551757144", "bodyText": "Fixed 2809e66", "author": "Sarangan0219", "createdAt": "2021-01-05T07:25:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0MzM0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDAwMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551744002", "bodyText": "These string concatenations are unnecessary. We can create a single string out of this.", "author": "tharikaGitHub", "createdAt": "2021-01-05T06:42:45Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/constants/SQLConstants.java", "diffHunk": "@@ -3183,9 +3183,26 @@\n \t\t\t\t+ \" DEFAULT_QUOTA, DEFAULT_QUOTA_UNIT, DEFAULT_UNIT_TIME, DEFAULT_TIME_UNIT, \\n\"\n \t\t\t\t+ \" IS_DEPLOYED, UUID, APPLICABLE_LEVEL, POLICY_ID) \\n\" + \"VALUES (?,?,?,?,?, ?,?,?,?,? ,?,?,?)\";\n \n-\t\tpublic static final String UPDATE_POLICY_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \" + \"NAME = ?,\" + \"DISPLAY_NAME = ?,\"\n-\t\t\t\t+ \" TYPE = ?,\" + \"TENANT_ID = ?,\" + \"APPLICABLE_LEVEL = ? ,\" + \"DESCRIPTION = ? ,\"\n-\t\t\t\t+ \" DEFAULT_QUOTA_TYPE = ? ,\" + \"DEFAULT_QUOTA = ?,\" + \"DEFAULT_UNIT_TIME = ? \" + \" WHERE POLICY_ID = ?\";\n+\n+        public static final String UPDATE_API_POLICY_BY_UUID_SQL = \"UPDATE AM_API_THROTTLE_POLICY \" + \"SET \"\n+                + \"DISPLAY_NAME = ?,\"", "originalCommit": "9798d20e92d815ceb26391aff89a027114313fb2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzIxMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9211#discussion_r551757211", "bodyText": "Fixed 2809e66", "author": "Sarangan0219", "createdAt": "2021-01-05T07:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc0NDAwMg=="}], "type": "inlineReview", "revised_code": null}]}