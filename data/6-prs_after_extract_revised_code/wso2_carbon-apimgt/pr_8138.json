{"pr_number": 8138, "pr_title": "Fix issue when updating resources in REST APIs created from WSDL", "pr_createdAt": "2020-02-03T03:26:08Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8138", "timeline": [{"oid": "db966455138a0c30093f71fb5c8ed358ce90b5ed", "url": "https://github.com/wso2/carbon-apimgt/commit/db966455138a0c30093f71fb5c8ed358ce90b5ed", "message": "Update sequences of APIs created from WSDL when swagger is updated", "committedDate": "2020-01-30T09:16:01Z", "type": "commit"}, {"oid": "2ad1340572553fb7e744a6eaa8fe671c816aad16", "url": "https://github.com/wso2/carbon-apimgt/commit/2ad1340572553fb7e744a6eaa8fe671c816aad16", "message": "Fix issue when adding new resources to SOAP to REST APIs", "committedDate": "2020-02-03T03:10:26Z", "type": "commit"}, {"oid": "46350c1e3bfc5ec65235aa8d1a906f09100e05bc", "url": "https://github.com/wso2/carbon-apimgt/commit/46350c1e3bfc5ec65235aa8d1a906f09100e05bc", "message": "Fix issue when modifying WSDL resources with path parameters", "committedDate": "2020-02-03T03:13:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyMDk0OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8138#discussion_r373920948", "bodyText": "What does this flag does? Hope if someone update the sequence it won't get affected.", "author": "harsha89", "createdAt": "2020-02-03T04:48:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java", "diffHunk": "@@ -2828,6 +2832,9 @@ public Response apisApiIdSwaggerPut(String apiId, String apiDefinition, String u\n                 apiDefinition = validationResponse.getJsonContent();\n             }\n             String updatedSwagger = updateSwagger(apiId, apiDefinition);\n+            if (isSoapToRestConvertedAPI) {", "originalCommit": "46350c1e3bfc5ec65235aa8d1a906f09100e05bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyMjg3OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8138#discussion_r373922879", "bodyText": "When updating swagger definition, for REST APIs created from SOAP back-end, we need to update the the generated sequences. This flag is used to differentiate the APIs created from WSDL.\nYes, if someone updates the sequence directly, that won't get affected as it uses a different API - [1]\n[1] https://github.com/wso2/carbon-apimgt/blob/master/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java#L2695", "author": "vithu30", "createdAt": "2020-02-03T05:01:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyMDk0OA=="}], "type": "inlineReview", "revised_code": {"commit": "6cf75cd2c0a9bb73aaa06266fa188d1b985af574", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\nindex e26e26a2e18..c2eeb2f0f95 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/publisher/v1/impl/ApisApiServiceImpl.java\n\n@@ -2809,27 +2813,32 @@ public class ApisApiServiceImpl implements ApisApiService {\n      * @param apiDefinition     Swagger definition\n      * @param url               Swagger definition URL\n      * @param fileInputStream   Swagger definition input file content\n-     * @param fileDetail\n+     * @param fileDetail        file meta information as Attachment\n      * @param ifMatch           If-match header value\n      * @return updated swagger document of the API\n      */\n     @Override\n     public Response apisApiIdSwaggerPut(String apiId, String apiDefinition, String url, InputStream fileInputStream,\n             Attachment fileDetail, String ifMatch, MessageContext messageContext) {\n-\n-        // Validate and retrieve the OpenAPI definition\n-        Map validationResponseMap = null;\n         try {\n+            String updatedSwagger;\n             String tenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n             APIIdentifier apiIdentifier = APIMappingUtil.getAPIIdentifierFromUUID(apiId, tenantDomain);\n             boolean isSoapToRestConvertedAPI = SOAPOperationBindingUtils.isSOAPToRESTApi(apiIdentifier.getApiName(),\n                     apiIdentifier.getVersion(), apiIdentifier.getProviderName());\n             //Handle URL and file based definition imports\n             if(url != null || fileInputStream != null) {\n-                validationResponseMap = validateOpenAPIDefinition(url, fileInputStream, fileDetail, true);\n-                APIDefinitionValidationResponse validationResponse = (APIDefinitionValidationResponse) validationResponseMap\n-                        .get(RestApiConstants.RETURN_MODEL);\n-                apiDefinition = validationResponse.getJsonContent();\n+                // Validate and retrieve the OpenAPI definition\n+                Map validationResponseMap = validateOpenAPIDefinition(url, fileInputStream,\n+                        fileDetail, true);\n+                APIDefinitionValidationResponse validationResponse =\n+                        (APIDefinitionValidationResponse) validationResponseMap .get(RestApiConstants.RETURN_MODEL);\n+                if (!validationResponse.isValid()) {\n+                    RestApiUtil.handleBadRequest(validationResponse.getErrorItems(), log);\n+                }\n+                updatedSwagger = updateSwagger(apiId, validationResponse);\n+            } else {\n+                updatedSwagger = updateSwagger(apiId, apiDefinition);\n             }\n             String updatedSwagger = updateSwagger(apiId, apiDefinition);\n             if (isSoapToRestConvertedAPI) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyMTYwMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8138#discussion_r373921601", "bodyText": "Is this split correct? \"[{]\" or should it be \"[{\"", "author": "tharikaGitHub", "createdAt": "2020-02-03T04:52:33Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/SequenceGenerator.java", "diffHunk": "@@ -187,8 +191,23 @@ public static void generateSequencesFromSwagger(String swaggerStr, APIIdentifier\n                     String inSequence = template.getMappingInSequence(sequenceMap, operationId, soapAction,\n                             namespace, soapNamespace, arraySequenceElements);\n                     String outSequence = template.getMappingOutSequence();\n-                    saveApiSequences(apiIdentifier, inSequence, outSequence, httpMethod.toString().toLowerCase(),\n-                            pathName);\n+                    if (isResourceFromWSDL) {\n+                        Pattern pattern = Pattern.compile(\"[{}]\");\n+                        Matcher hasSpecialCharacters = pattern.matcher(pathName);\n+                        if (hasSpecialCharacters.find()) {\n+                            String resourcePathName = pathName.split(\"[{]\")[0];", "originalCommit": "46350c1e3bfc5ec65235aa8d1a906f09100e05bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4ODQyNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8138#discussion_r375788424", "bodyText": "yes, it is added to escape the special character \"{\"", "author": "vithu30", "createdAt": "2020-02-06T11:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkyMTYwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f59645f66ce9edd779f405246a3e753740434bf4", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/SequenceGenerator.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/SequenceGenerator.java\nindex 3e0c31a84a3..eb51e93ca81 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/SequenceGenerator.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/SequenceGenerator.java\n\n@@ -192,21 +192,8 @@ public class SequenceGenerator {\n                             namespace, soapNamespace, arraySequenceElements);\n                     String outSequence = template.getMappingOutSequence();\n                     if (isResourceFromWSDL) {\n-                        Pattern pattern = Pattern.compile(\"[{}]\");\n-                        Matcher hasSpecialCharacters = pattern.matcher(pathName);\n-                        if (hasSpecialCharacters.find()) {\n-                            String resourcePathName = pathName.split(\"[{]\")[0];\n-                            if (resourcePathName.endsWith(\"/\")) {\n-                                saveApiSequences(apiIdentifier, inSequence, outSequence,\n-                                        httpMethod.toString().toLowerCase(), StringUtils.removeEnd(resourcePathName, \"/\"));\n-                            } else {\n-                                saveApiSequences(apiIdentifier, inSequence, outSequence,\n-                                        httpMethod.toString().toLowerCase(), resourcePathName);\n-                            }\n-                        } else {\n-                            saveApiSequences(apiIdentifier, inSequence, outSequence,\n-                                    httpMethod.toString().toLowerCase(), pathName);\n-                        }\n+                        saveApiSequences(apiIdentifier, inSequence, outSequence, httpMethod.toString().toLowerCase(),\n+                                pathName);\n                     }\n                 } catch (APIManagementException e) {\n                     handleException(\"Error when generating sequence property and arg elements for soap operation: \" + operationId, e);\n"}}, {"oid": "5569049ecdc9aab4ffd3fc43f027b327c8d20608", "url": "https://github.com/wso2/carbon-apimgt/commit/5569049ecdc9aab4ffd3fc43f027b327c8d20608", "message": "Fix review comments", "committedDate": "2020-02-06T12:48:46Z", "type": "commit"}, {"oid": "5569049ecdc9aab4ffd3fc43f027b327c8d20608", "url": "https://github.com/wso2/carbon-apimgt/commit/5569049ecdc9aab4ffd3fc43f027b327c8d20608", "message": "Fix review comments", "committedDate": "2020-02-06T12:48:46Z", "type": "forcePushed"}, {"oid": "6cf75cd2c0a9bb73aaa06266fa188d1b985af574", "url": "https://github.com/wso2/carbon-apimgt/commit/6cf75cd2c0a9bb73aaa06266fa188d1b985af574", "message": "Update fork", "committedDate": "2020-02-06T12:55:00Z", "type": "commit"}, {"oid": "f59645f66ce9edd779f405246a3e753740434bf4", "url": "https://github.com/wso2/carbon-apimgt/commit/f59645f66ce9edd779f405246a3e753740434bf4", "message": "Add registry property to sequences to handle path parameter case", "committedDate": "2020-02-07T08:18:51Z", "type": "forcePushed"}, {"oid": "f8f44889ffcb8100ef2bce232d2e30bbb292521a", "url": "https://github.com/wso2/carbon-apimgt/commit/f8f44889ffcb8100ef2bce232d2e30bbb292521a", "message": "Add registry property to sequences to handle path parameter case", "committedDate": "2020-02-07T08:59:44Z", "type": "forcePushed"}, {"oid": "e8b2998788dbed5b71e2fc08852a4586b8ccaa2a", "url": "https://github.com/wso2/carbon-apimgt/commit/e8b2998788dbed5b71e2fc08852a4586b8ccaa2a", "message": "Add registry property to sequences to handle path parameter case", "committedDate": "2020-02-07T09:04:00Z", "type": "forcePushed"}, {"oid": "a38ba95f35e84b2d9b4d3f45a72c0bb1a0407ae8", "url": "https://github.com/wso2/carbon-apimgt/commit/a38ba95f35e84b2d9b4d3f45a72c0bb1a0407ae8", "message": "Add registry property to sequences to handle path parameter case", "committedDate": "2020-02-07T09:15:21Z", "type": "commit"}, {"oid": "a38ba95f35e84b2d9b4d3f45a72c0bb1a0407ae8", "url": "https://github.com/wso2/carbon-apimgt/commit/a38ba95f35e84b2d9b4d3f45a72c0bb1a0407ae8", "message": "Add registry property to sequences to handle path parameter case", "committedDate": "2020-02-07T09:15:21Z", "type": "forcePushed"}]}