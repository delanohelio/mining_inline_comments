{"pr_number": 8697, "pr_title": "improve keymanagement to store information related to oauth app info", "pr_createdAt": "2020-06-10T08:56:32Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8697", "timeline": [{"oid": "87928c20f9782743f6d706dcf224de1595498352", "url": "https://github.com/wso2/carbon-apimgt/commit/87928c20f9782743f6d706dcf224de1595498352", "message": "improve keymanagement to store information related to oauth app info", "committedDate": "2020-06-10T08:55:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3ODY0OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8697#discussion_r437978648", "bodyText": "appMetaData", "author": "isharac", "createdAt": "2020-06-10T09:12:24Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIKey.java", "diffHunk": "@@ -32,6 +32,7 @@\n     private String grantTypes;\n     private Object additionalProperties;\n     private String keyManager;\n+    private String appMetadata;", "originalCommit": "87928c20f9782743f6d706dcf224de1595498352", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIKey.java b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIKey.java\nindex 66a161cec3f..8cbab78ab4e 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIKey.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/APIKey.java\n\n@@ -32,7 +32,7 @@ public class APIKey {\n     private String grantTypes;\n     private Object additionalProperties;\n     private String keyManager;\n-    private String appMetadata;\n+    private String appMetaData;\n \n     public String getState() {\n         return state;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3OTAzNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8697#discussion_r437979035", "bodyText": "formatting issue", "author": "isharac", "createdAt": "2020-06-10T09:13:04Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java", "diffHunk": "@@ -4699,7 +4699,7 @@ public OAuthApplicationInfo updateAuthClient(String userId, String applicationNa\n             oauthAppRequest.getOAuthApplicationInfo().putAllAppAttributes(application.getApplicationAttributes());\n             //call update method.\n             OAuthApplicationInfo updatedAppInfo = keyManager.updateApplication(oauthAppRequest);\n-\n+            apiMgtDAO.updateApplicationKeyTypeMetaData(application.getId(),tokenType,keyManagerName,updatedAppInfo);", "originalCommit": "87928c20f9782743f6d706dcf224de1595498352", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java\nindex 587a54786e0..2356f50213d 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java\n\n@@ -4699,7 +4699,7 @@ public class APIConsumerImpl extends AbstractAPIManager implements APIConsumer {\n             oauthAppRequest.getOAuthApplicationInfo().putAllAppAttributes(application.getApplicationAttributes());\n             //call update method.\n             OAuthApplicationInfo updatedAppInfo = keyManager.updateApplication(oauthAppRequest);\n-            apiMgtDAO.updateApplicationKeyTypeMetaData(application.getId(),tokenType,keyManagerName,updatedAppInfo);\n+            apiMgtDAO.updateApplicationKeyTypeMetaData(application.getId(), tokenType, keyManagerName, updatedAppInfo);\n             JSONObject appLogObject = new JSONObject();\n             appLogObject.put(APIConstants.AuditLogConstants.APPLICATION_NAME, updatedAppInfo.getClientName());\n             appLogObject.put(\"Updated Oauth app with Call back URL\", callbackUrl);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3OTI2Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8697#discussion_r437979263", "bodyText": "need to format the code", "author": "isharac", "createdAt": "2020-06-10T09:13:27Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AbstractAPIManager.java", "diffHunk": "@@ -3094,6 +3095,23 @@ protected String getSearchQuery(String searchQuery) throws APIManagementExceptio\n                 KeyManager keyManager = KeyManagerHolder.getKeyManagerInstance(tenantDomain, keyManagerName);\n                 if (keyManager != null) {\n                     OAuthApplicationInfo oAuthApplicationInfo = keyManager.retrieveApplication(consumerKey);\n+                    if (StringUtils.isNotEmpty(apiKey.getAppMetadata())){", "originalCommit": "87928c20f9782743f6d706dcf224de1595498352", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AbstractAPIManager.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AbstractAPIManager.java\nindex 9400c104c21..a3211e64541 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AbstractAPIManager.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/AbstractAPIManager.java\n\n@@ -3095,14 +3095,14 @@ public abstract class AbstractAPIManager implements APIManager {\n                 KeyManager keyManager = KeyManagerHolder.getKeyManagerInstance(tenantDomain, keyManagerName);\n                 if (keyManager != null) {\n                     OAuthApplicationInfo oAuthApplicationInfo = keyManager.retrieveApplication(consumerKey);\n-                    if (StringUtils.isNotEmpty(apiKey.getAppMetadata())){\n-                        OAuthApplicationInfo storedOAuthApplicationInfo = new Gson().fromJson(apiKey.getAppMetadata()\n-                                ,OAuthApplicationInfo.class);\n-                        if (oAuthApplicationInfo == null){\n+                    if (StringUtils.isNotEmpty(apiKey.getAppMetaData())) {\n+                        OAuthApplicationInfo storedOAuthApplicationInfo = new Gson().fromJson(apiKey.getAppMetaData()\n+                                , OAuthApplicationInfo.class);\n+                        if (oAuthApplicationInfo == null) {\n                             oAuthApplicationInfo = storedOAuthApplicationInfo;\n-                        }else{\n+                        } else {\n \n-                            if (StringUtils.isEmpty(oAuthApplicationInfo.getCallBackURL())){\n+                            if (StringUtils.isEmpty(oAuthApplicationInfo.getCallBackURL())) {\n                                 oAuthApplicationInfo.setCallBackURL(storedOAuthApplicationInfo.getCallBackURL());\n                             }\n                             if (oAuthApplicationInfo.getParameter(APIConstants.JSON_GRANT_TYPES) == null &&\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk4MDI5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8697#discussion_r437980295", "bodyText": "why final here?\nAlso better to move the query to SQLConstants", "author": "isharac", "createdAt": "2020-06-10T09:15:07Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -8713,7 +8711,7 @@ public boolean isKeyManagerConfigurationExistByName(String name, String tenantDo\n     }\n \n     public Set<APIKey> getKeyMappingsFromApplicationId(int applicationId) throws APIManagementException{\n-        final String query = \"SELECT UUID,CONSUMER_KEY,KEY_MANAGER,KEY_TYPE,STATE FROM AM_APPLICATION_KEY_MAPPING \" +\n+        final String query = \"SELECT UUID,CONSUMER_KEY,KEY_MANAGER,KEY_TYPE,STATE,APP_INFO FROM AM_APPLICATION_KEY_MAPPING \" +", "originalCommit": "87928c20f9782743f6d706dcf224de1595498352", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\nindex fc65295fafc..c4028d94c0c 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n\n@@ -8710,33 +8710,33 @@ public class ApiMgtDAO {\n         return false;\n     }\n \n-    public Set<APIKey> getKeyMappingsFromApplicationId(int applicationId) throws APIManagementException{\n-        final String query = \"SELECT UUID,CONSUMER_KEY,KEY_MANAGER,KEY_TYPE,STATE,APP_INFO FROM AM_APPLICATION_KEY_MAPPING \" +\n-                \"WHERE APPLICATION_ID=?\";\n-        Set<APIKey> apiKeyList  = new HashSet<>();\n-        try(Connection connection = APIMgtDBUtil.getConnection();\n-        PreparedStatement preparedStatement = connection.prepareStatement(query)){\n-            preparedStatement.setInt(1,applicationId);\n-            try(ResultSet resultSet = preparedStatement.executeQuery()){\n-             while (resultSet.next()){\n-                 APIKey apiKey = new APIKey() ;\n-                 apiKey.setMappingId(resultSet.getString(\"UUID\"));\n-                 apiKey.setConsumerKey(resultSet.getString(\"CONSUMER_KEY\"));\n-                 apiKey.setKeyManager(resultSet.getString(\"KEY_MANAGER\"));\n-                 apiKey.setType(resultSet.getString(\"KEY_TYPE\"));\n-                 apiKey.setState(resultSet.getString(\"STATE\"));\n-                 try (InputStream appInfo = resultSet.getBinaryStream(\"APP_INFO\")) {\n-                     if (appInfo != null){\n-                         apiKey.setAppMetadata(IOUtils.toString(appInfo));\n-                     }\n-                 } catch (IOException e) {\n-                     log.error(\"Error while retrieving metadata\", e);\n-                 }\n-                 apiKeyList.add(apiKey);\n-             }\n-            }\n-        } catch (SQLException e) {\n-            throw new APIManagementException(\"Error while Retrieving Key Mappings \",e);\n+    public Set<APIKey> getKeyMappingsFromApplicationId(int applicationId) throws APIManagementException {\n+\n+        Set<APIKey> apiKeyList = new HashSet<>();\n+        try (Connection connection = APIMgtDBUtil.getConnection();\n+             PreparedStatement preparedStatement = connection\n+                     .prepareStatement(SQLConstants.GET_KEY_MAPPING_INFO_FROM_APP_ID)) {\n+            preparedStatement.setInt(1, applicationId);\n+            try (ResultSet resultSet = preparedStatement.executeQuery()) {\n+                while (resultSet.next()) {\n+                    APIKey apiKey = new APIKey();\n+                    apiKey.setMappingId(resultSet.getString(\"UUID\"));\n+                    apiKey.setConsumerKey(resultSet.getString(\"CONSUMER_KEY\"));\n+                    apiKey.setKeyManager(resultSet.getString(\"KEY_MANAGER\"));\n+                    apiKey.setType(resultSet.getString(\"KEY_TYPE\"));\n+                    apiKey.setState(resultSet.getString(\"STATE\"));\n+                    try (InputStream appInfo = resultSet.getBinaryStream(\"APP_INFO\")) {\n+                        if (appInfo != null) {\n+                            apiKey.setAppMetaData(IOUtils.toString(appInfo));\n+                        }\n+                    } catch (IOException e) {\n+                        log.error(\"Error while retrieving metadata\", e);\n+                    }\n+                    apiKeyList.add(apiKey);\n+                }\n+            }\n+        } catch (SQLException e) {\n+            throw new APIManagementException(\"Error while Retrieving Key Mappings \", e);\n         }\n         return apiKeyList;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk4MTQ3Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8697#discussion_r437981472", "bodyText": "applicationId > 0 isn't it?", "author": "isharac", "createdAt": "2020-06-10T09:17:10Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java", "diffHunk": "@@ -8804,6 +8809,43 @@ public String getKeyMappingIdFromApplicationIdKeyTypeAndKeyManager(int applicati\n         return null;\n     }\n \n+    /**\n+     * This method used to update Application metadata according to oauth app info\n+     * @param applicationId\n+     * @param keyType\n+     * @param keyManagerName\n+     * @param updatedAppInfo\n+     * @throws APIManagementException\n+     */\n+    public void updateApplicationKeyTypeMetaData(int applicationId, String keyType, String keyManagerName,\n+                                                 OAuthApplicationInfo updatedAppInfo) throws APIManagementException {\n+\n+        if (applicationId != -1 && updatedAppInfo != null) {", "originalCommit": "87928c20f9782743f6d706dcf224de1595498352", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\nindex fc65295fafc..c4028d94c0c 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/ApiMgtDAO.java\n\n@@ -8820,7 +8820,7 @@ public class ApiMgtDAO {\n     public void updateApplicationKeyTypeMetaData(int applicationId, String keyType, String keyManagerName,\n                                                  OAuthApplicationInfo updatedAppInfo) throws APIManagementException {\n \n-        if (applicationId != -1 && updatedAppInfo != null) {\n+        if (applicationId > 0 && updatedAppInfo != null) {\n             String addApplicationKeyMapping = SQLConstants.UPDATE_APPLICATION_KEY_TYPE_MAPPINGS_METADATA_SQL;\n \n             try (Connection connection = APIMgtDBUtil.getConnection()) {\n"}}, {"oid": "669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "url": "https://github.com/wso2/carbon-apimgt/commit/669a7a28f2ffa5ba3d3ddc67bb5dad86b8a0d895", "message": "add reviewed fixes", "committedDate": "2020-06-10T10:27:38Z", "type": "commit"}]}