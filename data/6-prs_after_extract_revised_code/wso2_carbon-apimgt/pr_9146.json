{"pr_number": 9146, "pr_title": "Fix multiple issues", "pr_createdAt": "2020-08-06T18:59:59Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9146", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzMzczOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9146#discussion_r466633739", "bodyText": "can make 1 string.", "author": "bhathiya", "createdAt": "2020-08-06T19:21:18Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java", "diffHunk": "@@ -151,7 +151,13 @@ public AuthenticationContext authenticate(SignedJWTInfo signedJWTInfo, MessageCo\n                     log.debug(\"Subscription validation via Key Manager. Status: \"\n                             + apiKeyValidationInfoDTO.isAuthorized());\n                 }\n+                if (!apiKeyValidationInfoDTO.isAuthorized()){\n+                    log.debug(\n+                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");\n+                    throw new APISecurityException(apiKeyValidationInfoDTO.getValidationStatus(),\n+                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");", "originalCommit": "c77f2ff833e544825cf1fb6b776cbdbc93c4defc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3cad379a39665d21db7e7603a6be2eb6e3b83f7", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java\nindex c146cf57c43..3f2e908a179 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/handlers/security/jwt/JWTValidator.java\n\n@@ -153,9 +153,9 @@ public class JWTValidator {\n                 }\n                 if (!apiKeyValidationInfoDTO.isAuthorized()){\n                     log.debug(\n-                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");\n+                            \"User is NOT authorized to access the Resource. API Subscription validation failed.\");\n                     throw new APISecurityException(apiKeyValidationInfoDTO.getValidationStatus(),\n-                            \"User is NOT authorized to access the Resource. API Subscription validation \" + \"failed.\");\n+                            \"User is NOT authorized to access the Resource. API Subscription validation failed.\");\n \n                 }\n                 // Validate scopes\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYzNTQyOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9146#discussion_r466635428", "bodyText": "why a * here?", "author": "bhathiya", "createdAt": "2020-08-06T19:24:40Z", "path": "components/apimgt/org.wso2.carbon.apimgt.keymgt/src/main/java/org/wso2/carbon/apimgt/keymgt/service/APIKeyValidationService.java", "diffHunk": "@@ -484,63 +482,32 @@ public APIKeyValidationInfoDTO validateKeyforHandshake(String context, String ve\n         KeyValidationHandler keyValidationHandler =\r\n                 ServiceReferenceHolder.getInstance().getKeyValidationHandler(tenantDomain);\r\n         boolean state = keyValidationHandler.validateToken(validationContext);\r\n-        ApiMgtDAO dao = ApiMgtDAO.getInstance();\r\n         if (state) {\r\n-            info.setAuthorized(true);\r\n-            info.setValidityPeriod(validationContext.getTokenInfo().getValidityPeriod());\r\n-            info.setIssuedTime(validationContext.getTokenInfo().getIssuedTime());\r\n-            info.setKeyManager(validationContext.getValidationInfoDTO().getKeyManager());\r\n-            String def_version = isDefaultVersionInvoked(validationContext.getContext());\r\n-            if (def_version != null) {\r\n-                defaultVersionInvoked = true;\r\n-                version = def_version;\r\n-                context += \"/\" + def_version;\r\n-                validationContext.setVersion(version);\r\n-                validationContext.setContext(context);\r\n-            }\r\n-            info = dao.validateSubscriptionDetails(info, validationContext.getContext(), validationContext.getVersion(),\r\n-                    validationContext.getTokenInfo().getConsumerKey(), info.getKeyManager(),\r\n-                    defaultVersionInvoked);\r\n-\r\n-            if (defaultVersionInvoked) {\r\n-                info.setApiName(info.getApiName() + \"*\" + version);\r\n-            }\r\n-\r\n-            if (APIKeyMgtDataHolder.isJwtGenerationEnabled() &&\r\n-                    validationContext.getValidationInfoDTO().getEndUserName() != null\r\n-                    && !validationContext.isCacheHit()) {\r\n-                Application application = APIUtil.getApplicationByClientId(validationContext.getValidationInfoDTO()\r\n-                        .getConsumerKey());\r\n-                validationContext.getValidationInfoDTO().setApplicationId(String.valueOf(application.getId()));\r\n-                validationContext.getValidationInfoDTO().setApplicationTier(application.getTier());\r\n-                keyValidationHandler.generateConsumerToken(validationContext);\r\n-                info.setEndUserToken(validationContext.getValidationInfoDTO().getEndUserToken());\r\n+            state = keyValidationHandler.validateSubscription(validationContext);\r\n+            if (state) {\r\n+                if (APIConstants.DEFAULT_WEBSOCKET_VERSION.equals(version)) {\r\n+                    version = info.getApiVersion();\r\n+                    defaultVersionInvoked = true;\r\n+                }\r\n+                if (defaultVersionInvoked) {\r\n+                    validationContext.getValidationInfoDTO().setApiName(info.getApiName() + \"*\" + version);\r", "originalCommit": "c77f2ff833e544825cf1fb6b776cbdbc93c4defc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "c3cad379a39665d21db7e7603a6be2eb6e3b83f7", "url": "https://github.com/wso2/carbon-apimgt/commit/c3cad379a39665d21db7e7603a6be2eb6e3b83f7", "message": "fix Opaque token validation issue on websocket in distributed\nfix JWT doesn't contains application attributed and application uuid\nfix APIKey throttling", "committedDate": "2020-08-07T10:42:57Z", "type": "commit"}, {"oid": "c3cad379a39665d21db7e7603a6be2eb6e3b83f7", "url": "https://github.com/wso2/carbon-apimgt/commit/c3cad379a39665d21db7e7603a6be2eb6e3b83f7", "message": "fix Opaque token validation issue on websocket in distributed\nfix JWT doesn't contains application attributed and application uuid\nfix APIKey throttling", "committedDate": "2020-08-07T10:42:57Z", "type": "forcePushed"}]}