{"pr_number": 8127, "pr_title": "Fix issues wso2/product-apim/#6732 and wso2/product-apim#5897", "pr_createdAt": "2020-01-29T10:25:41Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8127", "timeline": [{"oid": "9ead852d2964879b16686f0dd45af769a83b5722", "url": "https://github.com/wso2/carbon-apimgt/commit/9ead852d2964879b16686f0dd45af769a83b5722", "message": "Fix issues wso2/product-apim/#6732 and wso2/product-apim#5897", "committedDate": "2020-01-29T09:29:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNzgxOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8127#discussion_r372327818", "bodyText": "is character length is exceeded?", "author": "ruks", "createdAt": "2020-01-29T11:25:33Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/WSDL11SOAPOperationExtractor.java", "diffHunk": "@@ -169,8 +169,19 @@ private boolean initModels() {\n                                                         + \" doesn't have any defined types\");\n                                             }\n                                         } else {\n-                                            log.warn(\"Cannot access referenced schema for the schema defined at: \"\n-                                                    + schemaUrl);\n+                                            boolean isInlineSchema = false;\n+                                            for (Object aSchema : typeList) {\n+                                                if (schemaUrl.equalsIgnoreCase(\n+                                                        ((Schema) aSchema).getElement().getAttribute(SOAPToRESTConstants.TARGET_NAMESPACE_ATTRIBUTE))) {", "originalCommit": "9ead852d2964879b16686f0dd45af769a83b5722", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM4MzczNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8127#discussion_r372383736", "bodyText": "Fixed", "author": "vithu30", "createdAt": "2020-01-29T13:34:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNzgxOA=="}], "type": "inlineReview", "revised_code": {"commit": "de2abbe9ed86a75e6d8e0fedfb62f7a5b06ecdd8", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/WSDL11SOAPOperationExtractor.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/WSDL11SOAPOperationExtractor.java\nindex 72809629588..0470436d465 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/WSDL11SOAPOperationExtractor.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/wsdl/WSDL11SOAPOperationExtractor.java\n\n@@ -172,7 +173,8 @@ public class WSDL11SOAPOperationExtractor extends WSDL11ProcessorImpl {\n                                             boolean isInlineSchema = false;\n                                             for (Object aSchema : typeList) {\n                                                 if (schemaUrl.equalsIgnoreCase(\n-                                                        ((Schema) aSchema).getElement().getAttribute(SOAPToRESTConstants.TARGET_NAMESPACE_ATTRIBUTE))) {\n+                                                        ((Schema) aSchema).getElement()\n+                                                                .getAttribute(TARGET_NAMESPACE_ATTRIBUTE))) {\n                                                     isInlineSchema = true;\n                                                     break;\n                                                 }\n"}}, {"oid": "de2abbe9ed86a75e6d8e0fedfb62f7a5b06ecdd8", "url": "https://github.com/wso2/carbon-apimgt/commit/de2abbe9ed86a75e6d8e0fedfb62f7a5b06ecdd8", "message": "Fix review comments", "committedDate": "2020-01-29T13:33:42Z", "type": "commit"}]}