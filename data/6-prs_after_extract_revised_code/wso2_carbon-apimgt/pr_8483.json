{"pr_number": 8483, "pr_title": "Add getAllEntriesInRegistry resource", "pr_createdAt": "2020-05-11T11:28:58Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8483", "timeline": [{"oid": "20bcc3585d9a367bdb71230f7710420c3e21b222", "url": "https://github.com/wso2/carbon-apimgt/commit/20bcc3585d9a367bdb71230f7710420c3e21b222", "message": "Add getAllEntriesInRegistry resource", "committedDate": "2020-05-11T11:28:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NDkzNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8483#discussion_r422974936", "bodyText": "Aren't we going to support pagination?", "author": "tgtshanika", "createdAt": "2020-05-11T11:31:44Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/EndpointRegistryImpl.java", "diffHunk": "@@ -97,4 +98,18 @@ public EndpointRegistryInfo getEndpointRegistryByUUID(String registryId) throws\n                     \"endpoint registries\", e);\n         }\n     }\n+\n+    /**\n+     * Returns all entries belong to a given endpoint registry\n+     *\n+     * @param registryId UUID of the endpoint registry\n+     * @return A list of EndpointRegistryEntry objects\n+     * @throws APIManagementException if failed to get entries of an Endpoint Registry\n+     */\n+    public List<EndpointRegistryEntry> getEndpointRegistryEntries(String registryId) throws APIManagementException {\n+        if (apiMgtDAO.getEndpointRegistryByUUID(registryId) == null) {\n+            APIUtil.handleResourceNotFoundException(\"Endpoint Registry with id: \" + registryId + \" does not exist\");", "originalCommit": "20bcc3585d9a367bdb71230f7710420c3e21b222", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NTE4OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8483#discussion_r422975188", "bodyText": "yes we are. not immediately", "author": "ChamodDamitha", "createdAt": "2020-05-11T11:32:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NDkzNg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NjAzNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8483#discussion_r422976036", "bodyText": "since UUID is unique do we need to associate the Registry table here? Just fetching from the Entry table would be sufficient right?", "author": "fazlan-nazeem", "createdAt": "2020-05-11T11:34:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/constants/SQLConstants.java", "diffHunk": "@@ -1418,6 +1418,13 @@\n             \" SELECT UUID, REG_NAME, REG_TYPE, MODE, TENANT_ID, REG_OWNER, READ_ROLE, WRITE_ROLE FROM \" +\n                     \"ENDPOINT_REG WHERE TENANT_ID = ?\";\n \n+    public static final String GET_ALL_ENTRIES_OF_ENDPOINT_REGISTRY =\n+            \"SELECT E.UUID, E.ENTRY_NAME, E.DEFINITION_TYPE, E.DEFINITION_URL, E.METADATA, \" +", "originalCommit": "20bcc3585d9a367bdb71230f7710420c3e21b222", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NjU3NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8483#discussion_r422976574", "bodyText": "foreign key is created using the auto generated id not using uuid", "author": "ChamodDamitha", "createdAt": "2020-05-11T11:35:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NjAzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3Nzc4OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8483#discussion_r422977789", "bodyText": "ignore the above comment.", "author": "fazlan-nazeem", "createdAt": "2020-05-11T11:37:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk3NjAzNg=="}], "type": "inlineReview", "revised_code": null}]}