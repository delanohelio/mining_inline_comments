{"pr_number": 9162, "pr_title": "Fixed the labeling issue in Gateway REST API", "pr_createdAt": "2020-08-10T20:28:32Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9162", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Nzg5Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469197893", "bodyText": "StringUtils.isnotempty", "author": "tharindu1st", "createdAt": "2020-08-12T11:45:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -71,7 +72,7 @@ public boolean deployAPI(String apiId, String gatewayLabel) throws  ArtifactSync\n                 try {\n                     String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n                             APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n-                    if (gatewayRuntimeArtifact != null) {\n+                    if (!StringUtils.isEmpty(gatewayRuntimeArtifact)) {", "originalCommit": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTM2NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229365", "bodyText": "Fixed f1fefa5", "author": "1akshitha", "createdAt": "2020-08-12T12:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5Nzg5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ffe9cd706afaaa664fcebf297de83fe9173ee98c", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\nindex dc9a22240c2..8cd378dcb50 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\n\n@@ -72,7 +71,7 @@ public class InMemoryAPIDeployer {\n                 try {\n                     String gatewayRuntimeArtifact = artifactRetriever.retrieveArtifact(apiId, gatewayLabel,\n                             APIConstants.GatewayArtifactSynchronizer.GATEWAY_INSTRUCTION_PUBLISH);\n-                    if (!StringUtils.isEmpty(gatewayRuntimeArtifact)) {\n+                    if (gatewayRuntimeArtifact != null) {\n                         GatewayAPIDTO gatewayAPIDTO = new Gson().fromJson(gatewayRuntimeArtifact, GatewayAPIDTO.class);\n                         APIGatewayAdminClient apiGatewayAdminClient = new APIGatewayAdminClient();\n                         apiGatewayAdminClient.deployAPI(gatewayAPIDTO);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5ODE5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469198195", "bodyText": "fix variable naming and same goes here", "author": "tharindu1st", "createdAt": "2020-08-12T11:45:38Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java", "diffHunk": "@@ -120,19 +121,20 @@ public boolean deployAllAPIsAtGatewayStartup (Set<String> assignedGatewayLabels)\n                         for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n                             GatewayAPIDTO gatewayAPIDTO = null;\n                             try {\n-                                if (APIruntimeArtifact != null) {\n+                                if (!StringUtils.isEmpty(APIruntimeArtifact)) {", "originalCommit": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTY4Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229687", "bodyText": "Fixed f1fefa5", "author": "1akshitha", "createdAt": "2020-08-12T12:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5ODE5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ffe9cd706afaaa664fcebf297de83fe9173ee98c", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\nindex dc9a22240c2..8cd378dcb50 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/InMemoryAPIDeployer.java\n\n@@ -121,20 +120,19 @@ public class InMemoryAPIDeployer {\n                         for (String APIruntimeArtifact :gatewayRuntimeArtifacts){\n                             GatewayAPIDTO gatewayAPIDTO = null;\n                             try {\n-                                if (!StringUtils.isEmpty(APIruntimeArtifact)) {\n+                                if (APIruntimeArtifact != null) {\n                                     gatewayAPIDTO = new Gson().fromJson(APIruntimeArtifact, GatewayAPIDTO.class);\n                                     log.info(\"Deploying synapse artifacts of \" + gatewayAPIDTO.getName());\n                                     apiGatewayAdminClient.deployAPI(gatewayAPIDTO);\n                                 }\n+                            if (debugEnabled) {\n+                                log.debug(\"APIs deployed in gateway with the label of \" + label);\n+                            }\n                             } catch (AxisFault axisFault) {\n                                 log.error(\"Error in deploying\" + gatewayAPIDTO.getName()+ \" to the Gateway \");\n                                 continue;\n                             }\n                         }\n-\n-                        if (debugEnabled) {\n-                            log.debug(\"APIs deployed in gateway with the label of \" + label);\n-                        }\n                     }\n                     return true;\n                 } catch (ArtifactSynchronizerException | IOException e ) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDI2MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469200261", "bodyText": "JSONArrray", "author": "tharindu1st", "createdAt": "2020-08-12T11:50:00Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();", "originalCommit": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMTg4Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469201887", "bodyText": "Converting the JSONArray to set to get the intercept of two sets.", "author": "1akshitha", "createdAt": "2020-08-12T11:53:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ffe9cd706afaaa664fcebf297de83fe9173ee98c", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\nindex bc8e6180694..e251ed14a0f 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\n\n@@ -150,24 +150,18 @@ public class DBRetriever implements ArtifactRetriever {\n             Map <String, String> apiAttribute = new HashMap<>();\n \n             JSONObject artifactObject = new JSONObject(responseString);\n-            String label = null;\n-            String apiId = null;\n-            try {\n-                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n+            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+            String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n \n-                Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n-                Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n-                if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n-                    labelsSet.retainAll(gatewaySubscribedLabel);\n-                    if (!labelsSet.isEmpty()){\n-                        label = labelsSet.iterator().next();\n-                    }\n+            Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n+            Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n+            String label = null;\n+            if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n+                labelsSet.retainAll(gatewaySubscribedLabel);\n+                if (!labelsSet.isEmpty()){\n+                    label = labelsSet.iterator().next();\n                 }\n-            } catch (Exception e ){\n-                log.error(\"Unexpected response received from the storage \", e);\n             }\n-\n             apiAttribute.put(APIConstants.GatewayArtifactSynchronizer.API_ID, apiId);\n             apiAttribute.put(APIConstants.GatewayArtifactSynchronizer.LABEL, label);\n             return apiAttribute;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDUzNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469200536", "bodyText": "can't we catch specific exception", "author": "tharindu1st", "createdAt": "2020-08-12T11:50:37Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java", "diffHunk": "@@ -143,9 +148,26 @@ public String retrieveArtifact(String APIId, String gatewayLabel, String gateway\n                 throw new ArtifactSynchronizerException(\"HTTP response is empty\");\n             }\n             Map <String, String> apiAttribute = new HashMap<>();\n+\n             JSONObject artifactObject = new JSONObject(responseString);\n-            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-            String label = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABEL);\n+            String label = null;\n+            String apiId = null;\n+            try {\n+                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n+\n+                Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n+                Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n+                if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n+                    labelsSet.retainAll(gatewaySubscribedLabel);\n+                    if (!labelsSet.isEmpty()){\n+                        label = labelsSet.iterator().next();\n+                    }\n+                }\n+            } catch (Exception e ){", "originalCommit": "2db26d21d670ee9ff7ae5ec990864f34ff7d02cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIyOTc5MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/9162#discussion_r469229791", "bodyText": "Fixed f1fefa5", "author": "1akshitha", "createdAt": "2020-08-12T12:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTIwMDUzNg=="}], "type": "inlineReview", "revised_code": {"commit": "ffe9cd706afaaa664fcebf297de83fe9173ee98c", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\nindex bc8e6180694..e251ed14a0f 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/gatewayartifactsynchronizer/DBRetriever.java\n\n@@ -150,24 +150,18 @@ public class DBRetriever implements ArtifactRetriever {\n             Map <String, String> apiAttribute = new HashMap<>();\n \n             JSONObject artifactObject = new JSONObject(responseString);\n-            String label = null;\n-            String apiId = null;\n-            try {\n-                apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n-                String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n+            String apiId = (String)artifactObject.get(APIConstants.GatewayArtifactSynchronizer.API_ID);\n+            String labelsStr = artifactObject.get(APIConstants.GatewayArtifactSynchronizer.LABELS).toString();\n \n-                Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n-                Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n-                if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n-                    labelsSet.retainAll(gatewaySubscribedLabel);\n-                    if (!labelsSet.isEmpty()){\n-                        label = labelsSet.iterator().next();\n-                    }\n+            Set<String> labelsSet = new Gson().fromJson(labelsStr, new TypeToken<HashSet<String>>(){}.getType());\n+            Set<String> gatewaySubscribedLabel = gatewayArtifactSynchronizerProperties.getGatewayLabels();\n+            String label = null;\n+            if (!labelsSet.isEmpty() || !gatewaySubscribedLabel.isEmpty()){\n+                labelsSet.retainAll(gatewaySubscribedLabel);\n+                if (!labelsSet.isEmpty()){\n+                    label = labelsSet.iterator().next();\n                 }\n-            } catch (Exception e ){\n-                log.error(\"Unexpected response received from the storage \", e);\n             }\n-\n             apiAttribute.put(APIConstants.GatewayArtifactSynchronizer.API_ID, apiId);\n             apiAttribute.put(APIConstants.GatewayArtifactSynchronizer.LABEL, label);\n             return apiAttribute;\n"}}, {"oid": "ffe9cd706afaaa664fcebf297de83fe9173ee98c", "url": "https://github.com/wso2/carbon-apimgt/commit/ffe9cd706afaaa664fcebf297de83fe9173ee98c", "message": "Fixed the labeling issue in Gateway REST API", "committedDate": "2020-08-12T14:21:46Z", "type": "commit"}, {"oid": "06866953854533cc160b083537bbb720201ab3eb", "url": "https://github.com/wso2/carbon-apimgt/commit/06866953854533cc160b083537bbb720201ab3eb", "message": "Changed the SQL query to return only the labels which has publish state", "committedDate": "2020-08-12T14:21:46Z", "type": "commit"}, {"oid": "ed3e68de759e36aaf4363d6c26e26e55713241c6", "url": "https://github.com/wso2/carbon-apimgt/commit/ed3e68de759e36aaf4363d6c26e26e55713241c6", "message": "Changed the error codes and responses", "committedDate": "2020-08-12T14:21:46Z", "type": "commit"}, {"oid": "3fefb8a6b6ed713b63c0feb0e6b9b82a37312e2d", "url": "https://github.com/wso2/carbon-apimgt/commit/3fefb8a6b6ed713b63c0feb0e6b9b82a37312e2d", "message": "Reformatted the code", "committedDate": "2020-08-12T14:21:46Z", "type": "commit"}, {"oid": "206712a4ce337c3fd3142972b99a94c9f6fab43a", "url": "https://github.com/wso2/carbon-apimgt/commit/206712a4ce337c3fd3142972b99a94c9f6fab43a", "message": "Fixed the casting error when the database response is null", "committedDate": "2020-08-12T14:21:46Z", "type": "commit"}, {"oid": "4bd6796a3f9103622f41d238a40d8496956ff8a0", "url": "https://github.com/wso2/carbon-apimgt/commit/4bd6796a3f9103622f41d238a40d8496956ff8a0", "message": "Checked for nullity in gateway APIDTO before calling the admin service", "committedDate": "2020-08-12T14:22:43Z", "type": "commit"}, {"oid": "a953a60830b7a4d02eb82f7d9b577793a433f3d5", "url": "https://github.com/wso2/carbon-apimgt/commit/a953a60830b7a4d02eb82f7d9b577793a433f3d5", "message": "Addressed review comments", "committedDate": "2020-08-12T14:23:14Z", "type": "commit"}, {"oid": "a953a60830b7a4d02eb82f7d9b577793a433f3d5", "url": "https://github.com/wso2/carbon-apimgt/commit/a953a60830b7a4d02eb82f7d9b577793a433f3d5", "message": "Addressed review comments", "committedDate": "2020-08-12T14:23:14Z", "type": "forcePushed"}]}