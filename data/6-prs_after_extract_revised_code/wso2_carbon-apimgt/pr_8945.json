{"pr_number": 8945, "pr_title": "Provide the ability to configure gateway startup", "pr_createdAt": "2020-07-07T12:52:18Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8945", "timeline": [{"oid": "c1a089139e0202f623acd584d2734198c3596186", "url": "https://github.com/wso2/carbon-apimgt/commit/c1a089139e0202f623acd584d2734198c3596186", "message": "Adding a validation for Artifact synchrnonizer feature in gateway Startup", "committedDate": "2020-07-07T09:56:30Z", "type": "commit"}, {"oid": "7ced4e3722b46202905cbeebdefc7b1437cca06d", "url": "https://github.com/wso2/carbon-apimgt/commit/7ced4e3722b46202905cbeebdefc7b1437cca06d", "message": "Adding a config for gatway startup", "committedDate": "2020-07-07T12:39:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzE2Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451033167", "bodyText": "equals otherway", "author": "tharindu1st", "createdAt": "2020-07-07T17:36:56Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -69,13 +70,22 @@ private boolean deployArtifactsAtStartup() {\n         boolean flag = false;\n         if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n             InMemoryAPIDeployer inMemoryAPIDeployer = new InMemoryAPIDeployer();\n-            flag = inMemoryAPIDeployer.deployAllAPIsAtGatewayStartup(gatewayArtifactSynchronizerProperties.getGatewayLabels());\n+            flag = inMemoryAPIDeployer.deployAllAPIsAtGatewayStartup(gatewayArtifactSynchronizerProperties\n+                    .getGatewayLabels());\n         }\n         return flag;\n     }\n \n     @Override\n     public void completedServerStartup() {\n+        if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n+            if (gatewayArtifactSynchronizerProperties.getGatewayStartup()", "originalCommit": "7ced4e3722b46202905cbeebdefc7b1437cca06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzMxNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451033314", "bodyText": "constant.equals", "author": "tharindu1st", "createdAt": "2020-07-07T17:37:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzE2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NzQ1MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451267451", "bodyText": "8bbfb81", "author": "Sarangan0219", "createdAt": "2020-07-08T03:53:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzE2Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8bbfb8183a8e67798e75c4b43436bb9c833a4c31", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 28f1d7d2db4..cc88119c801 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -79,8 +78,8 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n     @Override\n     public void completedServerStartup() {\n         if (gatewayArtifactSynchronizerProperties.isRetrieveFromStorageEnabled()) {\n-            if (gatewayArtifactSynchronizerProperties.getGatewayStartup()\n-                    .equals(APIConstants.GatewayArtifactSynchronizer.GATEWAY_STARTUP_SYNC)) {\n+            if (APIConstants.GatewayArtifactSynchronizer.GATEWAY_STARTUP_SYNC\n+                    .equals(gatewayArtifactSynchronizerProperties.getGatewayStartup())) {\n                 deployAPIsInSyncMode();\n             } else {\n                 deployAPIsInAsyncMode();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzkyMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451033920", "bodyText": "does this needed", "author": "tharindu1st", "createdAt": "2020-07-07T17:38:13Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -38,6 +39,7 @@\n     private JMSTransportHandler jmsTransportHandlerForTrafficManager;\n     private JMSTransportHandler jmsTransportHandlerForEventHub;\n     private GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n+    private boolean isAPIsDeployedInSyncMode = false;", "originalCommit": "7ced4e3722b46202905cbeebdefc7b1437cca06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NzE3Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451267177", "bodyText": "This is to verify whether all the APIs in DB are deployed in the gateway. This will become true only after every API is deployed correctly. If not deployAPIsInSyncMode() will be again triggered until each and every API is deployed. If all the APIs get deployed correctly then isAPIsDeployedInSyncMode   becomes true and server will startup.", "author": "Sarangan0219", "createdAt": "2020-07-08T03:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzMzkyMA=="}], "type": "inlineReview", "revised_code": {"commit": "ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 28f1d7d2db4..ad965915f41 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -40,6 +39,8 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n     private JMSTransportHandler jmsTransportHandlerForEventHub;\n     private GatewayArtifactSynchronizerProperties gatewayArtifactSynchronizerProperties;\n     private boolean isAPIsDeployedInSyncMode = false;\n+    private int syncModeDeploymentCount = 0;\n+    private int retryCount = 10;\n \n     public GatewayStartupListener() {\n         gatewayArtifactSynchronizerProperties =\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNDM4NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451034384", "bodyText": "no need to have if condition since it decided to go in sync.", "author": "tharindu1st", "createdAt": "2020-07-07T17:39:04Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -84,7 +94,14 @@ public void completedServerStartup() {\n                 new APIMgtGatewayCacheMessageListener());\n         jmsTransportHandlerForEventHub\n                 .subscribeForJmsEvents(APIConstants.TopicNames.TOPIC_NOTIFICATION, new GatewayJMSMessageListener());\n+    }\n \n+    private void deployAPIsInSyncMode() {\n+        isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n+        if (!isAPIsDeployedInSyncMode) {", "originalCommit": "7ced4e3722b46202905cbeebdefc7b1437cca06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI2NzQwNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451267405", "bodyText": "This to check Every API is deployed or not . #8945 (comment)", "author": "Sarangan0219", "createdAt": "2020-07-08T03:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNDM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "617f40f555c67d89b6ac37cbe6717829ae62ae90", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 28f1d7d2db4..85dced87e38 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -100,7 +99,7 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n         isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n         if (!isAPIsDeployedInSyncMode) {\n             log.error(\"Unable to deploy synapse artifacts at gateway\");\n-            deployAPIsInAsyncMode();\n+            deployAPIsInSyncMode();\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNTQzNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451035434", "bodyText": "startupConfigElement -> Retrieval Mode ?\n@pubudu538 ?", "author": "tharindu1st", "createdAt": "2020-07-07T17:40:54Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIManagerConfiguration.java", "diffHunk": "@@ -1677,6 +1677,15 @@ private void setRuntimeArtifactsSyncGatewayConfig (OMElement omElement){\n             log.debug(\"Retry Duration Element is not set. Set to default duaration\");\n         }\n \n+        OMElement startupConfigElement = omElement.getFirstChildWithName(", "originalCommit": "7ced4e3722b46202905cbeebdefc7b1437cca06d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0MTAxMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451441010", "bodyText": "+1", "author": "pubudu538", "createdAt": "2020-07-08T10:26:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNTQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ0MjI5Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451442292", "bodyText": "Data Retrieval Mode is meaningful.", "author": "pubudu538", "createdAt": "2020-07-08T10:28:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNTQzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ1ODg3OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r451458878", "bodyText": "dfeccf9", "author": "Sarangan0219", "createdAt": "2020-07-08T11:02:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzNTQzNA=="}], "type": "inlineReview", "revised_code": {"commit": "8bbfb8183a8e67798e75c4b43436bb9c833a4c31", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIManagerConfiguration.java b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIManagerConfiguration.java\nindex 3dfb2849d8c..1127289e7d8 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIManagerConfiguration.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIManagerConfiguration.java\n\n@@ -1683,7 +1683,7 @@ public class APIManagerConfiguration {\n             String serverStartup = startupConfigElement.getText();\n             gatewayArtifactSynchronizerProperties.setGatewayStartup(serverStartup);\n         } else {\n-            log.debug(\"Retry Duration Element is not set. Set to default duaration\");\n+            log.debug(\"Gateway Startup mode is not set. Set to Sync Mode\");\n         }\n \n         OMElement gatewayLabelElement = omElement\n"}}, {"oid": "8bbfb8183a8e67798e75c4b43436bb9c833a4c31", "url": "https://github.com/wso2/carbon-apimgt/commit/8bbfb8183a8e67798e75c4b43436bb9c833a4c31", "message": "refractor code", "committedDate": "2020-07-08T03:31:17Z", "type": "commit"}, {"oid": "617f40f555c67d89b6ac37cbe6717829ae62ae90", "url": "https://github.com/wso2/carbon-apimgt/commit/617f40f555c67d89b6ac37cbe6717829ae62ae90", "message": "refractor code", "committedDate": "2020-07-08T03:38:28Z", "type": "commit"}, {"oid": "dfeccf937e8c48b78ccfe0de83e8e04686c1b1f1", "url": "https://github.com/wso2/carbon-apimgt/commit/dfeccf937e8c48b78ccfe0de83e8e04686c1b1f1", "message": "rename config variable", "committedDate": "2020-07-08T10:50:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzMzgwMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452233802", "bodyText": "Since this method gets called multiple times, need to put some logs to identify how many times it was called.", "author": "jaadds", "createdAt": "2020-07-09T13:52:21Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -84,7 +93,14 @@ public void completedServerStartup() {\n                 new APIMgtGatewayCacheMessageListener());\n         jmsTransportHandlerForEventHub\n                 .subscribeForJmsEvents(APIConstants.TopicNames.TOPIC_NOTIFICATION, new GatewayJMSMessageListener());\n+    }\n \n+    private void deployAPIsInSyncMode() {", "originalCommit": "dfeccf937e8c48b78ccfe0de83e8e04686c1b1f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNjc0Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452616747", "bodyText": "1e62c1f", "author": "Sarangan0219", "createdAt": "2020-07-10T04:33:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzMzgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 85dced87e38..ad965915f41 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -96,10 +98,17 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n     }\n \n     private void deployAPIsInSyncMode() {\n+        syncModeDeploymentCount ++;\n         isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n         if (!isAPIsDeployedInSyncMode) {\n-            log.error(\"Unable to deploy synapse artifacts at gateway\");\n-            deployAPIsInSyncMode();\n+            log.error(\"Unable to deploy synapse artifacts at gateway.\");\n+            if (!(syncModeDeploymentCount > retryCount)) {\n+                deployAPIsInSyncMode();\n+            } else {\n+                log.error(\"Maximum retry limit exceeded. Server is starting without deploying all synapse artifacts\");\n+            }\n+        } else {\n+            log.info(\"Deployment successful in the attempt of  \" + syncModeDeploymentCount);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNTY0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452235640", "bodyText": "I feel we need to configure a retry limit rather than retrying indefinitely. With infinite retrying there'd be a constant load on the underlying storage and a few failed APIs can exhaust the storage fairly quickly.", "author": "jaadds", "createdAt": "2020-07-09T13:55:02Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -84,7 +93,14 @@ public void completedServerStartup() {\n                 new APIMgtGatewayCacheMessageListener());\n         jmsTransportHandlerForEventHub\n                 .subscribeForJmsEvents(APIConstants.TopicNames.TOPIC_NOTIFICATION, new GatewayJMSMessageListener());\n+    }\n \n+    private void deployAPIsInSyncMode() {\n+        isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n+        if (!isAPIsDeployedInSyncMode) {\n+            log.error(\"Unable to deploy synapse artifacts at gateway\");\n+            deployAPIsInSyncMode();", "originalCommit": "dfeccf937e8c48b78ccfe0de83e8e04686c1b1f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxNjc5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452616795", "bodyText": "ae40fd8", "author": "Sarangan0219", "createdAt": "2020-07-10T04:33:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzNTY0MA=="}], "type": "inlineReview", "revised_code": {"commit": "ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 85dced87e38..ad965915f41 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -96,10 +98,17 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n     }\n \n     private void deployAPIsInSyncMode() {\n+        syncModeDeploymentCount ++;\n         isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n         if (!isAPIsDeployedInSyncMode) {\n-            log.error(\"Unable to deploy synapse artifacts at gateway\");\n-            deployAPIsInSyncMode();\n+            log.error(\"Unable to deploy synapse artifacts at gateway.\");\n+            if (!(syncModeDeploymentCount > retryCount)) {\n+                deployAPIsInSyncMode();\n+            } else {\n+                log.error(\"Maximum retry limit exceeded. Server is starting without deploying all synapse artifacts\");\n+            }\n+        } else {\n+            log.info(\"Deployment successful in the attempt of  \" + syncModeDeploymentCount);\n         }\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4OTg0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452289844", "bodyText": "As discussed offline let's limit the retries and proceed with startup in case of a failure.", "author": "jaadds", "createdAt": "2020-07-09T15:08:50Z", "path": "components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java", "diffHunk": "@@ -84,7 +93,14 @@ public void completedServerStartup() {\n                 new APIMgtGatewayCacheMessageListener());\n         jmsTransportHandlerForEventHub\n                 .subscribeForJmsEvents(APIConstants.TopicNames.TOPIC_NOTIFICATION, new GatewayJMSMessageListener());\n+    }\n ", "originalCommit": "dfeccf937e8c48b78ccfe0de83e8e04686c1b1f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYzMTIyNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8945#discussion_r452631227", "bodyText": "ae40fd8", "author": "Sarangan0219", "createdAt": "2020-07-10T05:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4OTg0NA=="}], "type": "inlineReview", "revised_code": {"commit": "ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\nindex 85dced87e38..ad965915f41 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.gateway/src/main/java/org/wso2/carbon/apimgt/gateway/listeners/GatewayStartupListener.java\n\n@@ -96,10 +98,17 @@ public class GatewayStartupListener implements ServerStartupObserver, Runnable,\n     }\n \n     private void deployAPIsInSyncMode() {\n+        syncModeDeploymentCount ++;\n         isAPIsDeployedInSyncMode = deployArtifactsAtStartup();\n         if (!isAPIsDeployedInSyncMode) {\n-            log.error(\"Unable to deploy synapse artifacts at gateway\");\n-            deployAPIsInSyncMode();\n+            log.error(\"Unable to deploy synapse artifacts at gateway.\");\n+            if (!(syncModeDeploymentCount > retryCount)) {\n+                deployAPIsInSyncMode();\n+            } else {\n+                log.error(\"Maximum retry limit exceeded. Server is starting without deploying all synapse artifacts\");\n+            }\n+        } else {\n+            log.info(\"Deployment successful in the attempt of  \" + syncModeDeploymentCount);\n         }\n     }\n \n"}}, {"oid": "ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "url": "https://github.com/wso2/carbon-apimgt/commit/ae40fd8c53d3812a64ea9c97d69bb8600ff81a52", "message": "Adding retry limit for sync deployment", "committedDate": "2020-07-10T04:28:52Z", "type": "commit"}, {"oid": "1e62c1fcc3a0891eaf379eff1e191d80648f6a14", "url": "https://github.com/wso2/carbon-apimgt/commit/1e62c1fcc3a0891eaf379eff1e191d80648f6a14", "message": "Adding logs", "committedDate": "2020-07-10T04:32:21Z", "type": "commit"}]}