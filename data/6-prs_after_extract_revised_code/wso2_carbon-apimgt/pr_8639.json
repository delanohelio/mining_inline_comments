{"pr_number": 8639, "pr_title": "Fix issues related to custom policy creation", "pr_createdAt": "2020-06-03T06:08:30Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8639", "timeline": [{"oid": "81ba03d1fde3dfa67ff959bc772c32fc8e39561a", "url": "https://github.com/wso2/carbon-apimgt/commit/81ba03d1fde3dfa67ff959bc772c32fc8e39561a", "message": "Fix issues related to custom policy creation", "committedDate": "2020-06-08T12:50:14Z", "type": "commit"}, {"oid": "b40cd67961e164fed4c12a2929e0f112fe28c02d", "url": "https://github.com/wso2/carbon-apimgt/commit/b40cd67961e164fed4c12a2929e0f112fe28c02d", "message": "Refactor code to handle exceptions properly", "committedDate": "2020-06-08T12:50:14Z", "type": "commit"}, {"oid": "7cc8daf5ce560c9a50b1d6f5ba1fbd6fb4c8c049", "url": "https://github.com/wso2/carbon-apimgt/commit/7cc8daf5ce560c9a50b1d6f5ba1fbd6fb4c8c049", "message": "Handle payload validation of custom policy PUT method", "committedDate": "2020-06-08T12:50:15Z", "type": "commit"}, {"oid": "7cc8daf5ce560c9a50b1d6f5ba1fbd6fb4c8c049", "url": "https://github.com/wso2/carbon-apimgt/commit/7cc8daf5ce560c9a50b1d6f5ba1fbd6fb4c8c049", "message": "Handle payload validation of custom policy PUT method", "committedDate": "2020-06-08T12:50:15Z", "type": "forcePushed"}, {"oid": "debbe9d1f4810202f820583fb0161b09913d3a12", "url": "https://github.com/wso2/carbon-apimgt/commit/debbe9d1f4810202f820583fb0161b09913d3a12", "message": "Use defined constant value for POST string", "committedDate": "2020-06-16T04:40:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2Mjc2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440762766", "bodyText": "Shall we remove the empty lines", "author": "vithu30", "createdAt": "2020-06-16T10:54:47Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+", "originalCommit": "debbe9d1f4810202f820583fb0161b09913d3a12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTkxMTU5OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r571911599", "bodyText": "Fixed with b64a60e", "author": "hisanhunais", "createdAt": "2021-02-08T09:54:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2Mjc2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b64a60e14586ec830be15406b5eefceb791fbbc1", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\nindex d92dafeed52..088f58db1a8 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\n\n@@ -82,12 +82,12 @@ public class RestApiAdminUtils {\n      *\n      * @param customRuleDTO custom rule object to check\n      * @param httpMethod    HTTP method of the request\n+     * @throws APIManagementException if a required property validation fails\n      */\n     public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n             throws APIManagementException {\n \n         String propertyName;\n-\n         //policyName property is validated only for POST request\n         if (httpMethod.equalsIgnoreCase(APIConstants.HTTP_POST)) {\n             if (StringUtils.isBlank(customRuleDTO.getPolicyName())) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzQ0Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440763446", "bodyText": "What is the httpMethod we check here? can this be null or empty?", "author": "vithu30", "createdAt": "2020-06-16T10:56:05Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java", "diffHunk": "@@ -74,6 +77,38 @@ public static boolean isBlockConditionAccessibleToUser(String user, BlockConditi\n                 .equals(userTenantDomain);\n     }\n \n+    /**\n+     * Validate the required properties of Custom Rule Policy\n+     *\n+     * @param customRuleDTO custom rule object to check\n+     * @param httpMethod    HTTP method of the request\n+     */\n+    public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n+            throws APIManagementException {\n+\n+        String propertyName;\n+\n+        //policyName property is validated only for POST request\n+        if (httpMethod.equalsIgnoreCase(APIConstants.HTTP_POST)) {", "originalCommit": "debbe9d1f4810202f820583fb0161b09913d3a12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc3OTY1Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8639#discussion_r440779652", "bodyText": "This validation method will be called by both POST and PUT request. For POST request, if the policyName is blank, we need to throw and exception. But for PUT request, since the policyName value is overridden using the existing policyName value, we need to skip this validation check of policyName.", "author": "hisanhunais", "createdAt": "2020-06-16T11:28:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2MzQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b64a60e14586ec830be15406b5eefceb791fbbc1", "chunk": "diff --git a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\nindex d92dafeed52..088f58db1a8 100644\n--- a/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\n+++ b/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/RestApiAdminUtils.java\n\n@@ -82,12 +82,12 @@ public class RestApiAdminUtils {\n      *\n      * @param customRuleDTO custom rule object to check\n      * @param httpMethod    HTTP method of the request\n+     * @throws APIManagementException if a required property validation fails\n      */\n     public static void validateCustomRuleRequiredProperties(CustomRuleDTO customRuleDTO, String httpMethod)\n             throws APIManagementException {\n \n         String propertyName;\n-\n         //policyName property is validated only for POST request\n         if (httpMethod.equalsIgnoreCase(APIConstants.HTTP_POST)) {\n             if (StringUtils.isBlank(customRuleDTO.getPolicyName())) {\n"}}, {"oid": "b64a60e14586ec830be15406b5eefceb791fbbc1", "url": "https://github.com/wso2/carbon-apimgt/commit/b64a60e14586ec830be15406b5eefceb791fbbc1", "message": "Fix review comments", "committedDate": "2020-06-16T11:24:13Z", "type": "commit"}]}