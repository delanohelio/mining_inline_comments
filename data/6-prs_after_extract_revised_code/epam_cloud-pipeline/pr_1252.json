{"pr_number": 1252, "pr_title": "Issue #441 Lustre path handling improvements", "pr_createdAt": "2020-08-03T18:01:57Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1252", "timeline": [{"oid": "16b605f8d95dfb1cced3a463c78a82a3873a06cd", "url": "https://github.com/epam/cloud-pipeline/commit/16b605f8d95dfb1cced3a463c78a82a3873a06cd", "message": "Issue #441 Add more Lustre-specific verification for mount roots", "committedDate": "2020-08-03T16:56:12Z", "type": "commit"}, {"oid": "6247414f6309a1b9c2b3dd33f75ad25cc386d5fb", "url": "https://github.com/epam/cloud-pipeline/commit/6247414f6309a1b9c2b3dd33f75ad25cc386d5fb", "message": "Issue #441 Change conversion to mount paths for Lustre shares", "committedDate": "2020-08-03T16:56:16Z", "type": "commit"}, {"oid": "43150fdc622e24ed108ad0fa7a14bd2ae6a076de", "url": "https://github.com/epam/cloud-pipeline/commit/43150fdc622e24ed108ad0fa7a14bd2ae6a076de", "message": "Issue #441 Chop last path separator from Lustre mount paths", "committedDate": "2020-08-03T17:53:28Z", "type": "commit"}, {"oid": "190c9d5a501358101072a38f3cbab8046e1f7de4", "url": "https://github.com/epam/cloud-pipeline/commit/190c9d5a501358101072a38f3cbab8046e1f7de4", "message": "Support AWS FSx for Lustre (#441) - GUI 'LUSTRE' mounts path validation", "committedDate": "2020-08-04T07:53:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2MDQ3MQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1252#discussion_r464960471", "bodyText": "It would be nice to extract this to a separate method since this peace of code is duplicated several times in the file.", "author": "tcibinan", "createdAt": "2020-08-04T10:41:40Z", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java", "diffHunk": "@@ -206,8 +214,10 @@ private synchronized File mount(NFSDataStorage dataStorage) {\n \n     private synchronized void unmountNFSIfEmpty(AbstractDataStorage storage) {\n         FileShareMount fileShareMount = shareMountManager.load(storage.getFileShareMountId());\n-        File rootMount = Paths.get(rootMountPoint, normalizePath(fileShareMount.getMountRoot())).toFile();\n-\n+        final String shareMountPath = MountType.LUSTRE == fileShareMount.getMountType()\n+                                      ? normalizeLustrePath(fileShareMount.getMountRoot())\n+                                      : normalizePath(fileShareMount.getMountRoot());\n+        File rootMount = Paths.get(rootMountPoint, shareMountPath).toFile();", "originalCommit": "190c9d5a501358101072a38f3cbab8046e1f7de4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3d8ec923133347f9d843a681bb2c8b8917d1634", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java b/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\nindex 171684013..eb6e3d4a9 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\n\n@@ -202,30 +195,26 @@ public class NFSStorageProvider implements StorageProvider<NFSDataStorage> {\n                             dataStorage.getPath()), e);\n                 }\n             }\n+            String storageName = getStorageName(dataStorage.getPath());\n+            return new File(mntDir, storageName);\n         } catch (IOException e) {\n             throw new DataStorageException(messageHelper.getMessage(\n                     messageHelper.getMessage(MessageConstants.ERROR_DATASTORAGE_NFS_MOUNT, dataStorage.getName(),\n                                              dataStorage.getPath())), e);\n         }\n-\n-        String storageName = getStorageName(dataStorage.getPath());\n-        return new File(mntDir, storageName);\n     }\n \n     private synchronized void unmountNFSIfEmpty(AbstractDataStorage storage) {\n-        FileShareMount fileShareMount = shareMountManager.load(storage.getFileShareMountId());\n-        final String shareMountPath = MountType.LUSTRE == fileShareMount.getMountType()\n-                                      ? normalizeLustrePath(fileShareMount.getMountRoot())\n-                                      : normalizePath(fileShareMount.getMountRoot());\n-        File rootMount = Paths.get(rootMountPoint, shareMountPath).toFile();\n-        List<AbstractDataStorage> remaining = dataStorageDao.loadDataStoragesByFileShareMountID(\n+        final FileShareMount fileShareMount = shareMountManager.load(storage.getFileShareMountId());\n+        final File rootMount = getShareRootMount(fileShareMount);\n+        final List<AbstractDataStorage> remaining = dataStorageDao.loadDataStoragesByFileShareMountID(\n                 storage.getFileShareMountId());\n         LOGGER.debug(\"Remaining NFS: \" + remaining.stream().map(AbstractDataStorage::getPath)\n                 .collect(Collectors.joining(\";\")) + \" related with current file share mount\");\n \n         if (rootMount.exists() && isStorageOnlyOnNFS(storage, remaining)) {\n             try {\n-                String umountCmd = String.format(NFS_UNMOUNT_CMD_PATTERN, rootMount.getAbsolutePath());\n+                final String umountCmd = String.format(NFS_UNMOUNT_CMD_PATTERN, rootMount.getAbsolutePath());\n                 cmdExecutor.executeCommand(umountCmd);\n                 FileUtils.deleteDirectory(rootMount);\n             } catch (IOException e) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk2Mjk0Nw==", "url": "https://github.com/epam/cloud-pipeline/pull/1252#discussion_r464962947", "bodyText": "I suppose that If we can use final or at least effectively final variables than we should do that. Let's assign mntDir variable only once. Moreover we can extract this to a separate method.", "author": "tcibinan", "createdAt": "2020-08-04T10:46:52Z", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java", "diffHunk": "@@ -166,7 +167,14 @@ private synchronized File mount(NFSDataStorage dataStorage) {\n         File mntDir = Paths.get(rootMountPoint, getMountDirName(dataStorage.getPath())).toFile();\n         try {\n             FileShareMount fileShareMount = shareMountManager.load(dataStorage.getFileShareMountId());\n-            File rootMount = Paths.get(rootMountPoint, normalizePath(fileShareMount.getMountRoot())).toFile();\n+            final String mountPath;\n+            if (MountType.LUSTRE == fileShareMount.getMountType()) {\n+                mntDir = Paths.get(rootMountPoint, getLustreMountDirName(dataStorage.getPath())).toFile();", "originalCommit": "190c9d5a501358101072a38f3cbab8046e1f7de4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c3d8ec923133347f9d843a681bb2c8b8917d1634", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java b/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\nindex 171684013..eb6e3d4a9 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/datastorage/providers/nfs/NFSStorageProvider.java\n\n@@ -163,33 +163,26 @@ public class NFSStorageProvider implements StorageProvider<NFSDataStorage> {\n         return ActionStatus.notSupported();\n     }\n \n-    private synchronized File mount(NFSDataStorage dataStorage) {\n-        File mntDir = Paths.get(rootMountPoint, getMountDirName(dataStorage.getPath())).toFile();\n+    private synchronized File mount(final NFSDataStorage dataStorage) {\n         try {\n-            FileShareMount fileShareMount = shareMountManager.load(dataStorage.getFileShareMountId());\n-            final String mountPath;\n-            if (MountType.LUSTRE == fileShareMount.getMountType()) {\n-                mntDir = Paths.get(rootMountPoint, getLustreMountDirName(dataStorage.getPath())).toFile();\n-                mountPath = normalizeLustrePath(fileShareMount.getMountRoot());\n-            } else {\n-                mountPath = normalizePath(fileShareMount.getMountRoot());\n-            }\n-            final File rootMount = Paths.get(rootMountPoint, mountPath).toFile();\n+            final FileShareMount fileShareMount = shareMountManager.load(dataStorage.getFileShareMountId());\n+            final File mntDir = getStorageMountRoot(dataStorage, fileShareMount);\n+            final File rootMount = getShareRootMount(fileShareMount);\n             if(!rootMount.exists()) {\n                 Assert.isTrue(rootMount.mkdirs(), messageHelper.getMessage(\n                         MessageConstants.ERROR_DATASTORAGE_NFS_MOUNT_DIRECTORY_NOT_CREATED));\n \n-                AbstractCloudRegion cloudRegion = regionManager.load(fileShareMount.getRegionId());\n-                String protocol = fileShareMount.getMountType().getProtocol();\n-                AbstractCloudRegionCredentials credentials = cloudRegion.getProvider() == CloudProvider.AZURE ?\n+                final AbstractCloudRegion cloudRegion = regionManager.load(fileShareMount.getRegionId());\n+                final String protocol = fileShareMount.getMountType().getProtocol();\n+                final AbstractCloudRegionCredentials credentials = cloudRegion.getProvider() == CloudProvider.AZURE ?\n                          regionManager.loadCredentials(cloudRegion) : null;\n \n-                String mountOptions = NFSHelper.getNFSMountOption(cloudRegion, credentials,\n+                final String mountOptions = NFSHelper.getNFSMountOption(cloudRegion, credentials,\n                         dataStorage.getMountOptions(), protocol);\n \n-                String rootNfsPath = formatNfsPath(fileShareMount.getMountRoot(), protocol);\n+                final String rootNfsPath = formatNfsPath(fileShareMount.getMountRoot(), protocol);\n \n-                String mountCmd = String.format(NFS_MOUNT_CMD_PATTERN, protocol, mountOptions,\n+                final String mountCmd = String.format(NFS_MOUNT_CMD_PATTERN, protocol, mountOptions,\n                                                 rootNfsPath, rootMount.getAbsolutePath());\n                 try {\n                     cmdExecutor.executeCommand(mountCmd);\n"}}, {"oid": "c3d8ec923133347f9d843a681bb2c8b8917d1634", "url": "https://github.com/epam/cloud-pipeline/commit/c3d8ec923133347f9d843a681bb2c8b8917d1634", "message": "Issue #441 Mount path building refactoring: extract mount creation for data storage and shares", "committedDate": "2020-08-04T17:49:50Z", "type": "commit"}, {"oid": "134efed2036cb066d588fcfa36a38d6883b85cab", "url": "https://github.com/epam/cloud-pipeline/commit/134efed2036cb066d588fcfa36a38d6883b85cab", "message": "Issue #441 Extract root for NFSDataStorage using NFSHelper", "committedDate": "2020-08-06T15:45:23Z", "type": "commit"}, {"oid": "1384e0109920ac99ce48a3f5c885ff361115070b", "url": "https://github.com/epam/cloud-pipeline/commit/1384e0109920ac99ce48a3f5c885ff361115070b", "message": "Issue #441 Implement mount for nested directories from Lustre filesystem", "committedDate": "2020-08-06T17:38:48Z", "type": "commit"}, {"oid": "549e10c9e2be8a9b31cbf0c92caa18280861974d", "url": "https://github.com/epam/cloud-pipeline/commit/549e10c9e2be8a9b31cbf0c92caa18280861974d", "message": "Issue #441 Lustre mount into runs: migrate `ro` option onto nested mount", "committedDate": "2020-08-06T18:13:11Z", "type": "commit"}, {"oid": "158ad34f5c785d51d9bbae37a2c4c0c40a990614", "url": "https://github.com/epam/cloud-pipeline/commit/158ad34f5c785d51d9bbae37a2c4c0c40a990614", "message": "Issue #441 Use `final` modifier for an arguments in public NFSHelper methods", "committedDate": "2020-08-06T18:24:55Z", "type": "commit"}, {"oid": "6886bab6cc8a2b9d96689dbe3cbdc758bc240b78", "url": "https://github.com/epam/cloud-pipeline/commit/6886bab6cc8a2b9d96689dbe3cbdc758bc240b78", "message": "Issue #441 Configure dependencies after Lustre client installation for deb-based OS to have the correct client installation exit code", "committedDate": "2020-08-07T08:51:48Z", "type": "commit"}]}