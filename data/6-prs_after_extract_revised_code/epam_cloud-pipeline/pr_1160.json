{"pr_number": 1160, "pr_title": "Add EPMCMBIBPC-2658, EPMCMBIBPC-2662 GlobalSearch tests", "pr_createdAt": "2020-06-08T18:46:07Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1160", "timeline": [{"oid": "c83f98a4c17ca3658b076e00288b89d0b1d04c69", "url": "https://github.com/epam/cloud-pipeline/commit/c83f98a4c17ca3658b076e00288b89d0b1d04c69", "message": "Add EPMCMBIBPC-2658, EPMCMBIBPC-2662 GlobalSearch tests", "committedDate": "2020-06-08T17:26:29Z", "type": "commit"}, {"oid": "65100a33f8e13e027c19269150c9a5c73945287c", "url": "https://github.com/epam/cloud-pipeline/commit/65100a33f8e13e027c19269150c9a5c73945287c", "message": "Add EPMCMBIBPC-2658, EPMCMBIBPC-2662 GlobalSearch tests", "committedDate": "2020-06-08T18:54:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODg1Ng==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437278856", "bodyText": "You can use selectValue(INSTANCE_TYPE, configurationNodeType) instead of setTypeValue method creation", "author": "kamyshova", "createdAt": "2020-06-09T09:39:41Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java", "diffHunk": "@@ -116,6 +124,101 @@ public void searchResultCancel() {\n                 .close();\n     }\n \n+    @Test\n+    @TestCase(value = {\"EPMCMBIBPC-2658\"})\n+    public void searchForPipeline() {\n+        library()\n+                .cd(folder)\n+                .clickOnDraftVersion(pipeline)\n+                .configurationTab()\n+                .editConfiguration(defaultProfile, profile ->\n+                        profile\n+                                .expandTab(EXEC_ENVIRONMENT)\n+                                .expandTab(ADVANCED_PANEL)\n+                                .clear(NAME).setValue(NAME,configurationName)\n+                                .clear(DISK).setValue(DISK,configurationDisk)\n+                                .setTypeValue(configurationNodeType)", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzMjM5OA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437332398", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T11:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI3ODg1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\nindex 395970d2f..1e849c1d6 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n\n@@ -127,8 +129,7 @@ public class GlobalSearchTest extends AbstractSeveralPipelineRunningTest impleme\n     @Test\n     @TestCase(value = {\"EPMCMBIBPC-2658\"})\n     public void searchForPipeline() {\n-        library()\n-                .cd(folder)\n+        library().cd(folder)\n                 .clickOnDraftVersion(pipeline)\n                 .configurationTab()\n                 .editConfiguration(defaultProfile, profile ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDQ4Mg==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437280482", "bodyText": "'hasText()' is deprecated. Let's use the 'text()' method instead", "author": "kamyshova", "createdAt": "2020-06-09T09:42:23Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java", "diffHunk": "@@ -116,6 +124,101 @@ public void searchResultCancel() {\n                 .close();\n     }\n \n+    @Test\n+    @TestCase(value = {\"EPMCMBIBPC-2658\"})\n+    public void searchForPipeline() {\n+        library()\n+                .cd(folder)\n+                .clickOnDraftVersion(pipeline)\n+                .configurationTab()\n+                .editConfiguration(defaultProfile, profile ->\n+                        profile\n+                                .expandTab(EXEC_ENVIRONMENT)\n+                                .expandTab(ADVANCED_PANEL)\n+                                .clear(NAME).setValue(NAME,configurationName)\n+                                .clear(DISK).setValue(DISK,configurationDisk)\n+                                .setTypeValue(configurationNodeType)\n+                                .sleep(2, SECONDS)\n+                                .click(SAVE)\n+                                .sleep(2, SECONDS)\n+                );\n+        home().sleep(2, MINUTES);\n+        search()\n+                .search(pipeline)\n+                .enter()\n+                .sleep(2, SECONDS)\n+                .ensureAll(GlobalSearchAO.disable, FOLDERS, RUNS, TOOLS, DATA, ISSUES)\n+                .ensureAll(enabled, PIPELINES)\n+                .ensure(PIPELINES, hasText(\"3 PIPELINES\"))", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMyNTAyNA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437325024", "bodyText": "done", "author": "maryvictol", "createdAt": "2020-06-09T11:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDQ4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\nindex 395970d2f..1e849c1d6 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n\n@@ -127,8 +129,7 @@ public class GlobalSearchTest extends AbstractSeveralPipelineRunningTest impleme\n     @Test\n     @TestCase(value = {\"EPMCMBIBPC-2658\"})\n     public void searchForPipeline() {\n-        library()\n-                .cd(folder)\n+        library().cd(folder)\n                 .clickOnDraftVersion(pipeline)\n                 .configurationTab()\n                 .editConfiguration(defaultProfile, profile ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5NjU2NQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437296565", "bodyText": "\"config.json\" is presented 4 times in the method. Let's introduce this to variable", "author": "kamyshova", "createdAt": "2020-06-09T10:09:52Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java", "diffHunk": "@@ -116,6 +124,101 @@ public void searchResultCancel() {\n                 .close();\n     }\n \n+    @Test\n+    @TestCase(value = {\"EPMCMBIBPC-2658\"})\n+    public void searchForPipeline() {\n+        library()\n+                .cd(folder)\n+                .clickOnDraftVersion(pipeline)\n+                .configurationTab()\n+                .editConfiguration(defaultProfile, profile ->\n+                        profile\n+                                .expandTab(EXEC_ENVIRONMENT)\n+                                .expandTab(ADVANCED_PANEL)\n+                                .clear(NAME).setValue(NAME,configurationName)\n+                                .clear(DISK).setValue(DISK,configurationDisk)\n+                                .setTypeValue(configurationNodeType)\n+                                .sleep(2, SECONDS)\n+                                .click(SAVE)\n+                                .sleep(2, SECONDS)\n+                );\n+        home().sleep(2, MINUTES);\n+        search()\n+                .search(pipeline)\n+                .enter()\n+                .sleep(2, SECONDS)\n+                .ensureAll(GlobalSearchAO.disable, FOLDERS, RUNS, TOOLS, DATA, ISSUES)\n+                .ensureAll(enabled, PIPELINES)\n+                .ensure(PIPELINES, hasText(\"3 PIPELINES\"))\n+                .validateCountSearchResults(3)\n+                .hover(SEARCH_RESULT)\n+                .openSearchResultItem(pipeline)\n+                .ensure(TITLE, hasText(pipeline))\n+                .ensure(HIGHLIGHTS, hasText(\"Found in name\"))\n+                .ensure(INFO, hasText(\"draft-\"))\n+                .parent()\n+                .openSearchResultItem(\"docs/README.md\")\n+                .ensure(TITLE, hasText(\"README.md\"))\n+                .ensure(HIGHLIGHTS, hasText(\"Found in pipelineName\"))\n+                .ensure(PREVIEW, hasText(\"Job definition\"))\n+                .parent()\n+                .openSearchResultItem(\"config.json\")", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM0MjAwNg==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437342006", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T11:39:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5NjU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\nindex 395970d2f..1e849c1d6 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n\n@@ -127,8 +129,7 @@ public class GlobalSearchTest extends AbstractSeveralPipelineRunningTest impleme\n     @Test\n     @TestCase(value = {\"EPMCMBIBPC-2658\"})\n     public void searchForPipeline() {\n-        library()\n-                .cd(folder)\n+        library().cd(folder)\n                 .clickOnDraftVersion(pipeline)\n                 .configurationTab()\n                 .editConfiguration(defaultProfile, profile ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMTQ3Ng==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437301476", "bodyText": "As I can see from the test case description, \"EPMCMBIBPC-2662\" depends on \"EPMCMBIBPC-2658\". Shouldn't we make this test dependent on EPMCMBIBPC-2658?", "author": "kamyshova", "createdAt": "2020-06-09T10:18:57Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java", "diffHunk": "@@ -116,6 +124,101 @@ public void searchResultCancel() {\n                 .close();\n     }\n \n+    @Test\n+    @TestCase(value = {\"EPMCMBIBPC-2658\"})\n+    public void searchForPipeline() {\n+        library()\n+                .cd(folder)\n+                .clickOnDraftVersion(pipeline)\n+                .configurationTab()\n+                .editConfiguration(defaultProfile, profile ->\n+                        profile\n+                                .expandTab(EXEC_ENVIRONMENT)\n+                                .expandTab(ADVANCED_PANEL)\n+                                .clear(NAME).setValue(NAME,configurationName)\n+                                .clear(DISK).setValue(DISK,configurationDisk)\n+                                .setTypeValue(configurationNodeType)\n+                                .sleep(2, SECONDS)\n+                                .click(SAVE)\n+                                .sleep(2, SECONDS)\n+                );\n+        home().sleep(2, MINUTES);\n+        search()\n+                .search(pipeline)\n+                .enter()\n+                .sleep(2, SECONDS)\n+                .ensureAll(GlobalSearchAO.disable, FOLDERS, RUNS, TOOLS, DATA, ISSUES)\n+                .ensureAll(enabled, PIPELINES)\n+                .ensure(PIPELINES, hasText(\"3 PIPELINES\"))\n+                .validateCountSearchResults(3)\n+                .hover(SEARCH_RESULT)\n+                .openSearchResultItem(pipeline)\n+                .ensure(TITLE, hasText(pipeline))\n+                .ensure(HIGHLIGHTS, hasText(\"Found in name\"))\n+                .ensure(INFO, hasText(\"draft-\"))\n+                .parent()\n+                .openSearchResultItem(\"docs/README.md\")\n+                .ensure(TITLE, hasText(\"README.md\"))\n+                .ensure(HIGHLIGHTS, hasText(\"Found in pipelineName\"))\n+                .ensure(PREVIEW, hasText(\"Job definition\"))\n+                .parent()\n+                .openSearchResultItem(\"config.json\")\n+                .ensure(TITLE, hasText(\"config.json\"))\n+                .ensure(DESCRIPTION, hasText(pipeline))\n+                .ensure(HIGHLIGHTS, hasText(\"Found in pipelineName\"))\n+                .ensure(PREVIEW, hasText(configurationDisk))\n+                .ensure(PREVIEW, hasText(configurationName))\n+                .ensure(PREVIEW, hasText(configurationNodeType.substring(0, configurationNodeType.indexOf(\" \"))))\n+                .parent()\n+                .moveToSearchResultItem(pipeline, () -> new PipelineLibraryContentAO(pipeline))\n+                .assertPipelineName(pipeline);\n+        search()\n+                .search(pipeline)\n+                .enter()\n+                .sleep(2, SECONDS)\n+                .moveToSearchResultItem(\"docs/README.md\", () -> new DocumentTabAO(pipeline))\n+                .shouldContainDocument(\"README.md\");\n+        search()\n+                .search(pipeline)\n+                .enter()\n+                .sleep(2, SECONDS)\n+                .moveToSearchResultItem(\"config.json\", () -> new PipelineCodeTabAO(pipeline))\n+                .ensure(byText(\"config.json\"), visible);\n+    }\n+\n+    @Test", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAwOTUzMA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r438009530", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-10T10:03:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMTQ3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\nindex 395970d2f..1e849c1d6 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/GlobalSearchTest.java\n\n@@ -127,8 +129,7 @@ public class GlobalSearchTest extends AbstractSeveralPipelineRunningTest impleme\n     @Test\n     @TestCase(value = {\"EPMCMBIBPC-2658\"})\n     public void searchForPipeline() {\n-        library()\n-                .cd(folder)\n+        library().cd(folder)\n                 .clickOnDraftVersion(pipeline)\n                 .configurationTab()\n                 .editConfiguration(defaultProfile, profile ->\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNTM3OQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437305379", "bodyText": "Line too long. Could you break the value up, please?", "author": "kamyshova", "createdAt": "2020-06-09T10:26:11Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java", "diffHunk": "@@ -143,8 +151,11 @@ public SelenideElement context() {\n                 entry(TITLE, context().find(byClassName(\"review__title\"))),\n                 entry(DESCRIPTION, context().find(byClassName(\"review__description\"))),\n                 entry(HIGHLIGHTS, context().find(byClassName(\"review__highlights\"))),\n-                entry(PREVIEW, context().find(byClassName(\"review__content-preview\")))\n+                entry(PREVIEW, context().find(byClassName(\"review__content-preview\"))),\n+                entry(INFO, context().find(byClassName(\"review__info\"))),\n+                entry(INFO_TAB, context().find(byClassName(\"review__run-table\")))\n         );\n+        private static Condition completed = Condition.or(\"finished\", LogAO.Status.SUCCESS.reached, LogAO.Status.STOPPED.reached, LogAO.Status.FAILURE.reached);", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2MjQ1Mw==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437562453", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T16:27:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNTM3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\nindex 97f286301..dd513cfa3 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\n\n@@ -155,7 +155,9 @@ public class GlobalSearchAO implements AccessObject<GlobalSearchAO> {\n                 entry(INFO, context().find(byClassName(\"review__info\"))),\n                 entry(INFO_TAB, context().find(byClassName(\"review__run-table\")))\n         );\n-        private static Condition completed = Condition.or(\"finished\", LogAO.Status.SUCCESS.reached, LogAO.Status.STOPPED.reached, LogAO.Status.FAILURE.reached);\n+        private static Condition completed = Condition.or(\"finished\", LogAO.Status.SUCCESS.reached,\n+                                                                            LogAO.Status.STOPPED.reached,\n+                                                                            LogAO.Status.FAILURE.reached);\n \n         SearchResultItemPreviewAO(final GlobalSearchAO parentAO) {\n             super(parentAO);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxMTU0Nw==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437311547", "bodyText": "The same as above", "author": "kamyshova", "createdAt": "2020-06-09T10:37:55Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java", "diffHunk": "@@ -163,5 +174,22 @@ public SelenideElement context() {\n         public Map<Primitive, SelenideElement> elements() {\n             return elements;\n         }\n+\n+        public SearchResultItemPreviewAO checkCompletedField() {\n+            ElementsCollection list = get(INFO_TAB).findAll(By.xpath(\".//tr\"));\n+            for (int i = 1; i < list.size(); i++) {\n+                list.get(i).shouldBe(completedFieldCorrespondStatus());\n+            }\n+            return this;\n+        }\n+\n+        private Condition completedFieldCorrespondStatus() {\n+            return new Condition(\"completed field correspond Status\") {\n+                @Override\n+                public boolean apply(final WebElement element) {\n+                    return $(element).find(By.xpath(\"./td[1]\")).has(completed) ? $(element).find(By.xpath(\"./td[4]\")).text().contains(\":\") : $(element).find(By.xpath(\"./td[4]\")).text().equals(\"\");", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcyODQyNA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437728424", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T21:18:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxMTU0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\nindex 97f286301..dd513cfa3 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/GlobalSearchAO.java\n\n@@ -187,7 +189,10 @@ public class GlobalSearchAO implements AccessObject<GlobalSearchAO> {\n             return new Condition(\"completed field correspond Status\") {\n                 @Override\n                 public boolean apply(final WebElement element) {\n-                    return $(element).find(By.xpath(\"./td[1]\")).has(completed) ? $(element).find(By.xpath(\"./td[4]\")).text().contains(\":\") : $(element).find(By.xpath(\"./td[4]\")).text().equals(\"\");\n+                    String DATE_REGEX = \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}$\";\n+                    return $(element).find(By.xpath(\"./td[1]\")).has(completed) ?\n+                            $(element).find(By.xpath(\"./td[4]\")).text().matches(DATE_REGEX)\n+                            : $(element).find(By.xpath(\"./td[4]\")).text().equals(\"\");\n                 }\n             };\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxMjI2MA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437312260", "bodyText": "Method 'setTypeValue(java.lang.String)' is never used. Are we sure we need this?", "author": "kamyshova", "createdAt": "2020-06-09T10:39:20Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineConfigurationTabAO.java", "diffHunk": "@@ -84,6 +87,20 @@ public PipelineConfigurationTabAO editConfiguration(final String profileName, fi\n         return this;\n     }\n \n+    public PipelineConfigurationTabAO setTypeValue(String type) {", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1ODY0Mw==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437558643", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T16:21:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxMjI2MA=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineConfigurationTabAO.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineConfigurationTabAO.java\nindex d21471867..7b67b33f2 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineConfigurationTabAO.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineConfigurationTabAO.java\n\n@@ -87,20 +87,6 @@ public class PipelineConfigurationTabAO extends AbstractPipelineTabAO<PipelineCo\n         return this;\n     }\n \n-    public PipelineConfigurationTabAO setTypeValue(String type) {\n-        $(byText(\"Node type\"))\n-                .closest(\".launch-pipeline-form__form-item\")\n-                .find(className(\"ant-select-selection\"))\n-                .shouldBe(visible)\n-                .doubleClick();\n-\n-        $(byClassName(\"ant-select-dropdown-menu\"))\n-                .findAll(byClassName(\"ant-select-dropdown-menu-item\"))\n-                .find(text(type))\n-                .click();\n-        return this;\n-    }\n-\n     public PipelineConfigurationTabAO deleteConfiguration(final String profileName, final Consumer<ConfirmationPopupAO<PipelineConfigurationTabAO>> action) {\n         return editConfiguration(profileName, profile -> {\n             profile.click(DELETE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNDEwMA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437314100", "bodyText": "Add a space between ',hasText(name)', please. And let's use the 'text()' method instead", "author": "kamyshova", "createdAt": "2020-06-09T10:42:44Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java", "diffHunk": "@@ -102,6 +104,10 @@ public PipelineLibraryContentAO assertVersion(String version) {\n         return ensure(FIRST_VERSION, text(version));\n     }\n \n+    public PipelineLibraryContentAO assertPipelineName(String name){\n+        return ensure(xpath(\"//div[@class = 'browser__item-header']//span\"),hasText(name));", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMyODQ2Mw==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437328463", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T11:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNDEwMA=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\nindex 25e0168b2..625a4709f 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\n\n@@ -105,13 +105,17 @@ public class PipelineLibraryContentAO implements AccessObject<PipelineLibraryCon\n     }\n \n     public PipelineLibraryContentAO assertPipelineName(String name){\n-        return ensure(xpath(\"//div[@class = 'browser__item-header']//span\"),hasText(name));\n+        return ensure(xpath(\"//div[@class = 'browser__item-header']//span\"), text(name));\n     }\n \n     public PipelineLibraryContentAO assertVersionNot(String version) {\n         return ensure(FIRST_VERSION, not(text(version)));\n     }\n \n+    public String getFirstVersionName(){\n+        return $(byCssSelector(\".browser__tree-item-version\")).text();\n+    }\n+\n     public PipelineLibraryContentAO assertReleaseButton() {\n         $$(byAttribute(\"type\", \"button\")).findBy(text(\"RELEASE\")).should(exist);\n         return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNTk0NQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437315945", "bodyText": "There are ready methods for this. Use clickOnPipeline(pipeline).firstVersion().runPipeline() instead of this", "author": "kamyshova", "createdAt": "2020-06-09T10:46:27Z", "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java", "diffHunk": "@@ -132,6 +138,12 @@ public PipelineLibraryContentAO assertRunButtonIsDisplayed() {\n         return this;\n     }\n \n+    public PipelineRunFormAO clickRunButton() {\n+        sleep(5, SECONDS);\n+        $$(tagName(\"button\")).find(text(\"Run\")).shouldBe(visible).click();\n+        return new PipelineRunFormAO();\n+    }", "originalCommit": "65100a33f8e13e027c19269150c9a5c73945287c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczMTk4NA==", "url": "https://github.com/epam/cloud-pipeline/pull/1160#discussion_r437731984", "bodyText": "Done", "author": "maryvictol", "createdAt": "2020-06-09T21:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxNTk0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "d6a807383e79c26af8f0481aa6e4994378a6074b", "chunk": "diff --git a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\nindex 25e0168b2..625a4709f 100644\n--- a/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\n+++ b/e2e/gui/src/test/java/com/epam/pipeline/autotests/ao/PipelineLibraryContentAO.java\n\n@@ -138,12 +142,6 @@ public class PipelineLibraryContentAO implements AccessObject<PipelineLibraryCon\n         return this;\n     }\n \n-    public PipelineRunFormAO clickRunButton() {\n-        sleep(5, SECONDS);\n-        $$(tagName(\"button\")).find(text(\"Run\")).shouldBe(visible).click();\n-        return new PipelineRunFormAO();\n-    }\n-\n     public MetadataSectionAO showMetadata() {\n         hover(displayAttributes);\n         ensure(attributesMenu, appears);\n"}}, {"oid": "d6a807383e79c26af8f0481aa6e4994378a6074b", "url": "https://github.com/epam/cloud-pipeline/commit/d6a807383e79c26af8f0481aa6e4994378a6074b", "message": "update 2658, 2662 GlobalSearch tests", "committedDate": "2020-06-10T14:26:24Z", "type": "commit"}, {"oid": "d8d50cdc7c24200f7b8c7875cf8d128b391f3cdd", "url": "https://github.com/epam/cloud-pipeline/commit/d8d50cdc7c24200f7b8c7875cf8d128b391f3cdd", "message": "update 2658, 2662 GlobalSearch tests", "committedDate": "2020-06-10T14:35:09Z", "type": "commit"}, {"oid": "b3e52eb9eeb4ae8575e030e428b1dd1fddb4e22c", "url": "https://github.com/epam/cloud-pipeline/commit/b3e52eb9eeb4ae8575e030e428b1dd1fddb4e22c", "message": "ui_tests: licences were updated; minor style fix", "committedDate": "2020-06-10T16:16:16Z", "type": "forcePushed"}, {"oid": "96024b2bf9c85bd583a4dccd59196b4b68dc1882", "url": "https://github.com/epam/cloud-pipeline/commit/96024b2bf9c85bd583a4dccd59196b4b68dc1882", "message": "ui_tests: licences were updated; minor style fix", "committedDate": "2020-06-10T17:17:52Z", "type": "commit"}, {"oid": "96024b2bf9c85bd583a4dccd59196b4b68dc1882", "url": "https://github.com/epam/cloud-pipeline/commit/96024b2bf9c85bd583a4dccd59196b4b68dc1882", "message": "ui_tests: licences were updated; minor style fix", "committedDate": "2020-06-10T17:17:52Z", "type": "forcePushed"}]}