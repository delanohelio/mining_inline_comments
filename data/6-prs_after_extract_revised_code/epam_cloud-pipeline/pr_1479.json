{"pr_number": 1479, "pr_title": "Allow to transfer objects between AWS regions using pipe cp/mv commands", "pr_createdAt": "2020-10-07T14:39:17Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1479", "timeline": [{"oid": "ccb18cb7383690ed04b919ad8469d6cf873ac844", "url": "https://github.com/epam/cloud-pipeline/commit/ccb18cb7383690ed04b919ad8469d6cf873ac844", "message": "Issue #1469: Allow to transfer objects between AWS regions using pipe cp/mv commands (WIP)", "committedDate": "2020-10-06T13:45:59Z", "type": "commit"}, {"oid": "da130c979f36c960fe845a6b41a2957cb56dc62c", "url": "https://github.com/epam/cloud-pipeline/commit/da130c979f36c960fe845a6b41a2957cb56dc62c", "message": "Issue #1469: Allow to transfer objects between AWS regions using pipe cp/mv commands", "committedDate": "2020-10-07T14:11:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4OTg1Mg==", "url": "https://github.com/epam/cloud-pipeline/pull/1479#discussion_r501589852", "bodyText": "Could you please move all error messages (in Assert methods to message constants)", "author": "mzueva", "createdAt": "2020-10-08T09:48:44Z", "path": "api/src/main/java/com/epam/pipeline/manager/cloud/TemporaryCredentialsManagerImpl.java", "diffHunk": "@@ -56,32 +59,48 @@ public TemporaryCredentialsManagerImpl(final List<TemporaryCredentialsGenerator>\n     @SensitiveStorageOperation\n     @Override\n     public TemporaryCredentials generate(final List<DataStorageAction> actions) {\n-        final AbstractDataStorage dataStorage = ListUtils.emptyIfNull(actions)\n-                .stream()\n-                .findFirst()\n-                .map(action -> dataStorageManager.load(action.getId()))\n-                .orElseThrow(() -> new IllegalArgumentException(\"Actions are not provided\"));\n-        final TemporaryCredentialsGenerator credentialsGenerator = getCredentialsGenerator(dataStorage);\n+        final List<AbstractDataStorage> storages = actions.stream()\n+                .filter(this::storageIdNotNull)\n+                .map(DataStorageAction::getId)\n+                .distinct()\n+                .map(dataStorageManager::load)\n+                .collect(Collectors.toList());\n+        Assert.state(CollectionUtils.isNotEmpty(storages), \"No storages were specified\");\n+        final TemporaryCredentialsGenerator credentialsGenerator = getCredentialsGenerator(storages);\n \n-        final AbstractCloudRegion region = credentialsGenerator.getRegion(dataStorage);\n+        final Map<Long, AbstractDataStorage> storagesById = storages.stream()\n+                .collect(Collectors.toMap(AbstractDataStorage::getId, Function.identity()));\n+        actions.forEach(action -> prepareAction(action, storagesById));\n \n-        actions.forEach(action -> {\n-            AbstractDataStorage loadedDataStorage =\n-                    action.getId().equals(dataStorage.getId()) ? dataStorage : dataStorageManager.load(action.getId());\n-            action.setBucketName(loadedDataStorage.getRoot());\n-            action.setPath(loadedDataStorage.getPath());\n-            AbstractCloudRegion loadedRegion = credentialsGenerator.getRegion(loadedDataStorage);\n-            Assert.isTrue(Objects.equals(region.getId(), loadedRegion.getId()),\n-                    \"Actions shall be requested for buckets from the same region\");\n-        });\n-\n-        return credentialsGenerator.generate(actions, dataStorage);\n+        return credentialsGenerator.generate(actions, storages);\n     }\n \n-    private TemporaryCredentialsGenerator getCredentialsGenerator(final AbstractDataStorage dataStorage) {\n-        return Optional.ofNullable(MapUtils.emptyIfNull(credentialsGenerators).get(dataStorage.getType()))\n+    private TemporaryCredentialsGenerator getCredentialsGenerator(final List<AbstractDataStorage> storages) {\n+        final AbstractDataStorage storage = verifyAllTypesAreSameAngGetStorage(storages);\n+        return Optional.ofNullable(MapUtils.emptyIfNull(credentialsGenerators).get(storage.getType()))\n                 .orElseThrow(() -> new IllegalArgumentException(\n                         messageHelper.getMessage(MessageConstants.ERROR_DATASTORAGE_NOT_SUPPORTED,\n-                                dataStorage.getName(), dataStorage.getType())));\n+                                storage.getName(), storage.getType())));\n+    }\n+\n+    private void prepareAction(final DataStorageAction action, final Map<Long, AbstractDataStorage> storagesById) {\n+        final AbstractDataStorage loadedDataStorage = storagesById.get(action.getId());\n+        action.setBucketName(loadedDataStorage.getRoot());\n+        action.setPath(loadedDataStorage.getPath());\n+    }\n+\n+    private AbstractDataStorage verifyAllTypesAreSameAngGetStorage(final List<AbstractDataStorage> storages) {\n+        Assert.state(storages.stream()\n+                .map(AbstractDataStorage::getType)\n+                .distinct()\n+                .count() <= 1, \"Storage types shall be the same\");", "originalCommit": "da130c979f36c960fe845a6b41a2957cb56dc62c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTY1Nw==", "url": "https://github.com/epam/cloud-pipeline/pull/1479#discussion_r501639657", "bodyText": "done", "author": "ekazachkova", "createdAt": "2020-10-08T11:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4OTg1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "829087434f5bc4f3b56976f92adfc0ac5be5d21f", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/cloud/TemporaryCredentialsManagerImpl.java b/api/src/main/java/com/epam/pipeline/manager/cloud/TemporaryCredentialsManagerImpl.java\nindex d60b603bf..04a2a6b8f 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/cloud/TemporaryCredentialsManagerImpl.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/cloud/TemporaryCredentialsManagerImpl.java\n\n@@ -65,7 +65,8 @@ public class TemporaryCredentialsManagerImpl implements TemporaryCredentialsMana\n                 .distinct()\n                 .map(dataStorageManager::load)\n                 .collect(Collectors.toList());\n-        Assert.state(CollectionUtils.isNotEmpty(storages), \"No storages were specified\");\n+        Assert.state(CollectionUtils.isNotEmpty(storages),\n+                messageHelper.getMessage(MessageConstants.ERROR_DATASTORAGES_NOT_FOUND));\n         final TemporaryCredentialsGenerator credentialsGenerator = getCredentialsGenerator(storages);\n \n         final Map<Long, AbstractDataStorage> storagesById = storages.stream()\n"}}, {"oid": "829087434f5bc4f3b56976f92adfc0ac5be5d21f", "url": "https://github.com/epam/cloud-pipeline/commit/829087434f5bc4f3b56976f92adfc0ac5be5d21f", "message": "Issue #1469: Allow to transfer objects between AWS regions using pipe cp/mv commands - refactor message constants", "committedDate": "2020-10-08T11:04:50Z", "type": "commit"}]}