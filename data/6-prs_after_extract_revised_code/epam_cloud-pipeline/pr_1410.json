{"pr_number": 1410, "pr_title": "Advanced configuration of notifications/automatic actions for \"idle\" runs", "pr_createdAt": "2020-09-17T11:06:05Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1410", "timeline": [{"oid": "432809790dc07c2c6ad01d0107f702a3f45f9b68", "url": "https://github.com/epam/cloud-pipeline/commit/432809790dc07c2c6ad01d0107f702a3f45f9b68", "message": "Issue #1385: Advanced configuration of notifications/automatic actions for \"idle\" runs", "committedDate": "2020-09-17T10:25:27Z", "type": "commit"}, {"oid": "6c4799859bcbb28ff6fdb7c11e3d1c5aab48cfab", "url": "https://github.com/epam/cloud-pipeline/commit/6c4799859bcbb28ff6fdb7c11e3d1c5aab48cfab", "message": "Issue #1385: Advanced configuration of notifications/automatic actions for \"idle\" runs - cleanups", "committedDate": "2020-09-17T11:03:58Z", "type": "commit"}, {"oid": "aedde9557551bfe1178b4fae0c80d3d7cb2e618d", "url": "https://github.com/epam/cloud-pipeline/commit/aedde9557551bfe1178b4fae0c80d3d7cb2e618d", "message": "Issue #1385: Advanced configuration of notifications/automatic actions for \"idle\" runs - cleanups for LongPausedRunAction", "committedDate": "2020-09-17T11:20:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3ODg5NQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1410#discussion_r490178895", "bodyText": "Just stop is not enough in this case as paused instance will stay in the cloud: I'd suggest to use NodesManager.terminateNode method here.", "author": "mzueva", "createdAt": "2020-09-17T11:45:45Z", "path": "api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java", "diffHunk": "@@ -434,5 +436,30 @@ public void updateInstanceMap(Map<String, InstanceType> types) {\n             instanceTypeMap.clear();\n             instanceTypeMap.putAll(types);\n         }\n+\n+        private void processLongPausedRuns() {\n+            final LongPausedRunAction action = LongPausedRunAction.valueOf(preferenceManager.getPreference(\n+                    SystemPreferences.SYSTEM_LONG_PAUSED_ACTION));\n+\n+            final List<PipelineRun> pausedRuns = pipelineRunManager\n+                    .loadRunsByStatuses(Collections.singletonList(TaskStatus.PAUSED)).stream()\n+                    .map(run -> pipelineRunManager.loadPipelineRunWithStatuses(run.getId()))\n+                    .collect(Collectors.toList());\n+\n+            processLongPausedRuns(pausedRuns, action);\n+        }\n+\n+        private void processLongPausedRuns(final List<PipelineRun> pausedRuns, final LongPausedRunAction action) {\n+            if (CollectionUtils.isEmpty(pausedRuns)) {\n+                return;\n+            }\n+\n+            if (LongPausedRunAction.STOP.equals(action)) {\n+                ListUtils.emptyIfNull(notificationManager.notifyLongPausedRunsBeforeStop(pausedRuns))\n+                        .forEach(run -> pipelineRunManager.stop(run.getId()));", "originalCommit": "aedde9557551bfe1178b4fae0c80d3d7cb2e618d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccf0ba01dcbc0dd49e5e714812e16adcbe515402", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java b/api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java\nindex bc142e744..1ccdd13d1 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java\n\n@@ -456,7 +456,7 @@ public class ResourceMonitoringManager extends AbstractSchedulingManager {\n \n             if (LongPausedRunAction.STOP.equals(action)) {\n                 ListUtils.emptyIfNull(notificationManager.notifyLongPausedRunsBeforeStop(pausedRuns))\n-                        .forEach(run -> pipelineRunManager.stop(run.getId()));\n+                        .forEach(run -> pipelineRunManager.terminateRun(run.getId()));\n             } else {\n                 notificationManager.notifyLongPausedRuns(pausedRuns);\n             }\n"}}, {"oid": "ccf0ba01dcbc0dd49e5e714812e16adcbe515402", "url": "https://github.com/epam/cloud-pipeline/commit/ccf0ba01dcbc0dd49e5e714812e16adcbe515402", "message": "Issue #1385: Advanced configuration of notifications/automatic actions for \"idle\" runs - terminate instance instead of stop", "committedDate": "2020-09-17T13:00:19Z", "type": "commit"}]}