{"pr_number": 1136, "pr_title": "Issue 1124 Sensitive runs", "pr_createdAt": "2020-05-25T09:26:43Z", "pr_url": "https://github.com/epam/cloud-pipeline/pull/1136", "timeline": [{"oid": "3521a8326bb795a14c26f5c6b878efe0a7fcfe37", "url": "https://github.com/epam/cloud-pipeline/commit/3521a8326bb795a14c26f5c6b878efe0a7fcfe37", "message": "(issue #1124) introduce new PipelineRun field sensitive", "committedDate": "2020-05-25T09:22:39Z", "type": "commit"}, {"oid": "12625146e95314518e33a3b3f4d1f0ac0b34cd16", "url": "https://github.com/epam/cloud-pipeline/commit/12625146e95314518e33a3b3f4d1f0ac0b34cd16", "message": "(issue #1124) FSBrowser installation check", "committedDate": "2020-05-25T09:22:39Z", "type": "commit"}, {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "url": "https://github.com/epam/cloud-pipeline/commit/c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "message": "(issue #1124) mount storages with ro permission if run is sensitive", "committedDate": "2020-05-25T09:24:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODEzMQ==", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448131", "bodyText": "It would be helpful to add a method to load  a list of storages by id, to reduce number of db requests.", "author": "mzueva", "createdAt": "2020-05-26T14:18:22Z", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n+        return parameters.entrySet().stream()\n+                .filter(v->v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n+                .map(Map.Entry::getValue)\n+                .flatMap(pipeConfValueVO -> Arrays.stream(\n+                        StringUtils.commaDelimitedListToStringArray(pipeConfValueVO.getValue()))\n+                )\n+                .map(Long::valueOf)\n+                .anyMatch(id -> dataStorageManager.load(id).isSensitive());", "originalCommit": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ee21e747d1c3f1b73df6bc8289383c0bca84278", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\nindex b888af5b7..10db68948 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n\n@@ -827,15 +828,20 @@ public class PipelineRunManager {\n         return run;\n     }\n \n-    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n-        return parameters.entrySet().stream()\n-                .filter(v->v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n+    private boolean checkRunForSensitivity(final Map<String, PipeConfValueVO> parameters) {\n+        List<Long> datastorageIds = MapUtils.emptyIfNull(parameters).entrySet().stream()\n+                .filter(v -> v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n                 .map(Map.Entry::getValue)\n                 .flatMap(pipeConfValueVO -> Arrays.stream(\n                         StringUtils.commaDelimitedListToStringArray(pipeConfValueVO.getValue()))\n                 )\n                 .map(Long::valueOf)\n-                .anyMatch(id -> dataStorageManager.load(id).isSensitive());\n+                .collect(Collectors.toList());\n+        if (datastorageIds.isEmpty()) {\n+            return false;\n+        }\n+        return dataStorageManager.getDatastoragesByIds(datastorageIds)\n+                .stream().anyMatch(AbstractDataStorage::isSensitive);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRED)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODMzOA==", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448338", "bodyText": "Missing final", "author": "mzueva", "createdAt": "2020-05-26T14:18:38Z", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {", "originalCommit": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ee21e747d1c3f1b73df6bc8289383c0bca84278", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\nindex b888af5b7..10db68948 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n\n@@ -827,15 +828,20 @@ public class PipelineRunManager {\n         return run;\n     }\n \n-    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n-        return parameters.entrySet().stream()\n-                .filter(v->v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n+    private boolean checkRunForSensitivity(final Map<String, PipeConfValueVO> parameters) {\n+        List<Long> datastorageIds = MapUtils.emptyIfNull(parameters).entrySet().stream()\n+                .filter(v -> v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n                 .map(Map.Entry::getValue)\n                 .flatMap(pipeConfValueVO -> Arrays.stream(\n                         StringUtils.commaDelimitedListToStringArray(pipeConfValueVO.getValue()))\n                 )\n                 .map(Long::valueOf)\n-                .anyMatch(id -> dataStorageManager.load(id).isSensitive());\n+                .collect(Collectors.toList());\n+        if (datastorageIds.isEmpty()) {\n+            return false;\n+        }\n+        return dataStorageManager.getDatastoragesByIds(datastorageIds)\n+                .stream().anyMatch(AbstractDataStorage::isSensitive);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRED)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODY3OA==", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448678", "bodyText": "Wrap into MapUtils.emptyIfNull", "author": "mzueva", "createdAt": "2020-05-26T14:19:04Z", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n+        return parameters.entrySet().stream()", "originalCommit": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ee21e747d1c3f1b73df6bc8289383c0bca84278", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\nindex b888af5b7..10db68948 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java\n\n@@ -827,15 +828,20 @@ public class PipelineRunManager {\n         return run;\n     }\n \n-    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n-        return parameters.entrySet().stream()\n-                .filter(v->v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n+    private boolean checkRunForSensitivity(final Map<String, PipeConfValueVO> parameters) {\n+        List<Long> datastorageIds = MapUtils.emptyIfNull(parameters).entrySet().stream()\n+                .filter(v -> v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n                 .map(Map.Entry::getValue)\n                 .flatMap(pipeConfValueVO -> Arrays.stream(\n                         StringUtils.commaDelimitedListToStringArray(pipeConfValueVO.getValue()))\n                 )\n                 .map(Long::valueOf)\n-                .anyMatch(id -> dataStorageManager.load(id).isSensitive());\n+                .collect(Collectors.toList());\n+        if (datastorageIds.isEmpty()) {\n+            return false;\n+        }\n+        return dataStorageManager.getDatastoragesByIds(datastorageIds)\n+                .stream().anyMatch(AbstractDataStorage::isSensitive);\n     }\n \n     @Transactional(propagation = Propagation.REQUIRED)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ1MDMwMg==", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430450302", "bodyText": "Missing final", "author": "mzueva", "createdAt": "2020-05-26T14:21:14Z", "path": "api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java", "diffHunk": "@@ -49,13 +54,17 @@ public String buildSshUrl(Long runId) {\n     }\n \n     public String buildFSBrowserUrl(Long runId) {\n-        if (isFSBrowserEnabled()) {\n+        if (isFSBrowserEnabled() && runIsNotSensitive(runId)) {\n             return buildUrl(FSBROWSER_URL_TEMPLATE, runId);\n         } else {\n             throw new IllegalArgumentException(\"Storage fsbrowser is not enabled.\");\n         }\n     }\n \n+    private boolean runIsNotSensitive(Long runId) {", "originalCommit": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7ee21e747d1c3f1b73df6bc8289383c0bca84278", "chunk": "diff --git a/api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java b/api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java\nindex 6e687b8e5..d899249ac 100644\n--- a/api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java\n+++ b/api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java\n\n@@ -61,7 +61,7 @@ public class UtilsManager {\n         }\n     }\n \n-    private boolean runIsNotSensitive(Long runId) {\n+    private boolean runIsNotSensitive(final Long runId) {\n         return !BooleanUtils.toBoolean(runManager.loadPipelineRun(runId).getSensitive());\n     }\n \n"}}, {"oid": "7ee21e747d1c3f1b73df6bc8289383c0bca84278", "url": "https://github.com/epam/cloud-pipeline/commit/7ee21e747d1c3f1b73df6bc8289383c0bca84278", "message": "(issue #1124) changes for review", "committedDate": "2020-05-26T16:44:02Z", "type": "commit"}]}