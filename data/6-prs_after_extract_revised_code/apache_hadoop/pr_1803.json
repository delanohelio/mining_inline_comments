{"pr_number": 1803, "pr_title": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs.", "pr_createdAt": "2020-01-13T07:00:15Z", "pr_url": "https://github.com/apache/hadoop/pull/1803", "timeline": [{"oid": "7cdd02efeb76cc88593a47354d016956f31a1ea3", "url": "https://github.com/apache/hadoop/commit/7cdd02efeb76cc88593a47354d016956f31a1ea3", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs", "committedDate": "2020-01-13T06:51:18Z", "type": "commit"}, {"oid": "e5db4277b8c12e8664405cba47d5b8abcadd3e60", "url": "https://github.com/apache/hadoop/commit/e5db4277b8c12e8664405cba47d5b8abcadd3e60", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs. Fixed findbugs", "committedDate": "2020-01-13T10:01:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NDg3Ng==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365744876", "bodyText": "final?", "author": "steveloughran", "createdAt": "2020-01-13T10:58:50Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =", "originalCommit": "e5db4277b8c12e8664405cba47d5b8abcadd3e60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1NTY3NA==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365755674", "bodyText": "yes. Will make it final.", "author": "vinayakumarb", "createdAt": "2020-01-13T11:27:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NDg3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\nindex bfd82cebefd..faaf5131902 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n\n@@ -62,8 +62,8 @@ public static IOException getRemoteException(ServiceException se) {\n    * This map should not be accessed directly. Used the getFixedByteString\n    * methods instead.\n    */\n-  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n-      new ConcurrentHashMap<>();\n+  private final static ConcurrentHashMap<Object, ByteString>\n+      fixedByteStringCache = new ConcurrentHashMap<>();\n \n   /**\n    * Get the ByteString for frequently used fixed and small set strings.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NjI2MQ==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365746261", "bodyText": "I think I'd prefer some explicit description \"tokenFromProto\", but not that fussy about overloading if you prefer that", "author": "steveloughran", "createdAt": "2020-01-13T11:02:20Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n+      new ConcurrentHashMap<>();\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(Text key) {\n+    ByteString value = fixedByteStringCache.get(key);\n+    if (value == null) {\n+      value = ByteString.copyFromUtf8(key.toString());\n+      fixedByteStringCache.put(new Text(key.copyBytes()), value);\n+    }\n+    return value;\n+  }\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(String key) {\n+    ByteString value = fixedByteStringCache.get(key);\n+    if (value == null) {\n+      value = ByteString.copyFromUtf8(key);\n+      fixedByteStringCache.put(key, value);\n+    }\n+    return value;\n+  }\n+\n+  public static ByteString getByteString(byte[] bytes) {\n+    // return singleton to reduce object allocation\n+    return (bytes.length == 0) ? ByteString.EMPTY : ByteString.copyFrom(bytes);\n+  }\n+\n+  public static Token<? extends TokenIdentifier> convert(", "originalCommit": "e5db4277b8c12e8664405cba47d5b8abcadd3e60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1NTg5OQ==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365755899", "bodyText": "Okay, Will change method name.", "author": "vinayakumarb", "createdAt": "2020-01-13T11:28:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NjI2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc4ODY0NQ==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365788645", "bodyText": "Updated PR. please check.", "author": "vinayakumarb", "createdAt": "2020-01-13T12:56:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NjI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\nindex bfd82cebefd..faaf5131902 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n\n@@ -62,8 +62,8 @@ public static IOException getRemoteException(ServiceException se) {\n    * This map should not be accessed directly. Used the getFixedByteString\n    * methods instead.\n    */\n-  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n-      new ConcurrentHashMap<>();\n+  private final static ConcurrentHashMap<Object, ByteString>\n+      fixedByteStringCache = new ConcurrentHashMap<>();\n \n   /**\n    * Get the ByteString for frequently used fixed and small set strings.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NzI2MA==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365747260", "bodyText": "Is there any risk this will grow to a size it becomes a problem? If not, using a guava cache is overkill, if there is a risk then yes, we would need to", "author": "steveloughran", "createdAt": "2020-01-13T11:04:49Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java", "diffHunk": "@@ -46,4 +52,67 @@ public static IOException getRemoteException(ServiceException se) {\n     }\n     return e instanceof IOException ? (IOException) e : new IOException(se);\n   }\n+\n+\n+  /**\n+   * Map used to cache fixed strings to ByteStrings. Since there is no\n+   * automatic expiration policy, only use this for strings from a fixed, small\n+   * set.\n+   * <p/>\n+   * This map should not be accessed directly. Used the getFixedByteString\n+   * methods instead.\n+   */\n+  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n+      new ConcurrentHashMap<>();\n+\n+  /**\n+   * Get the ByteString for frequently used fixed and small set strings.\n+   * @param key string\n+   * @return\n+   */\n+  public static ByteString getFixedByteString(Text key) {", "originalCommit": "e5db4277b8c12e8664405cba47d5b8abcadd3e60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1ODA5Ng==", "url": "https://github.com/apache/hadoop/pull/1803#discussion_r365758096", "bodyText": "This is for frequently converting the fixed strings, such as 'token kind' and 'token service' in client side. These numbers will be fixed. ex: HDFS_DELEGATION_TOKEN, HDFS_BLOCK_TOKEN, etc.\nFor the other bytestrings (such as datanode network location) guava cache is used in PBHelperClient with expiry.\nSo it should be fine.", "author": "vinayakumarb", "createdAt": "2020-01-13T11:34:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0NzI2MA=="}], "type": "inlineReview", "revised_code": {"commit": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\nindex bfd82cebefd..faaf5131902 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufHelper.java\n\n@@ -62,8 +62,8 @@ public static IOException getRemoteException(ServiceException se) {\n    * This map should not be accessed directly. Used the getFixedByteString\n    * methods instead.\n    */\n-  private static ConcurrentHashMap<Object, ByteString> fixedByteStringCache =\n-      new ConcurrentHashMap<>();\n+  private final static ConcurrentHashMap<Object, ByteString>\n+      fixedByteStringCache = new ConcurrentHashMap<>();\n \n   /**\n    * Get the ByteString for frequently used fixed and small set strings.\n"}}, {"oid": "f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "url": "https://github.com/apache/hadoop/commit/f8fc1b85b10e4023a1cf3fb519cb7864bf320eb7", "message": "HADOOP-16621. [pb-upgrade] Remove Protobuf classes from signatures of Public APIs. Fixed Review comments", "committedDate": "2020-01-13T12:54:51Z", "type": "commit"}, {"oid": "7e247581d9061c189b33e16a1a6f492d424711df", "url": "https://github.com/apache/hadoop/commit/7e247581d9061c189b33e16a1a6f492d424711df", "message": "Fixed checkstyle comments", "committedDate": "2020-01-14T05:39:19Z", "type": "commit"}]}