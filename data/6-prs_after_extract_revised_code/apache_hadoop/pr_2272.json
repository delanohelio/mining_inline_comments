{"pr_number": 2272, "pr_title": "HADOOP-17158. Test timeout for ITestAbfsInputStreamStatistics#testReadAheadCounters", "pr_createdAt": "2020-09-03T11:50:31Z", "pr_url": "https://github.com/apache/hadoop/pull/2272", "timeline": [{"oid": "a5d52e6450cc7a73661ef002a52115e7f86a4093", "url": "https://github.com/apache/hadoop/commit/a5d52e6450cc7a73661ef002a52115e7f86a4093", "message": "HADOOP-17158. Test timeout for ITestAbfsInputStreamStatistics#testReadAheadCounters", "committedDate": "2020-09-03T11:48:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0ODc1NQ==", "url": "https://github.com/apache/hadoop/pull/2272#discussion_r483148755", "bodyText": "say what it is rather than why, e,g \"number of bytes picked up in async readahead\"", "author": "steveloughran", "createdAt": "2020-09-03T17:41:03Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -503,6 +507,28 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n     return streamStatistics;\n   }\n \n+  /**\n+   * Since, the value of readAheadBytesRead counter could be arbitrary due to", "originalCommit": "a5d52e6450cc7a73661ef002a52115e7f86a4093", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50bc9325c6a508aab7a9cd891e892f540311fb9c", "chunk": "diff --git a/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java b/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\nindex 293ca342239..ff3bd63cc7b 100644\n--- a/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\n+++ b/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\n\n@@ -508,10 +508,9 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n   }\n \n   /**\n-   * Since, the value of readAheadBytesRead counter could be arbitrary due to\n-   * race condition we have a getter for value of this counter at some point\n-   * in the operation.\n-   * @return bytes read from readAhead at some point of the operation.\n+   * Getter for bytes read from readAhead buffer that fills asynchronously.\n+   *\n+   * @return value of the counter in long.\n    */\n   @VisibleForTesting\n   public long getBytesFromReadAhead() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0ODg3Nw==", "url": "https://github.com/apache/hadoop/pull/2272#discussion_r483148877", "bodyText": "same: explain what the counter is", "author": "steveloughran", "createdAt": "2020-09-03T17:41:20Z", "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java", "diffHunk": "@@ -503,6 +507,28 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n     return streamStatistics;\n   }\n \n+  /**\n+   * Since, the value of readAheadBytesRead counter could be arbitrary due to\n+   * race condition we have a getter for value of this counter at some point\n+   * in the operation.\n+   * @return bytes read from readAhead at some point of the operation.\n+   */\n+  @VisibleForTesting\n+  public long getBytesFromReadAhead() {\n+    return bytesFromReadAhead;\n+  }\n+\n+  /**\n+   * Since, the value of remoteBytesRead counter value is dependent on a race", "originalCommit": "a5d52e6450cc7a73661ef002a52115e7f86a4093", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "50bc9325c6a508aab7a9cd891e892f540311fb9c", "chunk": "diff --git a/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java b/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\nindex 293ca342239..ff3bd63cc7b 100644\n--- a/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\n+++ b/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsInputStream.java\n\n@@ -508,10 +508,9 @@ public AbfsInputStreamStatistics getStreamStatistics() {\n   }\n \n   /**\n-   * Since, the value of readAheadBytesRead counter could be arbitrary due to\n-   * race condition we have a getter for value of this counter at some point\n-   * in the operation.\n-   * @return bytes read from readAhead at some point of the operation.\n+   * Getter for bytes read from readAhead buffer that fills asynchronously.\n+   *\n+   * @return value of the counter in long.\n    */\n   @VisibleForTesting\n   public long getBytesFromReadAhead() {\n"}}, {"oid": "50bc9325c6a508aab7a9cd891e892f540311fb9c", "url": "https://github.com/apache/hadoop/commit/50bc9325c6a508aab7a9cd891e892f540311fb9c", "message": "HADOOP-17158. javadoc changes", "committedDate": "2020-09-03T18:34:02Z", "type": "commit"}]}