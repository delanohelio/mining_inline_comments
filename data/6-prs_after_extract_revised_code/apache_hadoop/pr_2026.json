{"pr_number": 2026, "pr_title": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes", "pr_createdAt": "2020-05-18T06:40:33Z", "pr_url": "https://github.com/apache/hadoop/pull/2026", "timeline": [{"oid": "397300ee2e91ff020bb908258f1cd52f84943c76", "url": "https://github.com/apache/hadoop/commit/397300ee2e91ff020bb908258f1cd52f84943c76", "message": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes.", "committedDate": "2020-05-19T04:45:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3ODc4OA==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r431778788", "bodyText": "Should we mark ProtobufRpcEngine class as deprecated?", "author": "aajisaka", "createdAt": "2020-05-28T11:53:23Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java", "diffHunk": "@@ -433,7 +438,15 @@ public Server(Class<?> protocolClass, Object protocolImpl,\n       registerProtocolAndImpl(RPC.RpcKind.RPC_PROTOCOL_BUFFER, protocolClass,\n           protocolImpl);\n     }\n-    \n+\n+    @Override\n+    protected RpcInvoker getServerRpcInvoker(RpcKind rpcKind) {\n+      if (rpcKind == RpcKind.RPC_PROTOCOL_BUFFER) {\n+        return RPC_INVOKER;\n+      }\n+      return super.getServerRpcInvoker(rpcKind);\n+    }\n+", "originalCommit": "397300ee2e91ff020bb908258f1cd52f84943c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMDg5Nw==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r434320897", "bodyText": "yes", "author": "vinayakumarb", "createdAt": "2020-06-03T05:45:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3ODc4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxMDYxMw==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r434410613", "bodyText": "Done", "author": "vinayakumarb", "createdAt": "2020-06-03T08:51:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3ODc4OA=="}], "type": "inlineReview", "revised_code": {"commit": "56247db3022705635580c4d2f8b0abde109f954f", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java\nindex 9b029e07686..14b356f847a 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java\n\n@@ -438,15 +433,7 @@ public Server(Class<?> protocolClass, Object protocolImpl,\n       registerProtocolAndImpl(RPC.RpcKind.RPC_PROTOCOL_BUFFER, protocolClass,\n           protocolImpl);\n     }\n-\n-    @Override\n-    protected RpcInvoker getServerRpcInvoker(RpcKind rpcKind) {\n-      if (rpcKind == RpcKind.RPC_PROTOCOL_BUFFER) {\n-        return RPC_INVOKER;\n-      }\n-      return super.getServerRpcInvoker(rpcKind);\n-    }\n-\n+    \n     /**\n      * Protobuf invoker for {@link RpcInvoker}\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3OTIwNg==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r431779206", "bodyText": "Should we mark this class as deprecated?", "author": "aajisaka", "createdAt": "2020-05-28T11:54:15Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngineCallback.java", "diffHunk": "@@ -18,7 +18,7 @@\n \n package org.apache.hadoop.ipc;\n \n-import org.apache.hadoop.thirdparty.protobuf.Message;\n+import com.google.protobuf.Message;\n \n public interface ProtobufRpcEngineCallback {", "originalCommit": "397300ee2e91ff020bb908258f1cd52f84943c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMDg2Ng==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r434320866", "bodyText": "sure", "author": "vinayakumarb", "createdAt": "2020-06-03T05:45:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3OTIwNg=="}], "type": "inlineReview", "revised_code": {"commit": "23384ecdae47195b58f2b15523ef72b323bb63ee", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngineCallback.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngineCallback.java\nindex 463593e2abc..c4debe11954 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngineCallback.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngineCallback.java\n\n@@ -20,10 +20,15 @@\n \n import com.google.protobuf.Message;\n \n+/**\n+ *  @Deprecated This engine uses Protobuf 2.5.0. Recommended to upgrade to Protobuf 3.x\n+ *  from hadoop-thirdparty and use ProtobufRpcEngineCallback2.\n+ */\n+@Deprecated\n public interface ProtobufRpcEngineCallback {\n \n-  public void setResponse(Message message);\n+  void setResponse(Message message);\n \n-  public void error(Throwable t);\n+  void error(Throwable t);\n \n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4NDA0Mw==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r431784043", "bodyText": "Memo: The method is used from ozone.\n\u279c  hadoop-ozone git:(master) find . -name \"*.java\" | xargs grep \"addPBProtocol\"\n./hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/server/StorageContainerManager.java:    DFSUtil.addPBProtocol(conf, protocol, instance, rpcServer);\n./hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/common/SCMTestUtils.java:    DFSUtil.addPBProtocol(conf, protocol, instance, rpcServer);\n./hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java:    DFSUtil.addPBProtocol(conf, protocol, instance, rpcServer);", "author": "aajisaka", "createdAt": "2020-05-28T12:03:45Z", "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java", "diffHunk": "@@ -1295,6 +1296,22 @@ static URI trimUri(URI uri) {\n    */\n   public static void addPBProtocol(Configuration conf, Class<?> protocol,\n       BlockingService service, RPC.Server server) throws IOException {\n+    RPC.setProtocolEngine(conf, protocol, ProtobufRpcEngine2.class);\n+    server.addProtocol(RPC.RpcKind.RPC_PROTOCOL_BUFFER, protocol, service);\n+  }\n+\n+  /**\n+   * Add protobuf based protocol to the {@link org.apache.hadoop.ipc.RPC.Server}\n+   * @param conf configuration\n+   * @param protocol Protocol interface\n+   * @param service service that implements the protocol\n+   * @param server RPC server to which the protocol &amp; implementation is\n+   *               added to\n+   * @throws IOException\n+   */\n+  @Deprecated\n+  public static void addPBProtocol(Configuration conf, Class<?> protocol,", "originalCommit": "397300ee2e91ff020bb908258f1cd52f84943c76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5MjM4OA==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r431792388", "bodyText": "Filed https://issues.apache.org/jira/browse/HDDS-3678 for Ozone.", "author": "aajisaka", "createdAt": "2020-05-28T12:19:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4NDA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwMDA0MA==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r432300040", "bodyText": "apache/ozone#987 is now available. If the PR is merged, I think we don't have to fix DFSUtil.java.", "author": "aajisaka", "createdAt": "2020-05-29T07:20:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4NDA0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjEzOA==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r434322138", "bodyText": "But, I feel, we can still keep the method with deprecated.", "author": "vinayakumarb", "createdAt": "2020-06-03T05:49:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4NDA0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "23384ecdae47195b58f2b15523ef72b323bb63ee", "chunk": "diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java\nindex d6fd3ecf776..00f14cd82e4 100644\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java\n\n@@ -1301,7 +1301,11 @@ public static void addPBProtocol(Configuration conf, Class<?> protocol,\n   }\n \n   /**\n-   * Add protobuf based protocol to the {@link org.apache.hadoop.ipc.RPC.Server}\n+   * Add protobuf based protocol to the {@link RPC.Server}.\n+   * This engine uses Protobuf 2.5.0. Recommended to upgrade to\n+   * Protobuf 3.x from hadoop-thirdparty and use\n+   * {@link DFSUtil#addPBProtocol(Configuration, Class, BlockingService,\n+   * RPC.Server)}.\n    * @param conf configuration\n    * @param protocol Protocol interface\n    * @param service service that implements the protocol\n"}}, {"oid": "23384ecdae47195b58f2b15523ef72b323bb63ee", "url": "https://github.com/apache/hadoop/commit/23384ecdae47195b58f2b15523ef72b323bb63ee", "message": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes.", "committedDate": "2020-06-03T08:50:14Z", "type": "forcePushed"}, {"oid": "75f47ac94e161ac491579e104be3850fc4e3c428", "url": "https://github.com/apache/hadoop/commit/75f47ac94e161ac491579e104be3850fc4e3c428", "message": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes.", "committedDate": "2020-06-08T04:25:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0MjM4OA==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r437242388", "bodyText": "Big +1 for this change, but I think this issue can be fixed in a separate jira.", "author": "aajisaka", "createdAt": "2020-06-09T08:50:29Z", "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java", "diffHunk": "@@ -74,6 +75,11 @@\n \n   private static String taskName = \"attempt_001_02_r03_04_05\";\n \n+  @After\n+  public void after() throws Exception {\n+    cleanTokenPasswordFile();\n+  }\n+", "originalCommit": "75f47ac94e161ac491579e104be3850fc4e3c428", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1MzE3NQ==", "url": "https://github.com/apache/hadoop/pull/2026#discussion_r437853175", "bodyText": "Pushed the latest changes without this.\nPlease check", "author": "vinayakumarb", "createdAt": "2020-06-10T04:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0MjM4OA=="}], "type": "inlineReview", "revised_code": {"commit": "56247db3022705635580c4d2f8b0abde109f954f", "chunk": "diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java\nindex d833965ca95..f0b383af5f8 100644\n--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java\n+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/pipes/TestPipeApplication.java\n\n@@ -75,11 +74,6 @@\n \n   private static String taskName = \"attempt_001_02_r03_04_05\";\n \n-  @After\n-  public void after() throws Exception {\n-    cleanTokenPasswordFile();\n-  }\n-\n   /**\n    * test PipesMapRunner    test the transfer data from reader\n    *\n"}}, {"oid": "56247db3022705635580c4d2f8b0abde109f954f", "url": "https://github.com/apache/hadoop/commit/56247db3022705635580c4d2f8b0abde109f954f", "message": "YARN-10300: appMasterHost not set in RM ApplicationSummary when AM fails before first heartbeat. Contributed by Eric Badger (ebadger).", "committedDate": "2020-06-09T18:43:16Z", "type": "forcePushed"}, {"oid": "8ff3758828770b9c82237d7f5e5480381c872abf", "url": "https://github.com/apache/hadoop/commit/8ff3758828770b9c82237d7f5e5480381c872abf", "message": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes (#2026)", "committedDate": "2020-06-12T17:44:53Z", "type": "commit"}, {"oid": "8ff3758828770b9c82237d7f5e5480381c872abf", "url": "https://github.com/apache/hadoop/commit/8ff3758828770b9c82237d7f5e5480381c872abf", "message": "HADOOP-17046. Support downstreams' existing Hadoop-rpc implementations using non-shaded protobuf classes (#2026)", "committedDate": "2020-06-12T17:44:53Z", "type": "forcePushed"}]}