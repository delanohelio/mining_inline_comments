{"pr_number": 1974, "pr_title": "HADOOP-17009: Embrace Immutability of Java Collections", "pr_createdAt": "2020-04-23T02:54:24Z", "pr_url": "https://github.com/apache/hadoop/pull/1974", "timeline": [{"oid": "d7c818db719203b1974ef417ed1c48195a4521ba", "url": "https://github.com/apache/hadoop/commit/d7c818db719203b1974ef417ed1c48195a4521ba", "message": "HADOOP-17009: Embrace Immutability of Java Collections", "committedDate": "2020-04-23T02:52:40Z", "type": "commit"}, {"oid": "dbf1e0e2a41e0c3c6d4cf4ef19046b3cfd7b2993", "url": "https://github.com/apache/hadoop/commit/dbf1e0e2a41e0c3c6d4cf4ef19046b3cfd7b2993", "message": "Fix checkstyle warnings", "committedDate": "2020-04-23T14:09:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAwOTIwMw==", "url": "https://github.com/apache/hadoop/pull/1974#discussion_r414009203", "bodyText": "Now, somebody calling getGroups() would start failing if it was adding new things to the list while that was not the case before. I've tried using inmodifiable before but is kind of dangerous.", "author": "goiri", "createdAt": "2020-04-23T18:01:21Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java", "diffHunk": "@@ -78,15 +79,13 @@\n             user, provider.getClass().getSimpleName(), e.toString());\n         LOG.debug(\"Stacktrace: \", e);\n       }        \n-      if (groups != null && ! groups.isEmpty()) {\n+      if (!groups.isEmpty()) {\n         groupSet.addAll(groups);\n         if (!combined) break;\n       }\n     }\n \n-    List<String> results = new ArrayList<String>(groupSet.size());\n-    results.addAll(groupSet);\n-    return results;\n+    return Collections.unmodifiableList(new ArrayList<>(groupSet));", "originalCommit": "dbf1e0e2a41e0c3c6d4cf4ef19046b3cfd7b2993", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "98e9ebea42c9e0aca429f2c012b70bf60ef703b6", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java\nindex fe3f268fbc9..5040de1e650 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java\n\n@@ -70,8 +70,8 @@\n   public synchronized List<String> getGroups(String user) throws IOException {\n     Set<String> groupSet = new TreeSet<String>();\n \n-    List<String> groups = Collections.emptyList();\n     for (GroupMappingServiceProvider provider : providersList) {\n+      List<String> groups = Collections.emptyList();\n       try {\n         groups = provider.getGroups(user);\n       } catch (Exception e) {\n"}}, {"oid": "98e9ebea42c9e0aca429f2c012b70bf60ef703b6", "url": "https://github.com/apache/hadoop/commit/98e9ebea42c9e0aca429f2c012b70bf60ef703b6", "message": "Revert some of the returning immutable collections on public APIs", "committedDate": "2020-04-23T18:31:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEwMzgzNQ==", "url": "https://github.com/apache/hadoop/pull/1974#discussion_r415103835", "bodyText": "Why can we use unmodifiable here?", "author": "goiri", "createdAt": "2020-04-25T17:14:29Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java", "diffHunk": "@@ -196,10 +196,8 @@ protected Node getNodeForNetworkLocation(Node node) {\n         loc = loc.substring(1);\n       }\n       InnerNode rack = (InnerNode) clusterMap.getLoc(loc);\n-      if (rack == null) {\n-        return null;\n-      }\n-      return new ArrayList<Node>(rack.getChildren());\n+      return (rack == null) ? Collections.emptyList()", "originalCommit": "98e9ebea42c9e0aca429f2c012b70bf60ef703b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgzMTg3NQ==", "url": "https://github.com/apache/hadoop/pull/1974#discussion_r415831875", "bodyText": "Ya, I guess we probably shouldn't.  My thinking wsa \"\n\nReturning null is usually a bad idea, return Collections.emptyList()\nCollections.emptyList() is immutable\nTo make the method consistent, the list of racks should be immutable too.\n\nI will revert this to return an emptyList (new ArrayList<>(0))", "author": "belugabehr", "createdAt": "2020-04-27T13:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEwMzgzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "36a221908b5596f82e11660685da39739c2a4b30", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java\nindex ce99ea62858..66917db0f3e 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java\n\n@@ -196,8 +196,8 @@ protected Node getNodeForNetworkLocation(Node node) {\n         loc = loc.substring(1);\n       }\n       InnerNode rack = (InnerNode) clusterMap.getLoc(loc);\n-      return (rack == null) ? Collections.emptyList()\n-          : Collections.unmodifiableList(new ArrayList<>(rack.getChildren()));\n+      return (rack == null) ? new ArrayList<>(0)\n+          : new ArrayList<>(rack.getChildren());\n     } finally {\n       netlock.readLock().unlock();\n     }\n"}}, {"oid": "36a221908b5596f82e11660685da39739c2a4b30", "url": "https://github.com/apache/hadoop/commit/36a221908b5596f82e11660685da39739c2a4b30", "message": "Revert immutability of getDatanodesInRack", "committedDate": "2020-04-27T13:58:57Z", "type": "commit"}]}