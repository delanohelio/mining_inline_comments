{"pr_number": 2257, "pr_title": "HADOOP-17023 Tune S3AFileSystem.listStatus() api.", "pr_createdAt": "2020-08-28T12:16:50Z", "pr_url": "https://github.com/apache/hadoop/pull/2257", "timeline": [{"oid": "4513eabc78650d333dc1aaa00dbffcdca978df82", "url": "https://github.com/apache/hadoop/commit/4513eabc78650d333dc1aaa00dbffcdca978df82", "message": "HADOOP-17023 Tune S3AFileSystem.listStatus() api.\n\nS3AFileSystem.listStatus() to perform list operations\ndirectly and then fallback to head checks for files", "committedDate": "2020-08-28T12:07:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIyMzU3Mg==", "url": "https://github.com/apache/hadoop/pull/2257#discussion_r479223572", "bodyText": "will remove the comments.", "author": "mukund-thakur", "createdAt": "2020-08-28T12:21:30Z", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java", "diffHunk": "@@ -176,6 +176,77 @@ public void testCostOfListFilesOnNonExistingDir() throws Throwable {\n             .plus(GET_FILE_STATUS_FNFE)));\n   }\n \n+  @Test\n+  public void testCostOfListStatusOnFile() throws Throwable {\n+    describe(\"Performing listStatus() on a file\");\n+    Path file = path(getMethodName() + \".txt\");\n+    S3AFileSystem fs = getFileSystem();\n+    touch(fs, file);\n+    verifyMetrics(() ->\n+            fs.listStatus(file),\n+            whenRaw(LIST_STATUS_LIST_OP\n+                    .plus(GET_FILE_STATUS_ON_FILE)),\n+            whenAuthoritative(LIST_STATUS_LIST_OP),\n+            whenNonauth(LIST_STATUS_LIST_OP));\n+//    resetMetricDiffs();\n+//    fs.listStatus(file);", "originalCommit": "4513eabc78650d333dc1aaa00dbffcdca978df82", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a73520bb3bc7b5bbd8343d148fde544e64599c5", "chunk": "diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\nindex 5f3b77efb44..941e701333b 100644\n--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\n+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\n\n@@ -188,12 +188,6 @@ public void testCostOfListStatusOnFile() throws Throwable {\n                     .plus(GET_FILE_STATUS_ON_FILE)),\n             whenAuthoritative(LIST_STATUS_LIST_OP),\n             whenNonauth(LIST_STATUS_LIST_OP));\n-//    resetMetricDiffs();\n-//    fs.listStatus(file);\n-//    if (!fs.hasMetadataStore()) {\n-//      metadataRequests.assertDiffEquals(1);\n-//    }\n-//    listRequests.assertDiffEquals(1);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MTY1Mw==", "url": "https://github.com/apache/hadoop/pull/2257#discussion_r479671653", "bodyText": "nice to see you picking up the new metrics validation I think it makes a big difference. If there are ways it can be improved, feel free to do so.", "author": "steveloughran", "createdAt": "2020-08-29T17:31:24Z", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java", "diffHunk": "@@ -176,6 +176,77 @@ public void testCostOfListFilesOnNonExistingDir() throws Throwable {\n             .plus(GET_FILE_STATUS_FNFE)));\n   }\n \n+  @Test\n+  public void testCostOfListStatusOnFile() throws Throwable {\n+    describe(\"Performing listStatus() on a file\");\n+    Path file = path(getMethodName() + \".txt\");\n+    S3AFileSystem fs = getFileSystem();\n+    touch(fs, file);\n+    verifyMetrics(() ->\n+            fs.listStatus(file),\n+            whenRaw(LIST_STATUS_LIST_OP\n+                    .plus(GET_FILE_STATUS_ON_FILE)),\n+            whenAuthoritative(LIST_STATUS_LIST_OP),\n+            whenNonauth(LIST_STATUS_LIST_OP));\n+//    resetMetricDiffs();\n+//    fs.listStatus(file);\n+//    if (!fs.hasMetadataStore()) {\n+//      metadataRequests.assertDiffEquals(1);\n+//    }\n+//    listRequests.assertDiffEquals(1);\n+  }\n+\n+  @Test\n+  public void testCostOfListStatusOnEmptyDir() throws Throwable {\n+    describe(\"Performing listStatus() on an empty dir\");\n+    Path dir = path(getMethodName());\n+    S3AFileSystem fs = getFileSystem();\n+    fs.mkdirs(dir);\n+    verifyMetrics(() ->\n+            fs.listStatus(dir),\n+            whenRaw(LIST_STATUS_LIST_OP", "originalCommit": "4513eabc78650d333dc1aaa00dbffcdca978df82", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1OTYzMw==", "url": "https://github.com/apache/hadoop/pull/2257#discussion_r484259633", "bodyText": "Sure Thanks :)", "author": "mukund-thakur", "createdAt": "2020-09-07T08:02:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MTY1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "5a73520bb3bc7b5bbd8343d148fde544e64599c5", "chunk": "diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\nindex 5f3b77efb44..941e701333b 100644\n--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\n+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3AFileOperationCost.java\n\n@@ -188,12 +188,6 @@ public void testCostOfListStatusOnFile() throws Throwable {\n                     .plus(GET_FILE_STATUS_ON_FILE)),\n             whenAuthoritative(LIST_STATUS_LIST_OP),\n             whenNonauth(LIST_STATUS_LIST_OP));\n-//    resetMetricDiffs();\n-//    fs.listStatus(file);\n-//    if (!fs.hasMetadataStore()) {\n-//      metadataRequests.assertDiffEquals(1);\n-//    }\n-//    listRequests.assertDiffEquals(1);\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MTg3OA==", "url": "https://github.com/apache/hadoop/pull/2257#discussion_r479671878", "bodyText": "is this just LIST_OPERATION? IF so, make the new constant a reference to that one to make clear that's what is happening. Probably good to do the same above too", "author": "steveloughran", "createdAt": "2020-08-29T17:33:54Z", "path": "hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/performance/OperationCost.java", "diffHunk": "@@ -110,6 +110,9 @@\n   public static final OperationCost LIST_FILES_LIST_OP =\n       new OperationCost(0, 1);\n \n+  /** listStatus always does a LIST. */\n+  public static final OperationCost LIST_STATUS_LIST_OP =\n+          new OperationCost(0, 1);", "originalCommit": "4513eabc78650d333dc1aaa00dbffcdca978df82", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5a73520bb3bc7b5bbd8343d148fde544e64599c5", "chunk": "diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/performance/OperationCost.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/performance/OperationCost.java\nindex d528111d3e9..54b68663fe9 100644\n--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/performance/OperationCost.java\n+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/performance/OperationCost.java\n\n@@ -107,12 +107,10 @@\n       new OperationCost(0, 1);\n \n   /** listFiles always does a LIST. */\n-  public static final OperationCost LIST_FILES_LIST_OP =\n-      new OperationCost(0, 1);\n+  public static final OperationCost LIST_FILES_LIST_OP = LIST_OPERATION;\n \n   /** listStatus always does a LIST. */\n-  public static final OperationCost LIST_STATUS_LIST_OP =\n-          new OperationCost(0, 1);\n+  public static final OperationCost LIST_STATUS_LIST_OP = LIST_OPERATION;\n   /**\n    * Metadata cost of a copy operation, as used during rename.\n    * This happens even if the store is guarded.\n"}}, {"oid": "5a73520bb3bc7b5bbd8343d148fde544e64599c5", "url": "https://github.com/apache/hadoop/commit/5a73520bb3bc7b5bbd8343d148fde544e64599c5", "message": "Making innerListStatus to return RemoteIterator of S3AFileStatus", "committedDate": "2020-09-07T11:55:25Z", "type": "commit"}, {"oid": "290d48ca15c47cec51c4e599b36dd7497d69bde2", "url": "https://github.com/apache/hadoop/commit/290d48ca15c47cec51c4e599b36dd7497d69bde2", "message": "Adding empty commit for yetus to run", "committedDate": "2020-09-08T08:41:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2ODIxMA==", "url": "https://github.com/apache/hadoop/pull/2257#discussion_r484868210", "bodyText": "we are into callback country here. Could you\n\ncreate an interface (say in S3Guard) for createProvidedFileStatusIteratorForS3Guard  (it could contain all params for createProvidedFileStatusIterator oterh than the dir meta list, 2. Have Listing implement it\nPass the interface in, not the reference to Listing.\n\nI'm just trying to move away from having all the classes in here having intimate knowledge of every other class. An interface with a single method lets us control exactly what S3Guard does.\nYou could use a Lambda-expression if you want -for a single operation it would work, just take Function<S3AFileStatus[], RemoteIterator<S3AFileStatus> as a parameter and pass the operation in that way. But, given you use this operation in tests as well as production code, you should still implement this function as a single method in Listing", "author": "steveloughran", "createdAt": "2020-09-08T12:13:27Z", "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java", "diffHunk": "@@ -362,14 +340,16 @@ public static BulkOperationState initiateBulkWrite(\n    * @return Final result of directory listing.\n    * @throws IOException if metadata store update failed\n    */\n-  public static S3AFileStatus[] dirListingUnion(MetadataStore ms, Path path,\n-      List<S3AFileStatus> backingStatuses, DirListingMetadata dirMeta,\n-      boolean isAuthoritative, ITtlTimeProvider timeProvider)\n-      throws IOException {\n+  public static RemoteIterator<S3AFileStatus> dirListingUnion(\n+          MetadataStore ms, Path path,\n+          RemoteIterator<S3AFileStatus> backingStatuses,\n+          DirListingMetadata dirMeta, boolean isAuthoritative,\n+          ITtlTimeProvider timeProvider, Listing listing)", "originalCommit": "5a73520bb3bc7b5bbd8343d148fde544e64599c5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6a561817fff5c051b3d787406e727c49d90c9483", "chunk": "diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java\nindex cfea824f08d..78cedc293ac 100644\n--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java\n+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java\n\n@@ -337,6 +335,8 @@ public static BulkOperationState initiateBulkWrite(\n    * @param dirMeta  Directory listing from MetadataStore.  May be null.\n    * @param isAuthoritative State of authoritative mode\n    * @param timeProvider Time provider to use when updating entries\n+   * @param toStatusItr function to convert array of file status to\n+   *                    RemoteIterator.\n    * @return Final result of directory listing.\n    * @throws IOException if metadata store update failed\n    */\n"}}, {"oid": "6a561817fff5c051b3d787406e727c49d90c9483", "url": "https://github.com/apache/hadoop/commit/6a561817fff5c051b3d787406e727c49d90c9483", "message": "S3Guard to be unaware of Listing class", "committedDate": "2020-09-17T13:38:12Z", "type": "commit"}, {"oid": "10731301042912e9caf69bd62ddbbd1b9ec3d076", "url": "https://github.com/apache/hadoop/commit/10731301042912e9caf69bd62ddbbd1b9ec3d076", "message": "Fixing checkstyle and javadoc", "committedDate": "2020-09-18T08:10:21Z", "type": "commit"}]}