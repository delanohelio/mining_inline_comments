{"pr_number": 2321, "pr_title": "HADOOP-17267: Add debug-level logs in Filesystem#close", "pr_createdAt": "2020-09-21T12:02:25Z", "pr_url": "https://github.com/apache/hadoop/pull/2321", "timeline": [{"oid": "721402f9c40adec731c5739834ee5cefca389f86", "url": "https://github.com/apache/hadoop/commit/721402f9c40adec731c5739834ee5cefca389f86", "message": "HADOOP-17267: Add debug-level logs in Filesystem#close", "committedDate": "2020-09-21T12:00:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MDk2Mw==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492270963", "bodyText": "pass in \"\" instead of null and theres' no need for the ? : below", "author": "steveloughran", "createdAt": "2020-09-21T18:43:14Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -621,6 +621,9 @@ public static LocalFileSystem newInstanceLocal(Configuration conf)\n    * @throws IOException a problem arose closing one or more filesystem.\n    */\n   public static void closeAll() throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAll\", null);", "originalCommit": "721402f9c40adec731c5739834ee5cefca389f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\nindex b2ce7a399c5..453076e7af2 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n\n@@ -622,7 +622,7 @@ public static LocalFileSystem newInstanceLocal(Configuration conf)\n    */\n   public static void closeAll() throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAll\", null);\n+      debugLogFileSystemClose(\"closeAll\", \"\");\n     }\n     CACHE.closeAll();\n   }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MTE5MQ==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492271191", "bodyText": "just use ugi and let the automatic to.String to the work", "author": "steveloughran", "createdAt": "2020-09-21T18:43:41Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -632,9 +635,21 @@ public static void closeAll() throws IOException {\n    */\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());", "originalCommit": "721402f9c40adec731c5739834ee5cefca389f86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\nindex b2ce7a399c5..453076e7af2 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n\n@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n+            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    if (LOGGER.isTraceEnabled()) {\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());\n+    }\n+    \n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MjQyMg==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492272422", "bodyText": "Prefer SLF4J {} and the values as varargs.\nYou might want to think that at TRACE the entire throwable is logged. Why so? one level up isn't always enough", "author": "steveloughran", "createdAt": "2020-09-21T18:45:52Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -632,9 +635,21 @@ public static void closeAll() throws IOException {\n    */\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n+    if (LOGGER.isDebugEnabled()) {\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+    }\n     CACHE.closeAll(ugi);\n   }\n \n+  private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n+    StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n+    LOGGER.debug(\n+        \"FileSystem.\" + methodName + \"() called by method: \"", "originalCommit": "721402f9c40adec731c5739834ee5cefca389f86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5NTUwNw==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r492695507", "bodyText": "Hi Steve, thanks for taking a look at this!\nCould you clarify what you mean by this?: You might want to think that at TRACE the entire throwable is logged. Why so? one level up isn't always enough", "author": "klcopp", "createdAt": "2020-09-22T12:33:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MjQyMg=="}], "type": "inlineReview", "revised_code": {"commit": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\nindex b2ce7a399c5..453076e7af2 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n\n@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n+            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    if (LOGGER.isTraceEnabled()) {\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());\n+    }\n+    \n   }\n \n   /**\n"}}, {"oid": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "url": "https://github.com/apache/hadoop/commit/2b4342e2636a20e358219ba59982f3e6995e3cbf", "message": "Addressed review comments and fixed some formatting issues", "committedDate": "2020-09-23T15:54:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2Mjk5Mg==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r493762992", "bodyText": "just use the throwable created on Line 645", "author": "steveloughran", "createdAt": "2020-09-23T17:23:33Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n+            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    if (LOGGER.isTraceEnabled()) {\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());", "originalCommit": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "31cb09a6b586e7cfdb97c252be7b673ce2b89bc4", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\nindex 453076e7af2..c69da4714e5 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n\n@@ -642,13 +642,12 @@ public static void closeAllForUGI(UserGroupInformation ugi)\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n-    StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n-            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    Throwable throwable = new Throwable().fillInStackTrace();\n+    LOGGER.debug(\"FileSystem.{}() by method: {}); {}\", methodName, throwable.getStackTrace()[2],\n+        additionalInfo);\n     if (LOGGER.isTraceEnabled()) {\n-      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, throwable);\n     }\n-    \n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NDI5OA==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r493764298", "bodyText": "include URI of filesystem\npass in callingMethod and let it's toString() include all the information; no need to replicate -especially as toString handles file/line unknown.", "author": "steveloughran", "createdAt": "2020-09-23T17:25:43Z", "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java", "diffHunk": "@@ -636,18 +636,19 @@ public static void closeAll() throws IOException {\n   public static void closeAllForUGI(UserGroupInformation ugi)\n   throws IOException {\n     if (LOGGER.isDebugEnabled()) {\n-      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi.toString());\n+      debugLogFileSystemClose(\"closeAllForUGI\", \"UGI: \" + ugi);\n     }\n     CACHE.closeAll(ugi);\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n     StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\n-        \"FileSystem.\" + methodName + \"() called by method: \"\n-            + callingMethod.getClassName() + \".\" + callingMethod.getMethodName()\n-            + \"(\" + callingMethod.getFileName() + \":\" + callingMethod.getLineNumber() + \"); \"\n-            + (additionalInfo != null ? additionalInfo : \"\"));\n+    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),", "originalCommit": "2b4342e2636a20e358219ba59982f3e6995e3cbf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5OTQ2MQ==", "url": "https://github.com/apache/hadoop/pull/2321#discussion_r494099461", "bodyText": "I included the URI in the case of close().", "author": "klcopp", "createdAt": "2020-09-24T07:34:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2NDI5OA=="}], "type": "inlineReview", "revised_code": {"commit": "31cb09a6b586e7cfdb97c252be7b673ce2b89bc4", "chunk": "diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\nindex 453076e7af2..c69da4714e5 100644\n--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java\n\n@@ -642,13 +642,12 @@ public static void closeAllForUGI(UserGroupInformation ugi)\n   }\n \n   private static void debugLogFileSystemClose(String methodName, String additionalInfo) {\n-    StackTraceElement callingMethod = new Throwable().fillInStackTrace().getStackTrace()[2];\n-    LOGGER.debug(\"FileSystem.{}() called by method: {}.{}({}:{}); {}\", methodName, callingMethod.getClassName(),\n-            callingMethod.getMethodName(), callingMethod.getFileName(), callingMethod.getLineNumber(), additionalInfo);\n+    Throwable throwable = new Throwable().fillInStackTrace();\n+    LOGGER.debug(\"FileSystem.{}() by method: {}); {}\", methodName, throwable.getStackTrace()[2],\n+        additionalInfo);\n     if (LOGGER.isTraceEnabled()) {\n-      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, new Throwable().fillInStackTrace());\n+      LOGGER.trace(\"FileSystem.{}() full stack trace:\", methodName, throwable);\n     }\n-    \n   }\n \n   /**\n"}}, {"oid": "31cb09a6b586e7cfdb97c252be7b673ce2b89bc4", "url": "https://github.com/apache/hadoop/commit/31cb09a6b586e7cfdb97c252be7b673ce2b89bc4", "message": "Addressed additional review comments", "committedDate": "2020-09-24T07:33:04Z", "type": "commit"}, {"oid": "d6f1bef27314d0215de0dd6d3f4a68687aa83f0b", "url": "https://github.com/apache/hadoop/commit/d6f1bef27314d0215de0dd6d3f4a68687aa83f0b", "message": "Cosmetic fixes", "committedDate": "2020-09-24T09:52:37Z", "type": "commit"}, {"oid": "85c58340a49e98ba73edd698679ad15885d26848", "url": "https://github.com/apache/hadoop/commit/85c58340a49e98ba73edd698679ad15885d26848", "message": "Move isDebugEnabled checks to debugLogFileSystemClose", "committedDate": "2020-09-29T08:26:30Z", "type": "commit"}]}