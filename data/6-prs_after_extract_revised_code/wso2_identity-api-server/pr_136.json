{"pr_number": 136, "pr_title": "Add services attribute for IdP template listing", "pr_createdAt": "2020-04-07T16:07:06Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/136", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNTA3OA==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405235078", "bodyText": "use standard comment format. add space after // and add fullstop at the end.", "author": "emswbandara", "createdAt": "2020-04-08T03:18:28Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "diffHunk": "@@ -66,7 +66,11 @@\n     // IdP template property keys\n     public static final String PROP_CATEGORY = \"category\";\n     public static final String PROP_DISPLAY_ORDER = \"displayOrder\";\n+    public static final String PROP_SERVICES = \"services\";\n \n+    //IdP template services", "originalCommit": "f57d02c564d03038b32a2f8d136da0e022b959ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ed774550c6fec90046c6a5219ce605db74ef642d", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\nindex 17a159c5..89367269 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\n\n@@ -68,7 +68,7 @@ public class Constants {\n     public static final String PROP_DISPLAY_ORDER = \"displayOrder\";\n     public static final String PROP_SERVICES = \"services\";\n \n-    //IdP template services\n+    // IdP template services\n     public static final String SERV_AUTHENTICATION = \"authentication\";\n     public static final String SERV_PROVISIONING = \"provisioning\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIzNTQyMQ==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405235421", "bodyText": "check whether idpTemplate.getPropertiesMap().get(PROP_SERVICES) is not null before splitting", "author": "emswbandara", "createdAt": "2020-04-08T03:19:36Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -951,6 +954,10 @@ private IdentityProviderTemplateListResponse createIDPTemplateListResponse(\n                     idpTemplateListItem.setDisplayOrder(\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n+                if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {\n+                    idpTemplateListItem.setServices(Arrays.asList(\n+                            idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));", "originalCommit": "f57d02c564d03038b32a2f8d136da0e022b959ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ed774550c6fec90046c6a5219ce605db74ef642d", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex 3115ab0e..f988a458 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -955,8 +955,10 @@ public class ServerIdpManagementService {\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n                 if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {\n-                    idpTemplateListItem.setServices(Arrays.asList(\n-                            idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));\n+                    if (idpTemplate.getPropertiesMap().get(PROP_SERVICES) != null) {\n+                        idpTemplateListItem.setServices(Arrays.asList(\n+                                idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));\n+                    }\n                 }\n                 idpTemplates.add(idpTemplateListItem);\n             }\n"}}, {"oid": "ed774550c6fec90046c6a5219ce605db74ef642d", "url": "https://github.com/wso2/identity-api-server/commit/ed774550c6fec90046c6a5219ce605db74ef642d", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-08T04:37:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2NjY0OQ==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405266649", "bodyText": "formatting issue . double spaces after", "author": "emswbandara", "createdAt": "2020-04-08T05:30:29Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,42 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);\n+            properties.put(PROP_SERVICES, servicesString);\n+        }\n+        return properties;\n+    }\n+\n+    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {", "originalCommit": "ed774550c6fec90046c6a5219ce605db74ef642d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "629d651aca5425a1afcb760b479ceac0e23e4692", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex f988a458..46bd50ce 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -1037,7 +1037,7 @@ public class ServerIdpManagementService {\n         return properties;\n     }\n \n-    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n+    private ArrayList<String> createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n \n         ArrayList<String> services = new ArrayList<>();\n         if ((idp.getProvisioning().getOutboundConnectors() != null)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI2Njk5Nw==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405266997", "bodyText": "We can use CollectionUtils.isNotEmpty which checks for both null and empty.", "author": "emswbandara", "createdAt": "2020-04-08T05:31:59Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,42 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);\n+            properties.put(PROP_SERVICES, servicesString);\n+        }\n+        return properties;\n+    }\n+\n+    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n+\n+        ArrayList<String> services = new ArrayList<>();\n+        if ((idp.getProvisioning().getOutboundConnectors() != null)\n+                && (!idp.getProvisioning().getOutboundConnectors().getConnectors().isEmpty())) {\n+            services.add(SERV_PROVISIONING);\n+        }\n+        if ((idp.getFederatedAuthenticators().getAuthenticators() != null)", "originalCommit": "ed774550c6fec90046c6a5219ce605db74ef642d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "629d651aca5425a1afcb760b479ceac0e23e4692", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex f988a458..46bd50ce 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -1037,7 +1037,7 @@ public class ServerIdpManagementService {\n         return properties;\n     }\n \n-    private ArrayList<String>   createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n+    private ArrayList<String> createServicesListForIdP(IdentityProviderPOSTRequest idp) {\n \n         ArrayList<String> services = new ArrayList<>();\n         if ((idp.getProvisioning().getOutboundConnectors() != null)\n"}}, {"oid": "629d651aca5425a1afcb760b479ceac0e23e4692", "url": "https://github.com/wso2/identity-api-server/commit/629d651aca5425a1afcb760b479ceac0e23e4692", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-08T05:36:56Z", "type": "forcePushed"}, {"oid": "772b0def51e4c7db8045c3cc11b58e11990cac4b", "url": "https://github.com/wso2/identity-api-server/commit/772b0def51e4c7db8045c3cc11b58e11990cac4b", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-08T05:40:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMDcxMw==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405300713", "bodyText": "shall we combine the nested if condition with &&", "author": "emswbandara", "createdAt": "2020-04-08T07:03:11Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -951,6 +954,12 @@ private IdentityProviderTemplateListResponse createIDPTemplateListResponse(\n                     idpTemplateListItem.setDisplayOrder(\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n+                if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {", "originalCommit": "772b0def51e4c7db8045c3cc11b58e11990cac4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8f946b43ca944b9e954af99263784fb5ff327a5d", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex b59b782a..79671822 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -954,11 +954,10 @@ public class ServerIdpManagementService {\n                     idpTemplateListItem.setDisplayOrder(\n                             Integer.valueOf(idpTemplate.getPropertiesMap().get(PROP_DISPLAY_ORDER)));\n                 }\n-                if (idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) {\n-                    if (idpTemplate.getPropertiesMap().get(PROP_SERVICES) != null) {\n-                        idpTemplateListItem.setServices(Arrays.asList(\n-                                idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));\n-                    }\n+                if ((idpTemplate.getPropertiesMap().containsKey(PROP_SERVICES)) &&\n+                        (idpTemplate.getPropertiesMap().get(PROP_SERVICES) != null)) {\n+                    idpTemplateListItem.setServices(Arrays.asList(\n+                            idpTemplate.getPropertiesMap().get(PROP_SERVICES).split(\",\")));\n                 }\n                 idpTemplates.add(idpTemplateListItem);\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMwMTE1Mw==", "url": "https://github.com/wso2/identity-api-server/pull/136#discussion_r405301153", "bodyText": "formatting issue", "author": "emswbandara", "createdAt": "2020-04-08T07:04:04Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -1004,17 +1013,40 @@ private Template generateIDPTemplate(IdentityProviderTemplate idpTemplate) throw\n         identityProviderTemplate.setImageUrl(idpTemplate.getImage());\n         identityProviderTemplate.setTenantId(IdentityTenantUtil\n                 .getTenantId(ContextLoader.getTenantDomainFromContext()));\n+        Map<String, String> properties = createPropertiesMapForIdPTemplate(idpTemplate);\n+        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n+        identityProviderTemplate.setPropertiesMap(properties);\n+        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n+        return identityProviderTemplate;\n+    }\n+\n+    private Map<String, String> createPropertiesMapForIdPTemplate(IdentityProviderTemplate idpTemplate) {\n+\n         Map<String, String> properties = new HashMap<>();\n         if (idpTemplate.getCategory() != null) {\n             properties.put(PROP_CATEGORY, idpTemplate.getCategory().toString());\n         }\n         if (idpTemplate.getDisplayOrder() != null) {\n             properties.put(PROP_DISPLAY_ORDER, String.valueOf(idpTemplate.getDisplayOrder()));\n         }\n-        identityProviderTemplate.setTemplateType(TemplateMgtConstants.TemplateType.IDP_TEMPLATE);\n-        identityProviderTemplate.setPropertiesMap(properties);\n-        identityProviderTemplate.setTemplateScript(createIDPTemplateScript(idpTemplate.getIdp()));\n-        return identityProviderTemplate;\n+        ArrayList<String> services = createServicesListForIdP(idpTemplate.getIdp());\n+        if (!services.isEmpty()) {\n+            String servicesString = String.join(\",\", services);", "originalCommit": "772b0def51e4c7db8045c3cc11b58e11990cac4b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "8f946b43ca944b9e954af99263784fb5ff327a5d", "url": "https://github.com/wso2/identity-api-server/commit/8f946b43ca944b9e954af99263784fb5ff327a5d", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-10T06:33:33Z", "type": "forcePushed"}, {"oid": "8f946b43ca944b9e954af99263784fb5ff327a5d", "url": "https://github.com/wso2/identity-api-server/commit/8f946b43ca944b9e954af99263784fb5ff327a5d", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-10T06:33:33Z", "type": "forcePushed"}, {"oid": "8ed107988f2e63530fef3b9859177b11901deb63", "url": "https://github.com/wso2/identity-api-server/commit/8ed107988f2e63530fef3b9859177b11901deb63", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-10T08:54:05Z", "type": "commit"}, {"oid": "8ed107988f2e63530fef3b9859177b11901deb63", "url": "https://github.com/wso2/identity-api-server/commit/8ed107988f2e63530fef3b9859177b11901deb63", "message": "Add services attribute for IdP template listing", "committedDate": "2020-04-10T08:54:05Z", "type": "forcePushed"}]}