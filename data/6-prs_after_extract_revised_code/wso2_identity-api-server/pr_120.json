{"pr_number": 120, "pr_title": "Add IDP template management REST API", "pr_createdAt": "2020-03-20T09:36:35Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/120", "timeline": [{"oid": "fda30e80c54a0bb958b3a1991cb4795e66530e3c", "url": "https://github.com/wso2/identity-api-server/commit/fda30e80c54a0bb958b3a1991cb4795e66530e3c", "message": "Add IDP template management API implementation", "committedDate": "2020-03-20T10:24:33Z", "type": "forcePushed"}, {"oid": "55e4107bcc2b479b4c64e3aea9e2018623b189be", "url": "https://github.com/wso2/identity-api-server/commit/55e4107bcc2b479b4c64e3aea9e2018623b189be", "message": "Add IDP template management API implementation", "committedDate": "2020-03-20T11:06:18Z", "type": "forcePushed"}, {"oid": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "url": "https://github.com/wso2/identity-api-server/commit/9c010b44fac3776bc9a15f289dce7c527487d9cd", "message": "Add IDP template management API implementation", "committedDate": "2020-03-20T11:08:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMDU4Ng==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395600586", "bodyText": "use standard comment format. add space after // and add fullstop at end.", "author": "emswbandara", "createdAt": "2020-03-20T12:22:08Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java", "diffHunk": "@@ -61,6 +62,11 @@\n     public static final String FEDERATED_AUTHENTICATORS = \"federatedAuthenticators\";\n     public static final String PROVISIONING = \"provisioning\";\n \n+    //IdP template property keys", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\nindex 79b8a7ea..2b020d3f 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/Constants.java\n\n@@ -62,7 +62,7 @@ public class Constants {\n     public static final String FEDERATED_AUTHENTICATORS = \"federatedAuthenticators\";\n     public static final String PROVISIONING = \"provisioning\";\n \n-    //IdP template property keys\n+    // IdP template property keys\n     public static final String PROP_CATEGORY = \"category\";\n     public static final String PROP_DISPLAY_ORDER = \"displayOrder\";\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMTA5OQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395601099", "bodyText": "add fullstop", "author": "emswbandara", "createdAt": "2020-03-20T12:23:15Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/IdentityProviderServiceHolder.java", "diffHunk": "@@ -67,4 +69,24 @@ public static void setClaimMetadataManagementService(\n \n         IdentityProviderServiceHolder.claimMetadataManagementService = claimMetadataManagementService;\n     }\n+\n+    /**\n+     * Set TemplateManager osgi service.\n+     *\n+     * @param templateManager TemplateManager service\n+     */\n+    public static void setTemplateManager(TemplateManager templateManager) {\n+\n+        IdentityProviderServiceHolder.templateManager = templateManager;\n+    }\n+\n+    /**\n+     * Get TemplateManager osgi service", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/IdentityProviderServiceHolder.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/IdentityProviderServiceHolder.java\nindex b90fa9cf..d0f358d8 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/IdentityProviderServiceHolder.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/IdentityProviderServiceHolder.java\n\n@@ -81,7 +81,7 @@ public class IdentityProviderServiceHolder {\n     }\n \n     /**\n-     * Get TemplateManager osgi service\n+     * Get TemplateManager osgi service.\n      *\n      * @return TemplateManager\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMTE5NQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395601195", "bodyText": "add license header", "author": "emswbandara", "createdAt": "2020-03-20T12:23:29Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/factory/TemplateMgtOSGIServiceFactory.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.wso2.carbon.identity.api.server.idp.common.factory;", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/factory/TemplateMgtOSGIServiceFactory.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/factory/TemplateMgtOSGIServiceFactory.java\nindex ea060c72..fc62e1cc 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/factory/TemplateMgtOSGIServiceFactory.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.common/src/main/java/org/wso2/carbon/identity/api/server/idp/common/factory/TemplateMgtOSGIServiceFactory.java\n\n@@ -1,3 +1,21 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.carbon.identity.api.server.idp.common.factory;\n \n import org.springframework.beans.factory.config.AbstractFactoryBean;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMjMyNQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395602325", "bodyText": "let's use a sample filter for the templates in the example", "author": "emswbandara", "createdAt": "2020-03-20T12:25:56Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -808,7 +825,240 @@ public ConnectedApps getConnectedApps(String resourceId, Integer limit, Integer\n         }\n     }\n \n-    // Private utility Methods.\n+    /**\n+     * Retrieve the list of IDP templates.\n+     *\n+     * @param limit      Items per page.\n+     * @param offset     Offset.\n+     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"isEnabled\" eq \"true\"", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex 3372b47b..ca0bf818 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -830,7 +830,7 @@ public class ServerIdpManagementService {\n      *\n      * @param limit      Items per page.\n      * @param offset     Offset.\n-     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"isEnabled\" eq \"true\"\n+     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"category\" eq \"DEFAULT\"\n      * @return  List of identity templates.\n      */\n     public IdentityProviderTemplateListResponse getIDPTemplates(Integer limit, Integer offset, String filter) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMzk4NQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395603985", "bodyText": "check whether idpTemplate is null. If null, send 404 not found.", "author": "emswbandara", "createdAt": "2020-03-20T12:29:26Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -808,7 +825,240 @@ public ConnectedApps getConnectedApps(String resourceId, Integer limit, Integer\n         }\n     }\n \n-    // Private utility Methods.\n+    /**\n+     * Retrieve the list of IDP templates.\n+     *\n+     * @param limit      Items per page.\n+     * @param offset     Offset.\n+     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"isEnabled\" eq \"true\"\n+     * @return  List of identity templates.\n+     */\n+    public IdentityProviderTemplateListResponse getIDPTemplates(Integer limit, Integer offset, String filter) {\n+\n+        try {\n+            TemplateManager templateManager = IdentityProviderServiceHolder.getTemplateManager();\n+            List<Template> templateList = templateManager.listTemplates(\n+                    TemplateMgtConstants.TemplateType.IDP_TEMPLATE.toString(), limit, offset);\n+            return createIDPTemplateListResponse(templateList, offset, limit, filter);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_LISTING_IDP_TEMPLATES, null);\n+        }\n+    }\n+\n+    /**\n+     * Get an identity provider template identified by resource ID.\n+     *\n+     * @param templateId IDP template Id\n+     * @return IdentityProviderTemplateResponse\n+     */\n+    public IdentityProviderTemplate getIDPTemplate(String templateId) {\n+\n+        try {\n+            Template idpTemplate = IdentityProviderServiceHolder.getTemplateManager().getTemplateById(templateId);", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAxODQwNg==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r396018406", "bodyText": "TemplateManager throws an exception when resource is not found. So this is handled at handleTemplateMgtException method. Is it necessary to handle the null in here also?", "author": "mevan-karu", "createdAt": "2020-03-21T18:51:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMzk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIwNzUyMw==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r396207523", "bodyText": "Then it is fine. However you need to map the error code of that exception to http 404 in https://github.com/wso2/identity-rest-dispatcher/blob/master/components/org.wso2.carbon.identity.api.dispatcher/src/main/resources/ErrorMappings.properties", "author": "emswbandara", "createdAt": "2020-03-23T04:26:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMzk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\nindex 3372b47b..ca0bf818 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java\n\n@@ -830,7 +830,7 @@ public class ServerIdpManagementService {\n      *\n      * @param limit      Items per page.\n      * @param offset     Offset.\n-     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"isEnabled\" eq \"true\"\n+     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"category\" eq \"DEFAULT\"\n      * @return  List of identity templates.\n      */\n     public IdentityProviderTemplateListResponse getIDPTemplates(Integer limit, Integer offset, String filter) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNTE3NA==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r395605174", "bodyText": "status should be 200 ok in update requests", "author": "emswbandara", "createdAt": "2020-03-20T12:31:49Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/impl/IdentityProvidersApiServiceImpl.java", "diffHunk": "@@ -185,6 +216,14 @@ public Response updateFederatedAuthenticator(String identityProviderId, String f\n                 .build();\n     }\n \n+    @Override\n+    public Response updateIDPTemplate(String templateId, IdentityProviderTemplate\n+            identityProviderTemplatePOSTRequest) {\n+\n+        idpManagementService.updateIDPTemplate(templateId, identityProviderTemplatePOSTRequest);\n+        return Response.noContent().build();", "originalCommit": "9c010b44fac3776bc9a15f289dce7c527487d9cd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/impl/IdentityProvidersApiServiceImpl.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/impl/IdentityProvidersApiServiceImpl.java\nindex ee255662..25c1a7aa 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/impl/IdentityProvidersApiServiceImpl.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/impl/IdentityProvidersApiServiceImpl.java\n\n@@ -221,7 +221,7 @@ public class IdentityProvidersApiServiceImpl implements IdentityProvidersApiServ\n             identityProviderTemplatePOSTRequest) {\n \n         idpManagementService.updateIDPTemplate(templateId, identityProviderTemplatePOSTRequest);\n-        return Response.noContent().build();\n+        return Response.ok().build();\n     }\n \n     @Override\n"}}, {"oid": "c93c4a546ba4bba18b228e5980ffb704fd40d70b", "url": "https://github.com/wso2/identity-api-server/commit/c93c4a546ba4bba18b228e5980ffb704fd40d70b", "message": "Add IDP template management API implementation", "committedDate": "2020-03-21T18:57:11Z", "type": "forcePushed"}, {"oid": "ab4346edaecc6f7aeb5498d1804ebdac3ba430d5", "url": "https://github.com/wso2/identity-api-server/commit/ab4346edaecc6f7aeb5498d1804ebdac3ba430d5", "message": "Add IDP template management API implementation", "committedDate": "2020-03-23T04:51:01Z", "type": "forcePushed"}, {"oid": "0dd0e863df402e1171eae5c34027ea4a976d95ca", "url": "https://github.com/wso2/identity-api-server/commit/0dd0e863df402e1171eae5c34027ea4a976d95ca", "message": "Add IDP template management API implementation", "committedDate": "2020-03-23T05:08:16Z", "type": "forcePushed"}, {"oid": "1904c3de02493b8e2bdfee8d1ae1002f85c3dc76", "url": "https://github.com/wso2/identity-api-server/commit/1904c3de02493b8e2bdfee8d1ae1002f85c3dc76", "message": "Add IDP template management API implementation", "committedDate": "2020-03-24T13:48:05Z", "type": "forcePushed"}, {"oid": "7c6eb010aa4802a2ca0f2d7bf8f8e5a24bd90303", "url": "https://github.com/wso2/identity-api-server/commit/7c6eb010aa4802a2ca0f2d7bf8f8e5a24bd90303", "message": "Add IDP template management API implementation", "committedDate": "2020-03-24T14:03:47Z", "type": "forcePushed"}, {"oid": "2a84cb9a54652cf0066b39951bc4ca0e6f16ea64", "url": "https://github.com/wso2/identity-api-server/commit/2a84cb9a54652cf0066b39951bc4ca0e6f16ea64", "message": "Add IDP template management API implementation", "committedDate": "2020-03-24T16:23:24Z", "type": "forcePushed"}, {"oid": "135504a02ef2b01fe125a36a66c01ff2fed632d1", "url": "https://github.com/wso2/identity-api-server/commit/135504a02ef2b01fe125a36a66c01ff2fed632d1", "message": "Add IDP template management API implementation", "committedDate": "2020-03-25T07:58:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyOTAxOQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r397929019", "bodyText": "change the code generator to have 2020", "author": "thanujalk", "createdAt": "2020-03-25T15:07:18Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java", "diffHunk": "@@ -0,0 +1,260 @@\n+/*\n+* Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "135504a02ef2b01fe125a36a66c01ff2fed632d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c1b57e32b32d5e4d4c1361283e29c98e7b02da41", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java\nindex f30b1cae..91b5dd40 100644\n--- a/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java\n+++ b/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java\n\n@@ -1,5 +1,5 @@\n /*\n-* Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+* Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n"}}, {"oid": "c1b57e32b32d5e4d4c1361283e29c98e7b02da41", "url": "https://github.com/wso2/identity-api-server/commit/c1b57e32b32d5e4d4c1361283e29c98e7b02da41", "message": "Add IDP template management API implementation", "committedDate": "2020-03-27T05:24:32Z", "type": "forcePushed"}, {"oid": "8540919879a10c2f4b9585f09b966cb65507143d", "url": "https://github.com/wso2/identity-api-server/commit/8540919879a10c2f4b9585f09b966cb65507143d", "message": "Add TemplateManager service", "committedDate": "2020-03-27T05:26:57Z", "type": "commit"}, {"oid": "0d89aaa0e3e0444d315df5a548ba2d2c13a39102", "url": "https://github.com/wso2/identity-api-server/commit/0d89aaa0e3e0444d315df5a548ba2d2c13a39102", "message": "Add IDP template management API implementation", "committedDate": "2020-03-27T05:26:57Z", "type": "forcePushed"}, {"oid": "0b7e7e33c9c727094ea60b4b0e41166145e409d4", "url": "https://github.com/wso2/identity-api-server/commit/0b7e7e33c9c727094ea60b4b0e41166145e409d4", "message": "Add IDP template management API implementation", "committedDate": "2020-03-27T07:03:56Z", "type": "forcePushed"}, {"oid": "88fa5194c446519ca9e55e036bffa47996a7f78c", "url": "https://github.com/wso2/identity-api-server/commit/88fa5194c446519ca9e55e036bffa47996a7f78c", "message": "Add IDP template management API implementation", "committedDate": "2020-03-27T07:06:51Z", "type": "commit"}, {"oid": "88fa5194c446519ca9e55e036bffa47996a7f78c", "url": "https://github.com/wso2/identity-api-server/commit/88fa5194c446519ca9e55e036bffa47996a7f78c", "message": "Add IDP template management API implementation", "committedDate": "2020-03-27T07:06:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjY3Nw==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r432686677", "bodyText": "Missing the doc comment. Check other places as well.", "author": "NipuniBhagya", "createdAt": "2020-05-29T19:19:34Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java", "diffHunk": "@@ -0,0 +1,260 @@\n+/*\n+* Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+* http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.wso2.carbon.identity.api.server.idp.v1.model;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.wso2.carbon.identity.api.server.idp.v1.model.IdentityProviderPOSTRequest;\n+import javax.validation.constraints.*;\n+\n+\n+import io.swagger.annotations.*;\n+import java.util.Objects;\n+import javax.validation.Valid;\n+import javax.xml.bind.annotation.*;\n+\n+public class IdentityProviderTemplate  {\n+  \n+    private String id;\n+    private String name;\n+    private String description;\n+    private String image;\n+\n+@XmlType(name=\"CategoryEnum\")\n+@XmlEnum(String.class)\n+public enum CategoryEnum {\n+\n+    @XmlEnumValue(\"DEFAULT\") DEFAULT(String.valueOf(\"DEFAULT\")), @XmlEnumValue(\"CUSTOM\") CUSTOM(String.valueOf(\"CUSTOM\"));\n+\n+\n+    private String value;\n+\n+    CategoryEnum(String v) {\n+        value = v;\n+    }\n+\n+    public String value() {\n+        return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.valueOf(value);\n+    }\n+\n+    public static CategoryEnum fromValue(String value) {\n+        for (CategoryEnum b : CategoryEnum.values()) {\n+            if (b.value.equals(value)) {\n+                return b;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Unexpected value '\" + value + \"'\");\n+    }\n+}\n+\n+    private CategoryEnum category;\n+    private Integer displayOrder;\n+    private IdentityProviderPOSTRequest idp;\n+\n+    /**\n+    **/\n+    public IdentityProviderTemplate id(String id) {\n+\n+        this.id = id;\n+        return this;\n+    }\n+    \n+    @ApiModelProperty(example = \"123e4567-e89b-12d3-a456-556642440000\", value = \"\")\n+    @JsonProperty(\"id\")\n+    @Valid\n+    public String getId() {\n+        return id;\n+    }\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    /**", "originalCommit": "88fa5194c446519ca9e55e036bffa47996a7f78c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyMzkyNA==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r464223924", "bodyText": "Fixed with #191", "author": "mevan-karu", "createdAt": "2020-08-03T06:48:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjY3Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMzc5Nw==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r432803797", "bodyText": "Let's remove this unnecessary line.", "author": "NipuniBhagya", "createdAt": "2020-05-30T02:56:46Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/gen/java/org/wso2/carbon/identity/api/server/idp/v1/model/IdentityProviderTemplate.java", "diffHunk": "@@ -0,0 +1,260 @@\n+/*\n+* Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+*\n+* Licensed under the Apache License, Version 2.0 (the \"License\");\n+* you may not use this file except in compliance with the License.\n+* You may obtain a copy of the License at\n+*\n+* http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.wso2.carbon.identity.api.server.idp.v1.model;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import io.swagger.annotations.ApiModel;\n+import io.swagger.annotations.ApiModelProperty;\n+import org.wso2.carbon.identity.api.server.idp.v1.model.IdentityProviderPOSTRequest;\n+import javax.validation.constraints.*;\n+\n+\n+import io.swagger.annotations.*;\n+import java.util.Objects;\n+import javax.validation.Valid;\n+import javax.xml.bind.annotation.*;\n+\n+public class IdentityProviderTemplate  {\n+  \n+    private String id;\n+    private String name;\n+    private String description;\n+    private String image;\n+\n+@XmlType(name=\"CategoryEnum\")\n+@XmlEnum(String.class)\n+public enum CategoryEnum {\n+\n+    @XmlEnumValue(\"DEFAULT\") DEFAULT(String.valueOf(\"DEFAULT\")), @XmlEnumValue(\"CUSTOM\") CUSTOM(String.valueOf(\"CUSTOM\"));\n+\n+", "originalCommit": "88fa5194c446519ca9e55e036bffa47996a7f78c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyNDAwOQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r464224009", "bodyText": "Fixed with #191", "author": "mevan-karu", "createdAt": "2020-08-03T06:48:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwMzc5Nw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMTU0NQ==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r462801545", "bodyText": "This type of comment is not the normal convention. Ideally each method needs to have the comment explaining it is a utility and what it is for.", "author": "ruwanta", "createdAt": "2020-07-30T07:26:29Z", "path": "components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java", "diffHunk": "@@ -808,7 +826,234 @@ public ConnectedApps getConnectedApps(String resourceId, Integer limit, Integer\n         }\n     }\n \n-    // Private utility Methods.\n+    /**\n+     * Retrieve the list of IDP templates.\n+     *\n+     * @param limit      Items per page.\n+     * @param offset     Offset.\n+     * @param filter     Filter string. E.g. filter=\"name\" sw \"google\" and \"category\" eq \"DEFAULT\"\n+     * @return  List of identity templates.\n+     */\n+    public IdentityProviderTemplateListResponse getIDPTemplates(Integer limit, Integer offset, String filter) {\n+\n+        try {\n+            TemplateManager templateManager = IdentityProviderServiceHolder.getTemplateManager();\n+            List<Template> templateList = templateManager.listTemplates(\n+                    TemplateMgtConstants.TemplateType.IDP_TEMPLATE.toString(), limit, offset);\n+            return createIDPTemplateListResponse(templateList, offset, limit, filter);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_LISTING_IDP_TEMPLATES, null);\n+        }\n+    }\n+\n+    /**\n+     * Get an identity provider template identified by resource ID.\n+     *\n+     * @param templateId IDP template Id\n+     * @return IdentityProviderTemplateResponse\n+     */\n+    public IdentityProviderTemplate getIDPTemplate(String templateId) {\n+\n+        try {\n+            Template idpTemplate = IdentityProviderServiceHolder.getTemplateManager().getTemplateById(templateId);\n+            return createIDPTemplateResponse(idpTemplate);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_RETRIEVING_IDP_TEMPLATE,\n+                    templateId);\n+        } catch (IOException e) {\n+            throw handleException(Response.Status.INTERNAL_SERVER_ERROR,\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_RETRIEVING_IDP_TEMPLATE, templateId);\n+        }\n+    }\n+\n+    /**\n+     * Update IDP template.\n+     *\n+     * @param identityProviderTemplate Updated IDP template\n+     */\n+    public void updateIDPTemplate(String templateId, IdentityProviderTemplate identityProviderTemplate) {\n+\n+        try {\n+            Template idpTemplate = generateIDPTemplate(identityProviderTemplate);\n+            IdentityProviderServiceHolder.getTemplateManager().updateTemplateById(templateId, idpTemplate);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_UPDATING_IDP_TEMPLATE,\n+                    identityProviderTemplate.getId());\n+        } catch (JsonProcessingException e) {\n+            throw handleException(Response.Status.BAD_REQUEST,\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_UPDATING_IDP_TEMPLATE, templateId);\n+        }\n+    }\n+\n+    /**\n+     * Create a new IDP template.\n+     *\n+     * @param identityProviderTemplate identityProviderTemplatePOSTRequest\n+     * @return IdentityProviderTemplateResponse\n+     */\n+    public String createIDPTemplate(IdentityProviderTemplate identityProviderTemplate) {\n+\n+        try {\n+            TemplateManager templateManager = IdentityProviderServiceHolder.getTemplateManager();\n+            Template idpTemplate = generateIDPTemplate(identityProviderTemplate);\n+            return templateManager.addTemplate(idpTemplate);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_ADDING_IDP_TEMPLATE, null);\n+        } catch (JsonProcessingException e) {\n+            throw handleException(Response.Status.BAD_REQUEST,\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ADDING_IDP_TEMPLATE, null);\n+        }\n+    }\n+\n+    /**\n+     * Delete a IDP template identified by resource Id.\n+     *\n+     * @param templateId Id of the IDP template\n+     */\n+    public void deleteIDPTemplate(String templateId) {\n+\n+        try {\n+            TemplateManager templateManager = IdentityProviderServiceHolder.getTemplateManager();\n+            templateManager.deleteTemplateById(templateId);\n+        } catch (TemplateManagementException e) {\n+            throw handleTemplateMgtException(e, Constants.ErrorMessage.ERROR_CODE_ERROR_DELETING_IDP_TEMPLATE,\n+                    templateId);\n+        }\n+    }\n+\n+//  Private utility Methods.", "originalCommit": "88fa5194c446519ca9e55e036bffa47996a7f78c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIyNDAzNA==", "url": "https://github.com/wso2/identity-api-server/pull/120#discussion_r464224034", "bodyText": "Fixed with #191", "author": "mevan-karu", "createdAt": "2020-08-03T06:48:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMTU0NQ=="}], "type": "inlineReview", "revised_code": null}]}