{"pr_number": 230, "pr_title": "Fix server error in script library name", "pr_createdAt": "2020-11-10T05:10:42Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/230", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxMzg1NA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520313854", "bodyText": "This variable declaration is not needed. Can initialize the value directly in the following step.", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:15:44Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -280,12 +281,19 @@ public boolean isScriptLibraryAvailable(String scriptLibraryName) {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0Nzc0Mw==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521847743", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:26:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxMzg1NA=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex 45b968ad..e44882f2 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -281,20 +282,21 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n-        String displayName;\n-\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-\n-\n-        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n-                displayName)).toString().replace(\"+\", \"%20\"));\n-\n-\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNDExMg==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520314112", "bodyText": "Remove extra lines", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:16:08Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -280,12 +281,19 @@ public boolean isScriptLibraryAvailable(String scriptLibraryName) {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;\n+\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n+", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0ODAyOA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521848028", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:26:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNDExMg=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex 45b968ad..e44882f2 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -281,20 +282,21 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n-        String displayName;\n-\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-\n-\n-        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n-                displayName)).toString().replace(\"+\", \"%20\"));\n-\n-\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNTYyNA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520315624", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n          \n          \n            \n                     String displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:18:44Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -280,12 +281,19 @@ public boolean isScriptLibraryAvailable(String scriptLibraryName) {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;\n+\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n+\n+\n+        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzA2Mw==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520317063", "bodyText": "Added a suggestion because encode(scriptLibrary.getFunctionLibraryName() is a depricated method", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNTYyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0ODE3OQ==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521848179", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:27:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNTYyNA=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex 45b968ad..e44882f2 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -281,20 +282,21 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n-        String displayName;\n-\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-\n-\n-        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n-                displayName)).toString().replace(\"+\", \"%20\"));\n-\n-\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNjcxMA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520316710", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n          \n          \n            \n                            V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:20:48Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -280,12 +281,19 @@ public boolean isScriptLibraryAvailable(String scriptLibraryName) {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;\n+\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n+\n+\n+        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n-                scriptLibrary.getFunctionLibraryName())).toString());\n+                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0ODMxMg==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521848312", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:27:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNjcxMA=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex 45b968ad..e44882f2 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -281,20 +282,21 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n-        String displayName;\n-\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-\n-\n-        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n-                displayName)).toString().replace(\"+\", \"%20\"));\n-\n-\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzE0MQ==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520317141", "bodyText": "Remove new line", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:21:50Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -280,12 +281,19 @@ public boolean isScriptLibraryAvailable(String scriptLibraryName) {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;\n+\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n+\n+\n+        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n-                scriptLibrary.getFunctionLibraryName())).toString());\n+                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n+                displayName)).toString().replace(\"+\", \"%20\"));\n+", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NzY3Nw==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521847677", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:25:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzE0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex 45b968ad..e44882f2 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -281,20 +282,21 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n-        String displayName;\n-\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-\n-\n-        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n-                displayName)).toString().replace(\"+\", \"%20\"));\n-\n-\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzYwNQ==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520317605", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + URLEncoder.encode(name));\n          \n          \n            \n                                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + URLEncoder.encode(name), StandardCharsets.UTF_8.name());", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:22:55Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java", "diffHunk": "@@ -46,7 +47,8 @@ public Response addScriptLibrary(String name, InputStream contentInputStream, At\n \n         serverScriptLibrariesService.addScriptLibrary(name, contentInputStream, description);\n         URI location =\n-                ContextLoader.buildURIForHeader(V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + name);\n+                ContextLoader.buildURIForHeader(\n+                        V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + URLEncoder.encode(name));", "originalCommit": "e18044d3cae6a172155ed32f471584f59a2f3eb1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxODA0NA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r520318044", "bodyText": "also, replace + by %20, because this reference will be returned in the headers", "author": "AnuradhaSK", "createdAt": "2020-11-10T06:23:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NzI3OA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r521847278", "bodyText": "Fixed in f72b9a5", "author": "AnjanaSamindraPerera", "createdAt": "2020-11-12T05:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMxNzYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\nindex 6f449d8f..6846902e 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\n\n@@ -46,10 +52,17 @@ public class ScriptLibrariesApiServiceImpl implements ScriptLibrariesApiService\n                                      String description) {\n \n         serverScriptLibrariesService.addScriptLibrary(name, contentInputStream, description);\n-        URI location =\n-                ContextLoader.buildURIForHeader(\n-                        V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + URLEncoder.encode(name));\n-        return Response.created(location).build();\n+        try {\n+            URI location =\n+                    ContextLoader.buildURIForHeader(V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT\n+                            + \"/\" + URLEncoder.encode(name, StandardCharsets.UTF_8.name())\n+                            .replace(\"+\", \"%20\"));\n+            return Response.created(location).build();\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n+        }\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNDU1NA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557304554", "bodyText": "ErrorResponse errorResponse =\n                new ErrorResponse.Builder().withCode(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getCode()).withMessage(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage())\n            .withDescription(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getDescription()).build();\n        throw new APIError(Response.Status.INTERNAL_SERVER_ERROR, errorResponse);", "author": "AnuradhaSK", "createdAt": "2021-01-14T10:47:27Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -283,10 +285,18 @@ private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary script\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n-                scriptLibrary.getFunctionLibraryName())).toString());\n-        return scriptLibraryResponse;\n+        try {\n+            String displayName =\n+                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n+            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n+                    displayName)).toString().replace(\"+\", \"%20\"));\n+            return scriptLibraryResponse;\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);", "originalCommit": "f72b9a554a689f73c11753281a0ea46942c080f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MDYyMQ==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557870621", "bodyText": "This fix is not required since handleScriptLibraryError method can access even the access modifier is private.", "author": "AnjanaSamindraPerera", "createdAt": "2021-01-15T05:28:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNDU1NA=="}], "type": "inlineReview", "revised_code": {"commit": "8081a006758a1790046fb89adfda070b1bc41f93", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex e44882f2..45b968ad 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -282,21 +281,20 @@ public class ServerScriptLibrariesService {\n      */\n     private ScriptLibraryResponse createScriptLibraryResponse(FunctionLibrary scriptLibrary) {\n \n+        String displayName;\n+\n         ScriptLibraryResponse scriptLibraryResponse = new ScriptLibraryResponse();\n         scriptLibraryResponse.setName(scriptLibrary.getFunctionLibraryName());\n         scriptLibraryResponse.setDescription(scriptLibrary.getDescription());\n-        try {\n-            String displayName =\n-                    URLEncoder.encode(scriptLibrary.getFunctionLibraryName(), StandardCharsets.UTF_8.name());\n-            scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n-                    V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/%s\" + SCRIPT_LIBRARY_CONTENT_PATH,\n-                    displayName)).toString().replace(\"+\", \"%20\"));\n-            return scriptLibraryResponse;\n-        } catch (UnsupportedEncodingException e) {\n-            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n-                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n-            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n-        }\n+\n+\n+        displayName = URLEncoder.encode(scriptLibrary.getFunctionLibraryName());\n+        scriptLibraryResponse.setContentRef(ContextLoader.buildURIForBody(String.format(\n+                V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + displayName + SCRIPT_LIBRARY_CONTENT_PATH,\n+                displayName)).toString().replace(\"+\", \"%20\"));\n+\n+\n+        return scriptLibraryResponse;\n     }\n \n     /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNTYzNg==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557305636", "bodyText": "ErrorResponse errorResponse =\n            new ErrorResponse.Builder().withCode(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getCode()).withMessage(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage()).withDescription(Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getDescription()).build();\n    throw new APIError(Response.Status.INTERNAL_SERVER_ERROR, errorResponse);", "author": "AnuradhaSK", "createdAt": "2021-01-14T10:49:01Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java", "diffHunk": "@@ -45,9 +52,17 @@ public Response addScriptLibrary(String name, InputStream contentInputStream, At\n                                      String description) {\n \n         serverScriptLibrariesService.addScriptLibrary(name, contentInputStream, description);\n-        URI location =\n-                ContextLoader.buildURIForHeader(V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + name);\n-        return Response.created(location).build();\n+        try {\n+            URI location =\n+                    ContextLoader.buildURIForHeader(V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT\n+                            + \"/\" + URLEncoder.encode(name, StandardCharsets.UTF_8.name())\n+                            .replace(\"+\", \"%20\"));\n+            return Response.created(location).build();\n+        } catch (UnsupportedEncodingException e) {\n+            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n+                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n+            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);", "originalCommit": "f72b9a554a689f73c11753281a0ea46942c080f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MDc4OA==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557870788", "bodyText": "Fixed in a642597", "author": "AnjanaSamindraPerera", "createdAt": "2021-01-15T05:29:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNTYzNg=="}], "type": "inlineReview", "revised_code": {"commit": "8081a006758a1790046fb89adfda070b1bc41f93", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\nindex 6846902e..6f449d8f 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/impl/ScriptLibrariesApiServiceImpl.java\n\n@@ -52,17 +46,10 @@ public class ScriptLibrariesApiServiceImpl implements ScriptLibrariesApiService\n                                      String description) {\n \n         serverScriptLibrariesService.addScriptLibrary(name, contentInputStream, description);\n-        try {\n-            URI location =\n-                    ContextLoader.buildURIForHeader(V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT\n-                            + \"/\" + URLEncoder.encode(name, StandardCharsets.UTF_8.name())\n-                            .replace(\"+\", \"%20\"));\n-            return Response.created(location).build();\n-        } catch (UnsupportedEncodingException e) {\n-            FunctionLibraryManagementException error = new FunctionLibraryManagementException(\n-                    Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL.getMessage(), e);\n-            throw handleScriptLibraryError(error, Constants.ErrorMessage.ERROR_CODE_ERROR_ENCODING_URL);\n-        }\n+        URI location =\n+                ContextLoader.buildURIForHeader(\n+                        V1_API_PATH_COMPONENT + SCRIPT_LIBRARY_PATH_COMPONENT + \"/\" + URLEncoder.encode(name));\n+        return Response.created(location).build();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNjIxNw==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557306217", "bodyText": "Let's do not modify the access modifiers of the methods. Check other places as well", "author": "AnuradhaSK", "createdAt": "2021-01-14T10:50:00Z", "path": "components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java", "diffHunk": "@@ -425,7 +436,7 @@ private void createErrorResponse(FunctionLibraryManagementException e, ErrorResp\n      * @param errorMsg Error Message information.\n      * @return ErrorResponse.Builder.\n      */\n-    private ErrorResponse.Builder getErrorBuilder(Constants.ErrorMessage errorMsg) {\n+    public static ErrorResponse.Builder getErrorBuilder(Constants.ErrorMessage errorMsg) {", "originalCommit": "f72b9a554a689f73c11753281a0ea46942c080f1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MDk0OQ==", "url": "https://github.com/wso2/identity-api-server/pull/230#discussion_r557870949", "bodyText": "Fixed in a642597", "author": "AnjanaSamindraPerera", "createdAt": "2021-01-15T05:30:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMwNjIxNw=="}], "type": "inlineReview", "revised_code": {"commit": "8081a006758a1790046fb89adfda070b1bc41f93", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\nindex e44882f2..45b968ad 100644\n--- a/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.script.library/org.wso2.carbon.identity.api.server.script.library.v1/src/main/java/org/wso2/carbon/identity/api/server/script/library/v1/core/ServerScriptLibrariesService.java\n\n@@ -436,7 +433,7 @@ public class ServerScriptLibrariesService {\n      * @param errorMsg Error Message information.\n      * @return ErrorResponse.Builder.\n      */\n-    public static ErrorResponse.Builder getErrorBuilder(Constants.ErrorMessage errorMsg) {\n+    private ErrorResponse.Builder getErrorBuilder(Constants.ErrorMessage errorMsg) {\n \n         return new ErrorResponse.Builder().withCode(errorMsg.getCode()).withMessage(errorMsg.getMessage())\n                 .withDescription(errorMsg.getDescription());\n"}}, {"oid": "8081a006758a1790046fb89adfda070b1bc41f93", "url": "https://github.com/wso2/identity-api-server/commit/8081a006758a1790046fb89adfda070b1bc41f93", "message": "fix server error in scim2 name", "committedDate": "2021-01-15T05:24:55Z", "type": "commit"}, {"oid": "7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "url": "https://github.com/wso2/identity-api-server/commit/7da2fdcf7fedea31a38cd8ba1d9503ef8d0d3860", "message": "address review comments", "committedDate": "2021-01-15T05:24:55Z", "type": "commit"}, {"oid": "f615b5dd12692a62fe9abf34b74ff48b18899580", "url": "https://github.com/wso2/identity-api-server/commit/f615b5dd12692a62fe9abf34b74ff48b18899580", "message": "address review comments", "committedDate": "2021-01-15T05:24:55Z", "type": "commit"}, {"oid": "f615b5dd12692a62fe9abf34b74ff48b18899580", "url": "https://github.com/wso2/identity-api-server/commit/f615b5dd12692a62fe9abf34b74ff48b18899580", "message": "address review comments", "committedDate": "2021-01-15T05:24:55Z", "type": "forcePushed"}, {"oid": "d129ceab0003cf83027742379365f063d44090f0", "url": "https://github.com/wso2/identity-api-server/commit/d129ceab0003cf83027742379365f063d44090f0", "message": "address review comments", "committedDate": "2021-01-15T05:44:40Z", "type": "commit"}, {"oid": "a64259756e1796dfabe5ebd0bd967d6a12d1440e", "url": "https://github.com/wso2/identity-api-server/commit/a64259756e1796dfabe5ebd0bd967d6a12d1440e", "message": "address review comments", "committedDate": "2021-01-15T05:48:14Z", "type": "commit"}]}