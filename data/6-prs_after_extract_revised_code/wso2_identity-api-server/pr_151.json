{"pr_number": 151, "pr_title": "Add requeriedAttribute support for the API", "pr_createdAt": "2020-04-20T18:12:05Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/151", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg2NDc4Ng==", "url": "https://github.com/wso2/identity-api-server/pull/151#discussion_r411864786", "bodyText": "we need to support other possible attributes too..", "author": "emswbandara", "createdAt": "2020-04-21T04:44:21Z", "path": "components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.api.server.email.template.common/src/main/java/org/wso2/carbon/identity/api/server/email/template/common/Constants.java", "diffHunk": "@@ -34,6 +34,9 @@\n     public static final String EMAIL_TEMPLATES_PATH = \"/templates\";\n     public static final String PATH_SEPARATOR = \"/\";\n \n+    // Required attributes.\n+    public static final String LOCALE = \"templates.id\";", "originalCommit": "9640b2b860ee256fe310f0b292a9525881883054", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "984344fef3895e269a602870ab8d4e3d21e50a0d", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.api.server.email.template.common/src/main/java/org/wso2/carbon/identity/api/server/email/template/common/Constants.java b/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.api.server.email.template.common/src/main/java/org/wso2/carbon/identity/api/server/email/template/common/Constants.java\nindex 7bab9107..5b287568 100644\n--- a/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.api.server.email.template.common/src/main/java/org/wso2/carbon/identity/api/server/email/template/common/Constants.java\n+++ b/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.api.server.email.template.common/src/main/java/org/wso2/carbon/identity/api/server/email/template/common/Constants.java\n\n@@ -35,7 +35,12 @@ public class Constants {\n     public static final String PATH_SEPARATOR = \"/\";\n \n     // Required attributes.\n+    public static final String TEMPLATES = \"templates\";\n     public static final String LOCALE = \"templates.id\";\n+    public static final String CONTENT_TYPE = \"templates.contentType\";\n+    public static final String SUBJECT = \"templates.subject\";\n+    public static final String BODY = \"templates.body\";\n+    public static final String FOOTER = \"templates.footer\";\n \n     private static final Map<String, ErrorMessage> ERROR_CODE_MAP = new HashMap<>();\n \n"}}, {"oid": "ba493a8dbe8814ff2e55f98fd0c6d0c1b2af58ae", "url": "https://github.com/wso2/identity-api-server/commit/ba493a8dbe8814ff2e55f98fd0c6d0c1b2af58ae", "message": "Add requeriedAttribute support for the API", "committedDate": "2020-04-21T12:31:56Z", "type": "commit"}, {"oid": "29a591129dc0f5d35af1accbac0646a69c8f1150", "url": "https://github.com/wso2/identity-api-server/commit/29a591129dc0f5d35af1accbac0646a69c8f1150", "message": "Fix incorrect constant used in populateIDPListResponse", "committedDate": "2020-04-21T12:31:56Z", "type": "commit"}, {"oid": "b6aaecbc9fec24a4f3ca4f80e03ad9d45ad7f10f", "url": "https://github.com/wso2/identity-api-server/commit/b6aaecbc9fec24a4f3ca4f80e03ad9d45ad7f10f", "message": "Add generated files for updated yaml file", "committedDate": "2020-04-21T12:31:56Z", "type": "commit"}, {"oid": "d53b93b072753d2602bdab0dd096952ec22ebbcb", "url": "https://github.com/wso2/identity-api-server/commit/d53b93b072753d2602bdab0dd096952ec22ebbcb", "message": "Remove formatting from generated file", "committedDate": "2020-04-21T12:31:56Z", "type": "commit"}, {"oid": "984344fef3895e269a602870ab8d4e3d21e50a0d", "url": "https://github.com/wso2/identity-api-server/commit/984344fef3895e269a602870ab8d4e3d21e50a0d", "message": "Add requiredAttribute support for all template attributes", "committedDate": "2020-04-21T12:31:56Z", "type": "commit"}, {"oid": "984344fef3895e269a602870ab8d4e3d21e50a0d", "url": "https://github.com/wso2/identity-api-server/commit/984344fef3895e269a602870ab8d4e3d21e50a0d", "message": "Add requiredAttribute support for all template attributes", "committedDate": "2020-04-21T12:31:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI3MjUyMA==", "url": "https://github.com/wso2/identity-api-server/pull/151#discussion_r412272520", "bodyText": "let's use multi-line comment format", "author": "emswbandara", "createdAt": "2020-04-21T15:11:48Z", "path": "components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.rest.api.server.email.template.v1/src/main/java/org/wso2/carbon/identity/rest/api/server/email/template/v1/core/ServerEmailTemplatesService.java", "diffHunk": "@@ -392,26 +414,66 @@ private void addEmailTemplateToTheSystem(String templateTypeDisplayName, EmailTe\n     /**\n      * Create a list EmailTemplateTypeWithoutTemplates objects by reading an internal EmailTemplate list.\n      *\n+     * @param emailTemplateTypes List of available email template types.\n      * @param internalEmailTemplates List of EmailTemplate objects.\n+     * @param requestedAttributeList List of required attributes.\n      * @return List of EmailTemplateTypeWithoutTemplates objects.\n      */\n     private List<EmailTemplateTypeWithoutTemplates> buildEmailTemplateTypeWithoutTemplatesList(\n-            List<EmailTemplate> internalEmailTemplates) {\n+            List<String> emailTemplateTypes, List<EmailTemplate> internalEmailTemplates,\n+            List<String> requestedAttributeList) {\n \n         Map<String, EmailTemplateTypeWithoutTemplates> templateTypeMap = new HashMap<>();\n-        for (EmailTemplate emailTemplate : internalEmailTemplates) {\n-            if (!templateTypeMap.containsKey(emailTemplate.getTemplateType())) {\n-\n-                EmailTemplateTypeWithoutTemplates emailTemplateType = new EmailTemplateTypeWithoutTemplates();\n-                // Set display name.\n-                emailTemplateType.setDisplayName(emailTemplate.getTemplateDisplayName());\n-                // Set id.\n-                String templateTypeId = getEmailTemplateIdFromDisplayName(emailTemplate.getTemplateDisplayName());\n-                emailTemplateType.setId(templateTypeId);\n-                // Set location.\n-                emailTemplateType.setSelf(getTemplateTypeLocation(templateTypeId));\n+        for (String templateType : emailTemplateTypes) {\n+\n+            EmailTemplateTypeWithoutTemplates emailTemplateType = new EmailTemplateTypeWithoutTemplates();\n+            // Set display name.\n+            emailTemplateType.setDisplayName(templateType);\n+            // Set id.\n+            String templateTypeId = getEmailTemplateIdFromDisplayName(templateType);\n+            emailTemplateType.setId(templateTypeId);\n+            // Set location.\n+            emailTemplateType.setSelf(getTemplateTypeLocation(templateTypeId));\n+\n+            if (requestedAttributeList != null) {\n+                emailTemplateType.setTemplates(new ArrayList<>());\n+            }\n+            templateTypeMap.put(templateType, emailTemplateType);\n+        }\n \n-                templateTypeMap.put(emailTemplate.getTemplateType(), emailTemplateType);\n+        // Populate optional email template information if exists.\n+        if (requestedAttributeList != null) {\n+            for (EmailTemplate emailTemplate : internalEmailTemplates) {\n+                EmailTemplateWithID templateWithID = new EmailTemplateWithID();\n+                for (String requestedAttribute : requestedAttributeList) {\n+                    switch (requestedAttribute) {\n+                        case Constants.TEMPLATES:\n+                            templateWithID.setContentType(emailTemplate.getEmailContentType());\n+                            templateWithID.setSubject(emailTemplate.getSubject());\n+                            templateWithID.setBody(emailTemplate.getBody());\n+                            templateWithID.setFooter(emailTemplate.getFooter());\n+                            templateWithID.setId(emailTemplate.getLocale());\n+                            break;\n+                        case Constants.LOCALE:\n+                            templateWithID.setId(emailTemplate.getLocale());\n+                            break;\n+                        case Constants.CONTENT_TYPE:\n+                            templateWithID.setContentType(emailTemplate.getEmailContentType());\n+                            break;\n+                        case Constants.SUBJECT:\n+                            templateWithID.setSubject(emailTemplate.getSubject());\n+                            break;\n+                        case Constants.BODY:\n+                            templateWithID.setBody(emailTemplate.getBody());\n+                            break;\n+                        case Constants.FOOTER:\n+                            templateWithID.setFooter(emailTemplate.getFooter());\n+                            break;\n+                    }\n+                }\n+                // Email template's display name is used to search templateTypeMap key because", "originalCommit": "984344fef3895e269a602870ab8d4e3d21e50a0d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY2MjgxNQ==", "url": "https://github.com/wso2/identity-api-server/pull/151#discussion_r412662815", "bodyText": "addressed in 1bbab04", "author": "AnuradhaSK", "createdAt": "2020-04-22T04:35:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI3MjUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "1bbab048df7ab95cbf4757e21035235a9238d69e", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.rest.api.server.email.template.v1/src/main/java/org/wso2/carbon/identity/rest/api/server/email/template/v1/core/ServerEmailTemplatesService.java b/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.rest.api.server.email.template.v1/src/main/java/org/wso2/carbon/identity/rest/api/server/email/template/v1/core/ServerEmailTemplatesService.java\nindex 28ec8de3..64f301d3 100644\n--- a/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.rest.api.server.email.template.v1/src/main/java/org/wso2/carbon/identity/rest/api/server/email/template/v1/core/ServerEmailTemplatesService.java\n+++ b/components/org.wso2.carbon.identity.api.server.email.template/org.wso2.carbon.identity.rest.api.server.email.template.v1/src/main/java/org/wso2/carbon/identity/rest/api/server/email/template/v1/core/ServerEmailTemplatesService.java\n\n@@ -471,8 +471,10 @@ public class ServerEmailTemplatesService {\n                             break;\n                     }\n                 }\n-                // Email template's display name is used to search templateTypeMap key because\n-                // Template's display name and Template type's display name are equal.\n+                /*\n+                  Email template's display name is used to search templateTypeMap key because\n+                  Template's display name and Template type's display name are equal.\n+                 */\n                 templateTypeMap.get(emailTemplate.getTemplateDisplayName()).getTemplates().add(templateWithID);\n             }\n         }\n"}}, {"oid": "1bbab048df7ab95cbf4757e21035235a9238d69e", "url": "https://github.com/wso2/identity-api-server/commit/1bbab048df7ab95cbf4757e21035235a9238d69e", "message": "update a comment", "committedDate": "2020-04-21T16:02:08Z", "type": "commit"}, {"oid": "c582785700d9e2a140ff6c1c76701aa114197a11", "url": "https://github.com/wso2/identity-api-server/commit/c582785700d9e2a140ff6c1c76701aa114197a11", "message": "upgrade identity event handler version", "committedDate": "2020-04-22T04:34:03Z", "type": "commit"}]}