{"pr_number": 188, "pr_title": "Implement a REST API for developers to manage CORS at the application level", "pr_createdAt": "2020-07-15T13:08:01Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/188", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0NzUxOA==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456247518", "bodyText": "inline lines 115 and 116", "author": "emswbandara", "createdAt": "2020-07-17T06:38:20Z", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java", "diffHunk": "@@ -110,4 +106,15 @@ public void setTemplateManager(TemplateManager templateManager) {\n \n         ApplicationManagementServiceHolder.templateManager = templateManager;\n     }\n+\n+    public CORSManagementService getCorsManagementService() {\n+\n+        return corsManagementService;\n+    }\n+\n+    public void setCorsManagementService(", "originalCommit": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e164d6e1af7c476ca265c9a7865d15a76e3ecd0f", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java\nindex 3b00aa6f..9e702a92 100644\n--- a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java\n+++ b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.common/src/main/java/org/wso2/carbon/identity/api/server/application/management/common/ApplicationManagementServiceHolder.java\n\n@@ -112,8 +112,7 @@ public class ApplicationManagementServiceHolder {\n         return corsManagementService;\n     }\n \n-    public void setCorsManagementService(\n-            CORSManagementService corsManagementService) {\n+    public void setCorsManagementService(CORSManagementService corsManagementService) {\n \n         ApplicationManagementServiceHolder.corsManagementService = corsManagementService;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0ODI3MQ==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456248271", "bodyText": "no need to log here.. handleException will log the exception IINM", "author": "emswbandara", "createdAt": "2020-07-17T06:40:22Z", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -69,30 +95,40 @@ public static InboundAuthenticationRequestConfig putOAuthInbound(ServiceProvider\n                 String updatedClientId = appToUpdate.getOauthConsumerKey();\n                 return createInboundAuthRequestConfig(updatedClientId);\n             } else {\n+                // Create a new application.\n                 return createOAuthInbound(application.getApplicationName(), oidcConfigModel);\n             }\n \n-        } catch (IdentityOAuthAdminException e) {\n-            throw handleOAuthException(e);\n+        } catch (IdentityOAuthAdminException | CORSManagementServiceException e) {\n+            if (e instanceof IdentityOAuthAdminException) {\n+                // If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n+                // update has failed. Therefore rollback the update on CORS origins.\n+                try {\n+                    ApplicationManagementServiceHolder.getInstance()\n+                            .getCorsManagementService().setApplicationCORSOrigins(tenantDomain,\n+                            String.valueOf(application.getApplicationID()), existingCORSOrigins);\n+                } catch (CORSManagementServiceException corsManagementServiceException) {\n+                    log.error(\"Failed to update the CORS origins on rollback.\", e);", "originalCommit": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e164d6e1af7c476ca265c9a7865d15a76e3ecd0f", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\nindex eb941e35..1fd96779 100644\n--- a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n+++ b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n\n@@ -108,7 +108,6 @@ public class OAuthInboundFunctions {\n                             .getCorsManagementService().setApplicationCORSOrigins(tenantDomain,\n                             String.valueOf(application.getApplicationID()), existingCORSOrigins);\n                 } catch (CORSManagementServiceException corsManagementServiceException) {\n-                    log.error(\"Failed to update the CORS origins on rollback.\", e);\n                     throw handleException(e);\n                 }\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0OTI5NQ==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456249295", "bodyText": "shall we remove unncessary new lines to be consistent of previously defined error enums", "author": "emswbandara", "createdAt": "2020-07-17T06:43:02Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java", "diffHunk": "@@ -46,13 +62,49 @@ private Constants() {\n         ERROR_CODE_ERROR_RETRIEVING_AUTHENTICATOR(\"65003\",\n                 \"Unable to retrieve authenticator.\",\n                 \"Server encountered an error while retrieving the authenticator for the identifier %s.\"),\n-        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\", \"Resource not found.\",\n+        ERROR_CODE_AUTHENTICATOR_NOT_FOUND(\"60002\",\n+                \"Resource not found.\",\n                 \"Unable to find a resource matching the provided authenticator identifier %s.\"),\n-        ERROR_CODE_INVALID_INPUT(\"60003\", \"Invalid input.\", \"One of the given inputs is invalid. %s.\"),\n-        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\", \"Unable to update server configs.\", \"Server encountered an \" +\n+        ERROR_CODE_INVALID_INPUT(\"60003\",\n+                \"Invalid input.\",\n+                \"One of the given inputs is invalid. %s.\"),\n+        ERROR_CODE_ERROR_UPDATING_CONFIGS(\"65004\",\n+                \"Unable to update server configs.\",\n+                \"Server encountered an \" +\n                 \"error while updating the server configs.\"),\n-        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\", \"Unable to retrieve server configs.\", \"Server encountered an \" +\n-                \"error while retrieving the server configs.\");\n+        ERROR_CODE_ERROR_RETRIEVING_CONFIGS(\"65005\",\n+                \"Unable to retrieve server configs.\",\n+                \"Server encountered an \" +\n+                \"error while retrieving the server configs.\"),\n+\n+        //TODO: What should be the error prefix?\n+        /**\n+         * Unable to retrieve CORS origins.\n+         */\n+        ERROR_CODE_CORS_CONFIG_RETRIEVE(\"RST-65001\",\n+                \"Unable to retrieve CORS configuration.\",\n+                \"Server encountered an error while retrieving the CORS configuration.\"),\n+", "originalCommit": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26c01aaee8dd90b64e818bb3be64f84da9ea3990", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java\nindex af8b3c9b..b984311a 100644\n--- a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java\n+++ b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.common/src/main/java/org/wso2/carbon/identity/api/server/configs/common/Constants.java\n\n@@ -78,30 +78,15 @@ public class Constants {\n                 \"error while retrieving the server configs.\"),\n \n         //TODO: What should be the error prefix?\n-        /**\n-         * Unable to retrieve CORS origins.\n-         */\n         ERROR_CODE_CORS_CONFIG_RETRIEVE(\"RST-65001\",\n                 \"Unable to retrieve CORS configuration.\",\n                 \"Server encountered an error while retrieving the CORS configuration.\"),\n-\n-        /**\n-         * Unable to update CORS origins.\n-         */\n         ERROR_CODE_CORS_CONFIG_UPDATE(\"RST-65002\",\n                 \"Unable to update CORS configuration.\",\n                 \"Server encountered an error while updating the CORS configuration.\"),\n-\n-        /**\n-         * Unable to retrieve CORS origins.\n-         */\n         ERROR_CODE_CORS_RETRIEVE(\"RST-65003\",\n                 \"Unable to retrieve CORS origins.\",\n                 \"Server encountered an error while retrieving the CORS origins.\"),\n-\n-        /**\n-         * Unable to update CORS origins.\n-         */\n         ERROR_CODE_CORS_UPDATE(\"RST-65004\",\n                 \"Unable to update CORS origins.\",\n                 \"Server encountered an error while updating the CORS origins.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDY3MA==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456250670", "bodyText": "add license header", "author": "emswbandara", "createdAt": "2020-07-17T06:46:26Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.wso2.carbon.identity.api.server.configs.v1.function;", "originalCommit": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26c01aaee8dd90b64e818bb3be64f84da9ea3990", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java\nindex 2c4d6435..1d0bba26 100644\n--- a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java\n+++ b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSConfigurationToCORSConfig.java\n\n@@ -1,3 +1,22 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n package org.wso2.carbon.identity.api.server.configs.v1.function;\n \n import org.wso2.carbon.identity.api.server.configs.v1.model.CORSConfig;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDg2Mg==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456250862", "bodyText": "add license header", "author": "emswbandara", "createdAt": "2020-07-17T06:46:52Z", "path": "components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.wso2.carbon.identity.api.server.configs.v1.function;", "originalCommit": "d3e3dc40473d6833bdbcb13ad76f248ea1b0ce77", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "26c01aaee8dd90b64e818bb3be64f84da9ea3990", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java\nindex 163126cc..2814aba1 100644\n--- a/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java\n+++ b/components/org.wso2.carbon.identity.api.server.configs/org.wso2.carbon.identity.api.server.configs.v1/src/main/java/org/wso2/carbon/identity/api/server/configs/v1/function/CORSOriginToCORSOriginGetObject.java\n\n@@ -1,3 +1,22 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * WSO2 Inc. licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except\n+ * in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n package org.wso2.carbon.identity.api.server.configs.v1.function;\n \n import org.wso2.carbon.identity.api.server.configs.v1.model.CORSOriginGetObject;\n"}}, {"oid": "26c01aaee8dd90b64e818bb3be64f84da9ea3990", "url": "https://github.com/wso2/identity-api-server/commit/26c01aaee8dd90b64e818bb3be64f84da9ea3990", "message": "Add CORS API for developers", "committedDate": "2020-07-17T09:43:14Z", "type": "forcePushed"}, {"oid": "e164d6e1af7c476ca265c9a7865d15a76e3ecd0f", "url": "https://github.com/wso2/identity-api-server/commit/e164d6e1af7c476ca265c9a7865d15a76e3ecd0f", "message": "Add CORS API for developers", "committedDate": "2020-07-17T09:45:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM0MDg4NQ==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r456340885", "bodyText": "better to use a multi-line comment here.", "author": "dewniMW", "createdAt": "2020-07-17T09:50:32Z", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -69,30 +95,39 @@ public static InboundAuthenticationRequestConfig putOAuthInbound(ServiceProvider\n                 String updatedClientId = appToUpdate.getOauthConsumerKey();\n                 return createInboundAuthRequestConfig(updatedClientId);\n             } else {\n+                // Create a new application.\n                 return createOAuthInbound(application.getApplicationName(), oidcConfigModel);\n             }\n \n-        } catch (IdentityOAuthAdminException e) {\n-            throw handleOAuthException(e);\n+        } catch (IdentityOAuthAdminException | CORSManagementServiceException e) {\n+            if (e instanceof IdentityOAuthAdminException) {\n+                // If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n+                // update has failed. Therefore rollback the update on CORS origins.", "originalCommit": "e164d6e1af7c476ca265c9a7865d15a76e3ecd0f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6296257581a3fd55170d7dd72fa53cd6552eaceb", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\nindex 1fd96779..7c979e8c 100644\n--- a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n+++ b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n\n@@ -101,8 +100,10 @@ public class OAuthInboundFunctions {\n \n         } catch (IdentityOAuthAdminException | CORSManagementServiceException e) {\n             if (e instanceof IdentityOAuthAdminException) {\n-                // If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n-                // update has failed. Therefore rollback the update on CORS origins.\n+                /*\n+                 If an IdentityOAuthAdminException exception is thrown after the CORS update, then the application\n+                 update has failed. Therefore rollback the update on CORS origins.\n+                */\n                 try {\n                     ApplicationManagementServiceHolder.getInstance()\n                             .getCorsManagementService().setApplicationCORSOrigins(tenantDomain,\n"}}, {"oid": "1d7dfe0dbe9fcbd799bf13ad17477b382e1c6f96", "url": "https://github.com/wso2/identity-api-server/commit/1d7dfe0dbe9fcbd799bf13ad17477b382e1c6f96", "message": "Add CORS API for developers", "committedDate": "2020-07-21T03:30:48Z", "type": "forcePushed"}, {"oid": "2f1a5a45bf9da858254873884fb5ae161b0ce68d", "url": "https://github.com/wso2/identity-api-server/commit/2f1a5a45bf9da858254873884fb5ae161b0ce68d", "message": "Add CORS API for developers", "committedDate": "2020-07-21T03:32:50Z", "type": "forcePushed"}, {"oid": "887d5381ad4103344b39698d583a468b657d208d", "url": "https://github.com/wso2/identity-api-server/commit/887d5381ad4103344b39698d583a468b657d208d", "message": "Add CORS API for developers", "committedDate": "2020-07-22T06:07:48Z", "type": "forcePushed"}, {"oid": "6296257581a3fd55170d7dd72fa53cd6552eaceb", "url": "https://github.com/wso2/identity-api-server/commit/6296257581a3fd55170d7dd72fa53cd6552eaceb", "message": "Add CORS API for developers", "committedDate": "2020-07-22T10:21:28Z", "type": "forcePushed"}, {"oid": "b039927ad66610df2a452f788a217d16ddd9a94f", "url": "https://github.com/wso2/identity-api-server/commit/b039927ad66610df2a452f788a217d16ddd9a94f", "message": "Add CORS API for developers", "committedDate": "2020-07-28T10:26:31Z", "type": "forcePushed"}, {"oid": "98e0dbe68bb162d51bfc33ee343a52efb5b990df", "url": "https://github.com/wso2/identity-api-server/commit/98e0dbe68bb162d51bfc33ee343a52efb5b990df", "message": "Add CORS API for developers", "committedDate": "2020-08-05T02:56:38Z", "type": "forcePushed"}, {"oid": "143eeb50f46c2a7da30f4b416e7573a11f6f61eb", "url": "https://github.com/wso2/identity-api-server/commit/143eeb50f46c2a7da30f4b416e7573a11f6f61eb", "message": "Add CORS API for developers", "committedDate": "2020-08-05T03:31:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MjUxOA==", "url": "https://github.com/wso2/identity-api-server/pull/188#discussion_r465662518", "bodyText": "Shall we add a constant for \"oauth2\"?", "author": "ashensw", "createdAt": "2020-08-05T11:34:30Z", "path": "components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java", "diffHunk": "@@ -131,22 +169,68 @@ public static OpenIDConnectConfiguration getOAuthConfiguration(InboundAuthentica\n             OAuthConsumerAppDTO oauthApp =\n                     ApplicationManagementServiceHolder.getInstance().getOAuthAdminService().getOAuthApplicationData\n                             (clientId);\n-            return new OAuthConsumerAppToApiModel().apply(oauthApp);\n \n-        } catch (IdentityOAuthAdminException e) {\n+            OpenIDConnectConfiguration openIDConnectConfiguration = new OAuthConsumerAppToApiModel().apply(oauthApp);\n+\n+            // Set CORS origins as allowed domains.\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            String applicationResourceId = ApplicationManagementServiceHolder.getInstance()\n+                    .getApplicationManagementService()\n+                    .getServiceProviderByClientId(clientId, \"oauth2\", tenantDomain).getApplicationResourceId();", "originalCommit": "143eeb50f46c2a7da30f4b416e7573a11f6f61eb", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "09b7b0a666c449bde5853aeec1bf7d1b07a319fb", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\nindex 110dc613..502e4b7a 100644\n--- a/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n+++ b/components/org.wso2.carbon.identity.api.server.application.management/org.wso2.carbon.identity.api.server.application.management.v1/src/main/java/org/wso2/carbon/identity/api/server/application/management/v1/core/functions/application/inbound/oauth2/OAuthInboundFunctions.java\n\n@@ -176,7 +176,7 @@ public class OAuthInboundFunctions {\n             String tenantDomain = ContextLoader.getTenantDomainFromContext();\n             String applicationResourceId = ApplicationManagementServiceHolder.getInstance()\n                     .getApplicationManagementService()\n-                    .getServiceProviderByClientId(clientId, \"oauth2\", tenantDomain).getApplicationResourceId();\n+                    .getServiceProviderByClientId(clientId, OAUTH2, tenantDomain).getApplicationResourceId();\n             List<CORSOrigin> corsOriginList = ApplicationManagementServiceHolder.getInstance()\n                     .getCorsManagementService().getApplicationCORSOrigins(applicationResourceId, tenantDomain);\n             openIDConnectConfiguration.setAllowedOrigins(corsOriginList.stream().map(CORSOrigin::getOrigin)\n"}}, {"oid": "09b7b0a666c449bde5853aeec1bf7d1b07a319fb", "url": "https://github.com/wso2/identity-api-server/commit/09b7b0a666c449bde5853aeec1bf7d1b07a319fb", "message": "Add CORS API for developers", "committedDate": "2020-08-05T17:06:11Z", "type": "forcePushed"}, {"oid": "45ece91274d72ad69c76df9fd45fa7c188c3567d", "url": "https://github.com/wso2/identity-api-server/commit/45ece91274d72ad69c76df9fd45fa7c188c3567d", "message": "Add CORS API for developers", "committedDate": "2020-08-06T14:41:19Z", "type": "commit"}, {"oid": "45ece91274d72ad69c76df9fd45fa7c188c3567d", "url": "https://github.com/wso2/identity-api-server/commit/45ece91274d72ad69c76df9fd45fa7c188c3567d", "message": "Add CORS API for developers", "committedDate": "2020-08-06T14:41:19Z", "type": "forcePushed"}]}