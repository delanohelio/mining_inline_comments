{"pr_number": 157, "pr_title": "Add provisioning method support", "pr_createdAt": "2020-04-29T07:28:56Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/157", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5Njk4Mg==", "url": "https://github.com/wso2/identity-api-server/pull/157#discussion_r417196982", "bodyText": "extract to a constant", "author": "IsuraD", "createdAt": "2020-04-29T09:54:07Z", "path": "components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java", "diffHunk": "@@ -196,6 +197,24 @@ private Tenant createTenantInfoBean(TenantModel tenantModel) throws TenantManage\n             tenant.setAdminFirstName(tenantModel.getOwners().get(0).getFirstname());\n             tenant.setAdminLastName(tenantModel.getOwners().get(0).getLastname());\n             tenant.setEmail(tenantModel.getOwners().get(0).getEmail());\n+            String provisioningMethod = tenantModel.getOwners().get(0).getProvisioningMethod();\n+            if (INLINE.equalsIgnoreCase(provisioningMethod) || \"invite-via-email\".", "originalCommit": "579e54e93e00cf54690e3707bc7b87094c28234c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb637e8ccef4b44a2958c689ef1fbc0c9d061400", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java b/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\nindex e3e11b11..c49ec1cc 100644\n--- a/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\n\n@@ -198,23 +198,17 @@ public class ServerTenantManagementService {\n             tenant.setAdminLastName(tenantModel.getOwners().get(0).getLastname());\n             tenant.setEmail(tenantModel.getOwners().get(0).getEmail());\n             String provisioningMethod = tenantModel.getOwners().get(0).getProvisioningMethod();\n-            if (INLINE.equalsIgnoreCase(provisioningMethod) || \"invite-via-email\".\n-                    equalsIgnoreCase(provisioningMethod)) {\n-                if (INLINE.equalsIgnoreCase(provisioningMethod)) {\n-                    String password = tenantModel.getOwners().get(0).getPassword();\n-                    if (StringUtils.isBlank(password)) {\n-                        throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n-                                ERROR_CODE_MISSING_REQUIRED_PARAMETER.getCode(),\n-                                String.format(TenantConstants.ErrorMessage.\n-                                        ERROR_CODE_MISSING_REQUIRED_PARAMETER.getMessage(), \"password\"));\n-                    }\n-                    tenant.setAdminPassword(password);\n+            if (INLINE.equalsIgnoreCase(provisioningMethod)) {\n+                String password = tenantModel.getOwners().get(0).getPassword();\n+                if (StringUtils.isBlank(password)) {\n+                    throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n+                            ERROR_CODE_MISSING_REQUIRED_PARAMETER.getCode(), String.format(TenantConstants.ErrorMessage.\n+                            ERROR_CODE_MISSING_REQUIRED_PARAMETER.getMessage(), \"password\"));\n                 }\n-                tenant.setProvisioningMethod(provisioningMethod);\n-            } else {\n-                throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n-                        ERROR_CODE_UNSUPPORTED_PROVISIONING_METHOD);\n+                tenant.setAdminPassword(password);\n             }\n+            tenant.setProvisioningMethod(provisioningMethod);\n+\n             List<AdditionalClaims> additionalClaimsList = tenantModel.getOwners().get(0).getAdditionalClaims();\n             if (CollectionUtils.isNotEmpty(additionalClaimsList)) {\n                 tenant.setClaimsMap(createClaimsMapping(additionalClaimsList));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5ODUyMQ==", "url": "https://github.com/wso2/identity-api-server/pull/157#discussion_r417198521", "bodyText": "provisioningMethod should be extensible. We better not limit to INLINE and invite-via-email. We don't need to check this and throw an error. we can write customizations based on the parameter value.", "author": "IsuraD", "createdAt": "2020-04-29T09:56:54Z", "path": "components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java", "diffHunk": "@@ -196,6 +197,24 @@ private Tenant createTenantInfoBean(TenantModel tenantModel) throws TenantManage\n             tenant.setAdminFirstName(tenantModel.getOwners().get(0).getFirstname());\n             tenant.setAdminLastName(tenantModel.getOwners().get(0).getLastname());\n             tenant.setEmail(tenantModel.getOwners().get(0).getEmail());\n+            String provisioningMethod = tenantModel.getOwners().get(0).getProvisioningMethod();\n+            if (INLINE.equalsIgnoreCase(provisioningMethod) || \"invite-via-email\".\n+                    equalsIgnoreCase(provisioningMethod)) {\n+                if (INLINE.equalsIgnoreCase(provisioningMethod)) {\n+                    String password = tenantModel.getOwners().get(0).getPassword();\n+                    if (StringUtils.isBlank(password)) {\n+                        throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n+                                ERROR_CODE_MISSING_REQUIRED_PARAMETER.getCode(),\n+                                String.format(TenantConstants.ErrorMessage.\n+                                        ERROR_CODE_MISSING_REQUIRED_PARAMETER.getMessage(), \"password\"));\n+                    }\n+                    tenant.setAdminPassword(password);\n+                }\n+                tenant.setProvisioningMethod(provisioningMethod);\n+            } else {\n+                throw new TenantManagementClientException(TenantConstants.ErrorMessage.", "originalCommit": "579e54e93e00cf54690e3707bc7b87094c28234c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "eb637e8ccef4b44a2958c689ef1fbc0c9d061400", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java b/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\nindex e3e11b11..c49ec1cc 100644\n--- a/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.tenant.management/org.wso2.carbon.identity.api.server.tenant.management.v1/src/main/java/org/wso2/carbon/identity/api/server/tenant/management/v1/core/ServerTenantManagementService.java\n\n@@ -198,23 +198,17 @@ public class ServerTenantManagementService {\n             tenant.setAdminLastName(tenantModel.getOwners().get(0).getLastname());\n             tenant.setEmail(tenantModel.getOwners().get(0).getEmail());\n             String provisioningMethod = tenantModel.getOwners().get(0).getProvisioningMethod();\n-            if (INLINE.equalsIgnoreCase(provisioningMethod) || \"invite-via-email\".\n-                    equalsIgnoreCase(provisioningMethod)) {\n-                if (INLINE.equalsIgnoreCase(provisioningMethod)) {\n-                    String password = tenantModel.getOwners().get(0).getPassword();\n-                    if (StringUtils.isBlank(password)) {\n-                        throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n-                                ERROR_CODE_MISSING_REQUIRED_PARAMETER.getCode(),\n-                                String.format(TenantConstants.ErrorMessage.\n-                                        ERROR_CODE_MISSING_REQUIRED_PARAMETER.getMessage(), \"password\"));\n-                    }\n-                    tenant.setAdminPassword(password);\n+            if (INLINE.equalsIgnoreCase(provisioningMethod)) {\n+                String password = tenantModel.getOwners().get(0).getPassword();\n+                if (StringUtils.isBlank(password)) {\n+                    throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n+                            ERROR_CODE_MISSING_REQUIRED_PARAMETER.getCode(), String.format(TenantConstants.ErrorMessage.\n+                            ERROR_CODE_MISSING_REQUIRED_PARAMETER.getMessage(), \"password\"));\n                 }\n-                tenant.setProvisioningMethod(provisioningMethod);\n-            } else {\n-                throw new TenantManagementClientException(TenantConstants.ErrorMessage.\n-                        ERROR_CODE_UNSUPPORTED_PROVISIONING_METHOD);\n+                tenant.setAdminPassword(password);\n             }\n+            tenant.setProvisioningMethod(provisioningMethod);\n+\n             List<AdditionalClaims> additionalClaimsList = tenantModel.getOwners().get(0).getAdditionalClaims();\n             if (CollectionUtils.isNotEmpty(additionalClaimsList)) {\n                 tenant.setClaimsMap(createClaimsMapping(additionalClaimsList));\n"}}, {"oid": "eb637e8ccef4b44a2958c689ef1fbc0c9d061400", "url": "https://github.com/wso2/identity-api-server/commit/eb637e8ccef4b44a2958c689ef1fbc0c9d061400", "message": "Add provisioning method support", "committedDate": "2020-04-30T05:18:10Z", "type": "forcePushed"}, {"oid": "6bc9752424cadb7745eebe8e74f44afce1518b69", "url": "https://github.com/wso2/identity-api-server/commit/6bc9752424cadb7745eebe8e74f44afce1518b69", "message": "Add provisioning method support", "committedDate": "2020-04-30T06:07:16Z", "type": "commit"}, {"oid": "6bc9752424cadb7745eebe8e74f44afce1518b69", "url": "https://github.com/wso2/identity-api-server/commit/6bc9752424cadb7745eebe8e74f44afce1518b69", "message": "Add provisioning method support", "committedDate": "2020-04-30T06:07:16Z", "type": "forcePushed"}, {"oid": "d8b96d5c70f45ef01855d31f9c6f40e388fbbb9d", "url": "https://github.com/wso2/identity-api-server/commit/d8b96d5c70f45ef01855d31f9c6f40e388fbbb9d", "message": "Change version", "committedDate": "2020-04-30T19:24:07Z", "type": "commit"}, {"oid": "d8b96d5c70f45ef01855d31f9c6f40e388fbbb9d", "url": "https://github.com/wso2/identity-api-server/commit/d8b96d5c70f45ef01855d31f9c6f40e388fbbb9d", "message": "Change version", "committedDate": "2020-04-30T19:24:07Z", "type": "forcePushed"}]}