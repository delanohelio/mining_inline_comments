{"pr_number": 84, "pr_title": "Add OIDC Scope REST API", "pr_createdAt": "2020-01-28T08:37:56Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/84", "timeline": [{"oid": "63dde05407dae8d4fb9cfecda37f071385e913fd", "url": "https://github.com/wso2/identity-api-server/commit/63dde05407dae8d4fb9cfecda37f071385e913fd", "message": "initial commit on oidc scope management rest apis", "committedDate": "2019-12-17T07:01:54Z", "type": "commit"}, {"oid": "ba6278fe05342b1e4ccb5e26f1d5d335e660d24a", "url": "https://github.com/wso2/identity-api-server/commit/ba6278fe05342b1e4ccb5e26f1d5d335e660d24a", "message": "adding common packages", "committedDate": "2019-12-18T06:41:40Z", "type": "commit"}, {"oid": "7eefa6177e886a6fa7bc30177dc24ff51719256a", "url": "https://github.com/wso2/identity-api-server/commit/7eefa6177e886a6fa7bc30177dc24ff51719256a", "message": "add OIDC scope rest endpoint implementation.", "committedDate": "2020-01-16T18:49:30Z", "type": "commit"}, {"oid": "51220dd39da5840ad7958cef8ffedf4299211c3c", "url": "https://github.com/wso2/identity-api-server/commit/51220dd39da5840ad7958cef8ffedf4299211c3c", "message": "add java doc comment.", "committedDate": "2020-01-17T08:08:24Z", "type": "commit"}, {"oid": "5dbc1a1442e000558915ce424ddce1063e0f83a5", "url": "https://github.com/wso2/identity-api-server/commit/5dbc1a1442e000558915ce424ddce1063e0f83a5", "message": "Fix the issue in claim defined in oidc-scope-management.yaml", "committedDate": "2020-01-24T09:58:46Z", "type": "commit"}, {"oid": "0e468949beaf6c0a464988312c0da7be349fa7cf", "url": "https://github.com/wso2/identity-api-server/commit/0e468949beaf6c0a464988312c0da7be349fa7cf", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into HEAD", "committedDate": "2020-01-29T04:01:49Z", "type": "commit"}, {"oid": "0e468949beaf6c0a464988312c0da7be349fa7cf", "url": "https://github.com/wso2/identity-api-server/commit/0e468949beaf6c0a464988312c0da7be349fa7cf", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into HEAD", "committedDate": "2020-01-29T04:01:49Z", "type": "forcePushed"}, {"oid": "ccb9b11c3365fc70c243ede2f69a6b17142adeca", "url": "https://github.com/wso2/identity-api-server/commit/ccb9b11c3365fc70c243ede2f69a6b17142adeca", "message": "update the oauth2 version", "committedDate": "2020-01-29T08:25:42Z", "type": "commit"}, {"oid": "626cbb9b0bb39154172c47edf650a1baa579f843", "url": "https://github.com/wso2/identity-api-server/commit/626cbb9b0bb39154172c47edf650a1baa579f843", "message": "Merge branch 'master' of https://github.com/wso2/identity-api-server into OIDC-Scope-Mgt-2020", "committedDate": "2020-01-29T08:27:13Z", "type": "commit"}, {"oid": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "url": "https://github.com/wso2/identity-api-server/commit/71c90f110fd64f1ecaeca46c540ba87e127b112d", "message": "update pom version", "committedDate": "2020-01-29T08:33:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2MjI5Mg==", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372262292", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ERROR_CONFLICT_REQUEST(\"41004\", \"Scope is already exists.\");\n          \n          \n            \n                    ERROR_CONFLICT_REQUEST(\"41004\", \"Scope already exists.\");", "author": "madurangasiriwardena", "createdAt": "2020-01-29T09:08:43Z", "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.common;\n+\n+/**\n+ * Contains all the OIDC Scope Management Service related constants.\n+ */\n+public class OidcScopeConstants {\n+\n+    public static final String OIDC_SCOPE_API_PATH_COMPONENT = \"/oidc/scopes\";\n+    public static final String PATH_SEPERATOR = \"/\";\n+\n+    /**\n+     * Enum for OIDC scope management service related errors.\n+     */\n+    public enum ErrorMessage {\n+\n+        INVALID_REQUEST(\"60001\", \"Invalid Request.\"),\n+        ERROR_CONFLICT_REQUEST(\"41004\", \"Scope is already exists.\");", "originalCommit": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\nindex 01724e06..364bbe60 100644\n--- a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\n+++ b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.wso2.carbon.identity.api.server.oidc.scope.management.common;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NjU3OQ==", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372266579", "bodyText": "License", "author": "madurangasiriwardena", "createdAt": "2020-01-29T09:18:18Z", "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.common;", "originalCommit": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\nindex 01724e06..364bbe60 100644\n--- a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\n+++ b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.common/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/common/OidcScopeConstants.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.wso2.carbon.identity.api.server.oidc.scope.management.common;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NzgxOQ==", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372267819", "bodyText": "License", "author": "madurangasiriwardena", "createdAt": "2020-01-29T09:21:03Z", "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;", "originalCommit": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\nindex ae305418..6a06419c 100644\n--- a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n \n import org.apache.commons.logging.Log;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2ODY2NA==", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372268664", "bodyText": "Unnecessary new line", "author": "madurangasiriwardena", "createdAt": "2020-01-29T09:22:44Z", "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.common.OidcScopeConstants;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.Scope;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.ScopeUpdateRequest;\n+import org.wso2.carbon.identity.oauth.IdentityOAuthAdminException;\n+import org.wso2.carbon.identity.oauth.dto.ScopeDTO;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import static org.wso2.carbon.identity.api.server.oidc.scope.management.common.OIDCScopeManagementServiceHolder.getOAuthAdminService;\n+\n+/**\n+ * OIDC scope management APIs are processed in this class.\n+ */\n+public class OidcScopeManagementService {\n+\n+    private static final Log LOG = LogFactory.getLog(OidcScopeManagementService.class);\n+\n+    /**\n+     * Add an OIDC scope.\n+     *\n+     * @param scopeObject Scope.\n+     * @return Return location URI of created scope.\n+     */\n+    public String addScope(Scope scopeObject) {\n+\n+        try {\n+            List<String> claimList = scopeObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(scopeObject.getName(), scopeObject.getDisplayName(),\n+                    scopeObject.getDescription(), claimArray);\n+            getOAuthAdminService().addScope(scopeDTO);\n+            return scopeDTO.getName();\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while adding OIDC scope: \" + scopeObject.getName());\n+        }\n+    }\n+\n+    /**\n+     * Delete an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     */\n+    public void deleteScope(String id) {\n+\n+        try {\n+            getOAuthAdminService().deleteScope(id);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while deleting OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Get an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     * @return Return scope details.\n+     */\n+    public Scope getScope(String id) {\n+\n+        try {\n+            ScopeDTO scopeDTO = getOAuthAdminService().getScope(id);\n+            return convertScopeDTOObjectToScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while retrieving OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * List all available OIDC scopes.\n+     *\n+     * @return List of scopes.\n+     */\n+    public List<Scope> getScopes() {\n+\n+        try {\n+            ScopeDTO[] scopes = getOAuthAdminService().getScopes();\n+            return buildScopeList(scopes);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while listing OIDC scopes.\");\n+        }\n+\n+    }\n+\n+    /**\n+     * Update an existing scope.\n+     *\n+     * @param id                Scope name.\n+     * @param scopeUpdateObject Updated scope object.\n+     */\n+    public void updateScope(String id, ScopeUpdateRequest scopeUpdateObject) {\n+\n+        try {\n+            List<String> claimList = scopeUpdateObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(id, scopeUpdateObject.getDisplayName(),\n+                    scopeUpdateObject.getDescription(), claimArray);\n+            getOAuthAdminService().updateScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while updating OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Build scope list.\n+     *\n+     * @param scopeDTOS ScopeDTOs.\n+     * @return Return list of scope.\n+     */\n+    private List<Scope> buildScopeList(ScopeDTO[] scopeDTOS) {\n+\n+        List<Scope> scopeList = new ArrayList<>();\n+\n+        for (int i = 0; i < scopeDTOS.length; i++) {\n+            scopeList.add(convertScopeDTOObjectToScope(scopeDTOS[i]));\n+        }\n+        return scopeList;\n+", "originalCommit": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\nindex ae305418..6a06419c 100644\n--- a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n \n import org.apache.commons.logging.Log;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2ODc5MA==", "url": "https://github.com/wso2/identity-api-server/pull/84#discussion_r372268790", "bodyText": "Unnecessary new line", "author": "madurangasiriwardena", "createdAt": "2020-01-29T09:22:58Z", "path": "components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java", "diffHunk": "@@ -0,0 +1,169 @@\n+package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.common.OidcScopeConstants;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.Scope;\n+import org.wso2.carbon.identity.api.server.oidc.scope.management.v1.model.ScopeUpdateRequest;\n+import org.wso2.carbon.identity.oauth.IdentityOAuthAdminException;\n+import org.wso2.carbon.identity.oauth.dto.ScopeDTO;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.ws.rs.core.Response;\n+\n+import static org.wso2.carbon.identity.api.server.oidc.scope.management.common.OIDCScopeManagementServiceHolder.getOAuthAdminService;\n+\n+/**\n+ * OIDC scope management APIs are processed in this class.\n+ */\n+public class OidcScopeManagementService {\n+\n+    private static final Log LOG = LogFactory.getLog(OidcScopeManagementService.class);\n+\n+    /**\n+     * Add an OIDC scope.\n+     *\n+     * @param scopeObject Scope.\n+     * @return Return location URI of created scope.\n+     */\n+    public String addScope(Scope scopeObject) {\n+\n+        try {\n+            List<String> claimList = scopeObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(scopeObject.getName(), scopeObject.getDisplayName(),\n+                    scopeObject.getDescription(), claimArray);\n+            getOAuthAdminService().addScope(scopeDTO);\n+            return scopeDTO.getName();\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while adding OIDC scope: \" + scopeObject.getName());\n+        }\n+    }\n+\n+    /**\n+     * Delete an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     */\n+    public void deleteScope(String id) {\n+\n+        try {\n+            getOAuthAdminService().deleteScope(id);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while deleting OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Get an OIDC scope.\n+     *\n+     * @param id Scope name.\n+     * @return Return scope details.\n+     */\n+    public Scope getScope(String id) {\n+\n+        try {\n+            ScopeDTO scopeDTO = getOAuthAdminService().getScope(id);\n+            return convertScopeDTOObjectToScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while retrieving OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * List all available OIDC scopes.\n+     *\n+     * @return List of scopes.\n+     */\n+    public List<Scope> getScopes() {\n+\n+        try {\n+            ScopeDTO[] scopes = getOAuthAdminService().getScopes();\n+            return buildScopeList(scopes);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while listing OIDC scopes.\");\n+        }\n+\n+    }\n+\n+    /**\n+     * Update an existing scope.\n+     *\n+     * @param id                Scope name.\n+     * @param scopeUpdateObject Updated scope object.\n+     */\n+    public void updateScope(String id, ScopeUpdateRequest scopeUpdateObject) {\n+\n+        try {\n+            List<String> claimList = scopeUpdateObject.getClaims();\n+            String[] claimArray = claimList.toArray(new String[claimList.size()]);\n+            ScopeDTO scopeDTO = new ScopeDTO(id, scopeUpdateObject.getDisplayName(),\n+                    scopeUpdateObject.getDescription(), claimArray);\n+            getOAuthAdminService().updateScope(scopeDTO);\n+        } catch (IdentityOAuthAdminException e) {\n+            throw handleException(e, \"Server encountered an error while updating OIDC scope: \" + id);\n+        }\n+    }\n+\n+    /**\n+     * Build scope list.\n+     *\n+     * @param scopeDTOS ScopeDTOs.\n+     * @return Return list of scope.\n+     */\n+    private List<Scope> buildScopeList(ScopeDTO[] scopeDTOS) {\n+\n+        List<Scope> scopeList = new ArrayList<>();\n+\n+        for (int i = 0; i < scopeDTOS.length; i++) {\n+            scopeList.add(convertScopeDTOObjectToScope(scopeDTOS[i]));\n+        }\n+        return scopeList;\n+\n+    }\n+\n+    /**\n+     * Convert ScopeDTO to Scope object.\n+     *\n+     * @param scopeDTO ScopeDTO.\n+     * @return Converted Scope.\n+     */\n+    private Scope convertScopeDTOObjectToScope(ScopeDTO scopeDTO) {\n+\n+        Scope scope = new Scope();\n+        scope.setName(scopeDTO.getName());\n+        scope.setDisplayName(scopeDTO.getDisplayName());\n+        scope.setDescription(scopeDTO.getDescription());\n+        scope.setClaims(Arrays.asList(scopeDTO.getClaim()));\n+        return scope;\n+", "originalCommit": "71c90f110fd64f1ecaeca46c540ba87e127b112d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\nindex ae305418..6a06419c 100644\n--- a/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n+++ b/components/org.wso2.carbon.identity.api.server.oidc.scope.management/org.wso2.carbon.identity.api.server.oidc.scope.management.v1/src/main/java/org/wso2/carbon/identity/api/server/oidc/scope/management/v1/core/OidcScopeManagementService.java\n\n@@ -1,3 +1,18 @@\n+/*\n+ * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.wso2.carbon.identity.api.server.oidc.scope.management.v1.core;\n \n import org.apache.commons.logging.Log;\n"}}, {"oid": "6db02db9624629ea5eaae766d84ff5c742e5cf51", "url": "https://github.com/wso2/identity-api-server/commit/6db02db9624629ea5eaae766d84ff5c742e5cf51", "message": "Fix licenses issues", "committedDate": "2020-01-29T15:09:48Z", "type": "commit"}]}