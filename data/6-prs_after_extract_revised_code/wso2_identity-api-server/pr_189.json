{"pr_number": 189, "pr_title": "Implement a REST API for CORS origin management", "pr_createdAt": "2020-07-23T05:32:50Z", "pr_url": "https://github.com/wso2/identity-api-server/pull/189", "timeline": [{"oid": "7312dbd31f0cc580bcda504085b977440cac7311", "url": "https://github.com/wso2/identity-api-server/commit/7312dbd31f0cc580bcda504085b977440cac7311", "message": "Add CORS API", "committedDate": "2020-07-23T05:35:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNTU3MQ==", "url": "https://github.com/wso2/identity-api-server/pull/189#discussion_r459225571", "bodyText": "shall we validate whether corsOriginId exists in the beginning and return 404 if not?", "author": "emswbandara", "createdAt": "2020-07-23T05:45:20Z", "path": "components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java", "diffHunk": "@@ -0,0 +1,229 @@\n+/*\n+ * Copyright\u00a0(c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * you may not use this file except in compliance with the License. \u00a0 \u00a0 \u00a0 \u00a0\n+ * You may obtain a copy of the License at \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * http://www.apache.org/licenses/LICENSE-2.0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Unless required by applicable law or agreed to in writing, software \u00a0 \u00a0\u00a0\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \u00a0 \u00a0 \u00a0\u00a0\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and \u00a0 \u00a0\u00a0\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.carbon.identity.api.server.cors.v1.core;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.ContextLoader;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n+import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceClientException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceServerException;\n+import org.wso2.carbon.identity.cors.mgt.core.model.CORSOrigin;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * Call internal OSGi services to perform server CORS management.\n+ */\n+public class CORSService {\n+\n+    private static final Log log = LogFactory.getLog(CORSService.class);\n+\n+    /**\n+     * Get a list of associated applications of a CORS origin.\n+     *\n+     * @return List of associated applications.\n+     */\n+    public List<String> getAssociatedAppsByCORSOrigin(String corsOriginId) {\n+\n+        try {", "originalCommit": "7312dbd31f0cc580bcda504085b977440cac7311", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTkwMTU2Mg==", "url": "https://github.com/wso2/identity-api-server/pull/189#discussion_r461901562", "bodyText": "This is validated at the osgi service.", "author": "ivantha", "createdAt": "2020-07-28T21:47:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNTU3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "783f5614415831ab258db0cbe889617931341957", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\nindex dae1b630..3a22774e 100644\n--- a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n+++ b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n\n@@ -25,7 +25,9 @@ import org.wso2.carbon.identity.api.server.common.error.APIError;\n import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.ApplicationToCORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNTgwOA==", "url": "https://github.com/wso2/identity-api-server/pull/189#discussion_r459225808", "bodyText": "let's add debug log here", "author": "emswbandara", "createdAt": "2020-07-23T05:46:25Z", "path": "components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java", "diffHunk": "@@ -0,0 +1,229 @@\n+/*\n+ * Copyright\u00a0(c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * you may not use this file except in compliance with the License. \u00a0 \u00a0 \u00a0 \u00a0\n+ * You may obtain a copy of the License at \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * http://www.apache.org/licenses/LICENSE-2.0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Unless required by applicable law or agreed to in writing, software \u00a0 \u00a0\u00a0\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \u00a0 \u00a0 \u00a0\u00a0\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and \u00a0 \u00a0\u00a0\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.carbon.identity.api.server.cors.v1.core;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.ContextLoader;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n+import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceClientException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceServerException;\n+import org.wso2.carbon.identity.cors.mgt.core.model.CORSOrigin;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * Call internal OSGi services to perform server CORS management.\n+ */\n+public class CORSService {\n+\n+    private static final Log log = LogFactory.getLog(CORSService.class);\n+\n+    /**\n+     * Get a list of associated applications of a CORS origin.\n+     *\n+     * @return List of associated applications.\n+     */\n+    public List<String> getAssociatedAppsByCORSOrigin(String corsOriginId) {\n+\n+        try {\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            List<CORSOrigin> corsOriginList = CORSServiceHolder.getInstance().getCorsManagementService()\n+                    .getTenantCORSOrigins(tenantDomain);\n+            List<String> associatedApps = new ArrayList<>();\n+            for (CORSOrigin corsOrigin : corsOriginList) {\n+                if (corsOrigin.getId().equals(corsOriginId)) {\n+                    associatedApps.addAll(corsOrigin.getAppIds());\n+                }\n+            }\n+            return associatedApps;\n+        } catch (CORSManagementServiceException e) {\n+            throw handleCORSException(e, Constants.ErrorMessage.ERROR_CODE_CORS_RETRIEVE, null);\n+        }\n+    }\n+\n+    /**\n+     * Get a list of CORS origins allowed by the tenant.\n+     *\n+     * @return List of CORSOriginGetObject.\n+     */\n+    public List<CORSOriginGetObject> getCORSOrigins() {\n+\n+        try {\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            List<CORSOrigin> corsOriginList = CORSServiceHolder.getInstance().getCorsManagementService()\n+                    .getTenantCORSOrigins(tenantDomain);\n+            return corsOriginList.stream().map(new CORSOriginToCORSOriginGetObject()).collect(Collectors.toList());\n+        } catch (CORSManagementServiceException e) {\n+            throw handleCORSException(e, Constants.ErrorMessage.ERROR_CODE_CORS_RETRIEVE, null);\n+        }\n+    }\n+\n+    /**\n+     * Patch CORS origins. Patch 'REPLACE', 'ADD', 'REMOVE' operations have been supported for primary attributes in\n+     * CORSOrigin model.\n+     *\n+     * @param patchRequest Patch request in Json Patch notation See\n+     *                     <a href=\"https://tools.ietf.org/html/rfc6902\">https://tools.ietf\n+     *                     .org/html/rfc6902</a>.\n+     */\n+    public void patchCORSOrigins(List<CORSOriginPatch> patchRequest) {\n+\n+        if (CollectionUtils.isEmpty(patchRequest)) {\n+            return;", "originalCommit": "7312dbd31f0cc580bcda504085b977440cac7311", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "783f5614415831ab258db0cbe889617931341957", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\nindex dae1b630..3a22774e 100644\n--- a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n+++ b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n\n@@ -25,7 +25,9 @@ import org.wso2.carbon.identity.api.server.common.error.APIError;\n import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.ApplicationToCORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1MzY3OA==", "url": "https://github.com/wso2/identity-api-server/pull/189#discussion_r459253678", "bodyText": "Any possibility of corsOrigin.getId() being null? If so StringUtils.equals() can be used to avoid the possible NPE.", "author": "ashensw", "createdAt": "2020-07-23T07:10:19Z", "path": "components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java", "diffHunk": "@@ -0,0 +1,229 @@\n+/*\n+ * Copyright\u00a0(c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * you may not use this file except in compliance with the License. \u00a0 \u00a0 \u00a0 \u00a0\n+ * You may obtain a copy of the License at \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * http://www.apache.org/licenses/LICENSE-2.0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n+ * \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\n+ * Unless required by applicable law or agreed to in writing, software \u00a0 \u00a0\u00a0\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, \u00a0 \u00a0 \u00a0\u00a0\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and \u00a0 \u00a0\u00a0\n+ * limitations under the License.\n+ */\n+\n+package org.wso2.carbon.identity.api.server.cors.v1.core;\n+\n+import org.apache.commons.collections.CollectionUtils;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.wso2.carbon.identity.api.server.common.ContextLoader;\n+import org.wso2.carbon.identity.api.server.common.error.APIError;\n+import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n+import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n+import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceClientException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceException;\n+import org.wso2.carbon.identity.cors.mgt.core.exception.CORSManagementServiceServerException;\n+import org.wso2.carbon.identity.cors.mgt.core.model.CORSOrigin;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.ws.rs.core.Response;\n+\n+/**\n+ * Call internal OSGi services to perform server CORS management.\n+ */\n+public class CORSService {\n+\n+    private static final Log log = LogFactory.getLog(CORSService.class);\n+\n+    /**\n+     * Get a list of associated applications of a CORS origin.\n+     *\n+     * @return List of associated applications.\n+     */\n+    public List<String> getAssociatedAppsByCORSOrigin(String corsOriginId) {\n+\n+        try {\n+            String tenantDomain = ContextLoader.getTenantDomainFromContext();\n+            List<CORSOrigin> corsOriginList = CORSServiceHolder.getInstance().getCorsManagementService()\n+                    .getTenantCORSOrigins(tenantDomain);\n+            List<String> associatedApps = new ArrayList<>();\n+            for (CORSOrigin corsOrigin : corsOriginList) {\n+                if (corsOrigin.getId().equals(corsOriginId)) {", "originalCommit": "7312dbd31f0cc580bcda504085b977440cac7311", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "783f5614415831ab258db0cbe889617931341957", "chunk": "diff --git a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\nindex dae1b630..3a22774e 100644\n--- a/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n+++ b/components/org.wso2.carbon.identity.api.server.cors/org.wso2.carbon.identity.api.server.cors.v1/src/main/java/org/wso2/carbon/identity/api/server/cors/v1/core/CORSService.java\n\n@@ -25,7 +25,9 @@ import org.wso2.carbon.identity.api.server.common.error.APIError;\n import org.wso2.carbon.identity.api.server.common.error.ErrorResponse;\n import org.wso2.carbon.identity.api.server.cors.common.CORSServiceHolder;\n import org.wso2.carbon.identity.api.server.cors.common.Constants;\n+import org.wso2.carbon.identity.api.server.cors.v1.function.ApplicationToCORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.function.CORSOriginToCORSOriginGetObject;\n+import org.wso2.carbon.identity.api.server.cors.v1.model.CORSApplication;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginGetObject;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatch;\n import org.wso2.carbon.identity.api.server.cors.v1.model.CORSOriginPatchObject;\n"}}, {"oid": "783f5614415831ab258db0cbe889617931341957", "url": "https://github.com/wso2/identity-api-server/commit/783f5614415831ab258db0cbe889617931341957", "message": "Add CORS API", "committedDate": "2020-07-28T02:55:42Z", "type": "forcePushed"}, {"oid": "f874a426432e04f9956f9a19214dae2e3a2e75e6", "url": "https://github.com/wso2/identity-api-server/commit/f874a426432e04f9956f9a19214dae2e3a2e75e6", "message": "Add CORS API", "committedDate": "2020-07-28T21:58:18Z", "type": "forcePushed"}, {"oid": "db3d3f2b6c6aebc85c3fe6e59cbea6dc46e0860f", "url": "https://github.com/wso2/identity-api-server/commit/db3d3f2b6c6aebc85c3fe6e59cbea6dc46e0860f", "message": "Add CORS API", "committedDate": "2020-07-30T04:17:28Z", "type": "forcePushed"}, {"oid": "2ab206bbf74d9a4b67c266777407944d0f65cf43", "url": "https://github.com/wso2/identity-api-server/commit/2ab206bbf74d9a4b67c266777407944d0f65cf43", "message": "Add CORS API", "committedDate": "2020-08-05T03:09:34Z", "type": "forcePushed"}, {"oid": "595bb6460f4f0bc24ece3b8d758c4153ec4c08f5", "url": "https://github.com/wso2/identity-api-server/commit/595bb6460f4f0bc24ece3b8d758c4153ec4c08f5", "message": "Add CORS API", "committedDate": "2020-08-05T12:03:22Z", "type": "forcePushed"}, {"oid": "af9be0a8a14603426b6bed8b5025dc15c7e1ae28", "url": "https://github.com/wso2/identity-api-server/commit/af9be0a8a14603426b6bed8b5025dc15c7e1ae28", "message": "Add CORS API", "committedDate": "2020-08-06T14:43:06Z", "type": "commit"}, {"oid": "af9be0a8a14603426b6bed8b5025dc15c7e1ae28", "url": "https://github.com/wso2/identity-api-server/commit/af9be0a8a14603426b6bed8b5025dc15c7e1ae28", "message": "Add CORS API", "committedDate": "2020-08-06T14:43:06Z", "type": "forcePushed"}]}