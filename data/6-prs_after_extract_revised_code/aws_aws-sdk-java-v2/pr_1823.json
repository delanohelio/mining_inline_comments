{"pr_number": 1823, "pr_title": "Support event streams that are shared between two operations.", "pr_createdAt": "2020-05-07T21:05:28Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1823", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r423979031", "bodyText": "Formatting seems off. Did the generator do this? Does this compile?", "author": "millems", "createdAt": "2020-05-12T19:26:28Z", "path": "codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/sharedstream/person.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.sharedeventstream.model;\n+\n+import java.io.Serializable;\n+import java.time.Instant;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.BiConsumer;\n+import java.util.function.Function;\n+import software.amazon.awssdk.annotations.Generated;\n+import software.amazon.awssdk.core.SdkField;\n+import software.amazon.awssdk.core.SdkPojo;\n+import software.amazon.awssdk.core.protocol.MarshallLocation;\n+import software.amazon.awssdk.core.protocol.MarshallingType;\n+import software.amazon.awssdk.core.traits.LocationTrait;\n+import software.amazon.awssdk.utils.ToString;\n+import software.amazon.awssdk.utils.builder.CopyableBuilder;\n+import software.amazon.awssdk.utils.builder.ToCopyableBuilder;\n+\n+/**\n+ */\n+@Generated(\"software.amazon.awssdk:codegen\")\n+public final class Person implements SdkPojo, Serializable, ToCopyableBuilder<Person.Builder, Person>, EventStream {\n+  private static final SdkField<String> NAME_FIELD = SdkField.<String>builder(MarshallingType.STRING)\n+  .getter(getter(Person::name))\n+  .setter(setter(Builder::name))\n+  .traits(LocationTrait.builder()\n+  .location(MarshallLocation.PAYLOAD)\n+  .locationName(\"Name\")\n+  .build()).build();\n+\n+  private static final SdkField<Instant> BIRTHDAY_FIELD = SdkField.<Instant>builder(MarshallingType.INSTANT)\n+  .getter(getter(Person::birthday))\n+  .setter(setter(Builder::birthday))\n+  .traits(LocationTrait.builder()\n+  .location(MarshallLocation.PAYLOAD)\n+  .locationName(\"Birthday\")\n+  .build()).build();\n+\n+  private static final List<SdkField<?>> SDK_FIELDS = Collections.unmodifiableList(Arrays.asList(NAME_FIELD,BIRTHDAY_FIELD));\n+\n+  private static final long serialVersionUID = 1L;\n+\n+  private final String name;\n+\n+  private final Instant birthday;\n+\n+  private Person(BuilderImpl builder) {\n+    this.name = builder.name;\n+    this.birthday = builder.birthday;\n+  }\n+\n+  /**\n+   * Returns the value of the Name property for this object.\n+   * @return The value of the Name property for this object. */\n+  public String name() {\n+    return name;}", "originalCommit": "ac6749d987eb94d506c21bcd8ed5903d92c81526", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1MTI1Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r424051256", "bodyText": "Yeah, I just copy and pasted the output from the generator and reviewed it to make sure it generated the methods I wanted.  IDEA only complains about missing types when I move it into a source root.  (the test doesn't generate all of the response handlers and stuff, which is why it complains)", "author": "adamthom-amzn", "createdAt": "2020-05-12T21:43:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NTc5Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r424055792", "bodyText": "Can we run a quick formatter on it? The comparison doesn't care about whitespace, I don't think.", "author": "millems", "createdAt": "2020-05-12T21:53:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1ODExOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r424058118", "bodyText": "Ran IDEA's formatter on all of the newly added generated classes.", "author": "adamthom-amzn", "createdAt": "2020-05-12T21:58:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1OTIzMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r424059233", "bodyText": "And broke the tests.  Don't merge this yet.", "author": "adamthom-amzn", "createdAt": "2020-05-12T22:00:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2MDMwMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1823#discussion_r424060301", "bodyText": "IDEA changed\n/*\n */\n\nto\n/*\n *\n */\n\nwhich, of course, is not whitespace-only.  I pushed an update, should be good as soon as the automated tests don't call me a liar.", "author": "adamthom-amzn", "createdAt": "2020-05-12T22:03:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3OTAzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "d85bb0c8fafe38fd7936ef29586501d11910007c", "chunk": "diff --git a/codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/sharedstream/person.java b/codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/sharedstream/person.java\nindex 985f8431b0..57d1222189 100644\n--- a/codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/sharedstream/person.java\n+++ b/codegen/src/test/resources/software/amazon/awssdk/codegen/poet/model/sharedstream/person.java\n\n@@ -35,200 +35,217 @@ import software.amazon.awssdk.utils.builder.CopyableBuilder;\n import software.amazon.awssdk.utils.builder.ToCopyableBuilder;\n \n /**\n+ *\n  */\n @Generated(\"software.amazon.awssdk:codegen\")\n public final class Person implements SdkPojo, Serializable, ToCopyableBuilder<Person.Builder, Person>, EventStream {\n-  private static final SdkField<String> NAME_FIELD = SdkField.<String>builder(MarshallingType.STRING)\n-  .getter(getter(Person::name))\n-  .setter(setter(Builder::name))\n-  .traits(LocationTrait.builder()\n-  .location(MarshallLocation.PAYLOAD)\n-  .locationName(\"Name\")\n-  .build()).build();\n-\n-  private static final SdkField<Instant> BIRTHDAY_FIELD = SdkField.<Instant>builder(MarshallingType.INSTANT)\n-  .getter(getter(Person::birthday))\n-  .setter(setter(Builder::birthday))\n-  .traits(LocationTrait.builder()\n-  .location(MarshallLocation.PAYLOAD)\n-  .locationName(\"Birthday\")\n-  .build()).build();\n-\n-  private static final List<SdkField<?>> SDK_FIELDS = Collections.unmodifiableList(Arrays.asList(NAME_FIELD,BIRTHDAY_FIELD));\n-\n-  private static final long serialVersionUID = 1L;\n-\n-  private final String name;\n-\n-  private final Instant birthday;\n-\n-  private Person(BuilderImpl builder) {\n-    this.name = builder.name;\n-    this.birthday = builder.birthday;\n-  }\n-\n-  /**\n-   * Returns the value of the Name property for this object.\n-   * @return The value of the Name property for this object. */\n-  public String name() {\n-    return name;}\n-\n-  /**\n-   * Returns the value of the Birthday property for this object.\n-   * @return The value of the Birthday property for this object. */\n-  public Instant birthday() {\n-    return birthday;}\n-\n-  @Override\n-  public Builder toBuilder() {\n-    return new BuilderImpl(this);\n-  }\n-\n-  public static Builder builder() {\n-    return new BuilderImpl();\n-  }\n-\n-  public static Class<? extends Builder> serializableBuilderClass() {\n-    return BuilderImpl.class;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    int hashCode = 1;\n-    hashCode = 31 * hashCode + Objects.hashCode(name());\n-    hashCode = 31 * hashCode + Objects.hashCode(birthday());\n-    return hashCode;\n-  }\n-\n-  @Override\n-  public boolean equals(Object obj) {\n-    return equalsBySdkFields(obj);}\n-\n-  @Override\n-  public boolean equalsBySdkFields(Object obj) {\n-    if (this == obj) {\n-      return true;\n-    }\n-    if (obj == null) {\n-      return false;\n-    }\n-    if (!(obj instanceof Person)) {\n-      return false;\n-    }\n-    Person other = (Person) obj;\n-    return Objects.equals(name(), other.name())&&Objects.equals(birthday(), other.birthday());}\n-\n-  /**\n-   * Returns a string representation of this object. This is useful for testing and debugging. Sensitive data will be redacted from this string using a placeholder value.  */\n-  @Override\n-  public String toString() {\n-    return ToString.builder(\"Person\").add(\"Name\", name()).add(\"Birthday\", birthday()).build();}\n-\n-  public <T> Optional<T> getValueForField(String fieldName, Class<T> clazz) {\n-    switch (fieldName) {\n-      case \"Name\":return Optional.ofNullable(clazz.cast(name()));\n-      case \"Birthday\":return Optional.ofNullable(clazz.cast(birthday()));\n-      default:return Optional.empty();\n-    }\n-  }\n-\n-  @Override\n-  public List<SdkField<?>> sdkFields() {\n-    return SDK_FIELDS;}\n-\n-  private static <T> Function<Object, T> getter(Function<Person, T> g) {\n-    return obj -> g.apply((Person) obj);\n-  }\n-\n-  private static <T> BiConsumer<Object, T> setter(BiConsumer<Builder, T> s) {\n-    return (obj, val) -> s.accept((Builder) obj, val);\n-  }\n-\n-  /**\n-   * Calls the appropriate visit method depending on the subtype of {@link Person}.\n-   *\n-   * @param visitor Visitor to invoke.\n-   */\n-  @Override\n-  public void accept(StreamBirthsResponseHandler.Visitor visitor) {\n-    visitor.visit(this);\n-  }\n-\n-  /**\n-   * Calls the appropriate visit method depending on the subtype of {@link Person}.\n-   *\n-   * @param visitor\n-   *        Visitor to invoke.\n-   */\n-  @Override\n-  public void accept(StreamDeathsResponseHandler.Visitor visitor) {\n-    visitor.visit(this);\n-  }\n-\n-  public interface Builder extends SdkPojo, CopyableBuilder<Builder, Person> {\n+    private static final SdkField<String> NAME_FIELD = SdkField.<String>builder(MarshallingType.STRING)\n+        .getter(getter(Person::name))\n+        .setter(setter(Builder::name))\n+        .traits(LocationTrait.builder()\n+                             .location(MarshallLocation.PAYLOAD)\n+                             .locationName(\"Name\")\n+                             .build()).build();\n+\n+    private static final SdkField<Instant> BIRTHDAY_FIELD = SdkField.<Instant>builder(MarshallingType.INSTANT)\n+        .getter(getter(Person::birthday))\n+        .setter(setter(Builder::birthday))\n+        .traits(LocationTrait.builder()\n+                             .location(MarshallLocation.PAYLOAD)\n+                             .locationName(\"Birthday\")\n+                             .build()).build();\n+\n+    private static final List<SdkField<?>> SDK_FIELDS = Collections.unmodifiableList(Arrays.asList(NAME_FIELD, BIRTHDAY_FIELD));\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final String name;\n+\n+    private final Instant birthday;\n+\n+    private Person(BuilderImpl builder) {\n+        this.name = builder.name;\n+        this.birthday = builder.birthday;\n+    }\n+\n     /**\n-     * Sets the value of the Name property for this object.\n+     * Returns the value of the Name property for this object.\n      *\n-     * @param name The new value for the Name property for this object.\n-     * @return Returns a reference to this object so that method calls can be chained together. */\n-    Builder name(String name);\n+     * @return The value of the Name property for this object.\n+     */\n+    public String name() {\n+        return name;\n+    }\n \n     /**\n-     * Sets the value of the Birthday property for this object.\n+     * Returns the value of the Birthday property for this object.\n      *\n-     * @param birthday The new value for the Birthday property for this object.\n-     * @return Returns a reference to this object so that method calls can be chained together. */\n-    Builder birthday(Instant birthday);\n-  }\n+     * @return The value of the Birthday property for this object.\n+     */\n+    public Instant birthday() {\n+        return birthday;\n+    }\n \n-  static final class BuilderImpl implements Builder {\n-    private String name;\n+    @Override\n+    public Builder toBuilder() {\n+        return new BuilderImpl(this);\n+    }\n \n-    private Instant birthday;\n+    public static Builder builder() {\n+        return new BuilderImpl();\n+    }\n \n-    private BuilderImpl() {\n+    public static Class<? extends Builder> serializableBuilderClass() {\n+        return BuilderImpl.class;\n     }\n \n-    private BuilderImpl(Person model) {\n-      name(model.name);\n-      birthday(model.birthday);\n+    @Override\n+    public int hashCode() {\n+        int hashCode = 1;\n+        hashCode = 31 * hashCode + Objects.hashCode(name());\n+        hashCode = 31 * hashCode + Objects.hashCode(birthday());\n+        return hashCode;\n     }\n \n-    public final String getName() {\n-      return name;\n+    @Override\n+    public boolean equals(Object obj) {\n+        return equalsBySdkFields(obj);\n     }\n \n     @Override\n-    public final Builder name(String name) {\n-      this.name = name;\n-      return this;\n+    public boolean equalsBySdkFields(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (obj == null) {\n+            return false;\n+        }\n+        if (!(obj instanceof Person)) {\n+            return false;\n+        }\n+        Person other = (Person) obj;\n+        return Objects.equals(name(), other.name()) && Objects.equals(birthday(), other.birthday());\n     }\n \n-    public final void setName(String name) {\n-      this.name = name;\n+    /**\n+     * Returns a string representation of this object. This is useful for testing and debugging. Sensitive data will be redacted from this string using a placeholder value.\n+     */\n+    @Override\n+    public String toString() {\n+        return ToString.builder(\"Person\").add(\"Name\", name()).add(\"Birthday\", birthday()).build();\n     }\n \n-    public final Instant getBirthday() {\n-      return birthday;\n+    public <T> Optional<T> getValueForField(String fieldName, Class<T> clazz) {\n+        switch (fieldName) {\n+            case \"Name\":\n+                return Optional.ofNullable(clazz.cast(name()));\n+            case \"Birthday\":\n+                return Optional.ofNullable(clazz.cast(birthday()));\n+            default:\n+                return Optional.empty();\n+        }\n     }\n \n     @Override\n-    public final Builder birthday(Instant birthday) {\n-      this.birthday = birthday;\n-      return this;\n+    public List<SdkField<?>> sdkFields() {\n+        return SDK_FIELDS;\n+    }\n+\n+    private static <T> Function<Object, T> getter(Function<Person, T> g) {\n+        return obj -> g.apply((Person) obj);\n     }\n \n-    public final void setBirthday(Instant birthday) {\n-      this.birthday = birthday;\n+    private static <T> BiConsumer<Object, T> setter(BiConsumer<Builder, T> s) {\n+        return (obj, val) -> s.accept((Builder) obj, val);\n     }\n \n+    /**\n+     * Calls the appropriate visit method depending on the subtype of {@link Person}.\n+     *\n+     * @param visitor Visitor to invoke.\n+     */\n     @Override\n-    public Person build() {\n-      return new Person(this);\n+    public void accept(StreamBirthsResponseHandler.Visitor visitor) {\n+        visitor.visit(this);\n     }\n \n+    /**\n+     * Calls the appropriate visit method depending on the subtype of {@link Person}.\n+     *\n+     * @param visitor Visitor to invoke.\n+     */\n     @Override\n-    public List<SdkField<?>> sdkFields() {\n-      return SDK_FIELDS;}\n-  }\n+    public void accept(StreamDeathsResponseHandler.Visitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    public interface Builder extends SdkPojo, CopyableBuilder<Builder, Person> {\n+        /**\n+         * Sets the value of the Name property for this object.\n+         *\n+         * @param name The new value for the Name property for this object.\n+         * @return Returns a reference to this object so that method calls can be chained together.\n+         */\n+        Builder name(String name);\n+\n+        /**\n+         * Sets the value of the Birthday property for this object.\n+         *\n+         * @param birthday The new value for the Birthday property for this object.\n+         * @return Returns a reference to this object so that method calls can be chained together.\n+         */\n+        Builder birthday(Instant birthday);\n+    }\n+\n+    static final class BuilderImpl implements Builder {\n+        private String name;\n+\n+        private Instant birthday;\n+\n+        private BuilderImpl() {\n+        }\n+\n+        private BuilderImpl(Person model) {\n+            name(model.name);\n+            birthday(model.birthday);\n+        }\n+\n+        public final String getName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public final Builder name(String name) {\n+            this.name = name;\n+            return this;\n+        }\n+\n+        public final void setName(String name) {\n+            this.name = name;\n+        }\n+\n+        public final Instant getBirthday() {\n+            return birthday;\n+        }\n+\n+        @Override\n+        public final Builder birthday(Instant birthday) {\n+            this.birthday = birthday;\n+            return this;\n+        }\n+\n+        public final void setBirthday(Instant birthday) {\n+            this.birthday = birthday;\n+        }\n+\n+        @Override\n+        public Person build() {\n+            return new Person(this);\n+        }\n+\n+        @Override\n+        public List<SdkField<?>> sdkFields() {\n+            return SDK_FIELDS;\n+        }\n+    }\n }\n"}}, {"oid": "d85bb0c8fafe38fd7936ef29586501d11910007c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/d85bb0c8fafe38fd7936ef29586501d11910007c", "message": "Support event streams that are shared between two operations.", "committedDate": "2020-05-12T21:57:51Z", "type": "forcePushed"}, {"oid": "2f89d870a51c8b81d64cee144d6d85391da1a374", "url": "https://github.com/aws/aws-sdk-java-v2/commit/2f89d870a51c8b81d64cee144d6d85391da1a374", "message": "Support event streams that are shared between two operations.", "committedDate": "2020-05-12T22:02:11Z", "type": "commit"}, {"oid": "2f89d870a51c8b81d64cee144d6d85391da1a374", "url": "https://github.com/aws/aws-sdk-java-v2/commit/2f89d870a51c8b81d64cee144d6d85391da1a374", "message": "Support event streams that are shared between two operations.", "committedDate": "2020-05-12T22:02:11Z", "type": "forcePushed"}, {"oid": "aca599ae09cbd21bbe8d458555c1e670edb6469b", "url": "https://github.com/aws/aws-sdk-java-v2/commit/aca599ae09cbd21bbe8d458555c1e670edb6469b", "message": "Merge branch 'master' into shared-event-streams", "committedDate": "2020-05-13T20:00:21Z", "type": "commit"}]}