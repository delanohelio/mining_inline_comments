{"pr_number": 2062, "pr_title": "Add functional tests and integration tests for Waiters", "pr_createdAt": "2020-09-23T20:33:00Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2062", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjIwOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r493882208", "bodyText": "Need copyright headers", "author": "dagnir", "createdAt": "2020-09-23T20:41:41Z", "path": "services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package software.amazon.awssdk.services.dynamodb;", "originalCommit": "eeb30072eda99efdd976a0931813a05aa4c68b31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "chunk": "diff --git a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\nindex 71d3ccf9d7..34c530a123 100644\n--- a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n+++ b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n\n@@ -1,5 +1,21 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n package software.amazon.awssdk.services.dynamodb;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.Assert.assertTrue;\n \n import java.util.concurrent.CompletableFuture;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4MjQ1Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r493882457", "bodyText": "close the client", "author": "dagnir", "createdAt": "2020-09-23T20:42:09Z", "path": "services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.services.dynamodb.model.AttributeDefinition;\n+import software.amazon.awssdk.services.dynamodb.model.CreateTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.model.KeySchemaElement;\n+import software.amazon.awssdk.services.dynamodb.model.KeyType;\n+import software.amazon.awssdk.services.dynamodb.model.ProvisionedThroughput;\n+import software.amazon.awssdk.services.dynamodb.model.ScalarAttributeType;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+import utils.resources.tables.BasicTempTable;\n+import utils.test.util.DynamoDBTestBase;\n+\n+public class WaitersIntegrationTest extends DynamoDBTestBase {\n+\n+    private static final String TABLE_NAME = \"java-sdk-waiter-test\" + System.currentTimeMillis();\n+    private static final String HASH_KEY_NAME = BasicTempTable.HASH_KEY_NAME;\n+    private static DynamoDbAsyncClient dynamoAsync;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        DynamoDBTestBase.setUpTestBase();\n+\n+        dynamoAsync = DynamoDbAsyncClient.builder().region(REGION).credentialsProvider(CREDENTIALS_PROVIDER_CHAIN).build();\n+\n+        dynamo.createTable(CreateTableRequest.builder().tableName(TABLE_NAME)\n+                                             .keySchema(KeySchemaElement.builder().keyType(KeyType.HASH)\n+                                                                        .attributeName(HASH_KEY_NAME)\n+                                                                        .build())\n+                                             .attributeDefinitions(AttributeDefinition.builder()\n+                                                                                      .attributeType(ScalarAttributeType.N)\n+                                                                                      .attributeName(HASH_KEY_NAME)\n+                                                                                      .build())\n+                                             .provisionedThroughput(ProvisionedThroughput.builder()\n+                                                                                         .readCapacityUnits(5L)\n+                                                                                         .writeCapacityUnits(5L)\n+                                                                                         .build())\n+                                             .build());\n+    }\n+\n+    @AfterClass\n+    public static void cleanUp() {", "originalCommit": "eeb30072eda99efdd976a0931813a05aa4c68b31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "chunk": "diff --git a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\nindex 71d3ccf9d7..34c530a123 100644\n--- a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n+++ b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n\n@@ -1,5 +1,21 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n package software.amazon.awssdk.services.dynamodb;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.Assert.assertTrue;\n \n import java.util.concurrent.CompletableFuture;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NDU2MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r493884561", "bodyText": "Should be using assertJ (assertThat()). Also, whenever possible you should be letting the assertion itself do the boolean test; that means instead of\nassertThat(response.responseOrException().response().get().table().tableName().equals(TABLE_NAME)).isTrue();\nit should be\nassertThat(response.responseOrException().response().get().table().tableName()).isEqualTo(TABLE_NAME));\nLooks like you're already doing this in the functional tests", "author": "dagnir", "createdAt": "2020-09-23T20:45:59Z", "path": "services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.services.dynamodb.model.AttributeDefinition;\n+import software.amazon.awssdk.services.dynamodb.model.CreateTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.model.KeySchemaElement;\n+import software.amazon.awssdk.services.dynamodb.model.KeyType;\n+import software.amazon.awssdk.services.dynamodb.model.ProvisionedThroughput;\n+import software.amazon.awssdk.services.dynamodb.model.ScalarAttributeType;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+import utils.resources.tables.BasicTempTable;\n+import utils.test.util.DynamoDBTestBase;\n+\n+public class WaitersIntegrationTest extends DynamoDBTestBase {\n+\n+    private static final String TABLE_NAME = \"java-sdk-waiter-test\" + System.currentTimeMillis();\n+    private static final String HASH_KEY_NAME = BasicTempTable.HASH_KEY_NAME;\n+    private static DynamoDbAsyncClient dynamoAsync;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        DynamoDBTestBase.setUpTestBase();\n+\n+        dynamoAsync = DynamoDbAsyncClient.builder().region(REGION).credentialsProvider(CREDENTIALS_PROVIDER_CHAIN).build();\n+\n+        dynamo.createTable(CreateTableRequest.builder().tableName(TABLE_NAME)\n+                                             .keySchema(KeySchemaElement.builder().keyType(KeyType.HASH)\n+                                                                        .attributeName(HASH_KEY_NAME)\n+                                                                        .build())\n+                                             .attributeDefinitions(AttributeDefinition.builder()\n+                                                                                      .attributeType(ScalarAttributeType.N)\n+                                                                                      .attributeName(HASH_KEY_NAME)\n+                                                                                      .build())\n+                                             .provisionedThroughput(ProvisionedThroughput.builder()\n+                                                                                         .readCapacityUnits(5L)\n+                                                                                         .writeCapacityUnits(5L)\n+                                                                                         .build())\n+                                             .build());\n+    }\n+\n+    @AfterClass\n+    public static void cleanUp() {\n+        dynamo.deleteTable(DeleteTableRequest.builder().tableName(TABLE_NAME).build());\n+    }\n+\n+    @Test\n+    public void checkTableExist_withSyncWaiter() {\n+        DynamoDbWaiter syncWaiter = dynamo.waiter();\n+        WaiterResponse<DescribeTableResponse> response = syncWaiter.waitUntilTableExists(\n+            DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        assertTrue(response.attemptsExecuted() >= 1);\n+        assertTrue(response.responseOrException().response().get().table().tableName().equals(TABLE_NAME));", "originalCommit": "eeb30072eda99efdd976a0931813a05aa4c68b31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "chunk": "diff --git a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\nindex 71d3ccf9d7..34c530a123 100644\n--- a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n+++ b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n\n@@ -1,5 +1,21 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n package software.amazon.awssdk.services.dynamodb;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.junit.Assert.assertTrue;\n \n import java.util.concurrent.CompletableFuture;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NjIyMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r493886220", "bodyText": "Copyright headers", "author": "dagnir", "createdAt": "2020-09-23T20:49:05Z", "path": "test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersAsyncFunctionalTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package software.amazon.awssdk.services.waiters;", "originalCommit": "eeb30072eda99efdd976a0931813a05aa4c68b31", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "chunk": "diff --git a/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersAsyncFunctionalTest.java b/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersAsyncFunctionalTest.java\nindex f7fba6de7f..dc947863d9 100644\n--- a/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersAsyncFunctionalTest.java\n+++ b/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersAsyncFunctionalTest.java\n\n@@ -1,18 +1,36 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n package software.amazon.awssdk.services.waiters;\n \n import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ScheduledExecutorService;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import software.amazon.awssdk.core.exception.SdkServiceException;\n import software.amazon.awssdk.core.retry.backoff.BackoffStrategy;\n-import software.amazon.awssdk.core.waiters.PollingStrategy;\n+import software.amazon.awssdk.core.waiters.WaiterOverrideConfiguration;\n import software.amazon.awssdk.core.waiters.WaiterResponse;\n import software.amazon.awssdk.http.SdkHttpResponse;\n import software.amazon.awssdk.services.restjsonwithwaiters.RestJsonWithWaitersAsyncClient;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5MjY3MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r493892671", "bodyText": "Seems like we need to test other scenarios as well such as\n\nWhat happens when we reach max number of attempts\nWhat happens when we get an unexpected exception\nWhat happens to the client and scheduled executor when the the waiter is closed?\netc.\n\ncc: @zoewangg for more suggestions", "author": "dagnir", "createdAt": "2020-09-23T21:01:21Z", "path": "test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersSyncFunctionalTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package software.amazon.awssdk.services.waiters;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import software.amazon.awssdk.core.exception.SdkServiceException;\n+import software.amazon.awssdk.core.retry.backoff.BackoffStrategy;\n+import software.amazon.awssdk.core.waiters.PollingStrategy;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.http.SdkHttpResponse;\n+import software.amazon.awssdk.services.restjsonwithwaiters.RestJsonWithWaitersClient;\n+import software.amazon.awssdk.services.restjsonwithwaiters.model.AllTypesRequest;\n+import software.amazon.awssdk.services.restjsonwithwaiters.model.AllTypesResponse;\n+import software.amazon.awssdk.services.restjsonwithwaiters.waiters.RestJsonWithWaitersWaiter;\n+\n+public class WaitersSyncFunctionalTest {", "originalCommit": "eeb30072eda99efdd976a0931813a05aa4c68b31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA0NTQxMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r494045412", "bodyText": "The max number of attempts case is added in sync Waiters. Unexpected exception case has been covered by the tests for generic Waiters. For the third case, if the client and scheduled executor are configured while creating the Waiters then they won't be closed while the Waiters are closed, and tests related to this case are also added.", "author": "Quanzzzz", "createdAt": "2020-09-24T05:22:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5MjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcyNjYwNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r494726606", "bodyText": "@dagnir Good call! I added the test cases with unexpected exception and caught a bug in waiterRuntime \ud83d\ude05", "author": "zoewangg", "createdAt": "2020-09-25T03:28:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5MjY3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyOTM4OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r495129388", "bodyText": "\ud83d\ude05Guess that's my fault. I misunderstood the unmatched exception case in the BaseWaiterTest, thanks for making sure about it again.", "author": "Quanzzzz", "createdAt": "2020-09-25T17:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5MjY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "chunk": "diff --git a/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersSyncFunctionalTest.java b/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersSyncFunctionalTest.java\nindex ed7364d94c..512a5eee62 100644\n--- a/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersSyncFunctionalTest.java\n+++ b/test/codegen-generated-classes-test/src/test/java/software/amazon/awssdk/services/waiters/WaitersSyncFunctionalTest.java\n\n@@ -1,16 +1,35 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n package software.amazon.awssdk.services.waiters;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n import static org.mockito.Matchers.any;\n import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n+import software.amazon.awssdk.core.exception.SdkClientException;\n import software.amazon.awssdk.core.exception.SdkServiceException;\n import software.amazon.awssdk.core.retry.backoff.BackoffStrategy;\n-import software.amazon.awssdk.core.waiters.PollingStrategy;\n+import software.amazon.awssdk.core.waiters.WaiterOverrideConfiguration;\n import software.amazon.awssdk.core.waiters.WaiterResponse;\n import software.amazon.awssdk.http.SdkHttpResponse;\n import software.amazon.awssdk.services.restjsonwithwaiters.RestJsonWithWaitersClient;\n"}}, {"oid": "9a49f0835f7033b6ce4cb38306588659b55378b1", "url": "https://github.com/aws/aws-sdk-java-v2/commit/9a49f0835f7033b6ce4cb38306588659b55378b1", "message": "Add functional tests and integration tests", "committedDate": "2020-09-24T05:22:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ4MzQzMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r494483430", "bodyText": "Use assertThat", "author": "dagnir", "createdAt": "2020-09-24T17:17:59Z", "path": "services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.services.dynamodb.model.AttributeDefinition;\n+import software.amazon.awssdk.services.dynamodb.model.CreateTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.model.KeySchemaElement;\n+import software.amazon.awssdk.services.dynamodb.model.KeyType;\n+import software.amazon.awssdk.services.dynamodb.model.ProvisionedThroughput;\n+import software.amazon.awssdk.services.dynamodb.model.ScalarAttributeType;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+import utils.resources.tables.BasicTempTable;\n+import utils.test.util.DynamoDBTestBase;\n+\n+public class WaitersIntegrationTest extends DynamoDBTestBase {\n+\n+    private static final String TABLE_NAME = \"java-sdk-waiter-test\" + System.currentTimeMillis();\n+    private static final String HASH_KEY_NAME = BasicTempTable.HASH_KEY_NAME;\n+    private static DynamoDbAsyncClient dynamoAsync;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        DynamoDBTestBase.setUpTestBase();\n+\n+        dynamoAsync = DynamoDbAsyncClient.builder().region(REGION).credentialsProvider(CREDENTIALS_PROVIDER_CHAIN).build();\n+\n+        dynamo.createTable(CreateTableRequest.builder().tableName(TABLE_NAME)\n+                                             .keySchema(KeySchemaElement.builder().keyType(KeyType.HASH)\n+                                                                        .attributeName(HASH_KEY_NAME)\n+                                                                        .build())\n+                                             .attributeDefinitions(AttributeDefinition.builder()\n+                                                                                      .attributeType(ScalarAttributeType.N)\n+                                                                                      .attributeName(HASH_KEY_NAME)\n+                                                                                      .build())\n+                                             .provisionedThroughput(ProvisionedThroughput.builder()\n+                                                                                         .readCapacityUnits(5L)\n+                                                                                         .writeCapacityUnits(5L)\n+                                                                                         .build())\n+                                             .build());\n+    }\n+\n+    @AfterClass\n+    public static void cleanUp() {\n+        dynamo.deleteTable(DeleteTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        dynamo.close();\n+        dynamoAsync.close();\n+    }\n+\n+    @Test\n+    public void checkTableExist_withSyncWaiter() {\n+        DynamoDbWaiter syncWaiter = dynamo.waiter();\n+        WaiterResponse<DescribeTableResponse> response = syncWaiter.waitUntilTableExists(\n+            DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        assertTrue(response.attemptsExecuted() >= 1);\n+        assertThat(response.matched().response().get().table().tableName()).isEqualTo(TABLE_NAME);\n+    }\n+\n+    @Test\n+    public void checkTableExist_withAsyncWaiter() throws ExecutionException, InterruptedException {\n+        DynamoDbAsyncWaiter asyncWaiter = dynamoAsync.waiter();\n+        CompletableFuture<WaiterResponse<DescribeTableResponse>> responseFuture = asyncWaiter.waitUntilTableExists(\n+            DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        responseFuture.join();\n+\n+        assertTrue(responseFuture.get().attemptsExecuted() >= 1);", "originalCommit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10b5c3dd54847072593607c37bf88862974f0f78", "chunk": "diff --git a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\nindex 34c530a123..e8936007d5 100644\n--- a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n+++ b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n\n@@ -79,7 +79,7 @@ public class WaitersIntegrationTest extends DynamoDBTestBase {\n         WaiterResponse<DescribeTableResponse> response = syncWaiter.waitUntilTableExists(\n             DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n \n-        assertTrue(response.attemptsExecuted() >= 1);\n+        assertThat(response.attemptsExecuted()).isGreaterThanOrEqualTo(1);\n         assertThat(response.matched().response().get().table().tableName()).isEqualTo(TABLE_NAME);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ4MzUwMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2062#discussion_r494483502", "bodyText": "use assertThat", "author": "dagnir", "createdAt": "2020-09-24T17:18:07Z", "path": "services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.services.dynamodb;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import software.amazon.awssdk.core.waiters.WaiterResponse;\n+import software.amazon.awssdk.services.dynamodb.model.AttributeDefinition;\n+import software.amazon.awssdk.services.dynamodb.model.CreateTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableRequest;\n+import software.amazon.awssdk.services.dynamodb.model.DescribeTableResponse;\n+import software.amazon.awssdk.services.dynamodb.model.KeySchemaElement;\n+import software.amazon.awssdk.services.dynamodb.model.KeyType;\n+import software.amazon.awssdk.services.dynamodb.model.ProvisionedThroughput;\n+import software.amazon.awssdk.services.dynamodb.model.ScalarAttributeType;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbAsyncWaiter;\n+import software.amazon.awssdk.services.dynamodb.waiters.DynamoDbWaiter;\n+import utils.resources.tables.BasicTempTable;\n+import utils.test.util.DynamoDBTestBase;\n+\n+public class WaitersIntegrationTest extends DynamoDBTestBase {\n+\n+    private static final String TABLE_NAME = \"java-sdk-waiter-test\" + System.currentTimeMillis();\n+    private static final String HASH_KEY_NAME = BasicTempTable.HASH_KEY_NAME;\n+    private static DynamoDbAsyncClient dynamoAsync;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        DynamoDBTestBase.setUpTestBase();\n+\n+        dynamoAsync = DynamoDbAsyncClient.builder().region(REGION).credentialsProvider(CREDENTIALS_PROVIDER_CHAIN).build();\n+\n+        dynamo.createTable(CreateTableRequest.builder().tableName(TABLE_NAME)\n+                                             .keySchema(KeySchemaElement.builder().keyType(KeyType.HASH)\n+                                                                        .attributeName(HASH_KEY_NAME)\n+                                                                        .build())\n+                                             .attributeDefinitions(AttributeDefinition.builder()\n+                                                                                      .attributeType(ScalarAttributeType.N)\n+                                                                                      .attributeName(HASH_KEY_NAME)\n+                                                                                      .build())\n+                                             .provisionedThroughput(ProvisionedThroughput.builder()\n+                                                                                         .readCapacityUnits(5L)\n+                                                                                         .writeCapacityUnits(5L)\n+                                                                                         .build())\n+                                             .build());\n+    }\n+\n+    @AfterClass\n+    public static void cleanUp() {\n+        dynamo.deleteTable(DeleteTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        dynamo.close();\n+        dynamoAsync.close();\n+    }\n+\n+    @Test\n+    public void checkTableExist_withSyncWaiter() {\n+        DynamoDbWaiter syncWaiter = dynamo.waiter();\n+        WaiterResponse<DescribeTableResponse> response = syncWaiter.waitUntilTableExists(\n+            DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n+\n+        assertTrue(response.attemptsExecuted() >= 1);", "originalCommit": "9a49f0835f7033b6ce4cb38306588659b55378b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10b5c3dd54847072593607c37bf88862974f0f78", "chunk": "diff --git a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\nindex 34c530a123..e8936007d5 100644\n--- a/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n+++ b/services/dynamodb/src/it/java/software/amazon/awssdk/services/dynamodb/WaitersIntegrationTest.java\n\n@@ -79,7 +79,7 @@ public class WaitersIntegrationTest extends DynamoDBTestBase {\n         WaiterResponse<DescribeTableResponse> response = syncWaiter.waitUntilTableExists(\n             DescribeTableRequest.builder().tableName(TABLE_NAME).build());\n \n-        assertTrue(response.attemptsExecuted() >= 1);\n+        assertThat(response.attemptsExecuted()).isGreaterThanOrEqualTo(1);\n         assertThat(response.matched().response().get().table().tableName()).isEqualTo(TABLE_NAME);\n     }\n \n"}}, {"oid": "10b5c3dd54847072593607c37bf88862974f0f78", "url": "https://github.com/aws/aws-sdk-java-v2/commit/10b5c3dd54847072593607c37bf88862974f0f78", "message": "Add functional tests and integration tests", "committedDate": "2020-09-24T19:05:16Z", "type": "commit"}, {"oid": "10b5c3dd54847072593607c37bf88862974f0f78", "url": "https://github.com/aws/aws-sdk-java-v2/commit/10b5c3dd54847072593607c37bf88862974f0f78", "message": "Add functional tests and integration tests", "committedDate": "2020-09-24T19:05:16Z", "type": "forcePushed"}]}