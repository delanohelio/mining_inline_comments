{"pr_number": 2005, "pr_title": "create connection health checks configuration", "pr_createdAt": "2020-08-26T00:17:15Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2005", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477496933", "bodyText": "Duration has getSeconds()", "author": "dagnir", "createdAt": "2020-08-26T18:18:28Z", "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java", "diffHunk": "@@ -105,13 +106,25 @@ private AwsCrtAsyncHttpClient(DefaultBuilder builder, AttributeMap config) {\n \n             this.initialWindowSize = builder.initialWindowSize;\n             this.maxConnectionsPerEndpoint = maxConns;\n-            this.monitoringOptions = builder.monitoringOptions;\n+            this.monitoringOptions = revolveHttpMonitoringOptions(builder.connectionHealthChecksConfiguration);\n             this.maxConnectionIdleInMilliseconds = config.get(SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT).toMillis();\n \n             this.proxyOptions = buildProxyOptions(builder.proxyConfiguration);\n         }\n     }\n \n+    private HttpMonitoringOptions revolveHttpMonitoringOptions(ConnectionHealthChecksConfiguration config) {\n+        if (config == null) {\n+            return null;\n+        }\n+\n+        HttpMonitoringOptions httpMonitoringOptions = new HttpMonitoringOptions();\n+        httpMonitoringOptions.setMinThroughputBytesPerSecond(config.minThroughputInBytesPerSecond());\n+        int seconds = (int) (TimeUnit.MILLISECONDS.toSeconds(config.allowableThroughputFailureInterval().toMillis()));", "originalCommit": "fd11ca88504ad6f16696414f0b6b813de685af0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxMjc4OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477512789", "bodyText": "getSeconds only gets the seconds from the duration, i.e., not the total number of whole seconds in the duration\ntoSeconds is added since 9,, so we can't use it unfortunately. :(\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Duration.html#toSeconds()", "author": "zoewangg", "createdAt": "2020-08-26T18:47:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNTM3OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477515379", "bodyText": "http://hg.openjdk.java.net/jdk9/jdk9/jdk/file/7f644a5d554a/src/java.base/share/classes/java/time/Duration.java they seem to have the same impl :P", "author": "dagnir", "createdAt": "2020-08-26T18:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNTU2OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477515568", "bodyText": "don't feel strongly about this though", "author": "dagnir", "createdAt": "2020-08-26T18:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNzQzNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477517436", "bodyText": "Interesting! Didn't know they have the same impl. Why do they have two APIs then?! \ud83e\udd14", "author": "zoewangg", "createdAt": "2020-08-26T18:55:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxOTk2Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477519967", "bodyText": "Found this relevant link: https://bugs.openjdk.java.net/browse/JDK-8142936\nTL;DR They added toSeconds to be consistent with other toXXX methods", "author": "zoewangg", "createdAt": "2020-08-26T19:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjkzMw=="}], "type": "inlineReview", "revised_code": {"commit": "b2b828a13db01617629e14a71f60f5c873b3f938", "chunk": "diff --git a/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java b/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java\nindex 73b75f6a9a..9384903ee6 100644\n--- a/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java\n+++ b/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/AwsCrtAsyncHttpClient.java\n\n@@ -120,7 +120,7 @@ public final class AwsCrtAsyncHttpClient implements SdkAsyncHttpClient {\n \n         HttpMonitoringOptions httpMonitoringOptions = new HttpMonitoringOptions();\n         httpMonitoringOptions.setMinThroughputBytesPerSecond(config.minThroughputInBytesPerSecond());\n-        int seconds = (int) (TimeUnit.MILLISECONDS.toSeconds(config.allowableThroughputFailureInterval().toMillis()));\n+        int seconds = (int) config.allowableThroughputFailureInterval().getSeconds();\n         httpMonitoringOptions.setAllowableThroughputFailureIntervalSeconds(seconds);\n         return httpMonitoringOptions;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTc4OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477499789", "bodyText": "nit: Duration doesn't have a single unit so I don't think it would make sense to say \"in seconds\" here. We might want to add a note on the setter that it only supports seconds precision though", "author": "dagnir", "createdAt": "2020-08-26T18:23:42Z", "path": "http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/ConnectionHealthChecksConfiguration.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.crt;\n+\n+import java.time.Duration;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.utils.Validate;\n+\n+/**\n+ * Configuration that defines health checks for for all connections established by\n+ * the{@link ConnectionHealthChecksConfiguration}.\n+ */\n+@SdkPublicApi\n+public final class ConnectionHealthChecksConfiguration {\n+    private final long minThroughputInBytesPerSecond;\n+    private final Duration allowableThroughputFailureInterval;\n+\n+    private ConnectionHealthChecksConfiguration(DefaultConnectionHealthChecksConfigurationBuilder builder) {\n+        this.minThroughputInBytesPerSecond = Validate.paramNotNull(builder.minThroughputInBytesPerSecond,\n+                                                                   \"minThroughputInBytesPerSecond\");\n+        this.allowableThroughputFailureInterval = Validate.isPositive(builder.allowableThroughputFailureIntervalSeconds,\n+                                                                      \"allowableThroughputFailureIntervalSeconds\");\n+    }\n+\n+    /**\n+     * @return the minimum amount of throughput, in bytes per second, for a connection to be considered healthy.\n+     */\n+    public long minThroughputInBytesPerSecond() {\n+        return minThroughputInBytesPerSecond;\n+    }\n+\n+    /**\n+     * @return How long, in seconds, a connection is allowed to be unhealthy before getting shut down.", "originalCommit": "fd11ca88504ad6f16696414f0b6b813de685af0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxMDg2Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2005#discussion_r477510866", "bodyText": "Yup, copy paste error", "author": "zoewangg", "createdAt": "2020-08-26T18:44:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5OTc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "b2b828a13db01617629e14a71f60f5c873b3f938", "chunk": "diff --git a/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/ConnectionHealthChecksConfiguration.java b/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/ConnectionHealthChecksConfiguration.java\nindex ae8636e733..6365243783 100644\n--- a/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/ConnectionHealthChecksConfiguration.java\n+++ b/http-clients/aws-crt-client/src/main/java/software/amazon/awssdk/http/crt/ConnectionHealthChecksConfiguration.java\n\n@@ -43,7 +43,7 @@ public final class ConnectionHealthChecksConfiguration {\n     }\n \n     /**\n-     * @return How long, in seconds, a connection is allowed to be unhealthy before getting shut down.\n+     * @return How long a connection is allowed to be unhealthy before getting shut down.\n      */\n     public Duration allowableThroughputFailureInterval() {\n         return allowableThroughputFailureInterval;\n"}}, {"oid": "b2b828a13db01617629e14a71f60f5c873b3f938", "url": "https://github.com/aws/aws-sdk-java-v2/commit/b2b828a13db01617629e14a71f60f5c873b3f938", "message": "Create ConnectionHealthChecksConfiguration", "committedDate": "2020-08-26T19:31:08Z", "type": "forcePushed"}, {"oid": "fc5ec1c1b13bc13f45cd6dac5bb9f69ce6df130b", "url": "https://github.com/aws/aws-sdk-java-v2/commit/fc5ec1c1b13bc13f45cd6dac5bb9f69ce6df130b", "message": "Create ConnectionHealthChecksConfiguration", "committedDate": "2020-08-26T19:58:24Z", "type": "commit"}, {"oid": "fc5ec1c1b13bc13f45cd6dac5bb9f69ce6df130b", "url": "https://github.com/aws/aws-sdk-java-v2/commit/fc5ec1c1b13bc13f45cd6dac5bb9f69ce6df130b", "message": "Create ConnectionHealthChecksConfiguration", "committedDate": "2020-08-26T19:58:24Z", "type": "forcePushed"}]}