{"pr_number": 1819, "pr_title": "Fix generation for operations that share an output shape.", "pr_createdAt": "2020-05-07T00:35:42Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1819", "timeline": [{"oid": "df1cdf4be99197cc3d75852e679f4c81f01d43c6", "url": "https://github.com/aws/aws-sdk-java-v2/commit/df1cdf4be99197cc3d75852e679f4c81f01d43c6", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only.", "committedDate": "2020-05-07T16:41:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDMwNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950306", "bodyText": "assertThatThrownBy(() -> testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\"))\n    .isInstanceOf(IllegalArgumentException.class)\n    .hasMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\").\n?", "author": "millems", "createdAt": "2020-05-12T18:36:45Z", "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");", "originalCommit": "df1cdf4be99197cc3d75852e679f4c81f01d43c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NDQ2MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r424054460", "bodyText": "Didn't notice these tests were using AssertJ.  Updated.", "author": "adamthom-amzn", "createdAt": "2020-05-12T21:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDMwNg=="}], "type": "inlineReview", "revised_code": {"commit": "abcd9a4023265b8d04343e8eef033cbd389c619c", "chunk": "diff --git a/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java b/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\nindex 318bad992c..418e9b49b4 100644\n--- a/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\n+++ b/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\n\n@@ -15,11 +15,11 @@\n \n package software.amazon.awssdk.codegen.model.intermediate;\n \n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n import java.io.File;\n import java.util.Collections;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n import software.amazon.awssdk.codegen.C2jModels;\n import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDQxMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r423950412", "bodyText": "Same here.", "author": "millems", "createdAt": "2020-05-12T18:36:58Z", "path": "codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.codegen.model.intermediate;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import software.amazon.awssdk.codegen.C2jModels;\n+import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n+import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n+import software.amazon.awssdk.codegen.model.service.ServiceMetadata;\n+import software.amazon.awssdk.codegen.model.service.ServiceModel;\n+import software.amazon.awssdk.codegen.utils.ModelLoaderUtils;\n+\n+public class IntermediateModelTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void cannotFindShapeWhenNoShapesExist() {\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name AnyShape does not exist in the intermediate model\");\n+\n+        ServiceMetadata metadata = new ServiceMetadata();\n+        metadata.setProtocol(Protocol.REST_JSON.getValue());\n+        metadata.setServiceId(\"empty-service\");\n+        metadata.setSignatureVersion(\"V4\");\n+\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(new ServiceModel(metadata,\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap(),\n+                                                    Collections.emptyMap()))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+        testModel.getShapeByNameAndC2jName(\"AnyShape\", \"AnyShape\");\n+    }\n+\n+    @Test\n+    public void getShapeByNameAndC2jNameVerifiesC2JName() {\n+        final File modelFile = new File(IntermediateModelTest.class\n+                                            .getResource(\"../../poet/client/c2j/shared-output/service-2.json\").getFile());\n+        IntermediateModel testModel = new IntermediateModelBuilder(\n+            C2jModels.builder()\n+                     .serviceModel(ModelLoaderUtils.loadModel(ServiceModel.class, modelFile))\n+                     .customizationConfig(CustomizationConfig.create())\n+                     .build())\n+            .build();\n+\n+        exception.expect(IllegalArgumentException.class);\n+        exception.expectMessage(\"C2J shape AnyShape with shape name PingResponse does not exist in the intermediate model\");\n+\n+        testModel.getShapeByNameAndC2jName(\"PingResponse\", \"AnyShape\");", "originalCommit": "df1cdf4be99197cc3d75852e679f4c81f01d43c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1NDUxNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1819#discussion_r424054514", "bodyText": "Also updated this.", "author": "adamthom-amzn", "createdAt": "2020-05-12T21:50:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1MDQxMg=="}], "type": "inlineReview", "revised_code": {"commit": "abcd9a4023265b8d04343e8eef033cbd389c619c", "chunk": "diff --git a/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java b/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\nindex 318bad992c..418e9b49b4 100644\n--- a/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\n+++ b/codegen/src/test/java/software/amazon/awssdk/codegen/model/intermediate/IntermediateModelTest.java\n\n@@ -15,11 +15,11 @@\n \n package software.amazon.awssdk.codegen.model.intermediate;\n \n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n import java.io.File;\n import java.util.Collections;\n-import org.junit.Rule;\n import org.junit.Test;\n-import org.junit.rules.ExpectedException;\n import software.amazon.awssdk.codegen.C2jModels;\n import software.amazon.awssdk.codegen.IntermediateModelBuilder;\n import software.amazon.awssdk.codegen.model.config.customization.CustomizationConfig;\n"}}, {"oid": "abcd9a4023265b8d04343e8eef033cbd389c619c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/abcd9a4023265b8d04343e8eef033cbd389c619c", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only.", "committedDate": "2020-05-12T21:48:53Z", "type": "commit"}, {"oid": "abcd9a4023265b8d04343e8eef033cbd389c619c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/abcd9a4023265b8d04343e8eef033cbd389c619c", "message": "Fix generation for operations that share an output shape.\n\nTwo shapes can have the same C2J name but different intermediate model names.  This seems to work fine for request types, but not response types, where the lookups were done by C2J name only.", "committedDate": "2020-05-12T21:48:53Z", "type": "forcePushed"}, {"oid": "a660857734fe80d043ce0b6a0dbf9aaa6ff78021", "url": "https://github.com/aws/aws-sdk-java-v2/commit/a660857734fe80d043ce0b6a0dbf9aaa6ff78021", "message": "Merge branch 'master' into output-sharing", "committedDate": "2020-05-13T19:22:43Z", "type": "commit"}]}