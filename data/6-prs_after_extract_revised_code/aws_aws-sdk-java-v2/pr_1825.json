{"pr_number": 1825, "pr_title": "Audited the javadoc in dynamodb-enhanced and corrected some error.", "pr_createdAt": "2020-05-08T19:20:49Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1825", "timeline": [{"oid": "27ee6684481fbec98dfd4f66a39fce6dc77cca8b", "url": "https://github.com/aws/aws-sdk-java-v2/commit/27ee6684481fbec98dfd4f66a39fce6dc77cca8b", "message": "Audit the javadoc in dynamodb-enhanced and corrected some error.", "committedDate": "2020-05-08T19:17:22Z", "type": "commit"}, {"oid": "970ecaec7ea1bac0f902661eb5a21f9226a521d7", "url": "https://github.com/aws/aws-sdk-java-v2/commit/970ecaec7ea1bac0f902661eb5a21f9226a521d7", "message": "Merge branch 'master' into dynamodb-javadoc", "committedDate": "2020-05-08T19:20:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzk2MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422327961", "bodyText": "What's the difference between <code> and <pre>?", "author": "millems", "createdAt": "2020-05-08T19:24:12Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/enhanced/dynamodb/internal/converter/attribute/ListAttributeConverter.java", "diffHunk": "@@ -45,28 +45,36 @@\n  *\n  * <p>\n  * A builder is exposed to allow defining how the collection and element types are created and converted:\n+ * <p>\n  * <code>\n- * AttributeConverter<List<Integer>> listConverter =\n+ * {@literal AttributeConverter<List<Integer>> listConverter =\n  * CollectionAttributeConverter.builder(EnhancedType.listOf(Integer.class))\n  * .collectionConstructor(ArrayList::new)\n  * .elementConverter(IntegerAttributeConverter.create())\n- * .build()\n+ * .build()}\n  * </code>\n  *\n  * <p>\n  * For frequently-used types, static methods are exposed to reduce the amount of boilerplate involved in creation:\n+ * <p>\n  * <code>\n- * AttributeConverter<List<Integer>> listConverter =\n- * CollectionAttributeConverter.listConverter(IntegerAttributeConverter.create());\n+ * {@literal AttributeConverter<List<Integer>> listConverter =\n+ * CollectionAttributeConverter.listConverter(IntegerAttributeConverter.create());}\n+ * </code>\n  * <p>\n- * AttributeConverter<Collection<Integer>> collectionConverer =\n- * CollectionAttributeConverter.collectionConverter(IntegerAttributeConverter.create());\n+ * <code>\n+ * {@literal AttributeConverter<Collection<Integer>> collectionConverer =\n+ * CollectionAttributeConverter.collectionConverter(IntegerAttributeConverter.create());}\n+ * </code>\n  * <p>\n- * AttributeConverter<Set<Integer>> setConverter =\n- * CollectionAttributeConverter.setConverter(IntegerAttributeConverter.create());\n+ * <code>\n+ * {@literal AttributeConverter<Set<Integer>> setConverter =\n+ * CollectionAttributeConverter.setConverter(IntegerAttributeConverter.create());}\n+ * </code>\n  * <p>\n- * AttributeConverter<SortedSet<Integer>> sortedSetConverter =\n- * CollectionAttributeConverter.sortedSetConverter(IntegerAttributeConverter.create());\n+ * <code>\n+ * {@literal AttributeConverter<SortedSet<Integer>> sortedSetConverter =\n+ * CollectionAttributeConverter.sortedSetConverter(IntegerAttributeConverter.create());}\n  * </code>", "originalCommit": "970ecaec7ea1bac0f902661eb5a21f9226a521d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMzOTY0Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422339647", "bodyText": "<code> makes the font different, but it cannot guarantee the formats, and <pre> can let the format of the code be showed as what they are in the original code file, i.e showing the indents and spaces.", "author": "Quanzzzz", "createdAt": "2020-05-08T19:49:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzk2MQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODI0NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422328245", "bodyText": "Why @literal and not @code?", "author": "millems", "createdAt": "2020-05-08T19:24:45Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/enhanced/dynamodb/internal/converter/attribute/MapAttributeConverter.java", "diffHunk": "@@ -47,25 +47,28 @@\n  *\n  * <p>\n  * A builder is exposed to allow defining how the map, key and value types are created and converted:\n+ * <p>\n  * <code>\n- * AttributeConverter<Map<MonthDay, String>> mapConverter =\n+ * {@literal AttributeConverter<Map<MonthDay, String>> mapConverter =\n  * MapAttributeConverter.builder(EnhancedType.mapOf(Integer.class, String.class))\n  * .mapConstructor(HashMap::new)\n  * .keyConverter(MonthDayStringConverter.create())\n  * .valueConverter(StringAttributeConverter.create())\n- * .build();\n+ * .build();}", "originalCommit": "970ecaec7ea1bac0f902661eb5a21f9226a521d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0MDU5NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422340594", "bodyText": "The @literal is for the '<' and '>' signs, they are special signs in html, thus they cannot be recognize as the other signs, adding @literal guarantees that all the strings contained are just what they should be looked like. Usually this annotation is for special signs i.e '<', '>', '@'", "author": "Quanzzzz", "createdAt": "2020-05-08T19:51:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODI0NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODgwOQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422328809", "bodyText": "Does @code work when the content has a } in it?", "author": "millems", "createdAt": "2020-05-08T19:25:55Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/enhanced/dynamodb/mapper/annotations/DynamoDbBean.java", "diffHunk": "@@ -46,9 +46,11 @@\n  * </ul>\n  *\n  * Example using attribute converter providers with one custom provider and the default provider:\n+ * <pre>\n  * {@code\n  * (converterProviders = {CustomAttributeConverter.class, DefaultAttributeConverterProvider.class});\n  * }", "originalCommit": "970ecaec7ea1bac0f902661eb5a21f9226a521d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0MDkzMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1825#discussion_r422340930", "bodyText": "Only if all the brackets are matched, if not, there will be an error.", "author": "Quanzzzz", "createdAt": "2020-05-08T19:52:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyODgwOQ=="}], "type": "inlineReview", "revised_code": null}]}