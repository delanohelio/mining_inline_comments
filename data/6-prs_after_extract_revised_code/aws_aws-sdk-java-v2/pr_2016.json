{"pr_number": 2016, "pr_title": "Refactoring and request future cancellation", "pr_createdAt": "2020-09-02T16:55:35Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/2016", "timeline": [{"oid": "4af5ed659b41b421e9e3acb3ea439b064d082226", "url": "https://github.com/aws/aws-sdk-java-v2/commit/4af5ed659b41b421e9e3acb3ea439b064d082226", "message": "Refactoring - moving the request exceution logic to a separate class and add tests", "committedDate": "2020-09-02T02:48:05Z", "type": "commit"}, {"oid": "67a87eea8324d878e2275fa5194693b9247f1b18", "url": "https://github.com/aws/aws-sdk-java-v2/commit/67a87eea8324d878e2275fa5194693b9247f1b18", "message": "Invoke responseHandler#onError when the request future is cancelled", "committedDate": "2020-09-02T17:06:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3Mzk4Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482273987", "bodyText": "Do we need a WireMock test here to test the situation when the request is executed successfully?", "author": "Quanzzzz", "createdAt": "2020-09-02T18:19:37Z", "path": "http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http.crt.internal;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static software.amazon.awssdk.http.HttpTestUtils.createProvider;\n+import static software.amazon.awssdk.http.crt.CrtHttpClientTestUtils.createRequest;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.concurrent.CompletableFuture;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.runners.MockitoJUnitRunner;\n+import software.amazon.awssdk.crt.CrtRuntimeException;\n+import software.amazon.awssdk.crt.http.HttpClientConnection;\n+import software.amazon.awssdk.crt.http.HttpClientConnectionManager;\n+import software.amazon.awssdk.crt.http.HttpRequest;\n+import software.amazon.awssdk.http.SdkHttpFullRequest;\n+import software.amazon.awssdk.http.async.AsyncExecuteRequest;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CrtRequestExecutorTest {", "originalCommit": "4af5ed659b41b421e9e3acb3ea439b064d082226", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NDMxNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482444316", "bodyText": "This test is not using wiremock, but yeah, I can add a test for happy path", "author": "zoewangg", "createdAt": "2020-09-02T20:47:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3Mzk4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "chunk": "diff --git a/http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java b/http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java\nindex bc754f00c1..3c10564d38 100644\n--- a/http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java\n+++ b/http-clients/aws-crt-client/src/test/java/software/amazon/awssdk/http/crt/internal/CrtRequestExecutorTest.java\n\n@@ -22,6 +22,7 @@ import static software.amazon.awssdk.http.crt.CrtHttpClientTestUtils.createReque\n import java.io.IOException;\n import java.net.URI;\n import java.util.concurrent.CompletableFuture;\n+import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MjcyNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482282724", "bodyText": "Question: Where do we use these two classes: RecordingNetworkTrafficListener and RecordingResponseHandler? Are they for the normal case test?", "author": "Quanzzzz", "createdAt": "2020-09-02T18:28:58Z", "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingNetworkTrafficListener.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import com.github.tomakehurst.wiremock.http.trafficlistener.WiremockNetworkTrafficListener;\n+import java.net.Socket;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Simple implementation of {@link WiremockNetworkTrafficListener} to record all requests received as a string for later\n+ * verification.\n+ */\n+public class RecordingNetworkTrafficListener implements WiremockNetworkTrafficListener {", "originalCommit": "4af5ed659b41b421e9e3acb3ea439b064d082226", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NTkxMg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482445912", "bodyText": "Yeah, they are used in the wiremock tests.", "author": "zoewangg", "createdAt": "2020-09-02T20:48:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MjcyNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MzAyOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482283028", "bodyText": "Same question as above.", "author": "Quanzzzz", "createdAt": "2020-09-02T18:29:19Z", "path": "test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.http;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+import org.reactivestreams.Publisher;\n+import software.amazon.awssdk.http.async.SdkAsyncHttpResponseHandler;\n+import software.amazon.awssdk.http.async.SimpleSubscriber;\n+import software.amazon.awssdk.metrics.MetricCollector;\n+\n+public final class RecordingResponseHandler implements SdkAsyncHttpResponseHandler {", "originalCommit": "4af5ed659b41b421e9e3acb3ea439b064d082226", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjQ0NjMxNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/2016#discussion_r482446316", "bodyText": "Yeah, they are only used in tests.", "author": "zoewangg", "createdAt": "2020-09-02T20:48:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI4MzAyOA=="}], "type": "inlineReview", "revised_code": {"commit": "b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "chunk": "diff --git a/test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java b/test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java\nindex c8bca2fc18..687d6047d7 100644\n--- a/test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java\n+++ b/test/http-client-tests/src/main/java/software/amazon/awssdk/http/RecordingResponseHandler.java\n\n@@ -34,7 +34,6 @@ public final class RecordingResponseHandler implements SdkAsyncHttpResponseHandl\n \n     @Override\n     public void onHeaders(SdkHttpResponse response) {\n-        System.out.println(\"received response\");\n         responses.add(response);\n     }\n \n"}}, {"oid": "b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "message": "Invoke responseHandler#onError when the request future is cancelled", "committedDate": "2020-09-02T20:52:40Z", "type": "commit"}, {"oid": "b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/b84cf3bd10fbb4ce9b74575fd308c0ecf497ef4c", "message": "Invoke responseHandler#onError when the request future is cancelled", "committedDate": "2020-09-02T20:52:40Z", "type": "forcePushed"}]}