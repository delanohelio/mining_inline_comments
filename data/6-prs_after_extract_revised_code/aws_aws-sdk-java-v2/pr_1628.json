{"pr_number": 1628, "pr_title": "Dynamodb-enhanced [preview]: Added operation methods to the  client a\u2026", "pr_createdAt": "2020-01-31T18:23:08Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1628", "timeline": [{"oid": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "url": "https://github.com/aws/aws-sdk-java-v2/commit/86d01628cc2d63b075ae4851496ad4ca6366d2df", "message": "Dynamodb-enhanced [preview]: Added operation methods to the  client and split operations into public requests and internal operations.", "committedDate": "2020-01-31T18:15:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzEzNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623134", "bodyText": "Maybe this should return CompletableFuture<List<TransactGetResultPage>> for consistency. Seems to really poke out seeing it side-by-side here.", "author": "bmaizels", "createdAt": "2020-01-31T18:34:02Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<BatchWriteResult> batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default CompletableFuture<List<UnmappedItem>> transactGetItems(TransactGetItemsEnhancedRequest request) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTc0MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651740", "bodyText": "Agree", "author": "cenedhryn", "createdAt": "2020-01-31T19:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzEzNA=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\nindex e51ed44d4f..2239f87a97 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\n\n@@ -53,7 +53,7 @@ public interface DynamoDbEnhancedAsyncClient {\n         throw new UnsupportedOperationException();\n     }\n \n-    default CompletableFuture<List<UnmappedItem>> transactGetItems(TransactGetItemsEnhancedRequest request) {\n+    default CompletableFuture<List<TransactGetResultPage>> transactGetItems(TransactGetItemsEnhancedRequest request) {\n         throw new UnsupportedOperationException();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzQ1Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623456", "bodyText": "Same comment as previous one regarding the naming of UnmappedItem.", "author": "bmaizels", "createdAt": "2020-01-31T18:34:49Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java", "diffHunk": "@@ -44,6 +44,22 @@\n      */\n     <T> MappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkIterable<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default BatchWriteResult batchWriteItem(BatchWriteItemEnhancedRequest request) {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    default List<UnmappedItem> transactGetItems(TransactGetItemsEnhancedRequest request) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3OTEzMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373679133", "bodyText": "check", "author": "cenedhryn", "createdAt": "2020-01-31T20:49:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzQ1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java\nindex bbea304376..ee43ad093e 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedClient.java\n\n@@ -52,7 +52,7 @@ public interface DynamoDbEnhancedClient {\n         throw new UnsupportedOperationException();\n     }\n \n-    default List<UnmappedItem> transactGetItems(TransactGetItemsEnhancedRequest request) {\n+    default List<TransactGetResultPage> transactGetItems(TransactGetItemsEnhancedRequest request) {\n         throw new UnsupportedOperationException();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzcxNw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373623717", "bodyText": "Can we copy parts of the operation javadocs here as applicable.", "author": "bmaizels", "createdAt": "2020-01-31T18:35:26Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java", "diffHunk": "@@ -47,6 +45,22 @@\n      */\n     <T> AsyncMappedTable<T> table(String tableName, TableSchema<T> tableSchema);\n \n+    default SdkPublisher<BatchGetResultPage> batchGetItem(BatchGetItemEnhancedRequest request) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3ODUxNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373678514", "bodyText": "No, because there aren't any.", "author": "cenedhryn", "createdAt": "2020-01-31T20:47:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMzcxNw=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\nindex e51ed44d4f..2239f87a97 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/DynamoDbEnhancedAsyncClient.java\n\n@@ -53,7 +53,7 @@ public interface DynamoDbEnhancedAsyncClient {\n         throw new UnsupportedOperationException();\n     }\n \n-    default CompletableFuture<List<UnmappedItem>> transactGetItems(TransactGetItemsEnhancedRequest request) {\n+    default CompletableFuture<List<TransactGetResultPage>> transactGetItems(TransactGetItemsEnhancedRequest request) {\n         throw new UnsupportedOperationException();\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373624452", "bodyText": "We should drop this annotation.", "author": "bmaizels", "createdAt": "2020-01-31T18:37:03Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -15,17 +15,29 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.core;\n \n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkInternalApi;\n import software.amazon.awssdk.annotations.ThreadSafe;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactWriteItemsOperation;\n import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n \n @SdkInternalApi\n @ThreadSafe", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTg4Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651887", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:40:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3OTY3Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373679677", "bodyText": "Should we drop it wherever it's used in the enhanced client?", "author": "cenedhryn", "createdAt": "2020-01-31T20:51:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTExOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373695118", "bodyText": "Not necessarily, if it's a class that is likely to be re-used in different ways, and it needs to be threadsafe to be used safely with multiple threads then we should annotate. Just in this instance it seems worthless.", "author": "bmaizels", "createdAt": "2020-01-31T21:32:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDQ1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\nindex b775a16610..ec703278ff 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\n\n@@ -28,7 +28,7 @@ import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWrite\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetItemsEnhancedRequest;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactWriteItemsEnhancedRequest;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.UnmappedItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.TransactGetResultPage;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchGetItemOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.BatchWriteItemOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.TransactGetItemsOperation;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDc0Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373624747", "bodyText": "Nit: extraneous linebreak.", "author": "bmaizels", "createdAt": "2020-01-31T18:37:43Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java", "diffHunk": "@@ -60,6 +91,7 @@ public Builder toBuilder() {\n         return builder().dynamoDbClient(this.dynamoDbClient).extendWith(this.mapperExtension);\n     }\n \n+", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MTk1Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373651952", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNDc0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\nindex b775a16610..ec703278ff 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/core/DefaultDynamoDbEnhancedClient.java\n\n@@ -91,7 +90,6 @@ public final class DefaultDynamoDbEnhancedClient implements DynamoDbEnhancedClie\n         return builder().dynamoDbClient(this.dynamoDbClient).extendWith(this.mapperExtension);\n     }\n \n-\n     @Override\n     public boolean equals(Object o) {\n         if (this == o) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTM4Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373625387", "bodyText": "Looks out of order, maybe place this one next to the other readBatches implementation.", "author": "bmaizels", "createdAt": "2020-01-31T18:39:04Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;\n+            return this;\n+        }\n+\n+        public Builder addReadBatch(ReadBatch readBatch) {\n+            if (readBatches == null) {\n+                readBatches = new ArrayList<>();\n+            }\n+            readBatches.add(readBatch);\n+            return this;\n+        }\n+\n+        public Builder readBatches(ReadBatch... readBatches) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjQ1Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652452", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:41:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTM4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\nindex 96c9713b24..ef92aca9ba 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchGetItemEnhancedRequest {\n \n-    private final Collection<ReadBatch> readBatches;\n+    private final List<ReadBatch> readBatches;\n \n     private BatchGetItemEnhancedRequest(Builder builder) {\n-        this.readBatches = builder.readBatches;\n+        this.readBatches = Collections.unmodifiableList(builder.readBatches);\n+    }\n+\n+    public static BatchGetItemEnhancedRequest create(Collection<ReadBatch> readBatches) {\n+        return builder().readBatches(readBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTg0Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373625847", "bodyText": "I think we should use List here as we should (see other comment below) be controlling what implementation is used here.", "author": "bmaizels", "createdAt": "2020-01-31T18:40:08Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjMyMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652320", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNTg0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\nindex 96c9713b24..ef92aca9ba 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchGetItemEnhancedRequest {\n \n-    private final Collection<ReadBatch> readBatches;\n+    private final List<ReadBatch> readBatches;\n \n     private BatchGetItemEnhancedRequest(Builder builder) {\n-        this.readBatches = builder.readBatches;\n+        this.readBatches = Collections.unmodifiableList(builder.readBatches);\n+    }\n+\n+    public static BatchGetItemEnhancedRequest create(Collection<ReadBatch> readBatches) {\n+        return builder().readBatches(readBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNjIyNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373626224", "bodyText": "This is dangerous. I think we should take a copy of their collection at this point rather than risk mutating it unexpectedly later.\nthis.readBatches = new ArrayList<>(readBatches);", "author": "bmaizels", "createdAt": "2020-01-31T18:40:56Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readBatches(readBatches);\n+    }\n+\n+    public Collection<ReadBatch> readBatches() {\n+        return readBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchGetItemEnhancedRequest that = (BatchGetItemEnhancedRequest) o;\n+\n+        return readBatches != null ? readBatches.equals(that.readBatches) : that.readBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readBatches != null ? readBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<ReadBatch> readBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readBatches(Collection<ReadBatch> readBatches) {\n+            this.readBatches = readBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjM3OQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652379", "bodyText": "yes.", "author": "cenedhryn", "createdAt": "2020-01-31T19:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNjIyNA=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\nindex 96c9713b24..ef92aca9ba 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchGetItemEnhancedRequest {\n \n-    private final Collection<ReadBatch> readBatches;\n+    private final List<ReadBatch> readBatches;\n \n     private BatchGetItemEnhancedRequest(Builder builder) {\n-        this.readBatches = builder.readBatches;\n+        this.readBatches = Collections.unmodifiableList(builder.readBatches);\n+    }\n+\n+    public static BatchGetItemEnhancedRequest create(Collection<ReadBatch> readBatches) {\n+        return builder().readBatches(readBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzMzMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373627333", "bodyText": "I think we should use List here as I have suggested you change the Builder to do the same.", "author": "bmaizels", "createdAt": "2020-01-31T18:43:24Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjA4NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652085", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:40:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzMzMw=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\nindex 96c9713b24..ef92aca9ba 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchGetItemEnhancedRequest {\n \n-    private final Collection<ReadBatch> readBatches;\n+    private final List<ReadBatch> readBatches;\n \n     private BatchGetItemEnhancedRequest(Builder builder) {\n-        this.readBatches = builder.readBatches;\n+        this.readBatches = Collections.unmodifiableList(builder.readBatches);\n+    }\n+\n+    public static BatchGetItemEnhancedRequest create(Collection<ReadBatch> readBatches) {\n+        return builder().readBatches(readBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzY2NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373627664", "bodyText": "Best practice is to render this immutable : this.readBatches = Collections.unmodifiableList(builder.readBatches);", "author": "bmaizels", "createdAt": "2020-01-31T18:44:10Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchGetItemEnhancedRequest {\n+\n+    private final Collection<ReadBatch> readBatches;\n+\n+    private BatchGetItemEnhancedRequest(Builder builder) {\n+        this.readBatches = builder.readBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MjI1Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652252", "bodyText": "good point, will update", "author": "cenedhryn", "createdAt": "2020-01-31T19:40:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyNzY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\nindex 96c9713b24..ef92aca9ba 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchGetItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchGetItemEnhancedRequest {\n \n-    private final Collection<ReadBatch> readBatches;\n+    private final List<ReadBatch> readBatches;\n \n     private BatchGetItemEnhancedRequest(Builder builder) {\n-        this.readBatches = builder.readBatches;\n+        this.readBatches = Collections.unmodifiableList(builder.readBatches);\n+    }\n+\n+    public static BatchGetItemEnhancedRequest create(Collection<ReadBatch> readBatches) {\n+        return builder().readBatches(readBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODAwMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373628001", "bodyText": "Let's use List here.", "author": "bmaizels", "createdAt": "2020-01-31T18:44:55Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQyOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684428", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODAwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\nindex 51558d8d18..47fb546a36 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchWriteItemEnhancedRequest {\n \n-    private final Collection<WriteBatch> writeBatches;\n+    private final List<WriteBatch> writeBatches;\n \n     private BatchWriteItemEnhancedRequest(Builder builder) {\n-        this.writeBatches = builder.writeBatches;\n+        this.writeBatches = Collections.unmodifiableList(builder.writeBatches);\n+    }\n+\n+    public static BatchWriteItemEnhancedRequest create(Collection<WriteBatch> writeBatches) {\n+        return builder().writeBatches(writeBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODEyNQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373628125", "bodyText": "this.writeBatches = Collections.unmodifiableList(builder.writeBatches);", "author": "bmaizels", "createdAt": "2020-01-31T18:45:10Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQ1MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684450", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:04:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyODEyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\nindex 51558d8d18..47fb546a36 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchWriteItemEnhancedRequest {\n \n-    private final Collection<WriteBatch> writeBatches;\n+    private final List<WriteBatch> writeBatches;\n \n     private BatchWriteItemEnhancedRequest(Builder builder) {\n-        this.writeBatches = builder.writeBatches;\n+        this.writeBatches = Collections.unmodifiableList(builder.writeBatches);\n+    }\n+\n+    public static BatchWriteItemEnhancedRequest create(Collection<WriteBatch> writeBatches) {\n+        return builder().writeBatches(writeBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzI1MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373637250", "bodyText": "Can we use List here", "author": "bmaizels", "createdAt": "2020-01-31T19:06:24Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDQ3NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684474", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\nindex 51558d8d18..47fb546a36 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchWriteItemEnhancedRequest {\n \n-    private final Collection<WriteBatch> writeBatches;\n+    private final List<WriteBatch> writeBatches;\n \n     private BatchWriteItemEnhancedRequest(Builder builder) {\n-        this.writeBatches = builder.writeBatches;\n+        this.writeBatches = Collections.unmodifiableList(builder.writeBatches);\n+    }\n+\n+    public static BatchWriteItemEnhancedRequest create(Collection<WriteBatch> writeBatches) {\n+        return builder().writeBatches(writeBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzU1OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373637558", "bodyText": "this.writeBatches = new ArrayList<>(writeBatches);", "author": "bmaizels", "createdAt": "2020-01-31T19:07:10Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class BatchWriteItemEnhancedRequest {\n+\n+    private final Collection<WriteBatch> writeBatches;\n+\n+    private BatchWriteItemEnhancedRequest(Builder builder) {\n+        this.writeBatches = builder.writeBatches;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeBatches(writeBatches);\n+    }\n+\n+    public Collection<WriteBatch> writeBatches() {\n+        return writeBatches;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        BatchWriteItemEnhancedRequest that = (BatchWriteItemEnhancedRequest) o;\n+\n+        return writeBatches != null ? writeBatches.equals(that.writeBatches) : that.writeBatches == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeBatches != null ? writeBatches.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private Collection<WriteBatch> writeBatches;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder writeBatches(Collection<WriteBatch> writeBatches) {\n+            this.writeBatches = writeBatches;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDUwNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684506", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:04:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzNzU1OA=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\nindex 51558d8d18..47fb546a36 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteItemEnhancedRequest.java\n\n@@ -18,15 +18,21 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n @SdkPublicApi\n public class BatchWriteItemEnhancedRequest {\n \n-    private final Collection<WriteBatch> writeBatches;\n+    private final List<WriteBatch> writeBatches;\n \n     private BatchWriteItemEnhancedRequest(Builder builder) {\n-        this.writeBatches = builder.writeBatches;\n+        this.writeBatches = Collections.unmodifiableList(builder.writeBatches);\n+    }\n+\n+    public static BatchWriteItemEnhancedRequest create(Collection<WriteBatch> writeBatches) {\n+        return builder().writeBatches(writeBatches).build();\n     }\n \n     public static Builder builder() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODI2MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373638261", "bodyText": "this.unprocessedRequests = new HashMap<>(unprocessedRequests);", "author": "bmaizels", "createdAt": "2020-01-31T19:08:43Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public <T> List<T> unprocessedPutItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.putRequest() != null)\n+                            .map(WriteRequest::putRequest)\n+                            .map(PutRequest::item)\n+                            .map(item -> readAndTransformSingleItem(item,\n+                                                                    mappedTable.tableSchema(),\n+                                                                    OperationContext.create(mappedTable.tableName()),\n+                                                                    mappedTable.mapperExtension()))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public <T> List<T> unprocessedDeleteItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.deleteRequest() != null)\n+                            .map(WriteRequest::deleteRequest)\n+                            .map(DeleteRequest::key)\n+                            .map(itemMap -> mappedTable.tableSchema().mapToItem(itemMap))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public static final class Builder {\n+        private Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder unprocessedRequests(Map<String, List<WriteRequest>> unprocessedRequests) {\n+            this.unprocessedRequests = unprocessedRequests;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDg3Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684873", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:05:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODI2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\nindex 0b9902176f..8cb493ba91 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n\n@@ -18,6 +18,7 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n \n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODQ3NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373638475", "bodyText": "this.unprocessedRequests = Collections.unmodifiableMap(builder.unprocessedRequests);", "author": "bmaizels", "createdAt": "2020-01-31T19:09:16Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = builder.unprocessedRequests;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4NDkwNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373684904", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:05:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYzODQ3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\nindex 0b9902176f..8cb493ba91 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n\n@@ -18,6 +18,7 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n \n import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDU2NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373640565", "bodyText": "Let's use List here.", "author": "bmaizels", "createdAt": "2020-01-31T19:14:17Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+\n+@SdkPublicApi\n+public class ReadBatch<T> {\n+    private final MappedTableResource<T> mappedTableResource;\n+    private final Collection<BatchableReadOperation> readOperations;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\nindex f33123f818..37504f09dc 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\n\n@@ -15,9 +15,12 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n \n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDg2MQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373640861", "bodyText": "this.readOperations = Collections.unmodifiableList(readOperations);", "author": "bmaizels", "createdAt": "2020-01-31T19:14:58Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+\n+@SdkPublicApi\n+public class ReadBatch<T> {\n+    private final MappedTableResource<T> mappedTableResource;\n+    private final Collection<BatchableReadOperation> readOperations;\n+\n+    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n+        this.mappedTableResource = mappedTableResource;\n+        this.readOperations = readOperations;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4ODU5OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373688598", "bodyText": "ok.", "author": "cenedhryn", "createdAt": "2020-01-31T21:15:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MDg2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\nindex f33123f818..37504f09dc 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java\n\n@@ -15,9 +15,12 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n \n+import java.util.Collections;\n+import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTQyNw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641427", "bodyText": "this.readTransactions = Collections.unmodifiableList(readTransactions);", "author": "bmaizels", "createdAt": "2020-01-31T19:16:10Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactGetItemsEnhancedRequest {\n+\n+    private final List<ReadTransaction> readTransactions;\n+\n+    private TransactGetItemsEnhancedRequest(List<ReadTransaction> readTransactions) {\n+        this.readTransactions = readTransactions;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\nindex 2b6880cec4..d8297a49d0 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\n\n@@ -17,6 +17,8 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTY5NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641695", "bodyText": "this.readTransactions = new ArrayList<>(readTransactions);", "author": "bmaizels", "createdAt": "2020-01-31T19:16:42Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactGetItemsEnhancedRequest {\n+\n+    private final List<ReadTransaction> readTransactions;\n+\n+    private TransactGetItemsEnhancedRequest(List<ReadTransaction> readTransactions) {\n+        this.readTransactions = readTransactions;\n+    }\n+\n+    public static TransactGetItemsEnhancedRequest create(List<ReadTransaction> transactGetRequests) {\n+        return new TransactGetItemsEnhancedRequest(transactGetRequests);\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().readTransactions(readTransactions);\n+    }\n+\n+    public List<ReadTransaction> readTransactions() {\n+        return readTransactions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        TransactGetItemsEnhancedRequest that = (TransactGetItemsEnhancedRequest) o;\n+\n+        return readTransactions != null ? readTransactions.equals(that.readTransactions) : that.readTransactions == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return readTransactions != null ? readTransactions.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private List<ReadTransaction> readTransactions;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder readTransactions(List<ReadTransaction> readTransactions) {\n+            this.readTransactions = readTransactions;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4OTcyMA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373689720", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:18:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTY5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\nindex 2b6880cec4..d8297a49d0 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactGetItemsEnhancedRequest.java\n\n@@ -17,6 +17,8 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTg4Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373641882", "bodyText": "this.writeTransactions = Collections.unmodifiableList(writeTransactions);", "author": "bmaizels", "createdAt": "2020-01-31T19:17:11Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactWriteItemsEnhancedRequest {\n+\n+    private final List<WriteTransaction> writeTransactions;\n+\n+    private TransactWriteItemsEnhancedRequest(List<WriteTransaction> writeTransactions) {\n+        this.writeTransactions = writeTransactions;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MDAxOQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373690019", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T21:18:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MTg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\nindex 80274e51c8..78e1a5288c 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\n\n@@ -17,6 +17,8 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MjA2Mw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373642063", "bodyText": "this.writeTransactions = new ArrayList<>(writeTransactions);", "author": "bmaizels", "createdAt": "2020-01-31T19:17:38Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+\n+@SdkPublicApi\n+public class TransactWriteItemsEnhancedRequest {\n+\n+    private final List<WriteTransaction> writeTransactions;\n+\n+    private TransactWriteItemsEnhancedRequest(List<WriteTransaction> writeTransactions) {\n+        this.writeTransactions = writeTransactions;\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder().writeTransactions(this.writeTransactions);\n+    }\n+\n+    public List<WriteTransaction> writeTransactions() {\n+        return writeTransactions;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (o == null || getClass() != o.getClass()) {\n+            return false;\n+        }\n+\n+        TransactWriteItemsEnhancedRequest that = (TransactWriteItemsEnhancedRequest) o;\n+\n+        return writeTransactions != null ? writeTransactions.equals(that.writeTransactions) : that.writeTransactions == null;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return writeTransactions != null ? writeTransactions.hashCode() : 0;\n+    }\n+\n+    public static final class Builder {\n+        private List<WriteTransaction> writeTransactions;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder writeTransactions(List<WriteTransaction> writeTransactions) {\n+            this.writeTransactions = writeTransactions;", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\nindex 80274e51c8..78e1a5288c 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/TransactWriteItemsEnhancedRequest.java\n\n@@ -17,6 +17,8 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import software.amazon.awssdk.annotations.SdkPublicApi;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373643656", "bodyText": "This can be rewritten to not suck anymore. It was only written this way due to a nuance in Java around raw type erasure, but now you've refactored it that no longer applies. We should just map it straight into requestItems.", "author": "bmaizels", "createdAt": "2020-01-31T19:21:16Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java", "diffHunk": "@@ -15,65 +15,97 @@\n \n package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n \n-import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n+import java.util.function.Function;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n-import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.core.async.SdkPublisher;\n+import software.amazon.awssdk.core.pagination.sync.SdkIterable;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n-import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.PaginatedDatabaseOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchGetResultPage;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.ReadBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchGetItemResponse;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n-@SdkPublicApi\n-public class ReadBatch<T> {\n-    private final MappedTableResource<T> mappedTableResource;\n-    private final Collection<BatchableReadOperation> readOperations;\n+@SdkInternalApi\n+public class BatchGetItemOperation\n+    implements PaginatedDatabaseOperation<BatchGetItemRequest, BatchGetItemResponse, BatchGetResultPage> {\n+\n+    private final BatchGetItemEnhancedRequest request;\n+\n+    private BatchGetItemOperation(BatchGetItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchGetItemOperation create(BatchGetItemEnhancedRequest request) {\n+        return new BatchGetItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchGetItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, KeysAndAttributes> requestItems = new HashMap<>();\n+        request.readBatches().forEach(readBatch -> addReadRequestsToMap(readBatch, requestItems));\n \n-    private ReadBatch(MappedTableResource<T> mappedTableResource, Collection<BatchableReadOperation> readOperations) {\n-        this.mappedTableResource = mappedTableResource;\n-        this.readOperations = readOperations;\n+        return BatchGetItemRequest.builder()\n+                                  .requestItems(Collections.unmodifiableMap(requestItems))\n+                                  .build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      Collection<BatchableReadOperation> readOperations) {\n-        return new ReadBatch<>(mappedTableResource, readOperations);\n+    @Override\n+    public BatchGetResultPage transformResponse(BatchGetItemResponse response, MapperExtension mapperExtension) {\n+        return BatchGetResultPage.builder().batchGetItemResponse(response).mapperExtension(mapperExtension).build();\n     }\n \n-    public static <T> ReadBatch<T> create(MappedTableResource<T> mappedTableResource,\n-                                      BatchableReadOperation... readOperations) {\n-        return new ReadBatch<>(mappedTableResource, Arrays.asList(readOperations));\n+    @Override\n+    public Function<BatchGetItemRequest, SdkIterable<BatchGetItemResponse>> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchGetItemPaginator;\n+    }\n+\n+    @Override\n+    public Function<BatchGetItemRequest, SdkPublisher<BatchGetItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchGetItemPaginator;\n     }\n \n-    void addReadRequestsToMap(Map<String, KeysAndAttributes> readRequestMap) {\n-        KeysAndAttributes newKeysAndAttributes = generateKeysAndAttributes();\n-        KeysAndAttributes existingKeysAndAttributes = readRequestMap.get(tableName());\n+    private void addReadRequestsToMap(ReadBatch readBatch, Map<String, KeysAndAttributes> readRequestMap) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1Mjg4Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373652886", "bodyText": "ok", "author": "cenedhryn", "createdAt": "2020-01-31T19:42:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NTc5MA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375455790", "bodyText": "What did we ultimately decide to do about this?", "author": "bmaizels", "createdAt": "2020-02-05T19:18:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0MzY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java\nindex 5f1398bce5..7030a7d389 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchGetItemOperation.java\n\n@@ -104,7 +104,7 @@ public class BatchGetItemOperation\n     // for any given table. The logic here uses the setting of the first getItem in a table batch and then checks\n     // the rest are identical or throws an exception.\n     private KeysAndAttributes generateKeysAndAttributes(ReadBatch readBatch) {\n-        Collection<BatchableReadOperation> readOperations = readBatch.readOperations();\n+        Collection<BatchableReadOperation> readOperations = readOperations(readBatch);\n \n         AtomicReference<Boolean> consistentRead = new AtomicReference<>();\n         AtomicBoolean firstRecord = new AtomicBoolean(true);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NDcwNg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373644706", "bodyText": "The type erasure problem no longer exists due to this refactor, therefore we should be able to do a straight map into WriteRequests", "author": "bmaizels", "createdAt": "2020-01-31T19:23:47Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkInternalApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DatabaseOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MapperExtension;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteResult;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.WriteBatch;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbAsyncClient;\n+import software.amazon.awssdk.services.dynamodb.DynamoDbClient;\n+import software.amazon.awssdk.services.dynamodb.model.BatchWriteItemRequest;\n+import software.amazon.awssdk.services.dynamodb.model.BatchWriteItemResponse;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkInternalApi\n+public class BatchWriteItemOperation implements DatabaseOperation<BatchWriteItemRequest,\n+                                 BatchWriteItemResponse, BatchWriteResult> {\n+\n+    private final BatchWriteItemEnhancedRequest request;\n+\n+    private BatchWriteItemOperation(BatchWriteItemEnhancedRequest request) {\n+        this.request = request;\n+    }\n+\n+    public static BatchWriteItemOperation create(BatchWriteItemEnhancedRequest request) {\n+        return new BatchWriteItemOperation(request);\n+    }\n+\n+    @Override\n+    public BatchWriteItemRequest generateRequest(MapperExtension mapperExtension) {\n+        Map<String, Collection<WriteRequest>> requestItems = new HashMap<>();\n+        request.writeBatches().forEach(writeBatch -> addWriteRequestsToMap(writeBatch, requestItems));\n+        return BatchWriteItemRequest.builder()\n+                                    .requestItems(Collections.unmodifiableMap(requestItems))\n+                                    .build();\n+    }\n+\n+    @Override\n+    public BatchWriteResult transformResponse(BatchWriteItemResponse response, MapperExtension mapperExtension) {\n+        return BatchWriteResult.builder().unprocessedRequests(response.unprocessedItems()).build();\n+    }\n+\n+    @Override\n+    public Function<BatchWriteItemRequest, BatchWriteItemResponse> serviceCall(DynamoDbClient dynamoDbClient) {\n+        return dynamoDbClient::batchWriteItem;\n+    }\n+\n+    @Override\n+    public Function<BatchWriteItemRequest, CompletableFuture<BatchWriteItemResponse>> asyncServiceCall(\n+        DynamoDbAsyncClient dynamoDbAsyncClient) {\n+\n+        return dynamoDbAsyncClient::batchWriteItem;\n+    }\n+\n+    // Due to raw-type erasure, it's necessary to pass a map in to be mutated rather than try and extract the write\n+    // requests which would be more straight forward but Collection<WriteRequest> becomes Collection when you try and\n+    // exfiltrate the objects from a raw-typed WriteBatch.\n+    private void addWriteRequestsToMap(WriteBatch writeBatch, Map<String, Collection<WriteRequest>> writeRequestMap) {", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java\nindex bc52ab6488..20372e1dd4 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/operations/BatchWriteItemOperation.java\n\n@@ -83,7 +83,7 @@ public class BatchWriteItemOperation implements DatabaseOperation<BatchWriteItem\n     // exfiltrate the objects from a raw-typed WriteBatch.\n     private void addWriteRequestsToMap(WriteBatch writeBatch, Map<String, Collection<WriteRequest>> writeRequestMap) {\n         MappedTableResource mappedTableResource = writeBatch.mappedTableResource();\n-        Collection<BatchableWriteOperation> writeBatchOperations = writeBatch.writeOperations();\n+        Collection<BatchableWriteOperation> writeBatchOperations = writeBatchOperations(writeBatch);\n \n         Collection<WriteRequest> writeRequestsForTable = writeRequestMap\n             .computeIfAbsent(mappedTableResource.tableName(), ignored -> new ArrayList<>());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NjU2NQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373646565", "bodyText": "Did we get rid of create? I think we agreed that every enhanced request should have a create(...) method that made the most sense for the most likely/simply use-cases. Eg: PutItemEnhancedRequest.create(myItem);", "author": "bmaizels", "createdAt": "2020-01-31T19:28:00Z", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/AsyncBatchWriteItemOperationTest.java", "diffHunk": "@@ -187,7 +187,10 @@ public void singlePut() {\n         List<WriteTransaction> writeTransactions =\n             singletonList(WriteTransaction.create(mappedTable1, PutItem.create(RECORDS_1.get(0))));\n \n-        enhancedAsyncClient.execute(TransactWriteItems.create(writeTransactions)).join();", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MzE0Mg==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373693142", "bodyText": "I think that one went out the window for 3 of the 4 operations. I will put it back in.", "author": "cenedhryn", "createdAt": "2020-01-31T21:27:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NjU2NQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NzcxOA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373647718", "bodyText": "execute?", "author": "bmaizels", "createdAt": "2020-01-31T19:30:31Z", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/functionaltests/BatchWriteItemOperationTest.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.functionaltests;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.AttributeValues.numberValue;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.AttributeTags.primaryPartitionKey;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.integerNumberAttribute;\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.Attributes.stringAttribute;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.DynamoDbEnhancedClient;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.Key;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableSchema;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.BatchWriteItemEnhancedRequest;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.model.WriteBatch;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.CreateTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.DeleteItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.staticmapper.StaticTableSchema;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteTableRequest;\n+\n+public class BatchWriteItemOperationTest extends LocalDynamoDbSyncTestBase {\n+    private static class Record1 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record1 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record1 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record1 record1 = (Record1) o;\n+            return Objects.equals(id, record1.id) &&\n+                   Objects.equals(attribute, record1.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static class Record2 {\n+        private Integer id;\n+        private String attribute;\n+\n+        private Integer getId() {\n+            return id;\n+        }\n+\n+        private Record2 setId(Integer id) {\n+            this.id = id;\n+            return this;\n+        }\n+\n+        private String getAttribute() {\n+            return attribute;\n+        }\n+\n+        private Record2 setAttribute(String attribute) {\n+            this.attribute = attribute;\n+            return this;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            Record2 record2 = (Record2) o;\n+            return Objects.equals(id, record2.id) &&\n+                   Objects.equals(attribute, record2.attribute);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Objects.hash(id, attribute);\n+        }\n+    }\n+\n+    private static final TableSchema<Record1> TABLE_SCHEMA_1 =\n+        StaticTableSchema.builder(Record1.class)\n+                         .newItemSupplier(Record1::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_1\", Record1::getId, Record1::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record1::getAttribute, Record1::setAttribute))\n+                         .build();\n+\n+    private static final TableSchema<Record2> TABLE_SCHEMA_2 =\n+        StaticTableSchema.builder(Record2.class)\n+                         .newItemSupplier(Record2::new)\n+                         .attributes(\n+                             integerNumberAttribute(\"id_2\", Record2::getId, Record2::setId).as(primaryPartitionKey()),\n+                             stringAttribute(\"attribute\", Record2::getAttribute, Record2::setAttribute))\n+                         .build();\n+\n+    private DynamoDbEnhancedClient enhancedClient = DynamoDbEnhancedClient.builder()\n+                                                                          .dynamoDbClient(getDynamoDbClient())\n+                                                                          .build();\n+\n+    private MappedTable<Record1> mappedTable1 = enhancedClient.table(getConcreteTableName(\"table-name-1\"), TABLE_SCHEMA_1);\n+    private MappedTable<Record2> mappedTable2 = enhancedClient.table(getConcreteTableName(\"table-name-2\"), TABLE_SCHEMA_2);\n+\n+    private static final List<Record1> RECORDS_1 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record1().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    private static final List<Record2> RECORDS_2 =\n+        IntStream.range(0, 2)\n+                 .mapToObj(i -> new Record2().setId(i).setAttribute(Integer.toString(i)))\n+                 .collect(Collectors.toList());\n+\n+    @Before\n+    public void createTable() {\n+        mappedTable1.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+        mappedTable2.execute(CreateTable.create(getDefaultProvisionedThroughput()));\n+    }\n+\n+    @After\n+    public void deleteTable() {\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-1\"))\n+                                                          .build());\n+        getDynamoDbClient().deleteTable(DeleteTableRequest.builder()\n+                                                          .tableName(getConcreteTableName(\"table-name-2\"))\n+                                                          .build());\n+    }\n+\n+    @Test\n+    public void singlePut() {\n+        BatchWriteItemEnhancedRequest batchWriteItemEnhancedRequest =\n+            BatchWriteItemEnhancedRequest.builder()\n+                                         .addWriteBatch(WriteBatch.create(mappedTable1, PutItem.create(RECORDS_1.get(0))))\n+                                         .build();\n+\n+        enhancedClient.batchWriteItem(batchWriteItemEnhancedRequest);\n+\n+        Record1 record = mappedTable1.execute(GetItem.create(Key.create(numberValue(0))));", "originalCommit": "86d01628cc2d63b075ae4851496ad4ca6366d2df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTUyNQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r373695525", "bodyText": "oh right we haven't done GetItem yet I remember!", "author": "bmaizels", "createdAt": "2020-01-31T21:33:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY0NzcxOA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "url": "https://github.com/aws/aws-sdk-java-v2/commit/9fae4158cad5632d60b469b7c7cf376b6e4f2f4c", "message": "Dynamodb-enhanced [preview]: Transforms constructor collections into unmodifiable ones.", "committedDate": "2020-01-31T23:16:33Z", "type": "commit"}, {"oid": "6c12cf458c2cf3e3766321ec142e2a2b18683389", "url": "https://github.com/aws/aws-sdk-java-v2/commit/6c12cf458c2cf3e3766321ec142e2a2b18683389", "message": "Dynamodb-enhanced [preview]: Moves generate request back to typed classes and updates README.", "committedDate": "2020-02-04T16:48:16Z", "type": "commit"}, {"oid": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "url": "https://github.com/aws/aws-sdk-java-v2/commit/359d9fa57bdf7edc3059e6612473c40bd89f2908", "message": "Dynamodb-enhanced [preview]: Add builder() and toBuilder() methods to ReadBatch, adds missing types to builder().", "committedDate": "2020-02-04T17:25:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MDQyMw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375450423", "bodyText": "I think we should take an immutable copy of the list value for each key.", "author": "bmaizels", "createdAt": "2020-02-05T19:07:53Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTable;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.services.dynamodb.model.DeleteRequest;\n+import software.amazon.awssdk.services.dynamodb.model.PutRequest;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+@SdkPublicApi\n+public class BatchWriteResult {\n+    private final Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+    private BatchWriteResult(Builder builder) {\n+        this.unprocessedRequests = Collections.unmodifiableMap(builder.unprocessedRequests);\n+    }\n+\n+    public static Builder builder() {\n+        return new Builder();\n+    }\n+\n+    public <T> List<T> unprocessedPutItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.putRequest() != null)\n+                            .map(WriteRequest::putRequest)\n+                            .map(PutRequest::item)\n+                            .map(item -> readAndTransformSingleItem(item,\n+                                                                    mappedTable.tableSchema(),\n+                                                                    OperationContext.create(mappedTable.tableName()),\n+                                                                    mappedTable.mapperExtension()))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public <T> List<T> unprocessedDeleteItemsForTable(MappedTable<T> mappedTable) {\n+        List<WriteRequest> writeRequests =\n+            unprocessedRequests.getOrDefault(mappedTable.tableName(),\n+                                             Collections.emptyList());\n+\n+        return writeRequests.stream()\n+                            .filter(writeRequest -> writeRequest.deleteRequest() != null)\n+                            .map(WriteRequest::deleteRequest)\n+                            .map(DeleteRequest::key)\n+                            .map(itemMap -> mappedTable.tableSchema().mapToItem(itemMap))\n+                            .collect(Collectors.toList());\n+    }\n+\n+    public static final class Builder {\n+        private Map<String, List<WriteRequest>> unprocessedRequests;\n+\n+        private Builder() {\n+        }\n+\n+        public Builder unprocessedRequests(Map<String, List<WriteRequest>> unprocessedRequests) {\n+            this.unprocessedRequests = new HashMap<>(unprocessedRequests);", "originalCommit": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "977fe5cbf7c7bc22b8f6e7dac9838e015ef03537", "chunk": "diff --git a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\nindex 8cb493ba91..bb26968cb9 100644\n--- a/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n+++ b/services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/BatchWriteResult.java\n\n@@ -18,7 +18,6 @@ package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n import static software.amazon.awssdk.extensions.dynamodb.mappingclient.core.Utils.readAndTransformSingleItem;\n \n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375451829", "bodyText": "Can we update this to builder style?", "author": "bmaizels", "createdAt": "2020-02-05T19:10:48Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadBatch.java", "diffHunk": "@@ -13,67 +13,87 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicReference;\n import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableReadOperation;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TableMetadata;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.AttributeValue;\n import software.amazon.awssdk.services.dynamodb.model.KeysAndAttributes;\n \n+/**\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link BatchGetItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadBatch.create(myTable, putItem(myItem));\n+ * ReadBatch.createf(myTable, deleteItem(Key.create(stringValue(\"id123\"))));", "originalCommit": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MjIxMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375452211", "bodyText": "Create needs to go away in fact, it doesn't have a place in the new order. Since we have a builder in this version not sure there's any justification to delay that.", "author": "bmaizels", "createdAt": "2020-02-05T19:11:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ2MDkyNA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375460924", "bodyText": "I thought we had said there would be both a builder and a create, but perhaps that was only for the requests?", "author": "cenedhryn", "createdAt": "2020-02-05T19:27:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ2NTc0Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375465746", "bodyText": "Since one of the main drivers for removing the create is the still-to-come atomic operation split this change is deferred.", "author": "cenedhryn", "createdAt": "2020-02-05T19:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MTgyOQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1MzIxMQ==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375453211", "bodyText": "Can we change this to builder style and get rid of create?", "author": "bmaizels", "createdAt": "2020-02-05T19:13:21Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/ReadTransaction.java", "diffHunk": "@@ -13,28 +13,49 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TransactableReadOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.GetItem;\n import software.amazon.awssdk.services.dynamodb.model.TransactGetItem;\n \n+/**\n+ * Encapsulates a single read transaction that can form a list of transactions that go into a\n+ * {@link TransactGetItemsEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * ReadTransaction.create(table1, GetItem.create(Key.create(stringValue(\"id123\"))));", "originalCommit": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1Mzk1Nw==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375453957", "bodyText": "Can we switch this to builder style and remove create implementation?", "author": "bmaizels", "createdAt": "2020-02-05T19:14:46Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteBatch.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Copyright 2010-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import software.amazon.awssdk.annotations.SdkPublicApi;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.BatchableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n+import software.amazon.awssdk.services.dynamodb.model.WriteRequest;\n+\n+/**\n+ * Encapsulates a single write batch that can form a list of write batches that go into a {@link BatchWriteItemEnhancedRequest}.\n+ * Example:\n+ *\n+ * {@code\n+ * WriteBatch.create(myTable, putItem.create(myItem));", "originalCommit": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ1NTA5Ng==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1628#discussion_r375455096", "bodyText": "Can we switch this to builder style and remove create implementation? (I don't think it has a future).", "author": "bmaizels", "createdAt": "2020-02-05T19:16:52Z", "path": "services-custom/dynamodb-enhanced/src/main/java/software/amazon/awssdk/extensions/dynamodb/mappingclient/model/WriteTransaction.java", "diffHunk": "@@ -13,21 +13,23 @@\n  * permissions and limitations under the License.\n  */\n \n-package software.amazon.awssdk.extensions.dynamodb.mappingclient.operations;\n+package software.amazon.awssdk.extensions.dynamodb.mappingclient.model;\n \n import software.amazon.awssdk.annotations.SdkPublicApi;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.MappedTableResource;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.OperationContext;\n import software.amazon.awssdk.extensions.dynamodb.mappingclient.TransactableWriteOperation;\n+import software.amazon.awssdk.extensions.dynamodb.mappingclient.operations.PutItem;\n import software.amazon.awssdk.services.dynamodb.model.TransactWriteItem;\n \n /**\n- * Encapsulates a single write transaction that can form a list of transactions that go into a TransactWriteItems\n- * operation. Example:\n+ * Encapsulates a single write transaction that can form a list of transactions that go into a\n+ * {@link TransactWriteItemsEnhancedRequest}.\n+ * Example:\n  *\n  * {@code\n- * WriteTransaction.of(myTable, putItem(myItem));\n- * WriteTransaction.of(myTable, deleteItem(Key.of(stringValue(\"id123\"))));\n+ * WriteTransaction.create(myTable, putItem.create(myItem));", "originalCommit": "359d9fa57bdf7edc3059e6612473c40bd89f2908", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "977fe5cbf7c7bc22b8f6e7dac9838e015ef03537", "url": "https://github.com/aws/aws-sdk-java-v2/commit/977fe5cbf7c7bc22b8f6e7dac9838e015ef03537", "message": "Dynamodb-enhanced [preview]: Removed references to internal classes in README.", "committedDate": "2020-02-05T20:26:59Z", "type": "commit"}, {"oid": "a04a9b21fd88636efdacb04f12b6508bf80b0fb7", "url": "https://github.com/aws/aws-sdk-java-v2/commit/a04a9b21fd88636efdacb04f12b6508bf80b0fb7", "message": "Merge branch 'master' into salande/ddbmapper-client-op-split", "committedDate": "2020-02-05T21:06:35Z", "type": "commit"}]}