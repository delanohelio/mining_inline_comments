{"pr_number": 794, "pr_title": "JENA-1960: Clean up Fuseki dispatch", "pr_createdAt": "2020-09-09T20:02:06Z", "pr_url": "https://github.com/apache/jena/pull/794", "timeline": [{"oid": "8fc0dc5e5ba73b98d22f86f055bcb90bf9b963ef", "url": "https://github.com/apache/jena/commit/8fc0dc5e5ba73b98d22f86f055bcb90bf9b963ef", "message": "JENA-1961: Support /$/metrics", "committedDate": "2020-09-09T18:44:29Z", "type": "commit"}, {"oid": "6a73cdea8d51f7ff501136c0beb9f727bd533b42", "url": "https://github.com/apache/jena/commit/6a73cdea8d51f7ff501136c0beb9f727bd533b42", "message": "Clean up", "committedDate": "2020-09-09T18:44:40Z", "type": "commit"}, {"oid": "82878bd4dbd4b9679c7988851d334f6281dac912", "url": "https://github.com/apache/jena/commit/82878bd4dbd4b9679c7988851d334f6281dac912", "message": "JENA-1960: Legacy mode for old style endpoints during server build.", "committedDate": "2020-09-09T20:01:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk0NzI0NA==", "url": "https://github.com/apache/jena/pull/794#discussion_r485947244", "bodyText": "\"an endpoint\", and s/9endpoint/(endpoint.", "author": "kinow", "createdAt": "2020-09-09T22:03:16Z", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java", "diffHunk": "@@ -455,17 +456,54 @@ private static DataService buildDataService(Resource fusekiService, DatasetDescr\n         accEndpointOldStyle(endpoints1, Operation.GSP_R,    fusekiService,  pServiceReadGraphStoreEP);\n         accEndpointOldStyle(endpoints1, Operation.GSP_RW,   fusekiService,  pServiceReadWriteGraphStoreEP);\n \n+        // ---- Legacy for old style: a request wouls also try the dataset (i.e. no endpoint name).\n+        // If \"sparql\" then allow /dataset?query=\n+        // Instead, for old style declarations, add new endpoints to put on the dataset\n+        // Only complication is that authorization is the AND (all say \"yes\") of named service authorization.\n+        {\n+            Collection<Endpoint> endpointsCompat = oldStyleCompat(dataService, endpoints1);\n+            endpointsCompat.forEach(dataService::addEndpoint);\n+        }\n+        endpoints1.forEach(dataService::addEndpoint);\n+\n         // New (2019) style\n         // fuseki:endpoint [ fuseki:operation fuseki:query ; fuseki:name \"\" ; fuseki:allowedUsers (....) ] ;\n         //   and more.\n-        accFusekiEndpoints(endpoints2, fusekiService, dsDescMap);\n \n-        endpoints1.forEach(dataService::addEndpoint);\n+        accFusekiEndpoints(endpoints2, fusekiService, dsDescMap);\n         // This will overwrite old style entries of the same fuseki:name.\n         endpoints2.forEach(dataService::addEndpoint);\n+\n         return dataService;\n     }\n \n+    /**\n+     *  Old style compatibility.\n+     *  For each endpoint in \"endpoints1\", ensure there is a endpoint on the dataset 9endpoint name \"\") itself.", "originalCommit": "c4c5d8bd447a04519745e38519a26e2d698cfd8c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "506a18849c82570e0fa998e1ea58af8fe0c781d9", "chunk": "diff --git a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\nindex 20ca6b6f21..b11762818f 100644\n--- a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\n+++ b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\n\n@@ -479,7 +479,7 @@ public class FusekiConfig {\n \n     /**\n      *  Old style compatibility.\n-     *  For each endpoint in \"endpoints1\", ensure there is a endpoint on the dataset 9endpoint name \"\") itself.\n+     *  For each endpoint in \"endpoints1\", ensure there is an endpoint on the dataset (endpoint name \"\") itself.\n      *  Combine the authentication as \"AND\" of named endpoints authentication.\n      */\n     private static Collection<Endpoint> oldStyleCompat(DataService dataService, Set<Endpoint> endpoints1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MDY0MA==", "url": "https://github.com/apache/jena/pull/794#discussion_r486170640", "bodyText": "additional ?", "author": "rvesse", "createdAt": "2020-09-10T08:46:06Z", "path": "jena-arq/src/main/java/org/apache/jena/sparql/core/assembler/AssemblerUtils.java", "diffHunk": "@@ -77,7 +79,7 @@ static public void registerModel(Resource r, Assembler a) {\n         register(ConstAssembler.general(), r, a, JA.Model) ;\n     }\n \n-    /** Register an addition assembler */  \n+    /** Register an addition assembler */", "originalCommit": "c4c5d8bd447a04519745e38519a26e2d698cfd8c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "chunk": "diff --git a/jena-arq/src/main/java/org/apache/jena/sparql/core/assembler/AssemblerUtils.java b/jena-arq/src/main/java/org/apache/jena/sparql/core/assembler/AssemblerUtils.java\nindex 0511dbb084..d63b279548 100644\n--- a/jena-arq/src/main/java/org/apache/jena/sparql/core/assembler/AssemblerUtils.java\n+++ b/jena-arq/src/main/java/org/apache/jena/sparql/core/assembler/AssemblerUtils.java\n\n@@ -79,7 +79,7 @@ public class AssemblerUtils\n         register(ConstAssembler.general(), r, a, JA.Model) ;\n     }\n \n-    /** Register an addition assembler */\n+    /** Register an additional assembler */\n     static public void register(AssemblerGroup g, Resource r, Assembler a, Resource superType) {\n         registerAssembler(g, r, a) ;\n         if ( superType != null && ! superType.equals(r) ) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MTEzMA==", "url": "https://github.com/apache/jena/pull/794#discussion_r486171130", "bodyText": "wouls -> would", "author": "rvesse", "createdAt": "2020-09-10T08:46:53Z", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java", "diffHunk": "@@ -455,17 +456,54 @@ private static DataService buildDataService(Resource fusekiService, DatasetDescr\n         accEndpointOldStyle(endpoints1, Operation.GSP_R,    fusekiService,  pServiceReadGraphStoreEP);\n         accEndpointOldStyle(endpoints1, Operation.GSP_RW,   fusekiService,  pServiceReadWriteGraphStoreEP);\n \n+        // ---- Legacy for old style: a request wouls also try the dataset (i.e. no endpoint name).", "originalCommit": "c4c5d8bd447a04519745e38519a26e2d698cfd8c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "506a18849c82570e0fa998e1ea58af8fe0c781d9", "chunk": "diff --git a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\nindex 20ca6b6f21..b11762818f 100644\n--- a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\n+++ b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/build/FusekiConfig.java\n\n@@ -479,7 +479,7 @@ public class FusekiConfig {\n \n     /**\n      *  Old style compatibility.\n-     *  For each endpoint in \"endpoints1\", ensure there is a endpoint on the dataset 9endpoint name \"\") itself.\n+     *  For each endpoint in \"endpoints1\", ensure there is an endpoint on the dataset (endpoint name \"\") itself.\n      *  Combine the authentication as \"AND\" of named endpoints authentication.\n      */\n     private static Collection<Endpoint> oldStyleCompat(DataService dataService, Set<Endpoint> endpoints1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MjI0OA==", "url": "https://github.com/apache/jena/pull/794#discussion_r486172248", "bodyText": "Does -> Goes", "author": "rvesse", "createdAt": "2020-09-10T08:48:43Z", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java", "diffHunk": "@@ -144,19 +146,16 @@ private static ActionProcessor chooseProcessor(HttpAction action) {\n \n         // ---- Determine Endpoint.\n         String endpointName = mapRequestToEndpointName(action, dataAccessPoint);\n+        // Main step of choosing the endpoint for the dispatch of the request.\n+        // An endpoint is a (name, operation).\n+        // There may be multiple operations for an endpointName of this data service.\n \n         Endpoint endpoint = chooseEndpoint(action, dataService, endpointName);\n-        if ( endpoint == null ) {\n-            if ( isEmpty(endpointName) )\n-                ServletOps.errorBadRequest(\"No operation for request: \"+action.getActionURI());\n-            else {\n-                // No dispatch - the filter passes these through if the ActionProcessor is null.\n-                return null;\n-                // If this is used, resources (servlets, sttaic files) under \"/dataset/\" are not accessible.\n-                //ServletOps.errorNotFound(\"No endpoint: \"+action.getActionURI());\n-            }\n+        if ( endpoint == null )\n+            // Named service, no such endpoint.\n+            // Allows for resources under /dataset/\n+            // Does to Jetty's default handling (404 for GET, 405 other methods).", "originalCommit": "c4c5d8bd447a04519745e38519a26e2d698cfd8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwMzc5MA==", "url": "https://github.com/apache/jena/pull/794#discussion_r486203790", "bodyText": "This is actually out of date. This PR also changes the default handling of this case, replacing the Jetty default handling because Jetty is different to other servers.", "author": "afs", "createdAt": "2020-09-10T09:39:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MjI0OA=="}], "type": "inlineReview", "revised_code": {"commit": "9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "chunk": "diff --git a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\nindex 5efc66fabd..5d3cd21679 100644\n--- a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\n+++ b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\n\n@@ -152,9 +152,9 @@ public class Dispatcher {\n \n         Endpoint endpoint = chooseEndpoint(action, dataService, endpointName);\n         if ( endpoint == null )\n-            // Named service, no such endpoint.\n+            // Includes named service, no such endpoint.\n             // Allows for resources under /dataset/\n-            // Does to Jetty's default handling (404 for GET, 405 other methods).\n+            // The request will pass on down the filter/servlet chain.\n             return null;\n \n         Operation operation = endpoint.getOperation();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MjkyOQ==", "url": "https://github.com/apache/jena/pull/794#discussion_r486172929", "bodyText": "Any particular reason to lock things down to private ?", "author": "rvesse", "createdAt": "2020-09-10T08:49:44Z", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java", "diffHunk": "@@ -203,151 +190,91 @@ private static ActionProcessor chooseProcessor(HttpAction action) {\n         return processor;\n     }\n \n-    /**\n-     * Map request to operation name.\n-     * Returns the service name (the part after the \"/\" of the dataset part) or \"\".\n-     */\n-    protected static String mapRequestToEndpointName(HttpAction action, DataAccessPoint dataAccessPoint) {\n-        return ActionLib.mapRequestToEndpointName(action, dataAccessPoint);\n-    }\n \n-    // Find the endpoints for an operation.\n-    // This is GSP_R/GSP_RW aware.\n-    // If asked for GSP_R and there are no endpoints for GSP_R, try GSP_RW.\n-    private static Collection<Endpoint> getEndpoints(DataService dataService, Operation operation) {\n-        Collection<Endpoint> x = dataService.getEndpoints(operation);\n-        if ( x == null || x.isEmpty() ) {\n-            if ( operation == GSP_R )\n-                x = dataService.getEndpoints(GSP_RW);\n-        }\n-        return x;\n-    }\n \n-    /**\n-     * Choose an endpoint. This can be with or without endpointName.\n-     * If there is no endpoint and the action is on the data service itself (unnamed endpoint)\n-     * look for a named endpoint that supplies the operation.\n-     */\n-    private static Endpoint chooseEndpoint(HttpAction action, DataService dataService, String endpointName) {\n-        try {\n-            Endpoint ep = chooseEndpointNoLegacy(action, dataService, endpointName);\n-            if ( ep != null )\n-                return ep;\n-            // No dispatch so far.\n-\n-            if ( ! isEmpty(endpointName) )\n-                return ep;\n-            // [DISPATCH LEGACY]\n-\n-            // When it is a unnamed service request (operation on the dataset) and there\n-            // is no match, search the named services.\n-            Operation operation = chooseOperation(action);\n-            // Search for an endpoint that provides the operation.\n-            // No guarantee it has the access controls for the operation\n-            // but in this case, access control will validate against all possible endpoints.\n-            ep = findEndpointForOperation(action, dataService, operation, true);\n-            return ep;\n-        } catch (ActionErrorException ex) {\n-            throw ex;\n-        } catch (RuntimeException ex) {\n-            // Example: Jetty throws BadMessageException when it is an HTML form and it is too big.\n-            ServletOps.errorBadRequest(ex.getMessage());\n-            return null;\n-        }\n-    }\n+//    // Find the endpoints for an operation.\n+//    // This is GSP_R/GSP_RW aware.\n+//    // If asked for GSP_R and there are no endpoints for GSP_R, try GSP_RW.\n+//    private static Collection<Endpoint> getEndpoints(DataService dataService, Operation operation) {\n+//        Collection<Endpoint> x = dataService.getEndpoints(operation);\n+//        if ( x == null || x.isEmpty() ) {\n+//            if ( operation == GSP_R ) // [GSP Promote]\n+//                x = dataService.getEndpoints(GSP_RW);\n+//        }\n+//        return x;\n+//    }\n \n     /**\n      * Choose an endpoint.\n+     * An endpoint is a name and an operation.\n      * <ul>\n      * <li>Look by service name to get the EndpointSet</li>\n-     * <li>If empty set, return null.</li>\n+     * <li>If empty set, respond with error</li>\n      * <li>If there is only one choice, return that (may even be the wrong operation\n-     *       - processor implmentations must be defensive).</li>\n+     *       - processor implementations must be defensive).</li>\n      * <li>If multiple choices, classify the operation\n      *     (includes custom content-type) and look up by operation.</li>\n-     * <li>Return a match wit a r\n+     * <li>If not suitable, respond with error\n+     * <li>Return an endpoint.\n      * </ul>\n+     * The endpoint chosen may not be suitable, the operation must do checking.\n      */\n-    private static Endpoint chooseEndpointNoLegacy(HttpAction action, DataService dataService, String endpointName) {\n+    private static Endpoint chooseEndpoint(HttpAction action, DataService dataService, String endpointName) {\n         EndpointSet epSet = isEmpty(endpointName) ? dataService.getEndpointSet() : dataService.getEndpointSet(endpointName);\n-\n-        if ( epSet == null || epSet.isEmpty() )\n+        if ( epSet == null || epSet.isEmpty() ) {\n             // No matches by name.\n-            return null;\n+            if ( ! StringUtils.isAnyEmpty(endpointName) )\n+                // There was a service name, not found.\n+                // But it may be a URL for static resource.\n+                return null;\n+//                // No service endpoint so 404.\n+//                ServletOps.errorNotFound();\n+            // Dataset URL - \"exists\" (even if no services) so 404 is wrong.\n+            ServletOps.errorBadRequest(\"No endpoint for request\");\n+            return null; // Unreachable.\n+        }\n \n         // If there is one endpoint, dispatch there directly.\n         Endpoint ep = epSet.getExactlyOne();\n         if ( ep != null )\n+            // Single dispatch, may not be valid.\n             return ep;\n         // No single direct dispatch. Multiple choices (different operation, same endpoint name)\n         // Work out which operation we are looking for.\n         Operation operation = chooseOperation(action);\n         ep = epSet.get(operation);\n-        // This also happens in findEndpointForOperation\n-        // If a GSP-R request, try for GSP-RW\n-        if ( ep == null && Operation.GSP_R.equals(operation) )\n-            ep = epSet.get(Operation.GSP_RW);\n-        return ep;\n-    }\n-\n-    /**\n-     *  Find an endpoint for an operation.\n-     *  This searches all endpoints of a {@link DataService} that provide the {@link Operation}.\n-     *  This understands that GSP_RW can service GSP_R.\n-     *  Used for legacy dispatch.\n-     */\n-    private static Endpoint findEndpointForOperation(HttpAction action, DataService dataService, Operation operation, boolean preferUnnamed) {\n-        Endpoint ep = findEndpointForOperationExact(dataService, operation, preferUnnamed);\n-        if ( ep != null )\n-            return ep;\n-        // Try to find \"R\" functionality from an RW.\n-        if ( GSP_R.equals(operation) )\n-            return findEndpointForOperationExact(dataService, GSP_RW, preferUnnamed);\n-        // Instead of 404, return 405 if asked for RW but only R available.\n-        if ( GSP_RW.equals(operation) && dataService.hasOperation(GSP_R) )\n-            ServletOps.errorMethodNotAllowed(action.getMethod());\n-        return null;\n-    }\n-\n-    /** Find a matching endpoint for exactly this operation.\n-     * If multiple choices, prefer either named or unnamed according\n-     * to the flag {@code preferUnnamed}.\n-     */\n-    private static Endpoint findEndpointForOperationExact(DataService dataService, Operation operation, boolean preferUnnamed) {\n-        List<Endpoint> eps = dataService.getEndpoints(operation);\n-        if ( eps == null || eps.isEmpty() )\n-            return null;\n-        // ==== Legacy compatibility.\n-        // Find a named service, with preference for named/unnamed.\n-        Endpoint epAlt = null;\n-        for ( Endpoint ep : eps ) {\n-            if ( operation.equals(ep.getOperation()) ) {\n-                if ( ep.isUnnamed() && preferUnnamed )\n-                    return ep;\n-                if ( ! ep.isUnnamed() && ! preferUnnamed )\n-                    return ep;\n-                epAlt = ep;\n+        if ( ep == null ) {\n+            if ( GSP_R.equals(operation) )\n+                // If asking for GSP_R, and GSP_RW available, pass that back.\n+                ep = epSet.get(GSP_RW); // [GSP Promote]\n+            else if ( GSP_RW.equals(operation) ) {\n+                // If asking for GSP_RW, only GSP_R available -> 405.\n+                if ( epSet.contains(GSP_R) )\n+                    ServletOps.errorMethodNotAllowed(action.getMethod());\n             }\n         }\n-        // Did not find a preferred one.\n-        return epAlt;\n+\n+        // There are multiple endpoints; if none are suitable, then 400.\n+        if ( ep == null )\n+            ServletOps.errorBadRequest(\"No operation for request: \"+action.getActionURI());\n+        return ep;\n     }\n \n     /**\n      * Identify the operation being requested.\n      * It is analysing the HTTP request using global configuration.\n      * The decision is based on\n      * <ul>\n-     * <li>Query parameters (URL query string or HTML form)</li>\n-     * <li>Content-Type header</li>\n-     * <li>Otherwise it is a plain REST (quads) operation.chooseOperation</li>\n+     * <li>HTTP query string parameters (URL query string or HTML form)</li>\n+     * <li>Registered Content-Type header</li>\n+     * <li>Otherwise it is a plain REST (quads)</li>\n      * </ul>\n      * The HTTP Method is not considered.\n      * <p>\n      * The operation is not guaranteed to be supported on every {@link DataService}\n      * nor that access control will allow it to be performed.\n      */\n-    public static Operation chooseOperation(HttpAction action) {\n+    private static Operation chooseOperation(HttpAction action) {", "originalCommit": "c4c5d8bd447a04519745e38519a26e2d698cfd8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIwNzIwNQ==", "url": "https://github.com/apache/jena/pull/794#discussion_r486207205", "bodyText": "Only that this is an internal operation. From what I can tell, it is a left over from when dispatch was split across multiple classes.", "author": "afs", "createdAt": "2020-09-10T09:44:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE3MjkyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "chunk": "diff --git a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\nindex 5efc66fabd..5d3cd21679 100644\n--- a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\n+++ b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/server/Dispatcher.java\n\n@@ -224,11 +224,9 @@ public class Dispatcher {\n         if ( epSet == null || epSet.isEmpty() ) {\n             // No matches by name.\n             if ( ! StringUtils.isAnyEmpty(endpointName) )\n-                // There was a service name, not found.\n-                // But it may be a URL for static resource.\n+                // There was a service name but it was not found.\n+                // It may be a URL for static resource.\n                 return null;\n-//                // No service endpoint so 404.\n-//                ServletOps.errorNotFound();\n             // Dataset URL - \"exists\" (even if no services) so 404 is wrong.\n             ServletOps.errorBadRequest(\"No endpoint for request\");\n             return null; // Unreachable.\n"}}, {"oid": "506a18849c82570e0fa998e1ea58af8fe0c781d9", "url": "https://github.com/apache/jena/commit/506a18849c82570e0fa998e1ea58af8fe0c781d9", "message": "Update comments about LangMatches", "committedDate": "2020-09-10T09:28:18Z", "type": "forcePushed"}, {"oid": "9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "url": "https://github.com/apache/jena/commit/9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "message": "JENA-1962: Assembler for a dataset with one view graph", "committedDate": "2020-09-10T09:36:01Z", "type": "commit"}, {"oid": "9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "url": "https://github.com/apache/jena/commit/9c7aad3a479bdd179de83f1d4a07d9de9729fa71", "message": "JENA-1962: Assembler for a dataset with one view graph", "committedDate": "2020-09-10T09:36:01Z", "type": "forcePushed"}]}