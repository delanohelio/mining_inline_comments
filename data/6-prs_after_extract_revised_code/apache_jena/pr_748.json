{"pr_number": 748, "pr_title": "JENA-1901 Provide default implementations for some of SecurityEvaluator's methods", "pr_createdAt": "2020-05-26T15:29:47Z", "pr_url": "https://github.com/apache/jena/pull/748", "timeline": [{"oid": "368e8a1e396665d1bf4b044f64afe594c87a160f", "url": "https://github.com/apache/jena/commit/368e8a1e396665d1bf4b044f64afe594c87a160f", "message": "JENA-1901 Provide default implementations for some of SecurityEvaluator's methods", "committedDate": "2020-05-26T15:27:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNTg4MQ==", "url": "https://github.com/apache/jena/pull/748#discussion_r432635881", "bodyText": "Trivial: missing final newline.", "author": "afs", "createdAt": "2020-05-29T17:33:45Z", "path": "jena-permissions/src/test/java/org/apache/jena/permissions/SecurityEvaluatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.jena.permissions;\n+\n+import static org.junit.Assert.*;\n+\n+import org.apache.jena.graph.Node;\n+import org.apache.jena.graph.Triple;\n+import org.apache.jena.permissions.SecurityEvaluator.Action;\n+import org.apache.jena.shared.AuthenticationRequiredException;\n+import org.junit.Test;\n+\n+import java.util.EnumSet;\n+\n+public class SecurityEvaluatorTest {\n+    private static final Object PRINCIPAL = null;\n+    private static final Node GRAPH = null;\n+    private static final Triple TRIPLE = null;\n+    private static final EnumSet<Action> ALLOWED_ACTIONS = EnumSet.of(Action.Create, Action.Delete);\n+    private static final EnumSet<Action> DISALLOWED_ACTIONS = EnumSet.complementOf(ALLOWED_ACTIONS);\n+    public static final EnumSet<Action> ALL_ACTIONS = EnumSet.noneOf(Action.class);\n+\n+\n+    private final SecurityEvaluator evaluator = new SecurityEvaluator() {\n+\n+        @Override\n+        public boolean evaluate(Object principal, Action action, Node graphIRI) throws AuthenticationRequiredException {\n+            return ALLOWED_ACTIONS.contains(action);\n+        }\n+\n+        @Override\n+        public boolean evaluate(Object principal, Action action, Node graphIRI, Triple triple) throws AuthenticationRequiredException {\n+            return ALLOWED_ACTIONS.contains(action);\n+        }\n+\n+        @Override\n+        public Object getPrincipal() {\n+            return null;\n+        }\n+\n+        @Override\n+        public boolean isPrincipalAuthenticated(Object principal) {\n+            return false;\n+        }\n+    };\n+\n+    @Test\n+    public void testAllLogicForGraphOperations() {\n+        assertTrue(evaluator.evaluate(PRINCIPAL, ALL_ACTIONS, GRAPH));\n+        assertTrue(evaluator.evaluate(PRINCIPAL, ALLOWED_ACTIONS, GRAPH));\n+        assertFalse(evaluator.evaluate(PRINCIPAL, DISALLOWED_ACTIONS, GRAPH));\n+        assertFalse(evaluator.evaluate(PRINCIPAL, EnumSet.allOf(Action.class), GRAPH));\n+    }\n+\n+\n+    @Test\n+    public void testAnyLogicForGraphOperations() {\n+        assertFalse(evaluator.evaluateAny(PRINCIPAL, ALL_ACTIONS, GRAPH));\n+        assertTrue(evaluator.evaluateAny(PRINCIPAL, ALLOWED_ACTIONS, GRAPH));\n+        assertFalse(evaluator.evaluateAny(PRINCIPAL, DISALLOWED_ACTIONS, GRAPH));\n+        assertTrue(evaluator.evaluateAny(PRINCIPAL, EnumSet.allOf(Action.class), GRAPH));\n+    }\n+\n+    public void testAllLogicForTripleOperations() {\n+        assertTrue(evaluator.evaluate(PRINCIPAL, ALL_ACTIONS, GRAPH, TRIPLE));\n+        assertTrue(evaluator.evaluate(PRINCIPAL, ALLOWED_ACTIONS, GRAPH, TRIPLE));\n+        assertFalse(evaluator.evaluate(PRINCIPAL, DISALLOWED_ACTIONS, GRAPH, TRIPLE));\n+        assertFalse(evaluator.evaluate(PRINCIPAL, EnumSet.allOf(Action.class), GRAPH, TRIPLE));\n+    }\n+\n+\n+    @Test\n+    public void testAnyLogicForTripleOperations() {\n+        assertFalse(evaluator.evaluateAny(PRINCIPAL, ALL_ACTIONS, GRAPH, TRIPLE));\n+        assertTrue(evaluator.evaluateAny(PRINCIPAL, ALLOWED_ACTIONS, GRAPH, TRIPLE));\n+        assertFalse(evaluator.evaluateAny(PRINCIPAL, DISALLOWED_ACTIONS, GRAPH, TRIPLE));\n+        assertTrue(evaluator.evaluateAny(PRINCIPAL, EnumSet.allOf(Action.class), GRAPH, TRIPLE));\n+    }\n+}", "originalCommit": "368e8a1e396665d1bf4b044f64afe594c87a160f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1ODc5NA==", "url": "https://github.com/apache/jena/pull/748#discussion_r436258794", "bodyText": "fixed", "author": "strangepleasures", "createdAt": "2020-06-06T10:50:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNTg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "26f6b858285cc2845ecc6511d8342af7c694fdb9", "chunk": "diff --git a/jena-permissions/src/test/java/org/apache/jena/permissions/SecurityEvaluatorTest.java b/jena-permissions/src/test/java/org/apache/jena/permissions/SecurityEvaluatorTest.java\nindex e24fe99dd9..f599a736c6 100644\n--- a/jena-permissions/src/test/java/org/apache/jena/permissions/SecurityEvaluatorTest.java\n+++ b/jena-permissions/src/test/java/org/apache/jena/permissions/SecurityEvaluatorTest.java\n\n@@ -91,4 +91,4 @@ public class SecurityEvaluatorTest {\n         assertFalse(evaluator.evaluateAny(PRINCIPAL, DISALLOWED_ACTIONS, GRAPH, TRIPLE));\n         assertTrue(evaluator.evaluateAny(PRINCIPAL, EnumSet.allOf(Action.class), GRAPH, TRIPLE));\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNzYyNw==", "url": "https://github.com/apache/jena/pull/748#discussion_r432637627", "bodyText": "Minor: \"public\" is used elsewhere on interface methods.", "author": "afs", "createdAt": "2020-05-29T17:37:21Z", "path": "jena-permissions/src/main/java/org/apache/jena/permissions/SecurityEvaluator.java", "diffHunk": "@@ -213,7 +210,7 @@\n \t * @throws AuthenticationRequiredException\n \t *             if user is not authenticated and is required to be.\n \t */\n-\tpublic boolean evaluate(Object principal, Action action, Node graphIRI)\n+\tboolean evaluate(Object principal, Action action, Node graphIRI)", "originalCommit": "368e8a1e396665d1bf4b044f64afe594c87a160f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1ODc5OQ==", "url": "https://github.com/apache/jena/pull/748#discussion_r436258799", "bodyText": "fixed", "author": "strangepleasures", "createdAt": "2020-06-06T10:50:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzNzYyNw=="}], "type": "inlineReview", "revised_code": {"commit": "26f6b858285cc2845ecc6511d8342af7c694fdb9", "chunk": "diff --git a/jena-permissions/src/main/java/org/apache/jena/permissions/SecurityEvaluator.java b/jena-permissions/src/main/java/org/apache/jena/permissions/SecurityEvaluator.java\nindex 2be92aab81..b61756095b 100644\n--- a/jena-permissions/src/main/java/org/apache/jena/permissions/SecurityEvaluator.java\n+++ b/jena-permissions/src/main/java/org/apache/jena/permissions/SecurityEvaluator.java\n\n@@ -210,7 +210,7 @@ public interface SecurityEvaluator {\n \t * @throws AuthenticationRequiredException\n \t *             if user is not authenticated and is required to be.\n \t */\n-\tboolean evaluate(Object principal, Action action, Node graphIRI)\n+\tpublic boolean evaluate(Object principal, Action action, Node graphIRI)\n \t\t\tthrows AuthenticationRequiredException;\n \n \t/**\n"}}, {"oid": "26f6b858285cc2845ecc6511d8342af7c694fdb9", "url": "https://github.com/apache/jena/commit/26f6b858285cc2845ecc6511d8342af7c694fdb9", "message": "Fix style", "committedDate": "2020-06-06T10:48:09Z", "type": "commit"}]}