{"pr_number": 866, "pr_title": "JENA-1998: Imports closure machinery", "pr_createdAt": "2020-11-15T21:08:17Z", "pr_url": "https://github.com/apache/jena/pull/866", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NzM0NQ==", "url": "https://github.com/apache/jena/pull/866#discussion_r523867345", "bodyText": "If there are other?", "author": "kinow", "createdAt": "2020-11-16T02:43:50Z", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl;\n+\n+import static org.apache.jena.atlas.iterator.Iter.iter;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlImports;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlOntology;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeRDFType;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.jena.atlas.lib.Pair;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.graph.GraphUtil;\n+import org.apache.jena.graph.Node;\n+import org.apache.jena.riot.RDFDataMgr;\n+import org.apache.jena.riot.other.G;\n+import org.apache.jena.riot.system.IRIResolver;\n+import org.apache.jena.sparql.graph.GraphFactory;\n+\n+/**\n+ * Import processing.\n+ * <p>\n+ * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n+ * and imports (triples \"base owl:Imports URI\").\n+ * <p>\n+ * If there other \"? owl:imports ?\" triples, they are ignored.", "originalCommit": "06ce9caf09b75dca7ae44e4b86d0708935006d38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "chunk": "diff --git a/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java b/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\nindex 1095a2905d..222221a9fb 100644\n--- a/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\n+++ b/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\n\n@@ -44,13 +44,13 @@ import org.apache.jena.sparql.graph.GraphFactory;\n  * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n  * and imports (triples \"base owl:Imports URI\").\n  * <p>\n- * If there other \"? owl:imports ?\" triples, they are ignored.\n+ * If there are other \"? owl:imports ?\" triples, they are ignored.\n  */\n public class Imports {\n     private Imports() {}\n \n     /**\n-     * Load a graph and process it's owl:imports to create a single graph.\n+     * Load a graph and process owl:imports to create a new, single graph.\n      */\n     public static Graph loadWithImports(String url) {\n         url = IRIResolver.resolveString(url);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NzQwMA==", "url": "https://github.com/apache/jena/pull/866#discussion_r523867400", "bodyText": "s/it's/its", "author": "kinow", "createdAt": "2020-11-16T02:44:04Z", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl;\n+\n+import static org.apache.jena.atlas.iterator.Iter.iter;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlImports;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeOwlOntology;\n+import static org.apache.jena.sparql.graph.NodeConst.nodeRDFType;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.jena.atlas.lib.Pair;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.graph.GraphUtil;\n+import org.apache.jena.graph.Node;\n+import org.apache.jena.riot.RDFDataMgr;\n+import org.apache.jena.riot.other.G;\n+import org.apache.jena.riot.system.IRIResolver;\n+import org.apache.jena.sparql.graph.GraphFactory;\n+\n+/**\n+ * Import processing.\n+ * <p>\n+ * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n+ * and imports (triples \"base owl:Imports URI\").\n+ * <p>\n+ * If there other \"? owl:imports ?\" triples, they are ignored.\n+ */\n+public class Imports {\n+    private Imports() {}\n+\n+    /**\n+     * Load a graph and process it's owl:imports to create a single graph.", "originalCommit": "06ce9caf09b75dca7ae44e4b86d0708935006d38", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "chunk": "diff --git a/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java b/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\nindex 1095a2905d..222221a9fb 100644\n--- a/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\n+++ b/jena-shacl/src/main/java/org/apache/jena/shacl/Imports.java\n\n@@ -44,13 +44,13 @@ import org.apache.jena.sparql.graph.GraphFactory;\n  * Imports are triggered by a base (a single triple \"? rdf:type owl:Ontology\")\n  * and imports (triples \"base owl:Imports URI\").\n  * <p>\n- * If there other \"? owl:imports ?\" triples, they are ignored.\n+ * If there are other \"? owl:imports ?\" triples, they are ignored.\n  */\n public class Imports {\n     private Imports() {}\n \n     /**\n-     * Load a graph and process it's owl:imports to create a single graph.\n+     * Load a graph and process owl:imports to create a new, single graph.\n      */\n     public static Graph loadWithImports(String url) {\n         url = IRIResolver.resolveString(url);\n"}}, {"oid": "7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "url": "https://github.com/apache/jena/commit/7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "message": "JENA-1998: Imports closure machinery", "committedDate": "2020-11-17T16:34:22Z", "type": "commit"}, {"oid": "7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "url": "https://github.com/apache/jena/commit/7eb3ba91784ad0a6ad625d7dba52f857c293a6f0", "message": "JENA-1998: Imports closure machinery", "committedDate": "2020-11-17T16:34:22Z", "type": "forcePushed"}]}