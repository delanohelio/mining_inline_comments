{"pr_number": 789, "pr_title": "JENA-1957: targetClass=, missing propertyParams, NodeShape sh:node.", "pr_createdAt": "2020-08-29T14:40:46Z", "pr_url": "https://github.com/apache/jena/pull/789", "timeline": [{"oid": "3aaec55c49649728a6ceead41e9628e302ba631a", "url": "https://github.com/apache/jena/commit/3aaec55c49649728a6ceead41e9628e302ba631a", "message": "JENA-1957: targetClass=, missing propertyParams, NodeShape sh:node.", "committedDate": "2020-08-29T14:45:53Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MzA1MA==", "url": "https://github.com/apache/jena/pull/789#discussion_r480993050", "bodyText": "Should this method have a null check for collection?", "author": "rvesse", "createdAt": "2020-09-01T09:17:27Z", "path": "jena-base/src/main/java/org/apache/jena/atlas/lib/CollectionUtils.java", "diffHunk": "@@ -31,6 +32,10 @@\n \n     /** Return an element from a collection. */ \n     public static <T> T oneElt(Collection<T> collection) {\n+        if ( collection.isEmpty() )", "originalCommit": "3aaec55c49649728a6ceead41e9628e302ba631a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4ODI5MA==", "url": "https://github.com/apache/jena/pull/789#discussion_r481088290", "bodyText": "Done (the calls were safe anyway).", "author": "afs", "createdAt": "2020-09-01T12:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk5MzA1MA=="}], "type": "inlineReview", "revised_code": {"commit": "c7febfc57142e4249ea8e43f9cddc8c4a4305f77", "chunk": "diff --git a/jena-base/src/main/java/org/apache/jena/atlas/lib/CollectionUtils.java b/jena-base/src/main/java/org/apache/jena/atlas/lib/CollectionUtils.java\nindex d1f8b15614..7f6371893c 100644\n--- a/jena-base/src/main/java/org/apache/jena/atlas/lib/CollectionUtils.java\n+++ b/jena-base/src/main/java/org/apache/jena/atlas/lib/CollectionUtils.java\n\n@@ -24,15 +24,15 @@ import java.util.List;\n import org.apache.jena.atlas.iterator.Iter;\n \n public class CollectionUtils\n-{   \n-    /** Test for same elements, regardless of cardinality */ \n+{\n+    /** Test for same elements, regardless of cardinality */\n     public static <T> boolean sameElts(Collection<T> left, Collection<T> right) {\n         return right.containsAll(left) && left.containsAll(right) ;\n     }\n \n-    /** Return an element from a collection. */ \n+    /** Return an element from a collection. */\n     public static <T> T oneElt(Collection<T> collection) {\n-        if ( collection.isEmpty() )\n+        if ( collection == null || collection.isEmpty() )\n             return null;\n         if ( collection instanceof List<?> )\n             return ((List<T>)collection).get(0);\n"}}, {"oid": "c7febfc57142e4249ea8e43f9cddc8c4a4305f77", "url": "https://github.com/apache/jena/commit/c7febfc57142e4249ea8e43f9cddc8c4a4305f77", "message": "JENA-1957: targetClass=, missing propertyParams, NodeShape sh:node.", "committedDate": "2020-09-01T12:07:55Z", "type": "commit"}, {"oid": "c7febfc57142e4249ea8e43f9cddc8c4a4305f77", "url": "https://github.com/apache/jena/commit/c7febfc57142e4249ea8e43f9cddc8c4a4305f77", "message": "JENA-1957: targetClass=, missing propertyParams, NodeShape sh:node.", "committedDate": "2020-09-01T12:07:55Z", "type": "forcePushed"}]}