{"pr_number": 776, "pr_title": "JENA-1937: SHACL Compact Syntax writer and jena-shacl clean-up.", "pr_createdAt": "2020-07-22T09:22:36Z", "pr_url": "https://github.com/apache/jena/pull/776", "timeline": [{"oid": "1862ad5e77d57e5c778608353b547beee935d864", "url": "https://github.com/apache/jena/commit/1862ad5e77d57e5c778608353b547beee935d864", "message": "JENA-1937: RIOT Writer for SHACL-C", "committedDate": "2020-07-19T19:57:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MTEzMw==", "url": "https://github.com/apache/jena/pull/776#discussion_r459191133", "bodyText": "Commented test/debug statement?", "author": "kinow", "createdAt": "2020-07-23T03:02:29Z", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.jena.shacl.compact.writer;\n+\n+import java.io.OutputStream;\n+import java.io.Writer;\n+\n+import org.apache.jena.atlas.io.IndentedWriter;\n+import org.apache.jena.graph.Graph;\n+import org.apache.jena.riot.Lang;\n+import org.apache.jena.riot.system.PrefixMap;\n+import org.apache.jena.riot.system.RiotLib;\n+import org.apache.jena.riot.writer.WriterGraphRIOTBase;\n+import org.apache.jena.shacl.Shapes;\n+import org.apache.jena.shacl.compact.ShaclcWriter;\n+import org.apache.jena.sparql.util.Context;\n+\n+public class WriterRIOTShaclc extends WriterGraphRIOTBase {\n+\n+    public WriterRIOTShaclc() {}\n+\n+    @Override\n+    public Lang getLang() {\n+        return Lang.SHACLC;\n+    }\n+\n+    @Override\n+    public void write(Writer out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        IndentedWriter iOut = RiotLib.create(out) ;\n+        iOut.setAbsoluteIndent(4);\n+        write(iOut, graph, prefixMap, baseURI, context);\n+    }\n+\n+    @Override\n+    public void write(OutputStream out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        IndentedWriter iOut = new IndentedWriter(out);\n+        iOut.setUnitIndent(4);\n+        write(iOut, graph, prefixMap, baseURI, context);\n+    }\n+\n+    private void write(IndentedWriter out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n+        Shapes shapes = Shapes.parse(graph);\n+        ShaclcWriter.print(out, shapes);\n+        //out.flush();", "originalCommit": "69e126c06fd6b9f3f9f24dac8e33365054000d2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2OTAwOQ==", "url": "https://github.com/apache/jena/pull/776#discussion_r459369009", "bodyText": "Good catch. It should not be there but the routines that create an IndentedWriter should have a \"flush\". IndentedWriter has it's own buffering for chars to bytes. The builtin IndentedWriter.stdout or IndentedWriter.stderr have setFlushOnNewline (c.f. PrintStream autoFlush).", "author": "afs", "createdAt": "2020-07-23T10:59:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MTEzMw=="}], "type": "inlineReview", "revised_code": {"commit": "a0629ff792250357e6cc0aad80e811cc428d4c8d", "chunk": "diff --git a/jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java b/jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java\nindex f933617bc7..342a3137a3 100644\n--- a/jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java\n+++ b/jena-shacl/src/main/java/org/apache/jena/shacl/compact/writer/WriterRIOTShaclc.java\n\n@@ -43,21 +43,24 @@ public class WriterRIOTShaclc extends WriterGraphRIOTBase {\n     @Override\n     public void write(Writer out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n         IndentedWriter iOut = RiotLib.create(out) ;\n-        iOut.setAbsoluteIndent(4);\n-        write(iOut, graph, prefixMap, baseURI, context);\n+        try {\n+            iOut.setAbsoluteIndent(4);\n+            write(iOut, graph, prefixMap, baseURI, context);\n+        } finally { iOut.flush(); }\n     }\n \n     @Override\n     public void write(OutputStream out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n         IndentedWriter iOut = new IndentedWriter(out);\n-        iOut.setUnitIndent(4);\n-        write(iOut, graph, prefixMap, baseURI, context);\n+        try {\n+            iOut.setUnitIndent(4);\n+            write(iOut, graph, prefixMap, baseURI, context);\n+        } finally { iOut.flush(); }\n     }\n \n     private void write(IndentedWriter out, Graph graph, PrefixMap prefixMap, String baseURI, Context context) {\n         Shapes shapes = Shapes.parse(graph);\n         ShaclcWriter.print(out, shapes);\n-        //out.flush();\n     }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzU4MQ==", "url": "https://github.com/apache/jena/pull/776#discussion_r459193581", "bodyText": "s/dupicates/duplicates", "author": "kinow", "createdAt": "2020-07-23T03:14:06Z", "path": "jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java", "diffHunk": "@@ -189,7 +196,7 @@ public int numRootShapes() {\n \n     /** Iterator over the shapes with targets and with explicit type NodeShape or PropertyShape. */\n     public Iterator<Shape> iteratorAll() {\n+        // rootsShapes and declShaes are disjoint so no dupicates in the iterator.", "originalCommit": "69e126c06fd6b9f3f9f24dac8e33365054000d2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM2ODk4OA==", "url": "https://github.com/apache/jena/pull/776#discussion_r459368988", "bodyText": "Done", "author": "afs", "createdAt": "2020-07-23T10:59:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzU4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "a0629ff792250357e6cc0aad80e811cc428d4c8d", "chunk": "diff --git a/jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java b/jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java\nindex 656e53f0ef..9ed1270649 100644\n--- a/jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java\n+++ b/jena-shacl/src/main/java/org/apache/jena/shacl/Shapes.java\n\n@@ -196,7 +196,7 @@ public class Shapes implements Iterable<Shape> {\n \n     /** Iterator over the shapes with targets and with explicit type NodeShape or PropertyShape. */\n     public Iterator<Shape> iteratorAll() {\n-        // rootsShapes and declShaes are disjoint so no dupicates in the iterator.\n+        // rootsShapes and declShaes are disjoint so no duplicates in the iterator.\n         return Iter.concat(rootShapes.iterator(), declShapes.iterator());\n     }\n }\n"}}, {"oid": "a0629ff792250357e6cc0aad80e811cc428d4c8d", "url": "https://github.com/apache/jena/commit/a0629ff792250357e6cc0aad80e811cc428d4c8d", "message": "jena-shacl clean-up", "committedDate": "2020-07-23T10:34:23Z", "type": "forcePushed"}, {"oid": "eb638529c7161281f0faebceabc734db412fd389", "url": "https://github.com/apache/jena/commit/eb638529c7161281f0faebceabc734db412fd389", "message": "jena-shacl clean-up", "committedDate": "2020-07-23T10:35:10Z", "type": "commit"}, {"oid": "eb638529c7161281f0faebceabc734db412fd389", "url": "https://github.com/apache/jena/commit/eb638529c7161281f0faebceabc734db412fd389", "message": "jena-shacl clean-up", "committedDate": "2020-07-23T10:35:10Z", "type": "forcePushed"}]}