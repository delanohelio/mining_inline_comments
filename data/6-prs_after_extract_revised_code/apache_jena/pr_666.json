{"pr_number": 666, "pr_title": "JENA-1811: Dispatch on Content-Type. Accumulated code and comment cleanup.", "pr_createdAt": "2020-01-07T14:27:56Z", "pr_url": "https://github.com/apache/jena/pull/666", "timeline": [{"oid": "5e0d6e4b135fdca98931392bbae94e068c862bcb", "url": "https://github.com/apache/jena/commit/5e0d6e4b135fdca98931392bbae94e068c862bcb", "message": "Comments and code clean up.", "committedDate": "2020-01-07T14:23:13Z", "type": "commit"}, {"oid": "4fc653268460823afc0c347a8745c496976fe48b", "url": "https://github.com/apache/jena/commit/4fc653268460823afc0c347a8745c496976fe48b", "message": "JENA-1811: Dispatch on Content-Type before query string checking", "committedDate": "2020-01-07T14:23:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NDc1NA==", "url": "https://github.com/apache/jena/pull/666#discussion_r364094754", "bodyText": "Maybe we can delete this?", "author": "kinow", "createdAt": "2020-01-08T07:35:28Z", "path": "jena-arq/src/main/java/org/apache/jena/atlas/web/TypedInputStream.java", "diffHunk": "@@ -47,11 +43,11 @@ private TypedInputStream(InputStream in)\n     public TypedInputStream(InputStream in, String contentType)\n     { this(in, ContentType.create(contentType), null) ; }\n \n-    public TypedInputStream(InputStream in, String mediaType, String charset)\n-    { this(in, mediaType, charset, null) ; }\n-    \n-    public TypedInputStream(InputStream in, String mediaType, String charset, String baseURI)\n-    { this(in, ContentType.create(mediaType, charset), baseURI) ; }\n+//    public TypedInputStream(InputStream in, String mediaType, String charset)\n+//    { this(in, mediaType, charset, null) ; }\n+//    \n+//    public TypedInputStream(InputStream in, String mediaType, String charset, String baseURI)\n+//    { this(in, ContentType.create(mediaType, charset), baseURI) ; }", "originalCommit": "4fc653268460823afc0c347a8745c496976fe48b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0Mzc1Mg==", "url": "https://github.com/apache/jena/pull/666#discussion_r364143752", "bodyText": "Agreed.", "author": "afs", "createdAt": "2020-01-08T09:48:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NDc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "fe3ed3a35a8ecdfe688c69b26db41709a61ecb9f", "chunk": "diff --git a/jena-arq/src/main/java/org/apache/jena/atlas/web/TypedInputStream.java b/jena-arq/src/main/java/org/apache/jena/atlas/web/TypedInputStream.java\nindex 20f3b858e7..7740490cb5 100644\n--- a/jena-arq/src/main/java/org/apache/jena/atlas/web/TypedInputStream.java\n+++ b/jena-arq/src/main/java/org/apache/jena/atlas/web/TypedInputStream.java\n\n@@ -43,12 +43,6 @@ public class TypedInputStream extends FilterInputStream\n     public TypedInputStream(InputStream in, String contentType)\n     { this(in, ContentType.create(contentType), null) ; }\n \n-//    public TypedInputStream(InputStream in, String mediaType, String charset)\n-//    { this(in, mediaType, charset, null) ; }\n-//    \n-//    public TypedInputStream(InputStream in, String mediaType, String charset, String baseURI)\n-//    { this(in, ContentType.create(mediaType, charset), baseURI) ; }\n-    \n     public TypedInputStream(InputStream in, ContentType ct)\n     { this(in, ct, null) ; }\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NTQ3Mg==", "url": "https://github.com/apache/jena/pull/666#discussion_r364095472", "bodyText": "s/teh/the (I think Java 8+ javadoc is stricter and requires the closing </p>, unless we are passing those args to reduce strictness during build)", "author": "kinow", "createdAt": "2020-01-08T07:38:08Z", "path": "jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/auth/Auth.java", "diffHunk": "@@ -103,4 +104,20 @@ public static boolean allow(String user, AuthPolicy policy, Runnable notAllowed)\n         notAllowed.run();\n         return false;\n     }\n+\n+    /**\n+     * Calculate the value of the \"Authentication\" HTTP header for basic auth. Basic\n+     * auth is not secure when used over HTTP (the password can be extracted). Use\n+     * with HTTPS is better.\n+     * <p>\n+     * Unlike digest auth, basic auth can be setup without an extra round trip to the\n+     * server, making it easier for scripts where teh body is not replayable.", "originalCommit": "4fc653268460823afc0c347a8745c496976fe48b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MzczOA==", "url": "https://github.com/apache/jena/pull/666#discussion_r364143738", "bodyText": "Done", "author": "afs", "createdAt": "2020-01-08T09:48:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0NzMxNA==", "url": "https://github.com/apache/jena/pull/666#discussion_r364147314", "bodyText": "Thanks for raising this. I can't find a definitive answer by searching the web.\nNot sure about the <p>. It is legal HTML (not xHTML). I don't get a warning/error in Eclipse. The POM has <doclint>none</doclint> and given the scale and age of Jena, other places will have no closing </p>.\nElsewhere, I have projects using Java11 and no special configuration of the javadoc plugin.", "author": "afs", "createdAt": "2020-01-08T09:55:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NTQ3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "fe3ed3a35a8ecdfe688c69b26db41709a61ecb9f", "chunk": "diff --git a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/auth/Auth.java b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/auth/Auth.java\nindex 5cbf15f3b4..78451616a7 100644\n--- a/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/auth/Auth.java\n+++ b/jena-fuseki2/jena-fuseki-core/src/main/java/org/apache/jena/fuseki/auth/Auth.java\n\n@@ -111,7 +111,7 @@ public class Auth {\n      * with HTTPS is better.\n      * <p>\n      * Unlike digest auth, basic auth can be setup without an extra round trip to the\n-     * server, making it easier for scripts where teh body is not replayable.\n+     * server, making it easier for scripts where the body is not replayable.\n      * \n      * @param username\n      * @param password\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NjE4OA==", "url": "https://github.com/apache/jena/pull/666#discussion_r364096188", "bodyText": "I thought git asked for this extra newline at the end of the file.", "author": "kinow", "createdAt": "2020-01-08T07:40:33Z", "path": "jena-rdfconnection/src/main/java/org/apache/jena/rdfconnection/examples/RDFConnectionExample6.java", "diffHunk": "@@ -40,4 +40,3 @@ public static void main(String ...args) {\n         }\n     }\n }\n-", "originalCommit": "4fc653268460823afc0c347a8745c496976fe48b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MzcyMg==", "url": "https://github.com/apache/jena/pull/666#discussion_r364143722", "bodyText": "Git copes either way (I think). These example changes are removing an extra blank line. It was \"}\\n\\n\".", "author": "afs", "createdAt": "2020-01-08T09:48:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA5NjE4OA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "fe3ed3a35a8ecdfe688c69b26db41709a61ecb9f", "url": "https://github.com/apache/jena/commit/fe3ed3a35a8ecdfe688c69b26db41709a61ecb9f", "message": "Respond to review comments", "committedDate": "2020-01-08T09:49:06Z", "type": "commit"}]}