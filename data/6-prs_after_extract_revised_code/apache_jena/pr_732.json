{"pr_number": 732, "pr_title": "JENA-1887: SplitIRI fix", "pr_createdAt": "2020-04-21T22:36:09Z", "pr_url": "https://github.com/apache/jena/pull/732", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjczOTY2OQ==", "url": "https://github.com/apache/jena/pull/732#discussion_r412739669", "bodyText": "Another interesting way to format code with comments! For one second thought we had two else statements. Nice!", "author": "kinow", "createdAt": "2020-04-22T07:29:51Z", "path": "jena-core/src/main/java/org/apache/jena/util/SplitIRI.java", "diffHunk": "@@ -136,45 +135,66 @@ private static boolean needsEscape(char ch, boolean finalChar) {\n     // @formatter:on\n \n     /** Find the URI split point, return the index into the string that is the\n-     *  first character of a legal Turtle local name.   \n+     *  first character of a legal Turtle local name.\n      * <p>\n      * This is a pragmatic choice, not just finding the maximal point.\n-     * For example, with escaping '/' can be included but that means \n+     * For example, with escaping '/' can be included but that means\n      * {@code http://example/path/abc} could split to give {@code http://example/}\n      * and {@code path/abc} .\n      * <p>\n-     * Split URN's after ':'.  \n-     *   \n+     * Split URN's after ':'.\n+     *\n      * @param uri URI string\n      * @return The split point, or -1 for \"not found\".\n      */\n-    \n     public static int splitpoint(String uri) {\n         boolean isURN = uri.startsWith(\"urn:\") ;\n         // Fast track.  Still need to check validity of the prefix part.\n         int idx1 = uri.lastIndexOf('#') ;\n-        // Not so simple - \\/ in local names \n+        // Not so simple - \\/ in local names\n         int idx2 = isURN ? uri.lastIndexOf(':') : uri.lastIndexOf('/') ;\n \n         // If absolute.\n-        int idx3 = uri.indexOf(':') ; \n-    \n+        int idx3 = uri.indexOf(':') ;\n+\n         // Note: local names can't end in \".\" in Turtle.\n         // This is handled by escape_PN_LOCAL_ESC which will escape it as \"\\.\"\n-        \n-        // Test the discovered local part.\n-        // Limit is exclusive.\n-        int limit = Math.max(idx1, idx2) ;\n-        limit = Math.max(limit, idx3) ;\n-        limit = Math.max(-1, limit) ;\n-        \n+\n+        // Cases\n+        //   \"abc#def\"\n+        //   \"/abc\"\n+        //   \"/\"\n+        //   \"/path/path#frag\n+        //   \"/path/path#abc/def\" :: / in fragment, split is at the \"#\".\n+\n+        int limit;\n+        if ( idx1 >= 0 && idx2 < 0 )\n+            // no \"/\" (or \":\" if a urn)\n+            limit = idx1;\n+        else if ( idx1 < 0 && idx2 >= 0 )\n+            // no fragment\n+            limit = idx2;\n+        else\n+            // Fragment and path.\n+            // If \"/\" is in the fragment, it is not the split.\n+            if ( idx1 >= 0 && idx2 >= 0 )", "originalCommit": "e6e19669fd95884c2a2472b6c885d74509e3ae8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "360b4d7912c8370f5e74ac4a38b82c05ab203334", "chunk": "diff --git a/jena-core/src/main/java/org/apache/jena/util/SplitIRI.java b/jena-core/src/main/java/org/apache/jena/util/SplitIRI.java\nindex e2e8be7422..1190647dbd 100644\n--- a/jena-core/src/main/java/org/apache/jena/util/SplitIRI.java\n+++ b/jena-core/src/main/java/org/apache/jena/util/SplitIRI.java\n\n@@ -168,19 +168,19 @@ public class SplitIRI\n         //   \"/path/path#abc/def\" :: / in fragment, split is at the \"#\".\n \n         int limit;\n-        if ( idx1 >= 0 && idx2 < 0 )\n-            // no \"/\" (or \":\" if a urn)\n+        if ( idx1 >= 0 && idx2 < 0 ) {\n+            // No path \"/\" (or \":\" if a URN)\n             limit = idx1;\n-        else if ( idx1 < 0 && idx2 >= 0 )\n-            // no fragment\n+        } else if ( idx1 < 0 && idx2 >= 0 ) {\n+            // No fragment\n             limit = idx2;\n-        else\n-            // Fragment and path.\n-            // If \"/\" is in the fragment, it is not the split.\n-            if ( idx1 >= 0 && idx2 >= 0 )\n+        } else if ( idx1 >= 0 && idx2 >= 0 ) {\n+            // Fragment and path. Use fragment.\n+            // If \"/\" is in the fragment, it is not the split point.\n             limit = idx1 ;\n-        else\n+        } else {\n             limit = -1;\n+        }\n \n         // At least idx3, the case of no \"/\" and no \"#\" in an absolute IRI\n         if ( idx3 >= 0 )\n"}}, {"oid": "360b4d7912c8370f5e74ac4a38b82c05ab203334", "url": "https://github.com/apache/jena/commit/360b4d7912c8370f5e74ac4a38b82c05ab203334", "message": "JENA-1887: SplitIRI fix", "committedDate": "2020-04-22T10:13:09Z", "type": "commit"}, {"oid": "360b4d7912c8370f5e74ac4a38b82c05ab203334", "url": "https://github.com/apache/jena/commit/360b4d7912c8370f5e74ac4a38b82c05ab203334", "message": "JENA-1887: SplitIRI fix", "committedDate": "2020-04-22T10:13:09Z", "type": "forcePushed"}]}