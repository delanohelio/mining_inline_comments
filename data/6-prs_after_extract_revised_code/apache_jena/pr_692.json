{"pr_number": 692, "pr_title": "GeoSPARQL: Malformed geo:lat and geo:lon checks", "pr_createdAt": "2020-02-17T21:58:58Z", "pr_url": "https://github.com/apache/jena/pull/692", "timeline": [{"oid": "b3352b09360c6f0a5eb5e4b33606faab86885706", "url": "https://github.com/apache/jena/commit/b3352b09360c6f0a5eb5e4b33606faab86885706", "message": "SpatialObjectGeometryLiteral now checks for multiple geo:lat or geo:lon predicates on a Feature. Exception thrown and iterator closed.", "committedDate": "2020-02-17T21:42:58Z", "type": "commit"}, {"oid": "141d85e700a28f095d9487f2b54411d0ffb3f288", "url": "https://github.com/apache/jena/commit/141d85e700a28f095d9487f2b54411d0ffb3f288", "message": "SpatialIndex: retrieval of geo:lat and geo:lon are now required properties to replace NullPointerException with PropertyNotFoundException.", "committedDate": "2020-02-17T21:49:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2ODgxNg==", "url": "https://github.com/apache/jena/pull/692#discussion_r381268816", "bodyText": "Sorry to be late to the game.\nA comment: a useful pattern is\nExtendedIterator<> iter = ...;\ntry { \n   ... process ...\n} finally { iter.close(); }\n\nThere is no harm calling close multiple times or on already closed iterators.", "author": "afs", "createdAt": "2020-02-19T12:48:37Z", "path": "jena-geosparql/src/main/java/org/apache/jena/geosparql/geo/topological/SpatialObjectGeometryLiteral.java", "diffHunk": "@@ -132,8 +133,22 @@ protected static final SpatialObjectGeometryLiteral retrieve(Graph graph, Node t\n         } else {\n             //Target is not a Feature or Geometry but could have Geo Predicates.\n             if (graph.contains(targetSpatialObject, SpatialExtension.GEO_LAT_NODE, null) && graph.contains(targetSpatialObject, SpatialExtension.GEO_LON_NODE, null)) {\n-                Node lat = graph.find(targetSpatialObject, SpatialExtension.GEO_LAT_NODE, null).next().getObject();\n-                Node lon = graph.find(targetSpatialObject, SpatialExtension.GEO_LON_NODE, null).next().getObject();\n+\n+                //Extract Lat coordinate.\n+                ExtendedIterator<Triple> latIter = graph.find(targetSpatialObject, SpatialExtension.GEO_LAT_NODE, null);\n+                Node lat = latIter.next().getObject();\n+\n+                //Extract Lon coordinate.\n+                ExtendedIterator<Triple> lonIter = graph.find(targetSpatialObject, SpatialExtension.GEO_LON_NODE, null);\n+                Node lon = lonIter.next().getObject();\n+\n+                //Ensure that only a single Latitude and Longitude are present for the subject.\n+                if (latIter.hasNext() || lonIter.hasNext()) {\n+                    latIter.close();\n+                    lonIter.close();\n+                    throw new DatatypeFormatException(targetSpatialObject.getURI() + \" has more than one geo:lat or geo:lon property.\");\n+                }\n+", "originalCommit": "141d85e700a28f095d9487f2b54411d0ffb3f288", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}