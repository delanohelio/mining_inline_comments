{"pr_number": 10653, "pr_title": "[#10650] Add null check for getFeedbackSession in API actions", "pr_createdAt": "2020-08-28T03:33:17Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10653", "timeline": [{"oid": "5559d607994696d4752e060c977526aa62bb4882", "url": "https://github.com/TEAMMATES/teammates/commit/5559d607994696d4752e060c977526aa62bb4882", "message": "Add EntityNotFoundException to getFeedbackSession", "committedDate": "2020-08-29T13:55:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479672503", "bodyText": "This violates our policy on DB layer though https://github.com/TEAMMATES/teammates/blob/master/docs/design.md#policies-2", "author": "xpdavid", "createdAt": "2020-08-29T17:40:45Z", "path": "src/main/java/teammates/storage/api/FeedbackSessionsDb.java", "diffHunk": "@@ -80,7 +81,15 @@ public FeedbackSessionAttributes getFeedbackSession(String courseId, String feed\n \n         if (feedbackSession != null && feedbackSession.isSessionDeleted()) {\n             log.info(\"Trying to access soft-deleted session: \" + feedbackSessionName + \"/\" + courseId);\n-            return null;\n+        }\n+        if (feedbackSession == null || feedbackSession.isSessionDeleted()) {\n+            String errorMessage = \"\";\n+            if (feedbackSession == null) {\n+                errorMessage = \"Session not found.\";\n+            } else {\n+                errorMessage = \"Session is deleted.\";\n+            }\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(errorMessage));", "originalCommit": "5559d607994696d4752e060c977526aa62bb4882", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcwMDEzOA==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479700138", "bodyText": "There are two very dangerous things done here:\n\nAssuming that feedback session not found is not desirable. DB layer has no concern with such.\nThrowing unchecked exception in DB layer.", "author": "wkurniawan07", "createdAt": "2020-08-29T23:27:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2MjU0OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479862549", "bodyText": "The problem was that this issues is quite prevalent. There is almost never a null check for logic.getFeedbackSession() in the access control of feedback session actions. I've moved the check to checkSpecificAccessControl", "author": "madanalogy", "createdAt": "2020-08-31T02:53:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY3MjUwMw=="}], "type": "inlineReview", "revised_code": {"commit": "cc5dcabfac1135839382ad0d55a691aecc185b4f", "chunk": "diff --git a/src/main/java/teammates/storage/api/FeedbackSessionsDb.java b/src/main/java/teammates/storage/api/FeedbackSessionsDb.java\nindex c9878cf32f..93b25ee048 100644\n--- a/src/main/java/teammates/storage/api/FeedbackSessionsDb.java\n+++ b/src/main/java/teammates/storage/api/FeedbackSessionsDb.java\n\n@@ -81,15 +80,7 @@ public class FeedbackSessionsDb extends EntitiesDb<FeedbackSession, FeedbackSess\n \n         if (feedbackSession != null && feedbackSession.isSessionDeleted()) {\n             log.info(\"Trying to access soft-deleted session: \" + feedbackSessionName + \"/\" + courseId);\n-        }\n-        if (feedbackSession == null || feedbackSession.isSessionDeleted()) {\n-            String errorMessage = \"\";\n-            if (feedbackSession == null) {\n-                errorMessage = \"Session not found.\";\n-            } else {\n-                errorMessage = \"Session is deleted.\";\n-            }\n-            throw new EntityNotFoundException(new EntityDoesNotExistException(errorMessage));\n+            return null;\n         }\n         return feedbackSession;\n     }\n"}}, {"oid": "cc5dcabfac1135839382ad0d55a691aecc185b4f", "url": "https://github.com/TEAMMATES/teammates/commit/cc5dcabfac1135839382ad0d55a691aecc185b4f", "message": "Add null checks for feedback session access control", "committedDate": "2020-08-31T02:52:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479870052", "bodyText": "This entire PR screams \"DRY\". You should abstract this entire method (get feedback session, throw EntityNotFoundException if not found) into the parent Action class.\nWhile you're at it, see if you can also employ the same method for course, instructor, and/or student objects.", "author": "wkurniawan07", "createdAt": "2020-08-31T03:31:10Z", "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java", "diffHunk": "@@ -30,6 +32,10 @@ public void checkSpecificAccessControl() {\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n \n+        if (feedbackSession == null) {\n+            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n+        }", "originalCommit": "cc5dcabfac1135839382ad0d55a691aecc185b4f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkzMTI3NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r479931275", "bodyText": "That's going to take a while. What if I just move the validation to the logic layer? i.e. throw exception if not found at logic.getFeedbackSession()", "author": "madanalogy", "createdAt": "2020-08-31T06:53:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA2NDExNA==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r480064114", "bodyText": "Logic has no business with throwing that kind of exception\nEven if it does, logic layer must not throw any runtime exception", "author": "wkurniawan07", "createdAt": "2020-08-31T11:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg3MDA1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "1696c1b92cbcaae2668616ba44196474f6923864", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java b/src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java\nindex 62a0ebff3b..c08f442c66 100644\n--- a/src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java\n\n@@ -30,11 +28,7 @@ public class ConfirmFeedbackSessionSubmissionAction extends BasicFeedbackSubmiss\n     public void checkSpecificAccessControl() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n-        FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n-\n-        if (feedbackSession == null) {\n-            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n-        }\n+        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n \n         verifySessionOpenExceptForModeration(feedbackSession);\n         verifyNotPreview();\n"}}, {"oid": "1696c1b92cbcaae2668616ba44196474f6923864", "url": "https://github.com/TEAMMATES/teammates/commit/1696c1b92cbcaae2668616ba44196474f6923864", "message": "Add null check for getFeedbackSession in API actions", "committedDate": "2020-09-06T16:32:00Z", "type": "commit"}, {"oid": "1696c1b92cbcaae2668616ba44196474f6923864", "url": "https://github.com/TEAMMATES/teammates/commit/1696c1b92cbcaae2668616ba44196474f6923864", "message": "Add null check for getFeedbackSession in API actions", "committedDate": "2020-09-06T16:32:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0NzcxMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484147713", "bodyText": "Just getFeedbackSession doesn't immediately tell that it's going to throw some exception if the value is null. Name it something like getNonNullFeedbackSession?", "author": "wkurniawan07", "createdAt": "2020-09-07T01:56:38Z", "path": "src/main/java/teammates/ui/webapi/action/Action.java", "diffHunk": "@@ -190,6 +193,14 @@ protected String getRequestBody() {\n         return requestBody;\n     }\n \n+    protected FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {", "originalCommit": "1696c1b92cbcaae2668616ba44196474f6923864", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c917886a597a44165a9b5109fc9a3321a23fc42d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/Action.java b/src/main/java/teammates/ui/webapi/action/Action.java\nindex 7346c507ca..d64f078666 100644\n--- a/src/main/java/teammates/ui/webapi/action/Action.java\n+++ b/src/main/java/teammates/ui/webapi/action/Action.java\n\n@@ -193,7 +193,7 @@ public abstract class Action {\n         return requestBody;\n     }\n \n-    protected FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {\n+    protected FeedbackSessionAttributes getNonNullFeedbackSession(String feedbackSessionName, String courseId) {\n         FeedbackSessionAttributes feedbackSession = logic.getFeedbackSession(feedbackSessionName, courseId);\n         if (feedbackSession == null) {\n             throw new EntityNotFoundException(new EntityDoesNotExistException(\"Feedback session not found\"));\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0ODAwMg==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484148002", "bodyText": "Unnecessary line move", "author": "wkurniawan07", "createdAt": "2020-09-07T01:58:06Z", "path": "src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java", "diffHunk": "@@ -24,10 +24,10 @@ public void checkSpecificAccessControl() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n+        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-        FeedbackSessionAttributes session = logic.getFeedbackSession(feedbackSessionName, courseId);", "originalCommit": "1696c1b92cbcaae2668616ba44196474f6923864", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c917886a597a44165a9b5109fc9a3321a23fc42d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java b/src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java\nindex 745611df60..49d62bda72 100644\n--- a/src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java\n\n@@ -24,8 +24,8 @@ public class PublishFeedbackSessionAction extends Action {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n-        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+        FeedbackSessionAttributes feedbackSession = getNonNullFeedbackSession(feedbackSessionName, courseId);\n \n         gateKeeper.verifyAccessible(instructor, feedbackSession,\n                 Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0ODAyMw==", "url": "https://github.com/TEAMMATES/teammates/pull/10653#discussion_r484148023", "bodyText": "Similarly here", "author": "wkurniawan07", "createdAt": "2020-09-07T01:58:14Z", "path": "src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java", "diffHunk": "@@ -24,10 +24,10 @@ public void checkSpecificAccessControl() {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n+        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n-        FeedbackSessionAttributes session = logic.getFeedbackSession(feedbackSessionName, courseId);", "originalCommit": "1696c1b92cbcaae2668616ba44196474f6923864", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c917886a597a44165a9b5109fc9a3321a23fc42d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java b/src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java\nindex 1287a8fa19..9363877d02 100644\n--- a/src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java\n\n@@ -24,8 +24,8 @@ public class UnpublishFeedbackSessionAction extends Action {\n         String courseId = getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);\n         String feedbackSessionName = getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);\n \n-        FeedbackSessionAttributes feedbackSession = getFeedbackSession(feedbackSessionName, courseId);\n         InstructorAttributes instructor = logic.getInstructorForGoogleId(courseId, userInfo.getId());\n+        FeedbackSessionAttributes feedbackSession = getNonNullFeedbackSession(feedbackSessionName, courseId);\n \n         gateKeeper.verifyAccessible(instructor, feedbackSession,\n                 Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n"}}, {"oid": "c917886a597a44165a9b5109fc9a3321a23fc42d", "url": "https://github.com/TEAMMATES/teammates/commit/c917886a597a44165a9b5109fc9a3321a23fc42d", "message": "Refactor name of base method", "committedDate": "2020-09-07T02:33:56Z", "type": "commit"}, {"oid": "e65fc26054db660d467e4676c67e6824c4dfe0de", "url": "https://github.com/TEAMMATES/teammates/commit/e65fc26054db660d467e4676c67e6824c4dfe0de", "message": "Merge branch 'master' into 10650-npe", "committedDate": "2020-09-07T11:20:55Z", "type": "commit"}]}