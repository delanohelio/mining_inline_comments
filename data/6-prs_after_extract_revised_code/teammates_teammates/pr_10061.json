{"pr_number": 10061, "pr_title": "[#9382] Add unit test for GetCourseSectionNamesAction", "pr_createdAt": "2020-05-15T11:06:42Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10061", "timeline": [{"oid": "bc00b68f7350b4bff67c91eafd2a0c785bb538c4", "url": "https://github.com/TEAMMATES/teammates/commit/bc00b68f7350b4bff67c91eafd2a0c785bb538c4", "message": "added unit test for GetCourseSectionNamesAction", "committedDate": "2020-05-15T10:59:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc1ODA5MQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10061#discussion_r425758091", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected void testExecute_nonexistCourse_shouldFail() throws Exception {\n          \n          \n            \n                protected void testExecute_nonExistCourse_shouldFail() throws Exception {", "author": "madanalogy", "createdAt": "2020-05-15T12:10:23Z", "path": "src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package teammates.test.cases.webapi;\n+\n+import java.util.List;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.util.Const;\n+import teammates.ui.webapi.action.GetCourseSectionNamesAction;\n+import teammates.ui.webapi.action.JsonResult;\n+import teammates.ui.webapi.output.CourseSectionNamesData;\n+\n+/**\n+ * SUT: {@link GetCourseSectionNamesAction}.\n+ */\n+public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSectionNamesAction> {\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.COURSE_SECTIONS;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testExecute() throws Exception {\n+        //See test cases below\n+    }\n+\n+    @Test\n+    protected void testExecute_typicalUsage_shouldPass() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        List<String> expectedSectionNames = logic.getSectionNamesForCourse(instructor1OfCourse1.getCourseId());\n+\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"typical success case for instructor\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+        };\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        JsonResult response = getJsonResult(getCourseSectionNamesAction);\n+\n+        assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        CourseSectionNamesData courseSectionNamesData = (CourseSectionNamesData) response.getOutput();\n+        assertEquals(expectedSectionNames, courseSectionNamesData.getSectionNames());\n+    }\n+\n+    @Test\n+    protected void testExecute_nonexistCourse_shouldFail() throws Exception {", "originalCommit": "bc00b68f7350b4bff67c91eafd2a0c785bb538c4", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "chunk": "diff --git a/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java b/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\nindex b32cf8e870..b2fa8e49d9 100644\n--- a/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\n+++ b/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\n\n@@ -56,7 +56,7 @@ public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSec\n     }\n \n     @Test\n-    protected void testExecute_nonexistCourse_shouldFail() throws Exception {\n+    protected void testExecute_nonExistCourse_shouldFail() throws Exception {\n         InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n         loginAsInstructor(instructor1OfCourse1.googleId);\n \n"}}, {"oid": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "url": "https://github.com/TEAMMATES/teammates/commit/47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "message": "corrected method naming", "committedDate": "2020-05-16T01:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxNTkwMg==", "url": "https://github.com/TEAMMATES/teammates/pull/10061#discussion_r426215902", "bodyText": "Shouldn't we add other verifications like verifyInaccessibleWithoutLogin?\nYou can check examples in other test cases.", "author": "xpdavid", "createdAt": "2020-05-17T04:27:23Z", "path": "src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package teammates.test.cases.webapi;\n+\n+import java.util.List;\n+\n+import org.apache.http.HttpStatus;\n+import org.testng.annotations.Test;\n+\n+import teammates.common.datatransfer.attributes.InstructorAttributes;\n+import teammates.common.exception.EntityDoesNotExistException;\n+import teammates.common.exception.EntityNotFoundException;\n+import teammates.common.util.Const;\n+import teammates.ui.webapi.action.GetCourseSectionNamesAction;\n+import teammates.ui.webapi.action.JsonResult;\n+import teammates.ui.webapi.output.CourseSectionNamesData;\n+\n+/**\n+ * SUT: {@link GetCourseSectionNamesAction}.\n+ */\n+public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSectionNamesAction> {\n+\n+    @Override\n+    protected String getActionUri() {\n+        return Const.ResourceURIs.COURSE_SECTIONS;\n+    }\n+\n+    @Override\n+    protected String getRequestMethod() {\n+        return GET;\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testExecute() throws Exception {\n+        //See test cases below\n+    }\n+\n+    @Test\n+    protected void testExecute_typicalUsage_shouldPass() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        List<String> expectedSectionNames = logic.getSectionNamesForCourse(instructor1OfCourse1.getCourseId());\n+\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"typical success case for instructor\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+        };\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        JsonResult response = getJsonResult(getCourseSectionNamesAction);\n+\n+        assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        CourseSectionNamesData courseSectionNamesData = (CourseSectionNamesData) response.getOutput();\n+        assertEquals(expectedSectionNames, courseSectionNamesData.getSectionNames());\n+    }\n+\n+    @Test\n+    protected void testExecute_nonExistCourse_shouldFail() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+        loginAsInstructor(instructor1OfCourse1.googleId);\n+\n+        ______TS(\"failed case for non-existent course\");\n+\n+        String[] params = {\n+                Const.ParamsNames.COURSE_ID, \"dummy-course\",\n+        };\n+        assertThrows(EntityDoesNotExistException.class, () -> logic.getSectionNamesForCourse(\"dummy-course\"));\n+\n+        GetCourseSectionNamesAction getCourseSectionNamesAction = getAction(params);\n+        assertThrows(EntityNotFoundException.class, () -> getJsonResult(getCourseSectionNamesAction));\n+    }\n+\n+    @Test\n+    @Override\n+    protected void testAccessControl() throws Exception {\n+        InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\");\n+\n+        String[] submissionParams = new String[] {\n+                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.getCourseId(),\n+                Const.ParamsNames.ENTITY_TYPE, Const.EntityType.INSTRUCTOR,\n+        };\n+\n+        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);", "originalCommit": "47f25911210f0e10bcdf5b5b2bde8bda9ede8c72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxMjIyNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10061#discussion_r427012225", "bodyText": "Additional verifications are added.", "author": "Derek-Hardy", "createdAt": "2020-05-19T03:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxNTkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "90f29ccb93dd99290f84156ba957dd51c099d973", "chunk": "diff --git a/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java b/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\nindex b2fa8e49d9..942ecc3578 100644\n--- a/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\n+++ b/src/test/java/teammates/test/cases/webapi/GetCourseSectionNamesActionTest.java\n\n@@ -31,7 +31,7 @@ public class GetCourseSectionNamesActionTest extends BaseActionTest<GetCourseSec\n     @Test\n     @Override\n     protected void testExecute() throws Exception {\n-        //See test cases below\n+        // See test cases below\n     }\n \n     @Test\n"}}, {"oid": "90f29ccb93dd99290f84156ba957dd51c099d973", "url": "https://github.com/TEAMMATES/teammates/commit/90f29ccb93dd99290f84156ba957dd51c099d973", "message": "updated testAccessControl", "committedDate": "2020-05-18T03:20:30Z", "type": "commit"}, {"oid": "3a13b5419b97d4436c75aecfbce22835f3bf6887", "url": "https://github.com/TEAMMATES/teammates/commit/3a13b5419b97d4436c75aecfbce22835f3bf6887", "message": "fixed indentation", "committedDate": "2020-05-18T04:22:13Z", "type": "commit"}, {"oid": "575ba668d19ca91bb0985882807ab6a1ff222b1c", "url": "https://github.com/TEAMMATES/teammates/commit/575ba668d19ca91bb0985882807ab6a1ff222b1c", "message": "Merge branch 'master' into get-course-section-name-action", "committedDate": "2020-05-19T23:47:15Z", "type": "commit"}]}