{"pr_number": 10622, "pr_title": "[#10613] Reconfigure InstructorFeedbackSubmission access control", "pr_createdAt": "2020-08-20T15:52:01Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10622", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMzcxOQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r474313719", "bodyText": "You should update this as well. This should require the MODIFY_SESSION privilege.", "author": "wkurniawan07", "createdAt": "2020-08-20T22:49:40Z", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -38,10 +39,12 @@ public void checkSpecificAccessControl() {\n             gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(courseId, userInfo.getId()), feedbackSession);", "originalCommit": "bc23cd911d58bd8677dd7a70b01002d25d5bf832", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\nindex 5dfa6a2137..2fc1e35780 100644\n--- a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n\n@@ -36,14 +35,17 @@ public class GetFeedbackSessionAction extends BasicFeedbackSubmissionAction {\n             break;\n         case FULL_DETAIL:\n             gateKeeper.verifyLoggedInUserPrivileges();\n-            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(courseId, userInfo.getId()), feedbackSession);\n+            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(courseId, userInfo.getId()),\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n             break;\n         case INSTRUCTOR_SUBMISSION:\n             InstructorAttributes instructorAttributes = getInstructorOfCourseFromRequest(courseId);\n             checkAccessControlForInstructorFeedbackSubmission(instructorAttributes, feedbackSession);\n             break;\n         case INSTRUCTOR_RESULT:\n-            checkInstructorForSessionAccessPrivilege(feedbackSession);\n+            gateKeeper.verifyLoggedInUserPrivileges();\n+            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(courseId, userInfo.getId()),\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);\n             break;\n         default:\n             throw new InvalidHttpParameterException(\"Unknown intent \" + intent);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNDc3NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r474314775", "bodyText": "This privilege is used to modify the session object itself. The privilege here should be INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS.\nI think there are a few places whereby this mistake happens. Let's take this time to correct them all.", "author": "wkurniawan07", "createdAt": "2020-08-20T22:52:46Z", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -79,4 +82,19 @@ public ActionResult execute() {\n \n         return new JsonResult(response);\n     }\n+\n+    /**\n+     * Checks the access control for instructor feedback submission.\n+     */\n+    private void checkInstructorForSessionAccessPrivilege(FeedbackSessionAttributes feedbackSession) {\n+        String moderatedPerson = getRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON);\n+        gateKeeper.verifyLoggedInUserPrivileges();\n+        if (StringHelper.isEmpty(moderatedPerson)) {\n+            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);\n+        } else {\n+            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);", "originalCommit": "bc23cd911d58bd8677dd7a70b01002d25d5bf832", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\nindex 5dfa6a2137..2fc1e35780 100644\n--- a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n\n@@ -82,19 +84,4 @@ public class GetFeedbackSessionAction extends BasicFeedbackSubmissionAction {\n \n         return new JsonResult(response);\n     }\n-\n-    /**\n-     * Checks the access control for instructor feedback submission.\n-     */\n-    private void checkInstructorForSessionAccessPrivilege(FeedbackSessionAttributes feedbackSession) {\n-        String moderatedPerson = getRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON);\n-        gateKeeper.verifyLoggedInUserPrivileges();\n-        if (StringHelper.isEmpty(moderatedPerson)) {\n-            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n-                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);\n-        } else {\n-            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n-                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NjYwNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r474366605", "bodyText": "Why there is a moderatedPerson here?", "author": "xpdavid", "createdAt": "2020-08-21T02:03:02Z", "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java", "diffHunk": "@@ -79,4 +82,19 @@ public ActionResult execute() {\n \n         return new JsonResult(response);\n     }\n+\n+    /**\n+     * Checks the access control for instructor feedback submission.\n+     */\n+    private void checkInstructorForSessionAccessPrivilege(FeedbackSessionAttributes feedbackSession) {\n+        String moderatedPerson = getRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON);", "originalCommit": "bc23cd911d58bd8677dd7a70b01002d25d5bf832", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5ODgxMA==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r474398810", "bodyText": "This method is supposed to validate any access with intent INSTRUCTOR_RESULT which includes access to this action with non null FEEDBACK_SESSION_MODERATED_PERSON param. See: \n  \n    \n      teammates/src/test/java/teammates/test/cases/webapi/GetFeedbackSessionActionTest.java\n    \n    \n        Lines 215 to 221\n      in\n      bc23cd9\n    \n    \n    \n    \n\n        \n          \n           ______TS(\"Instructor moderates instructor submission with correct privilege will pass\"); \n        \n\n        \n          \n            \n        \n\n        \n          \n           InstructorAttributes instructor1OfCourse1 = typicalBundle.instructors.get(\"instructor1OfCourse1\"); \n        \n\n        \n          \n           params = generateParameters(feedbackSession, intent, \"\", instructor1OfCourse1.email, \"\"); \n        \n\n        \n          \n            \n        \n\n        \n          \n           verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess( \n        \n\n        \n          \n                   Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION, params);", "author": "madanalogy", "createdAt": "2020-08-21T04:15:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQwMDA4OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r474400089", "bodyText": "That's precisely because of the misconfiguration. Moderated person makes no sense when we're talking about instructor result page.", "author": "wkurniawan07", "createdAt": "2020-08-21T04:21:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NjYwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxOTUxNQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r478819515", "bodyText": "I've pushed a refactoring of the access control mechanisms. Please help to check if I understood the nature of the misconfiguration.", "author": "madanalogy", "createdAt": "2020-08-28T04:08:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2NjYwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\nindex 5dfa6a2137..2fc1e35780 100644\n--- a/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/GetFeedbackSessionAction.java\n\n@@ -82,19 +84,4 @@ public class GetFeedbackSessionAction extends BasicFeedbackSubmissionAction {\n \n         return new JsonResult(response);\n     }\n-\n-    /**\n-     * Checks the access control for instructor feedback submission.\n-     */\n-    private void checkInstructorForSessionAccessPrivilege(FeedbackSessionAttributes feedbackSession) {\n-        String moderatedPerson = getRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON);\n-        gateKeeper.verifyLoggedInUserPrivileges();\n-        if (StringHelper.isEmpty(moderatedPerson)) {\n-            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n-                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);\n-        } else {\n-            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n-                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0ODE3Nw==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r479448177", "bodyText": "The previous setting INSTRUCTOR_PERMISSION_MODIFY_SESSION is correct for previewing. This is correct for moderation only. Refer to checkAccessControlForStudentFeedbackSubmission.", "author": "wkurniawan07", "createdAt": "2020-08-28T17:42:38Z", "path": "src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java", "diffHunk": "@@ -126,7 +126,7 @@ protected void checkAccessControlForInstructorFeedbackSubmission(\n         } else {\n             gateKeeper.verifyLoggedInUserPrivileges();\n             gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n-                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS);", "originalCommit": "3aa36a12a88dc9bc6cc9fccac28b64b99fba1c86", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "chunk": "diff --git a/src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java b/src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java\nindex 65dc5cbac4..792579ecb8 100644\n--- a/src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java\n+++ b/src/main/java/teammates/ui/webapi/action/BasicFeedbackSubmissionAction.java\n\n@@ -121,12 +121,16 @@ public abstract class BasicFeedbackSubmissionAction extends Action {\n         String moderatedPerson = getRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON);\n         String previewAsPerson = getRequestParamValue(Const.ParamsNames.PREVIEWAS);\n \n-        if (StringHelper.isEmpty(moderatedPerson) && StringHelper.isEmpty(previewAsPerson)) {\n-            gateKeeper.verifySessionSubmissionPrivilegeForInstructor(feedbackSession, instructor);\n-        } else {\n+        if (!StringHelper.isEmpty(moderatedPerson)) {\n             gateKeeper.verifyLoggedInUserPrivileges();\n             gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n                     feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS);\n+        } else if (!StringHelper.isEmpty(previewAsPerson)) {\n+            gateKeeper.verifyLoggedInUserPrivileges();\n+            gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(feedbackSession.getCourseId(), userInfo.getId()),\n+                    feedbackSession, Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);\n+        } else {\n+            gateKeeper.verifySessionSubmissionPrivilegeForInstructor(feedbackSession, instructor);\n         }\n     }\n \n"}}, {"oid": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "url": "https://github.com/TEAMMATES/teammates/commit/b593c75394fdeb8581ca6442352a80dd7e0ab39d", "message": "Refactor InstructorFeedbackSubmission access control", "committedDate": "2020-09-06T16:46:13Z", "type": "commit"}, {"oid": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "url": "https://github.com/TEAMMATES/teammates/commit/b593c75394fdeb8581ca6442352a80dd7e0ab39d", "message": "Refactor InstructorFeedbackSubmission access control", "committedDate": "2020-09-06T16:46:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE0NzM3OQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10622#discussion_r484147379", "bodyText": "Note that this is an unintended change", "author": "wkurniawan07", "createdAt": "2020-09-07T01:54:41Z", "path": "src/test/java/teammates/test/cases/webapi/GetFeedbackQuestionRecipientsActionTest.java", "diffHunk": "@@ -291,15 +291,17 @@ protected void testAccessControl_instructorSubmission()\n                 generateParameters(firstSessionInCourse1, 3, Intent.INSTRUCTOR_SUBMISSION,\n                         \"\", instructor1OfCourse1.email, \"\");\n         verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess(\n-                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION, moderatedInstructorSubmissionParams);\n+                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS,\n+                moderatedInstructorSubmissionParams);\n \n         ______TS(\"Instructor previews another instructor's question,\"\n                 + \" should be accessible if he has privilege\");\n         String[] previewInstructorSubmissionParams =\n                 generateParameters(firstSessionInCourse1, 3, Intent.INSTRUCTOR_SUBMISSION,\n                         \"\", \"\", instructor1OfCourse1.email);\n         verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess(\n-                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION, previewInstructorSubmissionParams);\n+                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION,\n+                previewInstructorSubmissionParams);", "originalCommit": "b593c75394fdeb8581ca6442352a80dd7e0ab39d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9bfb6d9c3676bd0e02c73883aec5b1e8c63f8f5b", "chunk": "diff --git a/src/test/java/teammates/test/cases/webapi/GetFeedbackQuestionRecipientsActionTest.java b/src/test/java/teammates/test/cases/webapi/GetFeedbackQuestionRecipientsActionTest.java\nindex 6d11e8a4f2..3935a35666 100644\n--- a/src/test/java/teammates/test/cases/webapi/GetFeedbackQuestionRecipientsActionTest.java\n+++ b/src/test/java/teammates/test/cases/webapi/GetFeedbackQuestionRecipientsActionTest.java\n\n@@ -300,8 +300,7 @@ public class GetFeedbackQuestionRecipientsActionTest extends BaseActionTest<GetF\n                 generateParameters(firstSessionInCourse1, 3, Intent.INSTRUCTOR_SUBMISSION,\n                         \"\", \"\", instructor1OfCourse1.email);\n         verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess(\n-                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION,\n-                previewInstructorSubmissionParams);\n+                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION, previewInstructorSubmissionParams);\n \n         ______TS(\"Question not intended shown to instructor, moderated instructor should not be accessible\");\n         loginAsInstructor(instructor1OfCourse1.googleId);\n"}}, {"oid": "9bfb6d9c3676bd0e02c73883aec5b1e8c63f8f5b", "url": "https://github.com/TEAMMATES/teammates/commit/9bfb6d9c3676bd0e02c73883aec5b1e8c63f8f5b", "message": "Revert unintended change", "committedDate": "2020-09-07T02:24:46Z", "type": "commit"}, {"oid": "3cbf5b378c356d10687e26c10a0bb3d5cc2ff72f", "url": "https://github.com/TEAMMATES/teammates/commit/3cbf5b378c356d10687e26c10a0bb3d5cc2ff72f", "message": "Merge branch 'master' into 10613-results\n# Please enter a commit message to explain why this merge is necessary,\n# especially if it merges an updated upstream into a topic branch.\n#\n# Lines starting with '#' will be ignored, and an empty message aborts\n# the commit.", "committedDate": "2020-09-07T02:25:33Z", "type": "commit"}]}