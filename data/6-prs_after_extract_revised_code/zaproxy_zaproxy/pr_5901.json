{"pr_number": 5901, "pr_title": " prevent adding empty/duplicated regex from UI", "pr_createdAt": "2020-03-17T18:15:34Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/5901", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Njk1Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r393886957", "bodyText": "This is syntactically correct but it would be best to use curly braces for consistency", "author": "kingthorin", "createdAt": "2020-03-17T18:30:07Z", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -212,8 +226,13 @@ protected void init() {\n         @Override\n         protected boolean validateFields() {\n             try {\n-                Pattern.compile(getRegexTextField().getText(), Pattern.CASE_INSENSITIVE);\n-            } catch (PatternSyntaxException e) {\n+                String trimmedRegex = getRegexTextField().getText().trim();\n+                if (trimmedRegex.trim().isEmpty()) return false; // to prevent accepting empty regex", "originalCommit": "18b3f61012d14c0cdcc002c71fcd90371cef97f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4NzUyOA==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r393887528", "bodyText": "Also why trim the trimmed value, is there a reason to apply it twice?", "author": "kingthorin", "createdAt": "2020-03-17T18:31:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Njk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NzM2Mg==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r393897362", "bodyText": "to make sure that it's trimmed \ud83d\ude02\nok i'll fix that", "author": "khalil2535", "createdAt": "2020-03-17T18:47:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Njk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5ODQ3OA==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r393898478", "bodyText": "Better trim in checkAndEnableConfirmButton(), not worth enable the button if we are not going to accept it.", "author": "thc202", "createdAt": "2020-03-17T18:49:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Njk1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxOTk4Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r393919987", "bodyText": "@thc202 did this good suggestion", "author": "khalil2535", "createdAt": "2020-03-17T19:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg4Njk1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\nindex f5e3cfcf6..4db744038 100644\n--- a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n+++ b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n\n@@ -225,14 +223,19 @@ public class MultipleRegexesOptionsPanel extends AbstractMultipleOptionsBaseTabl\n \n         @Override\n         protected boolean validateFields() {\n+            String trimmedRegex = getRegexTextField().getText().trim();\n+            if (regexes != null && regexes.contains(trimmedRegex)) {\n+                JOptionPane.showMessageDialog(\n+                        this,\n+                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                getRegexTextField().requestFocusInWindow();\n+                return false;\n+            }\n             try {\n-                String trimmedRegex = getRegexTextField().getText().trim();\n-                if (trimmedRegex.trim().isEmpty()) return false; // to prevent accepting empty regex\n-                if (regexes != null && regexes.contains(trimmedRegex)) {\n-                    throw new IllegalArgumentException(TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG);\n-                }\n                 Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n-            } catch (IllegalArgumentException e) {\n+            } catch (PatternSyntaxException e) {\n                 JOptionPane.showMessageDialog(\n                         this,\n                         MessageFormat.format(TEXT_INVALID_REGEX_DIALOG, e.getLocalizedMessage()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5NTk2Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r397795966", "bodyText": "The description of the method could be tweaked as well. validateRegexs should be updated accordingly.\nThe empty should be lower case (same in the exception message).", "author": "thc202", "createdAt": "2020-03-25T11:51:25Z", "path": "zap/src/main/java/org/zaproxy/zap/model/Context.java", "diffHunk": "@@ -343,17 +343,18 @@ private static void validateRegexs(List<String> regexs) {\n      * Validates that the given regular expression is not {@code null} nor invalid.\n      *\n      * @param regex the regular expression to be validated\n-     * @throws IllegalArgumentException if the regular expression is {@code null}.\n+     * @throws IllegalArgumentException if the regular expression is {@code null} or Empty.", "originalCommit": "3a76ad940ff4c3d50d1620cd7a109509d252d6c8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/model/Context.java b/zap/src/main/java/org/zaproxy/zap/model/Context.java\nindex f8a15b628..031b453ae 100644\n--- a/zap/src/main/java/org/zaproxy/zap/model/Context.java\n+++ b/zap/src/main/java/org/zaproxy/zap/model/Context.java\n\n@@ -340,10 +341,10 @@ public class Context {\n     }\n \n     /**\n-     * Validates that the given regular expression is not {@code null} nor invalid.\n+     * Validates that the given regular expression is valid and it's not {@code null} nor empty.\n      *\n      * @param regex the regular expression to be validated\n-     * @throws IllegalArgumentException if the regular expression is {@code null} or Empty.\n+     * @throws IllegalArgumentException if the regular expression is {@code null} or empty.\n      * @throws PatternSyntaxException if the regular expression is invalid.\n      */\n     private static void validateRegex(String regex) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5NzM3MQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r397797371", "bodyText": "We should not use exceptions for normal/common control flow (when we can avoid it, they are expensive to create). This should show the dialogue and return.\nI'd suggest using other title (e.g. Duplicated Regular Expression) for the error and show without The provided regular expression is not valid:, seems unnecessary.", "author": "thc202", "createdAt": "2020-03-25T11:53:44Z", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -212,8 +226,12 @@ protected void init() {\n         @Override\n         protected boolean validateFields() {\n             try {\n-                Pattern.compile(getRegexTextField().getText(), Pattern.CASE_INSENSITIVE);\n-            } catch (PatternSyntaxException e) {\n+                String trimmedRegex = getRegexTextField().getText().trim();\n+                if (regexes != null && regexes.contains(trimmedRegex)) {\n+                    throw new IllegalArgumentException(TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG);", "originalCommit": "3a76ad940ff4c3d50d1620cd7a109509d252d6c8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\nindex 2837a1508..4db744038 100644\n--- a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n+++ b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n\n@@ -225,13 +223,19 @@ public class MultipleRegexesOptionsPanel extends AbstractMultipleOptionsBaseTabl\n \n         @Override\n         protected boolean validateFields() {\n+            String trimmedRegex = getRegexTextField().getText().trim();\n+            if (regexes != null && regexes.contains(trimmedRegex)) {\n+                JOptionPane.showMessageDialog(\n+                        this,\n+                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                getRegexTextField().requestFocusInWindow();\n+                return false;\n+            }\n             try {\n-                String trimmedRegex = getRegexTextField().getText().trim();\n-                if (regexes != null && regexes.contains(trimmedRegex)) {\n-                    throw new IllegalArgumentException(TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG);\n-                }\n                 Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n-            } catch (IllegalArgumentException e) {\n+            } catch (PatternSyntaxException e) {\n                 JOptionPane.showMessageDialog(\n                         this,\n                         MessageFormat.format(TEXT_INVALID_REGEX_DIALOG, e.getLocalizedMessage()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5OTk1MQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r397799951", "bodyText": "For consistency in what we accept/show we should also trim in performAction.", "author": "thc202", "createdAt": "2020-03-25T11:58:41Z", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -212,8 +226,12 @@ protected void init() {\n         @Override\n         protected boolean validateFields() {\n             try {\n-                Pattern.compile(getRegexTextField().getText(), Pattern.CASE_INSENSITIVE);\n-            } catch (PatternSyntaxException e) {\n+                String trimmedRegex = getRegexTextField().getText().trim();", "originalCommit": "3a76ad940ff4c3d50d1620cd7a109509d252d6c8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\nindex 2837a1508..4db744038 100644\n--- a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n+++ b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n\n@@ -225,13 +223,19 @@ public class MultipleRegexesOptionsPanel extends AbstractMultipleOptionsBaseTabl\n \n         @Override\n         protected boolean validateFields() {\n+            String trimmedRegex = getRegexTextField().getText().trim();\n+            if (regexes != null && regexes.contains(trimmedRegex)) {\n+                JOptionPane.showMessageDialog(\n+                        this,\n+                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                getRegexTextField().requestFocusInWindow();\n+                return false;\n+            }\n             try {\n-                String trimmedRegex = getRegexTextField().getText().trim();\n-                if (regexes != null && regexes.contains(trimmedRegex)) {\n-                    throw new IllegalArgumentException(TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG);\n-                }\n                 Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n-            } catch (IllegalArgumentException e) {\n+            } catch (PatternSyntaxException e) {\n                 JOptionPane.showMessageDialog(\n                         this,\n                         MessageFormat.format(TEXT_INVALID_REGEX_DIALOG, e.getLocalizedMessage()),\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNzk0Mw==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r401107943", "bodyText": "This lost the catch and error message, was that on purpose?", "author": "thc202", "createdAt": "2020-03-31T17:59:59Z", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -211,23 +227,23 @@ protected void init() {\n \n         @Override\n         protected boolean validateFields() {\n-            try {\n-                Pattern.compile(getRegexTextField().getText(), Pattern.CASE_INSENSITIVE);\n-            } catch (PatternSyntaxException e) {\n+            String trimmedRegex = getRegexTextField().getText().trim();\n+            if (regexes != null && regexes.contains(trimmedRegex)) {\n                 JOptionPane.showMessageDialog(\n                         this,\n-                        MessageFormat.format(TEXT_INVALID_REGEX_DIALOG, e.getLocalizedMessage()),\n-                        TITLE_INVALID_REGEX_DIALOG,\n+                        TEXT_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n+                        TITLE_ALREADY_EXIST_INVALID_REGEX_DIALOG,\n                         JOptionPane.INFORMATION_MESSAGE);\n                 getRegexTextField().requestFocusInWindow();\n                 return false;\n             }\n+            Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);", "originalCommit": "91b354fb0902b86125297389c3bca52e4ef23b72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNzE2Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r401437166", "bodyText": "No.", "author": "khalil2535", "createdAt": "2020-04-01T08:21:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNzk0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\nindex bbdd59439..4db744038 100644\n--- a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n+++ b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n\n@@ -237,7 +233,17 @@ public class MultipleRegexesOptionsPanel extends AbstractMultipleOptionsBaseTabl\n                 getRegexTextField().requestFocusInWindow();\n                 return false;\n             }\n-            Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+            try {\n+                Pattern.compile(trimmedRegex, Pattern.CASE_INSENSITIVE);\n+            } catch (PatternSyntaxException e) {\n+                JOptionPane.showMessageDialog(\n+                        this,\n+                        MessageFormat.format(TEXT_INVALID_REGEX_DIALOG, e.getLocalizedMessage()),\n+                        TITLE_INVALID_REGEX_DIALOG,\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                getRegexTextField().requestFocusInWindow();\n+                return false;\n+            }\n             return true;\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNDI3MQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r401114271", "bodyText": "It will have to set the list each time (same for modify), it might change after constructing the dialogue.", "author": "thc202", "createdAt": "2020-03-31T18:10:37Z", "path": "zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java", "diffHunk": "@@ -89,7 +87,7 @@ public void setRegexes(List<String> regexes) {\n     @Override\n     public String showAddDialogue() {\n         if (addDialog == null) {\n-            addDialog = new DialogAddRegex(owner);\n+            addDialog = new DialogAddRegex(owner, this.getRegexes());", "originalCommit": "91b354fb0902b86125297389c3bca52e4ef23b72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNDgwMQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r401434801", "bodyText": "do i have to create new object each time or to create setRegexes method in the DialogAddRegex class ?", "author": "khalil2535", "createdAt": "2020-04-01T08:16:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwMDE4Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r401500186", "bodyText": "I'd go with the setter.", "author": "thc202", "createdAt": "2020-04-01T10:04:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MTMyOQ==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r402181329", "bodyText": "The new constructors could be reverted, they are no longer needed.", "author": "thc202", "createdAt": "2020-04-02T09:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNDI3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIzMTQ2OA==", "url": "https://github.com/zaproxy/zaproxy/pull/5901#discussion_r402231468", "bodyText": "Done @thc202.\nGood advice's, I hope doing more development with you in this project.", "author": "khalil2535", "createdAt": "2020-04-02T11:07:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExNDI3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\nindex bbdd59439..4db744038 100644\n--- a/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n+++ b/zap/src/main/java/org/zaproxy/zap/view/MultipleRegexesOptionsPanel.java\n\n@@ -87,9 +89,11 @@ public class MultipleRegexesOptionsPanel extends AbstractMultipleOptionsBaseTabl\n     @Override\n     public String showAddDialogue() {\n         if (addDialog == null) {\n-            addDialog = new DialogAddRegex(owner, this.getRegexes());\n+            addDialog = new DialogAddRegex(owner);\n             addDialog.pack();\n         }\n+\n+        addDialog.setRegexes(this.getRegexes());\n         addDialog.setVisible(true);\n \n         String regex = addDialog.getRegex();\n"}}, {"oid": "f6efe1278838566f32c99a164fa2a4eedd60c76d", "url": "https://github.com/zaproxy/zaproxy/commit/f6efe1278838566f32c99a164fa2a4eedd60c76d", "message": "prevent adding empty/duplicated regex from UI\n\nSigned-off-by: mahmoud khalil <khalil2535@protonmail.com>", "committedDate": "2020-04-02T11:00:37Z", "type": "commit"}]}