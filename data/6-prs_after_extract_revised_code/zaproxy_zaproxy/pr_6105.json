{"pr_number": 6105, "pr_title": "Depreciate methods returning a Map of params", "pr_createdAt": "2020-07-31T12:02:54Z", "pr_url": "https://github.com/zaproxy/zaproxy/pull/6105", "timeline": [{"oid": "d040386d69383a02a7e883b98ab405d6c169033f", "url": "https://github.com/zaproxy/zaproxy/commit/d040386d69383a02a7e883b98ab405d6c169033f", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-07-31T13:25:56Z", "type": "forcePushed"}, {"oid": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "url": "https://github.com/zaproxy/zaproxy/commit/2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-07-31T13:45:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDI2OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630269", "bodyText": "Add an actual description?", "author": "kingthorin", "createdAt": "2020-07-31T14:03:14Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,6 +1658,18 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return", "originalCommit": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da18255fe18f08ef2d694ca1fe23e809b31380eb", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex b11405366..21f9816c2 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1663,7 +1663,7 @@ public class Session {\n      * context found that includes the URL, or the default parser if it is not in a context\n      *\n      * @param uri\n-     * @return\n+     * @return the URL parameters for the given URL\n      * @throws URIException\n      */\n     public List<NameValuePair> getUrlParameters(URI uri) throws URIException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDQxOQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630419", "bodyText": "Should these annotations have a TODO Add version ?", "author": "kingthorin", "createdAt": "2020-07-31T14:03:32Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1639,7 +1642,9 @@ public ParameterParser getFormParamParser(String url) {\n      * @param uri\n      * @return\n      * @throws URIException\n+     * @deprecated use #getUrlParameters(String)\n      */\n+    @Deprecated", "originalCommit": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0NjAzOQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463646039", "bodyText": "Added in the comment", "author": "psiinon", "createdAt": "2020-07-31T14:31:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDQxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "da18255fe18f08ef2d694ca1fe23e809b31380eb", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex b11405366..21f9816c2 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1642,7 +1642,7 @@ public class Session {\n      * @param uri\n      * @return\n      * @throws URIException\n-     * @deprecated use #getUrlParameters(String)\n+     * @deprecated TODO add version use #getUrlParameters(String)\n      */\n     @Deprecated\n     public Map<String, String> getUrlParams(URI uri) throws URIException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDUzNw==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630537", "bodyText": "Add description?", "author": "kingthorin", "createdAt": "2020-07-31T14:03:46Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1661,11 +1678,26 @@ public ParameterParser getFormParamParser(String url) {\n      * @param formData\n      * @return\n      * @throws URIException\n+     * @deprecated use #getFormParameters(String)\n      */\n+    @Deprecated\n     public Map<String, String> getFormParams(URI uri, String formData) throws URIException {\n         return this.getFormParamParser(uri.toString()).parse(formData);\n     }\n \n+    /**\n+     * Returns the FORM parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @param formData\n+     * @return", "originalCommit": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da18255fe18f08ef2d694ca1fe23e809b31380eb", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex b11405366..21f9816c2 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1676,9 +1676,9 @@ public class Session {\n      *\n      * @param uri\n      * @param formData\n-     * @return\n+     * @return the FORM parameters for the given URL\n      * @throws URIException\n-     * @deprecated use #getFormParameters(String)\n+     * @deprecated TODO add version use #getFormParameters(String)\n      */\n     @Deprecated\n     public Map<String, String> getFormParams(URI uri, String formData) throws URIException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMDkzNQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463630935", "bodyText": "Version? (Below too)", "author": "kingthorin", "createdAt": "2020-07-31T14:04:33Z", "path": "zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java", "diffHunk": "@@ -30,6 +30,8 @@\n \n     void init(String config);\n \n+    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    @Deprecated", "originalCommit": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "da18255fe18f08ef2d694ca1fe23e809b31380eb", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java b/zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java\nindex 19a0d0e9e..a32b6643f 100644\n--- a/zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java\n+++ b/zap/src/main/java/org/zaproxy/zap/model/ParameterParser.java\n\n@@ -30,7 +30,10 @@ public interface ParameterParser {\n \n     void init(String config);\n \n-    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    /**\n+     * @deprecated TODO add version use #getParameters(String) This method will lose duplicated\n+     *     parameter names\n+     */\n     @Deprecated\n     Map<String, String> getParams(HttpMessage msg, HtmlParameter.Type type);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYzMTA2OQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r463631069", "bodyText": "Version? (Below too)", "author": "kingthorin", "createdAt": "2020-07-31T14:04:47Z", "path": "zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java", "diffHunk": "@@ -102,6 +102,8 @@ public String getConfig() {\n         return json.toString();\n     }\n \n+    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    @Deprecated", "originalCommit": "2dbb3a76e32331380a278f0ba2a49f4d3bd35387", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "73dcc5735feaea4013ba9216da68e95f2f8815ad", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java b/zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java\nindex aaa1c8881..05dce8c5e 100644\n--- a/zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java\n+++ b/zap/src/main/java/org/zaproxy/zap/model/StandardParameterParser.java\n\n@@ -102,7 +102,10 @@ public class StandardParameterParser implements ParameterParser {\n         return json.toString();\n     }\n \n-    /** @deprecated use #getParameters(String) This method will lose duplicated parameter names */\n+    /**\n+     * @deprecated TODO add version use #getParameters(String) This method will lose duplicated\n+     *     parameter names\n+     */\n     @Deprecated\n     @Override\n     public Map<String, String> getParams(HttpMessage msg, HtmlParameter.Type type) {\n"}}, {"oid": "da18255fe18f08ef2d694ca1fe23e809b31380eb", "url": "https://github.com/zaproxy/zaproxy/commit/da18255fe18f08ef2d694ca1fe23e809b31380eb", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-07-31T14:30:55Z", "type": "forcePushed"}, {"oid": "73dcc5735feaea4013ba9216da68e95f2f8815ad", "url": "https://github.com/zaproxy/zaproxy/commit/73dcc5735feaea4013ba9216da68e95f2f8815ad", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-07-31T14:37:40Z", "type": "forcePushed"}, {"oid": "2963d602b45570ef175f01f7f79ac4ddcfe5d956", "url": "https://github.com/zaproxy/zaproxy/commit/2963d602b45570ef175f01f7f79ac4ddcfe5d956", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-03T09:22:06Z", "type": "forcePushed"}, {"oid": "fc004cac4f4eed0c3aa35f113bc1d9eb8501e5e5", "url": "https://github.com/zaproxy/zaproxy/commit/fc004cac4f4eed0c3aa35f113bc1d9eb8501e5e5", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-03T10:23:56Z", "type": "forcePushed"}, {"oid": "924db57639082366d2c99e1a1a545c260281f301", "url": "https://github.com/zaproxy/zaproxy/commit/924db57639082366d2c99e1a1a545c260281f301", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-03T11:37:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAxNTgwNg==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r465015806", "bodyText": "Add `@since TODO add version\"?", "author": "kingthorin", "createdAt": "2020-08-04T12:33:32Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,19 +1658,46 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return the URL parameters for the given URL\n+     * @throws URIException", "originalCommit": "924db57639082366d2c99e1a1a545c260281f301", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex 1b3c0b920..e111dbcee 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1665,6 +1665,7 @@ public class Session {\n      * @param uri\n      * @return the URL parameters for the given URL\n      * @throws URIException\n+     * @since TODO add version\n      */\n     public List<NameValuePair> getUrlParameters(URI uri) throws URIException {\n         return getUrlParamParser(uri.toString()).parseParameters(uri.getEscapedQuery());\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAxNTk1Ng==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r465015956", "bodyText": "Add `@since TODO add version\"?", "author": "kingthorin", "createdAt": "2020-08-04T12:33:46Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1653,19 +1658,46 @@ public ParameterParser getFormParamParser(String url) {\n         return map;\n     }\n \n+    /**\n+     * Returns the URL parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @return the URL parameters for the given URL\n+     * @throws URIException\n+     */\n+    public List<NameValuePair> getUrlParameters(URI uri) throws URIException {\n+        return getUrlParamParser(uri.toString()).parseParameters(uri.getEscapedQuery());\n+    }\n+\n     /**\n      * Returns the FORM parameters for the given URL based on the parser associated with the first\n      * context found that includes the URL, or the default parser if it is not in a context\n      *\n      * @param uri\n      * @param formData\n-     * @return\n+     * @return the FORM parameters for the given URL\n      * @throws URIException\n+     * @deprecated TODO add version use #getFormParameters(String)\n      */\n+    @Deprecated\n     public Map<String, String> getFormParams(URI uri, String formData) throws URIException {\n         return this.getFormParamParser(uri.toString()).parse(formData);\n     }\n \n+    /**\n+     * Returns the FORM parameters for the given URL based on the parser associated with the first\n+     * context found that includes the URL, or the default parser if it is not in a context\n+     *\n+     * @param uri\n+     * @param formData\n+     * @return the FORM parameters for the given URL\n+     * @throws URIException", "originalCommit": "924db57639082366d2c99e1a1a545c260281f301", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex 1b3c0b920..e111dbcee 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1665,6 +1665,7 @@ public class Session {\n      * @param uri\n      * @return the URL parameters for the given URL\n      * @throws URIException\n+     * @since TODO add version\n      */\n     public List<NameValuePair> getUrlParameters(URI uri) throws URIException {\n         return getUrlParamParser(uri.toString()).parseParameters(uri.getEscapedQuery());\n"}}, {"oid": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "url": "https://github.com/zaproxy/zaproxy/commit/5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-05T08:33:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzg3NQ==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303875", "bodyText": "(TODO add version)", "author": "thc202", "createdAt": "2020-08-06T10:00:49Z", "path": "zap/src/main/java/org/parosproxy/paros/model/Session.java", "diffHunk": "@@ -1583,7 +1584,9 @@ public ParameterParser getFormParamParser(String url) {\n      * @param msg\n      * @param type\n      * @return\n+     * @deprecated use #getParameters(String) This method will lose duplicated parameter names", "originalCommit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/model/Session.java b/zap/src/main/java/org/parosproxy/paros/model/Session.java\nindex e111dbcee..b734379b4 100644\n--- a/zap/src/main/java/org/parosproxy/paros/model/Session.java\n+++ b/zap/src/main/java/org/parosproxy/paros/model/Session.java\n\n@@ -1584,7 +1584,8 @@ public class Session {\n      * @param msg\n      * @param type\n      * @return\n-     * @deprecated use #getParameters(String) This method will lose duplicated parameter names\n+     * @deprecated TODO add version use #getParameters(String) This method will lose duplicated\n+     *     parameter names\n      */\n     @Deprecated\n     public Map<String, String> getParams(HttpMessage msg, HtmlParameter.Type type) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzkyMg==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303922", "bodyText": "Remove?", "author": "thc202", "createdAt": "2020-08-06T10:00:54Z", "path": "zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java", "diffHunk": "@@ -645,24 +637,60 @@ private boolean queryEquals(HttpMessage msg) {\n      */\n     public TreeSet<String> getParamNameSet(HtmlParameter.Type type) {\n         TreeSet<String> set = new TreeSet<>();\n-        Map<String, String> paramMap = Model.getSingleton().getSession().getParams(this, type);\n+        List<NameValuePair> paramList = Model.getSingleton().getSession().getParameters(this, type);\n \n-        for (Entry<String, String> param : paramMap.entrySet()) {\n-            set.add(param.getKey());\n+        for (NameValuePair nvp : paramList) {\n+            set.add(nvp.getName());\n         }\n         return set;\n     }\n \n+    /**\n+     * Returns the names of the parameters of the given {@code type} in a List. The List can return\n+     * duplicated names.\n+     *\n+     * @param type the type of the parameters that will be extracted from the message\n+     * @return a {@code List} with the names of the parameters of the given {@code type}, never\n+     *     {@code null}\n+     * @since TODO add version\n+     */\n+    public List<String> getParameterNames(HtmlParameter.Type type) {\n+        List<String> list = new ArrayList<String>();\n+        Model.getSingleton()\n+                .getSession()\n+                .getParameters(this, type)\n+                .forEach((nvp) -> list.add(nvp.getName()));\n+        ;", "originalCommit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "chunk": "diff --git a/zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java b/zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java\nindex 098c3e9c2..4d8a60630 100644\n--- a/zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java\n+++ b/zap/src/main/java/org/parosproxy/paros/network/HttpMessage.java\n\n@@ -660,7 +660,6 @@ public class HttpMessage implements Message {\n                 .getSession()\n                 .getParameters(this, type)\n                 .forEach((nvp) -> list.add(nvp.getName()));\n-        ;\n         return list;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwMzk1Nw==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466303957", "bodyText": "Revert? (Same comment for following change.)", "author": "thc202", "createdAt": "2020-08-06T10:00:58Z", "path": "zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java", "diffHunk": "@@ -139,12 +139,12 @@ public int compareTo(DefaultNameValuePair other) {\n             return 1;\n         }\n \n-        int res = compareStrings(name, other.name);\n+        int res = compareStrings(name, other.getName());", "originalCommit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "chunk": "diff --git a/zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java b/zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java\nindex 8e9755fe4..87696a537 100644\n--- a/zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java\n+++ b/zap/src/main/java/org/zaproxy/zap/model/DefaultNameValuePair.java\n\n@@ -139,7 +139,7 @@ public final class DefaultNameValuePair implements NameValuePair, Comparable<Def\n             return 1;\n         }\n \n-        int res = compareStrings(name, other.getName());\n+        int res = compareStrings(name, other.name);\n         if (res != 0) {\n             return res;\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMwNDAyNg==", "url": "https://github.com/zaproxy/zaproxy/pull/6105#discussion_r466304026", "bodyText": "We should keep these and suppress the deprecations, to continue checking that they are working properly.", "author": "thc202", "createdAt": "2020-08-06T10:01:04Z", "path": "zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java", "diffHunk": "@@ -51,11 +50,16 @@ public void defaultParser() {\n         assertEquals(spp.getKeyValuePairSeparators(), \"&\");\n         assertEquals(spp.getKeyValueSeparators(), \"=\");\n         assertEquals(spp.getStructuralParameters().size(), 0);\n-        Map<String, String> res = spp.parse(\"a=b&b=c&d=f\");", "originalCommit": "5587b2a031eb1657f7919a5a5c1a1d09c291cd02", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "chunk": "diff --git a/zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java b/zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java\nindex ba6314871..bc3e8420c 100644\n--- a/zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java\n+++ b/zap/src/test/java/org/zaproxy/zap/model/StandardParameterParserUnitTest.java\n\n@@ -50,16 +51,24 @@ public class StandardParameterParserUnitTest {\n         assertEquals(spp.getKeyValuePairSeparators(), \"&\");\n         assertEquals(spp.getKeyValueSeparators(), \"=\");\n         assertEquals(spp.getStructuralParameters().size(), 0);\n-        List<NameValuePair> res = spp.parseParameters(\"a=b&b=c&d=f&d=g\");\n-        assertEquals(res.size(), 4);\n-        assertEquals(res.get(0).getName(), \"a\");\n-        assertEquals(res.get(0).getValue(), \"b\");\n-        assertEquals(res.get(1).getName(), \"b\");\n-        assertEquals(res.get(1).getValue(), \"c\");\n-        assertEquals(res.get(2).getName(), \"d\");\n-        assertEquals(res.get(2).getValue(), \"f\");\n-        assertEquals(res.get(3).getName(), \"d\");\n-        assertEquals(res.get(3).getValue(), \"g\");\n+\n+        @SuppressWarnings(\"deprecation\")\n+        Map<String, String> res = spp.parse(\"a=b&b=c&d=f\");\n+        assertEquals(res.size(), 3);\n+        assertEquals(res.get(\"a\"), \"b\");\n+        assertEquals(res.get(\"b\"), \"c\");\n+        assertEquals(res.get(\"d\"), \"f\");\n+\n+        List<NameValuePair> res2 = spp.parseParameters(\"a=b&b=c&d=f&d=g\");\n+        assertEquals(res2.size(), 4);\n+        assertEquals(res2.get(0).getName(), \"a\");\n+        assertEquals(res2.get(0).getValue(), \"b\");\n+        assertEquals(res2.get(1).getName(), \"b\");\n+        assertEquals(res2.get(1).getValue(), \"c\");\n+        assertEquals(res2.get(2).getName(), \"d\");\n+        assertEquals(res2.get(2).getValue(), \"f\");\n+        assertEquals(res2.get(3).getName(), \"d\");\n+        assertEquals(res2.get(3).getValue(), \"g\");\n     }\n \n     @Test\n"}}, {"oid": "ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "url": "https://github.com/zaproxy/zaproxy/commit/ba5efe0ef67a1302cfca37bcb8d5e30dd756ed8e", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-07T08:38:44Z", "type": "forcePushed"}, {"oid": "bf00319fcf4f5ada9187d631c6c91053a4853fb0", "url": "https://github.com/zaproxy/zaproxy/commit/bf00319fcf4f5ada9187d631c6c91053a4853fb0", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-07T11:43:36Z", "type": "commit"}, {"oid": "bf00319fcf4f5ada9187d631c6c91053a4853fb0", "url": "https://github.com/zaproxy/zaproxy/commit/bf00319fcf4f5ada9187d631c6c91053a4853fb0", "message": "Depreciate methods returning a Map of params\n\nSigned-off-by: Simon Bennetts <psiinon@gmail.com>", "committedDate": "2020-08-07T11:43:36Z", "type": "forcePushed"}]}