{"pr_number": 999, "pr_title": "Ignore pull image failure OKAPI-920", "pr_createdAt": "2020-10-14T09:57:24Z", "pr_url": "https://github.com/folio-org/okapi/pull/999", "timeline": [{"oid": "46e89068ce92e25541680f888150911ce4324fe6", "url": "https://github.com/folio-org/okapi/commit/46e89068ce92e25541680f888150911ce4324fe6", "message": "Ignore pull image failure OKAPI-920", "committedDate": "2020-10-14T09:56:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDg4Mg==", "url": "https://github.com/folio-org/okapi/pull/999#discussion_r504564882", "bodyText": "Maybe adding a line to explain why x -> prepareContainer() is called twice?", "author": "hjiebsco", "createdAt": "2020-10-14T10:18:28Z", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java", "diffHunk": "@@ -367,7 +367,7 @@ private int getExposedPort(JsonObject b) {\n   @Override\n   public Future<Void> start() {\n     if (dockerPull) {\n-      return pullImage().compose(x -> prepareContainer());\n+      return pullImage().compose(x -> prepareContainer(), x -> prepareContainer());", "originalCommit": "46e89068ce92e25541680f888150911ce4324fe6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5Njc2Mg==", "url": "https://github.com/folio-org/okapi/pull/999#discussion_r505696762", "bodyText": "It's not called twice.. Called on success and failure.. I'll use another more explicit method: Future.recover.", "author": "adamdickmeiss", "createdAt": "2020-10-15T16:56:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2NDg4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "2d80c8723d7d9914e40c4a659b63614baaf6dce1", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java b/okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java\nindex f4160d03..332dccaf 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/service/impl/DockerModuleHandle.java\n\n@@ -367,7 +367,8 @@ public class DockerModuleHandle implements ModuleHandle {\n   @Override\n   public Future<Void> start() {\n     if (dockerPull) {\n-      return pullImage().compose(x -> prepareContainer(), x -> prepareContainer());\n+      // ignore error for pullImage.. if image is not present locally prepareContainer will fail\n+      return pullImage().recover(x -> Future.succeededFuture()).compose(x -> prepareContainer());\n     }\n     return prepareContainer();\n   }\n"}}, {"oid": "2d80c8723d7d9914e40c4a659b63614baaf6dce1", "url": "https://github.com/folio-org/okapi/commit/2d80c8723d7d9914e40c4a659b63614baaf6dce1", "message": "Use recover and annotate", "committedDate": "2020-10-15T16:46:19Z", "type": "commit"}, {"oid": "288bc8365eda67140182f666e34010fc78de5d46", "url": "https://github.com/folio-org/okapi/commit/288bc8365eda67140182f666e34010fc78de5d46", "message": "Merge branch 'master' into OKAPI-920-ignore-pull-image-failure", "committedDate": "2020-10-15T16:56:48Z", "type": "commit"}]}