{"pr_number": 958, "pr_title": "Okapi 860 metrics", "pr_createdAt": "2020-08-11T10:59:25Z", "pr_url": "https://github.com/folio-org/okapi/pull/958", "timeline": [{"oid": "39ec750a354c83e3faf2e6fa456970d42e2d72b2", "url": "https://github.com/folio-org/okapi/commit/39ec750a354c83e3faf2e6fa456970d42e2d72b2", "message": "Add HTTP proxy micrometer InfluxDB metrics", "committedDate": "2020-08-11T10:08:48Z", "type": "commit"}, {"oid": "d9e0f9dbc987cd2cdaa99e56442a1b914f77f654", "url": "https://github.com/folio-org/okapi/commit/d9e0f9dbc987cd2cdaa99e56442a1b914f77f654", "message": "Fix Sonar code smells", "committedDate": "2020-08-11T10:31:07Z", "type": "commit"}, {"oid": "c7e982e5bbc2bdf1944a8b9f12da4b24066dc3a3", "url": "https://github.com/folio-org/okapi/commit/c7e982e5bbc2bdf1944a8b9f12da4b24066dc3a3", "message": "Fix Sonar code smells", "committedDate": "2020-08-11T10:42:34Z", "type": "commit"}, {"oid": "cfb196bbf5597f0e028008b4e52c94a8098072df", "url": "https://github.com/folio-org/okapi/commit/cfb196bbf5597f0e028008b4e52c94a8098072df", "message": "Fix Sonar code smells", "committedDate": "2020-08-11T10:52:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NDE4MA==", "url": "https://github.com/folio-org/okapi/pull/958#discussion_r469384180", "bodyText": "There is no need to create an Optional for the sole purpose of providing a default value for null.\nThere exist several idioms for this:\n\nString.toString(influxUrl, \"http://localhost:8086\")\nObject.toString(influxUrl, \"http://localhost:8086\")\nStringUtils.defaultString(influxUrl, \"http://localhost:8086\")\nObjectUtils.firstNonNull(influxUrl, \"http://localhost:8086\")\n\n(There are 5 such Optional instances in this file.)", "author": "julianladisch", "createdAt": "2020-08-12T16:22:35Z", "path": "okapi-core/src/main/java/org/folio/okapi/util/MetricsHelper.java", "diffHunk": "@@ -0,0 +1,216 @@\n+package org.folio.okapi.util;\n+\n+import io.micrometer.core.instrument.Counter;\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.Tag;\n+import io.micrometer.core.instrument.Timer;\n+import io.micrometer.core.instrument.Timer.Sample;\n+import io.micrometer.core.instrument.simple.SimpleMeterRegistry;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.micrometer.MicrometerMetricsOptions;\n+import io.vertx.micrometer.VertxInfluxDbOptions;\n+import io.vertx.micrometer.backends.BackendRegistries;\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.logging.log4j.Logger;\n+import org.folio.okapi.bean.ModuleInstance;\n+import org.folio.okapi.common.OkapiLogger;\n+\n+/**\n+ * Metrics handling.\n+ */\n+public class MetricsHelper {\n+\n+  private static final Logger logger = OkapiLogger.get();\n+\n+  private static final String METRICS_PREFIX = \"org.folio.okapi\";\n+  private static final String METRICS_HTTP = METRICS_PREFIX + \".http\";\n+  private static final String METRICS_HTTP_SERVER = METRICS_HTTP + \".server\";\n+  private static final String METRICS_HTTP_CLIENT = METRICS_HTTP + \".client\";\n+  private static final String METRICS_HTTP_SERVER_PROCESSING_TIME = METRICS_HTTP_SERVER\n+      + \".processingTime\";\n+  private static final String METRICS_HTTP_CLIENT_RESPONSE_TIME = METRICS_HTTP_CLIENT\n+      + \".responseTime\";\n+  private static final String METRICS_HTTP_CLIENT_ERRORS = METRICS_HTTP_CLIENT\n+      + \".errors\";\n+\n+  private static final String TAG_HOST = \"host\";\n+  private static final String TAG_TENANT = \"tenant\";\n+  private static final String TAG_CODE = \"code\";\n+  private static final String TAG_METHOD = \"method\";\n+  private static final String TAG_MODULE = \"module\";\n+  private static final String TAG_URL = \"url\";\n+  private static final String TAG_PHASE = \"phase\";\n+  private static final String TAG_EMPTY = \"null\";\n+\n+  static final String HOST_UNKNOWN = \"unknown\";\n+\n+  private static boolean enabled = false;\n+  private static MeterRegistry registry;\n+\n+  private MetricsHelper() {\n+  }\n+\n+  /**\n+   * Config metrics options - specifically use InfluxDb micrometer options.\n+   *\n+   * @param vertxOptions   - {@link VertxOptions}\n+   * @param influxUrl      - default to http://localhost:8086\n+   * @param influxDbName   - default to okapi\n+   * @param influxUserName - default to null\n+   * @param influxPassword - default to null\n+   */\n+  public static void config(VertxOptions vertxOptions, String influxUrl,\n+      String influxDbName, String influxUserName, String influxPassword) {\n+    VertxInfluxDbOptions influxDbOptions = new VertxInfluxDbOptions()\n+        .setEnabled(true)\n+        .setUri(Optional.ofNullable(influxUrl).orElse(\"http://localhost:8086\"))", "originalCommit": "cfb196bbf5597f0e028008b4e52c94a8098072df", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NjEyOA==", "url": "https://github.com/folio-org/okapi/pull/958#discussion_r469596128", "bodyText": "Thanks for the suggestions. For the four simple string assignments, I switched to use ternary operator to check null. That seems more intuitive. I kept Optional for the registry assignment so we do not have to depend on 3rd party libraries. I am not familiar with the first item on your list String.toString(a, b), which utility library provides that?", "author": "hjiebsco", "createdAt": "2020-08-12T23:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NDE4MA=="}], "type": "inlineReview", "revised_code": {"commit": "ff34ff6709ab4fd771bbcf7657dfac705b054d36", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/util/MetricsHelper.java b/okapi-core/src/main/java/org/folio/okapi/util/MetricsHelper.java\nindex 4d43b601..9f1158d0 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/util/MetricsHelper.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/util/MetricsHelper.java\n\n@@ -67,8 +67,8 @@ public class MetricsHelper {\n       String influxDbName, String influxUserName, String influxPassword) {\n     VertxInfluxDbOptions influxDbOptions = new VertxInfluxDbOptions()\n         .setEnabled(true)\n-        .setUri(Optional.ofNullable(influxUrl).orElse(\"http://localhost:8086\"))\n-        .setDb(Optional.ofNullable(influxDbName).orElse(\"okapi\"));\n+        .setUri(influxUrl == null ? \"http://localhost:8086\" : influxUrl)\n+        .setDb(influxDbName == null ? \"okapi\" : influxDbName);\n     if (influxUserName != null) {\n       influxDbOptions.setUserName(influxUserName);\n     }\n"}}, {"oid": "ff34ff6709ab4fd771bbcf7657dfac705b054d36", "url": "https://github.com/folio-org/okapi/commit/ff34ff6709ab4fd771bbcf7657dfac705b054d36", "message": "Refactor a bit based on review", "committedDate": "2020-08-12T19:20:33Z", "type": "commit"}]}