{"pr_number": 1037, "pr_title": "OKAPI-944 failed tests on mac and ec2", "pr_createdAt": "2020-11-06T22:46:59Z", "pr_url": "https://github.com/folio-org/okapi/pull/1037", "timeline": [{"oid": "7d5d3697cb29aac983ae83924502cfac14af1f4a", "url": "https://github.com/folio-org/okapi/commit/7d5d3697cb29aac983ae83924502cfac14af1f4a", "message": "Give more time for process to start/stop", "committedDate": "2020-11-06T19:20:13Z", "type": "commit"}, {"oid": "791d429ec1edec85d315487f79cf970eab82141a", "url": "https://github.com/folio-org/okapi/commit/791d429ec1edec85d315487f79cf970eab82141a", "message": "Match message in AWS ec2 env", "committedDate": "2020-11-06T21:59:36Z", "type": "commit"}, {"oid": "9f415a732d0a6a80466d4c392cc42ee0618ead7a", "url": "https://github.com/folio-org/okapi/commit/9f415a732d0a6a80466d4c392cc42ee0618ead7a", "message": "Update testcontainers to fix Ryuk connection issue on macOS", "committedDate": "2020-11-07T15:34:24Z", "type": "commit"}, {"oid": "0539863d47b5d9bd912a44e0d32c2bf609561c97", "url": "https://github.com/folio-org/okapi/commit/0539863d47b5d9bd912a44e0d32c2bf609561c97", "message": "use assertThat", "committedDate": "2020-11-09T10:40:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519734236", "bodyText": "How do you conclude that the NuPocess is not returning the right process? As far as I can tell it reaches waitReady as it should, but the Test doesn't wait enough time.. So I think we should just increase waitIterations in ProcessModuleHandleTest, say, from 15 to 20 (desc.setWaitIterations(15)).\nThe test runs a Bourne Shell script and that's the exit code we check (also on Linux).\nIncreasing from 1 to 3 seconds will make ALL process deployments 2 seconds slower.", "author": "adamdickmeiss", "createdAt": "2020-11-09T11:20:47Z", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java", "diffHunk": "@@ -149,7 +149,7 @@ private NuProcess launch(EnvEntry[] env, String [] command) {\n     Promise<Void> promise = Promise.promise();\n     // time to wait for process status.. when a port is present (always in real life)..\n     // The waitReady will check if process eventually starts listening on port\n-    vertx.setTimer(port == 0 ? 3000 : 1000, timerRes -> {\n+    vertx.setTimer(3000, timerRes -> {", "originalCommit": "0539863d47b5d9bd912a44e0d32c2bf609561c97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5MzgxNA==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519793814", "bodyText": "I tried that initially and it did not work. I added some debug statements and found out the PID difference. For example:\nStarting test: testCmdlineOk\n07:59:13 [] [] [] [] INFO  Messages             Loading messages from /infra-messages/Messages_en.properties\n07:59:15 [] [] [] [] INFO  TcpPortWaiting       tryConnect() host localhost port 9231 count 0\nres suceeded: false\nprocess is null? false\nprocess id 52222\nprocess is running? false\n\nThe actual Java process\nhji              52223   0.0  0.6 10281380  98932   ??  S     7:59AM   0:02.48 /usr/bin/java -DpidFile=test-module.pid -Dport=9231 -jar ../okapi-test-module/target/okapi-test-module-fat.jar", "author": "hjiebsco", "createdAt": "2020-11-09T13:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg0MzAzOA==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519843038", "bodyText": "The PID is a red herring..  Not related.. The PID is the Bourne Shell on my system too. The error message is coming from the code that waits for the port to become ready.. Please increase it to 20.", "author": "adamdickmeiss", "createdAt": "2020-11-09T14:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg2Njg2Nw==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519866867", "bodyText": "It does not work. See below console output for failed testCmdlineOk test. The reason it does not work is here https://github.com/folio-org/okapi/blob/master/okapi-core/src/main/java/org/folio/okapi/util/TcpPortWaiting.java#L41-L53.\nWhen res is false, proces is not null and not running (because of PID mismatch), the try maxIteration loop does not kick in. BTW, in AWS ec2 linux evn, the PID from sh and Java is the same.  But on my macOS that is not the case.\nStarting test: testCmdlineOk\n09:39:23 [] [] [] [] INFO  Messages             Loading messages from /infra-messages/Messages_en.properties\n09:39:25 [] [] [] [] INFO  TcpPortWaiting       tryConnect() host localhost port 9231 count 0\nmaxIterations is 20\nres suceeded: false\nprocess is null? false\nprocess id 54052\nprocess is running? false", "author": "hjiebsco", "createdAt": "2020-11-09T14:46:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTg4MjA3MQ==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519882071", "bodyText": "You are right .. isRunning is the problem .. So we should not even bother to check it when the process spawned is a Bourne shell .. (cmdLineStart, cmdLineStop).", "author": "adamdickmeiss", "createdAt": "2020-11-09T15:05:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkwMjYzMg==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519902632", "bodyText": "Made changes suggested by @adamdickmeiss", "author": "hjiebsco", "createdAt": "2020-11-09T15:33:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDIzNg=="}], "type": "inlineReview", "revised_code": {"commit": "83b9edc59c580032395827a71b9009fbdeca9a2b", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java b/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\nindex 836e0971..f46d6721 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\n\n@@ -149,7 +149,7 @@ public class ProcessModuleHandle extends NuAbstractProcessHandler implements Mod\n     Promise<Void> promise = Promise.promise();\n     // time to wait for process status.. when a port is present (always in real life)..\n     // The waitReady will check if process eventually starts listening on port\n-    vertx.setTimer(3000, timerRes -> {\n+    vertx.setTimer(port == 0 ? 3000 : 1000, timerRes -> {\n       if (process.isRunning() || exitCode == 0) {\n         promise.complete();\n         return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDYyNQ==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519734625", "bodyText": "Same here.. Increasing waitIterations is a better solution, IMHO.", "author": "adamdickmeiss", "createdAt": "2020-11-09T11:21:29Z", "path": "okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java", "diffHunk": "@@ -198,7 +198,7 @@ private NuProcess launch(EnvEntry[] env, String [] command) {\n     Promise<Void> promise = Promise.promise();\n     // time to wait for process that shuts down service.. when a port is present (always in prod)\n     // The waitPortClose will wait for service to shut down\n-    vertx.setTimer(port == 0 ? 3000 : 1000, timerRes -> {\n+    vertx.setTimer(3000, timerRes -> {\n       if (pp.isRunning() || exitCode == 0) {", "originalCommit": "0539863d47b5d9bd912a44e0d32c2bf609561c97", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "83b9edc59c580032395827a71b9009fbdeca9a2b", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java b/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\nindex 836e0971..f46d6721 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/service/impl/ProcessModuleHandle.java\n\n@@ -198,7 +198,7 @@ public class ProcessModuleHandle extends NuAbstractProcessHandler implements Mod\n     Promise<Void> promise = Promise.promise();\n     // time to wait for process that shuts down service.. when a port is present (always in prod)\n     // The waitPortClose will wait for service to shut down\n-    vertx.setTimer(3000, timerRes -> {\n+    vertx.setTimer(port == 0 ? 3000 : 1000, timerRes -> {\n       if (pp.isRunning() || exitCode == 0) {\n         promise.complete();\n         return;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNDc2NA==", "url": "https://github.com/folio-org/okapi/pull/1037#discussion_r519734764", "bodyText": "Yes", "author": "adamdickmeiss", "createdAt": "2020-11-09T11:21:45Z", "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -511,7 +511,7 @@ public void testDockerVersionAtLocal(TestContext context) {\n     {\n       Async async = context.async();\n       dh.pullImage().onComplete(context.asyncAssertFailure(res -> {\n-        context.assertTrue(res.getMessage().contains(\"9231: connect: connection refused\"), res.getMessage());\n+        assertThat(res.getMessage()).contains(\"9231\").contains(\"connection refused\");", "originalCommit": "0539863d47b5d9bd912a44e0d32c2bf609561c97", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "83b9edc59c580032395827a71b9009fbdeca9a2b", "url": "https://github.com/folio-org/okapi/commit/83b9edc59c580032395827a71b9009fbdeca9a2b", "message": "Changes per Adam PR review", "committedDate": "2020-11-09T15:29:14Z", "type": "commit"}, {"oid": "3f59fc6c0a45f85db6d6538d36194a5f25713c42", "url": "https://github.com/folio-org/okapi/commit/3f59fc6c0a45f85db6d6538d36194a5f25713c42", "message": "Make testProgramNoListener faster", "committedDate": "2020-11-09T15:43:31Z", "type": "commit"}]}