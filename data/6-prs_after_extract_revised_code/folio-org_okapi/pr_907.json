{"pr_number": 907, "pr_title": "Adjust test to not fail for insufficient Docker perms OKAPI-823", "pr_createdAt": "2020-04-06T19:47:55Z", "pr_url": "https://github.com/folio-org/okapi/pull/907", "timeline": [{"oid": "0e62394277ad56aee789e055e41ba196ed7041f8", "url": "https://github.com/folio-org/okapi/commit/0e62394277ad56aee789e055e41ba196ed7041f8", "message": "Adjust test to not fail for insufficient Docker perms OKAPI-823", "committedDate": "2020-04-06T16:46:36Z", "type": "commit"}, {"oid": "496a5b28d315587372c62fd05dcf3d04fb55e489", "url": "https://github.com/folio-org/okapi/commit/496a5b28d315587372c62fd05dcf3d04fb55e489", "message": "Merge branch 'master' into okapi-823-fix-docker-module-handle-test-may-fail", "committedDate": "2020-04-07T10:12:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkzODQwMA==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r404938400", "bodyText": "If you use\n\ncontext.asyncAssertSuccess(res -> {\ncontext.asyncAssertFailure(ex -> {\ncontext.verify(verify -> {\n\nyou can\n\navoid manual async\navoid async.await\navoid context.assertTrue(res.failed()) and context.assertTrue(res.succeeded())\nand use Assume.assume... inside an asyncAsserSuccess/asyncAssertFailure/verify block to properly skip a test so that JUnit reports it as skipped.", "author": "julianladisch", "createdAt": "2020-04-07T16:17:46Z", "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -88,7 +89,6 @@ public void testDockerVersionAtLocal(TestContext context) {\n       \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\", 9232, new JsonObject());\n \n     dh.getUrl(\"/version\", res -> {\n-      Assume.assumeTrue(res.succeeded());", "originalCommit": "496a5b28d315587372c62fd05dcf3d04fb55e489", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "20f9fc504306a19cc1fdf2c2430558c52f51f2b0", "chunk": "diff --git a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\nindex ba44ee18..096bb8bb 100644\n--- a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n+++ b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n\n@@ -88,28 +80,27 @@ public class DockerModuleHandleTest {\n     DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n       \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\", 9232, new JsonObject());\n \n+    JsonObject versionRes = new JsonObject();\n+    Async async = context.async();\n     dh.getUrl(\"/version\", res -> {\n-      if (res.failed()) {\n-        logger.warn(res.cause().getMessage());\n-        async.complete();\n-        return;\n+      if (res.succeeded()) {\n+        versionRes.put(\"result\", res.result());\n       }\n-      dh.deleteUrl(\"/version\", \"msg\", res2 -> { // provoke 404 not found\n-        context.assertTrue(res2.failed());\n-        if (res2.failed()) {\n-          context.assertTrue(res2.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-            res2.cause().getMessage());\n-        }\n-        dh.postUrlJson(\"/version\", \"msg\", \"{}\", res3 -> { // provoke 404 not found\n-          context.assertTrue(res2.failed());\n-          if (res3.failed()) {\n-            context.assertTrue(res3.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-              res3.cause().getMessage());\n-          }\n-          async.complete();\n-        });\n-      });\n+      async.complete();\n     });\n     async.await(1000);\n+    Assume.assumeTrue(versionRes.containsKey(\"result\"));\n+    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Platform\"));\n+\n+    // provoke 404 not found\n+    dh.deleteUrl(\"/version\", \"msg\", context.asyncAssertFailure(cause -> {\n+      context.assertTrue(cause.getMessage().startsWith(\"msg HTTP error 404\"),\n+        cause.getMessage());\n+      // provoke 404 not found\n+      dh.postUrlJson(\"/version\", \"msg\", \"{}\", context.asyncAssertFailure(cause2 -> {\n+        context.assertTrue(cause2.getMessage().startsWith(\"msg HTTP error 404\"),\n+          cause2.getMessage());\n+      }));\n+    }));\n   }\n }\n"}}, {"oid": "20f9fc504306a19cc1fdf2c2430558c52f51f2b0", "url": "https://github.com/folio-org/okapi/commit/20f9fc504306a19cc1fdf2c2430558c52f51f2b0", "message": "use context.assert a bit more; AssumeTrue for skip", "committedDate": "2020-04-09T15:44:41Z", "type": "commit"}, {"oid": "5890d5783b27fe956a287c388c58c3c557f7b041", "url": "https://github.com/folio-org/okapi/commit/5890d5783b27fe956a287c388c58c3c557f7b041", "message": "Merge branch 'master' into okapi-823-fix-docker-module-handle-test-may-fail", "committedDate": "2020-04-09T17:45:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNTM2NA==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406535364", "bodyText": "Can you remove this line or tweak it? It failed on one of our ec2 box because \"Platform\" does not exist. The actual result is {\"Version\":\"17.06.2-ce\",\"ApiVersion\":\"1.30\",\"MinAPIVersion\":\"1.12\",\"GitCommit\":\"402dd4a/17.06.2-ce\",\"GoVersion\":\"go1.8.3\",\"Os\":\"linux\",\"Arch\":\"amd64\",\"KernelVersion\":\"4.14.94-89.73.amzn2.x86_64\",\"BuildTime\":\"2017-11-14T22:04:39.163310834+00:00\"}", "author": "hjiebsco", "createdAt": "2020-04-09T23:47:01Z", "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -87,28 +80,27 @@ public void testDockerVersionAtLocal(TestContext context) {\n     DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n       \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\", 9232, new JsonObject());\n \n+    JsonObject versionRes = new JsonObject();\n+    Async async = context.async();\n     dh.getUrl(\"/version\", res -> {\n-      Assume.assumeTrue(res.succeeded());\n-      if (res.failed()) {\n-        logger.warn(res.cause().getMessage());\n-        async.complete();\n-        return;\n+      if (res.succeeded()) {\n+        versionRes.put(\"result\", res.result());\n       }\n-      dh.deleteUrl(\"/version\", \"msg\", res2 -> { // provoke 404 not found\n-        context.assertTrue(res2.failed());\n-        if (res2.failed()) {\n-          context.assertTrue(res2.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-            res2.cause().getMessage());\n-        }\n-        dh.postUrlJson(\"/version\", \"msg\", \"{}\", res3 -> { // provoke 404 not found\n-          context.assertTrue(res2.failed());\n-          if (res3.failed()) {\n-            context.assertTrue(res3.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-              res3.cause().getMessage());\n-          }\n-          async.complete();\n-        });\n-      });\n+      async.complete();\n     });\n+    async.await(1000);\n+    Assume.assumeTrue(versionRes.containsKey(\"result\"));\n+    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Platform\"));", "originalCommit": "5890d5783b27fe956a287c388c58c3c557f7b041", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "04b99d40109ac35d2c9229aeb4e02f70330131da", "chunk": "diff --git a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\nindex 096bb8bb..7f59fe45 100644\n--- a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n+++ b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n\n@@ -90,7 +90,7 @@ public class DockerModuleHandleTest {\n     });\n     async.await(1000);\n     Assume.assumeTrue(versionRes.containsKey(\"result\"));\n-    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Platform\"));\n+    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Version\"));\n \n     // provoke 404 not found\n     dh.deleteUrl(\"/version\", \"msg\", context.asyncAssertFailure(cause -> {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNjIxMw==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406536213", "bodyText": "It seems dh.deleteUrl and dh.postUrlJson can be tested independently. Is there a reason to chain them?", "author": "hjiebsco", "createdAt": "2020-04-09T23:49:56Z", "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -87,28 +80,27 @@ public void testDockerVersionAtLocal(TestContext context) {\n     DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n       \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\", 9232, new JsonObject());\n \n+    JsonObject versionRes = new JsonObject();\n+    Async async = context.async();\n     dh.getUrl(\"/version\", res -> {\n-      Assume.assumeTrue(res.succeeded());\n-      if (res.failed()) {\n-        logger.warn(res.cause().getMessage());\n-        async.complete();\n-        return;\n+      if (res.succeeded()) {\n+        versionRes.put(\"result\", res.result());\n       }\n-      dh.deleteUrl(\"/version\", \"msg\", res2 -> { // provoke 404 not found\n-        context.assertTrue(res2.failed());\n-        if (res2.failed()) {\n-          context.assertTrue(res2.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-            res2.cause().getMessage());\n-        }\n-        dh.postUrlJson(\"/version\", \"msg\", \"{}\", res3 -> { // provoke 404 not found\n-          context.assertTrue(res2.failed());\n-          if (res3.failed()) {\n-            context.assertTrue(res3.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-              res3.cause().getMessage());\n-          }\n-          async.complete();\n-        });\n-      });\n+      async.complete();\n     });\n+    async.await(1000);\n+    Assume.assumeTrue(versionRes.containsKey(\"result\"));\n+    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Platform\"));\n+\n+    // provoke 404 not found\n+    dh.deleteUrl(\"/version\", \"msg\", context.asyncAssertFailure(cause -> {\n+      context.assertTrue(cause.getMessage().startsWith(\"msg HTTP error 404\"),\n+        cause.getMessage());\n+      // provoke 404 not found\n+      dh.postUrlJson(\"/version\", \"msg\", \"{}\", context.asyncAssertFailure(cause2 -> {\n+        context.assertTrue(cause2.getMessage().startsWith(\"msg HTTP error 404\"),\n+          cause2.getMessage());\n+      }));\n+    }));", "originalCommit": "5890d5783b27fe956a287c388c58c3c557f7b041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4MzY4Nw==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406683687", "bodyText": "Well. they must be executed only if Docker is available through domain socket. But they could be separate anyway.", "author": "adamdickmeiss", "createdAt": "2020-04-10T09:35:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNjIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4NjU3OA==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406686578", "bodyText": "It seems to be overkill to move check for docker in Setup.. So I'd rather keep this in one test.", "author": "adamdickmeiss", "createdAt": "2020-04-10T09:43:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNjIxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjcyNTEzNg==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406725136", "bodyText": "I did not mean to separate them to different tests. Below is what I was thinking, pure format change to look a bit  nicer.\n// provoke 404 not found\ndh.deleteUrl(\"/version\", \"msg\", context.asyncAssertFailure(cause -> {\n  context.assertTrue(cause.getMessage().startsWith(\"msg HTTP error 404\"), cause.getMessage());\n}));\n// provoke 404 not found\ndh.postUrlJson(\"/version\", \"msg\", \"{}\", context.asyncAssertFailure(cause -> {\n  context.assertTrue(cause.getMessage().startsWith(\"msg HTTP error 404\"), cause.getMessage());\n}));", "author": "hjiebsco", "createdAt": "2020-04-10T11:55:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzNjIxMw=="}], "type": "inlineReview", "revised_code": {"commit": "04b99d40109ac35d2c9229aeb4e02f70330131da", "chunk": "diff --git a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\nindex 096bb8bb..7f59fe45 100644\n--- a/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n+++ b/okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java\n\n@@ -90,7 +90,7 @@ public class DockerModuleHandleTest {\n     });\n     async.await(1000);\n     Assume.assumeTrue(versionRes.containsKey(\"result\"));\n-    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Platform\"));\n+    context.assertTrue(versionRes.getJsonObject(\"result\").containsKey(\"Version\"));\n \n     // provoke 404 not found\n     dh.deleteUrl(\"/version\", \"msg\", context.asyncAssertFailure(cause -> {\n"}}, {"oid": "04b99d40109ac35d2c9229aeb4e02f70330131da", "url": "https://github.com/folio-org/okapi/commit/04b99d40109ac35d2c9229aeb4e02f70330131da", "message": "Test for Docker version property that should always exist", "committedDate": "2020-04-10T09:40:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1NTc3MA==", "url": "https://github.com/folio-org/okapi/pull/907#discussion_r406755770", "bodyText": "Why don't you use context.verify?\n    Async async = context.async();\n    dh.getUrl(\"/version\", res -> context.verify(h -> {\n      Assume.assumeTrue(res.succeeded());  // skip test if no access to Okapi\n      context.assertTrue(res.result().containsKey(\"Version\"));\n      async.complete();\n    }));\n    async.await(1000);", "author": "julianladisch", "createdAt": "2020-04-10T13:24:57Z", "path": "okapi-core/src/test/java/org/folio/okapi/service/impl/DockerModuleHandleTest.java", "diffHunk": "@@ -87,28 +80,27 @@ public void testDockerVersionAtLocal(TestContext context) {\n     DockerModuleHandle dh = new DockerModuleHandle(vertx, ld,\n       \"mod-users-5.0.0-SNAPSHOT\", ports, \"localhost\", 9232, new JsonObject());\n \n+    JsonObject versionRes = new JsonObject();\n+    Async async = context.async();\n     dh.getUrl(\"/version\", res -> {\n-      Assume.assumeTrue(res.succeeded());\n-      if (res.failed()) {\n-        logger.warn(res.cause().getMessage());\n-        async.complete();\n-        return;\n+      if (res.succeeded()) {\n+        versionRes.put(\"result\", res.result());\n       }\n-      dh.deleteUrl(\"/version\", \"msg\", res2 -> { // provoke 404 not found\n-        context.assertTrue(res2.failed());\n-        if (res2.failed()) {\n-          context.assertTrue(res2.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-            res2.cause().getMessage());\n-        }\n-        dh.postUrlJson(\"/version\", \"msg\", \"{}\", res3 -> { // provoke 404 not found\n-          context.assertTrue(res2.failed());\n-          if (res3.failed()) {\n-            context.assertTrue(res3.cause().getMessage().startsWith(\"msg HTTP error 404\"),\n-              res3.cause().getMessage());\n-          }\n-          async.complete();\n-        });\n-      });\n+      async.complete();\n     });\n+    async.await(1000);\n+    Assume.assumeTrue(versionRes.containsKey(\"result\"));", "originalCommit": "04b99d40109ac35d2c9229aeb4e02f70330131da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}