{"pr_number": 1034, "pr_title": "New service /_/proxy/import/modules OKAPI-610", "pr_createdAt": "2020-11-05T13:54:38Z", "pr_url": "https://github.com/folio-org/okapi/pull/1034", "timeline": [{"oid": "c40d3f3b5837118a35dbddae7061f0a83c11dfe6", "url": "https://github.com/folio-org/okapi/commit/c40d3f3b5837118a35dbddae7061f0a83c11dfe6", "message": "New service /_/proxy/import/modules OKAPI-610\n\nThis service is also convenient in ProxyTest.testManyModules.\nAlso perform log.warn with backtrace when Okapi reports 500.", "committedDate": "2020-11-05T13:53:35Z", "type": "commit"}, {"oid": "3c204f75d76b818b143818887914563536bb7e2d", "url": "https://github.com/folio-org/okapi/commit/3c204f75d76b818b143818887914563536bb7e2d", "message": "No need to check for pullManager", "committedDate": "2020-11-05T14:14:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODU4OA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518648588", "bodyText": "The method should be renamed to createModules to parallel the createModule method.\nThe method should be moved directly below to the createModule method.", "author": "julianladisch", "createdAt": "2020-11-06T10:07:57Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {", "originalCommit": "3c204f75d76b818b143818887914563536bb7e2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NTczMg==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518755732", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-11-06T13:38:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODU4OA=="}], "type": "inlineReview", "revised_code": {"commit": "4cd348164331b50a3bde592c192717b7cccae828", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\nindex 56fcf2f8..1acc81b0 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n\n@@ -1068,19 +1086,6 @@ public class InternalModule {\n     }\n   }\n \n-  private Future<Void> importModules(ProxyContext pc, String body) {\n-    try {\n-      HttpServerRequest req = pc.getCtx().request();\n-      final boolean check = ModuleUtil.getParamBoolean(req, \"check\", true);\n-      final boolean preRelease = ModuleUtil.getParamBoolean(req, \"preRelease\", true);\n-      final boolean npmSnapshot = ModuleUtil.getParamBoolean(req, \"npmSnapshot\", true);\n-      final ModuleDescriptor[] modules = Json.decodeValue(body, ModuleDescriptor[].class);\n-      return moduleManager.createList(Arrays.asList(modules), check, preRelease, npmSnapshot);\n-    } catch (DecodeException ex) {\n-      return Future.failedFuture(new OkapiError(ErrorType.USER, ex.getMessage()));\n-    }\n-  }\n-\n   /**\n    * Pretty simplistic health check.\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTE0MA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518649140", "bodyText": "The each module descriptor should be validated the same way as createModule validates it.", "author": "julianladisch", "createdAt": "2020-11-06T10:08:58Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -1056,6 +1068,19 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n     }\n   }\n \n+  private Future<Void> importModules(ProxyContext pc, String body) {\n+    try {\n+      HttpServerRequest req = pc.getCtx().request();\n+      final boolean check = ModuleUtil.getParamBoolean(req, \"check\", true);\n+      final boolean preRelease = ModuleUtil.getParamBoolean(req, \"preRelease\", true);\n+      final boolean npmSnapshot = ModuleUtil.getParamBoolean(req, \"npmSnapshot\", true);\n+      final ModuleDescriptor[] modules = Json.decodeValue(body, ModuleDescriptor[].class);\n+      return moduleManager.createList(Arrays.asList(modules), check, preRelease, npmSnapshot);", "originalCommit": "3c204f75d76b818b143818887914563536bb7e2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODc1NTcwMA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518755700", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-11-06T13:38:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0OTE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "4cd348164331b50a3bde592c192717b7cccae828", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\nindex 56fcf2f8..1acc81b0 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n\n@@ -1068,19 +1086,6 @@ public class InternalModule {\n     }\n   }\n \n-  private Future<Void> importModules(ProxyContext pc, String body) {\n-    try {\n-      HttpServerRequest req = pc.getCtx().request();\n-      final boolean check = ModuleUtil.getParamBoolean(req, \"check\", true);\n-      final boolean preRelease = ModuleUtil.getParamBoolean(req, \"preRelease\", true);\n-      final boolean npmSnapshot = ModuleUtil.getParamBoolean(req, \"npmSnapshot\", true);\n-      final ModuleDescriptor[] modules = Json.decodeValue(body, ModuleDescriptor[].class);\n-      return moduleManager.createList(Arrays.asList(modules), check, preRelease, npmSnapshot);\n-    } catch (DecodeException ex) {\n-      return Future.failedFuture(new OkapiError(ErrorType.USER, ex.getMessage()));\n-    }\n-  }\n-\n   /**\n    * Pretty simplistic health check.\n    */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzAwOQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518683009", "bodyText": "Such code blocks can be avoided if the classes provide methods/constructors that reduce noise in the test setup.\nmdA.setProvides(\"intA\", \"1.0\", new RoutingEntry(\"/a\", \"GET\"));\n\npublic RoutingEntry(String pathPattern, String... httpMethods)", "author": "julianladisch", "createdAt": "2020-11-06T11:09:23Z", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4196,6 +4196,87 @@ private void setupBasicModule(String tenant, String moduleId, String tenantPermi\n         .then().statusCode(200).log().ifValidationFails();\n   }\n \n+  @Test\n+  public void testImportModules(TestContext context) {\n+    RestAssuredClient c;\n+\n+    c = api.createRestAssured3();\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"{\\\"id\\\":\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(400);\n+\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"[]\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(204);\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    ModuleDescriptor mdA = new ModuleDescriptor();\n+    mdA.setId(\"moduleA-1.0.0\");\n+    {\n+      RoutingEntry[] routingEntries = new RoutingEntry[1];\n+      RoutingEntry routingEntry = routingEntries[0] = new RoutingEntry();\n+      routingEntry.setPathPattern(\"/a\");\n+      routingEntry.setMethods(new String[]{\"GET\"});\n+\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      interfaceDescriptor.setHandlers(routingEntries);\n+      mdA.setProvides(interfaceDescriptors);\n+    }", "originalCommit": "3c204f75d76b818b143818887914563536bb7e2d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cd348164331b50a3bde592c192717b7cccae828", "chunk": "diff --git a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java b/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\nindex 85752087..2e5332d6 100644\n--- a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\n+++ b/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\n\n@@ -4228,6 +4229,7 @@ public class ProxyTest {\n       interfaceDescriptor.setVersion(\"1.0\");\n       interfaceDescriptor.setHandlers(routingEntries);\n       mdA.setProvides(interfaceDescriptors);\n+      mdA.setRequires(new InterfaceDescriptor[0]);\n     }\n \n     ModuleDescriptor mdB = new ModuleDescriptor();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzA0NQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r518683045", "bodyText": "Such code blocks can be avoided if the classes provide methods/constructors that reduce noise in the test setup.\nmdB.setRequires(\"intA\", \"1.0\");", "author": "julianladisch", "createdAt": "2020-11-06T11:09:26Z", "path": "okapi-core/src/test/java/org/folio/okapi/ProxyTest.java", "diffHunk": "@@ -4196,6 +4196,87 @@ private void setupBasicModule(String tenant, String moduleId, String tenantPermi\n         .then().statusCode(200).log().ifValidationFails();\n   }\n \n+  @Test\n+  public void testImportModules(TestContext context) {\n+    RestAssuredClient c;\n+\n+    c = api.createRestAssured3();\n+    given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"{\\\"id\\\":\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(400);\n+\n+    c = api.createRestAssured3();\n+    c.given()\n+        .header(\"Content-Type\", \"application/json\")\n+        .body(\"[]\").post(\"/_/proxy/import/modules\")\n+        .then().statusCode(204);\n+    Assert.assertTrue(\"raml: \" + c.getLastReport().toString(),\n+        c.getLastReport().isEmpty());\n+\n+    ModuleDescriptor mdA = new ModuleDescriptor();\n+    mdA.setId(\"moduleA-1.0.0\");\n+    {\n+      RoutingEntry[] routingEntries = new RoutingEntry[1];\n+      RoutingEntry routingEntry = routingEntries[0] = new RoutingEntry();\n+      routingEntry.setPathPattern(\"/a\");\n+      routingEntry.setMethods(new String[]{\"GET\"});\n+\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      interfaceDescriptor.setHandlers(routingEntries);\n+      mdA.setProvides(interfaceDescriptors);\n+    }\n+\n+    ModuleDescriptor mdB = new ModuleDescriptor();\n+    mdB.setId(\"moduleB-1.0.0\");\n+    {\n+      InterfaceDescriptor[] interfaceDescriptors = new InterfaceDescriptor[1];\n+      InterfaceDescriptor interfaceDescriptor = interfaceDescriptors[0] = new InterfaceDescriptor();\n+      interfaceDescriptor.setId(\"intA\");\n+      interfaceDescriptor.setVersion(\"1.0\");\n+      mdB.setRequires(interfaceDescriptors);\n+    }", "originalCommit": "3c204f75d76b818b143818887914563536bb7e2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0NTUxOQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r519745519", "bodyText": "OK. Not much saving here.. But I'm sure it can come in handy.", "author": "adamdickmeiss", "createdAt": "2020-11-09T11:41:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY4MzA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "4cd348164331b50a3bde592c192717b7cccae828", "chunk": "diff --git a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java b/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\nindex 85752087..2e5332d6 100644\n--- a/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\n+++ b/okapi-core/src/test/java/org/folio/okapi/ProxyTest.java\n\n@@ -4228,6 +4229,7 @@ public class ProxyTest {\n       interfaceDescriptor.setVersion(\"1.0\");\n       interfaceDescriptor.setHandlers(routingEntries);\n       mdA.setProvides(interfaceDescriptors);\n+      mdA.setRequires(new InterfaceDescriptor[0]);\n     }\n \n     ModuleDescriptor mdB = new ModuleDescriptor();\n"}}, {"oid": "7c2a473c4fd5cbed07aab70d596f9e3a448d3d83", "url": "https://github.com/folio-org/okapi/commit/7c2a473c4fd5cbed07aab70d596f9e3a448d3d83", "message": "Merge branch 'master' into OKAPI-610-post-multiple-modules", "committedDate": "2020-11-06T13:48:20Z", "type": "commit"}, {"oid": "4cd348164331b50a3bde592c192717b7cccae828", "url": "https://github.com/folio-org/okapi/commit/4cd348164331b50a3bde592c192717b7cccae828", "message": "query parameters; move definition; validate", "committedDate": "2020-11-06T14:22:55Z", "type": "commit"}, {"oid": "6980c48e305623a998aec11177cf537fde7895bf", "url": "https://github.com/folio-org/okapi/commit/6980c48e305623a998aec11177cf537fde7895bf", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-610-post-multiple-modules", "committedDate": "2020-11-06T14:25:21Z", "type": "commit"}, {"oid": "dd9589ebad3bc7301e017989209168863845da03", "url": "https://github.com/folio-org/okapi/commit/dd9589ebad3bc7301e017989209168863845da03", "message": "Test bad query paremter for import modules", "committedDate": "2020-11-06T15:56:12Z", "type": "commit"}, {"oid": "30db31c7b048443e2cae0347085aeacd7479b2da", "url": "https://github.com/folio-org/okapi/commit/30db31c7b048443e2cae0347085aeacd7479b2da", "message": "Unnecessary check", "committedDate": "2020-11-06T16:33:33Z", "type": "commit"}, {"oid": "1643b7ffbd107ac82eb68fe04f3d46961b066d37", "url": "https://github.com/folio-org/okapi/commit/1643b7ffbd107ac82eb68fe04f3d46961b066d37", "message": "ModuleDescriptor.setRequires utility", "committedDate": "2020-11-09T11:44:20Z", "type": "commit"}, {"oid": "af002d337da4cedf8383c219557c2e64ede5dd9a", "url": "https://github.com/folio-org/okapi/commit/af002d337da4cedf8383c219557c2e64ede5dd9a", "message": "A couple of more constructor utils", "committedDate": "2020-11-09T12:11:37Z", "type": "commit"}, {"oid": "fdbf0086b641b82d8853c07e98a61b9bc41f2071", "url": "https://github.com/folio-org/okapi/commit/fdbf0086b641b82d8853c07e98a61b9bc41f2071", "message": "Merge branch 'master' into OKAPI-610-post-multiple-modules", "committedDate": "2020-11-09T20:05:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520411508", "bodyText": "cause can be null\npublic void responseError(ErrorType t, Throwable cause) might be called with a null cause and calls private void responseError(int code, Throwable cause) .\nString msg = (cause != null && cause.getMessage() != null) ? cause.getMessage() : messages.getMessage(\"10300\");\nif (code == 500) {\n  logger.warn(msg, cause);\n}\nresponseError(code, msg);", "author": "julianladisch", "createdAt": "2020-11-10T09:26:00Z", "path": "okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java", "diffHunk": "@@ -237,7 +237,10 @@ public void responseError(ErrorType t, Throwable cause) {\n   }\n \n   private void responseError(int code, Throwable cause) {\n-    if (cause != null && cause.getMessage() != null) {\n+    if (code == 500) {\n+      logger.warn(cause.getMessage(), cause);\n+    }\n+    if (cause.getMessage() != null) {", "originalCommit": "fdbf0086b641b82d8853c07e98a61b9bc41f2071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MDk3Nw==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521360977", "bodyText": "I don't see how cause can be null, so can not make coverage of that, unless I fake it with a ProxyContext unit test.", "author": "adamdickmeiss", "createdAt": "2020-11-11T13:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NTMwMA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521365300", "bodyText": "Regret that I didn't make this change in a separate PR. It an important backtrace to get..", "author": "adamdickmeiss", "createdAt": "2020-11-11T13:41:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxMTUwOA=="}], "type": "inlineReview", "revised_code": {"commit": "caed1b64fc1f0843066498cd9d7e705151305c74", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java b/okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java\nindex fd3b43e5..5acf0ae4 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/util/ProxyContext.java\n\n@@ -237,14 +237,11 @@ public class ProxyContext {\n   }\n \n   private void responseError(int code, Throwable cause) {\n+    String msg = (cause != null && cause.getMessage() != null) ? cause.getMessage() : messages.getMessage(\"10300\");\n     if (code == 500) {\n-      logger.warn(cause.getMessage(), cause);\n-    }\n-    if (cause.getMessage() != null) {\n-      responseError(code, cause.getMessage());\n-    } else {\n-      responseError(code, messages.getMessage(\"10300\"));\n+      logger.warn(msg, cause);\n     }\n+    responseError(code, msg);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxODQyMQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520418421", "bodyText": "If someone has okapi.proxy.tenants.post permission and therefore is allowed to use POST /_/proxy/modules with one module at a time why should they not do exactly the same thing with a list of modules?\nMy suggestion is to avoid this new permission and reuse okapi.proxy.tenants.post.", "author": "julianladisch", "createdAt": "2020-11-10T09:35:53Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -201,6 +201,13 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.discovery.nodes.get\\\"  ], \"\n         + \"    \\\"type\\\" : \\\"internal\\\" \"\n         + \"   }, \"\n+        // import modules\n+        + \"   {\"\n+        + \"    \\\"methods\\\" :  [ \\\"POST\\\" ],\"\n+        + \"    \\\"pathPattern\\\" : \\\"/_/proxy/import/modules\\\",\"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.import.modules.post\\\" ], \"", "originalCommit": "fdbf0086b641b82d8853c07e98a61b9bc41f2071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MTI3Ng==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521361276", "bodyText": "Not what we typically, do. But ok.", "author": "adamdickmeiss", "createdAt": "2020-11-11T13:35:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxODQyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "60725c54f7e9d31e54f83a2dbf909bd2ab0ddcf8", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\nindex 1acc81b0..c276a563 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n\n@@ -205,7 +205,7 @@ public class InternalModule {\n         + \"   {\"\n         + \"    \\\"methods\\\" :  [ \\\"POST\\\" ],\"\n         + \"    \\\"pathPattern\\\" : \\\"/_/proxy/import/modules\\\",\"\n-        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.import.modules.post\\\" ], \"\n+        + \"    \\\"permissionsRequired\\\" : [ \\\"okapi.proxy.modules.post\\\" ], \"\n         + \"    \\\"type\\\" : \\\"internal\\\" \"\n         + \"   },\"\n         // Proxy service\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyODc3Mg==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520428772", "bodyText": "If we decide that we need a new permission.\nThen we should\n\nuse a permission name the reflects the similarity to okapi.proxy.tenants.post\ncopy the wording we use in the raml file.\n\nExample:\n\"permissionName\" : \"okapi.proxy.tenants.post-list\"\n\"displayName\" : \"Okapi - announce new modules to proxy\"\n\"description\" : \"Announce a list of new modules to the proxy\"", "author": "julianladisch", "createdAt": "2020-11-10T09:51:13Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"", "originalCommit": "fdbf0086b641b82d8853c07e98a61b9bc41f2071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NTA0OQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521375049", "bodyText": "I'm lazy and will reuse the existing permission.", "author": "adamdickmeiss", "createdAt": "2020-11-11T13:57:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyODc3Mg=="}], "type": "inlineReview", "revised_code": {"commit": "60725c54f7e9d31e54f83a2dbf909bd2ab0ddcf8", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\nindex 1acc81b0..c276a563 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n\n@@ -498,11 +498,6 @@ public class InternalModule {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n-        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n-        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n-        + \"   \\\"description\\\" : \\\"Import modules\\\" \"\n-        + \" }, \"\n-        + \" { \"\n         + \"   \\\"permissionName\\\" : \\\"okapi.env.post\\\", \"\n         + \"   \\\"displayName\\\" : \\\"Okapi - post env variable\\\", \"\n         + \"   \\\"description\\\" : \\\"Set up an environment variable for all modules\\\" \"\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyOTk5OQ==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r520429999", "bodyText": "Can you copy the wording from the .raml file into the existing permission in the descriptor?\nThe existing permission\n\"permissionName\" : \"okapi.proxy.modules.post\"\n\"displayName\" : \"Okapi - declare a module\"\n\"description\" : \"Declare a module\"\n\nshould become\n\"permissionName\" : \"okapi.proxy.modules.post\"\n\"displayName\" : \"Okapi - announce new module to proxy\"\n\"description\" : \"Announce a new module to the proxy\"", "author": "julianladisch", "createdAt": "2020-11-10T09:53:03Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java", "diffHunk": "@@ -491,6 +498,11 @@ public static ModuleDescriptor moduleDescriptor(String okapiVersion) {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n+        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n+        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n+        + \"   \\\"description\\\" : \\\"Import modules\\\" \"\n+        + \" }, \"", "originalCommit": "fdbf0086b641b82d8853c07e98a61b9bc41f2071", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM3NDg0NA==", "url": "https://github.com/folio-org/okapi/pull/1034#discussion_r521374844", "bodyText": "ok.", "author": "adamdickmeiss", "createdAt": "2020-11-11T13:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyOTk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "60725c54f7e9d31e54f83a2dbf909bd2ab0ddcf8", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\nindex 1acc81b0..c276a563 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/InternalModule.java\n\n@@ -498,11 +498,6 @@ public class InternalModule {\n         + \"   \\\"description\\\" : \\\"get modules that provide some interface\\\" \"\n         + \" }, \"\n         + \" { \"\n-        + \"   \\\"permissionName\\\" : \\\"okapi.import.modules.post\\\", \"\n-        + \"   \\\"displayName\\\" : \\\"Okapi - import modules\\\", \"\n-        + \"   \\\"description\\\" : \\\"Import modules\\\" \"\n-        + \" }, \"\n-        + \" { \"\n         + \"   \\\"permissionName\\\" : \\\"okapi.env.post\\\", \"\n         + \"   \\\"displayName\\\" : \\\"Okapi - post env variable\\\", \"\n         + \"   \\\"description\\\" : \\\"Set up an environment variable for all modules\\\" \"\n"}}, {"oid": "62da9643de9cec07da94cf626a940432133faa19", "url": "https://github.com/folio-org/okapi/commit/62da9643de9cec07da94cf626a940432133faa19", "message": "Merge remote-tracking branch 'origin/master' into OKAPI-610-post-multiple-modules", "committedDate": "2020-11-11T13:39:12Z", "type": "commit"}, {"oid": "60725c54f7e9d31e54f83a2dbf909bd2ab0ddcf8", "url": "https://github.com/folio-org/okapi/commit/60725c54f7e9d31e54f83a2dbf909bd2ab0ddcf8", "message": "Also okapi.proxy.modules.post for importing", "committedDate": "2020-11-11T13:42:26Z", "type": "commit"}, {"oid": "caed1b64fc1f0843066498cd9d7e705151305c74", "url": "https://github.com/folio-org/okapi/commit/caed1b64fc1f0843066498cd9d7e705151305c74", "message": "Simplify for message in response handling", "committedDate": "2020-11-11T13:42:51Z", "type": "commit"}, {"oid": "6571a24212c34981afb6b2ba59b7d39d03e093c2", "url": "https://github.com/folio-org/okapi/commit/6571a24212c34981afb6b2ba59b7d39d03e093c2", "message": "Wrap line", "committedDate": "2020-11-11T13:44:45Z", "type": "commit"}, {"oid": "61a97b88216fc06d6cce28119fbc243d3cdc676c", "url": "https://github.com/folio-org/okapi/commit/61a97b88216fc06d6cce28119fbc243d3cdc676c", "message": "Merge branch 'master' into OKAPI-610-post-multiple-modules", "committedDate": "2020-11-11T17:22:25Z", "type": "commit"}]}