{"pr_number": 892, "pr_title": "OkapiToken faster; simpler API OKAPI-818", "pr_createdAt": "2020-03-19T16:17:46Z", "pr_url": "https://github.com/folio-org/okapi/pull/892", "timeline": [{"oid": "eb2aeb89b09f7e455e4cfa53e59124f55e79d02d", "url": "https://github.com/folio-org/okapi/commit/eb2aeb89b09f7e455e4cfa53e59124f55e79d02d", "message": "OkapiToken faster; simpler API", "committedDate": "2020-03-19T16:16:30Z", "type": "commit"}, {"oid": "3b9cc001f7a28d7804d594fae610481782e8adb2", "url": "https://github.com/folio-org/okapi/commit/3b9cc001f7a28d7804d594fae610481782e8adb2", "message": "Merge branch 'master' into faster-and-simpler-okapi-token", "committedDate": "2020-03-19T20:01:28Z", "type": "commit"}, {"oid": "4d04fc259fa5fe9b91d4b9eb9ce2cd4b3fb5ab89", "url": "https://github.com/folio-org/okapi/commit/4d04fc259fa5fe9b91d4b9eb9ce2cd4b3fb5ab89", "message": "Further test of token/authorization header checks", "committedDate": "2020-03-20T20:36:42Z", "type": "commit"}, {"oid": "3632cb0361f77d7f067dceea5844f4dfe2ba5773", "url": "https://github.com/folio-org/okapi/commit/3632cb0361f77d7f067dceea5844f4dfe2ba5773", "message": "Merge branch 'faster-and-simpler-okapi-token' of github.com:folio-org/okapi into faster-and-simpler-okapi-token", "committedDate": "2020-03-20T20:37:08Z", "type": "commit"}, {"oid": "31c15649c96a4af8d4bcea90fa4d5413431e1d34", "url": "https://github.com/folio-org/okapi/commit/31c15649c96a4af8d4bcea90fa4d5413431e1d34", "message": "Merge branch 'master' into faster-and-simpler-okapi-token", "committedDate": "2020-03-26T11:25:42Z", "type": "commit"}, {"oid": "695b31918b439523d416890ed9c347ea0ec9f3d7", "url": "https://github.com/folio-org/okapi/commit/695b31918b439523d416890ed9c347ea0ec9f3d7", "message": "OKAPI-818: Move each exception test into its own test method", "committedDate": "2020-03-31T07:07:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5MDE3OQ==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400690179", "bodyText": "I've moved the duplicated code into this method and moved each exception test into its own method.", "author": "julianladisch", "createdAt": "2020-03-31T07:14:06Z", "path": "okapi-common/src/test/java/org/folio/okapi/common/OkapiTokenTest.java", "diffHunk": "@@ -1,99 +1,68 @@\n package org.folio.okapi.common;\n \n import io.vertx.core.json.JsonObject;\n-import org.junit.Test;\n-import static org.junit.Assert.*;\n import java.util.Base64;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n \n public class OkapiTokenTest {\n \n   @Test\n   public void test() {\n-    OkapiToken t = new OkapiToken();\n-\n     JsonObject o = new JsonObject();\n     o.put(\"tenant\", \"test-lib\");\n     o.put(\"foo\", \"bar\");\n     String s = o.encodePrettily();\n     byte[] encodedBytes = Base64.getEncoder().encode(s.getBytes());\n     String e = new String(encodedBytes);\n     String tokenStr = \"method.\" + e + \".trail\";\n-    t.setToken(tokenStr);\n-    assertEquals(\"test-lib\", t.getTenant());\n+    OkapiToken tok = new OkapiToken(tokenStr);\n+    Assert.assertEquals(\"test-lib\", tok.getTenant());\n   }\n \n   @Test\n-  public void test2() {\n-    String s = \"eyJzdWIiOiJfX3VuZGVmaW5lZF9fIiwidXNlcl9pZCI6Ijk5OTk5OTk5L\"\n-      + \"Tk5OTktNDk5OS05OTk5LTk5OTk5OTk5OTk5OSIsInRlbmFudCI6InRlc3RsaWIifQ\";\n-    byte[] buf = Base64.getDecoder().decode(s);\n-    String got = new String(buf);\n-    String exp = \"{\\\"sub\\\":\\\"__undefined__\\\",\"\n-      + \"\\\"user_id\\\":\\\"99999999-9999-4999-9999-999999999999\\\",\\\"tenant\\\":\\\"testlib\\\"}\";\n-    assertEquals(exp, got);\n+  public void noTenant() {\n+    OkapiToken tok = new OkapiToken(\"a.eyB9Cg==.c\"); // \"{ }\"\n+    Assert.assertNull(tok.getTenant());\n   }\n \n   @Test\n-  public void test3() {\n-    OkapiToken tok = new OkapiToken();\n-    tok.setToken(null);\n-    assertEquals(null, tok.getTenant());\n-\n-    Boolean ex;\n+  public void testNull() {\n+    OkapiToken tok = new OkapiToken(null);\n+    Assert.assertEquals(null, tok.getTenant());\n+  }\n \n-    ex = false;\n-    tok.setToken(\"\");\n-    try {\n-      String v = tok.getTenant();\n-    } catch (IllegalArgumentException e) {\n-      ex = true;\n-    }\n-    assertTrue(ex);\n+  private String exceptionMessage(String token) {", "originalCommit": "695b31918b439523d416890ed9c347ea0ec9f3d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNzg3MA==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400827870", "bodyText": "thx", "author": "adamdickmeiss", "createdAt": "2020-03-31T11:08:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5MDE3OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5Nzc1NA==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400697754", "bodyText": "https://tools.ietf.org/html/rfc6750#section-2.1 requires a single space after Bearer.\nCan you check for startsWith(\"Bearer \")?", "author": "julianladisch", "createdAt": "2020-03-31T07:28:58Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -254,27 +252,24 @@ private String tenantHeader(ProxyContext pc) {\n     String tok = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n \n     if (auth != null) {\n-      Pattern pattern = Pattern.compile(\"Bearer\\\\s+(.+)\"); // Grab anything after 'Bearer' and whitespace\n-      Matcher matcher = pattern.matcher(auth);\n-      if (matcher.find() && matcher.groupCount() > 0) {\n-        auth = matcher.group(1);\n+      if (auth.startsWith(\"Bearer\")) {", "originalCommit": "695b31918b439523d416890ed9c347ea0ec9f3d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcwMDIwNw==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400700207", "bodyText": "We don't want to match BearerExtension foo.", "author": "julianladisch", "createdAt": "2020-03-31T07:33:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5Nzc1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNzk2MQ==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400827961", "bodyText": "sure", "author": "adamdickmeiss", "createdAt": "2020-03-31T11:08:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY5Nzc1NA=="}], "type": "inlineReview", "revised_code": {"commit": "cf4a88f800d7e00f06ad872f389b51cb440d777e", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java b/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\nindex b5fe0797..a466d3f3 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\n\n@@ -252,17 +252,16 @@ public class ProxyService {\n     String tok = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n \n     if (auth != null) {\n-      if (auth.startsWith(\"Bearer\")) {\n+      if (auth.startsWith(\"Bearer \")) {\n         auth = auth.substring(6).trim();\n       }\n       if (tok != null && !auth.equals(tok)) {\n         pc.responseError(400, messages.getMessage(\"10104\"));\n         return null;\n-      } else {\n-        ctx.request().headers().set(XOkapiHeaders.TOKEN, auth);\n-        ctx.request().headers().remove(XOkapiHeaders.AUTHORIZATION);\n-        pc.debug(\"Okapi: Moved Authorization header to X-Okapi-Token\");\n       }\n+      ctx.request().headers().set(XOkapiHeaders.TOKEN, auth);\n+      ctx.request().headers().remove(XOkapiHeaders.AUTHORIZATION);\n+      pc.debug(\"Okapi: Moved Authorization header to X-Okapi-Token\");\n     }\n     String tenantId = ctx.request().getHeader(XOkapiHeaders.TENANT);\n     if (tenantId == null) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjkwMA==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400762900", "bodyText": "Can you drop this else to reduce indentation?", "author": "julianladisch", "createdAt": "2020-03-31T09:18:03Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java", "diffHunk": "@@ -254,27 +252,24 @@ private String tenantHeader(ProxyContext pc) {\n     String tok = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n \n     if (auth != null) {\n-      Pattern pattern = Pattern.compile(\"Bearer\\\\s+(.+)\"); // Grab anything after 'Bearer' and whitespace\n-      Matcher matcher = pattern.matcher(auth);\n-      if (matcher.find() && matcher.groupCount() > 0) {\n-        auth = matcher.group(1);\n+      if (auth.startsWith(\"Bearer\")) {\n+        auth = auth.substring(6).trim();\n+      }\n+      if (tok != null && !auth.equals(tok)) {\n+        pc.responseError(400, messages.getMessage(\"10104\"));\n+        return null;\n+      } else {", "originalCommit": "695b31918b439523d416890ed9c347ea0ec9f3d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyODEyOQ==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400828129", "bodyText": "yep", "author": "adamdickmeiss", "createdAt": "2020-03-31T11:09:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjkwMA=="}], "type": "inlineReview", "revised_code": {"commit": "cf4a88f800d7e00f06ad872f389b51cb440d777e", "chunk": "diff --git a/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java b/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\nindex b5fe0797..a466d3f3 100644\n--- a/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\n+++ b/okapi-core/src/main/java/org/folio/okapi/managers/ProxyService.java\n\n@@ -252,17 +252,16 @@ public class ProxyService {\n     String tok = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n \n     if (auth != null) {\n-      if (auth.startsWith(\"Bearer\")) {\n+      if (auth.startsWith(\"Bearer \")) {\n         auth = auth.substring(6).trim();\n       }\n       if (tok != null && !auth.equals(tok)) {\n         pc.responseError(400, messages.getMessage(\"10104\"));\n         return null;\n-      } else {\n-        ctx.request().headers().set(XOkapiHeaders.TOKEN, auth);\n-        ctx.request().headers().remove(XOkapiHeaders.AUTHORIZATION);\n-        pc.debug(\"Okapi: Moved Authorization header to X-Okapi-Token\");\n       }\n+      ctx.request().headers().set(XOkapiHeaders.TOKEN, auth);\n+      ctx.request().headers().remove(XOkapiHeaders.AUTHORIZATION);\n+      pc.debug(\"Okapi: Moved Authorization header to X-Okapi-Token\");\n     }\n     String tenantId = ctx.request().getHeader(XOkapiHeaders.TENANT);\n     if (tenantId == null) {\n"}}, {"oid": "cf4a88f800d7e00f06ad872f389b51cb440d777e", "url": "https://github.com/folio-org/okapi/commit/cf4a88f800d7e00f06ad872f389b51cb440d777e", "message": "Test for Bearer+blank; redundant else", "committedDate": "2020-03-31T11:09:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0MTM0Ng==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400841346", "bodyText": "This returns the payload without validating the JWT using the signature. This may be a security issue if used in other contexts.\nCan the method been renamed to getPayloadWithoutValidation and javadoc added that there is no JWT signature validation?", "author": "julianladisch", "createdAt": "2020-03-31T11:34:26Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java", "diffHunk": "@@ -15,25 +14,21 @@\n public class OkapiToken {\n   private String token;\n \n-  public OkapiToken() {\n-    this.token = null;\n-  }\n-\n-  public OkapiToken(RoutingContext ctx) {\n-    this.token = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n-  }\n-\n-  public void setToken(String token) {\n+  public OkapiToken(String token) {\n     this.token = token;\n   }\n \n   private JsonObject getPayload() {", "originalCommit": "695b31918b439523d416890ed9c347ea0ec9f3d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNTY2Nw==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r401105667", "bodyText": "ok.. getPayload renamed.. Internal so nothing is affected.", "author": "adamdickmeiss", "createdAt": "2020-03-31T17:56:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0MTM0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "d0bb3ead11d6ec6923dcce889c367600b60046f5", "chunk": "diff --git a/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java b/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\nindex 4aa4c18a..485d2ef3 100644\n--- a/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\n+++ b/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\n\n@@ -14,11 +14,15 @@ import java.util.Base64;\n public class OkapiToken {\n   private String token;\n \n+  /**\n+   * Construct from token string.\n+   * Note that there is no JWT validation taking place.\n+   */\n   public OkapiToken(String token) {\n     this.token = token;\n   }\n \n-  private JsonObject getPayload() {\n+  private JsonObject getPayloadWithoutValidation() {\n     int idx1 = token.indexOf('.');\n     if (idx1 == -1) {\n       throw new IllegalArgumentException(\"Missing . separator for token\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0MjM3OA==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r400842378", "bodyText": "You can avoid this variable and save 2 lines by using return new JsonObject(decodedJson);", "author": "julianladisch", "createdAt": "2020-03-31T11:36:27Z", "path": "okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java", "diffHunk": "@@ -15,25 +14,21 @@\n public class OkapiToken {\n   private String token;\n \n-  public OkapiToken() {\n-    this.token = null;\n-  }\n-\n-  public OkapiToken(RoutingContext ctx) {\n-    this.token = ctx.request().getHeader(XOkapiHeaders.TOKEN);\n-  }\n-\n-  public void setToken(String token) {\n+  public OkapiToken(String token) {\n     this.token = token;\n   }\n \n   private JsonObject getPayload() {\n-    String encodedJson;\n-    try {\n-      encodedJson = this.token.split(\"\\\\.\")[1];\n-    } catch (ArrayIndexOutOfBoundsException e) {\n-      throw new IllegalArgumentException(e.getMessage());\n+    int idx1 = token.indexOf('.');\n+    if (idx1 == -1) {\n+      throw new IllegalArgumentException(\"Missing . separator for token\");\n+    }\n+    idx1++;\n+    int idx2 = token.indexOf('.', idx1);\n+    if (idx2 == -1) {\n+      throw new IllegalArgumentException(\"Missing . separator for token\");\n     }\n+    String encodedJson = token.substring(idx1, idx2);\n     String decodedJson = new String(Base64.getDecoder().decode(encodedJson));\n     JsonObject j;", "originalCommit": "695b31918b439523d416890ed9c347ea0ec9f3d7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMzIxNA==", "url": "https://github.com/folio-org/okapi/pull/892#discussion_r401123214", "bodyText": "yep", "author": "adamdickmeiss", "createdAt": "2020-03-31T18:25:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg0MjM3OA=="}], "type": "inlineReview", "revised_code": {"commit": "d0bb3ead11d6ec6923dcce889c367600b60046f5", "chunk": "diff --git a/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java b/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\nindex 4aa4c18a..485d2ef3 100644\n--- a/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\n+++ b/okapi-common/src/main/java/org/folio/okapi/common/OkapiToken.java\n\n@@ -14,11 +14,15 @@ import java.util.Base64;\n public class OkapiToken {\n   private String token;\n \n+  /**\n+   * Construct from token string.\n+   * Note that there is no JWT validation taking place.\n+   */\n   public OkapiToken(String token) {\n     this.token = token;\n   }\n \n-  private JsonObject getPayload() {\n+  private JsonObject getPayloadWithoutValidation() {\n     int idx1 = token.indexOf('.');\n     if (idx1 == -1) {\n       throw new IllegalArgumentException(\"Missing . separator for token\");\n"}}, {"oid": "4851e03e45efa6ecde6e6b3593cf2415d6f685c2", "url": "https://github.com/folio-org/okapi/commit/4851e03e45efa6ecde6e6b3593cf2415d6f685c2", "message": "Merge branch 'master' into faster-and-simpler-okapi-token", "committedDate": "2020-03-31T17:49:40Z", "type": "commit"}, {"oid": "d0bb3ead11d6ec6923dcce889c367600b60046f5", "url": "https://github.com/folio-org/okapi/commit/d0bb3ead11d6ec6923dcce889c367600b60046f5", "message": "Note on no JWT validation; rename", "committedDate": "2020-03-31T17:59:04Z", "type": "commit"}, {"oid": "dc3769dac49036cd781837e02419f232faa1027e", "url": "https://github.com/folio-org/okapi/commit/dc3769dac49036cd781837e02419f232faa1027e", "message": "Avoid temporary", "committedDate": "2020-03-31T18:23:44Z", "type": "commit"}, {"oid": "cdece97a430eb94acf427ca0f1811da82720cd17", "url": "https://github.com/folio-org/okapi/commit/cdece97a430eb94acf427ca0f1811da82720cd17", "message": "Merge branch 'master' into faster-and-simpler-okapi-token", "committedDate": "2020-03-31T18:24:02Z", "type": "commit"}, {"oid": "9f35763edf63948a65340cc42e92bfc0199f301d", "url": "https://github.com/folio-org/okapi/commit/9f35763edf63948a65340cc42e92bfc0199f301d", "message": "Merge branch 'master' into faster-and-simpler-okapi-token", "committedDate": "2020-04-01T13:35:59Z", "type": "commit"}]}