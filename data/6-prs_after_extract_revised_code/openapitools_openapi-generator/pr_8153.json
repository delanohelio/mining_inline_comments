{"pr_number": 8153, "pr_title": "[dart][dart-dio] Use built_value collection types without string replacement", "pr_createdAt": "2020-12-10T17:43:57Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/8153", "timeline": [{"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "message": "[dart-dio] Use built_value collection types without string replacement", "committedDate": "2020-12-10T17:40:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MjYxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540492610", "bodyText": "Sets.newHashSet from guava", "author": "agilob", "createdAt": "2020-12-10T20:59:45Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -188,6 +177,8 @@ public DartClientCodegen() {\n         importMapping.put(\"Set\", \"dart:core\");\n         importMapping.put(\"DateTime\", \"dart:core\");\n \n+        defaultIncludes = new HashSet<>(Collections.singletonList(\"dart:core\"));", "originalCommit": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5OTg3Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540499872", "bodyText": "can you add unit tests to this method?", "author": "agilob", "createdAt": "2020-12-10T21:11:53Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -474,34 +465,62 @@ public String toDefaultValue(Schema schema) {\n \n     @Override\n     public String getTypeDeclaration(Schema p) {", "originalCommit": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU1NTgxMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540555811", "bodyText": "There are tests for dart and dart-dio that test the type returned for array and map OAS types.", "author": "kuhnroyal", "createdAt": "2020-12-10T22:51:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5OTg3Mg=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMDI4MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540500280", "bodyText": "can you add unit tests for this method? is it worth to make it more dart-dio specific as the rest of the changes are dart-dio?", "author": "agilob", "createdAt": "2020-12-10T21:12:33Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -474,34 +465,62 @@ public String toDefaultValue(Schema schema) {\n \n     @Override\n     public String getTypeDeclaration(Schema p) {\n-        if (ModelUtils.isArraySchema(p)) {\n-            ArraySchema ap = (ArraySchema) p;\n-            Schema inner = ap.getItems();\n-            return instantiationTypes().get(\"array\") + \"<\" + getTypeDeclaration(inner) + \">\";\n-        } else if (ModelUtils.isMapSchema(p)) {\n-            Schema inner = getAdditionalProperties(p);\n-            return instantiationTypes().get(\"map\") + \"<String, \" + getTypeDeclaration(inner) + \">\";\n+        Schema<?> schema = ModelUtils.unaliasSchema(this.openAPI, p, importMapping);\n+        Schema<?> target = ModelUtils.isGenerateAliasAsModel() ? p : schema;\n+        if (ModelUtils.isArraySchema(target)) {\n+            Schema<?> items = getSchemaItems((ArraySchema) schema);\n+            return getSchemaType(target) + \"<\" + getTypeDeclaration(items) + \">\";\n+        } else if (ModelUtils.isMapSchema(target)) {\n+            // Note: ModelUtils.isMapSchema(p) returns true when p is a composed schema that also defines\n+            // additionalproperties: true\n+            Schema<?> inner = getAdditionalProperties(target);\n+            if (inner == null) {\n+                LOGGER.error(\"`{}` (map property) does not have a proper inner type defined. Default to type:string\", p.getName());\n+                inner = new StringSchema().description(\"TODO default missing map inner type to string\");\n+                p.setAdditionalProperties(inner);\n+            }\n+            return getSchemaType(target) + \"<String, \" + getTypeDeclaration(inner) + \">\";\n         }\n         return super.getTypeDeclaration(p);\n     }\n \n     @Override\n     public String getSchemaType(Schema p) {\n-        String type = super.getSchemaType(p);\n-        if (typeMapping.containsKey(type)) {\n-            return typeMapping.get(type);\n+        String openAPIType = super.getSchemaType(p);\n+        if (openAPIType == null) {\n+            LOGGER.error(\"No Type defined for Schema \" + p);\n         }\n-        if (languageSpecificPrimitives.contains(type)) {\n-            return type;\n+        if (typeMapping.containsKey(openAPIType)) {\n+            return typeMapping.get(openAPIType);\n         }\n-        return toModelName(type);\n+        if (languageSpecificPrimitives.contains(openAPIType)) {\n+            return openAPIType;\n+        }\n+        return toModelName(openAPIType);\n     }\n \n     @Override\n     public Map<String, Object> postProcessModels(Map<String, Object> objs) {\n         return postProcessModelsEnum(objs);\n     }\n \n+    @Override\n+    public CodegenOperation fromOperation(String path, String httpMethod, Operation operation, List<Server> servers) {\n+        final CodegenOperation op = super.fromOperation(path, httpMethod, operation, servers);", "originalCommit": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU1OTgzNg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540559836", "bodyText": "Could possibly be moved to the dart-dio generator.", "author": "kuhnroyal", "createdAt": "2020-12-10T22:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMDI4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU2NDk2Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540564966", "bodyText": "makes sense to keep it here for all darts.", "author": "agilob", "createdAt": "2020-12-10T23:03:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMDI4MA=="}], "type": "inlineReview", "revised_code": null}]}