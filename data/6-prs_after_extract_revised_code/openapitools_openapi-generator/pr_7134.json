{"pr_number": 7134, "pr_title": "[Go] minor improvements", "pr_createdAt": "2020-08-05T09:40:16Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/7134", "timeline": [{"oid": "f59159c5572867821e8b566faba797ec1b117bf2", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f59159c5572867821e8b566faba797ec1b117bf2", "message": "fix boolean option, add eum prefix option", "committedDate": "2020-08-05T09:34:40Z", "type": "commit"}, {"oid": "d37e1e5782a0fd873213d75c84565bc8653a0664", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d37e1e5782a0fd873213d75c84565bc8653a0664", "message": "update code format", "committedDate": "2020-08-05T09:36:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzODQ5NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7134#discussion_r465638494", "bodyText": "why not simply additionalProperties.put(WITH_GO_CODEGEN_COMMENT, withGoCodegenComment);? same for other rows", "author": "borsch", "createdAt": "2020-08-05T10:49:16Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java", "diffHunk": "@@ -138,42 +138,54 @@ public void processOpts() {\n         if (additionalProperties.containsKey(WITH_GO_CODEGEN_COMMENT)) {\n             setWithGoCodegenComment(Boolean.parseBoolean(additionalProperties.get(WITH_GO_CODEGEN_COMMENT).toString()));\n             if (withGoCodegenComment) {\n-                additionalProperties.put(WITH_GO_CODEGEN_COMMENT, \"true\");\n+                additionalProperties.put(WITH_GO_CODEGEN_COMMENT, true);\n+            } else {\n+                additionalProperties.put(WITH_GO_CODEGEN_COMMENT, false);", "originalCommit": "d37e1e5782a0fd873213d75c84565bc8653a0664", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5NTU0NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7134#discussion_r465795545", "bodyText": "Good point. I will make the change.", "author": "wing328", "createdAt": "2020-08-05T15:05:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYzODQ5NA=="}], "type": "inlineReview", "revised_code": {"commit": "c14e8571b20c9857a9c35e98d9608f6f712fb1c3", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java\nindex 2166bb3ed11..33dda391ee5 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/GoClientCodegen.java\n\n@@ -137,56 +137,32 @@ public class GoClientCodegen extends AbstractGoCodegen {\n \n         if (additionalProperties.containsKey(WITH_GO_CODEGEN_COMMENT)) {\n             setWithGoCodegenComment(Boolean.parseBoolean(additionalProperties.get(WITH_GO_CODEGEN_COMMENT).toString()));\n-            if (withGoCodegenComment) {\n-                additionalProperties.put(WITH_GO_CODEGEN_COMMENT, true);\n-            } else {\n-                additionalProperties.put(WITH_GO_CODEGEN_COMMENT, false);\n-            }\n+            additionalProperties.put(WITH_GO_CODEGEN_COMMENT, withGoCodegenComment);\n         }\n \n         if (additionalProperties.containsKey(WITH_AWSV4_SIGNATURE)) {\n             setWithAWSV4Signature(Boolean.parseBoolean(additionalProperties.get(WITH_AWSV4_SIGNATURE).toString()));\n-            if (withAWSV4Signature) {\n-                additionalProperties.put(WITH_AWSV4_SIGNATURE, true);\n-            } else {\n-                additionalProperties.put(WITH_AWSV4_SIGNATURE, false);\n-            }\n+            additionalProperties.put(WITH_AWSV4_SIGNATURE, withAWSV4Signature);\n         }\n \n         if (additionalProperties.containsKey(WITH_XML)) {\n             setWithXml(Boolean.parseBoolean(additionalProperties.get(WITH_XML).toString()));\n-            if (withXml) {\n-                additionalProperties.put(WITH_XML, true);\n-            } else {\n-                additionalProperties.put(WITH_XML, false);\n-            }\n+            additionalProperties.put(WITH_XML, withXml);\n         }\n \n         if (additionalProperties.containsKey(CodegenConstants.ENUM_CLASS_PREFIX)) {\n             setEnumClassPrefix(Boolean.parseBoolean(additionalProperties.get(CodegenConstants.ENUM_CLASS_PREFIX).toString()));\n-            if (enumClassPrefix) {\n-                additionalProperties.put(CodegenConstants.ENUM_CLASS_PREFIX, true);\n-            } else {\n-                additionalProperties.put(CodegenConstants.ENUM_CLASS_PREFIX, false);\n-            }\n+            additionalProperties.put(CodegenConstants.ENUM_CLASS_PREFIX, enumClassPrefix);\n         }\n \n         if (additionalProperties.containsKey(CodegenConstants.IS_GO_SUBMODULE)) {\n             setIsGoSubmodule(Boolean.parseBoolean(additionalProperties.get(CodegenConstants.IS_GO_SUBMODULE).toString()));\n-            if (isGoSubmodule) {\n-                additionalProperties.put(CodegenConstants.IS_GO_SUBMODULE, true);\n-            } else {\n-                additionalProperties.put(CodegenConstants.IS_GO_SUBMODULE, false);\n-            }\n+            additionalProperties.put(CodegenConstants.IS_GO_SUBMODULE, isGoSubmodule);\n         }\n \n         if (additionalProperties.containsKey(STRUCT_PREFIX)) {\n             setStructPrefix(Boolean.parseBoolean(additionalProperties.get(STRUCT_PREFIX).toString()));\n-            if (structPrefix) {\n-                additionalProperties.put(STRUCT_PREFIX, true);\n-            } else {\n-                additionalProperties.put(STRUCT_PREFIX, false);\n-            }\n+            additionalProperties.put(STRUCT_PREFIX, structPrefix);\n         }\n     }\n \n"}}, {"oid": "c14e8571b20c9857a9c35e98d9608f6f712fb1c3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/c14e8571b20c9857a9c35e98d9608f6f712fb1c3", "message": "optimize code", "committedDate": "2020-08-05T15:18:40Z", "type": "commit"}]}