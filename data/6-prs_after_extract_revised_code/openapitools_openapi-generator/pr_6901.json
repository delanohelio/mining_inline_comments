{"pr_number": 6901, "pr_title": "Correct allOf with only one child schema (no discriminator)", "pr_createdAt": "2020-07-09T12:14:40Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6901", "timeline": [{"oid": "99b8533a97b639ff4d67a64b3481dfa61662db72", "url": "https://github.com/OpenAPITools/openapi-generator/commit/99b8533a97b639ff4d67a64b3481dfa61662db72", "message": "fix single allof resulting in inheritance", "committedDate": "2020-07-09T10:45:31Z", "type": "commit"}, {"oid": "1bf3e7dc884b06d1be0538bc9a85db7ba0105781", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1bf3e7dc884b06d1be0538bc9a85db7ba0105781", "message": "clear cache", "committedDate": "2020-07-09T11:08:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3ODYxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6901#discussion_r452378612", "bodyText": "This block is no longer needed at all right? It only increments an unused variable nullSchemaChildrenCount", "author": "jeff9finger", "createdAt": "2020-07-09T17:30:05Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -1239,8 +1237,10 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n                         return parentName;\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n-                        hasAmbiguousParents = true;\n-                        refedWithoutDiscriminator.add(parentName);\n+                        // TOOD to be removed in 6.x release\n+                        LOGGER.warn(\"[deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated\" +\n+                                        \" in the 5.x release. Composed schema name: {}. Title: {}\",\n+                                composedSchema.getName(), composedSchema.getTitle()); \n                     }\n                 } else {\n                     // not a ref, doing nothing, except counting the number of times the 'null' type", "originalCommit": "1bf3e7dc884b06d1be0538bc9a85db7ba0105781", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2576ef1517e52b7d7b7483be6f84891ef73a2656", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex c8de10ec6bd..5320f58f256 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n\n@@ -1237,10 +1239,8 @@ public class ModelUtils {\n                         return parentName;\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n-                        // TOOD to be removed in 6.x release\n-                        LOGGER.warn(\"[deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated\" +\n-                                        \" in the 5.x release. Composed schema name: {}. Title: {}\",\n-                                composedSchema.getName(), composedSchema.getTitle()); \n+                        hasAmbiguousParents = true;\n+                        refedWithoutDiscriminator.add(parentName);\n                     }\n                 } else {\n                     // not a ref, doing nothing, except counting the number of times the 'null' type\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4MDYyNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6901#discussion_r452380627", "bodyText": ":-) Misspelling: TOOD --> TODO\nThis case indicates composition, not inheritance right? Especially in the edge case of an allOf reference to a model with no properties nor additionalProperties So why is it being deprecated? This seems like a valid use case for composition.\nThe log warning message seems to indicate that I will not be able to do composition in this way. Is that what is intended?", "author": "jeff9finger", "createdAt": "2020-07-09T17:33:44Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -1239,8 +1237,10 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n                         return parentName;\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n-                        hasAmbiguousParents = true;\n-                        refedWithoutDiscriminator.add(parentName);\n+                        // TOOD to be removed in 6.x release", "originalCommit": "1bf3e7dc884b06d1be0538bc9a85db7ba0105781", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2576ef1517e52b7d7b7483be6f84891ef73a2656", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex c8de10ec6bd..5320f58f256 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n\n@@ -1237,10 +1239,8 @@ public class ModelUtils {\n                         return parentName;\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n-                        // TOOD to be removed in 6.x release\n-                        LOGGER.warn(\"[deprecated] inheritance without use of 'discriminator.propertyName' has been deprecated\" +\n-                                        \" in the 5.x release. Composed schema name: {}. Title: {}\",\n-                                composedSchema.getName(), composedSchema.getTitle()); \n+                        hasAmbiguousParents = true;\n+                        refedWithoutDiscriminator.add(parentName);\n                     }\n                 } else {\n                     // not a ref, doing nothing, except counting the number of times the 'null' type\n"}}, {"oid": "2576ef1517e52b7d7b7483be6f84891ef73a2656", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2576ef1517e52b7d7b7483be6f84891ef73a2656", "message": "Revert \"fix single allof resulting in inheritance\"\n\nThis reverts commit 99b8533a97b639ff4d67a64b3481dfa61662db72.", "committedDate": "2020-07-11T03:12:05Z", "type": "commit"}, {"oid": "920ae0c7ad6e6c4cdbc18ebc9ad3b0e7abe7c533", "url": "https://github.com/OpenAPITools/openapi-generator/commit/920ae0c7ad6e6c4cdbc18ebc9ad3b0e7abe7c533", "message": "revise message", "committedDate": "2020-07-11T03:21:51Z", "type": "commit"}, {"oid": "1baf2b54d0c9e55f070352d384391670f7c6b3ab", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1baf2b54d0c9e55f070352d384391670f7c6b3ab", "message": "Merge remote-tracking branch 'origin/master' into fix-allof-single", "committedDate": "2020-07-12T07:48:03Z", "type": "commit"}]}