{"pr_number": 8269, "pr_title": "[Java] refactor: improve additionalModelTypeAnnotations generation", "pr_createdAt": "2020-12-24T15:19:39Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/8269", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjEyNA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842124", "bodyText": "remove", "author": "agilob", "createdAt": "2020-12-25T09:24:28Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -32,6 +32,7 @@\n import org.apache.commons.io.FilenameUtils;\n import org.apache.commons.lang3.BooleanUtils;\n import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.logging.Log;", "originalCommit": "da509c39f363da046fbd457e1ab67ef0f62f3561", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b8133a2efab3ac3d4bd21582c433e2fc5cc4b74", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\nindex 452f26937b0..24f3ef9edf8 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n\n@@ -29,24 +78,6 @@ import io.swagger.v3.oas.models.media.StringSchema;\n import io.swagger.v3.oas.models.parameters.Parameter;\n import io.swagger.v3.oas.models.servers.Server;\n import io.swagger.v3.parser.util.SchemaTypeUtil;\n-import org.apache.commons.io.FilenameUtils;\n-import org.apache.commons.lang3.BooleanUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.logging.Log;\n-import org.openapitools.codegen.*;\n-import org.openapitools.codegen.meta.features.*;\n-import org.openapitools.codegen.utils.ModelUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-import java.io.File;\n-import java.time.LocalDate;\n-import java.time.ZoneId;\n-import java.util.*;\n-import java.util.regex.Pattern;\n-import java.util.stream.Stream;\n-\n-import static org.openapitools.codegen.utils.StringUtils.*;\n \n public abstract class AbstractJavaCodegen extends DefaultCodegen implements CodegenConfig {\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842371", "bodyText": "Arrays.asList use set to remove duplicates", "author": "agilob", "createdAt": "2020-12-25T09:25:55Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "originalCommit": "da509c39f363da046fbd457e1ab67ef0f62f3561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5MzMwMw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r550193303", "bodyText": "I didn't want to change the original code that List uses.\nDo you think this is \"necessary\"?", "author": "UnleashSpirit", "createdAt": "2020-12-30T13:22:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5NzU4OQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551197589", "bodyText": "Using stream and distinct to avoid duplicates and potentiel side effect of using Set", "author": "UnleashSpirit", "createdAt": "2021-01-04T09:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5OTA3NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551199074", "bodyText": "From performance perspective stream.distinct is many times slower than loading things to hashset.", "author": "agilob", "createdAt": "2021-01-04T09:24:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIwODE2NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551208164", "bodyText": "So something like String[] -> Set -> List\nnew ArrayList<>(Sets.newHashSet(additionalAnnotationsList.trim().split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")))", "author": "UnleashSpirit", "createdAt": "2021-01-04T09:42:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjM3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "1b8133a2efab3ac3d4bd21582c433e2fc5cc4b74", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\nindex 452f26937b0..24f3ef9edf8 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n\n@@ -290,7 +321,7 @@ public abstract class AbstractJavaCodegen extends DefaultCodegen implements Code\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));\n+            this.setAdditionalModelTypeAnnotations(new ArrayList<>(Sets.newHashSet(additionalAnnotationsList.trim().split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\"))));\n         }\n \n         if (additionalProperties.containsKey(CodegenConstants.INVOKER_PACKAGE)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r548842520", "bodyText": "0 tests for this. please add tests for ; and the new splitting characters too (including \\r\\n and \\n", "author": "agilob", "createdAt": "2020-12-25T09:26:44Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java", "diffHunk": "@@ -289,8 +290,7 @@ public void processOpts() {\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\";\")));\n+            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));", "originalCommit": "da509c39f363da046fbd457e1ab67ef0f62f3561", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE5NDE4MQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r550194181", "bodyText": "I tried in AbstractJavaCodegenTest.java but without getter for additionalModelTypeAnnotations, I found irrelevant to do\n@Test\npublic void testAdditionalModelTypeAnnotations() throws Exception {\n\tOpenAPI openAPI = TestUtils.createOpenAPI();\n\n        final AbstractJavaCodegen codegen = new P_AbstractJavaCodegen();\n        codegen.additionalProperties().put(AbstractJavaCodegen.ADDITIONAL_MODEL_TYPE_ANNOTATIONS, \"@Foo;@Bar\");\n        codegen.processOpts();\n        codegen.preprocessOpenAPI(openAPI);\n\n        Assert.assertEquals(codegen.additionalProperties().get(AbstractJavaCodegen.ADDITIONAL_MODEL_TYPE_ANNOTATIONS), \"@Foo;@Bar\");\n}\n\nAny idea ?", "author": "UnleashSpirit", "createdAt": "2020-12-30T13:25:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE3NDQ1Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8269#discussion_r551174456", "bodyText": "Well, I add a getter for additionalModelTypeAnnotations to test the list easily", "author": "UnleashSpirit", "createdAt": "2021-01-04T08:29:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0MjUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "1b8133a2efab3ac3d4bd21582c433e2fc5cc4b74", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\nindex 452f26937b0..24f3ef9edf8 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java\n\n@@ -290,7 +321,7 @@ public abstract class AbstractJavaCodegen extends DefaultCodegen implements Code\n \n         if (additionalProperties.containsKey(ADDITIONAL_MODEL_TYPE_ANNOTATIONS)) {\n             String additionalAnnotationsList = additionalProperties.get(ADDITIONAL_MODEL_TYPE_ANNOTATIONS).toString();\n-            this.setAdditionalModelTypeAnnotations(Arrays.asList(additionalAnnotationsList.split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\")));\n+            this.setAdditionalModelTypeAnnotations(new ArrayList<>(Sets.newHashSet(additionalAnnotationsList.trim().split(\"\\\\s*(;|\\\\r?\\\\n)\\\\s*\"))));\n         }\n \n         if (additionalProperties.containsKey(CodegenConstants.INVOKER_PACKAGE)) {\n"}}, {"oid": "1b8133a2efab3ac3d4bd21582c433e2fc5cc4b74", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b8133a2efab3ac3d4bd21582c433e2fc5cc4b74", "message": "doc: update info additionalModelTypeAnnotations", "committedDate": "2021-01-04T17:20:23Z", "type": "forcePushed"}, {"oid": "b47bf5edff4a1cea4836b8a732efbbb5ff9b3e29", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b47bf5edff4a1cea4836b8a732efbbb5ff9b3e29", "message": "doc: update info additionalModelTypeAnnotations", "committedDate": "2021-01-06T07:13:15Z", "type": "forcePushed"}, {"oid": "a9ecc7d06ed6862ffba8ab15773eb06a416ac864", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a9ecc7d06ed6862ffba8ab15773eb06a416ac864", "message": "doc: update info additionalModelTypeAnnotations", "committedDate": "2021-01-06T14:47:32Z", "type": "forcePushed"}, {"oid": "76971dd7a036486483901139b89376f8c1583e72", "url": "https://github.com/OpenAPITools/openapi-generator/commit/76971dd7a036486483901139b89376f8c1583e72", "message": "refactor: move doc in code for autogen", "committedDate": "2021-01-22T11:28:29Z", "type": "forcePushed"}, {"oid": "0ea53faecdcb49d8eae17ff130fc91eb2f8081be", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0ea53faecdcb49d8eae17ff130fc91eb2f8081be", "message": "refactor: add imports lost in rebase", "committedDate": "2021-05-17T07:30:56Z", "type": "forcePushed"}, {"oid": "4531a72063c54cf7e0c2b3536f817c8cf0470a35", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4531a72063c54cf7e0c2b3536f817c8cf0470a35", "message": "docs: regenerate docs", "committedDate": "2021-05-20T06:14:13Z", "type": "forcePushed"}, {"oid": "62181960260f5f510fcdf0eaed322b4f5a66764b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/62181960260f5f510fcdf0eaed322b4f5a66764b", "message": "docs: regenerate docs", "committedDate": "2021-05-25T08:03:04Z", "type": "forcePushed"}, {"oid": "0f4d348b213c1991f5ba77f0b5f44b8af84e0211", "url": "https://github.com/OpenAPITools/openapi-generator/commit/0f4d348b213c1991f5ba77f0b5f44b8af84e0211", "message": "docs: update", "committedDate": "2021-05-25T08:35:21Z", "type": "forcePushed"}, {"oid": "a8f7419801126614ca5e098d22880f3d15f75a83", "url": "https://github.com/OpenAPITools/openapi-generator/commit/a8f7419801126614ca5e098d22880f3d15f75a83", "message": "docs: update", "committedDate": "2021-05-28T10:01:33Z", "type": "forcePushed"}, {"oid": "cce8495d5b5c58f4d1e9054002bab1c3526df95d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cce8495d5b5c58f4d1e9054002bab1c3526df95d", "message": "refactor: improve additionalModelTypeAnnotations generation\n\nSplit by ';' and/or newline\nTrim value\n\nfix: #7032\n\nRun ./bin/generate-samples.sh to regenerate model files\n\nRevert \"Run ./bin/generate-samples.sh to regenerate model files\"\n\nThis reverts commit da509c39f363da046fbd457e1ab67ef0f62f3561.\n\nrefector: remove unnecessary import\n\ntest: multiples tests for AdditionalModelTypeAnnotations\n\nAdd a getter to test the list\n\nrefactor: remove duplicate AdditionalModelTypeAnnotations\n\nWithout using Set to avoid any side effect somewhere, I use stream and\ndistinct to avoid duplicates\n\nrefactor: using Set instead of stream\n\nRemove stream distinct for performance reason, use newHashSet\nKeep AdditionalModelTypeAnnotations as List\n\ndoc: update info additionalModelTypeAnnotations\n\nrefactor: move doc in code for autogen\n\nstyle: tab in java class\n\ndoc: run ensure-up-to-date\n\nrefactor: add imports lost in rebase\n\ndocs: regenerate docs\n\ndocs: update", "committedDate": "2021-06-03T15:36:07Z", "type": "forcePushed"}, {"oid": "711946db8d83d9c4645639571d42f2078b29464d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/711946db8d83d9c4645639571d42f2078b29464d", "message": "refactor: improve additionalModelTypeAnnotations generation\n\nSplit by ';' and/or newline\nTrim value\n\nfix: #7032\n\nRun ./bin/generate-samples.sh to regenerate model files\n\nRevert \"Run ./bin/generate-samples.sh to regenerate model files\"\n\nThis reverts commit da509c39f363da046fbd457e1ab67ef0f62f3561.\n\nrefector: remove unnecessary import\n\ntest: multiples tests for AdditionalModelTypeAnnotations\n\nAdd a getter to test the list\n\nrefactor: remove duplicate AdditionalModelTypeAnnotations\n\nWithout using Set to avoid any side effect somewhere, I use stream and\ndistinct to avoid duplicates\n\nrefactor: using Set instead of stream\n\nRemove stream distinct for performance reason, use newHashSet\nKeep AdditionalModelTypeAnnotations as List\n\ndoc: update info additionalModelTypeAnnotations\n\nrefactor: move doc in code for autogen\n\nstyle: tab in java class\n\ndoc: run ensure-up-to-date\n\nrefactor: add imports lost in rebase\n\ndocs: regenerate docs\n\ndocs: update", "committedDate": "2021-06-17T06:15:13Z", "type": "forcePushed"}, {"oid": "3dcbef3d04786e84a0d37c49aea4828f413438ae", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3dcbef3d04786e84a0d37c49aea4828f413438ae", "message": "refactor: improve additionalModelTypeAnnotations generation\n\nSplit by ';' and/or newline\nTrim value\n\nfix: #7032\n\nRun ./bin/generate-samples.sh to regenerate model files\n\nRevert \"Run ./bin/generate-samples.sh to regenerate model files\"\n\nThis reverts commit da509c39f363da046fbd457e1ab67ef0f62f3561.\n\nrefector: remove unnecessary import\n\ntest: multiples tests for AdditionalModelTypeAnnotations\n\nAdd a getter to test the list\n\nrefactor: remove duplicate AdditionalModelTypeAnnotations\n\nWithout using Set to avoid any side effect somewhere, I use stream and\ndistinct to avoid duplicates\n\nrefactor: using Set instead of stream\n\nRemove stream distinct for performance reason, use newHashSet\nKeep AdditionalModelTypeAnnotations as List\n\ndoc: update info additionalModelTypeAnnotations\n\nrefactor: move doc in code for autogen\n\nstyle: tab in java class\n\ndoc: run ensure-up-to-date\n\nrefactor: add imports lost in rebase\n\ndocs: regenerate docs\n\ndocs: update", "committedDate": "2021-07-16T08:16:47Z", "type": "forcePushed"}, {"oid": "f1c3b1f763a12d9bc8b1f090bc48abae182f1391", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f1c3b1f763a12d9bc8b1f090bc48abae182f1391", "message": "refactor: improve additionalModelTypeAnnotations generation\n\nSplit by ';' and/or newline\nTrim value\n\nfix: #7032\n\nRun ./bin/generate-samples.sh to regenerate model files\n\nRevert \"Run ./bin/generate-samples.sh to regenerate model files\"\n\nThis reverts commit da509c39f363da046fbd457e1ab67ef0f62f3561.\n\nrefector: remove unnecessary import\n\ntest: multiples tests for AdditionalModelTypeAnnotations\n\nAdd a getter to test the list\n\nrefactor: remove duplicate AdditionalModelTypeAnnotations\n\nWithout using Set to avoid any side effect somewhere, I use stream and\ndistinct to avoid duplicates\n\nrefactor: using Set instead of stream\n\nRemove stream distinct for performance reason, use newHashSet\nKeep AdditionalModelTypeAnnotations as List\n\ndoc: update info additionalModelTypeAnnotations\n\nrefactor: move doc in code for autogen\n\nstyle: tab in java class\n\ndoc: run ensure-up-to-date\n\nrefactor: add imports lost in rebase\n\ndocs: regenerate docs\n\ndocs: update", "committedDate": "2021-08-17T07:31:25Z", "type": "commit"}, {"oid": "f1c3b1f763a12d9bc8b1f090bc48abae182f1391", "url": "https://github.com/OpenAPITools/openapi-generator/commit/f1c3b1f763a12d9bc8b1f090bc48abae182f1391", "message": "refactor: improve additionalModelTypeAnnotations generation\n\nSplit by ';' and/or newline\nTrim value\n\nfix: #7032\n\nRun ./bin/generate-samples.sh to regenerate model files\n\nRevert \"Run ./bin/generate-samples.sh to regenerate model files\"\n\nThis reverts commit da509c39f363da046fbd457e1ab67ef0f62f3561.\n\nrefector: remove unnecessary import\n\ntest: multiples tests for AdditionalModelTypeAnnotations\n\nAdd a getter to test the list\n\nrefactor: remove duplicate AdditionalModelTypeAnnotations\n\nWithout using Set to avoid any side effect somewhere, I use stream and\ndistinct to avoid duplicates\n\nrefactor: using Set instead of stream\n\nRemove stream distinct for performance reason, use newHashSet\nKeep AdditionalModelTypeAnnotations as List\n\ndoc: update info additionalModelTypeAnnotations\n\nrefactor: move doc in code for autogen\n\nstyle: tab in java class\n\ndoc: run ensure-up-to-date\n\nrefactor: add imports lost in rebase\n\ndocs: regenerate docs\n\ndocs: update", "committedDate": "2021-08-17T07:31:25Z", "type": "forcePushed"}, {"oid": "bb0e43863c2101a3baede01dd8e41656ab526014", "url": "https://github.com/OpenAPITools/openapi-generator/commit/bb0e43863c2101a3baede01dd8e41656ab526014", "message": "fix: docs", "committedDate": "2021-08-17T09:27:04Z", "type": "commit"}]}