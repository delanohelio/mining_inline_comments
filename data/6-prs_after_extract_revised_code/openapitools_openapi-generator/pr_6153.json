{"pr_number": 6153, "pr_title": "[core] Add type and format properties to model of inline response", "pr_createdAt": "2020-05-03T23:32:41Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6153", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3OTEyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r419179125", "bodyText": "I wonder how to clone schema instance here. I need to change result of Json.pretty(schema); but keep original instance not modified.", "author": "ybelenko", "createdAt": "2020-05-04T00:19:44Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2129,6 +2129,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);", "originalCommit": "8e033b3a4e8e87685d8360ba6f471136b75470ea", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49de85e778d5dc47b46cf493becdae27f432251b", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\nindex 0dc389f07e7..53f91f8963e 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n\n@@ -2129,7 +2204,7 @@ public class DefaultCodegen implements CodegenConfig {\n             return null;\n         }\n \n-        String modelJson = Json.pretty(schema);\n+        String modelJson;\n         if (schema.getType() == null ) {\n             Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n             if (ModelUtils.isIntegerSchema(schema)) {\n"}}, {"oid": "5114dcc0b659bf45f23f94095364c92bef0ce342", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5114dcc0b659bf45f23f94095364c92bef0ce342", "message": "Refresh samples", "committedDate": "2020-05-09T07:35:01Z", "type": "forcePushed"}, {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "message": "Refresh samples", "committedDate": "2020-05-09T12:41:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODcyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418725", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String modelJson = Json.pretty(schema);\n          \n          \n            \n                    String modelJson;", "author": "jimschubert", "createdAt": "2020-06-08T00:50:40Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);", "originalCommit": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49de85e778d5dc47b46cf493becdae27f432251b", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\nindex c9257d2618a..53f91f8963e 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n\n@@ -2146,7 +2204,7 @@ public class DefaultCodegen implements CodegenConfig {\n             return null;\n         }\n \n-        String modelJson = Json.pretty(schema);\n+        String modelJson;\n         if (schema.getType() == null ) {\n             Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n             if (ModelUtils.isIntegerSchema(schema)) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODgxNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418815", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                        modelJson = Json.pretty(schema)\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nThis coupled with the above solution will prevent prettifying this twice.", "author": "jimschubert", "createdAt": "2020-06-08T00:51:31Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n+            if (ModelUtils.isIntegerSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.INTEGER_TYPE);\n+            } else if (ModelUtils.isNumberSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.NUMBER_TYPE);\n+            } else if (ModelUtils.isStringSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.STRING_TYPE);\n+            } else if (ModelUtils.isBooleanSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.BOOLEAN_TYPE);\n+            } else if (ModelUtils.isArraySchema(schema)) {\n+                copy.setType(\"array\");\n+            } else if (ModelUtils.isObjectSchema(schema) || ModelUtils.isComposedSchema(schema) || ModelUtils.isMapSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.OBJECT_TYPE);\n+            }\n+            modelJson = Json.pretty(copy);\n+        }", "originalCommit": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49de85e778d5dc47b46cf493becdae27f432251b", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\nindex c9257d2618a..53f91f8963e 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java\n\n@@ -2146,7 +2204,7 @@ public class DefaultCodegen implements CodegenConfig {\n             return null;\n         }\n \n-        String modelJson = Json.pretty(schema);\n+        String modelJson;\n         if (schema.getType() == null ) {\n             Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n             if (ModelUtils.isIntegerSchema(schema)) {\n"}}, {"oid": "49de85e778d5dc47b46cf493becdae27f432251b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/49de85e778d5dc47b46cf493becdae27f432251b", "message": "Refresh samples", "committedDate": "2020-06-09T12:04:54Z", "type": "forcePushed"}, {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "url": "https://github.com/OpenAPITools/openapi-generator/commit/267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "message": "Refresh samples", "committedDate": "2020-06-13T19:46:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r439764985", "bodyText": "I've figured out Java debugger finally and found that InlineModelResolver strips data type here. That's my fix.", "author": "ybelenko", "createdAt": "2020-06-13T19:56:50Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,9 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {", "originalCommit": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2OTk3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456269976", "bodyText": "@ybelenko thanks for the fix. Do we need to set the format as well?", "author": "wing328", "createdAt": "2020-07-17T07:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3Mzg4NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456273884", "bodyText": "@wing328 Yeas, I think so. It's not so critical as type, but it's weird that InlineModelResolver can cut off that field completely. I'll test it today, maybe format isn't missing.", "author": "ybelenko", "createdAt": "2020-07-17T07:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NzExMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456367112", "bodyText": "@wing328 Done.", "author": "ybelenko", "createdAt": "2020-07-17T10:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "3e2259b1eed5354bf6766999c7b97384d4034cd3", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\nindex f0801ff3e6d..9d632888f20 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\n\n@@ -621,9 +621,6 @@ public class InlineModelResolver {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n-        if (object.getType() != null) {\n-            model.setType(object.getType());\n-        }\n         model.setDescription(description);\n         model.setExample(example);\n         model.setName(object.getName());\n"}}, {"oid": "1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "message": "Refresh samples", "committedDate": "2020-07-11T11:48:07Z", "type": "forcePushed"}, {"oid": "3e2259b1eed5354bf6766999c7b97384d4034cd3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3e2259b1eed5354bf6766999c7b97384d4034cd3", "message": "Save type of inline schema in modelJson prop", "committedDate": "2020-07-17T10:31:00Z", "type": "commit"}, {"oid": "1b26eca23ac51680524d4aae29ac9e616ad03f7c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b26eca23ac51680524d4aae29ac9e616ad03f7c", "message": "Add fix suggested by Jim Schubert", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "e1eb83a87154ac88d682ba94c599a1babde80ec6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e1eb83a87154ac88d682ba94c599a1babde80ec6", "message": "Revert \"Add fix suggested by Jim Schubert\"\n\nThis reverts commit 3a1951b62088836aa116444fffb90c83719b4927.", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "message": "Revert \"Save type of inline schema in modelJson prop\"\n\nThis reverts commit f88dcb13594b3e21b734b8b1569ca29bcbf9cb13.", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "message": "Keep schema type in InlineModelResolver", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "message": "Add test for InlineModelResolver", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "324bd3283017ffb5109af264e858bce9527ec6a1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/324bd3283017ffb5109af264e858bce9527ec6a1", "message": "Add data formats to test spec", "committedDate": "2020-07-17T10:31:40Z", "type": "commit"}, {"oid": "01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "message": "Save data format in inline models", "committedDate": "2020-07-17T10:31:41Z", "type": "commit"}, {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "message": "Refresh samples", "committedDate": "2020-07-17T10:43:28Z", "type": "commit"}, {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "message": "Refresh samples", "committedDate": "2020-07-17T10:43:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3ODkzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r463978937", "bodyText": "IMO, there may be a contradiction in the OAS spec (both 3.0.3 and 3.1) versus the JSON schema specification.\nI have opened OAI/OpenAPI-Specification#2301. It would be interesting to have @wing328  and @jimschubert  opinions.\nIn any case, I suggest adding the code comments below because later it can be hard for maintainers to understand the context and why this was done.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        model.setFormat(object.getFormat());\n          \n          \n            \n                        // Even though the `format` keyword typically applies to primitive types only,\n          \n          \n            \n                        // the JSON schema specification states `format` can be used for any model type instance\n          \n          \n            \n                        // including object types.\n          \n          \n            \n                        model.setFormat(object.getFormat());", "author": "sebastien-rosset", "createdAt": "2020-08-01T16:42:57Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,12 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {\n+            model.setType(object.getType());\n+        }\n+        if (object.getFormat() != null) {\n+            model.setFormat(object.getFormat());", "originalCommit": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "chunk": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\nindex 21f2d28f975..703c0247491 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java\n\n@@ -625,6 +625,9 @@ public class InlineModelResolver {\n             model.setType(object.getType());\n         }\n         if (object.getFormat() != null) {\n+            // Even though the `format` keyword typically applies to primitive types only,\n+            // the JSON schema specification states `format` can be used for any model type instance\n+            // including object types.\n             model.setFormat(object.getFormat());\n         }\n         model.setDescription(description);\n"}}, {"oid": "2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "message": "Add comments suggested by @sebastien-rosset", "committedDate": "2020-08-02T10:40:54Z", "type": "commit"}]}