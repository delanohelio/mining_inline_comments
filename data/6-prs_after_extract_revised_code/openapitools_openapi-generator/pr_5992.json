{"pr_number": 5992, "pr_title": "Fix inline schema in allOf without object type", "pr_createdAt": "2020-04-20T16:13:31Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5992", "timeline": [{"oid": "8aef39b98799074d256e8c83b9f70facf8f742cd", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8aef39b98799074d256e8c83b9f70facf8f742cd", "message": "fix inline schema without object type", "committedDate": "2020-04-20T15:57:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjc3NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5992#discussion_r411526775", "bodyText": "Maybe we should log something here?\nHave you tested with an object without type or properties defined (additionalProperties only)?", "author": "jimschubert", "createdAt": "2020-04-20T16:39:36Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -390,6 +392,8 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n                         listIterator.set(schema);\n                     }\n                 }\n+            } else {\n+                // likely a reference to schema (not inline schema)", "originalCommit": "8aef39b98799074d256e8c83b9f70facf8f742cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2Nzk4Mg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5992#discussion_r411567982", "bodyText": "I tried to log something here - it's just a reference to a model. (e.g. Foo), which means it's not an inline schema.", "author": "wing328", "createdAt": "2020-04-20T17:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2ODQyMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5992#discussion_r411568422", "bodyText": "Have you tested with an object without type\n\nYes of course. Let me add a test case tomorrow so that we'll be alerted in case the behavior has changed.", "author": "wing328", "createdAt": "2020-04-20T17:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk0NzM5Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5992#discussion_r411947396", "bodyText": "Will add test cases in a separate PR.", "author": "wing328", "createdAt": "2020-04-21T07:39:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjc3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNzg1Nw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5992#discussion_r414607857", "bodyText": "Added a test via #6042", "author": "wing328", "createdAt": "2020-04-24T14:12:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUyNjc3NQ=="}], "type": "inlineReview", "revised_code": null}]}