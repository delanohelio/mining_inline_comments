{"pr_number": 3406, "pr_title": "[3.2] Improvements/queue reprocessing strategy", "pr_createdAt": "2020-09-01T15:03:57Z", "pr_url": "https://github.com/thingsboard/thingsboard/pull/3406", "timeline": [{"oid": "ef5c09545c8ce2f1c48abe566c14c31aa7bbc966", "url": "https://github.com/thingsboard/thingsboard/commit/ef5c09545c8ce2f1c48abe566c14c31aa7bbc966", "message": "added ability to use exp-pause-between-retries on queue msgs reprocessing", "committedDate": "2020-09-01T14:45:15Z", "type": "commit"}, {"oid": "258ed349798e63b3f88f8e0c9825d5326c0779da", "url": "https://github.com/thingsboard/thingsboard/commit/258ed349798e63b3f88f8e0c9825d5326c0779da", "message": "change the defaults", "committedDate": "2020-09-01T14:45:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1NjYwOA==", "url": "https://github.com/thingsboard/thingsboard/pull/3406#discussion_r483556608", "bodyText": "First, just calculate the value of the \"pause\" variable and then use try{ sleep }catch block to avoid code duplication.", "author": "ashvayka", "createdAt": "2020-09-04T11:25:54Z", "path": "application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java", "diffHunk": "@@ -103,10 +116,25 @@ public TbRuleEngineProcessingDecision analyze(TbRuleEngineProcessingResult resul\n                         toReprocess.forEach((id, msg) -> log.trace(\"Going to reprocess [{}]: {}\", id, TbMsg.fromBytes(result.getQueueName(), msg.getValue().getTbMsg().toByteArray(), TbMsgCallback.EMPTY)));\n                     }\n                     if (pauseBetweenRetries > 0) {\n-                        try {\n-                            Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n-                        } catch (InterruptedException e) {\n-                            throw new RuntimeException(e);\n+                        if (expPauseBetweenRetries) {\n+                            long pause;\n+                            if (maxExpDegreeValue > expDegreeStep.get()) {\n+                                pause = new Double(Math.pow(pauseBetweenRetries, expDegreeStep.getAndIncrement())).longValue();\n+                            } else {\n+                                pause = maxExpPauseBetweenRetries;\n+                            }\n+                            try {\n+                                Thread.sleep(TimeUnit.SECONDS.toMillis(\n+                                        pause));\n+                            } catch (InterruptedException e) {\n+                                throw new RuntimeException(e);\n+                            }\n+                        } else {\n+                            try {", "originalCommit": "258ed349798e63b3f88f8e0c9825d5326c0779da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f15426d93fa5864a89323e18ecc7c7db436139e9", "chunk": "diff --git a/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java b/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\nindex a14addaadc..e63b0cef8e 100644\n--- a/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\n+++ b/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\n\n@@ -116,24 +109,14 @@ public class TbRuleEngineProcessingStrategyFactory {\n                         toReprocess.forEach((id, msg) -> log.trace(\"Going to reprocess [{}]: {}\", id, TbMsg.fromBytes(result.getQueueName(), msg.getValue().getTbMsg().toByteArray(), TbMsgCallback.EMPTY)));\n                     }\n                     if (pauseBetweenRetries > 0) {\n-                        if (expPauseBetweenRetries) {\n-                            long pause;\n-                            if (maxExpDegreeValue > expDegreeStep.get()) {\n-                                pause = new Double(Math.pow(pauseBetweenRetries, expDegreeStep.getAndIncrement())).longValue();\n-                            } else {\n-                                pause = maxExpPauseBetweenRetries;\n-                            }\n-                            try {\n-                                Thread.sleep(TimeUnit.SECONDS.toMillis(\n-                                        pause));\n-                            } catch (InterruptedException e) {\n-                                throw new RuntimeException(e);\n-                            }\n-                        } else {\n-                            try {\n-                                Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n-                            } catch (InterruptedException e) {\n-                                throw new RuntimeException(e);\n+                        try {\n+                            Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n+                        } catch (InterruptedException e) {\n+                            throw new RuntimeException(e);\n+                        }\n+                        if (multiplyPauseBetweenRetries && maxPauseBetweenRetries > 0) {\n+                            if (pauseBetweenRetries != maxPauseBetweenRetries) {\n+                                pauseBetweenRetries = Math.min(maxPauseBetweenRetries, pauseBetweenRetries * pauseBetweenRetries);\n                             }\n                         }\n                     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU1ODQ1Nw==", "url": "https://github.com/thingsboard/thingsboard/pull/3406#discussion_r483558457", "bodyText": "This variable is redundant. You can use expDegreeStep and just compare the maxExpPauseBetweenRetries and new Double(Math.pow(pauseBetweenRetries, expDegreeStep.getAndIncrement())).longValue();", "author": "ashvayka", "createdAt": "2020-09-04T11:30:15Z", "path": "application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java", "diffHunk": "@@ -69,6 +76,12 @@ public RetryStrategy(String queueName, boolean retrySuccessful, boolean retryFai\n             this.maxRetries = configuration.getRetries();\n             this.maxAllowedFailurePercentage = configuration.getFailurePercentage();\n             this.pauseBetweenRetries = configuration.getPauseBetweenRetries();\n+            this.expPauseBetweenRetries = configuration.isExpPauseBetweenRetries();\n+            if (this.expPauseBetweenRetries) {\n+                this.expDegreeStep = new AtomicInteger(1);\n+                this.maxExpPauseBetweenRetries = configuration.getMaxExpPauseBetweenRetries();\n+                this.maxExpDegreeValue = Math.log(maxExpPauseBetweenRetries) / Math.log(pauseBetweenRetries);", "originalCommit": "258ed349798e63b3f88f8e0c9825d5326c0779da", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f15426d93fa5864a89323e18ecc7c7db436139e9", "chunk": "diff --git a/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java b/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\nindex a14addaadc..e63b0cef8e 100644\n--- a/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\n+++ b/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java\n\n@@ -76,12 +73,8 @@ public class TbRuleEngineProcessingStrategyFactory {\n             this.maxRetries = configuration.getRetries();\n             this.maxAllowedFailurePercentage = configuration.getFailurePercentage();\n             this.pauseBetweenRetries = configuration.getPauseBetweenRetries();\n-            this.expPauseBetweenRetries = configuration.isExpPauseBetweenRetries();\n-            if (this.expPauseBetweenRetries) {\n-                this.expDegreeStep = new AtomicInteger(1);\n-                this.maxExpPauseBetweenRetries = configuration.getMaxExpPauseBetweenRetries();\n-                this.maxExpDegreeValue = Math.log(maxExpPauseBetweenRetries) / Math.log(pauseBetweenRetries);\n-            }\n+            this.multiplyPauseBetweenRetries = configuration.isMultiplyPauseBetweenRetries();\n+            this.maxPauseBetweenRetries = configuration.getMaxPauseBetweenRetries();\n         }\n \n         @Override\n"}}, {"oid": "f15426d93fa5864a89323e18ecc7c7db436139e9", "url": "https://github.com/thingsboard/thingsboard/commit/f15426d93fa5864a89323e18ecc7c7db436139e9", "message": "changed logic to multiplication pause", "committedDate": "2020-09-04T13:15:46Z", "type": "commit"}, {"oid": "3ceb9d3101488f8ba40f172d86bd2577a5b657aa", "url": "https://github.com/thingsboard/thingsboard/commit/3ceb9d3101488f8ba40f172d86bd2577a5b657aa", "message": "clean up code", "committedDate": "2020-09-04T13:15:47Z", "type": "commit"}, {"oid": "801593010dcc64f2dc97ebd1bfd944c989bf431b", "url": "https://github.com/thingsboard/thingsboard/commit/801593010dcc64f2dc97ebd1bfd944c989bf431b", "message": "removed unnecessary flag", "committedDate": "2020-09-04T13:15:48Z", "type": "commit"}, {"oid": "d3b7a29d8b6b6f6ddfe21f9afc3c6d82932b4519", "url": "https://github.com/thingsboard/thingsboard/commit/d3b7a29d8b6b6f6ddfe21f9afc3c6d82932b4519", "message": "changed env variable name", "committedDate": "2020-09-04T13:49:31Z", "type": "commit"}, {"oid": "7e95f081c2bfea425460879aad0fff70e3c87a58", "url": "https://github.com/thingsboard/thingsboard/commit/7e95f081c2bfea425460879aad0fff70e3c87a58", "message": "changed defaults max-pause-between-retries params", "committedDate": "2020-09-04T14:42:47Z", "type": "commit"}]}