{"pr_number": 3910, "pr_title": "Added ability to return arrays in transformation script node", "pr_createdAt": "2020-12-30T14:10:29Z", "pr_url": "https://github.com/thingsboard/thingsboard/pull/3910", "timeline": [{"oid": "c6c9d7a343df3103b451d0e4327ede7a1e095c44", "url": "https://github.com/thingsboard/thingsboard/commit/c6c9d7a343df3103b451d0e4327ede7a1e095c44", "message": "Added ability to return arrays in transformation script node", "committedDate": "2020-12-30T14:09:07Z", "type": "commit"}, {"oid": "495520b9e3286bc8183d09e3c4b8ed42dd588326", "url": "https://github.com/thingsboard/thingsboard/commit/495520b9e3286bc8183d09e3c4b8ed42dd588326", "message": "fix typo", "committedDate": "2020-12-30T14:49:43Z", "type": "commit"}, {"oid": "e9399d4ed402a018caadbb6c4bb8d38ee40a538f", "url": "https://github.com/thingsboard/thingsboard/commit/e9399d4ed402a018caadbb6c4bb8d38ee40a538f", "message": "Refactoring", "committedDate": "2020-12-31T10:26:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjUxNjU3Mw==", "url": "https://github.com/thingsboard/thingsboard/pull/3910#discussion_r552516573", "bodyText": "json.size()", "author": "ashvayka", "createdAt": "2021-01-06T11:20:12Z", "path": "application/src/main/java/org/thingsboard/server/service/script/RuleNodeJsScriptEngine.java", "diffHunk": "@@ -116,14 +118,19 @@ public TbMsg executeUpdate(TbMsg msg) throws ScriptException {\n     }\n \n     @Override\n-    public ListenableFuture<TbMsg> executeUpdateAsync(TbMsg msg) {\n+    public ListenableFuture<List<TbMsg>> executeUpdateAsync(TbMsg msg) {\n         ListenableFuture<JsonNode> result = executeScriptAsync(msg);\n         return Futures.transformAsync(result, json -> {\n-            if (!json.isObject()) {\n+            if (json.isObject()) {\n+                return Futures.immediateFuture(Collections.singletonList(unbindMsg(json, msg)));\n+            } else if (json.isArray()){\n+                List<TbMsg> res = new ArrayList<>();", "originalCommit": "e9399d4ed402a018caadbb6c4bb8d38ee40a538f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7f873fdc678d05634e0f4716acc8f21c5c61458a", "chunk": "diff --git a/application/src/main/java/org/thingsboard/server/service/script/RuleNodeJsScriptEngine.java b/application/src/main/java/org/thingsboard/server/service/script/RuleNodeJsScriptEngine.java\nindex 737c618b4d..e49e87339d 100644\n--- a/application/src/main/java/org/thingsboard/server/service/script/RuleNodeJsScriptEngine.java\n+++ b/application/src/main/java/org/thingsboard/server/service/script/RuleNodeJsScriptEngine.java\n\n@@ -124,7 +124,7 @@ public class RuleNodeJsScriptEngine implements org.thingsboard.rule.engine.api.S\n             if (json.isObject()) {\n                 return Futures.immediateFuture(Collections.singletonList(unbindMsg(json, msg)));\n             } else if (json.isArray()){\n-                List<TbMsg> res = new ArrayList<>();\n+                List<TbMsg> res = new ArrayList<>(json.size());\n                 json.forEach(jsonObject -> res.add(unbindMsg(jsonObject, msg)));\n                 return Futures.immediateFuture(res);\n             }\n"}}, {"oid": "7f873fdc678d05634e0f4716acc8f21c5c61458a", "url": "https://github.com/thingsboard/thingsboard/commit/7f873fdc678d05634e0f4716acc8f21c5c61458a", "message": "Improvements", "committedDate": "2021-01-06T12:24:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjU2MDY3Mw==", "url": "https://github.com/thingsboard/thingsboard/pull/3910#discussion_r552560673", "bodyText": "ctx.ack", "author": "ashvayka", "createdAt": "2021-01-06T12:29:55Z", "path": "rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java", "diffHunk": "@@ -61,7 +62,20 @@ protected void transformSuccess(TbContext ctx, TbMsg msg, TbMsg m) {\n         }\n     }\n \n-    protected abstract ListenableFuture<TbMsg> transform(TbContext ctx, TbMsg msg);\n+    protected void transformSuccess(TbContext ctx, TbMsg msg, List<TbMsg> msgs) {\n+        if (msgs != null && !msgs.isEmpty()) {\n+            if (msgs.size() == 1) {\n+                ctx.tellSuccess(msgs.get(0));\n+            } else {\n+                TbMsgCallbackWrapper wrapper = new MultipleTbMsgsCallbackWrapper(msgs.size(), msg.getCallback());", "originalCommit": "7f873fdc678d05634e0f4716acc8f21c5c61458a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "38e13bd916a4acc638d0c9c4c1022f9971022655", "chunk": "diff --git a/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java b/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java\nindex 4b3ea2f2f4..0b9139a307 100644\n--- a/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java\n+++ b/rule-engine/rule-engine-components/src/main/java/org/thingsboard/rule/engine/transform/TbAbstractTransformNode.java\n\n@@ -67,7 +69,17 @@ public abstract class TbAbstractTransformNode implements TbNode {\n             if (msgs.size() == 1) {\n                 ctx.tellSuccess(msgs.get(0));\n             } else {\n-                TbMsgCallbackWrapper wrapper = new MultipleTbMsgsCallbackWrapper(msgs.size(), msg.getCallback());\n+                TbMsgCallbackWrapper wrapper = new MultipleTbMsgsCallbackWrapper(msgs.size(), new TbMsgCallback() {\n+                    @Override\n+                    public void onSuccess() {\n+                        ctx.ack(msg);\n+                    }\n+\n+                    @Override\n+                    public void onFailure(RuleEngineException e) {\n+                        ctx.tellFailure(msg, e);\n+                    }\n+                });\n                 msgs.forEach(newMsg -> ctx.enqueueForTellNext(newMsg, \"Success\", wrapper::onSuccess, wrapper::onFailure));\n             }\n         } else {\n"}}, {"oid": "38e13bd916a4acc638d0c9c4c1022f9971022655", "url": "https://github.com/thingsboard/thingsboard/commit/38e13bd916a4acc638d0c9c4c1022f9971022655", "message": "Improvements", "committedDate": "2021-01-06T12:37:57Z", "type": "commit"}]}