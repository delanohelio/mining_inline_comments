{"pr_number": 2891, "pr_title": "feature - add controller and schema_update for entity profiles", "pr_createdAt": "2020-06-01T09:59:09Z", "pr_url": "https://github.com/thingsboard/thingsboard/pull/2891", "timeline": [{"oid": "ae1c074c06c45ebc07cdce4b8050dd45d5018784", "url": "https://github.com/thingsboard/thingsboard/commit/ae1c074c06c45ebc07cdce4b8050dd45d5018784", "message": "feature - add controller and schema_update for entity profiles", "committedDate": "2020-06-01T09:58:03Z", "type": "commit"}, {"oid": "d7f96b06f9edb071af89a1cdf639215b0c15e23e", "url": "https://github.com/thingsboard/thingsboard/commit/d7f96b06f9edb071af89a1cdf639215b0c15e23e", "message": "refactor - entity profiles permission", "committedDate": "2020-06-01T11:26:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1MjUyMA==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r433752520", "bodyText": "There is a new method called checkEntity. Please use it instead of checkPermission.", "author": "ashvayka", "createdAt": "2020-06-02T09:43:54Z", "path": "application/src/main/java/org/thingsboard/server/controller/EntityProfileController.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.thingsboard.server.controller;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+import org.thingsboard.server.common.data.EntityType;\n+import org.thingsboard.server.common.data.audit.ActionType;\n+import org.thingsboard.server.common.data.entityprofile.EntityProfile;\n+import org.thingsboard.server.common.data.exception.ThingsboardException;\n+import org.thingsboard.server.common.data.id.EntityProfileId;\n+import org.thingsboard.server.common.data.id.TenantId;\n+import org.thingsboard.server.common.data.page.PageData;\n+import org.thingsboard.server.common.data.page.PageLink;\n+import org.thingsboard.server.dao.entityprofile.EntityProfileService;\n+import org.thingsboard.server.queue.util.TbCoreComponent;\n+import org.thingsboard.server.service.security.model.SecurityUser;\n+import org.thingsboard.server.service.security.permission.Operation;\n+import org.thingsboard.server.service.security.permission.Resource;\n+\n+import static org.apache.commons.lang3.StringUtils.isEmpty;\n+\n+@RestController\n+@TbCoreComponent\n+@RequestMapping(\"/api\")\n+@Slf4j\n+@RequiredArgsConstructor\n+public class EntityProfileController extends BaseController {\n+    private static final String ENTITY_PROFILES_ID = \"entityProfilesId\";\n+    private final EntityProfileService service;\n+\n+    @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN')\")\n+    @GetMapping(\"/entityProfiles/{entityProfilesId}\")\n+    public EntityProfile getEntityProfileById(@PathVariable(ENTITY_PROFILES_ID) String strId) throws ThingsboardException {\n+        checkParameter(ENTITY_PROFILES_ID, strId);\n+        EntityProfileId id = new EntityProfileId(toUUID(strId));\n+        SecurityUser user = getCurrentUser();\n+        try {\n+            EntityProfile entityProfile = service.findById(user.getTenantId(), id);\n+            checkNotNull(entityProfile);\n+            accessControlService.checkPermission(user, Resource.ENTITY_PROFILE, Operation.READ, id, entityProfile);\n+            return entityProfile;\n+        } catch (Exception e) {\n+            throw handleException(e);\n+        }\n+    }\n+\n+    @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN')\")\n+    @PostMapping(\"/entityProfiles\")\n+    public EntityProfile saveEntityProfile(@RequestBody EntityProfile entityProfile) throws ThingsboardException {\n+        entityProfile = entityProfile.toBuilder()\n+                .tenantId(getCurrentUser().getTenantId())\n+                .build();\n+        Operation operation = entityProfile.getId() == null ? Operation.CREATE : Operation.WRITE;", "originalCommit": "d7f96b06f9edb071af89a1cdf639215b0c15e23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzc1OA==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r433813758", "bodyText": "done, but as for me it seems not good way to check some entity by calling base class method with all logic inside\nBaseController.class already has 700+ lines and this number will be grown", "author": "karpunets", "createdAt": "2020-06-02T11:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1MjUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "ebae9ab3f80ee1994fcad10732dd34638a13ba46", "chunk": "diff --git a/application/src/main/java/org/thingsboard/server/controller/EntityProfileController.java b/application/src/main/java/org/thingsboard/server/controller/EntityProfileController.java\nindex fb7780a65d..58965da3fa 100644\n--- a/application/src/main/java/org/thingsboard/server/controller/EntityProfileController.java\n+++ b/application/src/main/java/org/thingsboard/server/controller/EntityProfileController.java\n\n@@ -28,9 +28,7 @@ import org.thingsboard.server.common.data.id.EntityProfileId;\n import org.thingsboard.server.common.data.id.TenantId;\n import org.thingsboard.server.common.data.page.PageData;\n import org.thingsboard.server.common.data.page.PageLink;\n-import org.thingsboard.server.dao.entityprofile.EntityProfileService;\n import org.thingsboard.server.queue.util.TbCoreComponent;\n-import org.thingsboard.server.service.security.model.SecurityUser;\n import org.thingsboard.server.service.security.permission.Operation;\n import org.thingsboard.server.service.security.permission.Resource;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1MzUzNA==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r433753534", "bodyText": "Please add tests similar to DeviceControllerTest.testUpdateDeviceFromDifferentTenant", "author": "ashvayka", "createdAt": "2020-06-02T09:45:42Z", "path": "application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.thingsboard.server.controller;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.junit.After;\n+import org.junit.Test;\n+import org.thingsboard.server.common.data.EntityType;\n+import org.thingsboard.server.common.data.entityprofile.EntityProfile;\n+import org.thingsboard.server.common.data.page.PageData;\n+import org.thingsboard.server.common.data.page.PageLink;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric;\n+import static org.junit.Assert.*;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+public class BaseEntityProfileControllerTest extends AbstractControllerTest {", "originalCommit": "d7f96b06f9edb071af89a1cdf639215b0c15e23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1NTU1Mw==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r434155553", "bodyText": "added testUpdateEntityProfileFromDifferentTenant()", "author": "karpunets", "createdAt": "2020-06-02T20:26:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1MzUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "18a2fb546dd3f7cd4b4b84bc698e4e3c3fd8bf6b", "chunk": "diff --git a/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java b/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\nindex 0b134c137d..3c1ee4da10 100644\n--- a/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\n+++ b/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\n\n@@ -24,7 +24,9 @@ import org.thingsboard.server.common.data.page.PageData;\n import org.thingsboard.server.common.data.page.PageLink;\n \n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n+import java.util.Set;\n \n import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric;\n import static org.junit.Assert.*;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1NTU2NA==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r433755564", "bodyText": "Please add more tests similar to BaseDeviceControllerTest.testFindCustomerDevicesByType. We need to check that all parameters from getEntityProfiles rest api call work fine. Using testFindCustomerDevicesByType we create 100+ profiles and check pagination properly.", "author": "ashvayka", "createdAt": "2020-06-02T09:49:18Z", "path": "application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.thingsboard.server.controller;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.junit.After;\n+import org.junit.Test;\n+import org.thingsboard.server.common.data.EntityType;\n+import org.thingsboard.server.common.data.entityprofile.EntityProfile;\n+import org.thingsboard.server.common.data.page.PageData;\n+import org.thingsboard.server.common.data.page.PageLink;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric;\n+import static org.junit.Assert.*;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+public class BaseEntityProfileControllerTest extends AbstractControllerTest {\n+    private final TypeReference<PageData<EntityProfile>> PAGE_ENTITY_PROFILE_TYPE = new TypeReference<PageData<EntityProfile>>() {\n+    };\n+\n+    @After\n+    public void tearDown() throws Exception {\n+        logout();\n+    }\n+\n+    @Test\n+    public void testSysAdminPermissionDenyForNonTenantProfile() throws Exception {\n+        loginSysAdmin();\n+        EntityProfile entityProfile = randomEntityProfile(EntityType.ASSET);\n+        doPost(\"/api/entityProfiles\", entityProfile, EntityProfile.class, status().isForbidden());\n+    }\n+\n+    @Test\n+    public void testSysAdminFindEntityProfiles() throws Exception {\n+        loginSysAdmin();\n+        EntityProfile entityProfile = randomEntityProfile(EntityType.TENANT);\n+        EntityProfile saved = doPost(\"/api/entityProfiles\", entityProfile, EntityProfile.class);\n+        EntityProfile found = doGet(\"/api/entityProfiles/{id}\", EntityProfile.class,\n+                saved.getId().getId().toString());\n+        assertNotNull(found);\n+        assertEquals(saved, found);\n+        PageData<EntityProfile> page = doGetTypedWithPageLink(\"/api/entityProfiles?\",\n+                PAGE_ENTITY_PROFILE_TYPE, new PageLink(5));\n+        assertFalse(page.getData().isEmpty());\n+    }\n+\n+    @Test\n+    public void testTenantAdminDeviceEntityProfileFlow() throws Exception {", "originalCommit": "d7f96b06f9edb071af89a1cdf639215b0c15e23e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1NTg1Mw==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r434155853", "bodyText": "added\ntestFindEntityProfileByType()\ntestFindEntityProfileByName()", "author": "karpunets", "createdAt": "2020-06-02T20:27:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1NTU2NA=="}], "type": "inlineReview", "revised_code": {"commit": "18a2fb546dd3f7cd4b4b84bc698e4e3c3fd8bf6b", "chunk": "diff --git a/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java b/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\nindex 0b134c137d..3c1ee4da10 100644\n--- a/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\n+++ b/application/src/test/java/org/thingsboard/server/controller/BaseEntityProfileControllerTest.java\n\n@@ -24,7 +24,9 @@ import org.thingsboard.server.common.data.page.PageData;\n import org.thingsboard.server.common.data.page.PageLink;\n \n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n+import java.util.Set;\n \n import static org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric;\n import static org.junit.Assert.*;\n"}}, {"oid": "14ed0ad09330e8b0195c04e80ed0bb0a1d18a673", "url": "https://github.com/thingsboard/thingsboard/commit/14ed0ad09330e8b0195c04e80ed0bb0a1d18a673", "message": "fix - change constraint direction for entity profile", "committedDate": "2020-06-02T11:42:27Z", "type": "commit"}, {"oid": "ebae9ab3f80ee1994fcad10732dd34638a13ba46", "url": "https://github.com/thingsboard/thingsboard/commit/ebae9ab3f80ee1994fcad10732dd34638a13ba46", "message": "refactor - use checkEntity instead of checkPermission", "committedDate": "2020-06-02T11:44:24Z", "type": "commit"}, {"oid": "c7edeaf523c3145606c5c58043029375bb367f38", "url": "https://github.com/thingsboard/thingsboard/commit/c7edeaf523c3145606c5c58043029375bb367f38", "message": "Merge remote-tracking branch 'thingsboard/feature/entity-profile' into feature/entity-profile\n\n# Conflicts:\n#\tapplication/src/main/java/org/thingsboard/server/controller/BaseController.java", "committedDate": "2020-06-02T12:22:27Z", "type": "commit"}, {"oid": "18a2fb546dd3f7cd4b4b84bc698e4e3c3fd8bf6b", "url": "https://github.com/thingsboard/thingsboard/commit/18a2fb546dd3f7cd4b4b84bc698e4e3c3fd8bf6b", "message": "feature - add more controller tests for entity profile", "committedDate": "2020-06-02T20:24:22Z", "type": "commit"}, {"oid": "154ab5396d3a74ba271e6c29399d8a26325fcef2", "url": "https://github.com/thingsboard/thingsboard/commit/154ab5396d3a74ba271e6c29399d8a26325fcef2", "message": "feature - add finding profile for entity profile service", "committedDate": "2020-06-09T07:29:02Z", "type": "commit"}, {"oid": "1e131e0c033f6ac1e5684ca539abdc650b387ac5", "url": "https://github.com/thingsboard/thingsboard/commit/1e131e0c033f6ac1e5684ca539abdc650b387ac5", "message": "feature - add device profile with inactivityTimeout", "committedDate": "2020-06-09T08:51:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5ODAwNw==", "url": "https://github.com/thingsboard/thingsboard/pull/2891#discussion_r437298007", "bodyText": "Please add TODO to replace this with cache.", "author": "ashvayka", "createdAt": "2020-06-09T10:12:31Z", "path": "application/src/main/java/org/thingsboard/server/service/state/DefaultDeviceStateService.java", "diffHunk": "@@ -461,9 +455,10 @@ private void onDeviceDeleted(TenantId tenantId, DeviceId deviceId) {\n             @Override\n             public DeviceStateData apply(@Nullable List<T> data) {\n                 try {\n+                    DeviceProfile deviceProfile = entityProfileService.findProfile(device, DeviceProfile.class);", "originalCommit": "1e131e0c033f6ac1e5684ca539abdc650b387ac5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}