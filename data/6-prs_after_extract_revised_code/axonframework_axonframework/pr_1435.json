{"pr_number": 1435, "pr_title": "[#1390] Allow for custom parameters to be provided when triggering a reset", "pr_createdAt": "2020-05-15T15:38:32Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1435", "timeline": [{"oid": "d69df81ed5053a73e7cbe767cc31f80345525c2c", "url": "https://github.com/AxonFramework/AxonFramework/commit/d69df81ed5053a73e7cbe767cc31f80345525c2c", "message": "Introduce ResetMessage\n\nIntroduce a ResetMessage plus implementation to support resetting with\nan optional payload field\n\n#1390", "committedDate": "2020-05-15T15:22:03Z", "type": "commit"}, {"oid": "50353a1393163f39ba44b5e4e178c9f972b36ab7", "url": "https://github.com/AxonFramework/AxonFramework/commit/50353a1393163f39ba44b5e4e178c9f972b36ab7", "message": "Add prepare reset with reset info\n\nAdd a prepareReset(R resetInfo) method to open up the provisioning of\nreset-supporting information\n\n#1390", "committedDate": "2020-05-15T15:23:27Z", "type": "commit"}, {"oid": "f6b0fbf706a37bdf8f23fa037a7d9232b9cec9d9", "url": "https://github.com/AxonFramework/AxonFramework/commit/f6b0fbf706a37bdf8f23fa037a7d9232b9cec9d9", "message": "Add prepare reset with reset info\n\nAdd a prepareReset(R resetInfo) method to open up the provisioning of\nreset-supporting information\n\n#1390", "committedDate": "2020-05-15T15:25:02Z", "type": "commit"}, {"oid": "7b8a1862f711e2093751fc81a37c16599789dac2", "url": "https://github.com/AxonFramework/AxonFramework/commit/7b8a1862f711e2093751fc81a37c16599789dac2", "message": "Change ResetHandler annotation\n\nChange the ResetHandler annotation to  specifically cope with message of\n type ResetMessage instead of EventMessages containing the\n ResetTriggeredEvent\n\n#1390", "committedDate": "2020-05-15T15:26:42Z", "type": "commit"}, {"oid": "3195d1e9ed78ad4e17ef65f3c798ab2db14b8b1a", "url": "https://github.com/AxonFramework/AxonFramework/commit/3195d1e9ed78ad4e17ef65f3c798ab2db14b8b1a", "message": "Add resetTokens methods allowing reset-info\n\nCreate additional resetTokens methods which take a resetInfo parameter.\nThe resetInfo parameter should be provided to the EventHandlerInvoker\n\n#1390", "committedDate": "2020-05-15T15:27:57Z", "type": "commit"}, {"oid": "c3083e1b407050c2b84e48a09e7e06603e17265d", "url": "https://github.com/AxonFramework/AxonFramework/commit/c3083e1b407050c2b84e48a09e7e06603e17265d", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-05-15T15:29:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4MDgwMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r426480801", "bodyText": "resetResourse instead resetInfo?", "author": "stefanvozd", "createdAt": "2020-05-18T09:12:02Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventHandlerInvoker.java", "diffHunk": "@@ -70,5 +73,15 @@ default boolean supportsReset() {\n      * Performs any activities that are required to reset the state managed by handlers assigned to this invoker.\n      */\n     default void performReset() {\n+        performReset(NO_RESET_PAYLOAD);\n+    }\n+\n+    /**\n+     * Performs any activities that are required to reset the state managed by handlers assigned to this invoker.\n+     *\n+     * @param resetInfo a {@code R} used to support the reset operation", "originalCommit": "c3083e1b407050c2b84e48a09e7e06603e17265d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0MTc5MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r442741791", "bodyText": "I ended up with resetContext. What do you think?", "author": "smcvb", "createdAt": "2020-06-19T09:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ4MDgwMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4129adc8600d48e81eee7e89c7ac554e87f130e4", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventHandlerInvoker.java b/messaging/src/main/java/org/axonframework/eventhandling/EventHandlerInvoker.java\nindex 175d02fda..1f15e92fe 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventHandlerInvoker.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventHandlerInvoker.java\n\n@@ -73,7 +71,7 @@ default boolean supportsReset() {\n      * Performs any activities that are required to reset the state managed by handlers assigned to this invoker.\n      */\n     default void performReset() {\n-        performReset(NO_RESET_PAYLOAD);\n+        performReset(null);\n     }\n \n     /**\n"}}, {"oid": "91f9fd47661f10bbdf50db2d815a2d35d1c0ad9f", "url": "https://github.com/AxonFramework/AxonFramework/commit/91f9fd47661f10bbdf50db2d815a2d35d1c0ad9f", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-11T10:31:57Z", "type": "commit"}, {"oid": "4129adc8600d48e81eee7e89c7ac554e87f130e4", "url": "https://github.com/AxonFramework/AxonFramework/commit/4129adc8600d48e81eee7e89c7ac554e87f130e4", "message": "Remove interface constant\n\nRemove interface constant for cleaner API\n\n#1390", "committedDate": "2020-06-11T12:34:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0MTgyMw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r440641823", "bodyText": "It would be beneficial to check whether messageOrPayload is an instance of Message as well.", "author": "m1l4n54v1c", "createdAt": "2020-06-16T07:29:15Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/replay/GenericResetMessage.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling.replay;\n+\n+import org.axonframework.messaging.GenericMessage;\n+import org.axonframework.messaging.Message;\n+import org.axonframework.messaging.MessageDecorator;\n+import org.axonframework.messaging.MetaData;\n+\n+import java.util.Map;\n+\n+/**\n+ * Generic implementation of the {@link ResetMessage}.\n+ *\n+ * @param <T> the type of payload contained in the message\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class GenericResetMessage<T> extends MessageDecorator<T> implements ResetMessage<T> {\n+\n+    private static final long serialVersionUID = -6872386525166762225L;\n+\n+    /**\n+     * Returns the given {@code messageOrPayload} as a {@link ResetMessage}. If {@code messageOrPayload} already\n+     * implements {@code ResetMessage}, it is returned as-is. Otherwise, the given {@code messageOrPayload} is wrapped\n+     * into a {@link GenericResetMessage} as its payload.\n+     *\n+     * @param messageOrPayload the payload to wrap as {@link ResetMessage}\n+     * @param <T>              the type of payload contained in the message\n+     * @return a {@link ResetMessage} containing given {@code messageOrPayload} as payload, or the {@code\n+     * messageOrPayload} if it already implements {@code ResetMessage}.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> ResetMessage<T> asResetMessage(Object messageOrPayload) {\n+        return messageOrPayload instanceof ResetMessage", "originalCommit": "4129adc8600d48e81eee7e89c7ac554e87f130e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4MTQyNQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443481425", "bodyText": "Good point, will adjust.", "author": "smcvb", "createdAt": "2020-06-22T11:03:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0MTgyMw=="}], "type": "inlineReview", "revised_code": {"commit": "ec695f5cd573ea4961460a5e07263af770c280c6", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/replay/GenericResetMessage.java b/messaging/src/main/java/org/axonframework/eventhandling/replay/GenericResetMessage.java\nindex b3c803bef..cb2003d5e 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/replay/GenericResetMessage.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/replay/GenericResetMessage.java\n\n@@ -16,11 +16,12 @@\n \n package org.axonframework.eventhandling.replay;\n \n+import org.axonframework.eventhandling.GenericEventMessage;\n import org.axonframework.messaging.GenericMessage;\n import org.axonframework.messaging.Message;\n-import org.axonframework.messaging.MessageDecorator;\n import org.axonframework.messaging.MetaData;\n \n+import java.time.Instant;\n import java.util.Map;\n \n /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NTA0NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r440645045", "bodyText": "Did you consider extending EventMessage? This approach could resolve a backwards compatibility issue with @ResetHandler annotation.", "author": "m1l4n54v1c", "createdAt": "2020-06-16T07:35:07Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/replay/ResetMessage.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling.replay;\n+\n+import org.axonframework.messaging.Message;\n+\n+import java.util.Map;\n+\n+/**\n+ * Represents a Message initiating the reset of an Event Handling Component. A payload of {@code T} can be provided to\n+ * support the reset operation handling this message.\n+ *\n+ * @param <T> the type of payload contained in the message\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public interface ResetMessage<T> extends Message<T> {", "originalCommit": "4129adc8600d48e81eee7e89c7ac554e87f130e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4ODI4NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443488285", "bodyText": "Unsure why I didn't do this, as I am pretty sure I had this at the start. Gonna re-evaluate this, thanks for pointing it out.", "author": "smcvb", "createdAt": "2020-06-22T11:18:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NTA0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1Mjc1NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443552755", "bodyText": "Adjusted, as this imposes a stronger contract and indeed resolves potential backwards compatibility issues for those having the @ResetHandler as a meta-annotation.", "author": "smcvb", "createdAt": "2020-06-22T13:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NTA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ec695f5cd573ea4961460a5e07263af770c280c6", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/replay/ResetMessage.java b/messaging/src/main/java/org/axonframework/eventhandling/replay/ResetMessage.java\nindex f3e57c0ea..5279d56dc 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/replay/ResetMessage.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/replay/ResetMessage.java\n\n@@ -16,7 +16,7 @@\n \n package org.axonframework.eventhandling.replay;\n \n-import org.axonframework.messaging.Message;\n+import org.axonframework.eventhandling.EventMessage;\n \n import java.util.Map;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1NzQ4OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r440657489", "bodyText": "Hmmmm... Even if Saga @Allows replaying?", "author": "m1l4n54v1c", "createdAt": "2020-06-16T07:56:26Z", "path": "modelling/src/main/java/org/axonframework/modelling/saga/AbstractSagaManager.java", "diffHunk": "@@ -191,7 +191,7 @@ public boolean supportsReset() {\n     }\n \n     @Override\n-    public void performReset() {\n+    public void performReset(Object resetInfo) {\n         throw new ResetNotSupportedException(\"Sagas do no support resetting tokens\");", "originalCommit": "4129adc8600d48e81eee7e89c7ac554e87f130e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MjY4MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443492681", "bodyText": "Yes, that is the stance, as that would mean you are reintroducing side effects which is an unlikely scenario.\nAlthough it's true that several EventHandlerInvokers can be paired under a MultiEventHandlerInvoker, thus potentially combining Sagas (which you do not want to replay) and regular Event Handling Components (EHCs), the canHandle method would still make certain the AbstractSagaManager (which is an EventHandlingInvoker implementation), would not be called:\n@Override\npublic boolean canHandle(EventMessage<?> eventMessage, Segment segment) {\n    return delegates.stream().anyMatch(i -> canHandle(i, eventMessage, segment));\n}\nprivate boolean canHandle(EventHandlerInvoker invoker, EventMessage<?> eventMessage, Segment segment) {\n    return (invoker.supportsReset() || !ReplayToken.isReplay(eventMessage)) && invoker.canHandle(eventMessage, segment);\n}\nHence, I still believe we're covered here.", "author": "smcvb", "createdAt": "2020-06-22T11:28:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1NzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUwMjY3Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443502673", "bodyText": "You are right! It's actually not possible to @AllowReplay on a saga which is a discussion on its own and shouldn't block this PR anyway. Thanks for the detailed explanation @smcvb!", "author": "m1l4n54v1c", "createdAt": "2020-06-22T11:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1NzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1MzYzNg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443553636", "bodyText": "As discussed, I should've included the handle method in my previous description as well, as the canHandle does an anyMatch.\nThus for clarity:\n@Override\npublic void handle(EventMessage<?> message, Segment segment) throws Exception {\n    for (EventHandlerInvoker i : delegates) {\n        if (canHandle(i, message, segment)) {\n            i.handle(message, segment);\n        }\n    }\n}\nYou can see the private boolean canHandle(...) is called there, effectively assuring a Saga will not handle events upon a reset.", "author": "smcvb", "createdAt": "2020-06-22T13:22:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1NzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1NDExMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1435#discussion_r443554112", "bodyText": "Created an issue to support replay on sagas: #1458", "author": "m1l4n54v1c", "createdAt": "2020-06-22T13:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1NzQ4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "90f06e16c9a536df320a843a48e9df01d02cc30a", "chunk": "diff --git a/modelling/src/main/java/org/axonframework/modelling/saga/AbstractSagaManager.java b/modelling/src/main/java/org/axonframework/modelling/saga/AbstractSagaManager.java\nindex 494920678..588c2d7e8 100644\n--- a/modelling/src/main/java/org/axonframework/modelling/saga/AbstractSagaManager.java\n+++ b/modelling/src/main/java/org/axonframework/modelling/saga/AbstractSagaManager.java\n\n@@ -191,7 +191,7 @@ public boolean supportsReset() {\n     }\n \n     @Override\n-    public void performReset(Object resetInfo) {\n+    public void performReset(Object resetContext) {\n         throw new ResetNotSupportedException(\"Sagas do no support resetting tokens\");\n     }\n \n"}}, {"oid": "b0a97bf814900eea7c6501e07a7adb6e7d8eaedb", "url": "https://github.com/AxonFramework/AxonFramework/commit/b0a97bf814900eea7c6501e07a7adb6e7d8eaedb", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-16T08:14:32Z", "type": "commit"}, {"oid": "e5c08f09f4ab61c8e03ce8cef83dd5d2edb7eeac", "url": "https://github.com/AxonFramework/AxonFramework/commit/e5c08f09f4ab61c8e03ce8cef83dd5d2edb7eeac", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-19T09:37:50Z", "type": "commit"}, {"oid": "90f06e16c9a536df320a843a48e9df01d02cc30a", "url": "https://github.com/AxonFramework/AxonFramework/commit/90f06e16c9a536df320a843a48e9df01d02cc30a", "message": "Rename resetInfo to resetContext\n\nRename resetInfo parameter to resetContext\n\n#1390", "committedDate": "2020-06-19T09:46:23Z", "type": "commit"}, {"oid": "ec695f5cd573ea4961460a5e07263af770c280c6", "url": "https://github.com/AxonFramework/AxonFramework/commit/ec695f5cd573ea4961460a5e07263af770c280c6", "message": "Process review comments\n\n- Let (Generic)ResetMessage implement (Generic)EventMessage\n- Due to inheritance, a dedicated ResetHandlingMember should be provided\n with a higher priority than events\n- Make asResetMessage validate for Message objects too\n\n#1390", "committedDate": "2020-06-22T13:16:07Z", "type": "commit"}, {"oid": "c31644c0b8b2524174da76c130bbf6e72ae656dc", "url": "https://github.com/AxonFramework/AxonFramework/commit/c31644c0b8b2524174da76c130bbf6e72ae656dc", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-22T15:16:10Z", "type": "commit"}, {"oid": "1f16ac4c5d66662bb10e3fed2b31c24d32d8bc7e", "url": "https://github.com/AxonFramework/AxonFramework/commit/1f16ac4c5d66662bb10e3fed2b31c24d32d8bc7e", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-23T10:13:48Z", "type": "commit"}, {"oid": "bb673e74579e867b00806b04e23d6df5d69ed8c1", "url": "https://github.com/AxonFramework/AxonFramework/commit/bb673e74579e867b00806b04e23d6df5d69ed8c1", "message": "Adjust default implementation of perform/prepareReset\n\nThe original performReset()/prepareReset() should no default to the new\nimplementation, as users might have implemented these methods themselves\nInstead, the new method should call the old impl., if the reset context\nis null. Otherwise, throw an UnsupportedOperationException.\nAdditionally, keep the old overrides, which call the new method, thus\nensuring users which use these interfaces directly still have the same\nfunctionality too.\n\n#1390", "committedDate": "2020-06-23T11:30:43Z", "type": "commit"}, {"oid": "453dec397d12247d145f2d7323dc518c9cc20576", "url": "https://github.com/AxonFramework/AxonFramework/commit/453dec397d12247d145f2d7323dc518c9cc20576", "message": "Drop ResetTriggeredEvent\n\nDrop ResetTriggeredEvent, as it's no longer used and wouldn't be used by\n users.\n\n#1390", "committedDate": "2020-06-23T11:31:07Z", "type": "commit"}, {"oid": "5d298b7b73500588197ae07b65d129a2b44880ac", "url": "https://github.com/AxonFramework/AxonFramework/commit/5d298b7b73500588197ae07b65d129a2b44880ac", "message": "Rename ResetMessage to ResetContext and let it implement Message again\n\nResetContext better carries the load of what the dedicated reset Message\n is for, hence it should be renamed. Additionally, letting it implement\n event mean introduces a form of premature optimization, as it requires\n a dedicated ResetHandlingMember where the priority method is overridden\nAdditionally, a timestamp on a ResetMessage doesn't say much, as the\nreset's time is always when it occurs\n\n#1390", "committedDate": "2020-06-23T11:34:01Z", "type": "commit"}, {"oid": "46bbedd1a7457d73ddc323d6b025dc70a661f2dd", "url": "https://github.com/AxonFramework/AxonFramework/commit/46bbedd1a7457d73ddc323d6b025dc70a661f2dd", "message": "Fix minor missed issues\n\n- Reindent some files\n- Add last new line for some tests\n- Remove double copyright notice on org.axonframework.messaging\n.annotation.HandlerEnhancerDefinition\n- Add missed override in Saga\n\n#1390", "committedDate": "2020-06-23T11:53:46Z", "type": "commit"}, {"oid": "6da099b92ab9bad038f497160f7e20efe270dd0d", "url": "https://github.com/AxonFramework/AxonFramework/commit/6da099b92ab9bad038f497160f7e20efe270dd0d", "message": "Remove double copyright notice\n\nRemove double copyright notice\n\n#1390", "committedDate": "2020-06-23T11:54:22Z", "type": "commit"}, {"oid": "8c303b482e79ac30f095c219f464014fbf5bfe68", "url": "https://github.com/AxonFramework/AxonFramework/commit/8c303b482e79ac30f095c219f464014fbf5bfe68", "message": "Add more tests\n\nAdd additional test cases to ensure everything's covered\n\n#1390", "committedDate": "2020-06-23T13:06:27Z", "type": "commit"}, {"oid": "ebd899e1ffff5d0cb31d68104078f947547adcaa", "url": "https://github.com/AxonFramework/AxonFramework/commit/ebd899e1ffff5d0cb31d68104078f947547adcaa", "message": "Fix some warnings\n\n- Add new lines\n- Add missing class level javadoc\n\n#1390", "committedDate": "2020-06-24T09:04:25Z", "type": "commit"}, {"oid": "6b3c52601eb393bc7e2cc4ae185f7ce6df612a58", "url": "https://github.com/AxonFramework/AxonFramework/commit/6b3c52601eb393bc7e2cc4ae185f7ce6df612a58", "message": "Merge remote-tracking branch 'origin/master' into feature/1390", "committedDate": "2020-06-24T09:04:52Z", "type": "commit"}]}