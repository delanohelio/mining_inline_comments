{"pr_number": 1612, "pr_title": "[#1611] MetaData deserilization and Ignoring Snapshots on readEvents for seqNo = 0", "pr_createdAt": "2020-11-19T16:12:32Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1612", "timeline": [{"oid": "c30daeb8ee45a5507803f43b128ddbbc805289e2", "url": "https://github.com/AxonFramework/AxonFramework/commit/c30daeb8ee45a5507803f43b128ddbbc805289e2", "message": "Ensure usage of gRPC aware Serializer\n\nWhen retrieving an Aggregate stream, there is a window of opportunity\nthat the default snapshot/event serializer is used, instead of the\nGrpcMetaDataAwareSerializer version. As a result, MetaData might be\nmissed out on. This should be resolved by overriding the\ngetSnapshotSerializer/getEventSerializer methods in the\nAxonServerEventStore and by using these methods in the\nAbstractEventStorageEngine consistently. This issue only comes to light\nif snapshotFilters are used, since only then will AxonServer be\nrequested for snapshots and events separately. The latter caused a call\nwhich doesn't use this specific serializer\n\n#1611", "committedDate": "2020-11-19T15:17:40Z", "type": "commit"}, {"oid": "306fa819cb42f391ef1d755264147f822f87e986", "url": "https://github.com/AxonFramework/AxonFramework/commit/306fa819cb42f391ef1d755264147f822f87e986", "message": "Ignore snapshots for readEventData invocation with seqNo 0\n\nThe validation to take snapshots into account when retrieving events\nfrom Axon Server check for a seqNo > 0. This should be >= instead.\n\n#1611", "committedDate": "2020-11-19T15:19:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527027299", "bodyText": "The third if calls   eventChannel.openAggregateStream(aggregateIdentifier)  wich also calls\n.openAggregateStream(aggregateIdentifier,true)  , so what's the use of this branche ?", "author": "kad-hesseg", "createdAt": "2020-11-19T16:33:26Z", "path": "axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java", "diffHunk": "@@ -475,7 +475,7 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             EventChannel eventChannel = connectionManager.getConnection(context).eventChannel();\n \n             AggregateEventStream aggregateStream;\n-            if (firstSequenceNumber > 0) {\n+            if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);", "originalCommit": "306fa819cb42f391ef1d755264147f822f87e986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAzMDAyMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527030021", "bodyText": "just for overriding ?", "author": "kad-hesseg", "createdAt": "2020-11-19T16:37:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1MDI0MA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527550240", "bodyText": "I was actually going to explain every branch, and then I indeed followed up your point, noting the javadoc of the EventChannel as well that basically line 481 and 483 do exactly the same. Thanks for noting, I am pretty confident the else should invoke openAggregateStream(aggregateIdentifier, false) instead of the default which uses true. Thanks for signaling this!", "author": "smcvb", "createdAt": "2020-11-20T09:10:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU2Mjk3Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1612#discussion_r527562976", "bodyText": "ah, ok.", "author": "kad-hesseg", "createdAt": "2020-11-20T09:31:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAyNzI5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "53f5aa9516486475a8fd5f56c5953202cef43713", "chunk": "diff --git a/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java b/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java\nindex f0a04d624..0e64a430f 100644\n--- a/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java\n+++ b/axon-server-connector/src/main/java/org/axonframework/axonserver/connector/event/axon/AxonServerEventStore.java\n\n@@ -478,9 +479,9 @@ protected void storeSnapshot(DomainEventMessage<?> snapshot, Serializer serializ\n             if (firstSequenceNumber >= 0) {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, firstSequenceNumber);\n             } else if (firstSequenceNumber == ALLOW_SNAPSHOTS_MAGIC_VALUE && !snapshotFilterSet) {\n-                aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, true);\n-            } else {\n                 aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier);\n+            } else {\n+                aggregateStream = eventChannel.openAggregateStream(aggregateIdentifier, WITHOUT_SNAPSHOTS);\n             }\n \n             return aggregateStream.asStream().map(GrpcBackedDomainEventData::new);\n"}}, {"oid": "53f5aa9516486475a8fd5f56c5953202cef43713", "url": "https://github.com/AxonFramework/AxonFramework/commit/53f5aa9516486475a8fd5f56c5953202cef43713", "message": "Don't allow snapshots if snapshot filter is set\n\nSnapshots shouldn't be taken into account when retrieving events if a\nsnapshot filter has been set. Add test cases consciously validating all\nthree options in readEventData(String, long)\n\n#1611", "committedDate": "2020-11-20T09:27:16Z", "type": "commit"}]}