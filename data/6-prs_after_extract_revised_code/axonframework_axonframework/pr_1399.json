{"pr_number": 1399, "pr_title": "Prevent null pointer exception in MultiSourceTrackingToken", "pr_createdAt": "2020-04-06T12:27:49Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1399", "timeline": [{"oid": "21e7cbce20eb070e08f3a3534e0fb9766565ff63", "url": "https://github.com/AxonFramework/AxonFramework/commit/21e7cbce20eb070e08f3a3534e0fb9766565ff63", "message": "Tracking token may be null for a specific source. Position needs to handle this.", "committedDate": "2020-04-06T09:53:05Z", "type": "commit"}, {"oid": "23bda0882c97696aff2fa473f6cac8d81e3352a1", "url": "https://github.com/AxonFramework/AxonFramework/commit/23bda0882c97696aff2fa473f6cac8d81e3352a1", "message": "fix upperbound/lowerbound for empty streams.", "committedDate": "2020-04-06T12:11:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEzOTk2MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1399#discussion_r404139961", "bodyText": "This can still lead to a NPE, when trackingTokenEntry is null, but that has a non-null entry.\nConsider using Object.equals(x, y) in the already existing if statement, instead of x.equals(y)", "author": "abuijze", "createdAt": "2020-04-06T14:33:52Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/MultiSourceTrackingToken.java", "diffHunk": "@@ -213,6 +219,10 @@ public boolean equals(Object o) {\n \n         for (Map.Entry<String, TrackingToken> trackingTokenEntry : trackingTokens.entrySet()) {\n             try {\n+                if ( trackingTokenEntry.getValue() == null  && that.trackingTokens.get(trackingTokenEntry.getKey()) == null) {", "originalCommit": "23bda0882c97696aff2fa473f6cac8d81e3352a1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b57abd67e41f4a9216bc7d70a66a4c2ecc11551b", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/MultiSourceTrackingToken.java b/messaging/src/main/java/org/axonframework/eventhandling/MultiSourceTrackingToken.java\nindex 84899d0df..7c27146a8 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/MultiSourceTrackingToken.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/MultiSourceTrackingToken.java\n\n@@ -217,21 +217,10 @@ public boolean equals(Object o) {\n             return false;\n         }\n \n-        for (Map.Entry<String, TrackingToken> trackingTokenEntry : trackingTokens.entrySet()) {\n-            try {\n-                if ( trackingTokenEntry.getValue() == null  && that.trackingTokens.get(trackingTokenEntry.getKey()) == null) {\n-                    return true;\n-                }\n-\n-                if (!trackingTokenEntry.getValue().equals(that.trackingTokens.get(trackingTokenEntry.getKey()))) {\n-                    return false;\n-                }\n-            } catch (NullPointerException ex) {\n-                logger.warn(\"A constituent token has not been initialized\");\n-                return false;\n-            }\n-        }\n-        return true;\n+        return trackingTokens.entrySet()\n+                             .stream()\n+                             .allMatch(trackingTokenEntry -> Objects.equals(trackingTokenEntry.getValue(),\n+                                                                            that.trackingTokens.get(trackingTokenEntry.getKey())));\n     }\n \n     @Override\n"}}, {"oid": "b57abd67e41f4a9216bc7d70a66a4c2ecc11551b", "url": "https://github.com/AxonFramework/AxonFramework/commit/b57abd67e41f4a9216bc7d70a66a4c2ecc11551b", "message": "Simplified comparing tokens per string using Object.equals().", "committedDate": "2020-04-07T10:07:10Z", "type": "commit"}]}