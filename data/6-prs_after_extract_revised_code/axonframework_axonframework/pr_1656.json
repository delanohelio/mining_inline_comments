{"pr_number": 1656, "pr_title": "[#1469] End Saga when Deadline expires", "pr_createdAt": "2020-12-29T16:00:50Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1656", "timeline": [{"oid": "a404f771da826af3043814bf86c6254940c07a04", "url": "https://github.com/AxonFramework/AxonFramework/commit/a404f771da826af3043814bf86c6254940c07a04", "message": "Allow EndSaga on other MessageHandlingMembers\n\nAdjust the isEndingHandler validation to simply validate the existence\nof the EndSaga annotation. Doing so opens up this annotation to be\nplaced on DeadlineHandler annotated methods too. Tests/assertions should\n be included to validate a Saga to be ended on a deadline handler yes/no\n\n#1469", "committedDate": "2020-12-29T15:54:37Z", "type": "commit"}, {"oid": "2cc7ce8532eea2c537edd2f7985584ae2bdee916", "url": "https://github.com/AxonFramework/AxonFramework/commit/2cc7ce8532eea2c537edd2f7985584ae2bdee916", "message": "Add DeadlineManager centric validation\n\nAdd assertions to the deadline manager test suite which validate the\n\"life\" of a Saga when using deadlines\n\n#1469", "committedDate": "2020-12-29T15:55:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI5MjMyNw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r555292327", "bodyText": "for backwards compatibility, wouldn't it be better to check for the SagaMethodMessageHandlingMember::isEndingHandler and in the orElse do the handler.hasAnnotation(EndSaga.class).\nI also think that the isEndingHandler is invoked for each Saga Handler invocation. I'm wondering if it wouldn't be better to wrap an Event Handler annotated with @EndSaga with the behavior to end the Saga using SagaLifecycle.end()", "author": "abuijze", "createdAt": "2021-01-11T19:39:17Z", "path": "modelling/src/main/java/org/axonframework/modelling/saga/AnnotatedSaga.java", "diffHunk": "@@ -131,9 +131,7 @@ private Object handle(MessageHandlingMember<? super T> handler, EventMessage<?>\n     }\n \n     private Boolean isEndingHandler(MessageHandlingMember<? super T> handler) {\n-        return handler.unwrap(SagaMethodMessageHandlingMember.class)\n-                      .map(SagaMethodMessageHandlingMember::isEndingHandler)\n-                      .orElse(false);\n+        return handler.hasAnnotation(EndSaga.class);", "originalCommit": "2cc7ce8532eea2c537edd2f7985584ae2bdee916", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTMwNDE2NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r555304164", "bodyText": "Just looked at the code. It's better to deprecate the isEndlingHandler method and create a MessageHandlerWrapper that reacts on the EndSaga annotation. That way, there is no need to inspect annotations for each call, but rather only during initialization.", "author": "abuijze", "createdAt": "2021-01-11T20:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI5MjMyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODI2OTA1NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r558269054", "bodyText": "Was already in doubt whether I could \"get away\" with this simple, albeit hacky, solution.\nJust added a dedicated handler enhancer definition and handling member to achieve the same.\nLet me know what you think.", "author": "smcvb", "createdAt": "2021-01-15T12:16:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI5MjMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "34972b2a28b7a14466d2f54bc2fcd26d35cc6553", "chunk": "diff --git a/modelling/src/main/java/org/axonframework/modelling/saga/AnnotatedSaga.java b/modelling/src/main/java/org/axonframework/modelling/saga/AnnotatedSaga.java\nindex 5d33089d3..8a3e620ee 100644\n--- a/modelling/src/main/java/org/axonframework/modelling/saga/AnnotatedSaga.java\n+++ b/modelling/src/main/java/org/axonframework/modelling/saga/AnnotatedSaga.java\n\n@@ -123,17 +123,9 @@ private Object handle(MessageHandlingMember<? super T> handler, EventMessage<?>\n             throw e;\n         } catch (Exception e) {\n             throw new SagaExecutionException(\"Exception while handling an Event in a Saga\", e);\n-        } finally {\n-            if (isEndingHandler(handler)) {\n-                doEnd();\n-            }\n         }\n     }\n \n-    private Boolean isEndingHandler(MessageHandlingMember<? super T> handler) {\n-        return handler.hasAnnotation(EndSaga.class);\n-    }\n-\n     @Override\n     public boolean isActive() {\n         return isActive;\n"}}, {"oid": "34972b2a28b7a14466d2f54bc2fcd26d35cc6553", "url": "https://github.com/AxonFramework/AxonFramework/commit/34972b2a28b7a14466d2f54bc2fcd26d35cc6553", "message": "Add HandlerEnhancerDefinition for EndSaga\n\nIntroduce a HandlerEnhancerDefinition which wraps handlers annotated\nwith EndSaga. When wrapping, the handle method should invoke\nSagaLifecycle.end() prior to returning the result. This allows for the\ndeprecation of the SagaMethodMessageHandlingMember#isEndingHandler\nmethod, as well as the removal of validating if it's an ending handler\ninside the AnnotatedAggregate\n\n#1469", "committedDate": "2021-01-15T13:11:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODMzMTU1NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r558331554", "bodyText": "The previous behavior was to also call end() when an exception is thrown. Since end() is only actually executed on when the UoW commits, it leaves it up to the configuration to decide whether the exception is a reason to roll back.\nSo I suggest:\ntry {\n    Object result = super.handle(message, target);\n} finally {\n    Sagalifecycle.end();\n}", "author": "abuijze", "createdAt": "2021-01-15T14:12:09Z", "path": "modelling/src/main/java/org/axonframework/modelling/saga/EndSagaMessageHandlerDefinition.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.axonframework.modelling.saga;\n+\n+import org.axonframework.messaging.Message;\n+import org.axonframework.messaging.annotation.HandlerEnhancerDefinition;\n+import org.axonframework.messaging.annotation.MessageHandlingMember;\n+import org.axonframework.messaging.annotation.WrappedMessageHandlingMember;\n+\n+/**\n+ * A {@link HandlerEnhancerDefinition} inspecting the existence of the {@link EndSaga} annotation on {@link\n+ * MessageHandlingMember}s. If present, the given {@code MessageHandlingMember} will be wrapped in a {@link\n+ * EndSageMessageHandlingMember}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.5\n+ */\n+public class EndSagaMessageHandlerDefinition implements HandlerEnhancerDefinition {\n+\n+    @Override\n+    public <T> MessageHandlingMember<T> wrapHandler(MessageHandlingMember<T> original) {\n+        return original.hasAnnotation(EndSaga.class) ? new EndSageMessageHandlingMember<>(original) : original;\n+    }\n+\n+    /**\n+     * A {@link WrappedMessageHandlingMember} implementation dedicated towards {@link MessageHandlingMember}s annotated\n+     * with {@link EndSaga}. After invocation of the {@link #handle(Message, Object)} method, the saga's is ended\n+     * through the {@link SagaLifecycle#end()} method.\n+     *\n+     * @param <T> the entity type wrapped by this {@link MessageHandlingMember}\n+     */\n+    public static class EndSageMessageHandlingMember<T> extends WrappedMessageHandlingMember<T> {\n+\n+        /**\n+         * Initializes the member using the given {@code delegate}.\n+         *\n+         * @param delegate the actual message handling member to delegate to\n+         */\n+        protected EndSageMessageHandlingMember(MessageHandlingMember<T> delegate) {\n+            super(delegate);\n+        }\n+\n+        @Override\n+        public Object handle(Message<?> message, T target) throws Exception {\n+            Object result = super.handle(message, target);\n+            SagaLifecycle.end();", "originalCommit": "34972b2a28b7a14466d2f54bc2fcd26d35cc6553", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fee1356aa7960bb1d063e147629c6d2c449b5934", "chunk": "diff --git a/modelling/src/main/java/org/axonframework/modelling/saga/EndSagaMessageHandlerDefinition.java b/modelling/src/main/java/org/axonframework/modelling/saga/EndSagaMessageHandlerDefinition.java\nindex d27955564..9113da7c9 100644\n--- a/modelling/src/main/java/org/axonframework/modelling/saga/EndSagaMessageHandlerDefinition.java\n+++ b/modelling/src/main/java/org/axonframework/modelling/saga/EndSagaMessageHandlerDefinition.java\n\n@@ -40,9 +40,11 @@ protected EndSageMessageHandlingMember(MessageHandlingMember<T> delegate) {\n \n         @Override\n         public Object handle(Message<?> message, T target) throws Exception {\n-            Object result = super.handle(message, target);\n-            SagaLifecycle.end();\n-            return result;\n+            try {\n+                return super.handle(message, target);\n+            } finally {\n+                SagaLifecycle.end();\n+            }\n         }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODMzMjg5NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r558332895", "bodyText": "If you are concerned about backwards compatibility on this one, then simply ignoring the value here isn't an option. It will change the behavior to a degree that you'd much rather have a compilation error.\nSince this is not likely to be a component others use directly, I suggest removing the constructor instead.", "author": "abuijze", "createdAt": "2021-01-15T14:14:27Z", "path": "modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java", "diffHunk": "@@ -46,10 +46,16 @@\n      * @param associationPropertyName The association property name to look up in the message\n      * @param associationResolver     The association resolver configured for this handler\n      * @param endingHandler           Flag to indicate if an invocation of the given handler should end the saga\n+     * @deprecated in favour of the constructor not providing the {@code endingHandler} parameter, since that parameter", "originalCommit": "34972b2a28b7a14466d2f54bc2fcd26d35cc6553", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fee1356aa7960bb1d063e147629c6d2c449b5934", "chunk": "diff --git a/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java b/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\nindex 8d81082dc..0d15a56f7 100644\n--- a/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\n+++ b/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\n\n@@ -35,35 +35,6 @@\n     private final String associationKey;\n     private final String associationPropertyName;\n     private final AssociationResolver associationResolver;\n-    private final boolean endingHandler;\n-\n-    /**\n-     * Creates a SagaMethodMessageHandler.\n-     *\n-     * @param creationPolicy          The creation policy for the handlerMethod\n-     * @param delegate                The message handler for the event\n-     * @param associationKey          The association key configured for this handler\n-     * @param associationPropertyName The association property name to look up in the message\n-     * @param associationResolver     The association resolver configured for this handler\n-     * @param endingHandler           Flag to indicate if an invocation of the given handler should end the saga\n-     * @deprecated in favour of the constructor not providing the {@code endingHandler} parameter, since that parameter\n-     * is no longer supported.\n-     */\n-    @Deprecated\n-    public SagaMethodMessageHandlingMember(MessageHandlingMember<T> delegate,\n-                                           SagaCreationPolicy creationPolicy,\n-                                           String associationKey,\n-                                           String associationPropertyName,\n-                                           AssociationResolver associationResolver,\n-                                           boolean endingHandler) {\n-        super(delegate);\n-        this.delegate = delegate;\n-        this.creationPolicy = creationPolicy;\n-        this.associationKey = associationKey;\n-        this.associationPropertyName = associationPropertyName;\n-        this.associationResolver = associationResolver;\n-        this.endingHandler = endingHandler;\n-    }\n \n     /**\n      * Creates a SagaMethodMessageHandler.\n"}}, {"oid": "fee1356aa7960bb1d063e147629c6d2c449b5934", "url": "https://github.com/AxonFramework/AxonFramework/commit/fee1356aa7960bb1d063e147629c6d2c449b5934", "message": "Address review comments\n\n- Invoke SagaLifecycle.end in try-finally block\n- Remove deprecated constructor, as chances are slim anybody is using it\n\n#1469", "committedDate": "2021-01-15T14:48:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYxODAxMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r559618012", "bodyText": "Deprecating this doesn't make sense. The method is set to return false in any case. That breaks backward compatibility already. Rather break it through a compilation error, than through a subtle change at runtime.\nSince this is not a public API method, I suggest removing the it.", "author": "abuijze", "createdAt": "2021-01-18T14:49:22Z", "path": "modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java", "diffHunk": "@@ -91,10 +90,12 @@ public SagaCreationPolicy getCreationPolicy() {\n     /**\n      * Indicates whether this handler is one that ends the Saga lifecycle\n      *\n-     * @return {@code true} if the Saga lifecycle ends unconditionally after this call, otherwise\n-     * {@code false}\n+     * @return {@code true} if the Saga lifecycle ends unconditionally after this call, otherwise {@code false}\n+     * @deprecated in favor of the dedicated {@link EndSagaMessageHandlerDefinition} and {@link\n+     * EndSagaMessageHandlerDefinition.EndSageMessageHandlingMember}\n      */\n+    @Deprecated", "originalCommit": "fee1356aa7960bb1d063e147629c6d2c449b5934", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2NjAyMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1656#discussion_r559666021", "bodyText": "Exactly why I had the constructor still present in the previous review. But sure, I'll also remove this method.", "author": "smcvb", "createdAt": "2021-01-18T16:01:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYxODAxMg=="}], "type": "inlineReview", "revised_code": {"commit": "aaabcfe5af21dd5a9c01a39f98bb1a4f77d9d1e9", "chunk": "diff --git a/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java b/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\nindex 0d15a56f7..1d994accd 100644\n--- a/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\n+++ b/modelling/src/main/java/org/axonframework/modelling/saga/SagaMethodMessageHandlingMember.java\n\n@@ -86,16 +86,4 @@ public Object handle(Message<?> message, T target) throws Exception {\n     public SagaCreationPolicy getCreationPolicy() {\n         return creationPolicy;\n     }\n-\n-    /**\n-     * Indicates whether this handler is one that ends the Saga lifecycle\n-     *\n-     * @return {@code true} if the Saga lifecycle ends unconditionally after this call, otherwise {@code false}\n-     * @deprecated in favor of the dedicated {@link EndSagaMessageHandlerDefinition} and {@link\n-     * EndSagaMessageHandlerDefinition.EndSageMessageHandlingMember}\n-     */\n-    @Deprecated\n-    public boolean isEndingHandler() {\n-        return false;\n-    }\n }\n"}}, {"oid": "aaabcfe5af21dd5a9c01a39f98bb1a4f77d9d1e9", "url": "https://github.com/AxonFramework/AxonFramework/commit/aaabcfe5af21dd5a9c01a39f98bb1a4f77d9d1e9", "message": "Remove deprecated method\n\nRemove deprecated method as we assume nobody is using this any how\n\n#1469", "committedDate": "2021-01-18T16:02:28Z", "type": "commit"}]}