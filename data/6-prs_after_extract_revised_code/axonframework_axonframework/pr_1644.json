{"pr_number": 1644, "pr_title": "#1613 Added ability to set ClassLoader on XStreamSerializer builder", "pr_createdAt": "2020-12-17T12:05:38Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1644", "timeline": [{"oid": "35b80cba328778fadccc50f166610949aba81932", "url": "https://github.com/AxonFramework/AxonFramework/commit/35b80cba328778fadccc50f166610949aba81932", "message": "#1613 Added ability to set ClassLoader on XStreamSerializer builder", "committedDate": "2020-12-17T11:33:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NzEwOQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r545747109", "bodyText": "Small pointer, but I feel it would be nicer to perform this validation and check in the build() method on the XStreamSerializer. Mainly because the classLoader doesn't mean anything from the perspective of this constructor, it's purely there to define what the XStream instance would look like.", "author": "smcvb", "createdAt": "2020-12-18T10:39:47Z", "path": "messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java", "diffHunk": "@@ -65,6 +65,10 @@ protected AbstractXStreamSerializer(Builder builder) {\n         this.converter = builder.converter;\n         this.revisionResolver = builder.revisionResolver;\n \n+        if (builder.classLoader != null) {", "originalCommit": "35b80cba328778fadccc50f166610949aba81932", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2MzQwNQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r545763405", "bodyText": "Probably this if block better move to AbstractXStreamSerializer.Builder#validate method close to this XStream configuration code:\n            if (lenientDeserialization) {\n                xStream.ignoreUnknownElements();\n            }\nWhat do you think @smcvb ?", "author": "aupodogov", "createdAt": "2020-12-18T11:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NzEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5ODE2MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r546598161", "bodyText": "Good call @aupodogov, sounds reasonable to place it there to me too!", "author": "smcvb", "createdAt": "2020-12-21T09:28:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NzEwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyMTg5OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r547121899", "bodyText": "OK, done", "author": "aupodogov", "createdAt": "2020-12-22T07:52:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0NzEwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "3eb64e012ae4f11b452be3272e26a3f8fc471a46", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java b/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\nindex 8f088423e..a33b191b8 100644\n--- a/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\n+++ b/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\n\n@@ -65,10 +65,6 @@ protected AbstractXStreamSerializer(Builder builder) {\n         this.converter = builder.converter;\n         this.revisionResolver = builder.revisionResolver;\n \n-        if (builder.classLoader != null) {\n-            this.xStream.setClassLoader(builder.classLoader);\n-        }\n-\n         if (converter instanceof ChainingConverter) {\n             registerConverters((ChainingConverter) converter);\n         }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc0ODg2Nw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r545748867", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Sets the {@link ClassLoader} used as an override for default class loader in {@link XStream}.\n          \n          \n            \n                     * Sets the {@link ClassLoader} used as an override for default {@code ClassLoader} used in the {@link XStream}.\n          \n          \n            \n                     * The same solution could thus be achieved by configuring the `XStream` instance directly.", "author": "smcvb", "createdAt": "2020-12-18T10:42:57Z", "path": "messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java", "diffHunk": "@@ -328,6 +333,18 @@ public Builder converter(Converter converter) {\n             return this;\n         }\n \n+        /**\n+         * Sets the {@link ClassLoader} used as an override for default class loader in {@link XStream}.", "originalCommit": "35b80cba328778fadccc50f166610949aba81932", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "066308494018bd01dd5ed71f7e8179494be4268e", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java b/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\nindex 8f088423e..8d6248de7 100644\n--- a/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\n+++ b/messaging/src/main/java/org/axonframework/serialization/AbstractXStreamSerializer.java\n\n@@ -334,7 +334,8 @@ public Builder converter(Converter converter) {\n         }\n \n         /**\n-         * Sets the {@link ClassLoader} used as an override for default class loader in {@link XStream}.\n+         * Sets the {@link ClassLoader} used as an override for default {@code ClassLoader} used in the {@link XStream}.\n+         * The same solution could thus be achieved by configuring the `XStream` instance directly.\n          *\n          * @param classLoader a {@link ClassLoader} used as a class loader in {@link XStream}\n          * @return the current Builder instance, for fluent interfacing\n"}}, {"oid": "066308494018bd01dd5ed71f7e8179494be4268e", "url": "https://github.com/AxonFramework/AxonFramework/commit/066308494018bd01dd5ed71f7e8179494be4268e", "message": "Apply javadoc suggestion\n\nCo-authored-by: Steven van Beelen <steven.vanbeelen@axoniq.io>", "committedDate": "2020-12-18T10:53:39Z", "type": "commit"}, {"oid": "cfa8700affb448b715d4f84d408d384681794271", "url": "https://github.com/AxonFramework/AxonFramework/commit/cfa8700affb448b715d4f84d408d384681794271", "message": "#1613 Setting XStream ClassLoader on autoconfiguration via builder method", "committedDate": "2020-12-18T11:34:25Z", "type": "commit"}, {"oid": "3eb64e012ae4f11b452be3272e26a3f8fc471a46", "url": "https://github.com/AxonFramework/AxonFramework/commit/3eb64e012ae4f11b452be3272e26a3f8fc471a46", "message": "#1613 Setting ClassLoader for XStreamSerializer moved to AbstractXStreamSerializer.Builder#validate method", "committedDate": "2020-12-22T07:39:15Z", "type": "commit"}, {"oid": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be", "url": "https://github.com/AxonFramework/AxonFramework/commit/1bcb25a762f172182ea3d9b1d2ead0933dc6c9be", "message": "#1613 Added ability to set ClassLoader on JacksonSerializer builder", "committedDate": "2020-12-22T15:05:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MjE0MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r547392141", "bodyText": "Shouldn't this be done for the JacksonSerializer too?", "author": "smcvb", "createdAt": "2020-12-22T17:02:22Z", "path": "spring-boot-autoconfigure/src/main/java/org/axonframework/springboot/autoconfig/AxonAutoConfiguration.java", "diffHunk": "@@ -165,11 +165,10 @@ private Serializer buildSerializer(RevisionResolver revisionResolver,\n             case XSTREAM:\n             case DEFAULT:\n             default:\n-                XStreamSerializer xStreamSerializer = XStreamSerializer.builder()\n-                                                                       .revisionResolver(revisionResolver)\n-                                                                       .build();\n-                xStreamSerializer.getXStream().setClassLoader(beanClassLoader);\n-                return xStreamSerializer;\n+                return XStreamSerializer.builder()", "originalCommit": "1bcb25a762f172182ea3d9b1d2ead0933dc6c9be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ1MjM0Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r547452342", "bodyText": "This might lead to override class loader in Spring Boot auto configured ObjectMapper (configured in JacksonAutoConfiguration). I think it's not good.", "author": "aupodogov", "createdAt": "2020-12-22T19:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MjE0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc5NDAzOQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1644#discussion_r547794039", "bodyText": "Fair point. That makes it something we simply cannot do in the auto configuration on the JacksonSerializer directly.\nWe could take control of the defaultAxonObjectMapper bean, as that's already being searched for any how, but that's not really the scope of this issue.", "author": "smcvb", "createdAt": "2020-12-23T08:20:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5MjE0MQ=="}], "type": "inlineReview", "revised_code": null}]}