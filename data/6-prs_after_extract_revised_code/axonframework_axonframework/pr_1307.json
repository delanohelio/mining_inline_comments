{"pr_number": 1307, "pr_title": "[#894] Add registerResourceInjector method to SagaTestFixture", "pr_createdAt": "2020-01-06T09:56:45Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1307", "timeline": [{"oid": "43ddc5ebc5978c32cf7c13e3cd3b00d0acfa648d", "url": "https://github.com/AxonFramework/AxonFramework/commit/43ddc5ebc5978c32cf7c13e3cd3b00d0acfa648d", "message": "Deprecate AutowiredResourceInjector\n\nDeprecate the AutowiredResourceInjector in favor of the\nSimpleResourceInjector. Both implementation do exactly the same, with\nthe difference that the AutowiredResourceInjector can only be used with\nthe axon-test module\n\n#894", "committedDate": "2020-01-03T14:22:10Z", "type": "commit"}, {"oid": "d2d5aaecfe9d0299b5574e27b6b707ea55ebe1a2", "url": "https://github.com/AxonFramework/AxonFramework/commit/d2d5aaecfe9d0299b5574e27b6b707ea55ebe1a2", "message": "Merge branch 'feature/680' into feature/894", "committedDate": "2020-01-03T15:14:48Z", "type": "commit"}, {"oid": "da47d0619cd5259979b0d5dffcf3b0e44acaf331", "url": "https://github.com/AxonFramework/AxonFramework/commit/da47d0619cd5259979b0d5dffcf3b0e44acaf331", "message": "Implement registerResourceInjector\n\nImplement a registerResourceInjector. This should introduce a custom\nResourceInjector which is called along side the fixture's default\ninjector. Both should be called in this scenario to keep ensuring the\ncorrect injection of default components like the CommandBus and EventBus\nThe custom version can in turn, if implemented as such, override the\ndefault's injected resources\n\n#894", "committedDate": "2020-01-03T15:36:07Z", "type": "commit"}, {"oid": "8df6e7e5cce1b9f5c3f803361d958598076fdc4e", "url": "https://github.com/AxonFramework/AxonFramework/commit/8df6e7e5cce1b9f5c3f803361d958598076fdc4e", "message": "Test registerResourceInjector\n\nAdd a test case which registers a custom resource injector. This should\nvalidate that the custom injector is called once the first message is\npassed through the fixture, as that will initialize a saga for testing\nwhich includes resource injection.\n\n#894", "committedDate": "2020-01-06T09:33:59Z", "type": "commit"}, {"oid": "38599e6a66d72105e87671062d563f6bc7c3b20c", "url": "https://github.com/AxonFramework/AxonFramework/commit/38599e6a66d72105e87671062d563f6bc7c3b20c", "message": "Merge branch 'feature/680' into feature/894", "committedDate": "2020-01-06T14:26:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTM4NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1307#discussion_r364455384", "bodyText": "Not sure I understand this. If the custom injector comes second, doesn't that give it the opportunity to override certain dependencies? If we want to force our own, the default injector should come last.", "author": "abuijze", "createdAt": "2020-01-08T21:37:29Z", "path": "test/src/main/java/org/axonframework/test/saga/FixtureConfiguration.java", "diffHunk": "@@ -211,6 +212,22 @@ FixtureConfiguration registerDeadlineHandlerInterceptor(\n     FixtureConfiguration registerListenerInvocationErrorHandler(\n             ListenerInvocationErrorHandler listenerInvocationErrorHandler);\n \n+    /**\n+     * Registers a {@link ResourceInjector} within this fixture. This approach can be used if a custom {@code\n+     * ResourceInjector} has been built for a project which the user wants to take into account when testing it's\n+     * sagas.\n+     * <p>\n+     * The provided {@code resourceInjector} will be paired with the fixture's default {@code ResourceInjector} to keep\n+     * supporting the {@link #registerResource(Object)} and {@link #withTransienceCheckDisabled()} methods. Note that\n+     * <b>first</b> the default injector is called, and after that the given {@code resourceInjector}. This approach\n+     * ensures the fixture's correct workings for default provided resources, like the {@link EventBus} and {@link", "originalCommit": "38599e6a66d72105e87671062d563f6bc7c3b20c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NTc2MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1307#discussion_r364685761", "bodyText": "My train of thought was to keep support for the registerResource(Object) and withTransienceCheckDisabled() methods workable, but allow the users to override the entirety of resource injections or to append to it.\nTo achieve both complete override and appending, I felt the custom implementation should come second.", "author": "smcvb", "createdAt": "2020-01-09T11:19:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTM4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcyNDY1Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1307#discussion_r364724652", "bodyText": "Discussed offline that the current approach is fair, but that a more direct caution sign should be given in the javadoc to describe what happens if a custom all overriding ResourceInjector is provided.", "author": "smcvb", "createdAt": "2020-01-09T12:59:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "c2b6ffe21a06135e6afb775cd0340a2b74c6970c", "chunk": "diff --git a/test/src/main/java/org/axonframework/test/saga/FixtureConfiguration.java b/test/src/main/java/org/axonframework/test/saga/FixtureConfiguration.java\nindex b0fac18a0..aefff792d 100644\n--- a/test/src/main/java/org/axonframework/test/saga/FixtureConfiguration.java\n+++ b/test/src/main/java/org/axonframework/test/saga/FixtureConfiguration.java\n\n@@ -218,10 +218,14 @@ FixtureConfiguration registerListenerInvocationErrorHandler(\n      * sagas.\n      * <p>\n      * The provided {@code resourceInjector} will be paired with the fixture's default {@code ResourceInjector} to keep\n-     * supporting the {@link #registerResource(Object)} and {@link #withTransienceCheckDisabled()} methods. Note that\n+     * support for the {@link #registerResource(Object)} and {@link #withTransienceCheckDisabled()} methods. Note that\n      * <b>first</b> the default injector is called, and after that the given {@code resourceInjector}. This approach\n      * ensures the fixture's correct workings for default provided resources, like the {@link EventBus} and {@link\n-     * CommandBus}}.\n+     * CommandBus}}, whilst allowing the capability to append and/or override with the given {@code resourceInjector}.\n+     * <p>\n+     * Care should be taken if the custom {@code resourceInjector} overrides default resources like the {@code EventBus}\n+     * and {@code CommandBus}, as the fixture uses specialized versions of the default sources to support all testing\n+     * functionality.\n      *\n      * @param resourceInjector the {@link ResourceInjector} to register within this fixture\n      * @return the current FixtureConfiguration, for fluent interfacing\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTk2OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1307#discussion_r364455969", "bodyText": "Class looks like it could be static", "author": "abuijze", "createdAt": "2020-01-08T21:38:50Z", "path": "test/src/main/java/org/axonframework/test/saga/SagaTestFixture.java", "diffHunk": "@@ -585,15 +600,44 @@ public void injectResources(Object saga) {\n                              .filter(f -> registeredResources.contains(ReflectionUtils.getFieldValue(f, saga)))\n                              .findFirst()\n                              .ifPresent(field -> {\n-                                 throw new AssertionError(format(\"Field %s.%s is injected with a resource, \" +\n-                                                                         \"but it doesn't have the 'transient' modifier.\\n\"\n-                                                                         +\n-                                                                         \"Mark field as 'transient' or disable this check using:\\n\"\n-                                                                         +\n-                                                                         \"fixture.withTransienceCheckDisabled()\",\n-                                                                 field.getDeclaringClass(), field.getName()));\n+                                 throw new AssertionError(format(\n+                                         \"Field %s.%s is injected with a resource,\"\n+                                                 + \" but it doesn't have the 'transient' modifier.\"\n+                                                 + \"\\nMark field as 'transient' or disable this check using:\"\n+                                                 + \"\\nfixture.withTransienceCheckDisabled()\",\n+                                         field.getDeclaringClass(),\n+                                         field.getName()\n+                                 ));\n                              });\n             }\n         }\n     }\n+\n+    /**\n+     * Wrapping {@link ResourceInjector} instance. Will first call the {@link TransienceValidatingResourceInjector}, to\n+     * ensure the fixture's approach of injecting the default classes (like the {@link EventBus} and {@link CommandBus}\n+     * for example) is maintained. Afterward, the custom {@code ResourceInjector} provided through the {@link\n+     * #registerResourceInjector(ResourceInjector)} is called. This will (depending on the implementation) inject more\n+     * resources, as well as potentially override resources already injected by the {@code\n+     * TransienceValidatingResourceInjector}.\n+     */\n+    private class WrappingResourceInjector implements ResourceInjector {", "originalCommit": "38599e6a66d72105e87671062d563f6bc7c3b20c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY4NDA0Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1307#discussion_r364684043", "bodyText": "This requires making the TransienceValidatingResourceInjector static too, but fair argument nonetheless. Will do", "author": "smcvb", "createdAt": "2020-01-09T11:14:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ1NTk2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "39a54c1dd648462e31fe5f601fc187818b1b821e", "chunk": "diff --git a/test/src/main/java/org/axonframework/test/saga/SagaTestFixture.java b/test/src/main/java/org/axonframework/test/saga/SagaTestFixture.java\nindex 8213f3078..8e68a1e8d 100644\n--- a/test/src/main/java/org/axonframework/test/saga/SagaTestFixture.java\n+++ b/test/src/main/java/org/axonframework/test/saga/SagaTestFixture.java\n\n@@ -621,7 +627,7 @@ public void injectResources(Object saga) {\n      * resources, as well as potentially override resources already injected by the {@code\n      * TransienceValidatingResourceInjector}.\n      */\n-    private class WrappingResourceInjector implements ResourceInjector {\n+    private static class WrappingResourceInjector implements ResourceInjector {\n \n         private final ResourceInjector customResourceInjector;\n         private final TransienceValidatingResourceInjector defaultResourceInjector;\n"}}, {"oid": "39a54c1dd648462e31fe5f601fc187818b1b821e", "url": "https://github.com/AxonFramework/AxonFramework/commit/39a54c1dd648462e31fe5f601fc187818b1b821e", "message": "Making test injectors static\n\nThe TransienceValidatingResourceInjector and WrappingResourceInjector\ncan be made static\n\n#894", "committedDate": "2020-01-09T11:15:53Z", "type": "commit"}, {"oid": "d600ed608826488a1367ae624271de0655ac2b6d", "url": "https://github.com/AxonFramework/AxonFramework/commit/d600ed608826488a1367ae624271de0655ac2b6d", "message": "Merge remote-tracking branch 'origin/master' into feature/894", "committedDate": "2020-01-09T11:16:31Z", "type": "commit"}, {"oid": "c2b6ffe21a06135e6afb775cd0340a2b74c6970c", "url": "https://github.com/AxonFramework/AxonFramework/commit/c2b6ffe21a06135e6afb775cd0340a2b74c6970c", "message": "Provide more thorough documentation\n\nThe registration of a custom ResourceInjector implies several things\nwhich should be taken into account by the users. The javadoc should\nstate all of these clearly\n\n#894", "committedDate": "2020-01-09T12:57:39Z", "type": "commit"}, {"oid": "15b31924dab76dbec315d422b1f1559dd568b2de", "url": "https://github.com/AxonFramework/AxonFramework/commit/15b31924dab76dbec315d422b1f1559dd568b2de", "message": "Update indentation\n\nUpdate the indentation according to the style guide\n\n#894", "committedDate": "2020-01-09T12:58:15Z", "type": "commit"}]}