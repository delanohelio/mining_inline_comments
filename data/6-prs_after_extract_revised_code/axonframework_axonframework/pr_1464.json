{"pr_number": 1464, "pr_title": "[#1338] EventTrackerStatusChangeListener for Tracking Event Processors", "pr_createdAt": "2020-07-07T08:02:08Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1464", "timeline": [{"oid": "50e313782924de0742facd5a094b1df0ef911538", "url": "https://github.com/AxonFramework/AxonFramework/commit/50e313782924de0742facd5a094b1df0ef911538", "message": "Introduce EventTrackerStatusChangeListener\n\nIntroduce the EventTrackerStatusChangeListener which users will be able\nto specify to react to changes in the EventTrackerStatus. They'll\nreceive a Map of segmentId to EventTrackerStatus if a change occurred.\nAdditionally, on the interface they can define if they want to react on\nupdated tracker positions. By default it wont, as those happen often and\n thus would typically not be valuable.\n\n#1338", "committedDate": "2020-07-03T12:12:23Z", "type": "commit"}, {"oid": "c93ed687aec2d3c0f84d572ebe1c2a43448a289a", "url": "https://github.com/AxonFramework/AxonFramework/commit/c93ed687aec2d3c0f84d572ebe1c2a43448a289a", "message": "Add matching functions to the EventTrackerStatus\n\nThe EventTrackerStatusChangeListener should react when\nEventTrackerStatus' are different. To that end a mechanism should be\nincluded to detect differences, which may or may not include positions\nvalidation.\n\n#1338", "committedDate": "2020-07-03T12:24:58Z", "type": "commit"}, {"oid": "d1833c1091810761e823b4e763efb2e0bac5fac5", "url": "https://github.com/AxonFramework/AxonFramework/commit/d1833c1091810761e823b4e763efb2e0bac5fac5", "message": "Include special case TrackerStatus objects\n\nTo be able to detect new or removed EventTrackerStatus objects which as\nsuch can be passed to the EventTrackerStatusChangeListener, providing\nspecial case implementations is beneficial. These special cases are\nregarded as wrappers to a new/removed actual EventTrackerStatus\nimplementation.\n\n#1338", "committedDate": "2020-07-03T12:26:53Z", "type": "commit"}, {"oid": "8d1f47d821f84e8eafe7e7443408c428488fb063", "url": "https://github.com/AxonFramework/AxonFramework/commit/8d1f47d821f84e8eafe7e7443408c428488fb063", "message": "Allow configuration of the EventTrackerStatusChangeListener\n\nThe TrackingEventProcessorConfiguration should provide methods to\nconfigure and retrieve a EventTrackerStatusChangeListener instance. It\nshould default to a no-op implementation.\n\n#1338", "committedDate": "2020-07-03T12:27:49Z", "type": "commit"}, {"oid": "18bd6196bccff4c58499c91aff38b6235f2b1f3a", "url": "https://github.com/AxonFramework/AxonFramework/commit/18bd6196bccff4c58499c91aff38b6235f2b1f3a", "message": "Wrap every status update to check for changes\n\nAll occurrences of an update to the activeSegments should be wrapped. If\n there's a change between the old set and the new set, whether that's an\n addition, removal or changes (with or without positions taken into\n account), the EventTrackerStatusChangeListener should be invoked with\n the adjustments.\n\n#1338", "committedDate": "2020-07-06T15:37:36Z", "type": "commit"}, {"oid": "f16dbf18dd19ecc73f6f7e4ab6b575786efa9e51", "url": "https://github.com/AxonFramework/AxonFramework/commit/f16dbf18dd19ecc73f6f7e4ab6b575786efa9e51", "message": "Merge remote-tracking branch 'origin/master' into feature/1338", "committedDate": "2020-07-06T15:37:51Z", "type": "commit"}, {"oid": "e8df4e39c1dd19d5612438464089d441e5547543", "url": "https://github.com/AxonFramework/AxonFramework/commit/e8df4e39c1dd19d5612438464089d441e5547543", "message": "Use is not empty instead of size check\n\nUse is not empty instead of size check to match removed or added\nsegments\n\n#1338", "committedDate": "2020-07-09T10:20:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNzgyMA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458037820", "bodyText": "Maybe create an overload that always validates positions boolean isDifferent(EventTrackerStatus that)?", "author": "m1l4n54v1c", "createdAt": "2020-07-21T11:51:46Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -110,4 +114,51 @@\n      * @return the relative position at which a reset was triggered for this Segment\n      */\n     OptionalLong getResetPosition();\n+\n+    /**\n+     * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n+     *\n+     * @param that              the other {@link EventTrackerStatus} to validate the difference with\n+     * @param validatePositions flag dictating whether {@link #matchPositions(EventTrackerStatus)} should be taken into\n+     *                          account when matching\n+     * @return {@code true} if both {@link EventTrackerStatus}'s are different, {@code false} otherwise\n+     */\n+    default boolean isDifferent(EventTrackerStatus that, boolean validatePositions) {", "originalCommit": "e8df4e39c1dd19d5612438464089d441e5547543", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1MzExNw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458153117", "bodyText": "Great and reasonable suggestion, will add this.", "author": "smcvb", "createdAt": "2020-07-21T14:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAzNzgyMA=="}], "type": "inlineReview", "revised_code": {"commit": "12ac12d8477ffd8e93e83ac084540cb71467f7bb", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex e3b0adc81..a0534dec1 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -98,23 +101,33 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative current token position this Segment represents.\n-     * In case of replay is active, return the estimated relative position reached by merge operation.\n-     * In case of merge is active, return the estimated relative position reached by merge operation.\n-     * In case no estimation can be given, or no replay or merge in progress, an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative current token position this Segment represents. In case of replay is active, return\n+     * the estimated relative position reached by merge operation. In case of merge is active, return the estimated\n+     * relative position reached by merge operation. In case no estimation can be given, or no replay or merge in\n+     * progress, an {@code OptionalLong.empty()} will be returned.\n      *\n      * @return return the estimated relative current token position this Segment represents\n      */\n     OptionalLong getCurrentPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered for this Segment.\n-     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment. In case a replay finished or no\n+     * replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n      * @return the relative position at which a reset was triggered for this Segment\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n+     *\n+     * @param that the other {@link EventTrackerStatus} to validate the difference with\n+     * @return {@code true} if both {@link EventTrackerStatus}'s are different, {@code false} otherwise\n+     */\n+    default boolean isDifferent(EventTrackerStatus that) {\n+        return isDifferent(that, true);\n+    }\n+\n     /**\n      * Check whether {@code this} {@link EventTrackerStatus} is different from {@code that}.\n      *\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458063137", "bodyText": "Why introducing Added and Removed``TrackerStatus and not adding two default methods to the EventTrackerStatus interface such as boolean new() and boolean removed()?", "author": "m1l4n54v1c", "createdAt": "2020-07-21T12:38:40Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.eventhandling;\n+\n+/**\n+ * References a new {@link EventTrackerStatus} which work just has started on. Can be used as a marker to react on in\n+ * the {@link EventTrackerStatusChangeListener}.\n+ *\n+ * @author Steven van Beelen\n+ * @since 4.4\n+ */\n+public class AddedTrackerStatus extends WrappedTrackerStatus {", "originalCommit": "e8df4e39c1dd19d5612438464089d441e5547543", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1NDcyMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r458154722", "bodyText": "I intended to embrace the special case pattern, which my gut told me would work best with dedicated objects.\nI even played with the idea of wrapping the entire collection containing all the status objects, so that it's the collection which knows when something is added, removed or updated. That became rather ugly, rather quickly though, so I abandoned that for the time being.\nBut, what do you think, should we move away from this special case pattern here?", "author": "smcvb", "createdAt": "2020-07-21T14:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3NDU0MQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460774541", "bodyText": "We had a think and chat about it. Adding default methods which state whether an EventTrackerStatus was added or removed make the API within the EventTrackerStatusChangeListener a lot more friendly, as no instanceof checks or casts would ever be needed. We thus deduced to introduce these methods to promote a nicer API.", "author": "smcvb", "createdAt": "2020-07-27T09:48:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA2MzEzNw=="}], "type": "inlineReview", "revised_code": {"commit": "efd90e201b617230da29855660f9e6e72527963e", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java\nindex b12b0537d..53601b9bc 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/AddedTrackerStatus.java\n\n@@ -34,6 +34,11 @@ public AddedTrackerStatus(EventTrackerStatus addedTrackerStatus) {\n         super(addedTrackerStatus);\n     }\n \n+    @Override\n+    public boolean addedTracker() {\n+        return true;\n+    }\n+\n     @Override\n     public String toString() {\n         return \"AddedTrackerStatus{\" +\n"}}, {"oid": "c1f6992f485af14f260b1137d853af160aa1b93e", "url": "https://github.com/AxonFramework/AxonFramework/commit/c1f6992f485af14f260b1137d853af160aa1b93e", "message": "Merge remote-tracking branch 'origin/master' into feature/1338", "committedDate": "2020-07-21T14:42:56Z", "type": "commit"}, {"oid": "12ac12d8477ffd8e93e83ac084540cb71467f7bb", "url": "https://github.com/AxonFramework/AxonFramework/commit/12ac12d8477ffd8e93e83ac084540cb71467f7bb", "message": "Provide overloaded isDifferent method\n\nProviding an overloaded isDifferent method which defaults to take\npositions into account makes the API somewhat clearer to deal with\n\n#1338", "committedDate": "2020-07-21T15:11:51Z", "type": "commit"}, {"oid": "26357f1b17ed5f69c94a8c0d2f140bd394b86a3d", "url": "https://github.com/AxonFramework/AxonFramework/commit/26357f1b17ed5f69c94a8c0d2f140bd394b86a3d", "message": "Merge remote-tracking branch 'origin/master' into feature/1338", "committedDate": "2020-07-27T09:30:13Z", "type": "commit"}, {"oid": "efd90e201b617230da29855660f9e6e72527963e", "url": "https://github.com/AxonFramework/AxonFramework/commit/efd90e201b617230da29855660f9e6e72527963e", "message": "Introduce methods denominating EventTrackerStatus as added/removed\n\nThe requirement to cast or verify an EventTrackerStatus as being an\nAddedTrackerStatus or RemovedTrackerStatus isn't very user friendly.\nHaving a dedicated method for this, which both default to false on the\nmain interface is a lot easier to use.\n\n#1338", "committedDate": "2020-07-27T10:44:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDIwNQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810205", "bodyText": "hmmm?", "author": "m1l4n54v1c", "createdAt": "2020-07-27T10:58:02Z", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -87,6 +85,9 @@\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n+;", "originalCommit": "efd90e201b617230da29855660f9e6e72527963e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTU4Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835586", "bodyText": "Weird, removed this.", "author": "smcvb", "createdAt": "2020-07-27T11:51:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDIwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "18ab40127b0eb0b8227152e20dbedc215555e95c", "chunk": "diff --git a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\nindex d0b7f9c19..891d9bb70 100644\n--- a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n+++ b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n\n@@ -85,9 +85,6 @@\n import static org.junit.jupiter.api.Assertions.*;\n import static org.mockito.Mockito.*;\n \n-;\n-;\n-\n /**\n  * Test class validating the {@link TrackingEventProcessor}. This test class is part of the {@code integrationtests}\n  * module as it relies on both the {@code messaging} (where the {@code TrackingEventProcessor} resides) and {@code\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDU1Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810553", "bodyText": "Maybe trackerAdded?", "author": "m1l4n54v1c", "createdAt": "2020-07-27T10:58:48Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {", "originalCommit": "efd90e201b617230da29855660f9e6e72527963e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTYzMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835632", "bodyText": "Sure", "author": "smcvb", "createdAt": "2020-07-27T11:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDU1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "18ab40127b0eb0b8227152e20dbedc215555e95c", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex c8eb112bc..90a430866 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -124,7 +124,7 @@\n      *\n      * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n      */\n-    default boolean addedTracker() {\n+    default boolean trackerAdded() {\n         return false;\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDY2NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460810664", "bodyText": "Maybe trackerRemoved?", "author": "m1l4n54v1c", "createdAt": "2020-07-27T10:59:02Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -118,6 +118,26 @@\n      */\n     OptionalLong getResetPosition();\n \n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} is starting it's progress for the\n+     * first time. Particularly useful if the {@link EventTrackerStatusChangeListener} should react to added status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n+     */\n+    default boolean addedTracker() {\n+        return false;\n+    }\n+\n+    /**\n+     * Returns a {@code boolean} describing whether this {@link EventTrackerStatus} has just stopped it's progress.\n+     * Particularly useful if the {@link EventTrackerStatusChangeListener} should react to removed status'.\n+     *\n+     * @return {@code true} if this {@link EventTrackerStatus} was just removed, {@code false} otherwise\n+     */\n+    default boolean removedTracker() {", "originalCommit": "efd90e201b617230da29855660f9e6e72527963e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgzNTY3Nw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1464#discussion_r460835677", "bodyText": "Sure", "author": "smcvb", "createdAt": "2020-07-27T11:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMDY2NA=="}], "type": "inlineReview", "revised_code": {"commit": "18ab40127b0eb0b8227152e20dbedc215555e95c", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex c8eb112bc..90a430866 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -124,7 +124,7 @@\n      *\n      * @return {@code true} if this {@link EventTrackerStatus} just started, {@code false} otherwise\n      */\n-    default boolean addedTracker() {\n+    default boolean trackerAdded() {\n         return false;\n     }\n \n"}}, {"oid": "18ab40127b0eb0b8227152e20dbedc215555e95c", "url": "https://github.com/AxonFramework/AxonFramework/commit/18ab40127b0eb0b8227152e20dbedc215555e95c", "message": "Review comments\n\n-Remove unused semi-colons\n-Switch around method name\n\n#1338", "committedDate": "2020-07-27T11:50:39Z", "type": "commit"}]}