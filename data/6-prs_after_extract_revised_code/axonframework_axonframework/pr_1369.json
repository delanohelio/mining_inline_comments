{"pr_number": 1369, "pr_title": "Invocation of registerHandlerInterceptor() can cause duplicate event processors", "pr_createdAt": "2020-03-10T14:59:53Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1369", "timeline": [{"oid": "8d9eb2a5d3c2dc8f132d995a222aa20258dedafc", "url": "https://github.com/AxonFramework/AxonFramework/commit/8d9eb2a5d3c2dc8f132d995a222aa20258dedafc", "message": "Prevent duplicate creation of tracking event processors on registerHandlerInterceptor.", "committedDate": "2020-03-10T14:48:06Z", "type": "commit"}, {"oid": "e53fac0f14ea63de642af58b50fc7eba4b2bbe80", "url": "https://github.com/AxonFramework/AxonFramework/commit/e53fac0f14ea63de642af58b50fc7eba4b2bbe80", "message": "Added javadoc", "committedDate": "2020-03-10T14:49:48Z", "type": "commit"}, {"oid": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae", "url": "https://github.com/AxonFramework/AxonFramework/commit/9dd77a1bd905ca70ae43cccfdc16664f59ee8dae", "message": "New test to verify that customizing the event processing configuration for sagas does not lead to events being handled twice.", "committedDate": "2020-03-12T09:53:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU5ODc0Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1369#discussion_r391598743", "bodyText": "SagaCustomizationIntegrationTest?\nAlso, it wouldn't hurt to add JavaDoc stating what is actually being tested.", "author": "m1l4n54v1c", "createdAt": "2020-03-12T12:51:28Z", "path": "spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/*\n+ * Copyright (c) 2010-2020. Axon Framework\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.axonframework.springboot;\n+\n+import org.axonframework.common.transaction.Transaction;\n+import org.axonframework.common.transaction.TransactionManager;\n+import org.axonframework.config.EventProcessingModule;\n+import org.axonframework.eventhandling.EventBus;\n+import org.axonframework.eventhandling.TrackedEventMessage;\n+import org.axonframework.eventhandling.TrackingEventProcessor;\n+import org.axonframework.eventhandling.TrackingEventProcessorConfiguration;\n+import org.axonframework.eventhandling.tokenstore.TokenStore;\n+import org.axonframework.eventsourcing.eventstore.EventStore;\n+import org.axonframework.messaging.StreamableMessageSource;\n+import org.axonframework.messaging.interceptors.LoggingInterceptor;\n+import org.axonframework.messaging.unitofwork.CurrentUnitOfWork;\n+import org.axonframework.messaging.unitofwork.DefaultUnitOfWork;\n+import org.axonframework.modelling.saga.SagaEventHandler;\n+import org.axonframework.modelling.saga.StartSaga;\n+import org.axonframework.spring.stereotype.Saga;\n+import org.axonframework.springboot.autoconfig.AxonAutoConfiguration;\n+import org.axonframework.springboot.autoconfig.AxonServerAutoConfiguration;\n+import org.junit.jupiter.api.*;\n+import org.junit.jupiter.api.extension.*;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.boot.SpringBootConfiguration;\n+import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n+import org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration;\n+import org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.EnableMBeanExport;\n+import org.springframework.core.type.filter.AnnotationTypeFilter;\n+import org.springframework.jmx.support.RegistrationPolicy;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import java.time.Duration;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.UUID;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+\n+import static org.axonframework.eventhandling.GenericEventMessage.asEventMessage;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@SpringBootTest\n+@ExtendWith(SpringExtension.class)\n+@SpringBootConfiguration\n+@EnableAutoConfiguration(exclude = {\n+        JmxAutoConfiguration.class,\n+        WebClientAutoConfiguration.class,\n+        AxonServerAutoConfiguration.class})\n+@EnableMBeanExport(registration = RegistrationPolicy.IGNORE_EXISTING)\n+public class SagaCustomizeIntegrationTest {", "originalCommit": "9dd77a1bd905ca70ae43cccfdc16664f59ee8dae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8dc87ebfad8d3efa4ce28d96aebe26a4aeae3af7", "chunk": "diff --git a/spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java b/spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java\nindex 4221aeeea..6de1a8bb3 100644\n--- a/spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java\n+++ b/spring-boot-autoconfigure/src/test/java/org/axonframework/springboot/SagaCustomizeIntegrationTest.java\n\n@@ -63,6 +63,10 @@\n import static org.axonframework.eventhandling.GenericEventMessage.asEventMessage;\n import static org.junit.jupiter.api.Assertions.*;\n \n+/**\n+ * Tests customization of the event handlers on a Saga, updating the configuration through an autowired method.\n+ * Ensures that if there are multiple threads and a logging interceptor events are still received once.\n+ */\n @SpringBootTest\n @ExtendWith(SpringExtension.class)\n @SpringBootConfiguration\n"}}, {"oid": "8dc87ebfad8d3efa4ce28d96aebe26a4aeae3af7", "url": "https://github.com/AxonFramework/AxonFramework/commit/8dc87ebfad8d3efa4ce28d96aebe26a4aeae3af7", "message": "Added description of the purpose of the test", "committedDate": "2020-03-12T13:30:12Z", "type": "commit"}]}