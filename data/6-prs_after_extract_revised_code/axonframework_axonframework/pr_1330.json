{"pr_number": 1330, "pr_title": "[#1252] Expose token replay info in EventTrackerStatus", "pr_createdAt": "2020-01-24T15:04:20Z", "pr_url": "https://github.com/AxonFramework/AxonFramework/pull/1330", "timeline": [{"oid": "723594001daf3b45252a9ed8b1ea45087b3571a7", "url": "https://github.com/AxonFramework/AxonFramework/commit/723594001daf3b45252a9ed8b1ea45087b3571a7", "message": "expose token replay info in EventTrackerStatus", "committedDate": "2020-01-24T14:56:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTAzOQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171039", "bodyText": "Nit: To be more in line with the getReplayPosition method name, I'd call this method the getResetPosition.", "author": "smcvb", "createdAt": "2020-01-27T10:48:21Z", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {\n+        return (replaying) ? trackingToken.position() : OptionalLong.empty();\n+    }\n+\n+    @Override\n+    public OptionalLong getResetTokenPosition() {", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\nindex d274802e8..b3f146574 100644\n--- a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n+++ b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n\n@@ -80,7 +80,7 @@ public OptionalLong getReplayPosition() {\n     }\n \n     @Override\n-    public OptionalLong getResetTokenPosition() {\n+    public OptionalLong getResetPosition() {\n         return ReplayToken.getTokenAtReset(trackingToken);\n     }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTUwMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171501", "bodyText": "Nit: I think using 1 second i.o. 5 for the getResetTokenPosition validation is sufficient.", "author": "smcvb", "createdAt": "2020-01-27T10:49:24Z", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -700,8 +700,12 @@ void testResetCausesEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(0, 4), handled.subList(4, 8));\n         assertEquals(handled.subList(4, 8), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\nindex b137e2c0a..5b19e1feb 100644\n--- a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n+++ b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n\n@@ -701,11 +701,11 @@ void testResetCausesEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(4, 8), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n         assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n-        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n-        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n-        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetPosition().isPresent()));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3MTU3Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371171572", "bodyText": "Nit: I think using 1 second i.o. 5 for the getResetTokenPosition validation is sufficient.", "author": "smcvb", "createdAt": "2020-01-27T10:49:33Z", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -732,8 +736,12 @@ void testResetToPositionCausesCertainEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(2, 4), handled.subList(4, 6));\n         assertEquals(handled.subList(4, 6), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\nindex b137e2c0a..5b19e1feb 100644\n--- a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n+++ b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n\n@@ -737,11 +737,11 @@ void testResetToPositionCausesCertainEventsToBeReplayed() throws Exception {\n         assertEquals(handled.subList(4, 6), handledInRedelivery);\n         assertTrue(testSubject.processingStatus().get(0).isReplaying());\n         assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n-        assertTrue(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n+        assertTrue(testSubject.processingStatus().get(0).getResetPosition().isPresent());\n         eventBus.publish(createEvents(1));\n         assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).isReplaying()));\n-        assertWithin(1, TimeUnit.SECONDS, () -> assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n-        assertWithin(5, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getReplayPosition().isPresent()));\n+        assertWithin(1, TimeUnit.SECONDS, () -> assertFalse(testSubject.processingStatus().get(0).getResetPosition().isPresent()));\n     }\n \n     @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3ODc4Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371178782", "bodyText": "Shouldn't both getReplayPosition and getResetTokenPosition return false it this point, as isReplaying is false too?", "author": "smcvb", "createdAt": "2020-01-27T11:06:33Z", "path": "integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java", "diffHunk": "@@ -806,6 +818,8 @@ void testResetBeforeStartingPerformsANormalRun() throws Exception {\n         assertWithin(1, TimeUnit.SECONDS, () -> assertEquals(4, handled.size()));\n         assertEquals(0, handledInRedelivery.size());\n         assertFalse(testSubject.processingStatus().get(0).isReplaying());\n+        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\nindex b137e2c0a..5b19e1feb 100644\n--- a/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n+++ b/integrationtests/src/test/java/org/axonframework/integrationtests/eventhandling/TrackingEventProcessorTest.java\n\n@@ -818,8 +818,8 @@ void testResetBeforeStartingPerformsANormalRun() throws Exception {\n         assertWithin(1, TimeUnit.SECONDS, () -> assertEquals(4, handled.size()));\n         assertEquals(0, handledInRedelivery.size());\n         assertFalse(testSubject.processingStatus().get(0).isReplaying());\n-        assertTrue(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n-        assertFalse(testSubject.processingStatus().get(0).getResetTokenPosition().isPresent());\n+        assertFalse(testSubject.processingStatus().get(0).getReplayPosition().isPresent());\n+        assertFalse(testSubject.processingStatus().get(0).getResetPosition().isPresent());\n     }\n \n     @SuppressWarnings(\"unchecked\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTE1Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179153", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n          \n          \n            \n                 * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.", "author": "smcvb", "createdAt": "2020-01-27T11:07:26Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTQyMA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179420", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n          \n          \n            \n                 * Return the estimated relative replay position this Segment represents.", "author": "smcvb", "createdAt": "2020-01-27T11:08:07Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTYxOQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179619", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n          \n          \n            \n                 * Return the relative position at which a reset was triggered for this Segment.", "author": "smcvb", "createdAt": "2020-01-27T11:08:32Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTc5Nw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179797", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n          \n          \n            \n                 * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.", "author": "smcvb", "createdAt": "2020-01-27T11:08:54Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE3OTg5OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371179899", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the relative position at which a reset was triggered whether this Segment is still replaying\n          \n          \n            \n                 * @return the relative position at which a reset was triggered for this Segment", "author": "smcvb", "createdAt": "2020-01-27T11:09:11Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MDc5OA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371180798", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n          \n          \n            \n                 * @return return the estimated relative replay position this Segment represents", "author": "smcvb", "createdAt": "2020-01-27T11:11:23Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTA4Mw==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181083", "bodyText": "Nit: To be more in line with the getReplayPosition method name, I'd call this method the getResetPosition.", "author": "smcvb", "createdAt": "2020-01-27T11:12:02Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTQ4NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181485", "bodyText": "I'd adjust this javadoc somewhat similar to the suggested adjustments in the EventTrackerStatus interface.", "author": "smcvb", "createdAt": "2020-01-27T11:12:55Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "diffHunk": "@@ -99,6 +99,18 @@ public static boolean isReplay(TrackingToken trackingToken) {\n \n     }\n \n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java b/messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java\nindex 16a149a58..f2e4068ff 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java\n\n@@ -100,10 +100,10 @@ public static boolean isReplay(TrackingToken trackingToken) {\n     }\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n     public static OptionalLong getTokenAtReset(TrackingToken trackingToken) {\n         return WrappedToken.unwrap(trackingToken, ReplayToken.class)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4MTk0Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371181942", "bodyText": "I think this method should check whether this.trackingToken is an instance of ReplayToken. Otherwise, I wouldn't expect a position.", "author": "smcvb", "createdAt": "2020-01-27T11:13:47Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,16 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        @Override\n+        public OptionalLong getReplayPosition() {\n+            return trackingToken.position();", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\nindex 1c1800131..5b1901229 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n\n@@ -867,11 +867,13 @@ public Throwable getError() {\n \n         @Override\n         public OptionalLong getReplayPosition() {\n-            return trackingToken.position();\n+            return WrappedToken.unwrap(trackingToken, ReplayToken.class)\n+                               .map(ReplayToken::position)\n+                               .orElse(OptionalLong.empty());\n         }\n \n         @Override\n-        public OptionalLong getResetTokenPosition() {\n+        public OptionalLong getResetPosition() {\n             return ReplayToken.getTokenAtReset(trackingToken);\n         }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371185125", "bodyText": "Can be useful to have here a method that returns the estimated number of events remaining to process.", "author": "saratry", "createdAt": "2020-01-27T11:20:52Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();\n+\n+    /**\n+     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n+     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     */\n+    OptionalLong getResetTokenPosition();\n+", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NTgwMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371795802", "bodyText": "Good point.\nThis will be part of a future issue.", "author": "corradom", "createdAt": "2020-01-28T13:18:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5MTY2OQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r372591669", "bodyText": "I would prefer to expose 2 (or ultimately 3) positions:\n\ncurrent position\nreset position (if still replaying)\n(and later) the position of the head of the stream\n\nComponents that then monitor the state of the processor can then calculate the estimated time for catching up with the reset position and/or head. From the framework, I prefer to emit the simple facts, and let observing components do the \"magic\" math ;-)", "author": "abuijze", "createdAt": "2020-01-29T19:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDg0NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374540844", "bodyText": "Sweet plan. That'll leave the getResetPosition as is, but will replace the getReplayPosition() method for a regular getPosition.", "author": "smcvb", "createdAt": "2020-02-04T08:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NTEyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371187730", "bodyText": "is it really useful? getTrackingToken().getPosition() and is Replaying() together can give the same information I think, is it correct?", "author": "saratry", "createdAt": "2020-01-27T11:26:21Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n+     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     */\n+    OptionalLong getReplayPosition();", "originalCommit": "723594001daf3b45252a9ed8b1ea45087b3571a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NTU4NQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r371795585", "bodyText": "The idea behind the ticket is to promote and get a much more clear way to access already existing information.", "author": "corradom", "createdAt": "2020-01-28T13:18:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU5MjIyMQ==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r372592221", "bodyText": "I agree, it seems that currentPosition and reset(Token)Position should be enough", "author": "abuijze", "createdAt": "2020-01-29T19:42:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE4NzczMA=="}], "type": "inlineReview", "revised_code": {"commit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 87f299ff2..245e83806 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,19 +78,19 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying.\n-     * In case no estimation can be given or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the estimated relative position this tracking token represents for the event tracker status whether this Segment is still replaying\n+     * @return return the estimated relative replay position this Segment represents\n      */\n     OptionalLong getReplayPosition();\n \n     /**\n-     * Return the relative position at which a reset was triggered whether this Segment is still replaying.\n-     * In case of a replay ended or no replay an {@code OptionalLong.empty()} will be returned.\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n      *\n-     * @return the relative position at which a reset was triggered whether this Segment is still replaying\n+     * @return the relative position at which a reset was triggered for this Segment\n      */\n-    OptionalLong getResetTokenPosition();\n+    OptionalLong getResetPosition();\n \n }\n"}}, {"oid": "4eb80a066b382123b2fb6fe62a49abded6459d67", "url": "https://github.com/AxonFramework/AxonFramework/commit/4eb80a066b382123b2fb6fe62a49abded6459d67", "message": "address PR comments", "committedDate": "2020-01-28T13:16:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374540296", "bodyText": "Based on the discussions we've had, I think this should be replaced for a getPosition().", "author": "smcvb", "createdAt": "2020-02-04T08:51:20Z", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getReplayPosition() {", "originalCommit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1OTAzMg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374759032", "bodyText": "the exposed method name is getCurrentPosition()", "author": "corradom", "createdAt": "2020-02-04T15:56:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNTAzNA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375125034", "bodyText": "Aah, that makes sense naming wise! :-)", "author": "smcvb", "createdAt": "2020-02-05T08:51:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MDI5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "chunk": "diff --git a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\nindex b3f146574..079381611 100644\n--- a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n+++ b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n\n@@ -75,8 +75,8 @@ public Throwable getError() {\n     }\n \n     @Override\n-    public OptionalLong getReplayPosition() {\n-        return (replaying) ? trackingToken.position() : OptionalLong.empty();\n+    public OptionalLong getCurrentPosition() {\n+        return (trackingToken!=null) ? trackingToken.position() : OptionalLong.empty();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTMxOA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374541318", "bodyText": "I think this new method justifies a test in the ReplayTokenTest class.", "author": "smcvb", "createdAt": "2020-02-04T08:53:37Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/ReplayToken.java", "diffHunk": "@@ -99,6 +99,18 @@ public static boolean isReplay(TrackingToken trackingToken) {\n \n     }\n \n+    /**\n+     * Return the relative position at which a reset was triggered for this Segment.\n+     * In case a replay finished or no replay is active, an {@code OptionalLong.empty()} will be returned.\n+     *\n+     * @return the relative position at which a reset was triggered for this Segment\n+     */\n+    public static OptionalLong getTokenAtReset(TrackingToken trackingToken) {", "originalCommit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTQzMA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374541430", "bodyText": "Based on the discussions we've had, I think this should be replaced for a getPosition().", "author": "smcvb", "createdAt": "2020-02-04T08:53:53Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,18 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        @Override\n+        public OptionalLong getReplayPosition() {", "originalCommit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1OTU5NA==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374759594", "bodyText": "As said up, the exposed method name is getCurrentPosition()", "author": "corradom", "createdAt": "2020-02-04T15:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MTQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\nindex 5b1901229..186bbab65 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n\n@@ -865,11 +865,21 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        /**\n+         * Return the estimated relative replay position this Segment represents.\n+         * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n+         *\n+         * @return return the estimated relative replay position this Segment represents\n+         */\n         @Override\n-        public OptionalLong getReplayPosition() {\n-            return WrappedToken.unwrap(trackingToken, ReplayToken.class)\n-                               .map(ReplayToken::position)\n-                               .orElse(OptionalLong.empty());\n+        public OptionalLong getCurrentPosition() {\n+            if (isReplaying()) {\n+                return  WrappedToken.unwrap(trackingToken, ReplayToken.class)\n+                                   .map(ReplayToken::position)\n+                                   .orElse(OptionalLong.empty());\n+            }\n+\n+            return (trackingToken == null) ? OptionalLong.empty() : trackingToken.position();\n         }\n \n         @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2NTQ2Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r374565466", "bodyText": "Suggestion: might be nice to mention on this piece of javadoc that this method will return a non-empty result as long as isReplaying returns true.", "author": "smcvb", "createdAt": "2020-02-04T09:43:07Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java", "diffHunk": "@@ -74,4 +76,21 @@\n      * @return the exception that caused processing to fail, or {@code null} when processing normally\n      */\n     Throwable getError();\n+\n+    /**\n+     * Return the estimated relative replay position this Segment represents.\n+     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.", "originalCommit": "4eb80a066b382123b2fb6fe62a49abded6459d67", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\nindex 245e83806..e4ab2aee6 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/EventTrackerStatus.java\n\n@@ -78,12 +78,13 @@\n     Throwable getError();\n \n     /**\n-     * Return the estimated relative replay position this Segment represents.\n-     * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n+     * Return the estimated relative current token position this Segment represents.\n+     * In case no estimation can be given an {@code OptionalLong.empty()} will be returned.\n+     * In case of replay is active, return the estimated relative replay position.\n      *\n-     * @return return the estimated relative replay position this Segment represents\n+     * @return return the estimated relative current token position this Segment represents\n      */\n-    OptionalLong getReplayPosition();\n+    OptionalLong getCurrentPosition();\n \n     /**\n      * Return the relative position at which a reset was triggered for this Segment.\n"}}, {"oid": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "url": "https://github.com/AxonFramework/AxonFramework/commit/41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "message": "Apply suggestions from code review", "committedDate": "2020-02-04T15:24:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyMzk4Ng==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375123986", "bodyText": "Nit: indentation is slight off, as I'd expect spaces around !=", "author": "smcvb", "createdAt": "2020-02-05T08:49:03Z", "path": "axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java", "diffHunk": "@@ -70,4 +73,15 @@ public boolean isErrorState() {\n     public Throwable getError() {\n         return exception;\n     }\n+\n+    @Override\n+    public OptionalLong getCurrentPosition() {\n+        return (trackingToken!=null) ? trackingToken.position() : OptionalLong.empty();", "originalCommit": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d8d9b17bcfd348c7505d6297240090d88f743d", "chunk": "diff --git a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\nindex 079381611..8265b0399 100644\n--- a/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n+++ b/axon-server-connector/src/test/java/org/axonframework/axonserver/connector/processor/grpc/FakeEventTrackerStatus.java\n\n@@ -76,12 +76,11 @@ public Throwable getError() {\n \n     @Override\n     public OptionalLong getCurrentPosition() {\n-        return (trackingToken!=null) ? trackingToken.position() : OptionalLong.empty();\n+        return (trackingToken != null) ? trackingToken.position() : OptionalLong.empty();\n     }\n \n     @Override\n     public OptionalLong getResetPosition() {\n         return ReplayToken.getTokenAtReset(trackingToken);\n     }\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNDU3Mg==", "url": "https://github.com/AxonFramework/AxonFramework/pull/1330#discussion_r375124572", "bodyText": "Nit: You could use {@inheritDoc} to copy over the documentation from the interface so that you do not have to duplicate it.", "author": "smcvb", "createdAt": "2020-02-05T08:50:32Z", "path": "messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java", "diffHunk": "@@ -864,6 +865,28 @@ public Throwable getError() {\n             return errorState;\n         }\n \n+        /**\n+         * Return the estimated relative replay position this Segment represents.", "originalCommit": "41e50d8140ec5e0111575a758e31cc8ba9fe2b5d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a0d8d9b17bcfd348c7505d6297240090d88f743d", "chunk": "diff --git a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\nindex 186bbab65..6c63568b9 100644\n--- a/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n+++ b/messaging/src/main/java/org/axonframework/eventhandling/TrackingEventProcessor.java\n\n@@ -866,10 +866,7 @@ public Throwable getError() {\n         }\n \n         /**\n-         * Return the estimated relative replay position this Segment represents.\n-         * In case no estimation can be given or no replay is active, an {@code OptionalLong.empty()} will be returned.\n-         *\n-         * @return return the estimated relative replay position this Segment represents\n+         * {@inheritDoc}\n          */\n         @Override\n         public OptionalLong getCurrentPosition() {\n"}}, {"oid": "a0d8d9b17bcfd348c7505d6297240090d88f743d", "url": "https://github.com/AxonFramework/AxonFramework/commit/a0d8d9b17bcfd348c7505d6297240090d88f743d", "message": "minor suggestions from code review", "committedDate": "2020-02-05T10:01:40Z", "type": "commit"}]}