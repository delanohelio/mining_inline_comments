{"pr_number": 5780, "pr_title": "RM30666 MRP : link between SaleOrder and PurchaseOrder", "pr_createdAt": "2020-08-25T16:23:31Z", "pr_url": "https://github.com/axelor/axelor-open-suite/pull/5780", "timeline": [{"oid": "a4adca1b094920baee669903b3b7a62a1f0bfd0a", "url": "https://github.com/axelor/axelor-open-suite/commit/a4adca1b094920baee669903b3b7a62a1f0bfd0a", "message": "RM30666 MRP : link between SaleOrder and PurchaseOrder", "committedDate": "2020-08-25T16:22:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ5Njg4MQ==", "url": "https://github.com/axelor/axelor-open-suite/pull/5780#discussion_r478496881", "bodyText": "It's better to refactor this method so we can call super() instead of duplicating code.\nWe can create a second method used only for a singe mrpLineOrigin and call it from the main method.\nThis would allow to override only the second method in production module and call super().", "author": "ale-axelor", "createdAt": "2020-08-27T15:15:23Z", "path": "axelor-production/src/main/java/com/axelor/apps/production/service/MrpLineServiceProductionImpl.java", "diffHunk": "@@ -105,6 +126,47 @@ protected void generateManufacturingProposal(MrpLine mrpLine) throws AxelorExcep\n     linkToOrder(mrpLine, manufOrder);\n   }\n \n+  @Override\n+  protected String getPurchaseOrderOrigin(MrpLine mrpLine) {\n+    String origin = \"\";\n+    int count = 0;\n+    for (MrpLineOrigin mrpLineOrigin : mrpLine.getMrpLineOriginList()) {\n+      if (mrpLineOrigin", "originalCommit": "a4adca1b094920baee669903b3b7a62a1f0bfd0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97889b52e6269a5cc62d5a425a83713de4fd044d", "chunk": "diff --git a/axelor-production/src/main/java/com/axelor/apps/production/service/MrpLineServiceProductionImpl.java b/axelor-production/src/main/java/com/axelor/apps/production/service/MrpLineServiceProductionImpl.java\nindex 0979d68a4d..d93216befb 100644\n--- a/axelor-production/src/main/java/com/axelor/apps/production/service/MrpLineServiceProductionImpl.java\n+++ b/axelor-production/src/main/java/com/axelor/apps/production/service/MrpLineServiceProductionImpl.java\n\n@@ -127,44 +125,21 @@ public class MrpLineServiceProductionImpl extends MrpLineServiceImpl {\n   }\n \n   @Override\n-  protected String getPurchaseOrderOrigin(MrpLine mrpLine) {\n-    String origin = \"\";\n-    int count = 0;\n-    for (MrpLineOrigin mrpLineOrigin : mrpLine.getMrpLineOriginList()) {\n-      if (mrpLineOrigin\n-          .getRelatedToSelect()\n-          .equals(MrpLineOriginRepository.RELATED_TO_SALE_ORDER_LINE)) {\n-        SaleOrder saleOrder =\n-            saleOrderLineRepo.find(mrpLineOrigin.getRelatedToSelectId()).getSaleOrder();\n-        origin += saleOrder.getSaleOrderSeq();\n-      } else if (mrpLineOrigin\n-          .getRelatedToSelect()\n-          .equals(MrpLineOriginRepository.RELATED_TO_PURCHASE_ORDER_LINE)) {\n-        PurchaseOrder purchaseOrder =\n-            purchaseOrderLineRepo.find(mrpLineOrigin.getRelatedToSelectId()).getPurchaseOrder();\n-        origin += purchaseOrder.getPurchaseOrderSeq();\n-      } else if (mrpLineOrigin\n-          .getRelatedToSelect()\n-          .equals(MrpLineOriginRepository.RELATED_TO_MRP_FORECAST)) {\n-        origin += mrpLineOrigin.getMrpLine().getMrp().getMrpSeq() + \"-\" + I18n.get(\"MRP forecast\");\n-      } else if (mrpLineOrigin\n-          .getRelatedToSelect()\n-          .equals(MrpLineOriginRepository.RELATED_TO_MANUFACTURING_ORDER)) {\n-        ManufOrder manufOrder = manufOrderRepository.find(mrpLineOrigin.getRelatedToSelectId());\n-        origin += manufOrder.getManufOrderSeq();\n-      } else if (mrpLineOrigin\n-          .getRelatedToSelect()\n-          .equals(MrpLineOriginRepository.RELATED_TO_OPERATION_ORDER)) {\n-        OperationOrder operationOrder =\n-            operationOrderRepository.find(mrpLineOrigin.getRelatedToSelectId());\n-        origin += operationOrder.getName();\n-      }\n-      count++;\n-      if (count < mrpLine.getMrpLineOriginList().size()) {\n-        origin += \" & \";\n-      }\n+  protected String getMrpLineOriginStr(MrpLineOrigin mrpLineOrigin) {\n+    if (mrpLineOrigin\n+        .getRelatedToSelect()\n+        .equals(MrpLineOriginRepository.RELATED_TO_MANUFACTURING_ORDER)) {\n+      ManufOrder manufOrder = manufOrderRepository.find(mrpLineOrigin.getRelatedToSelectId());\n+      return manufOrder.getManufOrderSeq();\n     }\n-    return origin;\n+    if (mrpLineOrigin\n+        .getRelatedToSelect()\n+        .equals(MrpLineOriginRepository.RELATED_TO_OPERATION_ORDER)) {\n+      OperationOrder operationOrder =\n+          operationOrderRepository.find(mrpLineOrigin.getRelatedToSelectId());\n+      return operationOrder.getName();\n+    }\n+    return super.getMrpLineOriginStr(mrpLineOrigin);\n   }\n \n   @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE4ODcwNw==", "url": "https://github.com/axelor/axelor-open-suite/pull/5780#discussion_r482188707", "bodyText": ":)", "author": "ale-axelor", "createdAt": "2020-09-02T16:05:26Z", "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java", "diffHunk": "@@ -670,7 +669,7 @@ protected void createSaleOrderMrpLines() throws AxelorException {\n \n     MrpLineType saleOrderMrpLineType =\n         this.getMrpLineType(MrpLineTypeRepository.ELEMENT_SALE_ORDER);\n-\n+    System.out.println(\"COUCOUUUU \" + saleOrderMrpLineType);", "originalCommit": "a4adca1b094920baee669903b3b7a62a1f0bfd0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97889b52e6269a5cc62d5a425a83713de4fd044d", "chunk": "diff --git a/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java b/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\nindex 4c1dcc091e..e7540fa0d8 100644\n--- a/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\n+++ b/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\n\n@@ -669,7 +669,6 @@ public class MrpServiceImpl implements MrpService {\n \n     MrpLineType saleOrderMrpLineType =\n         this.getMrpLineType(MrpLineTypeRepository.ELEMENT_SALE_ORDER);\n-    System.out.println(\"COUCOUUUU \" + saleOrderMrpLineType);\n     if (saleOrderMrpLineType == null) {\n       return;\n     }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5NDAyNg==", "url": "https://github.com/axelor/axelor-open-suite/pull/5780#discussion_r482194026", "bodyText": "Do not use system.out.println (if needed, a logger can be used instead)", "author": "ale-axelor", "createdAt": "2020-09-02T16:13:32Z", "path": "axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java", "diffHunk": "@@ -909,7 +908,7 @@ protected MrpLine createAvailableStockMrpLine(\n   protected MrpLineType getMrpLineType(int elementSelect) {\n \n     int applicationFieldSelect = getApplicationField(mrp.getMrpTypeSelect());\n-\n+    System.out.println(applicationFieldSelect);", "originalCommit": "a4adca1b094920baee669903b3b7a62a1f0bfd0a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "97889b52e6269a5cc62d5a425a83713de4fd044d", "chunk": "diff --git a/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java b/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\nindex 4c1dcc091e..e7540fa0d8 100644\n--- a/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\n+++ b/axelor-supplychain/src/main/java/com/axelor/apps/supplychain/service/MrpServiceImpl.java\n\n@@ -908,7 +907,6 @@ public class MrpServiceImpl implements MrpService {\n   protected MrpLineType getMrpLineType(int elementSelect) {\n \n     int applicationFieldSelect = getApplicationField(mrp.getMrpTypeSelect());\n-    System.out.println(applicationFieldSelect);\n     return mrpLineTypeRepository\n         .all()\n         .filter(\n"}}, {"oid": "97889b52e6269a5cc62d5a425a83713de4fd044d", "url": "https://github.com/axelor/axelor-open-suite/commit/97889b52e6269a5cc62d5a425a83713de4fd044d", "message": "Changes", "committedDate": "2020-09-02T16:51:42Z", "type": "commit"}]}