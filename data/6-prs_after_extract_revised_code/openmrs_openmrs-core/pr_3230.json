{"pr_number": 3230, "pr_title": "FM2-184: Set context classloader to be module's classloader.", "pr_createdAt": "2020-06-08T05:50:30Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3230", "timeline": [{"oid": "b8823bcdc65e345826c9fb43d5a129683c8695ba", "url": "https://github.com/openmrs/openmrs-core/commit/b8823bcdc65e345826c9fb43d5a129683c8695ba", "message": "FM2-184 FHIR2 module breaks OpenMRS when datafilter module is loaded\n\nExplicitly set the context classloader to be the module's classloader\nbefore calling willRefreshContext.", "committedDate": "2020-06-08T05:32:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r436741969", "bodyText": "How about doing it also for the rest of the call backs for the module activator?", "author": "dkayiwa", "createdAt": "2020-06-08T14:13:50Z", "path": "api/src/main/java/org/openmrs/module/ModuleUtil.java", "diffHunk": "@@ -858,6 +858,7 @@ public static AbstractRefreshableApplicationContext refreshApplicationContext(Ab\n \t\tfor (Module module : startedModules) {\n \t\t\ttry {\n \t\t\t\tif (module.getModuleActivator() != null) {\n+\t\t\t\t\tThread.currentThread().setContextClassLoader(ModuleFactory.getModuleClassLoader(module));", "originalCommit": "b8823bcdc65e345826c9fb43d5a129683c8695ba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4NTA0NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r436785044", "bodyText": "hm, good question. There's 3 more calls in the loop at the end of that method. otoh, if it isn't broken...  Note that the OpenmrsClassloader is carefully installed as the context classloader just before that last section. Someone that knows much more about modules and classloaders than I should weigh in.", "author": "LeeBreisacher", "createdAt": "2020-06-08T15:13:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1OTU4MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r437859581", "bodyText": "I'm still not sure how this is the solution, I don't think a module classloader should ever be set as the context classloader because that's the role of the OpenmrsClassloader, the issue I believe has to do with the module's setup or a module it depends on or the OpenmrsClassloader itself otherwise I smell bad things happening because of this change.", "author": "wluyima", "createdAt": "2020-06-10T04:55:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg5MTcyOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r437891728", "bodyText": "I'm certainly new to this part of OpenMRS, but my reading of the OpenmrsClassLoader code is that it simply holds on to all the \"real\" classloaders -- the ModuleClassLoaders, and it chooses the right one to do the real work of loading things. The OpenmrsClassLoader doesn't do any actual loading of its own. Except, in some cases (like the one here), the OpenmrsClassloader does not have enough information in hand to be able to choose the right ModuleClassLoader, and it ends up just choosing an arbitrary one (which of course can be the wrong one). So, in this case, we bypass OpenmrsClassLoader and insert the one ModuleClassLoader that we (as the caller) know to be the right one.", "author": "LeeBreisacher", "createdAt": "2020-06-10T06:39:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA4ODg0NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r438088845", "bodyText": "@LeeBreisacher's argument makes sense to me. The OpenmrsClassLoader is not smart enough to chose the appropriate class loader for this particular scenario. And since the calling code already has this context information, which the OpenmrsClassLoader does not have, it looks right for it to set the context class loader. I do not foresee a problem with this, because, after the willRefreshContext callback, before the spring application context is refreshed, the context class loader is set back to the OpenmrsClassLoader. And FWIW, i have run this change for a couple of days with the entire reference application modules and a few extra modules. All seems to be well.", "author": "dkayiwa", "createdAt": "2020-06-10T12:39:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1NzkwMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r438857903", "bodyText": "@wluyima based on the above, do you still have objections to merging this? \ud83d\ude0a", "author": "dkayiwa", "createdAt": "2020-06-11T15:10:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3NzkzNA==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r439277934", "bodyText": "@wluyima @dkayiwa @mks-d\nIf there are no more concerns on this PR, can we please merge this PR, As it is blocking our deployments. For development we are able to get our way by removing data-filter for now but we would need it for integration testings.\nThanks", "author": "mddubey", "createdAt": "2020-06-12T08:21:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI5NDIxNg==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r439294216", "bodyText": "@dkayiwa can you validate this PR on the RHS reviewers menu? That'll be one in the box already :-)\n@wluyima, any objections on your end?", "author": "mks-d", "createdAt": "2020-06-12T08:53:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5OTI0MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3230#discussion_r439499241", "bodyText": "I still strongly believe the problem is with the module setup or the OpenMRS classloader itself, but am fine with this if it sort of works for now", "author": "wluyima", "createdAt": "2020-06-12T15:48:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0MTk2OQ=="}], "type": "inlineReview", "revised_code": null}]}