{"pr_number": 3132, "pr_title": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "pr_createdAt": "2020-02-25T12:46:55Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3132", "timeline": [{"oid": "290c3cdac03738f47b4eeae20486caed4193b3a8", "url": "https://github.com/openmrs/openmrs-core/commit/290c3cdac03738f47b4eeae20486caed4193b3a8", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-02-28T08:45:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzNzgyMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386037823", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Get the task with the given UUID.\n          \n          \n            \n            \t * Get task by given UUID.", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:10:54Z", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,14 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * Get the task with the given UUID.", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\nindex 4fe86e00a..00bbc7af4 100644\n--- a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n+++ b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n\n@@ -104,9 +104,9 @@ public interface SchedulerService extends OpenmrsService {\n \tpublic TaskDefinition getTask(Integer id);\n \t\n \t/**\n-\t * Get the task with the given UUID.\n+\t * Get task by given UUID.\n \t * \n-\t * @param uuid the identifier of the task\n+\t * @param uuid the unique identifier of the task\n \t */\n \t@Authorized({ \"Manage Scheduler\" })\n \tpublic TaskDefinition getTaskByUuid(String uuid);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzNzk1Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386037956", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tlog.debug(\"get task \" + uuid);\n          \n          \n            \n            \t\t\tlog.debug(\"get-task uuid:\" + uuid);", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:12:50Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {\n+\t\t\tlog.debug(\"get task \" + uuid);", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 6ac2c4abb..37dae45d0 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -546,7 +546,7 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t@Override\n \tpublic TaskDefinition getTaskByUuid(String uuid) {\n \t\tif (log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"get task \" + uuid);\n+\t\t\tlog.debug(\"get task uuid \" + uuid);\n \t\t}\n \t\treturn getSchedulerDAO().getTaskByUuid(uuid);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038481", "bodyText": "why this check is needed? log.debug(...) will only log if debug is enabled anyway. I'm just curious.", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:21:06Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,13 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic TaskDefinition getTaskByUuid(String uuid) {\n+\t\tif (log.isDebugEnabled()) {", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTM2OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079369", "bodyText": "logging directly brings about string concatenation which is abit expensive for the application in terms of its performance thats why under this code snippet we only log a message when the logger's debug mode is enabled", "author": "gitcliff", "createdAt": "2020-03-01T05:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIzODU0NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386238544", "bodyText": "Do we even need to log accessing a task by uuid?", "author": "dkayiwa", "createdAt": "2020-03-02T07:53:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzMzg4Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386333882", "bodyText": "@dkayiwa i used logging a task by uuid because of the unique identification the uuid  brings for the task defined in the task definition but i will go ahead and remove the logging if its not appropriate here", "author": "gitcliff", "createdAt": "2020-03-02T11:16:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMzUyOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386403528", "bodyText": "@dkayiwa i have removed the logger,,kindly requesting for your review\nThanks", "author": "gitcliff", "createdAt": "2020-03-02T13:52:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODQ4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 6ac2c4abb..37dae45d0 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -546,7 +546,7 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t@Override\n \tpublic TaskDefinition getTaskByUuid(String uuid) {\n \t\tif (log.isDebugEnabled()) {\n-\t\t\tlog.debug(\"get task \" + uuid);\n+\t\t\tlog.debug(\"get task uuid \" + uuid);\n \t\t}\n \t\treturn getSchedulerDAO().getTaskByUuid(uuid);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU2Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038562", "bodyText": "I would also write some unhappy paths like, uuid is null and uuid is sql statement like abc' or '1' = '1", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:22:53Z", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTkzMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079931", "bodyText": "i think if there is a brief code snippet which can strike the appoint,then its worth going for and avoid unnecessary code repetition", "author": "gitcliff", "createdAt": "2020-03-01T06:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\nindex a341d997d..423d31642 100644\n--- a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n+++ b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n\n@@ -428,7 +428,7 @@ public class SchedulerServiceTest extends BaseContextSensitiveTest {\n \t * @see SchedulerService#getTaskByUuid(String)\n \t */\n \t@Test\n-\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {\n+\tpublic void getTaskByUuid_shouldReturnNullWhenGetTaskByUuidDoesNotExist() throws Exception {\n \t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"kncsjvcjvbevismcvbsnksndcsjbvjhvbn\");\n \t\tassertNull(td);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038596", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {\n          \n          \n            \n            \tpublic void getTaskByUuid_shouldReturnNullWhenGetTaskByUuidDoesNotExist() throws Exception {", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:23:30Z", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5ODE2MA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386098160", "bodyText": "I guess you missed this", "author": "JudeNiroshan", "createdAt": "2020-03-01T11:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE5MDUyOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386190529", "bodyText": "guess it was fixed", "author": "gitcliff", "createdAt": "2020-03-02T04:13:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODU5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\nindex a341d997d..423d31642 100644\n--- a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n+++ b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n\n@@ -428,7 +428,7 @@ public class SchedulerServiceTest extends BaseContextSensitiveTest {\n \t * @see SchedulerService#getTaskByUuid(String)\n \t */\n \t@Test\n-\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {\n+\tpublic void getTaskByUuid_shouldReturnNullWhenGetTaskByUuidDoesNotExist() throws Exception {\n \t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"kncsjvcjvbevismcvbsnksndcsjbvjhvbn\");\n \t\tassertNull(td);\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODY2Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386038666", "bodyText": "Do you think these are useful to the developer? testcase name itself has which method is under testing and class name AKA test suite has which class is under test. What do you think?", "author": "JudeNiroshan", "createdAt": "2020-02-29T16:24:45Z", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n+\t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"1365a6da-6493-4e9b-b950-5af1b392aaa3\");\n+\t\tassertNotNull(td);\n+\t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t */", "originalCommit": "290c3cdac03738f47b4eeae20486caed4193b3a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA3OTYzOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r386079639", "bodyText": "yes its helpful to refer to the developer to the actual service method being tested", "author": "gitcliff", "createdAt": "2020-03-01T05:53:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAzODY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "chunk": "diff --git a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\nindex a341d997d..423d31642 100644\n--- a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n+++ b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n\n@@ -428,7 +428,7 @@ public class SchedulerServiceTest extends BaseContextSensitiveTest {\n \t * @see SchedulerService#getTaskByUuid(String)\n \t */\n \t@Test\n-\tpublic void getTaskByUuid_shouldReturnWhenGetTaskByUuidDoesNotExist() throws Exception {\n+\tpublic void getTaskByUuid_shouldReturnNullWhenGetTaskByUuidDoesNotExist() throws Exception {\n \t\tTaskDefinition td = Context.getSchedulerService().getTaskByUuid(\"kncsjvcjvbevismcvbsnksndcsjbvjhvbn\");\n \t\tassertNull(td);\n \t}\n"}}, {"oid": "ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "url": "https://github.com/openmrs/openmrs-core/commit/ae5d046e2c5fde2e7dd715b5432cbdfd14721221", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-01T06:14:36Z", "type": "forcePushed"}, {"oid": "0d6106f6eb41af8daafd81419d6037dd1e6fe473", "url": "https://github.com/openmrs/openmrs-core/commit/0d6106f6eb41af8daafd81419d6037dd1e6fe473", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-02T13:49:35Z", "type": "forcePushed"}, {"oid": "0963ecde1be50740f0b304db4285a660b84eb0d9", "url": "https://github.com/openmrs/openmrs-core/commit/0963ecde1be50740f0b304db4285a660b84eb0d9", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-03T08:27:41Z", "type": "forcePushed"}, {"oid": "0ca9ddc0258e99fde43fa6798beb0dc56cdc6162", "url": "https://github.com/openmrs/openmrs-core/commit/0ca9ddc0258e99fde43fa6798beb0dc56cdc6162", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-03T18:04:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzMTkzMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387331932", "bodyText": "This is not a service layer interface. It is a data access layer interface, which is not directly accessed by clients.", "author": "dkayiwa", "createdAt": "2020-03-03T22:25:19Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,17 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @since 2.3.0", "originalCommit": "0ca9ddc0258e99fde43fa6798beb0dc56cdc6162", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2NTQ3Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387465477", "bodyText": "@dkayiwa  i have resolved the issue", "author": "gitcliff", "createdAt": "2020-03-04T06:10:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMzMTkzMg=="}], "type": "inlineReview", "revised_code": {"commit": "758351b96bf7a96abde1e0d65184cb8906f1c5c6", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex 713c15365..a3701f5d5 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -40,8 +40,6 @@ public interface SchedulerDAO {\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n \t/**\n-\t * @since 2.3.0\n-\t * \n \t * Get task by UUID\n \t * \n \t * @param uuid unique task identifier\n"}}, {"oid": "758351b96bf7a96abde1e0d65184cb8906f1c5c6", "url": "https://github.com/openmrs/openmrs-core/commit/758351b96bf7a96abde1e0d65184cb8906f1c5c6", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-04T06:08:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NDk5OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387544999", "bodyText": "Isn't 2.3.0 already released?", "author": "dkayiwa", "createdAt": "2020-03-04T09:33:08Z", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.3.0", "originalCommit": "758351b96bf7a96abde1e0d65184cb8906f1c5c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1Mjc4Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387552782", "bodyText": "ya sure it was released,flipped to 2.4.0", "author": "gitcliff", "createdAt": "2020-03-04T09:46:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0NDk5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "dd3e03319b7170a1c01dc98780531d2d3a52e79e", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\nindex b8313aebe..25ed5c12b 100644\n--- a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n+++ b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n\n@@ -104,9 +104,9 @@ public interface SchedulerService extends OpenmrsService {\n \tpublic TaskDefinition getTask(Integer id);\n \t\n \t/**\n-\t * @since 2.3.0\n+\t * @since 2.4.0\n \t * \n-\t * Get task by given UUID.\n+\t *        Get task by given UUID.\n \t * \n \t * @param uuid the unique identifier of the task\n \t */\n"}}, {"oid": "dd3e03319b7170a1c01dc98780531d2d3a52e79e", "url": "https://github.com/openmrs/openmrs-core/commit/dd3e03319b7170a1c01dc98780531d2d3a52e79e", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-04T09:45:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NDUzMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387554533", "bodyText": "Can you look at the formatting. Also, take another look at the grammar used by the existing openmrs api javadocs.", "author": "dkayiwa", "createdAt": "2020-03-04T09:49:49Z", "path": "api/src/main/java/org/openmrs/scheduler/SchedulerService.java", "diffHunk": "@@ -103,6 +103,16 @@\n \t@Authorized( { \"Manage Scheduler\" })\n \tpublic TaskDefinition getTask(Integer id);\n \t\n+\t/**\n+\t * @since 2.4.0\n+\t * \n+\t *        Get task by given UUID.", "originalCommit": "dd3e03319b7170a1c01dc98780531d2d3a52e79e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MTczNw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387581737", "bodyText": "fixed it,hope its clean now", "author": "gitcliff", "createdAt": "2020-03-04T10:38:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1NDUzMw=="}], "type": "inlineReview", "revised_code": {"commit": "fef6b4ff07601603cf7e2017245ef0c57e893f5b", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\nindex 25ed5c12b..6948ee3db 100644\n--- a/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n+++ b/api/src/main/java/org/openmrs/scheduler/SchedulerService.java\n\n@@ -106,7 +106,7 @@ public interface SchedulerService extends OpenmrsService {\n \t/**\n \t * @since 2.4.0\n \t * \n-\t *        Get task by given UUID.\n+\t * Get the task with the given uuid\n \t * \n \t * @param uuid the unique identifier of the task\n \t */\n"}}, {"oid": "fef6b4ff07601603cf7e2017245ef0c57e893f5b", "url": "https://github.com/openmrs/openmrs-core/commit/fef6b4ff07601603cf7e2017245ef0c57e893f5b", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-04T10:36:01Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387584620", "bodyText": "Instead of duplicating the same javadoc, we use see also", "author": "dkayiwa", "createdAt": "2020-03-04T10:43:12Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,15 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * Get task by UUID\n+\t * \n+\t * @param uuid unique task identifier\n+\t * @return task with given universal unique identifier", "originalCommit": "fef6b4ff07601603cf7e2017245ef0c57e893f5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYwNDM2Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r387604366", "bodyText": "i have fixed it", "author": "gitcliff", "createdAt": "2020-03-04T11:22:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0MDU0MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388140541", "bodyText": "hello @dkayiwa if all is well on this issue then we can merge, so that i can start working on the dependent issue to\nThanks", "author": "gitcliff", "createdAt": "2020-03-05T08:29:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NDYyMA=="}], "type": "inlineReview", "revised_code": {"commit": "82ec602020eb120c3712791c01bcf8d676bba527", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex a3701f5d5..31fade52b 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -40,10 +41,8 @@ public interface SchedulerDAO {\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n \t/**\n-\t * Get task by UUID\n+\t * @see SchedulerService#getTaskByUuid(String)\n \t * \n-\t * @param uuid unique task identifier\n-\t * @return task with given universal unique identifier\n \t * @throws DAOException\n \t */\n \tpublic TaskDefinition getTaskByUuid(String uuid) throws DAOException;\n"}}, {"oid": "82ec602020eb120c3712791c01bcf8d676bba527", "url": "https://github.com/openmrs/openmrs-core/commit/82ec602020eb120c3712791c01bcf8d676bba527", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-04T11:20:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388176656", "bodyText": "Can you include the full package name for SchedulerService?", "author": "dkayiwa", "createdAt": "2020-03-05T09:38:52Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "originalCommit": "82ec602020eb120c3712791c01bcf8d676bba527", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzIxNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388177215", "bodyText": "Same for String", "author": "dkayiwa", "createdAt": "2020-03-05T09:39:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1NjU4Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388256582", "bodyText": "i have fixed it", "author": "gitcliff", "createdAt": "2020-03-05T12:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NjY1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ca658e83c3f80227d5b1422b95f69688d18e282a", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex 31fade52b..81e1a2edb 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -41,7 +40,7 @@ public interface SchedulerDAO {\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n \t/**\n-\t * @see SchedulerService#getTaskByUuid(String)\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n \t * \n \t * @throws DAOException\n \t */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3Njk5Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388176993", "bodyText": "Do you really throw any DAOException?", "author": "dkayiwa", "createdAt": "2020-03-05T09:39:23Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +40,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)\n+\t * \n+\t * @throws DAOException\n+\t */\n+\tpublic TaskDefinition getTaskByUuid(String uuid) throws DAOException;", "originalCommit": "82ec602020eb120c3712791c01bcf8d676bba527", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI0OTgyMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388249821", "bodyText": "yes,also in the existing code thats how its thrown at the DAO layer", "author": "gitcliff", "createdAt": "2020-03-05T12:00:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3Njk5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ca658e83c3f80227d5b1422b95f69688d18e282a", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex 31fade52b..81e1a2edb 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -41,7 +40,7 @@ public interface SchedulerDAO {\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n \t/**\n-\t * @see SchedulerService#getTaskByUuid(String)\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n \t * \n \t * @throws DAOException\n \t */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzU1NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388177555", "bodyText": "What is this?", "author": "dkayiwa", "createdAt": "2020-03-05T09:40:24Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the uuid of the task.", "originalCommit": "82ec602020eb120c3712791c01bcf8d676bba527", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI1NjcyOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388256729", "bodyText": "i have fixed it", "author": "gitcliff", "createdAt": "2020-03-05T12:15:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE3NzU1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "ca658e83c3f80227d5b1422b95f69688d18e282a", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 85f3321c7..7d0fa898b 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -544,7 +544,7 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t}\n \n \t/**\n-\t * Get the uuid of the task.\n+\t * Get the task with the given uuid.\n \t *\n \t * @param uuid the unique id of the task\n \t */\n"}}, {"oid": "ca658e83c3f80227d5b1422b95f69688d18e282a", "url": "https://github.com/openmrs/openmrs-core/commit/ca658e83c3f80227d5b1422b95f69688d18e282a", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-05T12:09:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTIxMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388281213", "bodyText": "Do you need the above throws clause after having the see annotation.", "author": "dkayiwa", "createdAt": "2020-03-05T13:08:04Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,13 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n+\t * \n+\t * @throws DAOException", "originalCommit": "ca658e83c3f80227d5b1422b95f69688d18e282a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMxODU4OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388318588", "bodyText": "ooh not really,let me remove it", "author": "gitcliff", "createdAt": "2020-03-05T14:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTIxMw=="}], "type": "inlineReview", "revised_code": {"commit": "5f7969a0e096659e2e7e1b7775c710fe9753189f", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex 81e1a2edb..7fe8fe0fd 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -50,7 +50,7 @@ public interface SchedulerDAO {\n \t * Update task\n \t * \n \t * @param task to be updated\n-\t * @throws DAOException\n+\t * \n \t */\n \tpublic void updateTask(TaskDefinition task) throws DAOException;\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTU3NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388281574", "bodyText": "Can we avoid duplicating this?", "author": "dkayiwa", "createdAt": "2020-03-05T13:08:47Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,15 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Get the task with the given uuid.", "originalCommit": "ca658e83c3f80227d5b1422b95f69688d18e282a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMxODk5Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388318992", "bodyText": "sure, removed it to, requesting for review", "author": "gitcliff", "createdAt": "2020-03-05T14:15:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI4MTU3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5f7969a0e096659e2e7e1b7775c710fe9753189f", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 7d0fa898b..693897f6d 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -544,9 +544,8 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t}\n \n \t/**\n-\t * Get the task with the given uuid.\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n \t *\n-\t * @param uuid the unique id of the task\n \t */\n \t@Override\n \tpublic TaskDefinition getTaskByUuid(String uuid) {\n"}}, {"oid": "5f7969a0e096659e2e7e1b7775c710fe9753189f", "url": "https://github.com/openmrs/openmrs-core/commit/5f7969a0e096659e2e7e1b7775c710fe9753189f", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-05T14:06:08Z", "type": "forcePushed"}, {"oid": "7b01e2e9a92db09a0624158cf2f2cd41d4744c64", "url": "https://github.com/openmrs/openmrs-core/commit/7b01e2e9a92db09a0624158cf2f2cd41d4744c64", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-05T14:12:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Mjg1OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388352859", "bodyText": "Can you include the full package?", "author": "dkayiwa", "createdAt": "2020-03-05T15:06:06Z", "path": "api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java", "diffHunk": "@@ -413,4 +414,22 @@ public void shouldSaveLastExecutionTime() throws Exception {\n \t\tassertEquals(\"Last execution time in seconds is wrong\", actualExecutionTime / 1000, td.getLastExecutionTime()\n \t\t        .getTime() / 1000, 1);\n \t}\n+\n+\t/**\n+\t * @see SchedulerService#getTaskByUuid(String)", "originalCommit": "7b01e2e9a92db09a0624158cf2f2cd41d4744c64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NzgxNg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388447816", "bodyText": "sure @dkayiwa , have fixed it", "author": "gitcliff", "createdAt": "2020-03-05T17:29:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Mjg1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee", "chunk": "diff --git a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\nindex 423d31642..2b30b628c 100644\n--- a/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n+++ b/api/src/test/java/org/openmrs/scheduler/SchedulerServiceTest.java\n\n@@ -416,7 +416,7 @@ public class SchedulerServiceTest extends BaseContextSensitiveTest {\n \t}\n \n \t/**\n-\t * @see SchedulerService#getTaskByUuid(String)\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n \t */\n \t@Test\n \tpublic void getTaskByUuid_shouldGetTaskByUuid() throws Exception {\n"}}, {"oid": "f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee", "url": "https://github.com/openmrs/openmrs-core/commit/f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-05T17:25:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTQ2Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388455462", "bodyText": "Can you use a full package for the String parameter?", "author": "dkayiwa", "createdAt": "2020-03-05T17:42:34Z", "path": "api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java", "diffHunk": "@@ -39,6 +39,12 @@\n \t */\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)", "originalCommit": "f8a2750d5221dc1b5b14ca0cc63f57a44c3fadee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3NTE1Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388475152", "bodyText": "@dkayiwa i have added it", "author": "gitcliff", "createdAt": "2020-03-05T18:19:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTQ2Mg=="}], "type": "inlineReview", "revised_code": {"commit": "af1dc6d61846b78245333d6e2229c3147618bf3a", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\nindex 001b45a19..c4b5c130c 100644\n--- a/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n+++ b/api/src/main/java/org/openmrs/scheduler/db/SchedulerDAO.java\n\n@@ -40,7 +40,7 @@ public interface SchedulerDAO {\n \tpublic TaskDefinition getTask(Integer taskId) throws DAOException;\n \t\n \t/**\n-\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(String uuid)\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String uuid)\n \t * \n \t */\n \tpublic TaskDefinition getTaskByUuid(String uuid) throws DAOException;\n"}}, {"oid": "af1dc6d61846b78245333d6e2229c3147618bf3a", "url": "https://github.com/openmrs/openmrs-core/commit/af1dc6d61846b78245333d6e2229c3147618bf3a", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-05T18:05:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0NDY5NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388544694", "bodyText": "What is the use of uuid in the above line?", "author": "dkayiwa", "createdAt": "2020-03-05T20:26:23Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String uuid)", "originalCommit": "af1dc6d61846b78245333d6e2229c3147618bf3a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0MDIxOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388840219", "bodyText": "i was trying to indicate the parameter to but i have removed it", "author": "gitcliff", "createdAt": "2020-03-06T10:59:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0NDY5NA=="}], "type": "inlineReview", "revised_code": {"commit": "777f7d231f00a646f3766363e7793f088a51aab2", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex 0cddd0896..e2201a52c 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -544,7 +544,7 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t}\n \n \t/**\n-\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String uuid)\n+\t * @see org.openmrs.scheduler.SchedulerService#getTaskByUuid(java.lang.String)\n \t *\n \t */\n \t@Override\n"}}, {"oid": "777f7d231f00a646f3766363e7793f088a51aab2", "url": "https://github.com/openmrs/openmrs-core/commit/777f7d231f00a646f3766363e7793f088a51aab2", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-06T10:48:03Z", "type": "forcePushed"}, {"oid": "4edd95299bcdda06f65f55cfde64999ea092f387", "url": "https://github.com/openmrs/openmrs-core/commit/4edd95299bcdda06f65f55cfde64999ea092f387", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-06T13:27:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkxOTI0Nw==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388919247", "bodyText": "Is there any reason why you did not add @Transactional(readOnly = true) like the rest of the getters?", "author": "dkayiwa", "createdAt": "2020-03-06T14:03:56Z", "path": "api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java", "diffHunk": "@@ -542,5 +542,14 @@ public void scheduleIfNotRunning(TaskDefinition taskDef) {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**", "originalCommit": "4edd95299bcdda06f65f55cfde64999ea092f387", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNTMyOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3132#discussion_r388925328", "bodyText": "not really,just didn't notice it but i have added it", "author": "gitcliff", "createdAt": "2020-03-06T14:15:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkxOTI0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "fa29602f0802ab5330ed93c066f2c444773ed77d", "chunk": "diff --git a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\nindex e2201a52c..e6783b121 100644\n--- a/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/scheduler/timer/TimerSchedulerServiceImpl.java\n\n@@ -548,6 +548,7 @@ public class TimerSchedulerServiceImpl extends BaseOpenmrsService implements Sch\n \t *\n \t */\n \t@Override\n+\t@Transactional(readOnly = true)\n \tpublic TaskDefinition getTaskByUuid(String uuid) {\n \t\treturn getSchedulerDAO().getTaskByUuid(uuid);\n \t}\n"}}, {"oid": "fa29602f0802ab5330ed93c066f2c444773ed77d", "url": "https://github.com/openmrs/openmrs-core/commit/fa29602f0802ab5330ed93c066f2c444773ed77d", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-06T14:13:15Z", "type": "commit"}, {"oid": "fa29602f0802ab5330ed93c066f2c444773ed77d", "url": "https://github.com/openmrs/openmrs-core/commit/fa29602f0802ab5330ed93c066f2c444773ed77d", "message": "Trunk-5710:Implement the getByUniqueId(String uniqueId) in SchedulerService.java", "committedDate": "2020-03-06T14:13:15Z", "type": "forcePushed"}]}