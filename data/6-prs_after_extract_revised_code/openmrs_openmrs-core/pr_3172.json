{"pr_number": 3172, "pr_title": "TRUNK-5726: Use Lambda expressions in UserServiceImpl#checkPrivileges(Role).", "pr_createdAt": "2020-04-07T06:45:57Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3172", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMTAwNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404831005", "bodyText": "This should actually be APIException, the + should be a , and the other part should be wrapped in new Object[] { } so this gets properly localised.", "author": "ibacher", "createdAt": "2020-04-07T13:59:06Z", "path": "api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java", "diffHunk": "@@ -535,15 +535,14 @@ public void purgeUser(User user, boolean cascade) throws APIException {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\t\t\n-\t\tif (privileges != null) {\n-\t\t\tfor (Privilege p : privileges) {\n-\t\t\t\tif (!Context.hasPrivilege(p.getPrivilege())) {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Privilege required: \" + p);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+\n+\t\tOptional.ofNullable(role.getPrivileges())\n+\t\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).collect(Collectors.toSet()))\n+\t\t\t\t.ifPresent(missing -> {\n+\t\t\t\t\tthrow new APIAuthenticationException(\"Role.you.must.have.privileges: \"", "originalCommit": "6c5719745acce0a3d0f1ebc1d2fd2e78d5c8ccbc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMzU5OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404833598", "bodyText": "Also the full thing can be re-written as:\nOptional.ofNullable(role.getPrivileges())\n\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n\t\t\t\t.distinct().collect(Collectors.joining(\", \")))\n\t\t\t\t.ifPresent(missing -> {\n\t\t\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n\t\t\t\t});\nWhich is preferable since we only have one call to Collectors and one call to stream() (in the streaming API, these are the expensive operations which actual result in computation being done).", "author": "ibacher", "createdAt": "2020-04-07T14:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMTAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1MTI1Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404851253", "bodyText": "ok thanks let me do that right now", "author": "sherrif10", "createdAt": "2020-04-07T14:25:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgzMTAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "b79ca85402f113ac9463c0306c33fce540e56364", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java b/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\nindex 6922413a8..06f311b83 100644\n--- a/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\n\n@@ -535,14 +537,14 @@ public class UserServiceImpl extends BaseOpenmrsService implements UserService {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\n+\t\t\n \t\tOptional.ofNullable(role.getPrivileges())\n-\t\t\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).collect(Collectors.toSet()))\n-\t\t\t\t.ifPresent(missing -> {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Role.you.must.have.privileges: \"\n-\t\t\t\t\t\t\t+ missing.stream().map(Privilege::getPrivilege).collect(Collectors.joining(\", \")));\n-\t\t\t\t});\n-      \t}\n+\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n+\t\t\t.distinct().collect(Collectors.joining(\", \")))\n+\t\t.ifPresent(missing -> {\n+\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n+\t\t});\n+    }\n \t\n \t/**\n \t * @see org.openmrs.api.UserService#getPrivilegeByUuid(java.lang.String)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODExOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404908119", "bodyText": "The indentation here is primarily spaces. Can you convert this to tabs?", "author": "ibacher", "createdAt": "2020-04-07T15:37:28Z", "path": "api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java", "diffHunk": "@@ -535,15 +535,14 @@ public void purgeUser(User user, boolean cascade) throws APIException {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\t\t\n-\t\tif (privileges != null) {\n-\t\t\tfor (Privilege p : privileges) {\n-\t\t\t\tif (!Context.hasPrivilege(p.getPrivilege())) {\n-\t\t\t\t\tthrow new APIAuthenticationException(\"Privilege required: \" + p);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+\n+\t\tOptional.ofNullable(role.getPrivileges())\n+\t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n+\t\t\t\t.distinct().collect(Collectors.joining(\", \")))\n+\t\t\t\t.ifPresent(missing -> {\n+\t\t\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n+\t\t\t\t});\n+      \t}", "originalCommit": "129d1925d4f0cc0fb4e35e6f68f50611d0e7401e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkyOTY0MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3172#discussion_r404929641", "bodyText": "seems there is nothing changed about converting spaces to tabs,\nHere is how i tried to do it, From Windows-> preferences->General-> Editors. , is there any process of how to go away with this", "author": "sherrif10", "createdAt": "2020-04-07T16:05:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODExOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b79ca85402f113ac9463c0306c33fce540e56364", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java b/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\nindex 8efb821a0..06f311b83 100644\n--- a/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\n+++ b/api/src/main/java/org/openmrs/api/impl/UserServiceImpl.java\n\n@@ -535,14 +537,14 @@ public class UserServiceImpl extends BaseOpenmrsService implements UserService {\n \t */\n \tprivate void checkPrivileges(Role role) {\n \t\tCollection<Privilege> privileges = role.getPrivileges();\n-\n+\t\t\n \t\tOptional.ofNullable(role.getPrivileges())\n \t\t.map(p -> p.stream().filter(pr -> !Context.hasPrivilege(pr.getPrivilege())).map(Privilege::getPrivilege)\n-\t\t\t\t.distinct().collect(Collectors.joining(\", \")))\n-\t\t\t\t.ifPresent(missing -> {\n-\t\t\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n-\t\t\t\t});\n-      \t}\n+\t\t\t.distinct().collect(Collectors.joining(\", \")))\n+\t\t.ifPresent(missing -> {\n+\t\t\tthrow new APIException(\"Role.you.must.have.privileges: \", new Object[] { missing });\n+\t\t});\n+    }\n \t\n \t/**\n \t * @see org.openmrs.api.UserService#getPrivilegeByUuid(java.lang.String)\n"}}, {"oid": "b79ca85402f113ac9463c0306c33fce540e56364", "url": "https://github.com/openmrs/openmrs-core/commit/b79ca85402f113ac9463c0306c33fce540e56364", "message": "reverting new changes", "committedDate": "2020-04-08T08:45:35Z", "type": "commit"}]}