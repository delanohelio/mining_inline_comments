{"pr_number": 3397, "pr_title": "Trunk 5835:OrderSetAttribute Implementation ", "pr_createdAt": "2020-07-24T14:58:14Z", "pr_url": "https://github.com/openmrs/openmrs-core/pull/3397", "timeline": [{"oid": "9dc40501063842a156abce596c0ac02e40e720de", "url": "https://github.com/openmrs/openmrs-core/commit/9dc40501063842a156abce596c0ac02e40e720de", "message": "TRUNK-5835:Adding tests", "committedDate": "2020-07-25T18:54:13Z", "type": "commit"}, {"oid": "9dc40501063842a156abce596c0ac02e40e720de", "url": "https://github.com/openmrs/openmrs-core/commit/9dc40501063842a156abce596c0ac02e40e720de", "message": "TRUNK-5835:Adding tests", "committedDate": "2020-07-25T18:54:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjgxMw==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446813", "bodyText": "What is AllOrderSetAttributeTypes?", "author": "dkayiwa", "createdAt": "2020-07-25T21:07:45Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -120,6 +122,8 @@\n \tOrderSetAttribute getOrderSetAttributeByUuid(String uuid);\n \n \t/**\n+\t * Get AllOrderSetAttributeTypes", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex 6bb66eb10..5b5cf19de 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -122,7 +122,7 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetAttribute getOrderSetAttributeByUuid(String uuid);\n \n \t/**\n-\t * Get AllOrderSetAttributeTypes\n+\t * Get all order set attribute types from the database \n \t * \n \t * @return all {@link OrderSetAttributeType}s\n \t * @since 2.4.0\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0Njg1NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446855", "bodyText": "What does the above do?", "author": "dkayiwa", "createdAt": "2020-07-25T21:08:23Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -128,6 +132,8 @@\n \tList<OrderSetAttributeType> getAllOrderSetAttributeTypes();\n \n \t/**\n+\t * Get OrderSetAttributeType", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex 6bb66eb10..5b5cf19de 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -132,7 +132,7 @@ public interface OrderSetService extends OpenmrsService {\n \tList<OrderSetAttributeType> getAllOrderSetAttributeTypes();\n \n \t/**\n-\t * Get OrderSetAttributeType\n+\t * Get order set attribute type from the database by a given internal id\n \t * \n \t * @param id\n \t * @return the {@link OrderSetAttributeType} with the given internal id\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NjkwNA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460446904", "bodyText": "Can you look at existing javadocs for examples?", "author": "dkayiwa", "createdAt": "2020-07-25T21:09:07Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get OrderSetAttribute by uuid", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex 6bb66eb10..5b5cf19de 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -110,7 +110,7 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n-\t * Get OrderSetAttribute by uuid\n+\t * Get order set attribute by uuid from database\n \t * \n \t * @param uuid\n \t * @return the {@link OrderSetAttribute} with the given uuid\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzE3NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447175", "bodyText": "Just incase one adds more data to the dataset, just use count and count + 1", "author": "dkayiwa", "createdAt": "2020-07-25T21:12:14Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex e8d08a4c3..061b0cb82 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -402,7 +402,9 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t@Test\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n-\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI0MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447241", "bodyText": "Use count and count + 1", "author": "dkayiwa", "createdAt": "2020-07-25T21:13:05Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex e8d08a4c3..061b0cb82 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -402,7 +402,9 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t@Test\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n-\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0NzI4NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r460447284", "bodyText": "What as the original name?", "author": "dkayiwa", "createdAt": "2020-07-25T21:13:41Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,125 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType lat = service.getOrderSetAttributeType(1);\n+\t\tlat.setName(\"A new name\");", "originalCommit": "9dc40501063842a156abce596c0ac02e40e720de", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex e8d08a4c3..061b0cb82 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -402,7 +402,9 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t@Test\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n-\t\tassertEquals(2, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"oid": "66cc88002971624d9cdfd5492bd4741e1357ed45", "url": "https://github.com/openmrs/openmrs-core/commit/66cc88002971624d9cdfd5492bd4741e1357ed45", "message": "TRUNK-5835:fixing tests docs", "committedDate": "2020-07-27T13:11:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTIyOA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141228", "bodyText": "I would drop database. That is a detail of the data access layer.", "author": "dkayiwa", "createdAt": "2020-07-27T20:11:46Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid from database", "originalCommit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0ODMxOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461548319", "bodyText": "i have removed it", "author": "gitcliff", "createdAt": "2020-07-28T12:41:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTIyOA=="}], "type": "inlineReview", "revised_code": {"commit": "871dca0af42081700248ea731f6bd8ecaea6230f", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex 5b5cf19de..e8be32108 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -110,7 +110,7 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n-\t * Get order set attribute by uuid from database\n+\t * Get order set attribute by uuid \n \t * \n \t * @param uuid\n \t * @return the {@link OrderSetAttribute} with the given uuid\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTY0Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141642", "bodyText": "What is oat?", "author": "dkayiwa", "createdAt": "2020-07-27T20:12:37Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = new OrderSetAttributeType();\n+\t\toat.setName(\"Another one\");\n+\t\toat.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(oat);\n+\t\tassertNotNull(oat.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(1);\n+\t\toat.setName(\"A new name\");\n+\t\tservice.saveOrderSetAttributeType(oat);\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(\"A new name\", service.getOrderSetAttributeType(1).getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#unretireOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void unretireOrderSetAttributeType_shouldUnretireARetiredOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tOrderSetAttributeType oat = service.getOrderSetAttributeType(2);", "originalCommit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0ODExNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461548115", "bodyText": "it was a abbreviation for orderSetAttributeType but i have fixed it", "author": "gitcliff", "createdAt": "2020-07-28T12:41:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTY0Mg=="}], "type": "inlineReview", "revised_code": {"commit": "871dca0af42081700248ea731f6bd8ecaea6230f", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 061b0cb82..7cf6f9f91 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -415,17 +415,17 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t@Test\n \tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n-\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n-\t\tassertFalse(vat.getRetired());\n-\t\tassertNull(vat.getRetiredBy());\n-\t\tassertNull(vat.getDateRetired());\n-\t\tassertNull(vat.getRetireReason());\n-\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n-\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n-\t\tassertTrue(vat.getRetired());\n-\t\tassertNotNull(vat.getRetiredBy());\n-\t\tassertNotNull(vat.getDateRetired());\n-\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n \t}\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461141996", "bodyText": "What is the use of this assertion?", "author": "dkayiwa", "createdAt": "2020-07-27T20:13:22Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,\n+\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(vat.getRetired());\n+\t\tassertNull(vat.getRetiredBy());\n+\t\tassertNull(vat.getDateRetired());\n+\t\tassertNull(vat.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n+\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(vat.getRetired());\n+\t\tassertNotNull(vat.getRetiredBy());\n+\t\tassertNotNull(vat.getDateRetired());\n+\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 0,", "originalCommit": "66cc88002971624d9cdfd5492bd4741e1357ed45", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0NzI0MA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461547240", "bodyText": "its a sanity check", "author": "gitcliff", "createdAt": "2020-07-28T12:40:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU0OTU5OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461549598", "bodyText": "A sanity check like assertEquals( x + 0, x)?", "author": "dkayiwa", "createdAt": "2020-07-28T12:43:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NTU2Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461765562", "bodyText": "@dkayiwa when i increment with ( x + 1, x) it goes against the real order set attributes that i have in the dataset hence throwing an assertion failure between whats actual and whats is expected", "author": "gitcliff", "createdAt": "2020-07-28T17:53:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2NzgwNw==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461767807", "bodyText": "Let me ask differently, what value does + 0 add to this assertion?", "author": "dkayiwa", "createdAt": "2020-07-28T17:56:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NjQzMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r461856432", "bodyText": "honestly nothing and have removed it", "author": "gitcliff", "createdAt": "2020-07-28T20:24:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE0MTk5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "871dca0af42081700248ea731f6bd8ecaea6230f", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 061b0cb82..7cf6f9f91 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -415,17 +415,17 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t@Test\n \tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n-\t\tOrderSetAttributeType vat = Context.getOrderSetService().getOrderSetAttributeType(1);\n-\t\tassertFalse(vat.getRetired());\n-\t\tassertNull(vat.getRetiredBy());\n-\t\tassertNull(vat.getDateRetired());\n-\t\tassertNull(vat.getRetireReason());\n-\t\tContext.getOrderSetService().retireOrderSetAttributeType(vat, \"for testing\");\n-\t\tvat = Context.getOrderSetService().getOrderSetAttributeType(1);\n-\t\tassertTrue(vat.getRetired());\n-\t\tassertNotNull(vat.getRetiredBy());\n-\t\tassertNotNull(vat.getDateRetired());\n-\t\tassertEquals(\"for testing\", vat.getRetireReason());\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n \t}\n \n \t/**\n"}}, {"oid": "871dca0af42081700248ea731f6bd8ecaea6230f", "url": "https://github.com/openmrs/openmrs-core/commit/871dca0af42081700248ea731f6bd8ecaea6230f", "message": "TRUNK-5835:fixing tests docs", "committedDate": "2020-07-28T12:38:41Z", "type": "commit"}, {"oid": "17d43a50654071470d6a532a3fe6e40b7ff61ebf", "url": "https://github.com/openmrs/openmrs-core/commit/17d43a50654071470d6a532a3fe6e40b7ff61ebf", "message": "TRUNK-5835:Add formats", "committedDate": "2020-07-28T19:50:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462244764", "bodyText": "What is the use of the above assertion?", "author": "dkayiwa", "createdAt": "2020-07-29T12:00:17Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,129 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(initialOrderSetAttributeTypesCount,", "originalCommit": "17d43a50654071470d6a532a3fe6e40b7ff61ebf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3NjYyNA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462276624", "bodyText": "@dkayiwa  is it necessary to leave out the DAOTests since they're exposed through the service layer ?", "author": "tendomart", "createdAt": "2020-07-29T12:57:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI3OTA2MA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462279060", "bodyText": "Let us include them.", "author": "dkayiwa", "createdAt": "2020-07-29T13:00:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex f680b38d7..46a9e6565 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -403,8 +403,7 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n-\t\tassertEquals(initialOrderSetAttributeTypesCount,\n-\t\t\t\tContext.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"oid": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "url": "https://github.com/openmrs/openmrs-core/commit/bf1ed4704afc540302f9a54ad05689610c3f4c9e", "message": "TRUNK-5835:fixing tests", "committedDate": "2020-07-29T17:22:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0MzM4OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543389", "bodyText": "previously", "author": "dkayiwa", "createdAt": "2020-07-29T19:42:11Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -171,7 +179,7 @@\n \tOrderSetAttributeType retireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType, String reason);\n \n \t/**\n-\t * Restores a orderSet attribute type that was previous retired in the database\n+\t * Restores a orderSet attribute type that was previous retired ", "originalCommit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex e8be32108..f90ab7d9c 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -179,7 +179,7 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetAttributeType retireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType, String reason);\n \n \t/**\n-\t * Restores a orderSet attribute type that was previous retired \n+\t * Restores an order set attribute type that was previous retired \n \t * \n \t * @param orderSetAttributeType\n \t * @return the OrderSetAttributeType unretired\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzc2NA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543764", "bodyText": "a or an?", "author": "dkayiwa", "createdAt": "2020-07-29T19:42:56Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -182,7 +190,7 @@\n \tOrderSetAttributeType unretireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType);\n \n \t/**\n-\t * Completely removes a orderSet attribute type from the database\n+\t * Completely removes a orderSet attribute type ", "originalCommit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex e8be32108..f90ab7d9c 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -190,17 +190,17 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetAttributeType unretireOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType);\n \n \t/**\n-\t * Completely removes a orderSet attribute type \n+\t * Completely removes an order set attribute type \n \t * \n \t * @param orderSetAttributeType\n \t * @since 2.4.0\n-\t * @should completely remove a orderSet attribute type\n+\t * @should completely remove a order set attribute type\n \t */\n \t@Authorized(PrivilegeConstants.PURGE_ORDER_SET_ATTRIBUTE_TYPES)\n \tvoid purgeOrderSetAttributeType(OrderSetAttributeType orderSetAttributeType);\n \n \t/**\n-\t * Retrieves a OrderSetAttributeType object based on the name provided\n+\t * Retrieves an order set attribute type object based on the name provided\n \t *\n \t * @param orderSetAttributeTypeName\n \t * @return the {@link OrderSetAttributeType} with the specified name\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzk3Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462543973", "bodyText": "What is orderSet?", "author": "dkayiwa", "createdAt": "2020-07-29T19:43:23Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -148,7 +156,7 @@\n \tOrderSetAttributeType getOrderSetAttributeTypeByUuid(String uuid);\n \n \t/**\n-\t * Creates or updates the given orderSet attribute type in the database\n+\t * Creates or updates the given orderSet attribute type ", "originalCommit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjc1NDYxOQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462754619", "bodyText": "i have fixed it", "author": "gitcliff", "createdAt": "2020-07-30T06:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0Mzk3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex e8be32108..f90ab7d9c 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -156,7 +156,7 @@ public interface OrderSetService extends OpenmrsService {\n \tOrderSetAttributeType getOrderSetAttributeTypeByUuid(String uuid);\n \n \t/**\n-\t * Creates or updates the given orderSet attribute type \n+\t * Creates or updates the given order set attribute type \n \t * \n \t * @param orderSetAttributeType\n \t * @return the OrderSetAttributeType created/saved\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NDQ2Mg==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462544462", "bodyText": "use count - 1\nwhich will ensure that the test does not fail when the number of records in the dataset is changed.", "author": "dkayiwa", "createdAt": "2020-07-29T19:44:19Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "originalCommit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 46a9e6565..3051aed71 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -405,7 +405,7 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n \t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n-\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n \n \t/**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NTIxNA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462545214", "bodyText": "use count + 1", "author": "dkayiwa", "createdAt": "2020-07-29T19:45:39Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(3, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());", "originalCommit": "bf1ed4704afc540302f9a54ad05689610c3f4c9e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 46a9e6565..3051aed71 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -405,7 +405,7 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n \t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n-\t\tassertEquals(1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n \n \t/**\n"}}, {"oid": "ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "url": "https://github.com/openmrs/openmrs-core/commit/ade0a784d7f1c21b8dd3a434b0ceede3aac83abb", "message": "TRUNK-5835:fixing tests cases", "committedDate": "2020-07-30T05:48:11Z", "type": "commit"}, {"oid": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "url": "https://github.com/openmrs/openmrs-core/commit/b5303e73476e0b4e4940642ae7dbad833162b2f0", "message": "TRUNK-5835:fixing tests cases", "committedDate": "2020-07-30T05:55:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0Mjk4OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462942989", "bodyText": "Can you also document all the params?", "author": "dkayiwa", "createdAt": "2020-07-30T11:53:42Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,6 +110,8 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n+\t * Get order set attribute by uuid \n+\t * \n \t * @param uuid", "originalCommit": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "chunk": "diff --git a/api/src/main/java/org/openmrs/api/OrderSetService.java b/api/src/main/java/org/openmrs/api/OrderSetService.java\nindex 441b72ce5..490c1a4ab 100644\n--- a/api/src/main/java/org/openmrs/api/OrderSetService.java\n+++ b/api/src/main/java/org/openmrs/api/OrderSetService.java\n\n@@ -112,7 +112,7 @@ public interface OrderSetService extends OpenmrsService {\n \t/**\n \t * Get order set attribute by uuid \n \t * \n-\t * @param uuid\n+\t * @param uuid specifies the order set attribute uuid\n \t * @return the {@link OrderSetAttribute} with the given uuid\n \t * @since 2.4.0\n \t * @should get the order set attribute with the given uuid\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462943466", "bodyText": "Do we need this assertion?", "author": "dkayiwa", "createdAt": "2020-07-30T11:54:49Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();", "originalCommit": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NjI1NQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462956255", "bodyText": "yes ,the purpose is to first check the number of order set attribute types in the dataset before we can do the purging", "author": "gitcliff", "createdAt": "2020-07-30T12:21:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MjY1Mw==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462962653", "bodyText": "Isn't that taken care of with? initialOrderSetAttributeTypesCount - 1", "author": "dkayiwa", "createdAt": "2020-07-30T12:33:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzI3OA==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462963278", "bodyText": "You are simply interested in purging reducing the number by one. It does not matter whether they were 2, 5, 10, or a million.", "author": "dkayiwa", "createdAt": "2020-07-30T12:34:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk3NTYzMg==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462975632", "bodyText": "oh i see,,,thanks for the clarification", "author": "gitcliff", "createdAt": "2020-07-30T12:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MzQ2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 3051aed71..7ceb3ff29 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -403,7 +403,6 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n-\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944005", "bodyText": "What is the use of this assertion?", "author": "dkayiwa", "createdAt": "2020-07-30T11:56:01Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);", "originalCommit": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NDA2MQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462954061", "bodyText": "@dkayiwa the use of this assertion is first to check and confirm the number of order set attribute types that we currently have in the dataset before we introduce a new one to make it 3", "author": "gitcliff", "createdAt": "2020-07-30T12:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk2MzYzMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462963631", "bodyText": "Same as above.", "author": "dkayiwa", "createdAt": "2020-07-30T12:35:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDAwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 3051aed71..7ceb3ff29 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -403,7 +403,6 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n-\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDQ5OQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462944499", "bodyText": "Problem with hard coding the number as 2 is that when the test dataset gets changed with more of less records, the test will fail.", "author": "dkayiwa", "createdAt": "2020-07-30T11:57:05Z", "path": "api/src/test/java/org/openmrs/api/OrderSetServiceTest.java", "diffHunk": "@@ -350,4 +355,127 @@ private OrderSet orderSetBuilder(boolean orderSetRetired, boolean orderSetMember\n \t\torderSet.setRetired(orderSetRetired);\n \t\treturn orderSet;\n \t}\n+\t\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldGetTheOrderSetAttributeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(\"2011-04-25\",service.getOrderSetAttributeByUuid(\"3a4bdb18-6faa-22e0-8414-001e376eb68e\").getValueReference());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeByUuid_shouldReturnNullIfNoOrderSetAttributeHasTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertNull(service.getOrderSetAttributeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnTheOrderSetAttributeTypeWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertEquals(\"Audit Date\", Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\n+\t\t    \"8516cc50-6f9f-33e0-8414-001e648eb67e\").getName());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#getOrderSetAttributeTypeByUuid(String)\n+\t */\n+\t@Test\n+\tpublic void getOrderSetAttributeTypeByUuid_shouldReturnNullIfNoOrderSetAttributeTypeExistsWithTheGivenUuid() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tassertNull(Context.getOrderSetService().getOrderSetAttributeTypeByUuid(\"not-a-uuid\"));\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#purgeOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n+\t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#retireOrderSetAttributeType(OrderSetAttributeType,String)\n+\t */\n+\t@Test\n+\tpublic void retireOrderSetAttributeType_shouldRetireAOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetAttributeType orderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertFalse(orderSetAttributeType.getRetired());\n+\t\tassertNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNull(orderSetAttributeType.getDateRetired());\n+\t\tassertNull(orderSetAttributeType.getRetireReason());\n+\t\tContext.getOrderSetService().retireOrderSetAttributeType(orderSetAttributeType, \"for testing\");\n+\t\torderSetAttributeType = Context.getOrderSetService().getOrderSetAttributeType(1);\n+\t\tassertTrue(orderSetAttributeType.getRetired());\n+\t\tassertNotNull(orderSetAttributeType.getRetiredBy());\n+\t\tassertNotNull(orderSetAttributeType.getDateRetired());\n+\t\tassertEquals(\"for testing\", orderSetAttributeType.getRetireReason());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldCreateANewOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n+\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n+\t\tOrderSetAttributeType orderSetAttributeType = new OrderSetAttributeType();\n+\t\torderSetAttributeType.setName(\"Another one\");\n+\t\torderSetAttributeType.setDatatypeClassname(FreeTextDatatype.class.getName());\n+\t\tContext.getOrderSetService().saveOrderSetAttributeType(orderSetAttributeType);\n+\t\tassertNotNull(orderSetAttributeType.getId());\n+\t\tassertEquals(initialOrderSetAttributeTypesCount + 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n+\t}\n+\n+\t/**\n+\t * @see OrderSetService#saveOrderSetAttributeType(OrderSetAttributeType)\n+\t */\n+\t@Test\n+\tpublic void saveOrderSetAttributeType_shouldEditAnExistingOrderSetAttributeType() {\n+\t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n+\t\tOrderSetService service = Context.getOrderSetService();\n+\t\tassertEquals(2, service.getAllOrderSetAttributeTypes().size());", "originalCommit": "b5303e73476e0b4e4940642ae7dbad833162b2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1NDgzMQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r462954831", "bodyText": "thanks ,,,going to to fix it", "author": "gitcliff", "createdAt": "2020-07-30T12:18:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0NDQ5OQ=="}], "type": "inlineReview", "revised_code": {"commit": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "chunk": "diff --git a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\nindex 3051aed71..7ceb3ff29 100644\n--- a/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n+++ b/api/src/test/java/org/openmrs/api/OrderSetServiceTest.java\n\n@@ -403,7 +403,6 @@ public class OrderSetServiceTest extends BaseContextSensitiveTest {\n \tpublic void purgeOrderSetAttributeType_shouldCompletelyRemoveAOrderSetAttributeType() {\n \t\texecuteDataSet(ORDER_SET_ATTRIBUTES);\n \t\tint initialOrderSetAttributeTypesCount = Context.getOrderSetService().getAllOrderSetAttributeTypes().size();\n-\t\tassertEquals(2, initialOrderSetAttributeTypesCount);\n \t\tContext.getOrderSetService().purgeOrderSetAttributeType(Context.getOrderSetService().getOrderSetAttributeType(2));\n \t\tassertEquals(initialOrderSetAttributeTypesCount - 1, Context.getOrderSetService().getAllOrderSetAttributeTypes().size());\n \t}\n"}}, {"oid": "4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "url": "https://github.com/openmrs/openmrs-core/commit/4cfbbf512b10910d3b1ed9eb28cd6b4182f0410f", "message": "TRUNK-5835:fixing tests cases", "committedDate": "2020-07-30T13:17:19Z", "type": "commit"}, {"oid": "b5927187133c5a51662824d8b63bb23fffeac046", "url": "https://github.com/openmrs/openmrs-core/commit/b5927187133c5a51662824d8b63bb23fffeac046", "message": "TRUNK-5835:fixing tests cases", "committedDate": "2020-07-30T13:47:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwMzYyNQ==", "url": "https://github.com/openmrs/openmrs-core/pull/3397#discussion_r463203625", "bodyText": "remove specifies", "author": "dkayiwa", "createdAt": "2020-07-30T18:53:02Z", "path": "api/src/main/java/org/openmrs/api/OrderSetService.java", "diffHunk": "@@ -110,7 +110,9 @@\n \tOrderSetMember getOrderSetMemberByUuid(String uuid);\n \n \t/**\n-\t * @param uuid\n+\t * Get order set attribute by uuid \n+\t * \n+\t * @param uuid specifies the order set attribute uuid", "originalCommit": "b5927187133c5a51662824d8b63bb23fffeac046", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}