{"pr_number": 7839, "pr_title": "Add structural variant enrichment api", "pr_createdAt": "2020-08-27T16:44:23Z", "pr_url": "https://github.com/cBioPortal/cbioportal/pull/7839", "timeline": [{"oid": "8f334a4e109f04f8730fb7292c90f681af5072bf", "url": "https://github.com/cBioPortal/cbioportal/commit/8f334a4e109f04f8730fb7292c90f681af5072bf", "message": "Add structural variant enrichment api", "committedDate": "2020-08-28T15:33:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NDMyOA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480384328", "bodyText": "Given that we have enrichmentType logic here, can we stick with using the enum instead of the string until but not including the repository layer", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:35:43Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyNTc1MQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481125751", "bodyText": "In this case I would need to move enum from web module to a level where it can be accessed from service module.", "author": "kalletlak", "createdAt": "2020-09-01T13:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NDMyOA=="}], "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\nindex 436aefeea..e3895fe48 100644\n--- a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n+++ b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n\n@@ -8,9 +8,9 @@ import java.util.stream.Collectors;\n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantEnrichmentService;\n import org.cbioportal.service.StructuralVariantService;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NjMwNw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480386307", "bodyText": "Why getOrDefault? The key you're using is from the map's key set.", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:39:46Z", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {\n+\n+            List<String> molecularProfileIds = new ArrayList<>();\n+            List<String> sampleIds = new ArrayList<>();\n+\n+            groupMolecularProfileCaseSets.getOrDefault(molecularProfileId, new ArrayList<>())", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyNjkzNQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481126935", "bodyText": "true, not required", "author": "kalletlak", "createdAt": "2020-09-01T13:13:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NjMwNw=="}], "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\nindex 9b6bac64d..9b27167b9 100644\n--- a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n+++ b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n\n@@ -7,6 +7,8 @@ import java.util.Map;\n \n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantService;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.junit.Assert;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4NzEwNg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480387106", "bodyText": "You don't need the diamond type on the right.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n          \n          \n            \n                    Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<>();", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:41:26Z", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\nindex 9b6bac64d..9b27167b9 100644\n--- a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n+++ b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n\n@@ -7,6 +7,8 @@ import java.util.Map;\n \n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantService;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.junit.Assert;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4ODE1MA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480388150", "bodyText": "Any reason you're not diamond typing this? Makes code completion a little easier in some IDEs\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AlterationEnrichmentUtil alterationEnrichmentUtil;\n          \n          \n            \n                private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:43:39Z", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\nindex 9b6bac64d..9b27167b9 100644\n--- a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n+++ b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n\n@@ -7,6 +7,8 @@ import java.util.Map;\n \n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantService;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.junit.Assert;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM4OTMwMA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480389300", "bodyText": "Adding control flow to your tests can be dangerous, mostly because a former coworker of mine may appear and ask you \"who is testing your tests?\", but I think this is fine.", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:45:59Z", "path": "service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class StructuralVariantEnrichmentServiceImplTest extends BaseServiceImplTest {\n+\n+    @InjectMocks\n+    private StructuralVariantEnrichmentServiceImpl structuralVariantEnrichmentService;\n+\n+    @Mock\n+    private StructuralVariantService structuralVariantService;\n+    @Mock\n+    private AlterationEnrichmentUtil alterationEnrichmentUtil;\n+\n+    @Test\n+    public void getMutationEnrichments() throws Exception {\n+        // create set1, set2 list of entities\n+        MolecularProfileCaseIdentifier molecularProfileCase1 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase1.setCaseId(\"sample_id_1\");\n+        molecularProfileCase1.setMolecularProfileId(\"test1_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase2 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase2.setCaseId(\"sample_id_2\");\n+        molecularProfileCase2.setMolecularProfileId(\"test2_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet1 = new ArrayList<>();\n+        molecularProfileCaseSet1.add(molecularProfileCase1);\n+        molecularProfileCaseSet1.add(molecularProfileCase2);\n+\n+        MolecularProfileCaseIdentifier molecularProfileCase3 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase3.setCaseId(\"sample_id_3\");\n+        molecularProfileCase3.setMolecularProfileId(\"test3_mutations\");\n+        MolecularProfileCaseIdentifier molecularProfileCase4 = new MolecularProfileCaseIdentifier();\n+        molecularProfileCase4.setCaseId(\"sample_id_4\");\n+        molecularProfileCase4.setMolecularProfileId(\"test4_mutations\");\n+        List<MolecularProfileCaseIdentifier> molecularProfileCaseSet2 = new ArrayList<>();\n+        molecularProfileCaseSet2.add(molecularProfileCase3);\n+        molecularProfileCaseSet2.add(molecularProfileCase4);\n+\n+        Map<String, List<MolecularProfileCaseIdentifier>> groupMolecularProfileCaseSets = new HashMap<String, List<MolecularProfileCaseIdentifier>>();\n+        groupMolecularProfileCaseSets.put(\"altered group\", molecularProfileCaseSet1);\n+        groupMolecularProfileCaseSets.put(\"unaltered group\", molecularProfileCaseSet2);\n+\n+        for (String molecularProfileId : groupMolecularProfileCaseSets.keySet()) {", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\nindex 9b6bac64d..9b27167b9 100644\n--- a/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n+++ b/service/src/test/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImplTest.java\n\n@@ -7,6 +7,8 @@ import java.util.Map;\n \n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantService;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.junit.Assert;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480390910", "bodyText": "I'm glad this is getting removed, because this whole ID swap seems a bit janky. Can you explain why this is necessary, and what change in the future will obsolete this approach?", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:49:24Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(\n+            List<String> molecularProfileIds, List<String> patientIds, List<Integer> entrezGeneIds,\n+            boolean includeFrequency, boolean includeMissingAlterationsFromGenePanel) {\n+\n+        List<StructuralVariantCountByGene> countByGenes = structuralVariantRepository\n+                .getPatientCountInMultipleMolecularProfiles(molecularProfileIds, patientIds, entrezGeneIds);\n+\n+        // TODO: Remove once fusions are removed from mutation table\n+        if (CollectionUtils.isEmpty(countByGenes)) {", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzMjQwNg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481132406", "bodyText": "This is related to #6611. Currently all the fusion data is stored into mutation table with mutation molecular profile id. In future fusion data will be in its own table(structural variant) -> this is when all the import scripts are updated and existing data is migrated.", "author": "kalletlak", "createdAt": "2020-09-01T13:21:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE0NzAzNw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487147037", "bodyText": "I hope we haven't missed any TODO tags.", "author": "n1zea144", "createdAt": "2020-09-11T16:11:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MDkxMA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5MTcwNQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480391705", "bodyText": "All the cool kids are doing it like this now:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n          \n          \n            \n                            .entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey, entry -> {", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:51:04Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\nindex 436aefeea..e3895fe48 100644\n--- a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n+++ b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n\n@@ -8,9 +8,9 @@ import java.util.stream.Collectors;\n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantEnrichmentService;\n import org.cbioportal.service.StructuralVariantService;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5Mzg0Mw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480393843", "bodyText": "Where is MolecularProfileNotFoundException  thrown? That's a checked exception, so I should get a compiler error when I remove it if something in the function body throws it, but I don't.", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:55:35Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNDU4MA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481134580", "bodyText": "Looks like it is not required", "author": "kalletlak", "createdAt": "2020-09-01T13:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5Mzg0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\nindex 436aefeea..e3895fe48 100644\n--- a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n+++ b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n\n@@ -8,9 +8,9 @@ import java.util.stream.Collectors;\n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantEnrichmentService;\n import org.cbioportal.service.StructuralVariantService;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTA4Mw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r480395083", "bodyText": "How many case sets could you potentially be iterating over? Iteratively calling a service seems like it could be a good way to run into performance issues.", "author": "Luke-Sikina", "createdAt": "2020-08-31T20:57:56Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.cbioportal.service.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.cbioportal.model.AlterationEnrichment;\n+import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.service.StructuralVariantEnrichmentService;\n+import org.cbioportal.service.StructuralVariantService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.util.AlterationEnrichmentUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class StructuralVariantEnrichmentServiceImpl implements StructuralVariantEnrichmentService {\n+    @Autowired\n+    private StructuralVariantService structuralVariantService;\n+    @Autowired\n+    private AlterationEnrichmentUtil<StructuralVariantCountByGene> alterationEnrichmentUtil;\n+\n+    @Override\n+    public List<AlterationEnrichment> getStructuralVariantEnrichments(\n+            Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, String enrichmentType)\n+            throws MolecularProfileNotFoundException {\n+\n+        Map<String, List<StructuralVariantCountByGene>> mutationCountsbyEntrezGeneIdAndGroup = molecularProfileCaseSets\n+                .entrySet().stream().collect(Collectors.toMap(entry -> entry.getKey(), entry -> {\n+                    // set value of each group to list of MutationCountByGene\n+                    List<String> molecularProfileIds = new ArrayList<>();\n+                    List<String> caseIds = new ArrayList<>();\n+\n+                    entry.getValue().forEach(molecularProfileCase -> {\n+                        molecularProfileIds.add(molecularProfileCase.getMolecularProfileId());\n+                        caseIds.add(molecularProfileCase.getCaseId());\n+                    });\n+\n+                    if (enrichmentType.equals(\"SAMPLE\")) {\n+                        return structuralVariantService.getSampleCountInMultipleMolecularProfiles(molecularProfileIds, caseIds,", "originalCommit": "8f334a4e109f04f8730fb7292c90f681af5072bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzOTE2Nw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r481139167", "bodyText": "It can be any, it is the number of groups in comparison. this would be the only way to do it as the response from getSampleCountInMultipleMolecularProfiles would be aggregated counts", "author": "kalletlak", "createdAt": "2020-09-01T13:31:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM5NTA4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\nindex 436aefeea..e3895fe48 100644\n--- a/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n+++ b/service/src/main/java/org/cbioportal/service/impl/StructuralVariantEnrichmentServiceImpl.java\n\n@@ -8,9 +8,9 @@ import java.util.stream.Collectors;\n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n import org.cbioportal.model.StructuralVariantCountByGene;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n import org.cbioportal.service.StructuralVariantEnrichmentService;\n import org.cbioportal.service.StructuralVariantService;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n import org.cbioportal.service.util.AlterationEnrichmentUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n"}}, {"oid": "fada7246400c6e74d8edbd994837c54e5c0a0734", "url": "https://github.com/cBioPortal/cbioportal/commit/fada7246400c6e74d8edbd994837c54e5c0a0734", "message": "Add new structural variant enrichment api", "committedDate": "2020-09-01T14:00:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNzY1Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487137652", "bodyText": "Is there any validation on the MolecularProfileCaseIdentifier that the MolecularProfileID is valid (also for MutationEnrichmentService.java)", "author": "n1zea144", "createdAt": "2020-09-11T15:54:58Z", "path": "service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java", "diffHunk": "@@ -1,16 +1,15 @@\n package org.cbioportal.service;\n \n-import org.cbioportal.model.AlterationEnrichment;\n-import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n-\n import java.util.List;\n import java.util.Map;\n \n+import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n+import org.cbioportal.model.web.parameter.EnrichmentType;\n \n public interface CopyNumberEnrichmentService {\n \n     List<AlterationEnrichment> getCopyNumberEnrichments(\n             Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, List<Integer> alterationTypes,\n-            String enrichmentType) throws MolecularProfileNotFoundException;\n+            EnrichmentType enrichmentType);", "originalCommit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1ODc3NA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487158774", "bodyText": "Looks like there is no validation. I'll add it", "author": "kalletlak", "createdAt": "2020-09-11T16:33:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzNzY1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c39202835a89fda1e5297de176f9e49c83c92f66", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java b/service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java\nindex 0911ff666..007aa5b5f 100644\n--- a/service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java\n+++ b/service/src/main/java/org/cbioportal/service/CopyNumberEnrichmentService.java\n\n@@ -6,10 +6,11 @@ import java.util.Map;\n import org.cbioportal.model.AlterationEnrichment;\n import org.cbioportal.model.MolecularProfileCaseIdentifier;\n import org.cbioportal.model.web.parameter.EnrichmentType;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n \n public interface CopyNumberEnrichmentService {\n \n     List<AlterationEnrichment> getCopyNumberEnrichments(\n             Map<String, List<MolecularProfileCaseIdentifier>> molecularProfileCaseSets, List<Integer> alterationTypes,\n-            EnrichmentType enrichmentType);\n+            EnrichmentType enrichmentType) throws MolecularProfileNotFoundException;\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEzODUzMw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487138533", "bodyText": "Minor, but missing newline below.", "author": "n1zea144", "createdAt": "2020-09-11T15:56:24Z", "path": "service/src/main/java/org/cbioportal/service/StructuralVariantService.java", "diffHunk": "@@ -23,17 +23,21 @@\n \n package org.cbioportal.service;\n \n+import java.util.List;\n+\n import org.cbioportal.model.StructuralVariant;\n import org.cbioportal.model.StructuralVariantCountByGene;\n \n-import java.util.List;\n-\n public interface StructuralVariantService {\n \n-    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, \n-            List<Integer> entrezGeneIds, List<String> sampleIds);\n+    List<StructuralVariant> fetchStructuralVariants(List<String> molecularProfileIds, List<Integer> entrezGeneIds,\n+            List<String> sampleIds);\n \n     List<StructuralVariantCountByGene> getSampleCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n             List<String> sampleIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n             boolean includeMissingAlterationsFromGenePanel);\n+\n+    List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n+            List<String> patientIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n+            boolean includeMissingAlterationsFromGenePanel);", "originalCommit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c39202835a89fda1e5297de176f9e49c83c92f66", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/StructuralVariantService.java b/service/src/main/java/org/cbioportal/service/StructuralVariantService.java\nindex b4a2797a7..a47dbfcc4 100644\n--- a/service/src/main/java/org/cbioportal/service/StructuralVariantService.java\n+++ b/service/src/main/java/org/cbioportal/service/StructuralVariantService.java\n\n@@ -40,4 +40,5 @@ public interface StructuralVariantService {\n     List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(List<String> molecularProfileIds,\n             List<String> patientIds, List<Integer> entrezGeneIds, boolean includeFrequency,\n             boolean includeMissingAlterationsFromGenePanel);\n+\n }\n\\ No newline at end of file\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDYyNQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487150625", "bodyText": "It feels like we have lots of little areas in the backend where sections of code are identical except for a call or two to getPatientXXX/getSampleXXX.  Maybe its ok and introducing some design pattern to address it will only complicate the code...it just never sits well with me (I'm having a deja vu).", "author": "n1zea144", "createdAt": "2020-09-11T16:18:13Z", "path": "service/src/main/java/org/cbioportal/service/impl/StructuralVariantServiceImpl.java", "diffHunk": "@@ -131,4 +109,30 @@\n         return countByGenes;\n     }\n \n+    @Override\n+    public List<StructuralVariantCountByGene> getPatientCountInMultipleMolecularProfiles(", "originalCommit": "fada7246400c6e74d8edbd994837c54e5c0a0734", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NDYxNw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7839#discussion_r487244617", "bodyText": "Me too. we should include this in refactoring", "author": "kalletlak", "createdAt": "2020-09-11T19:21:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDYyNQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "c39202835a89fda1e5297de176f9e49c83c92f66", "url": "https://github.com/cBioPortal/cbioportal/commit/c39202835a89fda1e5297de176f9e49c83c92f66", "message": "Add new structural variant enrichment api", "committedDate": "2020-09-11T19:23:06Z", "type": "commit"}, {"oid": "c39202835a89fda1e5297de176f9e49c83c92f66", "url": "https://github.com/cBioPortal/cbioportal/commit/c39202835a89fda1e5297de176f9e49c83c92f66", "message": "Add new structural variant enrichment api", "committedDate": "2020-09-11T19:23:06Z", "type": "forcePushed"}]}