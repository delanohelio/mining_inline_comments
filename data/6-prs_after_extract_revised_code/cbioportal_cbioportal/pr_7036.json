{"pr_number": 7036, "pr_title": "Enrichments: Fix profiled cases count for groups with no alterations", "pr_createdAt": "2020-01-22T17:56:00Z", "pr_url": "https://github.com/cBioPortal/cbioportal/pull/7036", "timeline": [{"oid": "5090ce892ae67822bdb57425483cf2ac6d395a64", "url": "https://github.com/cBioPortal/cbioportal/commit/5090ce892ae67822bdb57425483cf2ac6d395a64", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-01-22T18:16:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3NzczMg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r370377732", "bodyText": "I don't think this is the ideal way of assigning a default value. It might be better/safer to do this in the function (or sql query) where we generate/map the actual data. Our models should be just a simple representation of the data without any initialization logic.", "author": "onursumer", "createdAt": "2020-01-23T22:00:25Z", "path": "model/src/main/java/org/cbioportal/model/AlterationCountByGene.java", "diffHunk": "@@ -8,9 +8,9 @@\n \n     private Integer entrezGeneId;\n     private String hugoGeneSymbol;\n-    private Integer numberOfAlteredCases;\n+    private Integer numberOfAlteredCases = 0;", "originalCommit": "5090ce892ae67822bdb57425483cf2ac6d395a64", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9a81ad8264b81b37ac782124e974f2367090bc75", "chunk": "diff --git a/model/src/main/java/org/cbioportal/model/AlterationCountByGene.java b/model/src/main/java/org/cbioportal/model/AlterationCountByGene.java\nindex 506481a58..702db2c30 100644\n--- a/model/src/main/java/org/cbioportal/model/AlterationCountByGene.java\n+++ b/model/src/main/java/org/cbioportal/model/AlterationCountByGene.java\n\n@@ -8,9 +8,9 @@ public class AlterationCountByGene implements Serializable {\n \n     private Integer entrezGeneId;\n     private String hugoGeneSymbol;\n-    private Integer numberOfAlteredCases = 0;\n+    private Integer numberOfAlteredCases;\n     private Integer totalCount;\n-    private Integer numberOfProfiledCases = 0;\n+    private Integer numberOfProfiledCases;\n     private BigDecimal qValue;\n     private Set<String> matchingGenePanelIds;\n \n"}}, {"oid": "9a81ad8264b81b37ac782124e974f2367090bc75", "url": "https://github.com/cBioPortal/cbioportal/commit/9a81ad8264b81b37ac782124e974f2367090bc75", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-01-24T19:17:15Z", "type": "forcePushed"}, {"oid": "5831911b93a6dffd0a7470b7dd649651627e05b1", "url": "https://github.com/cBioPortal/cbioportal/commit/5831911b93a6dffd0a7470b7dd649651627e05b1", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-02-06T19:05:48Z", "type": "forcePushed"}, {"oid": "783b2f3466eb0b456aeb273dd61dc76c929c1422", "url": "https://github.com/cBioPortal/cbioportal/commit/783b2f3466eb0b456aeb273dd61dc76c929c1422", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-02-06T19:29:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MTg3Nw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r376141877", "bodyText": "@kalletlak might be good to add some tests here for groups with no alterations if possible? Or otherwise maybe file an issue that we need a E2E test for it? I'm not sure how our suite of current group comparison e2e tests is looking, maybe we can easily add this one?", "author": "inodb", "createdAt": "2020-02-06T23:34:22Z", "path": "service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java", "diffHunk": "@@ -113,7 +113,7 @@ public void calculate() throws Exception {\n         \n         profiledSamplesCounter.calculate(\n                 Arrays.asList(MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID),\n-                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true);\n+                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true, false);", "originalCommit": "783b2f3466eb0b456aeb273dd61dc76c929c1422", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI2ODM1Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377268352", "bodyText": "added", "author": "kalletlak", "createdAt": "2020-02-10T19:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MTg3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "chunk": "diff --git a/service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java b/service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java\nindex 1aa21e0e0..6281343ee 100644\n--- a/service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java\n+++ b/service/src/test/java/org/cbioportal/service/util/ProfiledCasesCounterTest.java\n\n@@ -119,5 +123,16 @@ public class ProfiledCasesCounterTest {\n         Assert.assertEquals(new Integer(2), alterationCounts.get(1).getNumberOfProfiledCases());\n         Assert.assertEquals(new Integer(2), alterationCounts.get(2).getNumberOfProfiledCases());\n \n+        profiledSamplesCounter.calculate(\n+                Arrays.asList(MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID, MOLECULAR_PROFILE_ID),\n+                Arrays.asList(SAMPLE_ID_1, SAMPLE_ID_2, SAMPLE_ID_3), alterationCounts, true, true);\n+\n+        Assert.assertEquals(4, alterationCounts.size());\n+        Assert.assertEquals(new Integer(2), alterationCounts.get(0).getNumberOfProfiledCases());\n+        Assert.assertEquals(new Integer(2), alterationCounts.get(1).getNumberOfProfiledCases());\n+        Assert.assertEquals(new Integer(2), alterationCounts.get(2).getNumberOfProfiledCases());\n+        Assert.assertEquals(new Integer(2), alterationCounts.get(3).getNumberOfProfiledCases());\n+        Assert.assertEquals(new Integer(4), alterationCounts.get(3).getEntrezGeneId());\n+\n     }\n }\n"}}, {"oid": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "url": "https://github.com/cBioPortal/cbioportal/commit/2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-02-10T19:26:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTEyNg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377299126", "bodyText": "there should be a space between \"if\" and the open parenthesis", "author": "sheridancbio", "createdAt": "2020-02-10T20:30:09Z", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {", "originalCommit": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\nindex bb456b9c9..db5ed7ad4 100644\n--- a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n+++ b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n\n@@ -76,14 +76,15 @@ public class ProfiledCasesCounter<T extends AlterationCountByGene> {\n             }\n             alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n-        \n-        if(includeMissingAlterationsFromGenePanel) {\n-            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n-                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+        if (includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration = alterationCounts.stream()\n+                    .collect(Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x -> true));\n \n             geneGenePanelMap.entrySet().forEach(entry -> {\n                 Integer entrezGeneId = entry.getKey();\n-                // add alterationCount object where there are no alterations but have genePanel object\n+                // add alterationCount object where there are no alterations but have genePanel\n+                // object\n                 if (!genesWithAlteration.containsKey(entrezGeneId)) {\n                     AlterationCountByGene alterationCountByGene = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTU0NQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377299545", "bodyText": "Wouldn't it be simpler to represent this as Set<Integer> genesWithAlteration?\nalso .. two spaces after =", "author": "sheridancbio", "createdAt": "2020-02-10T20:31:06Z", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(", "originalCommit": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNzc2Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377317762", "bodyText": "it would be efficient to check if that gene already has alteration at line 87 if its a Map", "author": "kalletlak", "createdAt": "2020-02-10T21:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5OTU0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\nindex bb456b9c9..db5ed7ad4 100644\n--- a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n+++ b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n\n@@ -76,14 +76,15 @@ public class ProfiledCasesCounter<T extends AlterationCountByGene> {\n             }\n             alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n-        \n-        if(includeMissingAlterationsFromGenePanel) {\n-            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n-                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+        if (includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration = alterationCounts.stream()\n+                    .collect(Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x -> true));\n \n             geneGenePanelMap.entrySet().forEach(entry -> {\n                 Integer entrezGeneId = entry.getKey();\n-                // add alterationCount object where there are no alterations but have genePanel object\n+                // add alterationCount object where there are no alterations but have genePanel\n+                // object\n                 if (!genesWithAlteration.containsKey(entrezGeneId)) {\n                     AlterationCountByGene alterationCountByGene = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMwMTI5OA==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377301298", "bodyText": "two spaces after =", "author": "sheridancbio", "createdAt": "2020-02-10T20:34:57Z", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n+                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+            geneGenePanelMap.entrySet().forEach(entry -> {\n+                Integer entrezGeneId = entry.getKey();\n+                // add alterationCount object where there are no alterations but have genePanel object\n+                if (!genesWithAlteration.containsKey(entrezGeneId)) {\n+                    AlterationCountByGene alterationCountByGene = null;\n+\n+                    if (alterationCounts.get(0) instanceof MutationCountByGene) {\n+                        alterationCountByGene = new MutationCountByGene();\n+                    } else {\n+                        alterationCountByGene = new CopyNumberCountByGene();\n+                    }\n+\n+                    alterationCountByGene.setEntrezGeneId(entrezGeneId);\n+                    \n+                    Set<String> totalProfiledCases = new HashSet<String>();\n+                    Set<String> allMatchingGenePanelIds =  new HashSet<String>();", "originalCommit": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\nindex bb456b9c9..db5ed7ad4 100644\n--- a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n+++ b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n\n@@ -76,14 +76,15 @@ public class ProfiledCasesCounter<T extends AlterationCountByGene> {\n             }\n             alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n-        \n-        if(includeMissingAlterationsFromGenePanel) {\n-            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n-                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+        if (includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration = alterationCounts.stream()\n+                    .collect(Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x -> true));\n \n             geneGenePanelMap.entrySet().forEach(entry -> {\n                 Integer entrezGeneId = entry.getKey();\n-                // add alterationCount object where there are no alterations but have genePanel object\n+                // add alterationCount object where there are no alterations but have genePanel\n+                // object\n                 if (!genesWithAlteration.containsKey(entrezGeneId)) {\n                     AlterationCountByGene alterationCountByGene = null;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTExMw==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377311113", "bodyText": "Here we add back into the response those genes which had no mutation events anywhere .. but which were present in some panel that was used in the profiles for this study (meaning ... at least one sample was profiled for that gene)\nThis will recover the records in the cbioportal mutation table which say \"gene X was profiled and zero mutations were found\"", "author": "sheridancbio", "createdAt": "2020-02-10T20:55:41Z", "path": "service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java", "diffHunk": "@@ -69,15 +68,51 @@ public void calculate(List<String> molecularProfileIds, List<String> sampleIds,\n                 for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n                     allMatchingGenePanelIds.add(genePanel.getStableId());\n                     totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n-                    totalProfiledCases.addAll(casesWithoutPanelData);\n                 }\n+                totalProfiledCases.addAll(casesWithoutPanelData);\n                 alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             } else {\n                 alterationCountByGene.setNumberOfProfiledCases(profiledCasesCount);\n-                alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n             }\n+            alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n+        \n+        if(includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n+                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+            geneGenePanelMap.entrySet().forEach(entry -> {\n+                Integer entrezGeneId = entry.getKey();\n+                // add alterationCount object where there are no alterations but have genePanel object\n+                if (!genesWithAlteration.containsKey(entrezGeneId)) {\n+                    AlterationCountByGene alterationCountByGene = null;\n+\n+                    if (alterationCounts.get(0) instanceof MutationCountByGene) {\n+                        alterationCountByGene = new MutationCountByGene();\n+                    } else {\n+                        alterationCountByGene = new CopyNumberCountByGene();\n+                    }\n+\n+                    alterationCountByGene.setEntrezGeneId(entrezGeneId);\n+                    \n+                    Set<String> totalProfiledCases = new HashSet<String>();\n+                    Set<String> allMatchingGenePanelIds =  new HashSet<String>();\n+                    for (GenePanel genePanel : geneGenePanelMap.get(entrezGeneId)) {\n+                        allMatchingGenePanelIds.add(genePanel.getStableId());\n+                        totalProfiledCases.addAll(casesWithDataInGenePanel.get(genePanel.getStableId()));\n+                    }\n+                    totalProfiledCases.addAll(casesWithoutPanelData);\n+\n+                    alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n+                    alterationCountByGene.setNumberOfProfiledCases(totalProfiledCases.size());\n+                    alterationCountByGene.setNumberOfAlteredCases(0);\n+\n+                    alterationCounts.add((T) alterationCountByGene);", "originalCommit": "2ec38e5a0a299ffd4837d0cbb90bd5f569426474", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNjQxMg==", "url": "https://github.com/cBioPortal/cbioportal/pull/7036#discussion_r377316412", "bodyText": "These genes are not show in study view gene tables. includeMissingAlterationsFromGenePanel is set to false when invoking it from study view controller", "author": "kalletlak", "createdAt": "2020-02-10T21:06:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxMTExMw=="}], "type": "inlineReview", "revised_code": {"commit": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "chunk": "diff --git a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\nindex bb456b9c9..db5ed7ad4 100644\n--- a/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n+++ b/service/src/main/java/org/cbioportal/service/util/ProfiledCasesCounter.java\n\n@@ -76,14 +76,15 @@ public class ProfiledCasesCounter<T extends AlterationCountByGene> {\n             }\n             alterationCountByGene.setMatchingGenePanelIds(allMatchingGenePanelIds);\n         }\n-        \n-        if(includeMissingAlterationsFromGenePanel) {\n-            Map<Integer, Boolean> genesWithAlteration =  alterationCounts.stream().collect(\n-                    Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x-> true));\n+\n+        if (includeMissingAlterationsFromGenePanel) {\n+            Map<Integer, Boolean> genesWithAlteration = alterationCounts.stream()\n+                    .collect(Collectors.toMap(AlterationCountByGene::getEntrezGeneId, x -> true));\n \n             geneGenePanelMap.entrySet().forEach(entry -> {\n                 Integer entrezGeneId = entry.getKey();\n-                // add alterationCount object where there are no alterations but have genePanel object\n+                // add alterationCount object where there are no alterations but have genePanel\n+                // object\n                 if (!genesWithAlteration.containsKey(entrezGeneId)) {\n                     AlterationCountByGene alterationCountByGene = null;\n \n"}}, {"oid": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "url": "https://github.com/cBioPortal/cbioportal/commit/dc519c6addba3cb783406fe6eda150fe8ca72c8a", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-02-10T21:11:00Z", "type": "commit"}, {"oid": "dc519c6addba3cb783406fe6eda150fe8ca72c8a", "url": "https://github.com/cBioPortal/cbioportal/commit/dc519c6addba3cb783406fe6eda150fe8ca72c8a", "message": "Enrichments: Fix profiled cases count for groups with no alterations", "committedDate": "2020-02-10T21:11:00Z", "type": "forcePushed"}]}