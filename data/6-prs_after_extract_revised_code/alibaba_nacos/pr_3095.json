{"pr_number": 3095, "pr_title": "[ISSUE #3094]abstract create nacos restTemplate factory", "pr_createdAt": "2020-06-17T08:53:23Z", "pr_url": "https://github.com/alibaba/nacos/pull/3095", "timeline": [{"oid": "f679f53b3ce1484054cb9ef83981dda98eacdc28", "url": "https://github.com/alibaba/nacos/commit/f679f53b3ce1484054cb9ef83981dda98eacdc28", "message": "abstract create nacos restTemplate factory, allowing users to customize the commonly used http client config", "committedDate": "2020-06-17T07:47:55Z", "type": "commit"}, {"oid": "f102545224af750e44f38cefeeea69015f4e11b4", "url": "https://github.com/alibaba/nacos/commit/f102545224af750e44f38cefeeea69015f4e11b4", "message": "Merge branch 'develop-upstream' into refactor_http_client\n\n# Conflicts:\n#\tcommon/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java", "committedDate": "2020-06-17T07:56:43Z", "type": "commit"}, {"oid": "0e75be735ffaf3c3482149195cb48e0715fbb8c1", "url": "https://github.com/alibaba/nacos/commit/0e75be735ffaf3c3482149195cb48e0715fbb8c1", "message": "add class file license.", "committedDate": "2020-06-17T08:03:33Z", "type": "commit"}, {"oid": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "url": "https://github.com/alibaba/nacos/commit/ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "message": "change class file name", "committedDate": "2020-06-17T08:45:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5NTk4MQ==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441395981", "bodyText": "Maybe rename to HttpClientBeanCache or HttpClientBeanHolder will be better.", "author": "KomachiSion", "createdAt": "2020-06-17T09:04:47Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nsimilarity index 94%\nrename from common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\nrename to common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nindex 7a5ce477a..059350ac0 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\n\n@@ -36,7 +36,7 @@ import java.util.concurrent.atomic.AtomicBoolean;\n  * @date 2020/6/16\n  */\n @SuppressWarnings(\"all\")\n-public final class HttpClientBeanFactory {\n+public final class HttpClientBeanHolder {\n \n     private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5NzE4OQ==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441397189", "bodyText": "merge these line to single line to remove tmp variable.\nlike return getNacosRestTemplate(new DefaultHttpClientConfig());", "author": "KomachiSion", "createdAt": "2020-06-17T09:06:45Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n+\n+    private static final int TIMEOUT = Integer.getInteger(\"nacos.http.timeout\", 5000);\n+\n+    private static HttpClientConfig HTTP_CLIENT_CONFIG = HttpClientConfig.builder()\n+        .setConTimeOutMillis(TIMEOUT).setReadTimeOutMillis(TIMEOUT >> 1).build();\n+\n+    private static final Map<String, NacosRestTemplate> singletonRest = new HashMap<String, NacosRestTemplate>(10);\n+    private static final Map<String, NacosAsyncRestTemplate> singletonAsyncRest = new HashMap<String, NacosAsyncRestTemplate>(10);\n+\n+    private static final AtomicBoolean alreadyShutdown = new AtomicBoolean(false);\n+\n+    static {\n+        ThreadUtils.addShutdownHook(new Runnable() {\n+            @Override\n+            public void run() {\n+                shutdown();\n+            }\n+        });\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosRestTemplate(httpClientFactory);", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nsimilarity index 94%\nrename from common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\nrename to common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nindex 7a5ce477a..059350ac0 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\n\n@@ -36,7 +36,7 @@ import java.util.concurrent.atomic.AtomicBoolean;\n  * @date 2020/6/16\n  */\n @SuppressWarnings(\"all\")\n-public final class HttpClientBeanFactory {\n+public final class HttpClientBeanHolder {\n \n     private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5ODAwNQ==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441398005", "bodyText": "Same as above description.", "author": "KomachiSion", "createdAt": "2020-06-17T09:08:10Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Create a rest template\n+ * to ensure that each custom client config and rest template are in one-to-one correspondence\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/16\n+ */\n+@SuppressWarnings(\"all\")\n+public final class HttpClientBeanFactory {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n+\n+    private static final int TIMEOUT = Integer.getInteger(\"nacos.http.timeout\", 5000);\n+\n+    private static HttpClientConfig HTTP_CLIENT_CONFIG = HttpClientConfig.builder()\n+        .setConTimeOutMillis(TIMEOUT).setReadTimeOutMillis(TIMEOUT >> 1).build();\n+\n+    private static final Map<String, NacosRestTemplate> singletonRest = new HashMap<String, NacosRestTemplate>(10);\n+    private static final Map<String, NacosAsyncRestTemplate> singletonAsyncRest = new HashMap<String, NacosAsyncRestTemplate>(10);\n+\n+    private static final AtomicBoolean alreadyShutdown = new AtomicBoolean(false);\n+\n+    static {\n+        ThreadUtils.addShutdownHook(new Runnable() {\n+            @Override\n+            public void run() {\n+                shutdown();\n+            }\n+        });\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosRestTemplate(httpClientFactory);\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate(HttpClientFactory httpClientFactory) {\n+        if (httpClientFactory == null) {\n+            throw new NullPointerException(\"httpClientFactory is null\");\n+        }\n+        String factoryName = httpClientFactory.getClass().getName();\n+        NacosRestTemplate nacosRestTemplate = singletonRest.get(factoryName);\n+        if (nacosRestTemplate == null) {\n+            synchronized (singletonRest) {\n+                nacosRestTemplate = singletonRest.get(factoryName);\n+                if (nacosRestTemplate != null) {\n+                    return nacosRestTemplate;\n+                }\n+                nacosRestTemplate = httpClientFactory.createNacosRestTemplate();\n+                singletonRest.put(factoryName, nacosRestTemplate);\n+            }\n+        }\n+        return nacosRestTemplate;\n+    }\n+\n+    public static NacosAsyncRestTemplate getNacosAsyncRestTemplate() {\n+        HttpClientFactory httpClientFactory = new DefaultHttpClientConfig();\n+        return getNacosAsyncRestTemplate(httpClientFactory);", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nsimilarity index 94%\nrename from common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\nrename to common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\nindex 7a5ce477a..059350ac0 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanFactory.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientBeanHolder.java\n\n@@ -36,7 +36,7 @@ import java.util.concurrent.atomic.AtomicBoolean;\n  * @date 2020/6/16\n  */\n @SuppressWarnings(\"all\")\n-public final class HttpClientBeanFactory {\n+public final class HttpClientBeanHolder {\n \n     private static final Logger logger = LoggerFactory.getLogger(HttpClientManager.class);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNDQ3Ng==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441404476", "bodyText": "AbstractHttpClientFactory is enough.", "author": "KomachiSion", "createdAt": "2020-06-17T09:18:42Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+import com.alibaba.nacos.common.http.client.DefaultAsyncHttpClientRequest;\n+import com.alibaba.nacos.common.http.client.DefaultHttpClientRequest;\n+import com.alibaba.nacos.common.http.client.NacosAsyncRestTemplate;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.impl.nio.client.HttpAsyncClients;\n+\n+/**\n+ * AbstractHttpClientFactory\n+ * Let the creator only specify the http client config\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/15\n+ */\n+public abstract class AbstractHttpClientFactoryWrapper implements HttpClientFactory {", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java b/common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java\nsimilarity index 96%\nrename from common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java\nrename to common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java\nindex c7e5723b2..9ad2edc28 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactoryWrapper.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/AbstractHttpClientFactory.java\n\n@@ -31,7 +31,7 @@ import org.apache.http.impl.nio.client.HttpAsyncClients;\n  * @author mai.jh\n  * @date 2020/6/15\n  */\n-public abstract class AbstractHttpClientFactoryWrapper implements HttpClientFactory {\n+public abstract class AbstractHttpClientFactory implements HttpClientFactory {\n \n     @Override\n     public final NacosRestTemplate createNacosRestTemplate() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNDk1NQ==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441404955", "bodyText": "NamingHttpClientFactory will be better. NamingHttpClientConfig make other think it is a config pojo.", "author": "KomachiSion", "createdAt": "2020-06-17T09:19:33Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.client.naming.net;\n+\n+import com.alibaba.nacos.common.http.*;\n+import com.alibaba.nacos.common.http.client.NacosRestTemplate;\n+\n+/**\n+ * http Manager\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/14\n+ */\n+public class NamingHttpClientManager {\n+\n+    private static final int READ_TIME_OUT_MILLIS = Integer\n+        .getInteger(\"com.alibaba.nacos.client.naming.rtimeout\", 50000);\n+    private static final int CON_TIME_OUT_MILLIS = Integer\n+        .getInteger(\"com.alibaba.nacos.client.naming.ctimeout\", 3000);\n+    private static final boolean ENABLE_HTTPS = Boolean\n+        .getBoolean(\"com.alibaba.nacos.client.naming.tls.enable\");\n+    private static final int MAX_REDIRECTS = 5;\n+\n+    private static final HttpClientFactory HTTP_CLIENT_FACTORY = new NamingHttpClientConfig();\n+\n+    public static String getPrefix() {\n+        if (ENABLE_HTTPS) {\n+            return \"https://\";\n+        }\n+        return \"http://\";\n+    }\n+\n+    public static NacosRestTemplate getNacosRestTemplate() {\n+        return HttpClientBeanFactory.getNacosRestTemplate(HTTP_CLIENT_FACTORY);\n+    }\n+\n+    private static class NamingHttpClientConfig extends AbstractHttpClientFactoryWrapper {", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java b/client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java\nindex 3a67cca78..359ec9dff 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/naming/net/NamingHttpClientManager.java\n\n@@ -35,7 +35,7 @@ public class NamingHttpClientManager {\n         .getBoolean(\"com.alibaba.nacos.client.naming.tls.enable\");\n     private static final int MAX_REDIRECTS = 5;\n \n-    private static final HttpClientFactory HTTP_CLIENT_FACTORY = new NamingHttpClientConfig();\n+    private static final HttpClientFactory HTTP_CLIENT_FACTORY = new NamingHttpClientFactory();\n \n     public static String getPrefix() {\n         if (ENABLE_HTTPS) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNTU3Nw==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441405577", "bodyText": "Same problem as NamingHttpClientConfig. DefaultHttpClientFactory will be better.", "author": "KomachiSion", "createdAt": "2020-06-17T09:20:28Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http;\n+\n+/**\n+ * default http client factory\n+ *\n+ * @author mai.jh\n+ * @date 2020/6/15\n+ */\n+public class DefaultHttpClientConfig extends AbstractHttpClientFactoryWrapper {", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java b/common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientFactory.java\nsimilarity index 92%\nrename from common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java\nrename to common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientFactory.java\nindex b1b10d363..08d0aadbb 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientConfig.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/DefaultHttpClientFactory.java\n\n@@ -22,7 +22,7 @@ package com.alibaba.nacos.common.http;\n  * @author mai.jh\n  * @date 2020/6/15\n  */\n-public class DefaultHttpClientConfig extends AbstractHttpClientFactoryWrapper {\n+public class DefaultHttpClientFactory extends AbstractHttpClientFactory {\n \n     private static final int TIMEOUT = Integer.getInteger(\"nacos.http.timeout\", 5000);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNjkzOA==", "url": "https://github.com/alibaba/nacos/pull/3095#discussion_r441406938", "bodyText": "Why add this two blank line? Please remove.", "author": "KomachiSion", "createdAt": "2020-06-17T09:22:42Z", "path": "example/src/main/java/com/alibaba/nacos/example/NamingExample.java", "diffHunk": "@@ -55,4 +55,6 @@ public void onEvent(Event event) {\n             }\n         });\n     }\n+\n+", "originalCommit": "ef7a135e9fd42281b6cfc6cb39fd40263be8d4cc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "chunk": "diff --git a/example/src/main/java/com/alibaba/nacos/example/NamingExample.java b/example/src/main/java/com/alibaba/nacos/example/NamingExample.java\nindex ba2bc2372..8dce77eab 100644\n--- a/example/src/main/java/com/alibaba/nacos/example/NamingExample.java\n+++ b/example/src/main/java/com/alibaba/nacos/example/NamingExample.java\n\n@@ -55,6 +55,4 @@ public class NamingExample {\n             }\n         });\n     }\n-\n-\n }\n"}}, {"oid": "49b2b4fe2574d41f608936fd33962fc9f32a06b6", "url": "https://github.com/alibaba/nacos/commit/49b2b4fe2574d41f608936fd33962fc9f32a06b6", "message": "Adjust some code", "committedDate": "2020-06-17T09:33:11Z", "type": "commit"}]}