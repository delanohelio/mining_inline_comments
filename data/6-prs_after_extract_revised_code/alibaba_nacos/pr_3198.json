{"pr_number": 3198, "pr_title": "[ISSUE #3197] NacosRestTemplate enhance", "pr_createdAt": "2020-06-29T03:33:07Z", "pr_url": "https://github.com/alibaba/nacos/pull/3198", "timeline": [{"oid": "e2cfc78117729f73f8941a35617f9dfd46c0cd6e", "url": "https://github.com/alibaba/nacos/commit/e2cfc78117729f73f8941a35617f9dfd46c0cd6e", "message": "enhance nacosRestTemplate", "committedDate": "2020-06-29T03:13:51Z", "type": "commit"}, {"oid": "299b2f94ac1768096d3879b91803b88cf25cb190", "url": "https://github.com/alibaba/nacos/commit/299b2f94ac1768096d3879b91803b88cf25cb190", "message": "enhance nacosRestTemplate", "committedDate": "2020-06-29T03:26:55Z", "type": "commit"}, {"oid": "09aa8f97000982253ab4a673a6f4111035073b30", "url": "https://github.com/alibaba/nacos/commit/09aa8f97000982253ab4a673a6f4111035073b30", "message": "supplement throw exception", "committedDate": "2020-06-29T06:37:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMDMxMA==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446800310", "bodyText": "I think the method name is not good.", "author": "KomachiSion", "createdAt": "2020-06-29T06:32:59Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java", "diffHunk": "@@ -69,7 +71,24 @@ static HttpRequestBase build(URI uri, String method, RequestHttpEntity requestHt\n         } else {\n             httpMethod.initEntity(requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));\n         }\n-        return httpMethod.getRequestBase();\n+        HttpRequestBase requestBase = httpMethod.getRequestBase();\n+        getConfig(requestBase, requestHttpEntity.getHttpClientConfig());\n+        return requestBase;\n+    }\n+    \n+    /**\n+     * Replace the HTTP config created by default with the HTTP config specified in the request\n+     *\n+     * @param requestBase requestBase\n+     * @param httpClientConfig http config\n+     */\n+    private static void getConfig(HttpRequestBase requestBase, HttpClientConfig httpClientConfig) {", "originalCommit": "299b2f94ac1768096d3879b91803b88cf25cb190", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java b/common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java\nindex 1e5881271..0ab4681c3 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/client/DefaultHttpClientRequest.java\n\n@@ -72,7 +72,7 @@ public class DefaultHttpClientRequest implements HttpClientRequest {\n             httpMethod.initEntity(requestHttpEntity.getBody(), headers.getValue(HttpHeaderConsts.CONTENT_TYPE));\n         }\n         HttpRequestBase requestBase = httpMethod.getRequestBase();\n-        getConfig(requestBase, requestHttpEntity.getHttpClientConfig());\n+        replaceDefaultConfig(requestBase, requestHttpEntity.getHttpClientConfig());\n         return requestBase;\n     }\n     \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNzc2Mw==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446807763", "bodyText": "iterator is a abstract name, use interceptors maybe better.", "author": "KomachiSion", "createdAt": "2020-06-29T06:51:52Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http.client;\n+\n+import com.alibaba.nacos.common.model.RequestHttpEntity;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Iterator;\n+\n+/**\n+ * Wrap http client request and perform corresponding interception\n+ *\n+ * @author mai.jh\n+ */\n+public class InterceptingHttpClientRequest implements HttpClientRequest {\n+    \n+    private final HttpClientRequest httpClientRequest;\n+    \n+    private final Iterator<HttpClientRequestInterceptor> iterator;", "originalCommit": "299b2f94ac1768096d3879b91803b88cf25cb190", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java b/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\nindex 2c7f98cde..538b627c5 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\n\n@@ -31,23 +31,24 @@ public class InterceptingHttpClientRequest implements HttpClientRequest {\n     \n     private final HttpClientRequest httpClientRequest;\n     \n-    private final Iterator<HttpClientRequestInterceptor> iterator;\n+    private final Iterator<HttpClientRequestInterceptor> interceptors;\n     \n     public InterceptingHttpClientRequest(HttpClientRequest httpClientRequest,\n-            Iterator<HttpClientRequestInterceptor> iterator) {\n+            Iterator<HttpClientRequestInterceptor> interceptors) {\n         this.httpClientRequest = httpClientRequest;\n-        this.iterator = iterator;\n+        this.interceptors = interceptors;\n     }\n     \n     @Override\n     public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity requestHttpEntity)\n             throws Exception {\n-        if (iterator.hasNext()) {\n-            HttpClientRequestInterceptor nextInterceptor = iterator.next();\n-            return nextInterceptor.intercept(uri, httpMethod, requestHttpEntity, this);\n-        } else {\n-            return httpClientRequest.execute(uri, httpMethod, requestHttpEntity);\n+        while (interceptors.hasNext()) {\n+            HttpClientRequestInterceptor nextInterceptor = interceptors.next();\n+            if (nextInterceptor.isIntercept(uri, httpMethod, requestHttpEntity)) {\n+                return nextInterceptor.intercept();\n+            }\n         }\n+        return httpClientRequest.execute(uri, httpMethod, requestHttpEntity);\n     }\n     \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMjk3OQ==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446812979", "bodyText": "change this constructer as this(null, header, query, null)?", "author": "KomachiSion", "createdAt": "2020-06-29T07:03:41Z", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;", "originalCommit": "299b2f94ac1768096d3879b91803b88cf25cb190", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\nindex dc96eb7fd..547c9680e 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n\n@@ -39,22 +39,15 @@ public class RequestHttpEntity {\n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.httpClientConfig = null;\n+        this(null, header, query);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n-        handleHeader(header);\n-        this.httpClientConfig = httpClientConfig;\n-        this.query = query;\n+       this(httpClientConfig, header, query, null);\n     }\n     \n     public RequestHttpEntity(Header header, Query query, Object body) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.body = body;\n-        this.httpClientConfig = null;\n+        this(null, header, query, body);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query, Object body) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMzEyNA==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446813124", "bodyText": "change this constructer as this(httpClientConfig, header, query, null)?", "author": "KomachiSion", "createdAt": "2020-06-29T07:04:02Z", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;\n+    }\n+    \n+    public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n+        handleHeader(header);\n+        this.httpClientConfig = httpClientConfig;\n+        this.query = query;", "originalCommit": "299b2f94ac1768096d3879b91803b88cf25cb190", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\nindex dc96eb7fd..547c9680e 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n\n@@ -39,22 +39,15 @@ public class RequestHttpEntity {\n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.httpClientConfig = null;\n+        this(null, header, query);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n-        handleHeader(header);\n-        this.httpClientConfig = httpClientConfig;\n-        this.query = query;\n+       this(httpClientConfig, header, query, null);\n     }\n     \n     public RequestHttpEntity(Header header, Query query, Object body) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.body = body;\n-        this.httpClientConfig = null;\n+        this(null, header, query, body);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query, Object body) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMzIyNw==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446813227", "bodyText": "change this constructer as this(null, header, query, body)?", "author": "KomachiSion", "createdAt": "2020-06-29T07:04:16Z", "path": "common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java", "diffHunk": "@@ -31,19 +32,36 @@\n     \n     private final Header headers = Header.newInstance();\n     \n+    private final HttpClientConfig httpClientConfig;\n+    \n     private final Query query;\n     \n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n         handleHeader(header);\n         this.query = query;\n+        this.httpClientConfig = null;\n+    }\n+    \n+    public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n+        handleHeader(header);\n+        this.httpClientConfig = httpClientConfig;\n+        this.query = query;\n     }\n     \n     public RequestHttpEntity(Header header, Query query, Object body) {\n         handleHeader(header);\n         this.query = query;\n         this.body = body;\n+        this.httpClientConfig = null;", "originalCommit": "299b2f94ac1768096d3879b91803b88cf25cb190", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\nindex dc96eb7fd..547c9680e 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/model/RequestHttpEntity.java\n\n@@ -39,22 +39,15 @@ public class RequestHttpEntity {\n     private Object body;\n     \n     public RequestHttpEntity(Header header, Query query) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.httpClientConfig = null;\n+        this(null, header, query);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query) {\n-        handleHeader(header);\n-        this.httpClientConfig = httpClientConfig;\n-        this.query = query;\n+       this(httpClientConfig, header, query, null);\n     }\n     \n     public RequestHttpEntity(Header header, Query query, Object body) {\n-        handleHeader(header);\n-        this.query = query;\n-        this.body = body;\n-        this.httpClientConfig = null;\n+        this(null, header, query, body);\n     }\n     \n     public RequestHttpEntity(HttpClientConfig httpClientConfig, Header header, Query query, Object body) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgyMTA3Ng==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r446821076", "bodyText": "the Iterate method is too obscure, I suggest change this method.", "author": "KomachiSion", "createdAt": "2020-06-29T07:21:14Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.common.http.client;\n+\n+import com.alibaba.nacos.common.model.RequestHttpEntity;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.Iterator;\n+\n+/**\n+ * Wrap http client request and perform corresponding interception\n+ *\n+ * @author mai.jh\n+ */\n+public class InterceptingHttpClientRequest implements HttpClientRequest {\n+    \n+    private final HttpClientRequest httpClientRequest;\n+    \n+    private final Iterator<HttpClientRequestInterceptor> iterator;\n+    \n+    public InterceptingHttpClientRequest(HttpClientRequest httpClientRequest,\n+            Iterator<HttpClientRequestInterceptor> iterator) {\n+        this.httpClientRequest = httpClientRequest;\n+        this.iterator = iterator;\n+    }\n+    \n+    @Override\n+    public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity requestHttpEntity)\n+            throws Exception {\n+        if (iterator.hasNext()) {\n+            HttpClientRequestInterceptor nextInterceptor = iterator.next();\n+            return nextInterceptor.intercept(uri, httpMethod, requestHttpEntity, this);", "originalCommit": "09aa8f97000982253ab4a673a6f4111035073b30", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68bc5140271570307f83794695180bf4876ccb1b", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java b/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\nindex 2c7f98cde..538b627c5 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/client/InterceptingHttpClientRequest.java\n\n@@ -31,23 +31,24 @@ public class InterceptingHttpClientRequest implements HttpClientRequest {\n     \n     private final HttpClientRequest httpClientRequest;\n     \n-    private final Iterator<HttpClientRequestInterceptor> iterator;\n+    private final Iterator<HttpClientRequestInterceptor> interceptors;\n     \n     public InterceptingHttpClientRequest(HttpClientRequest httpClientRequest,\n-            Iterator<HttpClientRequestInterceptor> iterator) {\n+            Iterator<HttpClientRequestInterceptor> interceptors) {\n         this.httpClientRequest = httpClientRequest;\n-        this.iterator = iterator;\n+        this.interceptors = interceptors;\n     }\n     \n     @Override\n     public HttpClientResponse execute(URI uri, String httpMethod, RequestHttpEntity requestHttpEntity)\n             throws Exception {\n-        if (iterator.hasNext()) {\n-            HttpClientRequestInterceptor nextInterceptor = iterator.next();\n-            return nextInterceptor.intercept(uri, httpMethod, requestHttpEntity, this);\n-        } else {\n-            return httpClientRequest.execute(uri, httpMethod, requestHttpEntity);\n+        while (interceptors.hasNext()) {\n+            HttpClientRequestInterceptor nextInterceptor = interceptors.next();\n+            if (nextInterceptor.isIntercept(uri, httpMethod, requestHttpEntity)) {\n+                return nextInterceptor.intercept();\n+            }\n         }\n+        return httpClientRequest.execute(uri, httpMethod, requestHttpEntity);\n     }\n     \n     @Override\n"}}, {"oid": "68bc5140271570307f83794695180bf4876ccb1b", "url": "https://github.com/alibaba/nacos/commit/68bc5140271570307f83794695180bf4876ccb1b", "message": "Modify the iterate method of the interceptor and modify some method name", "committedDate": "2020-06-29T07:45:03Z", "type": "commit"}, {"oid": "0a6346c3247328f9579bbdfce0ae837819b563d7", "url": "https://github.com/alibaba/nacos/commit/0a6346c3247328f9579bbdfce0ae837819b563d7", "message": "Adjust the way to get HttpClientRequest implement in NacosRestTempalte", "committedDate": "2020-07-10T08:37:02Z", "type": "commit"}, {"oid": "d19409ea93d8fd5a1e746d21f2f520ed56dce865", "url": "https://github.com/alibaba/nacos/commit/d19409ea93d8fd5a1e746d21f2f520ed56dce865", "message": "Merge branch 'develop-upstrem' into nacos_resttemplate_enhance\n\n# Conflicts:\n#\tcommon/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "committedDate": "2020-07-11T02:36:10Z", "type": "commit"}, {"oid": "cc0888f88b53f83b2e034dc9faa10e9f13bc354b", "url": "https://github.com/alibaba/nacos/commit/cc0888f88b53f83b2e034dc9faa10e9f13bc354b", "message": "Fix code style issue", "committedDate": "2020-07-11T02:50:07Z", "type": "commit"}, {"oid": "0b4038d769034a109682c223d7e2e3e6c867d7ba", "url": "https://github.com/alibaba/nacos/commit/0b4038d769034a109682c223d7e2e3e6c867d7ba", "message": "Fix code style issue", "committedDate": "2020-07-11T02:50:40Z", "type": "commit"}, {"oid": "5caa7c89ec5542904d642a63e220b9eeeb6b1ba9", "url": "https://github.com/alibaba/nacos/commit/5caa7c89ec5542904d642a63e220b9eeeb6b1ba9", "message": "Fix code style issue", "committedDate": "2020-07-11T03:03:09Z", "type": "commit"}, {"oid": "2abb429da398d56943c98b5fd071e6e6071367c4", "url": "https://github.com/alibaba/nacos/commit/2abb429da398d56943c98b5fd071e6e6071367c4", "message": "Fix code style issue", "committedDate": "2020-07-11T03:24:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4OTgyNQ==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r453389825", "bodyText": "Should we print the interceptor name or class name?", "author": "KomachiSion", "createdAt": "2020-07-13T01:16:54Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "diffHunk": "@@ -336,6 +460,16 @@ public NacosRestTemplate(HttpClientRequest requestClient) {\n         }\n     }\n     \n+    private HttpClientRequest requestClient() {\n+        if (CollectionUtils.isNotEmpty(interceptors)) {\n+            if (LOGGER.isDebugEnabled()) {\n+                LOGGER.debug(\"Execute via interceptor\");", "originalCommit": "2abb429da398d56943c98b5fd071e6e6071367c4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxNTAxNw==", "url": "https://github.com/alibaba/nacos/pull/3198#discussion_r453415017", "bodyText": "okay", "author": "Maijh97", "createdAt": "2020-07-13T03:23:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM4OTgyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "daee2739936724b9b970f8fc8f9db3299b5a768e", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java b/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java\nindex f2995f926..56e45025b 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java\n\n@@ -463,7 +463,7 @@ public class NacosRestTemplate {\n     private HttpClientRequest requestClient() {\n         if (CollectionUtils.isNotEmpty(interceptors)) {\n             if (LOGGER.isDebugEnabled()) {\n-                LOGGER.debug(\"Execute via interceptor\");\n+                LOGGER.info(\"Execute via interceptors :{}\", interceptors);\n             }\n             return new InterceptingHttpClientRequest(requestClient, interceptors.iterator());\n         }\n"}}, {"oid": "daee2739936724b9b970f8fc8f9db3299b5a768e", "url": "https://github.com/alibaba/nacos/commit/daee2739936724b9b970f8fc8f9db3299b5a768e", "message": "Log output change", "committedDate": "2020-07-13T03:22:52Z", "type": "commit"}, {"oid": "d167fcb20493f6ee73ee11afe57fbe48e64b555d", "url": "https://github.com/alibaba/nacos/commit/d167fcb20493f6ee73ee11afe57fbe48e64b555d", "message": "Merge branch 'develop-upstrem' into nacos_resttemplate_enhance\n\n# Conflicts:\n#\tcommon/src/main/java/com/alibaba/nacos/common/http/client/NacosRestTemplate.java", "committedDate": "2020-07-13T05:10:46Z", "type": "commit"}]}