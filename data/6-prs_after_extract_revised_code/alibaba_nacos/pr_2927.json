{"pr_number": 2927, "pr_title": "[ISSUE#1815]Adding lifecycle interface and resolve the service downtime caused by thread leak ", "pr_createdAt": "2020-05-31T04:24:42Z", "pr_url": "https://github.com/alibaba/nacos/pull/2927", "timeline": [{"oid": "0ddbe7d26eaceeaca3441dfebe4bf5e26c0fd087", "url": "https://github.com/alibaba/nacos/commit/0ddbe7d26eaceeaca3441dfebe4bf5e26c0fd087", "message": "Merge pull request #2875 from alibaba/develop\n\nupdate 1.3.0 beta", "committedDate": "2020-05-25T06:19:37Z", "type": "commit"}, {"oid": "886fe6de00cdcefda6c9434c9211c3da40fc2166", "url": "https://github.com/alibaba/nacos/commit/886fe6de00cdcefda6c9434c9211c3da40fc2166", "message": "[#1815]define LifeCycle interface and related abstract class.", "committedDate": "2020-05-29T06:12:32Z", "type": "commit"}, {"oid": "6981fbc57641b953afd1e42cad2827e27c8ae390", "url": "https://github.com/alibaba/nacos/commit/6981fbc57641b953afd1e42cad2827e27c8ae390", "message": "[#1815]add ResourceLifeCycleManager,adjust some code and fix some unit test cases.", "committedDate": "2020-05-29T11:10:06Z", "type": "commit"}, {"oid": "6d1baed235386290ed5bac012865d5949344fe98", "url": "https://github.com/alibaba/nacos/commit/6d1baed235386290ed5bac012865d5949344fe98", "message": "[#1815]add the related lifecycle test cases codes.", "committedDate": "2020-05-31T04:20:20Z", "type": "commit"}, {"oid": "2cb690a6a0ee5eead744bb56e123a09b1ca012fc", "url": "https://github.com/alibaba/nacos/commit/2cb690a6a0ee5eead744bb56e123a09b1ca012fc", "message": "[#1815]add class file license.", "committedDate": "2020-05-31T05:26:06Z", "type": "commit"}, {"oid": "ab3b234987458a492eb52738764542c085953c85", "url": "https://github.com/alibaba/nacos/commit/ab3b234987458a492eb52738764542c085953c85", "message": "[#1815]add class file license.", "committedDate": "2020-05-31T05:26:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzUwMQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432913501", "bodyText": "The thread pool shutdown code should sink into ThreadUtils", "author": "chuntaojun", "createdAt": "2020-05-31T06:09:56Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "diffHunk": "@@ -329,7 +315,57 @@ private void initMaxRetry(Properties properties) {\n     }\n \n     @Override\n-    public synchronized void start() throws NacosException {\n+    protected void doStart() throws Exception {\n+        LOGGER.info(\"do start begin\");\n+\n+        // init executorService\n+        this.executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {\n+            @Override\n+            public Thread newThread(Runnable r) {\n+                Thread t = new Thread(r);\n+                t.setName(\"com.alibaba.nacos.client.config.security.updater\");\n+                t.setDaemon(true);\n+                return t;\n+            }\n+        });\n+\n+        this.executorService.scheduleWithFixedDelay(new Runnable() {\n+            @Override\n+            public void run() {\n+                securityProxy.login(serverListMgr.getServerUrls());\n+            }\n+        }, 0, securityInfoRefreshIntervalMills, TimeUnit.MILLISECONDS);\n+\n+        LOGGER.info(\"do start end\");\n+    }\n+\n+    @Override\n+    protected void doStop() throws Exception {", "originalCommit": "ab3b234987458a492eb52738764542c085953c85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d6dd8f41b362967ec9d19a041a9bc9b2ab76095", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\nindex 4aca49c4e..b1c1e102b 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n\n@@ -314,55 +335,6 @@ public class ServerHttpAgent extends AbstractLifeCycle implements HttpAgent {\n         maxRetry = NumberUtils.toInt(String.valueOf(properties.get(PropertyKeyConst.MAX_RETRY)), Constants.MAX_RETRY);\n     }\n \n-    @Override\n-    protected void doStart() throws Exception {\n-        LOGGER.info(\"do start begin\");\n-\n-        // init executorService\n-        this.executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {\n-            @Override\n-            public Thread newThread(Runnable r) {\n-                Thread t = new Thread(r);\n-                t.setName(\"com.alibaba.nacos.client.config.security.updater\");\n-                t.setDaemon(true);\n-                return t;\n-            }\n-        });\n-\n-        this.executorService.scheduleWithFixedDelay(new Runnable() {\n-            @Override\n-            public void run() {\n-                securityProxy.login(serverListMgr.getServerUrls());\n-            }\n-        }, 0, securityInfoRefreshIntervalMills, TimeUnit.MILLISECONDS);\n-\n-        LOGGER.info(\"do start end\");\n-    }\n-\n-    @Override\n-    protected void doStop() throws Exception {\n-        LOGGER.info(\"do stop begin\");\n-\n-        this.executorService.shutdown();\n-        int retry = 3;\n-        while (retry > 0) {\n-            retry --;\n-            try {\n-                if (this.executorService.awaitTermination(10, TimeUnit.SECONDS)) {\n-                    return;\n-                }\n-            } catch (InterruptedException e) {\n-                this.executorService.shutdownNow();\n-                Thread.interrupted();\n-            } catch (Throwable ex) {\n-                LOGGER.error(\"shutdown the executor has error : {}\", ex);\n-            }\n-            this.executorService.shutdownNow();\n-        }\n-\n-        LOGGER.info(\"do stop end\");\n-    }\n-\n     @Override\n     public void fetchServerIpList() throws NacosException {\n         // fetch server address urls list\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzY1Nw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432913657", "bodyText": "New Object() may be executed multiple times", "author": "chuntaojun", "createdAt": "2020-05-31T06:12:20Z", "path": "common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.nacos.common.lifecycle;\n+\n+import com.alibaba.nacos.common.utils.ShutdownUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * A class to manage every instances' life cycle which register into it.\n+ * @author zongtanghu\n+ *\n+ */\n+public final class ResourceLifeCycleManager {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ResourceLifeCycleManager.class);\n+\n+    /**\n+     * <Object instance...>\n+     */\n+    private List<AbstractLifeCycle> lifeCycleResources;\n+\n+    /**\n+     * Map<Object instance, Object>\n+     */\n+    private Map<AbstractLifeCycle, Object> lockers = new ConcurrentHashMap<AbstractLifeCycle, Object>(8);\n+\n+    private static final ResourceLifeCycleManager INSTANCE = new ResourceLifeCycleManager();\n+\n+    private static final AtomicBoolean CLOSED = new AtomicBoolean(false);\n+\n+    static {\n+        INSTANCE.init();\n+        ShutdownUtils.addShutdownHook(new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                LOGGER.warn(\"[LifeCycleManager] Start destroying Every Instance\");\n+                shutdown();\n+                LOGGER.warn(\"[LifeCycleManager] Destruction of the end\");\n+            }\n+        }));\n+    }\n+\n+    private void init() {\n+        this.lifeCycleResources = new CopyOnWriteArrayList<AbstractLifeCycle>();\n+    }\n+\n+    public static ResourceLifeCycleManager getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    /**\n+     * Destroy all of the life cycle resources which are managed by ResourceLifeCycleManager.\n+     *\n+     */\n+    public static void shutdown() {\n+        if (!CLOSED.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        List<AbstractLifeCycle> instances = INSTANCE.lifeCycleResources;\n+        for (AbstractLifeCycle instance : instances) {\n+            INSTANCE.destroy(instance);\n+        }\n+    }\n+\n+    /**\n+     * Destroy the life cycle resource instance.\n+     *\n+     * @param instance the life cycle resource instance which is need to be destroyed.\n+     */\n+    public void destroy(AbstractLifeCycle instance) {\n+        final Object monitor = lockers.get(instance);\n+        if (monitor == null) {\n+            return;\n+        }\n+        synchronized (monitor) {\n+            try {\n+                // the life cycle resources which managed are do stop method.\n+                if (LOGGER.isDebugEnabled()) {\n+                    LOGGER.debug(\"Life cycle resources do stop\");\n+                }\n+                instance.stop();\n+                INSTANCE.lifeCycleResources.remove(instance);\n+                INSTANCE.lockers.remove(instance);\n+            } catch (Exception e) {\n+                LOGGER.error(\"An exception occurred during resource do stop : {}\", e);\n+            }\n+        }\n+    }\n+\n+\n+    /**\n+     * Cancel the specified lifecycle resource instance management.\n+     *\n+     * @param instance the management life cycle resource instances;\n+     *\n+     */\n+    public void deregister(AbstractLifeCycle instance) {\n+        if (this.lifeCycleResources.contains(instance)) {\n+            final Object monitor = lockers.get(instance);\n+            synchronized (monitor) {\n+                this.lifeCycleResources.remove(instance);\n+                this.lockers.remove(instance);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Register the life cycle resource instances into the lifeCycleResources lists.\n+     *\n+     * @param instance the management life cycle resource instances.\n+     */\n+    public void register(AbstractLifeCycle instance) {\n+        if (!lifeCycleResources.contains(instance)) {\n+            synchronized(this) {", "originalCommit": "ab3b234987458a492eb52738764542c085953c85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzk4OQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432913989", "bodyText": "if (!lifeCycleResources.contains(instance)) {\n            synchronized(this) {\n                          if (!lockers.containsKey(instance)) {\n                                      lockers.put(instance, new Objects());\n                          }\n             }\n}", "author": "chuntaojun", "createdAt": "2020-05-31T06:17:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzY1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxNTE5Nw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432915197", "bodyText": "Okay I will resolve this issue in the codes.", "author": "zongtanghu", "createdAt": "2020-05-31T06:36:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzY1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java b/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\nindex dc4f1209c..4a84202ea 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\n\n@@ -37,12 +37,12 @@ public final class ResourceLifeCycleManager {\n     /**\n      * <Object instance...>\n      */\n-    private List<AbstractLifeCycle> lifeCycleResources;\n+    private List<LifeCycle> lifeCycleResources;\n \n     /**\n      * Map<Object instance, Object>\n      */\n-    private Map<AbstractLifeCycle, Object> lockers = new ConcurrentHashMap<AbstractLifeCycle, Object>(8);\n+    private Map<LifeCycle, Object> lockers = new ConcurrentHashMap<LifeCycle, Object>(8);\n \n     private static final ResourceLifeCycleManager INSTANCE = new ResourceLifeCycleManager();\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTU3Ng==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432911576", "bodyText": "use this.serverHttpAgent.start()", "author": "wangweizZZ", "createdAt": "2020-05-31T05:33:44Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java", "diffHunk": "@@ -91,22 +92,32 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par\n \n     @Override\n     public String getName() {\n-        return httpAgent.getName();\n+        return this.serverHttpAgent.getName();\n     }\n \n     @Override\n     public String getNamespace() {\n-        return httpAgent.getNamespace();\n+        return this.serverHttpAgent.getNamespace();\n     }\n \n     @Override\n     public String getTenant() {\n-        return httpAgent.getTenant();\n+        return this.serverHttpAgent.getTenant();\n     }\n \n     @Override\n     public String getEncode() {\n-        return httpAgent.getEncode();\n+        return this.serverHttpAgent.getEncode();\n+    }\n+\n+    @Override\n+    public void doStart() throws Exception {\n+        this.serverHttpAgent.doStart();", "originalCommit": "ab3b234987458a492eb52738764542c085953c85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d6dd8f41b362967ec9d19a041a9bc9b2ab76095", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\nindex e50ca659a..4b0b75e4b 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\n\n@@ -92,32 +96,32 @@ public class MetricsHttpAgent extends AbstractLifeCycle implements HttpAgent {\n \n     @Override\n     public String getName() {\n-        return this.serverHttpAgent.getName();\n+        return httpAgent.getName();\n     }\n \n     @Override\n     public String getNamespace() {\n-        return this.serverHttpAgent.getNamespace();\n+        return httpAgent.getNamespace();\n     }\n \n     @Override\n     public String getTenant() {\n-        return this.serverHttpAgent.getTenant();\n+        return httpAgent.getTenant();\n     }\n \n     @Override\n     public String getEncode() {\n-        return this.serverHttpAgent.getEncode();\n+        return httpAgent.getEncode();\n     }\n \n     @Override\n-    public void doStart() throws Exception {\n-        this.serverHttpAgent.doStart();\n+    public void close() throws IOException {\n+\n     }\n \n     @Override\n-    public void doStop() throws Exception {\n-        this.serverHttpAgent.doStop();\n+    public void shutdown() throws InterruptedException {\n+        httpAgent.shutdown();\n     }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMTc1OQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432911759", "bodyText": "use this.serverHttpAgent.stop()", "author": "wangweizZZ", "createdAt": "2020-05-31T05:37:05Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java", "diffHunk": "@@ -91,22 +92,32 @@ public HttpResult httpDelete(String path, List<String> headers, List<String> par\n \n     @Override\n     public String getName() {\n-        return httpAgent.getName();\n+        return this.serverHttpAgent.getName();\n     }\n \n     @Override\n     public String getNamespace() {\n-        return httpAgent.getNamespace();\n+        return this.serverHttpAgent.getNamespace();\n     }\n \n     @Override\n     public String getTenant() {\n-        return httpAgent.getTenant();\n+        return this.serverHttpAgent.getTenant();\n     }\n \n     @Override\n     public String getEncode() {\n-        return httpAgent.getEncode();\n+        return this.serverHttpAgent.getEncode();\n+    }\n+\n+    @Override\n+    public void doStart() throws Exception {\n+        this.serverHttpAgent.doStart();\n+    }\n+\n+    @Override\n+    public void doStop() throws Exception {\n+        this.serverHttpAgent.doStop();", "originalCommit": "ab3b234987458a492eb52738764542c085953c85", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8d6dd8f41b362967ec9d19a041a9bc9b2ab76095", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\nindex e50ca659a..4b0b75e4b 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/MetricsHttpAgent.java\n\n@@ -92,32 +96,32 @@ public class MetricsHttpAgent extends AbstractLifeCycle implements HttpAgent {\n \n     @Override\n     public String getName() {\n-        return this.serverHttpAgent.getName();\n+        return httpAgent.getName();\n     }\n \n     @Override\n     public String getNamespace() {\n-        return this.serverHttpAgent.getNamespace();\n+        return httpAgent.getNamespace();\n     }\n \n     @Override\n     public String getTenant() {\n-        return this.serverHttpAgent.getTenant();\n+        return httpAgent.getTenant();\n     }\n \n     @Override\n     public String getEncode() {\n-        return this.serverHttpAgent.getEncode();\n+        return httpAgent.getEncode();\n     }\n \n     @Override\n-    public void doStart() throws Exception {\n-        this.serverHttpAgent.doStart();\n+    public void close() throws IOException {\n+\n     }\n \n     @Override\n-    public void doStop() throws Exception {\n-        this.serverHttpAgent.doStop();\n+    public void shutdown() throws InterruptedException {\n+        httpAgent.shutdown();\n     }\n }\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzczOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432913739", "bodyText": "maybe need double check?", "author": "wangweizZZ", "createdAt": "2020-05-31T06:13:34Z", "path": "common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.nacos.common.lifecycle;\n+\n+import com.alibaba.nacos.common.utils.ShutdownUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * A class to manage every instances' life cycle which register into it.\n+ * @author zongtanghu\n+ *\n+ */\n+public final class ResourceLifeCycleManager {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ResourceLifeCycleManager.class);\n+\n+    /**\n+     * <Object instance...>\n+     */\n+    private List<AbstractLifeCycle> lifeCycleResources;\n+\n+    /**\n+     * Map<Object instance, Object>\n+     */\n+    private Map<AbstractLifeCycle, Object> lockers = new ConcurrentHashMap<AbstractLifeCycle, Object>(8);\n+\n+    private static final ResourceLifeCycleManager INSTANCE = new ResourceLifeCycleManager();\n+\n+    private static final AtomicBoolean CLOSED = new AtomicBoolean(false);\n+\n+    static {\n+        INSTANCE.init();\n+        ShutdownUtils.addShutdownHook(new Thread(new Runnable() {\n+            @Override\n+            public void run() {\n+                LOGGER.warn(\"[LifeCycleManager] Start destroying Every Instance\");\n+                shutdown();\n+                LOGGER.warn(\"[LifeCycleManager] Destruction of the end\");\n+            }\n+        }));\n+    }\n+\n+    private void init() {\n+        this.lifeCycleResources = new CopyOnWriteArrayList<AbstractLifeCycle>();\n+    }\n+\n+    public static ResourceLifeCycleManager getInstance() {\n+        return INSTANCE;\n+    }\n+\n+    /**\n+     * Destroy all of the life cycle resources which are managed by ResourceLifeCycleManager.\n+     *\n+     */\n+    public static void shutdown() {\n+        if (!CLOSED.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        List<AbstractLifeCycle> instances = INSTANCE.lifeCycleResources;\n+        for (AbstractLifeCycle instance : instances) {\n+            INSTANCE.destroy(instance);\n+        }\n+    }\n+\n+    /**\n+     * Destroy the life cycle resource instance.\n+     *\n+     * @param instance the life cycle resource instance which is need to be destroyed.\n+     */\n+    public void destroy(AbstractLifeCycle instance) {\n+        final Object monitor = lockers.get(instance);\n+        if (monitor == null) {\n+            return;\n+        }\n+        synchronized (monitor) {\n+            try {\n+                // the life cycle resources which managed are do stop method.\n+                if (LOGGER.isDebugEnabled()) {\n+                    LOGGER.debug(\"Life cycle resources do stop\");\n+                }\n+                instance.stop();\n+                INSTANCE.lifeCycleResources.remove(instance);\n+                INSTANCE.lockers.remove(instance);\n+            } catch (Exception e) {\n+                LOGGER.error(\"An exception occurred during resource do stop : {}\", e);\n+            }\n+        }\n+    }\n+\n+\n+    /**\n+     * Cancel the specified lifecycle resource instance management.\n+     *\n+     * @param instance the management life cycle resource instances;\n+     *\n+     */\n+    public void deregister(AbstractLifeCycle instance) {\n+        if (this.lifeCycleResources.contains(instance)) {\n+            final Object monitor = lockers.get(instance);\n+            synchronized (monitor) {\n+                this.lifeCycleResources.remove(instance);\n+                this.lockers.remove(instance);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Register the life cycle resource instances into the lifeCycleResources lists.\n+     *\n+     * @param instance the management life cycle resource instances.\n+     */\n+    public void register(AbstractLifeCycle instance) {\n+        if (!lifeCycleResources.contains(instance)) {\n+            synchronized(this) {\n+                lockers.put(instance, new Object());", "originalCommit": "ab3b234987458a492eb52738764542c085953c85", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxNTI3MA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r432915270", "bodyText": "Yes, you can see @chuntaojun 's review comments above.", "author": "zongtanghu", "createdAt": "2020-05-31T06:37:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzczOQ=="}], "type": "inlineReview", "revised_code": {"commit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java b/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\nindex dc4f1209c..4a84202ea 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/lifecycle/ResourceLifeCycleManager.java\n\n@@ -37,12 +37,12 @@ public final class ResourceLifeCycleManager {\n     /**\n      * <Object instance...>\n      */\n-    private List<AbstractLifeCycle> lifeCycleResources;\n+    private List<LifeCycle> lifeCycleResources;\n \n     /**\n      * Map<Object instance, Object>\n      */\n-    private Map<AbstractLifeCycle, Object> lockers = new ConcurrentHashMap<AbstractLifeCycle, Object>(8);\n+    private Map<LifeCycle, Object> lockers = new ConcurrentHashMap<LifeCycle, Object>(8);\n \n     private static final ResourceLifeCycleManager INSTANCE = new ResourceLifeCycleManager();\n \n"}}, {"oid": "8d6dd8f41b362967ec9d19a041a9bc9b2ab76095", "url": "https://github.com/alibaba/nacos/commit/8d6dd8f41b362967ec9d19a041a9bc9b2ab76095", "message": "[#1815]adjust codes and reput the lifecycle to ConfigService class level.", "committedDate": "2020-06-01T09:57:35Z", "type": "commit"}, {"oid": "2ab274216a59cf3e1765de0a940c8ae86d316869", "url": "https://github.com/alibaba/nacos/commit/2ab274216a59cf3e1765de0a940c8ae86d316869", "message": "[#1815]adjust and optimize codes, reput the lifecycle to ConfigService class level at the same time.", "committedDate": "2020-06-02T11:55:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3NjMyNw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433876327", "bodyText": "Better add the class name to see which Object is currently closed", "author": "chuntaojun", "createdAt": "2020-06-02T13:31:22Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "diffHunk": "@@ -413,22 +420,29 @@ private static String getSTSResponse() throws IOException {\n \n     @Override\n     public String getName() {\n-        return serverListMgr.getName();\n+        return this.serverListMgr.getName();\n     }\n \n     @Override\n     public String getNamespace() {\n-        return serverListMgr.getNamespace();\n+        return this.serverListMgr.getNamespace();\n     }\n \n     @Override\n     public String getTenant() {\n-        return serverListMgr.getTenant();\n+        return this.serverListMgr.getTenant();\n     }\n \n     @Override\n     public String getEncode() {\n-        return encode;\n+        return this.encode;\n+    }\n+\n+    @Override\n+    public void shutdown() throws NacosException{\n+        LOGGER.info(\"do shutdown begin\");", "originalCommit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3ODExMA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433878110", "bodyText": "Okay, I will adjust this codes.", "author": "zongtanghu", "createdAt": "2020-06-02T13:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3NjMyNw=="}], "type": "inlineReview", "revised_code": {"commit": "5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\nindex 76e9cfc90..cf6c48d0a 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n\n@@ -440,9 +440,10 @@ public class ServerHttpAgent implements HttpAgent {\n \n     @Override\n     public void shutdown() throws NacosException{\n-        LOGGER.info(\"do shutdown begin\");\n+        String className = this.getClass().getName();\n+        LOGGER.info(\"{} do shutdown begin\", className);\n         ThreadUtils.shutdown(this.executorService);\n-        LOGGER.info(\"do shutdown stop\");\n+        LOGGER.info(\"{} do shutdown stop\", className);\n     }\n \n     @SuppressWarnings(\"PMD.ClassNamingShouldBeCamelRule\")\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3ODQzMA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433878430", "bodyText": "Translate the Chinese annotation into English", "author": "chuntaojun", "createdAt": "2020-06-02T13:34:18Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java", "diffHunk": "@@ -275,39 +277,39 @@ private void checkLocalConfig(CacheData cacheData) {\n         final String dataId = cacheData.dataId;\n         final String group = cacheData.group;\n         final String tenant = cacheData.tenant;\n-        File path = LocalConfigInfoProcessor.getFailoverFile(agent.getName(), dataId, group, tenant);\n+        File path = LocalConfigInfoProcessor.getFailoverFile(this.agent.getName(), dataId, group, tenant);\n \n         // \u6ca1\u6709 -> \u6709", "originalCommit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3OTE1OQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433879159", "bodyText": "Okay, I will resolve original issue here.", "author": "zongtanghu", "createdAt": "2020-06-02T13:35:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg3ODQzMA=="}], "type": "inlineReview", "revised_code": {"commit": "5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\nindex a5c98e940..4874cf87a 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n\n@@ -279,7 +280,6 @@ public class ClientWorker implements Closeable {\n         final String tenant = cacheData.tenant;\n         File path = LocalConfigInfoProcessor.getFailoverFile(this.agent.getName(), dataId, group, tenant);\n \n-        // \u6ca1\u6709 -> \u6709\n         if (!cacheData.isUseLocalConfigInfo() && path.exists()) {\n             String content = LocalConfigInfoProcessor.getFailover(this.agent.getName(), dataId, group, tenant);\n             String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4Mjc5Nw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433882797", "bodyText": "I think NumberUtils can be replace by ConvertUtils", "author": "chuntaojun", "createdAt": "2020-06-02T13:40:10Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java", "diffHunk": "@@ -482,12 +484,20 @@ public void run() {\n \n     private void init(Properties properties) {\n \n-        timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n+        this.timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),", "originalCommit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4OTM3NA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433889374", "bodyText": "Okay, I will replace it.", "author": "zongtanghu", "createdAt": "2020-06-02T13:49:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4Mjc5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\nindex a5c98e940..4874cf87a 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n\n@@ -484,7 +499,7 @@ public class ClientWorker implements Closeable {\n \n     private void init(Properties properties) {\n \n-        this.timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n+        this.timeout = Math.max(ConvertUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n             Constants.CONFIG_LONG_POLL_TIMEOUT), Constants.MIN_CONFIG_LONG_POLL_TIMEOUT);\n \n         this.taskPenaltyTime = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_RETRY_TIME), Constants.CONFIG_RETRY_TIME);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4MzE3NA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433883174", "bodyText": "don't impotr *", "author": "chuntaojun", "createdAt": "2020-06-02T13:40:38Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java", "diffHunk": "@@ -18,32 +18,36 @@\n import com.alibaba.nacos.api.PropertyKeyConst;\n import com.alibaba.nacos.api.SystemPropertyKeyConst;\n import com.alibaba.nacos.api.exception.NacosException;\n+import com.alibaba.nacos.api.naming.NamingFactory;\n import com.alibaba.nacos.client.config.impl.EventDispatcher.ServerlistChangeEvent;\n import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;\n import com.alibaba.nacos.client.utils.*;\n+import com.alibaba.nacos.common.executor.ExecutorFactory;\n+import com.alibaba.nacos.common.executor.NameThreadFactory;\n+import com.alibaba.nacos.common.lifecycle.Closeable;\n import com.alibaba.nacos.common.utils.IoUtils;\n import com.alibaba.nacos.common.utils.StringUtils;\n+import com.alibaba.nacos.common.utils.ThreadUtils;\n import org.slf4j.Logger;\n \n import java.io.IOException;\n import java.io.StringReader;\n import java.net.HttpURLConnection;\n import java.util.*;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.TimeUnit;\n-\n+import java.util.concurrent.*;", "originalCommit": "2ab274216a59cf3e1765de0a940c8ae86d316869", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4OTUyOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r433889529", "bodyText": "Okay, I will adjust it.", "author": "zongtanghu", "createdAt": "2020-06-02T13:49:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4MzE3NA=="}], "type": "inlineReview", "revised_code": {"commit": "5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\nindex e9a477191..050b3ba24 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\n\n@@ -18,12 +18,12 @@ package com.alibaba.nacos.client.config.impl;\n import com.alibaba.nacos.api.PropertyKeyConst;\n import com.alibaba.nacos.api.SystemPropertyKeyConst;\n import com.alibaba.nacos.api.exception.NacosException;\n-import com.alibaba.nacos.api.naming.NamingFactory;\n import com.alibaba.nacos.client.config.impl.EventDispatcher.ServerlistChangeEvent;\n import com.alibaba.nacos.client.config.impl.HttpSimpleClient.HttpResult;\n-import com.alibaba.nacos.client.utils.*;\n-import com.alibaba.nacos.common.executor.ExecutorFactory;\n-import com.alibaba.nacos.common.executor.NameThreadFactory;\n+import com.alibaba.nacos.client.utils.EnvUtil;\n+import com.alibaba.nacos.client.utils.LogUtils;\n+import com.alibaba.nacos.client.utils.ParamUtil;\n+import com.alibaba.nacos.client.utils.TemplateUtils;\n import com.alibaba.nacos.common.lifecycle.Closeable;\n import com.alibaba.nacos.common.utils.IoUtils;\n import com.alibaba.nacos.common.utils.StringUtils;\n"}}, {"oid": "5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "url": "https://github.com/alibaba/nacos/commit/5e2840a6bd1a84ad9e954ac781b5accbef0a12c0", "message": "[#1815]adjust and optimize codes.", "committedDate": "2020-06-03T02:46:41Z", "type": "commit"}, {"oid": "0320e5851c4bb704dcf9f1e3910db8084012c57d", "url": "https://github.com/alibaba/nacos/commit/0320e5851c4bb704dcf9f1e3910db8084012c57d", "message": "Merge remote-tracking branch 'upstream/master' into feature_lifecycle", "committedDate": "2020-06-03T05:36:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyOTQwOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434329409", "bodyText": "This line code is no used.", "author": "KomachiSion", "createdAt": "2020-06-03T06:12:29Z", "path": "api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java", "diffHunk": "@@ -59,4 +59,19 @@ public static ConfigService createConfigService(String serverAddr) throws NacosE\n         return createConfigService(properties);\n     }\n \n+    /**\n+     * Destroy Config Instance's Resources.\n+     *\n+     * @param configService\n+     * @throws NacosException\n+     */\n+    public static void destroyConfigService(ConfigService configService) throws NacosException{\n+        try {\n+            configService.shutDown();\n+            configService = null;", "originalCommit": "0320e5851c4bb704dcf9f1e3910db8084012c57d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzOTY5MA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434339690", "bodyText": "The shutdown method aims to destroy the thread pool resources which managed by it.And \"configservice == null\" aims to destroy the config service object instance exhibitly.", "author": "zongtanghu", "createdAt": "2020-06-03T06:39:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyOTQwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM1MDY5Mg==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434350692", "bodyText": "But it's a formal parameter, configService only has effect in this method. the out quote do not be effected.", "author": "KomachiSion", "createdAt": "2020-06-03T07:04:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyOTQwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "15fad5d98abf6421231a7d5c997da8c35bb73a3b", "chunk": "diff --git a/api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java b/api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java\nindex 65e867d57..6e8b90456 100644\n--- a/api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java\n+++ b/api/src/main/java/com/alibaba/nacos/api/config/ConfigFactory.java\n\n@@ -58,20 +58,4 @@ public class ConfigFactory {\n         properties.put(PropertyKeyConst.SERVER_ADDR, serverAddr);\n         return createConfigService(properties);\n     }\n-\n-    /**\n-     * Destroy Config Instance's Resources.\n-     *\n-     * @param configService\n-     * @throws NacosException\n-     */\n-    public static void destroyConfigService(ConfigService configService) throws NacosException{\n-        try {\n-            configService.shutDown();\n-            configService = null;\n-        }catch (Throwable e) {\n-            throw new NacosException(NacosException.RESOURCE_DESTROY_FAILED, e);\n-        }\n-    }\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyOTYwOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434329609", "bodyText": "This line code is no used.", "author": "KomachiSion", "createdAt": "2020-06-03T06:13:02Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java", "diffHunk": "@@ -48,4 +49,19 @@ public static NamingService createNamingService(Properties properties) throws Na\n             throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);\n         }\n     }\n+\n+    /**\n+     * Destroy Config Instance's Resources.\n+     *\n+     * @param namingService\n+     * @throws NacosException\n+     */\n+    public static void destroyNamingService(NamingService namingService) throws NacosException{\n+        try {\n+            namingService.shutDown();\n+            namingService = null;", "originalCommit": "0320e5851c4bb704dcf9f1e3910db8084012c57d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzOTkwNA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434339904", "bodyText": "As above.", "author": "zongtanghu", "createdAt": "2020-06-03T06:40:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyOTYwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "15fad5d98abf6421231a7d5c997da8c35bb73a3b", "chunk": "diff --git a/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java b/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\nindex 570fa6108..28c3a45df 100644\n--- a/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\n+++ b/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\n\n@@ -49,19 +49,4 @@ public class NamingFactory {\n             throw new NacosException(NacosException.CLIENT_INVALID_PARAM, e);\n         }\n     }\n-\n-    /**\n-     * Destroy Config Instance's Resources.\n-     *\n-     * @param namingService\n-     * @throws NacosException\n-     */\n-    public static void destroyNamingService(NamingService namingService) throws NacosException{\n-        try {\n-            namingService.shutDown();\n-            namingService = null;\n-        }catch (Throwable e) {\n-            throw new NacosException(NacosException.RESOURCE_DESTROY_FAILED, e);\n-        }\n-    }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzMTQ5Nw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434331497", "bodyText": "When using member variables normally, do not need to add this, otherwise the code looks very redundant.\nthis can be used uniformly in the set method and constructor.", "author": "KomachiSion", "createdAt": "2020-06-03T06:18:24Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java", "diffHunk": "@@ -465,12 +480,12 @@ public String getCode() {\n         @Override\n         public String toString() {\n             return \"STSCredential{\" +\n-                \"accessKeyId='\" + accessKeyId + '\\'' +\n-                \", accessKeySecret='\" + accessKeySecret + '\\'' +\n-                \", expiration=\" + expiration +\n-                \", securityToken='\" + securityToken + '\\'' +\n-                \", lastUpdated=\" + lastUpdated +\n-                \", code='\" + code + '\\'' +\n+                \"accessKeyId='\" + this.accessKeyId + '\\'' +\n+                \", accessKeySecret='\" + this.accessKeySecret + '\\'' +\n+                \", expiration=\" + this.expiration +\n+                \", securityToken='\" + this.securityToken + '\\'' +\n+                \", lastUpdated=\" + this.lastUpdated +\n+                \", code='\" + this.code + '\\'' +", "originalCommit": "0320e5851c4bb704dcf9f1e3910db8084012c57d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MDQzOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434340439", "bodyText": "\"this\" keywords aims to keep strong unified coding style.", "author": "zongtanghu", "createdAt": "2020-06-03T06:41:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzMTQ5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM1MTA3OQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434351079", "bodyText": "I know that, I mean it's enough for keep uniformly in constructor and set method.", "author": "KomachiSion", "createdAt": "2020-06-03T07:05:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzMTQ5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "09752e354dca2d59448e89ac2e0c6750af8931af", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\nindex cf6c48d0a..45e0b436f 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/ServerHttpAgent.java\n\n@@ -480,12 +483,12 @@ public class ServerHttpAgent implements HttpAgent {\n         @Override\n         public String toString() {\n             return \"STSCredential{\" +\n-                \"accessKeyId='\" + this.accessKeyId + '\\'' +\n-                \", accessKeySecret='\" + this.accessKeySecret + '\\'' +\n-                \", expiration=\" + this.expiration +\n-                \", securityToken='\" + this.securityToken + '\\'' +\n-                \", lastUpdated=\" + this.lastUpdated +\n-                \", code='\" + this.code + '\\'' +\n+                \"accessKeyId='\" + accessKeyId + '\\'' +\n+                \", accessKeySecret='\" + accessKeySecret + '\\'' +\n+                \", expiration=\" + expiration +\n+                \", securityToken='\" + securityToken + '\\'' +\n+                \", lastUpdated=\" + lastUpdated +\n+                \", code='\" + code + '\\'' +\n                 '}';\n         }\n     }\n"}}, {"oid": "e86c1582625bedafb25bb97471f5dc035da7b861", "url": "https://github.com/alibaba/nacos/commit/e86c1582625bedafb25bb97471f5dc035da7b861", "message": "resolve codes conflicts", "committedDate": "2020-06-03T06:57:46Z", "type": "commit"}, {"oid": "c726dd0665b2e15f3a022c4755d1664587ba6f19", "url": "https://github.com/alibaba/nacos/commit/c726dd0665b2e15f3a022c4755d1664587ba6f19", "message": "Merge branch 'feature_lifecycle' of https://github.com/zongtanghu/nacos into feature_lifecycle", "committedDate": "2020-06-03T06:58:46Z", "type": "commit"}, {"oid": "09752e354dca2d59448e89ac2e0c6750af8931af", "url": "https://github.com/alibaba/nacos/commit/09752e354dca2d59448e89ac2e0c6750af8931af", "message": "[#1815]adjust this keywords which just includes constructor and set method in the class and fix some unit test cases.", "committedDate": "2020-06-03T09:35:06Z", "type": "commit"}, {"oid": "94c41e11d186346bf2b002c6be5a583c654a7ce9", "url": "https://github.com/alibaba/nacos/commit/94c41e11d186346bf2b002c6be5a583c654a7ce9", "message": "[#1815]fix unit test cases.", "committedDate": "2020-06-03T09:35:49Z", "type": "commit"}, {"oid": "860a2d02b1d768aa0c7a98796a1fde7ce593d984", "url": "https://github.com/alibaba/nacos/commit/860a2d02b1d768aa0c7a98796a1fde7ce593d984", "message": "resolve codes conflicts", "committedDate": "2020-06-03T09:41:22Z", "type": "commit"}, {"oid": "15fad5d98abf6421231a7d5c997da8c35bb73a3b", "url": "https://github.com/alibaba/nacos/commit/15fad5d98abf6421231a7d5c997da8c35bb73a3b", "message": "[#1815]remove destroyService from Factory Class.", "committedDate": "2020-06-03T11:19:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1ODM4NA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434558384", "bodyText": "Why is ConfigService in namingFactory?", "author": "KomachiSion", "createdAt": "2020-06-03T13:17:16Z", "path": "api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java", "diffHunk": "@@ -18,6 +18,7 @@\n import java.lang.reflect.Constructor;\n import java.util.Properties;\n \n+import com.alibaba.nacos.api.config.ConfigService;", "originalCommit": "15fad5d98abf6421231a7d5c997da8c35bb73a3b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU2NTMyNw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r434565327", "bodyText": "Okay, I will remove this unused import, thanks.", "author": "zongtanghu", "createdAt": "2020-06-03T13:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU1ODM4NA=="}], "type": "inlineReview", "revised_code": {"commit": "8a2921e2cf2c153c3bdd6bbaeba16e8f087aed47", "chunk": "diff --git a/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java b/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\nindex 28c3a45df..745ccd275 100644\n--- a/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\n+++ b/api/src/main/java/com/alibaba/nacos/api/naming/NamingFactory.java\n\n@@ -18,7 +18,6 @@ package com.alibaba.nacos.api.naming;\n import java.lang.reflect.Constructor;\n import java.util.Properties;\n \n-import com.alibaba.nacos.api.config.ConfigService;\n import com.alibaba.nacos.api.exception.NacosException;\n \n /**\n"}}, {"oid": "8a2921e2cf2c153c3bdd6bbaeba16e8f087aed47", "url": "https://github.com/alibaba/nacos/commit/8a2921e2cf2c153c3bdd6bbaeba16e8f087aed47", "message": "[#1815]remove no used package name from Factory Class.", "committedDate": "2020-06-04T01:21:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEzMjQ2Mg==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r437132462", "bodyText": "don't import *", "author": "chuntaojun", "createdAt": "2020-06-09T04:36:17Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java", "diffHunk": "@@ -23,8 +23,10 @@\n import com.alibaba.nacos.client.naming.cache.DiskCache;\n import com.alibaba.nacos.client.naming.net.NamingProxy;\n import com.alibaba.nacos.client.naming.utils.UtilAndComs;\n+import com.alibaba.nacos.common.lifecycle.Closeable;\n import com.alibaba.nacos.common.utils.JacksonUtils;\n \n+import com.alibaba.nacos.common.utils.ThreadUtils;\n import org.apache.commons.lang3.StringUtils;\n \n import java.util.*;", "originalCommit": "8a2921e2cf2c153c3bdd6bbaeba16e8f087aed47", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java b/client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java\nindex a15e4a94a..b6d1ccef4 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/naming/core/HostReactor.java\n\n@@ -29,8 +29,19 @@ import com.alibaba.nacos.common.utils.JacksonUtils;\n import com.alibaba.nacos.common.utils.ThreadUtils;\n import org.apache.commons.lang3.StringUtils;\n \n-import java.util.*;\n-import java.util.concurrent.*;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.HashMap;\n+import java.util.Set;\n+import java.util.List;\n+import java.util.ArrayList;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.concurrent.TimeUnit;\n+\n \n import static com.alibaba.nacos.client.utils.LogUtils.NAMING_LOGGER;\n \n"}}, {"oid": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "url": "https://github.com/alibaba/nacos/commit/8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "message": "[#1815]remove no used package name from Factory Class and adjust test cases.", "committedDate": "2020-06-09T06:10:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1ODQ5MQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438058491", "bodyText": "1\u3001\u589e\u52a0\u8fd9\u4e2a\u5f02\u5e38\u7684\u573a\u666f\u662f\uff1f\n2\u3001\u5982\u679c\u5fc5\u987b\u8981\u8fd9\u4e2a\u5f02\u5e38\uff0csdk\u4fa7\u7684\u5f02\u5e38\u662f\u8d1f\u6570\uff0c\u800c\u4e14\u9700\u8981\u53c2\u8003\u4e00\u4e0bhttp\u72b6\u6001\u7801\u7684\u8bed\u4e49", "author": "yanlinly", "createdAt": "2020-06-10T11:41:55Z", "path": "api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java", "diffHunk": "@@ -146,4 +146,9 @@ public String toString() {\n \n \tpublic static final int RESOURCE_NOT_FOUND = -404;\n \n+    /**\n+     * resource instance destroy failed.\n+     */\n+\tpublic static final int RESOURCE_DESTROY_FAILED = 410;", "originalCommit": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5NTc4Mw==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438495783", "bodyText": "Okay, \u6211\u5220\u9664\u5148\uff0c\u4e4b\u524d\u6f0f\u5220\u9664\u4e86\u3002", "author": "zongtanghu", "createdAt": "2020-06-11T01:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1ODQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "eb39830b6c821dec817228d873c84cefc95e10bf", "chunk": "diff --git a/api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java b/api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java\nindex 45594761f..d13e1157d 100644\n--- a/api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java\n+++ b/api/src/main/java/com/alibaba/nacos/api/exception/NacosException.java\n\n@@ -145,10 +145,4 @@ public class NacosException extends Exception {\n \tpublic static final int OVER_THRESHOLD = 503;\n \n \tpublic static final int RESOURCE_NOT_FOUND = -404;\n-\n-    /**\n-     * resource instance destroy failed.\n-     */\n-\tpublic static final int RESOURCE_DESTROY_FAILED = 410;\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2MTg4MA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438061880", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u4e0d\u8981\u6539\u4e86\uff0c\u8fd9\u5757\u4e0d\u662f\u7b80\u5355\u7684\u83b7\u53d6\u670d\u52a1\u5217\u8868\n1\u3001HttpAgent\u5c4f\u853d\u4e86\u540e\u9762\u670d\u52a1\u7684\u591a\u4e2a\u8282\u70b9\n2\u3001\u7ef4\u62a4\u591a\u4e2a\u8282\u70b9\u5217\u8868\uff0c\u52a8\u6001\u5237\u65b0\u80fd\u529b\n3\u3001\u7ed9\u51fa\u53ef\u7528ip\u548c\u8bf7\u6c42ip\u6362ip\u903b\u8f91\u3002\n\u8fd9\u4e2a\u662f\u4e00\u4e2a\u4e0eserver\u5efa\u8054\u7684\u4e00\u4e2aagent\uff0c\u542f\u52a8\u5176\u5b9e\u662f\u505a\u5f88\u591a\u4e8b\u60c5\u7684\u3002", "author": "yanlinly", "createdAt": "2020-06-10T11:49:11Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java", "diffHunk": "@@ -27,13 +28,14 @@\n  *\n  * @author Nacos\n  */\n-public interface HttpAgent {\n+public interface HttpAgent extends Closeable {\n+\n     /**\n      * start to get nacos ip list\n      * @return Nothing.\n      * @throws NacosException on get ip list error.\n      */\n-    void start() throws NacosException;\n+    void fetchServerIpList() throws NacosException;", "originalCommit": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5NTcwMA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438495700", "bodyText": "\u597d\u7684\uff0c\u8fd9\u5757\u4f1a\u8fd8\u539f\u56de\u5230\u4e4b\u524d\u7684\u65b9\u6cd5\u540d\u79f0\uff0c\u5728\u4e0b\u4e00\u4e2acommit", "author": "zongtanghu", "createdAt": "2020-06-11T01:38:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2MTg4MA=="}], "type": "inlineReview", "revised_code": {"commit": "eb39830b6c821dec817228d873c84cefc95e10bf", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java b/client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java\nindex 5f80cf5f9..82adf6d48 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/http/HttpAgent.java\n\n@@ -35,7 +35,7 @@ public interface HttpAgent extends Closeable {\n      * @return Nothing.\n      * @throws NacosException on get ip list error.\n      */\n-    void fetchServerIpList() throws NacosException;\n+    void start() throws NacosException;\n \n     /**\n      * invoke http get method\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2NjExNg==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438066116", "bodyText": "ConvertUtils \u8fd9\u5757\u4e3a\u4ec0\u4e48\u8981\u6539\u5462", "author": "yanlinly", "createdAt": "2020-06-10T11:57:37Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java", "diffHunk": "@@ -482,12 +499,21 @@ public void run() {\n \n     private void init(Properties properties) {\n \n-        timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n+        this.timeout = Math.max(ConvertUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),", "originalCommit": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MjEzMA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438492130", "bodyText": "\u518d\u4e0b\u4e00\u6b21\u63d0\u4ea4\u4e2d\u4fee\u6539\u56de\u539f\u6765\u7684NumberUtils", "author": "zongtanghu", "createdAt": "2020-06-11T01:23:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2NjExNg=="}], "type": "inlineReview", "revised_code": {"commit": "eb39830b6c821dec817228d873c84cefc95e10bf", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\nindex 4c8760117..e30e584db 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ClientWorker.java\n\n@@ -499,7 +498,7 @@ public class ClientWorker implements Closeable {\n \n     private void init(Properties properties) {\n \n-        this.timeout = Math.max(ConvertUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n+        this.timeout = Math.max(NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_LONG_POLL_TIMEOUT),\n             Constants.CONFIG_LONG_POLL_TIMEOUT), Constants.MIN_CONFIG_LONG_POLL_TIMEOUT);\n \n         this.taskPenaltyTime = NumberUtils.toInt(properties.getProperty(PropertyKeyConst.CONFIG_RETRY_TIME), Constants.CONFIG_RETRY_TIME);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3MDMxMA==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438070310", "bodyText": "\u76ee\u524d\u770bLifeCycle \u8fd9\u4e2a\u62bd\u8c61\u5bf9\u6574\u4f53\u751f\u547d\u5468\u671f\u7ba1\u7406\u5e2e\u52a9\u4e0d\u5927\uff0c\u53cd\u800c\u4f1a\u589e\u52a0\u4ee3\u7801\u7406\u89e3\u6210\u672c\uff0c\u5efa\u8bae\u8fd9\u5757\u4ee3\u7801\u5148\u4e0d\u8981\u5408\u5165\u4e86\u3002", "author": "yanlinly", "createdAt": "2020-06-10T12:06:06Z", "path": "common/src/main/java/com/alibaba/nacos/common/lifecycle/LifeCycle.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.alibaba.nacos.common.lifecycle;\n+\n+import com.alibaba.nacos.api.exception.NacosException;\n+\n+/**\n+ *\n+ * The lifecycle interface for generic service. Classes are need to implement\n+ * this interface have a defined life cycle defined by the methods of this interface.\n+ *\n+ * @author zongtanghu\n+ */\n+public interface LifeCycle {", "originalCommit": "8f7fb0f65a51cf959017ee2140ae5a62c8b5cdd4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MzAwOQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438493009", "bodyText": "\u5728\u4e0b\u4e00\u4e2a\u63d0\u4ea4\u4e2d\uff0c\u5c06\u53bb\u6389Lifecycle\u548cResourceLifeCycleManager", "author": "zongtanghu", "createdAt": "2020-06-11T01:26:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3MDMxMA=="}], "type": "inlineReview", "revised_code": {"commit": "eb39830b6c821dec817228d873c84cefc95e10bf", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/lifecycle/LifeCycle.java b/common/src/main/java/com/alibaba/nacos/common/lifecycle/LifeCycle.java\ndeleted file mode 100644\nindex 3e06a841b..000000000\n--- a/common/src/main/java/com/alibaba/nacos/common/lifecycle/LifeCycle.java\n+++ /dev/null\n\n@@ -1,35 +0,0 @@\n-/*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.alibaba.nacos.common.lifecycle;\n-\n-import com.alibaba.nacos.api.exception.NacosException;\n-\n-/**\n- *\n- * The lifecycle interface for generic service. Classes are need to implement\n- * this interface have a defined life cycle defined by the methods of this interface.\n- *\n- * @author zongtanghu\n- */\n-public interface LifeCycle {\n-\n-    /**\n-     * Destroy the service.\n-     *\n-     * @throws NacosException An NacosException occours when destroy service.\n-     */\n-    public void destroy() throws NacosException;\n-}\n"}}, {"oid": "eb39830b6c821dec817228d873c84cefc95e10bf", "url": "https://github.com/alibaba/nacos/commit/eb39830b6c821dec817228d873c84cefc95e10bf", "message": "[#1815]remove lifeCycle, lifeCycleManager, and adjust some related codes.", "committedDate": "2020-06-11T01:42:44Z", "type": "commit"}, {"oid": "e6e3161c0ef42c876acdc007499e6e9833b482da", "url": "https://github.com/alibaba/nacos/commit/e6e3161c0ef42c876acdc007499e6e9833b482da", "message": "resolve the codes conflicts", "committedDate": "2020-06-11T01:45:00Z", "type": "commit"}, {"oid": "9b873797ca07b81220c4f4baa021353353a945a9", "url": "https://github.com/alibaba/nacos/commit/9b873797ca07b81220c4f4baa021353353a945a9", "message": "[#1815]fix ut.", "committedDate": "2020-06-11T02:35:50Z", "type": "commit"}, {"oid": "d2b980677f1ebce427b47457a51c4a82763f5dac", "url": "https://github.com/alibaba/nacos/commit/d2b980677f1ebce427b47457a51c4a82763f5dac", "message": "[#1815]remove code comments.", "committedDate": "2020-06-11T03:33:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNTkxMQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438525911", "bodyText": "\u5efa\u8bae\u505a\u4e00\u4e2a\u79c1\u6709\u7c7b\u521d\u59cb\u5316\uff0c\u8fd9\u7ebf\u7a0b\u8ddf\u8fd9\u4e2a\u7c7b\u4e00\u8d77\u5b58\u5728\u7684\u3002  \u76ee\u524d\u8fd9\u4e2a\u7c7b\u521d\u59cb\u5316\u53e3\u5b50\u6bd4\u8f83\u591a\uff0c\u5230\u5904\u52a0\u4e0d\u592a\u4f18\u96c5", "author": "yanlinly", "createdAt": "2020-06-11T03:43:48Z", "path": "client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java", "diffHunk": "@@ -200,14 +217,27 @@ public String call() {\n         if (Boolean.parseBoolean(isUseEndpointRuleParsing)) {\n             String endpointUrl = ParamUtil.parsingEndpointRule(endpointTmp);\n             if (StringUtils.isNotBlank(endpointUrl)) {\n-                serverAddrsStr = \"\";\n+                this.serverAddrsStr = \"\";\n             }\n             return endpointUrl;\n         }\n \n         return StringUtils.isNotBlank(endpointTmp) ? endpointTmp : \"\";\n     }\n \n+    private void initExecutor() {", "originalCommit": "9b873797ca07b81220c4f4baa021353353a945a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNjQ5Mg==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438526492", "bodyText": "agree", "author": "chuntaojun", "createdAt": "2020-06-11T03:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNTkxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "e7796b39352f4d17c4a2185d4739be34edd0e9dc", "chunk": "diff --git a/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java b/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\nindex b82f3d5d1..855fcaa29 100644\n--- a/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\n+++ b/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java\n\n@@ -225,19 +231,6 @@ public class ServerListManager implements Closeable {\n         return StringUtils.isNotBlank(endpointTmp) ? endpointTmp : \"\";\n     }\n \n-    private void initExecutor() {\n-        // init executorService\n-        this.executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {\n-            @Override\n-            public Thread newThread(Runnable r) {\n-                Thread t = new Thread(r);\n-                t.setName(\"com.alibaba.nacos.client.ServerListManager\");\n-                t.setDaemon(true);\n-                return t;\n-            }\n-        });\n-    }\n-\n     public synchronized void start() throws NacosException {\n \n         if (isStarted || isFixed) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNjY2MQ==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438526661", "bodyText": "\u8fd9\u5757\u5efa\u8bae\u4fdd\u6301\u8001\u65b9\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6bcf\u4e2a\u7c7b\u79c1\u6709\u521d\u59cb\u5316\u662f\u8ddf\u5b9e\u4f8b\u4fdd\u6301\u4e00\u81f4\u7684\u3002 \u76f8\u5bf9\u7b80\u5355\u4e00\u4e9b", "author": "yanlinly", "createdAt": "2020-06-11T03:47:06Z", "path": "client/src/main/java/com/alibaba/nacos/client/naming/backups/FailoverReactor.java", "diffHunk": "@@ -37,29 +40,31 @@\n /**\n  * @author nkorange\n  */\n-public class FailoverReactor {\n+public class FailoverReactor implements Closeable {\n \n     private String failoverDir;\n \n     private HostReactor hostReactor;\n \n+    private ScheduledExecutorService executorService;", "originalCommit": "9b873797ca07b81220c4f4baa021353353a945a9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUzMzkzMg==", "url": "https://github.com/alibaba/nacos/pull/2927#discussion_r438533932", "bodyText": "Okay\uff0c\u6211\u518d\u8c03\u6574\u4e0b\u4ee3\u7801", "author": "zongtanghu", "createdAt": "2020-06-11T04:19:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUyNjY2MQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e7796b39352f4d17c4a2185d4739be34edd0e9dc", "url": "https://github.com/alibaba/nacos/commit/e7796b39352f4d17c4a2185d4739be34edd0e9dc", "message": "[#1815]adjust codes for instance class attribute init.", "committedDate": "2020-06-11T04:42:47Z", "type": "commit"}]}