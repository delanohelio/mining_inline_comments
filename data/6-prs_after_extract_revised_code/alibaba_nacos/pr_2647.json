{"pr_number": 2647, "pr_title": "[ISSUE #2618]modify config service md5 generation method", "pr_createdAt": "2020-04-18T09:05:06Z", "pr_url": "https://github.com/alibaba/nacos/pull/2647", "timeline": [{"oid": "bb70dcba98aa034fb130ef7542fc6f31d6fc47d0", "url": "https://github.com/alibaba/nacos/commit/bb70dcba98aa034fb130ef7542fc6f31d6fc47d0", "message": "[ISSUE#2618]modify server md5 generation method", "committedDate": "2020-04-18T08:37:48Z", "type": "commit"}, {"oid": "aeb14910e753a9ebe0e5124b417d1d0443817120", "url": "https://github.com/alibaba/nacos/commit/aeb14910e753a9ebe0e5124b417d1d0443817120", "message": "unify the MD5 generation on both sides by MD5 utility classes in the common module", "committedDate": "2020-04-19T10:42:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxNDU0MA==", "url": "https://github.com/alibaba/nacos/pull/2647#discussion_r410914540", "bodyText": "The utility class is already at the end of Utils", "author": "chuntaojun", "createdAt": "2020-04-19T14:11:20Z", "path": "common/src/main/java/com/alibaba/nacos/common/utils/MD5.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package com.alibaba.nacos.client.config.utils;", "originalCommit": "aeb14910e753a9ebe0e5124b417d1d0443817120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkyNDgwOQ==", "url": "https://github.com/alibaba/nacos/pull/2647#discussion_r410924809", "bodyText": "sorry,I don't understand what you mean. the utility class is move from client module to common module. do you mean  name  should like MD5Utils  end with Utils?", "author": "wangweizZZ", "createdAt": "2020-04-19T15:06:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxNDU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzNjc0NQ==", "url": "https://github.com/alibaba/nacos/pull/2647#discussion_r410936745", "bodyText": "yes", "author": "chuntaojun", "createdAt": "2020-04-19T16:05:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxNDU0MA=="}], "type": "inlineReview", "revised_code": {"commit": "dcdbaf50eab21eefd603e2ac2507b4a3c2d21fdb", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/utils/MD5.java b/common/src/main/java/com/alibaba/nacos/common/utils/MD5.java\ndeleted file mode 100644\nindex 9e62df402..000000000\n--- a/common/src/main/java/com/alibaba/nacos/common/utils/MD5.java\n+++ /dev/null\n\n@@ -1,132 +0,0 @@\n-/*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.alibaba.nacos.common.utils;\n-\n-import com.alibaba.nacos.api.common.Constants;\n-import com.google.common.collect.Maps;\n-\n-import java.io.UnsupportedEncodingException;\n-import java.security.MessageDigest;\n-import java.util.Map;\n-import java.util.concurrent.locks.ReentrantLock;\n-\n-/**\n- * MD5 util\n- *\n- * @author Nacos\n- */\n-@SuppressWarnings(\"PMD.ClassNamingShouldBeCamelRule\")\n-public class MD5 {\n-    private static int DIGITS_SIZE = 16;\n-    private static char[] digits = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};\n-\n-    private static Map<Character, Integer> rDigits = Maps.newHashMapWithExpectedSize(16);\n-\n-    static {\n-        for (int i = 0; i < digits.length; ++i) {\n-            rDigits.put(digits[i], i);\n-        }\n-    }\n-\n-    private static MD5 me = new MD5();\n-    private MessageDigest mHasher;\n-    private ReentrantLock opLock = new ReentrantLock();\n-\n-    private MD5() {\n-        try {\n-            mHasher = MessageDigest.getInstance(\"md5\");\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-\n-    }\n-\n-    public static MD5 getInstance() {\n-        return me;\n-    }\n-\n-    public String getMD5String(String content) {\n-        return bytes2string(hash(content));\n-    }\n-\n-    public String getMD5String(byte[] content) {\n-        return bytes2string(hash(content));\n-    }\n-\n-    public byte[] getMD5Bytes(byte[] content) {\n-        return hash(content);\n-    }\n-\n-    /**\n-     * \u5bf9\u5b57\u7b26\u4e32\u8fdb\u884cmd5\n-     *\n-     * @param str\n-     * @return md5 byte[16]\n-     */\n-    public byte[] hash(String str) {\n-        opLock.lock();\n-        try {\n-            byte[] bt = mHasher.digest(str.getBytes(Constants.ENCODE));\n-            if (null == bt || bt.length != DIGITS_SIZE) {\n-                throw new IllegalArgumentException(\"md5 need\");\n-            }\n-            return bt;\n-        } catch (UnsupportedEncodingException e) {\n-            throw new RuntimeException(\"unsupported utf-8 encoding\", e);\n-        } finally {\n-            opLock.unlock();\n-        }\n-    }\n-\n-    /**\n-     * \u5bf9\u4e8c\u8fdb\u5236\u6570\u636e\u8fdb\u884cmd5\n-     *\n-     * @param data\n-     * @return md5 byte[16]\n-     */\n-    public byte[] hash(byte[] data) {\n-        opLock.lock();\n-        try {\n-            byte[] bt = mHasher.digest(data);\n-            if (null == bt || bt.length != DIGITS_SIZE) {\n-                throw new IllegalArgumentException(\"md5 need\");\n-            }\n-            return bt;\n-        } finally {\n-            opLock.unlock();\n-        }\n-    }\n-\n-    /**\n-     * \u5c06\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u8f6c\u5316\u4e3a\u53ef\u89c1\u7684\u5b57\u7b26\u4e32\n-     *\n-     * @param bt\n-     * @return\n-     */\n-    public String bytes2string(byte[] bt) {\n-        int l = bt.length;\n-\n-        char[] out = new char[l << 1];\n-\n-        for (int i = 0, j = 0; i < l; i++) {\n-            out[j++] = digits[(0xF0 & bt[i]) >>> 4];\n-            out[j++] = digits[0x0F & bt[i]];\n-        }\n-\n-        return new String(out);\n-    }\n-\n-}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAyOTQzNw==", "url": "https://github.com/alibaba/nacos/pull/2647#discussion_r411029437", "bodyText": "I think the MD5 implementation will not be as good as the MD5Utils you delete because of the locking mechanism, you can only modify the string method of MD5Utils\nold\nreturn new BigInteger(1, messageDigest.digest(bytes)).toString(HEX_VALUE_COUNT);\n\nnew\npublic String bytes2string(byte[] bt) {\n        int l = bt.length;\n\n        char[] out = new char[l << 1];\n\n        for (int i = 0, j = 0; i < l; i++) {\n            out[j++] = digits[(0xF0 & bt[i]) >>> 4];\n            out[j++] = digits[0x0F & bt[i]];\n        }\n\n        return new String(out);\n    }", "author": "chuntaojun", "createdAt": "2020-04-20T00:41:44Z", "path": "config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java", "diffHunk": "@@ -67,7 +66,7 @@\n     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,\n                                          HttpServletResponse response, String dataId, String group, String tenant,\n                                          String content) throws Throwable {\n-        final String md5 = content == null ? null : Md5Utils.getMD5(content, Constants.ENCODE);\n+        final String md5 = content == null ? null : MD5.getInstance().getMD5String(content);", "originalCommit": "aeb14910e753a9ebe0e5124b417d1d0443817120", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0MDc4Mg==", "url": "https://github.com/alibaba/nacos/pull/2647#discussion_r411040782", "bodyText": "Thanks for your patient.I choose this one ,consider MessageDigest classes  is instantiated only once.", "author": "wangweizZZ", "createdAt": "2020-04-20T01:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAyOTQzNw=="}], "type": "inlineReview", "revised_code": {"commit": "dcdbaf50eab21eefd603e2ac2507b4a3c2d21fdb", "chunk": "diff --git a/config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java b/config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java\nindex c1673ae46..432a32478 100755\n--- a/config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java\n+++ b/config/src/main/java/com/alibaba/nacos/config/server/aspect/RequestLogAspect.java\n\n@@ -66,7 +67,7 @@ public class RequestLogAspect {\n     public Object interfacePublishSingle(ProceedingJoinPoint pjp, HttpServletRequest request,\n                                          HttpServletResponse response, String dataId, String group, String tenant,\n                                          String content) throws Throwable {\n-        final String md5 = content == null ? null : MD5.getInstance().getMD5String(content);\n+        final String md5 = content == null ? null : MD5Utils.md5Hex(content, Constants.ENCODE);\n         MetricsMonitor.getPublishMonitor().incrementAndGet();\n         return logClientRequest(\"publish\", pjp, request, response, dataId, group, tenant, md5);\n     }\n"}}, {"oid": "dcdbaf50eab21eefd603e2ac2507b4a3c2d21fdb", "url": "https://github.com/alibaba/nacos/commit/dcdbaf50eab21eefd603e2ac2507b4a3c2d21fdb", "message": "use MD5Utils replace MD5", "committedDate": "2020-04-20T06:18:23Z", "type": "commit"}]}