{"pr_number": 2841, "pr_title": "Feature 1.3.0 beta grpc", "pr_createdAt": "2020-05-20T14:43:15Z", "pr_url": "https://github.com/alibaba/nacos/pull/2841", "timeline": [{"oid": "fa5769381c2ab97744392bf1e0636ce95a6656af", "url": "https://github.com/alibaba/nacos/commit/fa5769381c2ab97744392bf1e0636ce95a6656af", "message": "feat: jraft use grpc", "committedDate": "2020-05-10T09:14:06Z", "type": "commit"}, {"oid": "4871eff3363a2fdb13cd83ef6eb138f441704a79", "url": "https://github.com/alibaba/nacos/commit/4871eff3363a2fdb13cd83ef6eb138f441704a79", "message": "fix: nonr", "committedDate": "2020-05-11T10:02:09Z", "type": "commit"}, {"oid": "588b184ce29c4c4092051871fd1a56abd5c35aa3", "url": "https://github.com/alibaba/nacos/commit/588b184ce29c4c4092051871fd1a56abd5c35aa3", "message": "fix: none", "committedDate": "2020-05-11T10:02:28Z", "type": "commit"}, {"oid": "5f921225ad61d8445411bbe53969d4d20a94ca10", "url": "https://github.com/alibaba/nacos/commit/5f921225ad61d8445411bbe53969d4d20a94ca10", "message": "feat: use jraft-grpc", "committedDate": "2020-05-11T12:21:11Z", "type": "commit"}, {"oid": "e231590335c4df0a377f004a182d9424f3598e07", "url": "https://github.com/alibaba/nacos/commit/e231590335c4df0a377f004a182d9424f3598e07", "message": "fix: grpc", "committedDate": "2020-05-14T06:38:46Z", "type": "commit"}, {"oid": "0c6a03724aec5db983bb9287be6f4a19d11612a4", "url": "https://github.com/alibaba/nacos/commit/0c6a03724aec5db983bb9287be6f4a19d11612a4", "message": "fix: fix grpc-version bug", "committedDate": "2020-05-14T08:25:41Z", "type": "commit"}, {"oid": "08623c9ef32870a13a81a5ba561d5e1bc74b6d32", "url": "https://github.com/alibaba/nacos/commit/08623c9ef32870a13a81a5ba561d5e1bc74b6d32", "message": "refactor: support grpc", "committedDate": "2020-05-14T10:10:40Z", "type": "commit"}, {"oid": "bc2de3c0ea41aeb4cdb245652ed9210272974da2", "url": "https://github.com/alibaba/nacos/commit/bc2de3c0ea41aeb4cdb245652ed9210272974da2", "message": "Merge branch 'develop' of https://github.com/alibaba/nacos into feature_1.3.0_beta_grpc", "committedDate": "2020-05-14T11:56:15Z", "type": "commit"}, {"oid": "f5af8229633c1935e69f1ce116b5c9fe06bc63bd", "url": "https://github.com/alibaba/nacos/commit/f5af8229633c1935e69f1ce116b5c9fe06bc63bd", "message": "refactor: merge develop", "committedDate": "2020-05-14T12:35:32Z", "type": "commit"}, {"oid": "b86f633c8a0ad49efc85d5f5b83c7a0cc8d33c27", "url": "https://github.com/alibaba/nacos/commit/b86f633c8a0ad49efc85d5f5b83c7a0cc8d33c27", "message": "Merge branch 'develop' of https://github.com/alibaba/nacos into feature_1.3.0_beta_grpc", "committedDate": "2020-05-16T06:36:49Z", "type": "commit"}, {"oid": "07dd129dd0feb6beb40d01127093eabaced569b2", "url": "https://github.com/alibaba/nacos/commit/07dd129dd0feb6beb40d01127093eabaced569b2", "message": "refactor: fixed instance information update heartbeat information not updating", "committedDate": "2020-05-17T08:22:49Z", "type": "commit"}, {"oid": "587a0937c9c506bc3a4447f247697c9e786ca61c", "url": "https://github.com/alibaba/nacos/commit/587a0937c9c506bc3a4447f247697c9e786ca61c", "message": "refactor: perform consistency logic", "committedDate": "2020-05-17T15:13:40Z", "type": "commit"}, {"oid": "5f39cc8d75e30332845563cee99766b942c26e26", "url": "https://github.com/alibaba/nacos/commit/5f39cc8d75e30332845563cee99766b942c26e26", "message": "refactor: jraft protocol", "committedDate": "2020-05-18T03:00:11Z", "type": "commit"}, {"oid": "5ac48059cbf3fb8323ac48d3788473f3e07c7987", "url": "https://github.com/alibaba/nacos/commit/5ac48059cbf3fb8323ac48d3788473f3e07c7987", "message": "fix: fixed future.join blocking thread", "committedDate": "2020-05-18T07:45:20Z", "type": "commit"}, {"oid": "e467b26ef67d02c994f75f0859bdc05c15f67cb7", "url": "https://github.com/alibaba/nacos/commit/e467b26ef67d02c994f75f0859bdc05c15f67cb7", "message": "style: fix code style", "committedDate": "2020-05-19T03:21:00Z", "type": "commit"}, {"oid": "c6ff9031c512c1caadca7535f0f1f97df5c7b66c", "url": "https://github.com/alibaba/nacos/commit/c6ff9031c512c1caadca7535f0f1f97df5c7b66c", "message": "refactor: remove extraneous code", "committedDate": "2020-05-20T14:47:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MjMwOQ==", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r428472309", "bodyText": "Using logger is better way, right ?", "author": "EasonFeng5870", "createdAt": "2020-05-21T06:36:49Z", "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java", "diffHunk": "@@ -174,6 +174,9 @@ public void doFilter(ServletRequest request, ServletResponse response,\n \t\t\t\t\tString headerName = headerNames.nextElement();\n \t\t\t\t\theaders.set(headerName, req.getHeader(headerName));\n \t\t\t\t}\n+\n+\t\t\t\tSystem.out.println(reqUrl);", "originalCommit": "c6ff9031c512c1caadca7535f0f1f97df5c7b66c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c615699933dcc0eadc9f99d9c87a8e947df88571", "chunk": "diff --git a/config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java b/config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java\ndeleted file mode 100644\nindex 1df5d95cb..000000000\n--- a/config/src/main/java/com/alibaba/nacos/config/server/filter/TransferToLeaderFilter.java\n+++ /dev/null\n\n@@ -1,280 +0,0 @@\n-/*\n- * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package com.alibaba.nacos.config.server.filter;\n-\n-import com.alibaba.nacos.common.http.param.MediaType;\n-import com.alibaba.nacos.common.utils.ExceptionUtil;\n-import com.alibaba.nacos.common.utils.Observable;\n-import com.alibaba.nacos.common.utils.Observer;\n-import com.alibaba.nacos.config.server.constant.Constants;\n-import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;\n-import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;\n-import com.alibaba.nacos.config.server.utils.LogUtil;\n-import com.alibaba.nacos.consistency.cp.CPProtocol;\n-import com.alibaba.nacos.core.cluster.Member;\n-import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;\n-import com.alibaba.nacos.core.cluster.ServerMemberManager;\n-import com.alibaba.nacos.core.code.ControllerMethodsCache;\n-import com.alibaba.nacos.core.notify.Event;\n-import com.alibaba.nacos.core.notify.NotifyCenter;\n-import com.alibaba.nacos.core.notify.listener.SmartSubscribe;\n-import com.alibaba.nacos.core.utils.ReuseHttpRequest;\n-import com.alibaba.nacos.core.utils.ReuseHttpServletRequest;\n-import com.alibaba.nacos.core.utils.ReuseUploadFileHttpServletRequest;\n-import com.alibaba.nacos.core.utils.WebUtils;\n-import org.apache.commons.lang3.StringUtils;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.HttpEntity;\n-import org.springframework.http.HttpHeaders;\n-import org.springframework.http.HttpMethod;\n-import org.springframework.http.ResponseEntity;\n-import org.springframework.web.client.RestTemplate;\n-\n-import javax.annotation.PostConstruct;\n-import javax.servlet.Filter;\n-import javax.servlet.FilterChain;\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-import java.lang.reflect.Method;\n-import java.net.URI;\n-import java.security.AccessControlException;\n-import java.util.Enumeration;\n-import java.util.List;\n-import java.util.Map;\n-\n-/**\n- * If the embedded distributed storage is enabled, all requests are routed to the Leader\n- * node for processing, and the maximum number of forwards for a single request cannot\n- * exceed three\n- *\n- * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n- */\n-@SuppressWarnings(\"all\")\n-public class TransferToLeaderFilter implements Filter {\n-\n-\t@Autowired\n-\tprivate ServerMemberManager memberManager;\n-\n-\t@Autowired\n-\tprivate CPProtocol protocol;\n-\n-\t@Autowired\n-\tprivate ControllerMethodsCache controllerMethodsCache;\n-\n-\tprivate volatile String leaderServer = \"\";\n-\tprivate static final int MAX_TRANSFER_CNT = Integer\n-\t\t\t.getInteger(\"nacos.config.transfer-leader.max-num\", 1);\n-\n-\tprivate final RestTemplate restTemplate = new RestTemplate();\n-\n-\tprivate volatile boolean downgrading = false;\n-\tprivate volatile boolean openService = false;\n-\n-\t@PostConstruct\n-\tprotected void init() {\n-\t\tLogUtil.defaultLog.info(\"Open the request and forward it to the leader\");\n-\t\tlistenerLeaderStatus();\n-\t\tlistenerSelfInCluster();\n-\t\tregisterSubscribe();\n-\t}\n-\n-\t@Override\n-\tpublic void doFilter(ServletRequest request, ServletResponse response,\n-\t\t\tFilterChain chain) throws IOException, ServletException {\n-\n-\t\tReuseHttpRequest req = null;\n-\t\tHttpServletResponse resp = (HttpServletResponse) response;\n-\n-\t\tif (!openService) {\n-\t\t\tresp.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE,\n-\t\t\t\t\t\"In the node initialization, unable to process any requests at this time\");\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tString urlString = ((HttpServletRequest) request).getRequestURI();\n-\n-\t\tif (StringUtils.containsIgnoreCase(request.getContentType(),\n-\t\t\t\tMediaType.MULTIPART_FORM_DATA)) {\n-\t\t\treq = new ReuseUploadFileHttpServletRequest((HttpServletRequest) request);\n-\t\t}\n-\t\telse {\n-\t\t\treq = new ReuseHttpServletRequest((HttpServletRequest) request);\n-\t\t}\n-\n-\t\tif (StringUtils.isNotBlank(req.getQueryString())) {\n-\t\t\turlString += \"?\" + req.getQueryString();\n-\t\t}\n-\t\ttry {\n-\t\t\tString path = new URI(req.getRequestURI()).getPath();\n-\t\t\tMethod method = controllerMethodsCache.getMethod(req.getMethod(), path);\n-\n-\t\t\tif (method == null) {\n-\t\t\t\tthrow new NoSuchMethodException(req.getMethod() + \" \" + path);\n-\t\t\t}\n-\n-\t\t\t// Determine if the system degradation was triggered\n-\t\t\t// System demotion is enabled and all requests are forwarded to the leader node\n-\t\t\tboolean isLeader = protocol.isLeader(Constants.CONFIG_MODEL_RAFT_GROUP);\n-\n-\t\t\tif (downgrading && isLeader) {\n-\t\t\t\tresp.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE,\n-\t\t\t\t\t\t\"Unable to process the request at this time: System triggered degradation\");\n-\t\t\t\treturn;\n-\t\t\t}\n-\n-\t\t\tif (downgrading || (method.isAnnotationPresent(ToLeader.class)\n-\t\t\t\t\t&& !isLeader)) {\n-\t\t\t\tif (StringUtils.isBlank(leaderServer)) {\n-\t\t\t\t\tresp.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE,\n-\t\t\t\t\t\t\t\"Unable to process the request at this time: no Leader\");\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\n-\t\t\t\tfinal String val = req.getHeader(Constants.FORWARD_LEADER);\n-\t\t\t\tfinal int transferCnt =\n-\t\t\t\t\t\tInteger.parseInt(StringUtils.isEmpty(val) ? \"0\" : val) + 1;\n-\n-\t\t\t\t// Requests can only be forwarded once if a downgrade is not triggered\n-\t\t\t\tif (transferCnt > MAX_TRANSFER_CNT && !downgrading) {\n-\t\t\t\t\tresp.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE,\n-\t\t\t\t\t\t\t\"Exceeded forwarding times:\" + req.getMethod() + \":\" + req\n-\t\t\t\t\t\t\t\t\t.getRequestURI());\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\n-\t\t\t\tif (urlString.startsWith(\"/\")) {\n-\t\t\t\t\turlString = urlString.substring(1);\n-\t\t\t\t}\n-\n-\t\t\t\tfinal String reqUrl =\n-\t\t\t\t\t\treq.getScheme() + \"://\" + leaderServer + \"/\" + urlString;\n-\n-\t\t\t\tfinal HttpHeaders headers = new HttpHeaders();\n-\t\t\t\tfinal Enumeration<String> headerNames = req.getHeaderNames();\n-\t\t\t\theaders.set(Constants.FORWARD_LEADER, String.valueOf(transferCnt));\n-\t\t\t\twhile (headerNames.hasMoreElements()) {\n-\t\t\t\t\tString headerName = headerNames.nextElement();\n-\t\t\t\t\theaders.set(headerName, req.getHeader(headerName));\n-\t\t\t\t}\n-\n-\t\t\t\tSystem.out.println(reqUrl);\n-\n-\t\t\t\tHttpEntity<Object> httpEntity = new HttpEntity<>(req.getBody(), headers);\n-\t\t\t\tResponseEntity<String> result = restTemplate\n-\t\t\t\t\t\t.exchange(reqUrl, HttpMethod.resolve(req.getMethod()), httpEntity,\n-\t\t\t\t\t\t\t\tString.class);\n-\t\t\t\tWebUtils.response(resp, result.getBody(), result.getStatusCodeValue());\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tchain.doFilter(req, response);\n-\t\t}\n-\t\tcatch (AccessControlException e) {\n-\t\t\tresp.sendError(HttpServletResponse.SC_FORBIDDEN,\n-\t\t\t\t\t\"access denied: \" + ExceptionUtil.getAllExceptionMsg(e));\n-\t\t\treturn;\n-\t\t}\n-\t\tcatch (NoSuchMethodException e) {\n-\t\t\tresp.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,\n-\t\t\t\t\t\"no such api:\" + req.getMethod() + \":\" + req.getRequestURI());\n-\t\t\treturn;\n-\t\t}\n-\t\tcatch (Exception e) {\n-\t\t\tLogUtil.defaultLog\n-\t\t\t\t\t.error(\"An exception occurred when the request was forwarded to the Leader {}, error {}\",\n-\t\t\t\t\t\t\tleaderServer, e);\n-\t\t\tresp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n-\t\t\t\t\t\"Server failed,\" + e.toString());\n-\t\t\treturn;\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void destroy() {\n-\n-\t}\n-\n-\tprivate void listenerLeaderStatus() {\n-\t\tprotocol.protocolMetaData().subscribe(Constants.CONFIG_MODEL_RAFT_GROUP,\n-\t\t\t\tcom.alibaba.nacos.consistency.cp.Constants.LEADER_META_DATA,\n-\t\t\t\tnew Observer() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void update(Observable o, Object arg) {\n-\t\t\t\t\t\tfinal String raftLeader = String.valueOf(arg);\n-\t\t\t\t\t\tboolean found = false;\n-\t\t\t\t\t\tfor (Map.Entry<String, Member> entry : memberManager\n-\t\t\t\t\t\t\t\t.getServerList().entrySet()) {\n-\t\t\t\t\t\t\tfinal Member member = entry.getValue();\n-\t\t\t\t\t\t\tfinal String raftAddress = member.getIp() + \":\" + member\n-\t\t\t\t\t\t\t\t\t.getExtendVal(MemberMetaDataConstants.RAFT_PORT);\n-\t\t\t\t\t\t\tif (StringUtils.equals(raftLeader, raftAddress)) {\n-\t\t\t\t\t\t\t\tleaderServer = entry.getKey();\n-\t\t\t\t\t\t\t\tfound = true;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tif (!found) {\n-\t\t\t\t\t\t\tleaderServer = \"\";\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t});\n-\t}\n-\n-\tprivate void listenerSelfInCluster() {\n-\t\tprotocol.protocolMetaData().subscribe(Constants.CONFIG_MODEL_RAFT_GROUP,\n-\t\t\t\tcom.alibaba.nacos.consistency.cp.Constants.RAFT_GROUP_MEMBER,\n-\t\t\t\tnew Observer() {\n-\t\t\t\t\t@Override\n-\t\t\t\t\tpublic void update(Observable o, Object arg) {\n-\t\t\t\t\t\tfinal List<String> peers = (List<String>) arg;\n-\t\t\t\t\t\tfinal Member self = memberManager.getSelf();\n-\t\t\t\t\t\tfinal String raftAddress = self.getIp() + \":\" + self\n-\t\t\t\t\t\t\t\t.getExtendVal(MemberMetaDataConstants.RAFT_PORT);\n-\t\t\t\t\t\t// Only when you are in the cluster and the current Leader is\n-\t\t\t\t\t\t// elected can you provide external services\n-\t\t\t\t\t\topenService = peers.contains(raftAddress)\n-\t\t\t\t\t\t\t\t&& StringUtils.isNotBlank(leaderServer);\n-\t\t\t\t\t}\n-\t\t\t\t});\n-\t}\n-\n-\tprivate void registerSubscribe() {\n-\t\tNotifyCenter.registerSubscribe(new SmartSubscribe() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void onEvent(Event event) {\n-\t\t\t\tif (event instanceof RaftDBErrorRecoverEvent) {\n-\t\t\t\t\tdowngrading = false;\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\t\t\t\tif (event instanceof RaftDBErrorEvent) {\n-\t\t\t\t\tdowngrading = true;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic boolean canNotify(Event event) {\n-\t\t\t\treturn (event instanceof RaftDBErrorEvent)\n-\t\t\t\t\t\t|| (event instanceof RaftDBErrorRecoverEvent);\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-}\n"}}, {"oid": "c615699933dcc0eadc9f99d9c87a8e947df88571", "url": "https://github.com/alibaba/nacos/commit/c615699933dcc0eadc9f99d9c87a8e947df88571", "message": "refactor: removes the request forwarding logic for the configuration module", "committedDate": "2020-05-21T06:53:23Z", "type": "commit"}, {"oid": "87a32a926bb7c3fa1b6b6f07ccd5ba9bdb9b728b", "url": "https://github.com/alibaba/nacos/commit/87a32a926bb7c3fa1b6b6f07ccd5ba9bdb9b728b", "message": "refactor: merge develop", "committedDate": "2020-05-21T10:08:29Z", "type": "commit"}, {"oid": "451351cfc0ceae3cd82d6aff96ad8c05d791a991", "url": "https://github.com/alibaba/nacos/commit/451351cfc0ceae3cd82d6aff96ad8c05d791a991", "message": "refactor: optimize message publishers", "committedDate": "2020-05-21T12:28:32Z", "type": "commit"}, {"oid": "be75c582c2798a5d58cac0af58847e2704190662", "url": "https://github.com/alibaba/nacos/commit/be75c582c2798a5d58cac0af58847e2704190662", "message": "Merge remote-tracking branch 'origin' into feature_1.3.0_beta_grpc", "committedDate": "2020-05-21T14:09:10Z", "type": "commit"}, {"oid": "5e52484a464cbbcd2b3644e09b9724599f23a2b8", "url": "https://github.com/alibaba/nacos/commit/5e52484a464cbbcd2b3644e09b9724599f23a2b8", "message": "refactor: removes the Http forward for the configuration module", "committedDate": "2020-05-21T14:11:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3NTYzMQ==", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429075631", "bodyText": "Here, you can print the expcetion error info.", "author": "zongtanghu", "createdAt": "2020-05-22T06:59:16Z", "path": "common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java", "diffHunk": "@@ -69,4 +66,18 @@ public static NAsyncHttpClient getAsyncHttpClient() {\n \t\treturn ASYNC_HTTP_CLIENT;\n \t}\n \n+\tpublic static void shutdown() {\n+\t\tif (!alreadyShutdown.compareAndSet(false, true)) {\n+\t\t\treturn;\n+\t\t}\n+\t\tlogger.warn(\"[HttpClientManager] Start destroying HttpClient\");\n+\t\ttry {\n+\t\t\tSYNC_HTTP_CLIENT.close();\n+\t\t\tASYNC_HTTP_CLIENT.close();\n+\t\t}\n+\t\tcatch (Exception ignore) {", "originalCommit": "5e52484a464cbbcd2b3644e09b9724599f23a2b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41703f98051e61e36ca47cc48247568064a3a3e3", "chunk": "diff --git a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java\nindex 26c3036ec..750775f4b 100644\n--- a/common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java\n+++ b/common/src/main/java/com/alibaba/nacos/common/http/HttpClientManager.java\n\n@@ -75,7 +76,9 @@ public class HttpClientManager {\n \t\t\tSYNC_HTTP_CLIENT.close();\n \t\t\tASYNC_HTTP_CLIENT.close();\n \t\t}\n-\t\tcatch (Exception ignore) {\n+\t\tcatch (Exception ex) {\n+\t\t\tlogger.error(\"An exception occurred when the HTTP client was closed : {}\",\n+\t\t\t\t\tExceptionUtil.getStackTrace(ex));\n \t\t}\n \t\tlogger.warn(\"[HttpClientManager] Destruction of the end\");\n \t}\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3ODI1MQ==", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429078251", "bodyText": "This variabler's meaning is uncertain.Maybe, isOpenService, is better.", "author": "zongtanghu", "createdAt": "2020-05-22T07:06:33Z", "path": "config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.alibaba.nacos.config.server.filter;\n+\n+import com.alibaba.nacos.common.utils.ExceptionUtil;\n+import com.alibaba.nacos.common.utils.Observable;\n+import com.alibaba.nacos.common.utils.Observer;\n+import com.alibaba.nacos.config.server.constant.Constants;\n+import com.alibaba.nacos.config.server.model.event.RaftDBErrorEvent;\n+import com.alibaba.nacos.config.server.model.event.RaftDBErrorRecoverEvent;\n+import com.alibaba.nacos.consistency.cp.CPProtocol;\n+import com.alibaba.nacos.core.cluster.Member;\n+import com.alibaba.nacos.core.cluster.MemberMetaDataConstants;\n+import com.alibaba.nacos.core.cluster.ServerMemberManager;\n+import com.alibaba.nacos.core.code.ControllerMethodsCache;\n+import com.alibaba.nacos.core.notify.Event;\n+import com.alibaba.nacos.core.notify.NotifyCenter;\n+import com.alibaba.nacos.core.notify.listener.SmartSubscribe;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import javax.annotation.PostConstruct;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.security.AccessControlException;\n+import java.util.List;\n+\n+/**\n+ * If the embedded distributed storage is enabled, all requests are routed to the Leader\n+ * node for processing, and the maximum number of forwards for a single request cannot\n+ * exceed three\n+ *\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ */\n+@SuppressWarnings(\"all\")\n+public class CurcuitFilter implements Filter {\n+\n+\t@Autowired\n+\tprivate ServerMemberManager memberManager;\n+\n+\t@Autowired\n+\tprivate CPProtocol protocol;\n+\n+\t@Autowired\n+\tprivate ControllerMethodsCache controllerMethodsCache;\n+\n+\tprivate volatile boolean downgrading = false;\n+\tprivate volatile boolean openService = false;\n+\n+\t@PostConstruct\n+\tprotected void init() {\n+\t\tlistenerSelfInCluster();\n+\t\tregisterSubscribe();\n+\t}\n+\n+\t@Override\n+\tpublic void doFilter(ServletRequest request, ServletResponse response,\n+\t\t\tFilterChain chain) throws IOException, ServletException {\n+\n+\t\tHttpServletRequest req = (HttpServletRequest) request;\n+\t\tHttpServletResponse resp = (HttpServletResponse) response;\n+\n+\t\tif (!openService) {", "originalCommit": "5e52484a464cbbcd2b3644e09b9724599f23a2b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41703f98051e61e36ca47cc48247568064a3a3e3", "chunk": "diff --git a/config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java b/config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java\nindex 8e84a01fd..576a0bd98 100644\n--- a/config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java\n+++ b/config/src/main/java/com/alibaba/nacos/config/server/filter/CurcuitFilter.java\n\n@@ -63,8 +63,8 @@ public class CurcuitFilter implements Filter {\n \t@Autowired\n \tprivate ControllerMethodsCache controllerMethodsCache;\n \n-\tprivate volatile boolean downgrading = false;\n-\tprivate volatile boolean openService = false;\n+\tprivate volatile boolean isDowngrading = false;\n+\tprivate volatile boolean isOpenService = false;\n \n \t@PostConstruct\n \tprotected void init() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3OTI3Ng==", "url": "https://github.com/alibaba/nacos/pull/2841#discussion_r429079276", "bodyText": "Maybe, the class name can be changed to ProtobufSerializer is better!", "author": "zongtanghu", "createdAt": "2020-05-22T07:09:27Z", "path": "consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ *\n+ *  * Copyright 1999-2018 Alibaba Group Holding Ltd.\n+ *  *\n+ *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  * you may not use this file except in compliance with the License.\n+ *  * You may obtain a copy of the License at\n+ *  *\n+ *  *      http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * Unless required by applicable law or agreed to in writing, software\n+ *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  * See the License for the specific language governing permissions and\n+ *  * limitations under the License.\n+ *\n+ */\n+\n+package com.alibaba.nacos.consistency.utils;\n+\n+import com.alibaba.nacos.consistency.entity.GetRequest;\n+import com.alibaba.nacos.consistency.entity.Log;\n+import com.alibaba.nacos.consistency.exception.ConsistencyException;\n+import com.google.protobuf.Message;\n+\n+/**\n+ * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n+ */\n+public final class ProtobufUtils {", "originalCommit": "5e52484a464cbbcd2b3644e09b9724599f23a2b8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "41703f98051e61e36ca47cc48247568064a3a3e3", "chunk": "diff --git a/consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java b/consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java\ndeleted file mode 100644\nindex 912aac070..000000000\n--- a/consistency/src/main/java/com/alibaba/nacos/consistency/utils/ProtobufUtils.java\n+++ /dev/null\n\n@@ -1,46 +0,0 @@\n-/*\n- *\n- *  * Copyright 1999-2018 Alibaba Group Holding Ltd.\n- *  *\n- *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n- *  * you may not use this file except in compliance with the License.\n- *  * You may obtain a copy of the License at\n- *  *\n- *  *      http://www.apache.org/licenses/LICENSE-2.0\n- *  *\n- *  * Unless required by applicable law or agreed to in writing, software\n- *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  * See the License for the specific language governing permissions and\n- *  * limitations under the License.\n- *\n- */\n-\n-package com.alibaba.nacos.consistency.utils;\n-\n-import com.alibaba.nacos.consistency.entity.GetRequest;\n-import com.alibaba.nacos.consistency.entity.Log;\n-import com.alibaba.nacos.consistency.exception.ConsistencyException;\n-import com.google.protobuf.Message;\n-\n-/**\n- * @author <a href=\"mailto:liaochuntao@live.com\">liaochuntao</a>\n- */\n-public final class ProtobufUtils {\n-\n-\tpublic static Message parse(byte[] bytes) {\n-\t\tMessage result = null;\n-\t\ttry {\n-\t\t\tresult = Log.parseFrom(bytes);\n-\t\t\treturn result;\n-\t\t} catch (Throwable ignore) { }\n-\n-\t\ttry {\n-\t\t\tresult = GetRequest.parseFrom(bytes);\n-\t\t\treturn result;\n-\t\t} catch (Throwable ignore) {}\n-\n-\t\tthrow new ConsistencyException(\"The current array cannot be serialized to the corresponding object\");\n-\t}\n-\n-}\n"}}, {"oid": "41703f98051e61e36ca47cc48247568064a3a3e3", "url": "https://github.com/alibaba/nacos/commit/41703f98051e61e36ca47cc48247568064a3a3e3", "message": "refactor: code optimization", "committedDate": "2020-05-22T15:12:50Z", "type": "commit"}, {"oid": "b3368396ae37841f6690da8c1d7080242dd04c27", "url": "https://github.com/alibaba/nacos/commit/b3368396ae37841f6690da8c1d7080242dd04c27", "message": "refactor: remove libs", "committedDate": "2020-05-22T15:40:18Z", "type": "commit"}, {"oid": "6426440a8e65de246f7bd00929b4e61289289351", "url": "https://github.com/alibaba/nacos/commit/6426440a8e65de246f7bd00929b4e61289289351", "message": "refactor: code refactor", "committedDate": "2020-05-23T06:33:56Z", "type": "commit"}, {"oid": "0e52d0457ca1be94e5cbc3b1a6eb31bc8a3c72f9", "url": "https://github.com/alibaba/nacos/commit/0e52d0457ca1be94e5cbc3b1a6eb31bc8a3c72f9", "message": "refactor: modify method name to avoid ambiguity", "committedDate": "2020-05-23T13:35:47Z", "type": "commit"}]}