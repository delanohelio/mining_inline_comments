{"pr_number": 399, "pr_title": "Fix CreateRequest chaining and provider ID extraction.", "pr_createdAt": "2020-04-27T22:09:04Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/399", "timeline": [{"oid": "28e3dc7f50c89bb1dd7604975be1e9fc4a49e26a", "url": "https://github.com/firebase/firebase-admin-java/commit/28e3dc7f50c89bb1dd7604975be1e9fc4a49e26a", "message": "Fix CreateRequest chaining and provider ID extraction.", "committedDate": "2020-04-27T22:03:02Z", "type": "commit"}, {"oid": "65827dc74177636ff83d2d9db5542119aac43a8c", "url": "https://github.com/firebase/firebase-admin-java/commit/65827dc74177636ff83d2d9db5542119aac43a8c", "message": "Fix javadoc comment.", "committedDate": "2020-04-27T22:08:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r416964961", "bodyText": "Lets call this AbstractCreateRequest or ProviderConfigCreateRequest and reduce overusing the name CreateRequest.  This also doesn't need to be a nested class. Might be cleaner to put it elsewhere.", "author": "hiranya911", "createdAt": "2020-04-28T22:36:05Z", "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -56,45 +62,52 @@ public boolean isEnabled() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest {\n+  public abstract static class CreateRequest<T extends CreateRequest<T>> {", "originalCommit": "65827dc74177636ff83d2d9db5542119aac43a8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMzgxNg==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417013816", "bodyText": "I like the idea of calling it AbstractCreateRequest instead of CreateRequest. However, I don't think we should move this into a separate class. Keeping it together is more consistent with all of our other CreateRequest/UpdateRequest classes.\nOn a somewhat related note, should AuthProviderConfig be renamed to AbstractProviderConfig? (Of course, the decision here might be influenced by our generics decision in #400.)", "author": "micahstairs", "createdAt": "2020-04-29T01:04:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzYzNQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417023635", "bodyText": "I prefer the shorter name ProviderConfig for this type (it's already nested in the auth package so the \"Auth\" part is kind of redundant). Also may be this doesn't need to be an abstract class at all? Is there any behavior that child classes are expected to implement, or are they just adding more attributes to the parent type?\nPerhaps we can just make it a regular class with a package-protected constructor?", "author": "hiranya911", "createdAt": "2020-04-29T01:46:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxNTQ4Ng==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417315486", "bodyText": "I think renaming to ProviderConfig makes sense given that \"Auth\" is redundant.\nHowever, I think we should keep it abstract for 2 reasons:\n\nWe never want to instantiate it on its own since it can't be used for anything.\nIf we make it concrete then we will be forced to implement getThis in AuthProvider.AbstractCreateRequest. The issue with this is that we then lose the ability to force its subclasses to implement getThis. If subclasses forget to override getThis then it would break how the chaining works.", "author": "micahstairs", "createdAt": "2020-04-29T13:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUyOTc1Nw==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417529757", "bodyText": "Does 2 actually apply here? Why would the outer class be required to implement a method of an abstract nested class?", "author": "hiranya911", "createdAt": "2020-04-29T18:38:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUzNzc1NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417537754", "bodyText": "Sorry, you're correct. However, I think keeping it abstract makes it more clear that we do not intend on instantiating it on its own.", "author": "micahstairs", "createdAt": "2020-04-29T18:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDk2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/AuthProviderConfig.java b/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\nindex 78b6cea..9d268d6 100644\n--- a/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\n+++ b/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\n\n@@ -62,7 +56,7 @@ public abstract class AuthProviderConfig {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public abstract static class CreateRequest<T extends CreateRequest<T>> {\n+  public abstract static class AbstractCreateRequest<T extends AbstractCreateRequest<T>> {\n \n     final Map<String,Object> properties = new HashMap<>();\n     String providerId;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NTUzNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r416965534", "bodyText": "May be just remove this property altogether, and always return the calculated value from the getter. It's quite cheap to compute.", "author": "hiranya911", "createdAt": "2020-04-28T22:37:30Z", "path": "src/main/java/com/google/firebase/auth/AuthProviderConfig.java", "diffHunk": "@@ -29,16 +29,22 @@\n  */\n public abstract class AuthProviderConfig {\n \n-  @Key(\"name\")\n+  // Lazily initialized from 'resourceName'.", "originalCommit": "65827dc74177636ff83d2d9db5542119aac43a8c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxMTUyNg==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417011526", "bodyText": "Okay! For consistency, I also made this change to the Tenant class.", "author": "micahstairs", "createdAt": "2020-04-29T00:55:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NTUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "f0f9be6eb8ac3dea8f421495490ddcf612a8357d", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/AuthProviderConfig.java b/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\nindex 78b6cea..2c1f51d 100644\n--- a/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\n+++ b/src/main/java/com/google/firebase/auth/AuthProviderConfig.java\n\n@@ -29,9 +29,6 @@ import java.util.Map;\n  */\n public abstract class AuthProviderConfig {\n \n-  // Lazily initialized from 'resourceName'.\n-  private String providerId;\n-\n   @Key(\"name\")\n   private String resourceName;\n \n"}}, {"oid": "f0f9be6eb8ac3dea8f421495490ddcf612a8357d", "url": "https://github.com/firebase/firebase-admin-java/commit/f0f9be6eb8ac3dea8f421495490ddcf612a8357d", "message": "Stop caching id extracted from resource name.", "committedDate": "2020-04-29T00:54:25Z", "type": "commit"}, {"oid": "4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5", "url": "https://github.com/firebase/firebase-admin-java/commit/4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5", "message": "Rename 'CreateRequest' to 'AbstractCreateRequest'.", "committedDate": "2020-04-29T01:00:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzkxNg==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417023916", "bodyText": "You can probably omit the AuthProviderConfig. prefix, now that the names are not ambiguous.", "author": "hiranya911", "createdAt": "2020-04-29T01:47:14Z", "path": "src/main/java/com/google/firebase/auth/OidcProviderConfig.java", "diffHunk": "@@ -53,7 +53,8 @@ public String getIssuer() {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public static final class CreateRequest extends AuthProviderConfig.CreateRequest<CreateRequest> {\n+  public static final class CreateRequest\n+      extends AuthProviderConfig.AbstractCreateRequest<CreateRequest> {", "originalCommit": "4fb85a64b6734ff93d2a2e8fbed27ad24a6c7de5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTE1MA==", "url": "https://github.com/firebase/firebase-admin-java/pull/399#discussion_r417359150", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-04-29T14:28:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyMzkxNg=="}], "type": "inlineReview", "revised_code": {"commit": "a814a27e3f746bec276a2ceeef98e53665d093eb", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/OidcProviderConfig.java b/src/main/java/com/google/firebase/auth/OidcProviderConfig.java\nindex 5761dd5..7fc148e 100644\n--- a/src/main/java/com/google/firebase/auth/OidcProviderConfig.java\n+++ b/src/main/java/com/google/firebase/auth/OidcProviderConfig.java\n\n@@ -53,14 +54,13 @@ public final class OidcProviderConfig extends AuthProviderConfig {\n    * <p>Set the initial attributes of the new provider by calling various setter methods available\n    * in this class.\n    */\n-  public static final class CreateRequest\n-      extends AuthProviderConfig.AbstractCreateRequest<CreateRequest> {\n+  public static final class CreateRequest extends AbstractCreateRequest<CreateRequest> {\n \n     /**\n      * Creates a new {@link CreateRequest}, which can be used to create a new OIDC Auth provider.\n      *\n      * <p>The returned object should be passed to\n-     * {@link AbstractFirebaseAuth#createProviderConfig(CreateRequest)} to register the provider\n+     * {@link AbstractFirebaseAuth#createOidcProviderConfig(CreateRequest)} to register the provider\n      * information persistently.\n      */\n     public CreateRequest() { }\n"}}, {"oid": "a814a27e3f746bec276a2ceeef98e53665d093eb", "url": "https://github.com/firebase/firebase-admin-java/commit/a814a27e3f746bec276a2ceeef98e53665d093eb", "message": "Rename 'AuthProviderConfig' to 'ProviderConfig'.", "committedDate": "2020-04-29T14:27:10Z", "type": "commit"}]}