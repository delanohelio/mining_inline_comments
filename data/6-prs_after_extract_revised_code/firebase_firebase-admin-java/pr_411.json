{"pr_number": 411, "pr_title": "Rename OIDC delete operation and refactor integration tests.", "pr_createdAt": "2020-05-12T23:16:00Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/411", "timeline": [{"oid": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "url": "https://github.com/firebase/firebase-admin-java/commit/36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "message": "Rename OIDC delete operation and refactor integration tests.", "committedDate": "2020-05-12T23:02:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODc1Nw==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424718757", "bodyText": "Nit: synchronize this for consistency (so that all access to the underlying List is threadsafe).", "author": "hiranya911", "createdAt": "2020-05-13T20:42:20Z", "path": "src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import org.junit.rules.ExternalResource;\n+\n+class ProviderConfigTestUtils {\n+\n+  static void assertOidcProviderConfigDoesNotExist(\n+      AbstractFirebaseAuth firebaseAuth, String providerId) throws Exception {\n+    try {\n+      firebaseAuth.getOidcProviderConfigAsync(providerId).get();\n+      fail(\"No error thrown for getting a deleted OIDC provider config.\");\n+    } catch (ExecutionException e) {\n+      assertTrue(e.getCause() instanceof FirebaseAuthException);\n+      assertEquals(FirebaseUserManager.CONFIGURATION_NOT_FOUND_ERROR,\n+          ((FirebaseAuthException) e.getCause()).getErrorCode());\n+    }\n+  }\n+\n+  /**\n+   * Creates temporary provider configs for testing, and deletes them at the end of each test case.\n+   */\n+  static final class TemporaryProviderConfig extends ExternalResource {\n+\n+    private final AbstractFirebaseAuth auth;\n+    private final List<String> oidcIds = new ArrayList<>();\n+\n+    TemporaryProviderConfig(AbstractFirebaseAuth auth) {\n+      this.auth = auth;\n+    }\n+\n+    OidcProviderConfig createOidcProviderConfig(OidcProviderConfig.CreateRequest request)", "originalCommit": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0Mjk4OA==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424742988", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-05-13T21:31:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODc1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java b/src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java\nindex 7923c7d..e4a6fc7 100644\n--- a/src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java\n+++ b/src/test/java/com/google/firebase/auth/ProviderConfigTestUtils.java\n\n@@ -16,6 +16,7 @@\n \n package com.google.firebase.auth;\n \n+import static com.google.common.base.Preconditions.checkArgument;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424720149", "bodyText": "Should we also expose a delete method on the TemporaryProviderConfig class so that it can drop the provider ID from the List? Otherwise we'd be making an extra rpc to delete an already deleted provider config.", "author": "hiranya911", "createdAt": "2020-05-13T20:45:06Z", "path": "src/test/java/com/google/firebase/auth/FirebaseAuthIT.java", "diffHunk": "@@ -563,124 +565,113 @@ public void testGenerateSignInWithEmailLink() throws Exception {\n   public void testOidcProviderConfigLifecycle() throws Exception {\n     // Create config provider\n     String providerId = \"oidc.provider-id\";\n-    OidcProviderConfig.CreateRequest createRequest =\n+    OidcProviderConfig config = temporaryProviderConfig.createOidcProviderConfig(\n         new OidcProviderConfig.CreateRequest()\n             .setProviderId(providerId)\n             .setDisplayName(\"DisplayName\")\n             .setEnabled(true)\n             .setClientId(\"ClientId\")\n-            .setIssuer(\"https://oidc.com/issuer\");\n-    OidcProviderConfig config = auth.createOidcProviderConfigAsync(createRequest).get();\n+            .setIssuer(\"https://oidc.com/issuer\"));\n     assertEquals(providerId, config.getProviderId());\n     assertEquals(\"DisplayName\", config.getDisplayName());\n     assertTrue(config.isEnabled());\n     assertEquals(\"ClientId\", config.getClientId());\n     assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n \n-    try {\n-      // Get config provider\n-      config = auth.getOidcProviderConfigAsync(providerId).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"DisplayName\", config.getDisplayName());\n-      assertTrue(config.isEnabled());\n-      assertEquals(\"ClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n+    // Get config provider\n+    config = auth.getOidcProviderConfigAsync(providerId).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"DisplayName\", config.getDisplayName());\n+    assertTrue(config.isEnabled());\n+    assertEquals(\"ClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n \n-      // Update config provider\n-      OidcProviderConfig.UpdateRequest updateRequest =\n-          new OidcProviderConfig.UpdateRequest(providerId)\n-              .setDisplayName(\"NewDisplayName\")\n-              .setEnabled(false)\n-              .setClientId(\"NewClientId\")\n-              .setIssuer(\"https://oidc.com/new-issuer\");\n-      config = auth.updateOidcProviderConfigAsync(updateRequest).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"NewDisplayName\", config.getDisplayName());\n-      assertFalse(config.isEnabled());\n-      assertEquals(\"NewClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n-    } finally {\n-      // Delete config provider\n-      auth.deleteProviderConfigAsync(providerId).get();\n-    }\n+    // Update config provider\n+    OidcProviderConfig.UpdateRequest updateRequest =\n+        new OidcProviderConfig.UpdateRequest(providerId)\n+            .setDisplayName(\"NewDisplayName\")\n+            .setEnabled(false)\n+            .setClientId(\"NewClientId\")\n+            .setIssuer(\"https://oidc.com/new-issuer\");\n+    config = auth.updateOidcProviderConfigAsync(updateRequest).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"NewDisplayName\", config.getDisplayName());\n+    assertFalse(config.isEnabled());\n+    assertEquals(\"NewClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n \n-    assertOidcProviderConfigDoesNotExist(auth, providerId);\n+    // Delete config provider\n+    auth.deleteOidcProviderConfigAsync(providerId).get();", "originalCommit": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0Mjg3MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424742871", "bodyText": "Okay sure, but we will need to synchronize on the list instead of synchronizing on the method in order to ensure that we don't try to create and delete at the same time.", "author": "micahstairs", "createdAt": "2020-05-13T21:30:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3NTg0Mw==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424775843", "bodyText": "I'd go for simplicity and just synchronize all the methods that modify the ID List. Performance issue should not really concern at this scale, especially for a test case.", "author": "hiranya911", "createdAt": "2020-05-13T22:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3NzYzNQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424777635", "bodyText": "This wasn't a performance optimization. We have to synchronize on the ID list or else we may run into concurrency issues if we delete and add to the list at the same time.", "author": "micahstairs", "createdAt": "2020-05-13T22:57:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5MjQ2Nw==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424792467", "bodyText": "Ah it turns out that I misunderstood how the synchronized keyword worked on methods!", "author": "micahstairs", "createdAt": "2020-05-13T23:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDE0OQ=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMzUzNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424723534", "bodyText": "Nit: I kindda liked the more descriptive name tenantAwareAuth here. But your call.", "author": "hiranya911", "createdAt": "2020-05-13T20:51:38Z", "path": "src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java", "diffHunk": "@@ -61,20 +64,21 @@\n   private static final JsonFactory jsonFactory = Utils.getDefaultJsonFactory();\n   private static final HttpTransport transport = Utils.getDefaultTransport();\n \n-  private static FirebaseAuth auth;\n   private static TenantManager tenantManager;\n-  private static TenantAwareFirebaseAuth tenantAwareAuth;\n+  private static TenantAwareFirebaseAuth auth;", "originalCommit": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTE0MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424739141", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-05-13T21:22:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMzUzNA=="}], "type": "inlineReview", "revised_code": {"commit": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java b/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\nindex 776b75a..e585f87 100644\n--- a/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\n+++ b/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\n\n@@ -65,11 +65,11 @@ public class TenantAwareFirebaseAuthIT {\n   private static final HttpTransport transport = Utils.getDefaultTransport();\n \n   private static TenantManager tenantManager;\n-  private static TenantAwareFirebaseAuth auth;\n+  private static TenantAwareFirebaseAuth tenantAwareAuth;\n   private static String tenantId;\n \n   @Rule public final TemporaryProviderConfig temporaryProviderConfig =\n-      new TemporaryProviderConfig(auth);\n+      new TemporaryProviderConfig(tenantAwareAuth);\n \n   @BeforeClass\n   public static void setUpClass() throws Exception {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNDE1Ng==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424724156", "bodyText": "Use the tempProviderConfig here and unroll the try-finally?", "author": "hiranya911", "createdAt": "2020-05-13T20:52:48Z", "path": "src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java", "diffHunk": "@@ -297,15 +270,15 @@ public void testOidcProviderConfigLifecycle() throws Exception {\n             .setEnabled(true)\n             .setClientId(\"ClientId\")\n             .setIssuer(\"https://oidc.com/issuer\");\n-    OidcProviderConfig config = tenantAwareAuth.createOidcProviderConfigAsync(createRequest).get();\n+    OidcProviderConfig config = auth.createOidcProviderConfigAsync(createRequest).get();", "originalCommit": "36a352a1a7eea48ebeb94558aa1c8af5ac8b5205", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczOTI4NQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/411#discussion_r424739285", "bodyText": "Whoops! Thanks for catching that.", "author": "micahstairs", "createdAt": "2020-05-13T21:23:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNDE1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java b/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\nindex 776b75a..e585f87 100644\n--- a/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\n+++ b/src/test/java/com/google/firebase/auth/TenantAwareFirebaseAuthIT.java\n\n@@ -263,45 +263,43 @@ public class TenantAwareFirebaseAuthIT {\n   public void testOidcProviderConfigLifecycle() throws Exception {\n     // Create config provider\n     String providerId = \"oidc.provider-id\";\n-    OidcProviderConfig.CreateRequest createRequest =\n-        new OidcProviderConfig.CreateRequest()\n-            .setProviderId(providerId)\n-            .setDisplayName(\"DisplayName\")\n-            .setEnabled(true)\n-            .setClientId(\"ClientId\")\n-            .setIssuer(\"https://oidc.com/issuer\");\n-    OidcProviderConfig config = auth.createOidcProviderConfigAsync(createRequest).get();\n+    OidcProviderConfig config =\n+        temporaryProviderConfig.createOidcProviderConfig(\n+          new OidcProviderConfig.CreateRequest()\n+              .setProviderId(providerId)\n+              .setDisplayName(\"DisplayName\")\n+              .setEnabled(true)\n+              .setClientId(\"ClientId\")\n+              .setIssuer(\"https://oidc.com/issuer\"));\n     assertEquals(providerId, config.getProviderId());\n     assertEquals(\"DisplayName\", config.getDisplayName());\n     assertEquals(\"ClientId\", config.getClientId());\n     assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n \n-    try {\n-      // Get config provider\n-      config = auth.getOidcProviderConfigAsync(providerId).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"DisplayName\", config.getDisplayName());\n-      assertEquals(\"ClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n-\n-      // Update config provider\n-      OidcProviderConfig.UpdateRequest updateRequest =\n-          new OidcProviderConfig.UpdateRequest(providerId)\n-              .setDisplayName(\"NewDisplayName\")\n-              .setEnabled(false)\n-              .setClientId(\"NewClientId\")\n-              .setIssuer(\"https://oidc.com/new-issuer\");\n-      config = auth.updateOidcProviderConfigAsync(updateRequest).get();\n-      assertEquals(providerId, config.getProviderId());\n-      assertEquals(\"NewDisplayName\", config.getDisplayName());\n-      assertFalse(config.isEnabled());\n-      assertEquals(\"NewClientId\", config.getClientId());\n-      assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n-    } finally {\n-      // Delete config provider\n-      auth.deleteOidcProviderConfigAsync(providerId).get();\n-      ProviderConfigTestUtils.assertOidcProviderConfigDoesNotExist(auth, providerId);\n-    }\n+    // Get config provider\n+    config = tenantAwareAuth.getOidcProviderConfigAsync(providerId).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"DisplayName\", config.getDisplayName());\n+    assertEquals(\"ClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/issuer\", config.getIssuer());\n+\n+    // Update config provider\n+    OidcProviderConfig.UpdateRequest updateRequest =\n+        new OidcProviderConfig.UpdateRequest(providerId)\n+            .setDisplayName(\"NewDisplayName\")\n+            .setEnabled(false)\n+            .setClientId(\"NewClientId\")\n+            .setIssuer(\"https://oidc.com/new-issuer\");\n+    config = tenantAwareAuth.updateOidcProviderConfigAsync(updateRequest).get();\n+    assertEquals(providerId, config.getProviderId());\n+    assertEquals(\"NewDisplayName\", config.getDisplayName());\n+    assertFalse(config.isEnabled());\n+    assertEquals(\"NewClientId\", config.getClientId());\n+    assertEquals(\"https://oidc.com/new-issuer\", config.getIssuer());\n+\n+    // Delete config provider\n+    temporaryProviderConfig.deleteOidcProviderConfig(providerId);\n+    ProviderConfigTestUtils.assertOidcProviderConfigDoesNotExist(tenantAwareAuth, providerId);\n   }\n \n   @Test\n"}}, {"oid": "3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "url": "https://github.com/firebase/firebase-admin-java/commit/3845b2c31b2065b7b8b51e8a9b699b39b42b8cbb", "message": "Address pull request feedback.", "committedDate": "2020-05-13T21:33:55Z", "type": "commit"}, {"oid": "91416b161205039fee9c6b13909f6b4781d47359", "url": "https://github.com/firebase/firebase-admin-java/commit/91416b161205039fee9c6b13909f6b4781d47359", "message": "Simplify synchonization.", "committedDate": "2020-05-13T23:08:11Z", "type": "commit"}]}