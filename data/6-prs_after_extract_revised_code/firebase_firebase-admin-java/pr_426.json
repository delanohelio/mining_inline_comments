{"pr_number": 426, "pr_title": "Add operation to list SAML provider configs.", "pr_createdAt": "2020-05-27T18:52:57Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/426", "timeline": [{"oid": "41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "url": "https://github.com/firebase/firebase-admin-java/commit/41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "message": "Add operation to list SAML provider configs.", "committedDate": "2020-05-27T18:50:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyMzM3NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432023374", "bodyText": "return listSamlProviderConfigs(pageToken, FirebaseUserManager.MAX_LIST_PROVIDER_CONFIGS_RESULTS);", "author": "hiranya911", "createdAt": "2020-05-28T18:03:06Z", "path": "src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java", "diffHunk": "@@ -1335,6 +1336,93 @@ protected SamlProviderConfig execute() throws FirebaseAuthException {\n     };\n   }\n \n+  /**\n+   * Gets a page of SAML Auth provider configs starting from the specified {@code pageToken}. Page\n+   * size will be limited to 100 provider configs.\n+   *\n+   * @param pageToken A non-empty page token string, or null to retrieve the first page of provider\n+   *     configs.\n+   * @return A {@link ListProviderConfigsPage} instance.\n+   * @throws IllegalArgumentException If the specified page token is empty\n+   * @throws FirebaseAuthException If an error occurs while retrieving provider config data.\n+   */\n+  public ListProviderConfigsPage<SamlProviderConfig> listSamlProviderConfigs(\n+        @Nullable String pageToken) throws FirebaseAuthException {\n+    int maxResults = FirebaseUserManager.MAX_LIST_PROVIDER_CONFIGS_RESULTS;", "originalCommit": "41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NjM0NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432176344", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-05-28T23:22:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyMzM3NA=="}], "type": "inlineReview", "revised_code": {"commit": "e9e5af4cb771a36de05cfbf30debf64150b45d10", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java b/src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java\nindex 83beb17..f30af1c 100644\n--- a/src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java\n+++ b/src/main/java/com/google/firebase/auth/AbstractFirebaseAuth.java\n\n@@ -1348,8 +1348,9 @@ public abstract class AbstractFirebaseAuth {\n    */\n   public ListProviderConfigsPage<SamlProviderConfig> listSamlProviderConfigs(\n         @Nullable String pageToken) throws FirebaseAuthException {\n-    int maxResults = FirebaseUserManager.MAX_LIST_PROVIDER_CONFIGS_RESULTS;\n-    return listSamlProviderConfigsOp(pageToken, maxResults).call();\n+    return listSamlProviderConfigs(\n+        pageToken,\n+        FirebaseUserManager.MAX_LIST_PROVIDER_CONFIGS_RESULTS);\n   }\n \n   /**\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDAzNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432024034", "bodyText": "Unnecessary?", "author": "hiranya911", "createdAt": "2020-05-28T18:04:26Z", "path": "src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth.internal;\n+\n+import com.google.api.client.util.Key;\n+import com.google.common.collect.ImmutableList;\n+import com.google.firebase.auth.SamlProviderConfig;\n+import java.util.List;\n+\n+/**\n+ * JSON data binding for ListInboundSamlConfigsResponse messages sent by Google identity toolkit\n+ * service.\n+ */\n+public final class ListSamlProviderConfigsResponse\n+    implements ListProviderConfigsResponse<SamlProviderConfig> {\n+\n+  @Key(\"inboundSamlConfigs\")\n+  private List<SamlProviderConfig> providerConfigs;\n+\n+  @Key(\"nextPageToken\")\n+  private String pageToken;\n+\n+  public ListSamlProviderConfigsResponse() { }", "originalCommit": "41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NjM5OA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432176398", "bodyText": "Removed.", "author": "micahstairs", "createdAt": "2020-05-28T23:22:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDAzNA=="}], "type": "inlineReview", "revised_code": {"commit": "e9e5af4cb771a36de05cfbf30debf64150b45d10", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java b/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\nindex fc3b99d..4386e21 100644\n--- a/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\n+++ b/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\n\n@@ -17,6 +17,7 @@\n package com.google.firebase.auth.internal;\n \n import com.google.api.client.util.Key;\n+import com.google.common.base.Strings;\n import com.google.common.collect.ImmutableList;\n import com.google.firebase.auth.SamlProviderConfig;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDQyNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432024424", "bodyText": "Strings.nullToEmpty()", "author": "hiranya911", "createdAt": "2020-05-28T18:05:06Z", "path": "src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.google.firebase.auth.internal;\n+\n+import com.google.api.client.util.Key;\n+import com.google.common.collect.ImmutableList;\n+import com.google.firebase.auth.SamlProviderConfig;\n+import java.util.List;\n+\n+/**\n+ * JSON data binding for ListInboundSamlConfigsResponse messages sent by Google identity toolkit\n+ * service.\n+ */\n+public final class ListSamlProviderConfigsResponse\n+    implements ListProviderConfigsResponse<SamlProviderConfig> {\n+\n+  @Key(\"inboundSamlConfigs\")\n+  private List<SamlProviderConfig> providerConfigs;\n+\n+  @Key(\"nextPageToken\")\n+  private String pageToken;\n+\n+  public ListSamlProviderConfigsResponse() { }\n+\n+  @Override\n+  public List<SamlProviderConfig> getProviderConfigs() {\n+    return providerConfigs == null ? ImmutableList.<SamlProviderConfig>of() : providerConfigs;\n+  }\n+\n+  @Override\n+  public boolean hasProviderConfigs() {\n+    return providerConfigs != null && !providerConfigs.isEmpty();\n+  }\n+\n+  @Override\n+  public String getPageToken() {\n+    return pageToken == null ? \"\" : pageToken;", "originalCommit": "41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NjQ3Mw==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432176473", "bodyText": "Nice! That's cleaner.", "author": "micahstairs", "createdAt": "2020-05-28T23:22:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDQyNA=="}], "type": "inlineReview", "revised_code": {"commit": "e9e5af4cb771a36de05cfbf30debf64150b45d10", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java b/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\nindex fc3b99d..4386e21 100644\n--- a/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\n+++ b/src/main/java/com/google/firebase/auth/internal/ListSamlProviderConfigsResponse.java\n\n@@ -17,6 +17,7 @@\n package com.google.firebase.auth.internal;\n \n import com.google.api.client.util.Key;\n+import com.google.common.base.Strings;\n import com.google.common.collect.ImmutableList;\n import com.google.firebase.auth.SamlProviderConfig;\n import java.util.List;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDcxNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432024714", "bodyText": "You can remove the default constructor now.", "author": "hiranya911", "createdAt": "2020-05-28T18:05:39Z", "path": "src/main/java/com/google/firebase/auth/internal/ListOidcProviderConfigsResponse.java", "diffHunk": "@@ -36,14 +34,6 @@\n   @Key(\"nextPageToken\")\n   private String pageToken;\n \n-  @VisibleForTesting\n-  public ListOidcProviderConfigsResponse(\n-      List<OidcProviderConfig> providerConfigs,\n-      String pageToken) {\n-    this.providerConfigs = providerConfigs;\n-    this.pageToken = pageToken;\n-  }\n-\n   public ListOidcProviderConfigsResponse() { }", "originalCommit": "41e9ccaecd49ce87ad15fc2dadb8dd0e05da1d12", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NjUyNw==", "url": "https://github.com/firebase/firebase-admin-java/pull/426#discussion_r432176527", "bodyText": "Good point! Done.", "author": "micahstairs", "createdAt": "2020-05-28T23:22:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAyNDcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "e9e5af4cb771a36de05cfbf30debf64150b45d10", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/internal/ListOidcProviderConfigsResponse.java b/src/main/java/com/google/firebase/auth/internal/ListOidcProviderConfigsResponse.java\nindex 8eaa553..e8b5e20 100644\n--- a/src/main/java/com/google/firebase/auth/internal/ListOidcProviderConfigsResponse.java\n+++ b/src/main/java/com/google/firebase/auth/internal/ListOidcProviderConfigsResponse.java\n\n@@ -34,8 +35,6 @@ public final class ListOidcProviderConfigsResponse\n   @Key(\"nextPageToken\")\n   private String pageToken;\n \n-  public ListOidcProviderConfigsResponse() { }\n-\n   @Override\n   public List<OidcProviderConfig> getProviderConfigs() {\n     return providerConfigs == null ? ImmutableList.<OidcProviderConfig>of() : providerConfigs;\n"}}, {"oid": "e9e5af4cb771a36de05cfbf30debf64150b45d10", "url": "https://github.com/firebase/firebase-admin-java/commit/e9e5af4cb771a36de05cfbf30debf64150b45d10", "message": "Address pull request feedback.", "committedDate": "2020-05-28T23:21:44Z", "type": "commit"}, {"oid": "8440c76cbc8d3f1ce365bcc7046f953c19853f44", "url": "https://github.com/firebase/firebase-admin-java/commit/8440c76cbc8d3f1ce365bcc7046f953c19853f44", "message": "Add missing period to Javadoc.", "committedDate": "2020-05-28T23:32:14Z", "type": "commit"}, {"oid": "f1cb2656975e2baf7c011571b9320b24205d1747", "url": "https://github.com/firebase/firebase-admin-java/commit/f1cb2656975e2baf7c011571b9320b24205d1747", "message": "Fix parameter name in javadoc comment.", "committedDate": "2020-05-29T00:24:54Z", "type": "commit"}, {"oid": "50c348362822db4514a694e97ebe29906b5626f3", "url": "https://github.com/firebase/firebase-admin-java/commit/50c348362822db4514a694e97ebe29906b5626f3", "message": "Set 'suppressLoadErrors' to true to avoid class information error.\n\nSee https://stackoverflow.com/questions/27938039/unable-to-get-class-information-for-checkstyle\nfor more context.", "committedDate": "2020-05-29T00:47:21Z", "type": "commit"}]}