{"pr_number": 371, "pr_title": "Add getTenant operation to TenantManager.", "pr_createdAt": "2020-02-20T19:47:26Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/371", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NjM4Mg==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382256382", "bodyText": "I think getTenant is descriptive enough. We have several different ways of fetching user accounts (by UID, by email etc), but we don't have that requirement here.", "author": "hiranya911", "createdAt": "2020-02-20T21:01:55Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {", "originalCommit": "e3b818ffc5722ee595d8187357bbf76bd2b6b043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMDUxMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385210510", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-02-27T16:11:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NjM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 8899897..29da43c 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -228,9 +227,17 @@ class FirebaseUserManager {\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n-  Tenant getTenantById(String tenantId) throws FirebaseAuthException {\n-    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants:get\");\n-    url.put(\"name\", tenantId);\n+  void deleteTenant(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n+    GenericJson response = sendRequest(\"DELETE\", url, null, GenericJson.class);\n+    if (response == null) {\n+      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR,\n+          \"Failed to delete tenant: \" + tenantId);\n+    }\n+  }\n+\n+  Tenant getTenant(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n     Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n     if (Strings.isNullOrEmpty(response.getTenantId())) {\n       throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzQxNQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382257415", "bodyText": "This doesn't quite look right. The URL path should be something like v2/projects/{projectsId}/tenants/{tenantsId}. That's what we use in other SDKs, and also what's listed in the auto-generated discovery doc.", "author": "hiranya911", "createdAt": "2020-02-20T21:04:30Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -226,6 +228,16 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n+  Tenant getTenantById(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants:get\");\n+    url.put(\"name\", tenantId);", "originalCommit": "e3b818ffc5722ee595d8187357bbf76bd2b6b043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxMDI0MA==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385210240", "bodyText": "Thanks! Fixed.", "author": "micahstairs", "createdAt": "2020-02-27T16:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzQxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 8899897..29da43c 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -228,9 +227,17 @@ class FirebaseUserManager {\n     return new UserImportResult(request.getUsersCount(), response);\n   }\n \n-  Tenant getTenantById(String tenantId) throws FirebaseAuthException {\n-    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants:get\");\n-    url.put(\"name\", tenantId);\n+  void deleteTenant(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n+    GenericJson response = sendRequest(\"DELETE\", url, null, GenericJson.class);\n+    if (response == null) {\n+      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR,\n+          \"Failed to delete tenant: \" + tenantId);\n+    }\n+  }\n+\n+  Tenant getTenant(String tenantId) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n     Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n     if (Strings.isNullOrEmpty(response.getTenantId())) {\n       throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r382259764", "bodyText": "I believe this endpoint sends a 404 (or similar error response) when the tenant is not found. Lets update the test case accordingly. See https://github.com/firebase/firebase-admin-go/blob/e088f55036154f0cccf661992f854abd8fb1333f/auth/tenant_mgt_test.go#L1096-L1100", "author": "hiranya911", "createdAt": "2020-02-20T21:10:16Z", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,28 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {\n+    initializeAppForUserManagement(\"{}\");", "originalCommit": "e3b818ffc5722ee595d8187357bbf76bd2b6b043", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NjQ4NQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385186485", "bodyText": "I don't think I follow. The Node implementation suggests I check for a response missing a 'name' (which is the tenantId): https://github.com/firebase/firebase-admin-node/blob/2b952d43fd8784151ebdb60b65e88b9fd1888ccf/src/auth/auth-api-request.ts#L1463.", "author": "micahstairs", "createdAt": "2020-02-27T15:29:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMTEyOQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385311129", "bodyText": "That's just some additional validation they do on the \"successful\" responses. On missing tenants, the backend sends a 404 NOT_FOUND error.", "author": "hiranya911", "createdAt": "2020-02-27T19:04:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4NjQyNQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385686425", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-02-28T13:10:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\nindex 80e7e0b..89549d1 100644\n--- a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n+++ b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n\n@@ -437,19 +437,23 @@ public class FirebaseUserManagerTest {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/TENANT_1\");\n   }\n \n   @Test\n   public void testGetTenantWithNotFoundError() throws Exception {\n-    initializeAppForUserManagement(\"{}\");\n+    TestResponseInterceptor interceptor =\n+        initializeAppForUserManagementWithStatusCode(404,\n+            \"{\\\"error\\\": {\\\"message\\\": \\\"TENANT_NOT_FOUND\\\"}}\");\n     try {\n-      FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"UNKNOWN_TENANT\").get();\n+      FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"UNKNOWN\").get();\n       fail(\"No error thrown for invalid response\");\n     } catch (ExecutionException e) {\n-      assertTrue(e.getCause() instanceof FirebaseAuthException);\n+      assertThat(e.getCause(), instanceOf(FirebaseAuthException.class));\n       FirebaseAuthException authException = (FirebaseAuthException) e.getCause();\n       assertEquals(FirebaseUserManager.TENANT_NOT_FOUND_ERROR, authException.getErrorCode());\n     }\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/UNKNOWN\");\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMjIyMA==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385312220", "bodyText": "Nit: Define the URL prefix (up to the /tenants portion) in a constant.", "author": "hiranya911", "createdAt": "2020-02-27T19:06:40Z", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -437,19 +437,23 @@ public void testGetTenant() throws Exception {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n+    checkUrl(interceptor,\n+        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");", "originalCommit": "37d8d5ef1b70767392b5beef498bff5d7a467dfc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY4NjU0Mg==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385686542", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-02-28T13:10:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxMjIyMA=="}], "type": "inlineReview", "revised_code": {"commit": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\nindex 6c10449..89549d1 100644\n--- a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n+++ b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n\n@@ -437,23 +437,23 @@ public class FirebaseUserManagerTest {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n-    checkUrl(interceptor,\n-        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/TENANT_1\");\n   }\n \n   @Test\n   public void testGetTenantWithNotFoundError() throws Exception {\n-    TestResponseInterceptor interceptor = initializeAppForUserManagement(\"{}\");\n+    TestResponseInterceptor interceptor =\n+        initializeAppForUserManagementWithStatusCode(404,\n+            \"{\\\"error\\\": {\\\"message\\\": \\\"TENANT_NOT_FOUND\\\"}}\");\n     try {\n       FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"UNKNOWN\").get();\n       fail(\"No error thrown for invalid response\");\n     } catch (ExecutionException e) {\n-      assertTrue(e.getCause() instanceof FirebaseAuthException);\n+      assertThat(e.getCause(), instanceOf(FirebaseAuthException.class));\n       FirebaseAuthException authException = (FirebaseAuthException) e.getCause();\n       assertEquals(FirebaseUserManager.TENANT_NOT_FOUND_ERROR, authException.getErrorCode());\n     }\n-    checkUrl(interceptor,\n-        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/UNKNOWN\");\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/UNKNOWN\");\n   }\n \n   @Test\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMxNDA4OA==", "url": "https://github.com/firebase/firebase-admin-java/pull/371#discussion_r385314088", "bodyText": "Compare with https://github.com/firebase/firebase-admin-go/blob/e088f55036154f0cccf661992f854abd8fb1333f/auth/tenant_mgt_test.go#L1151-L1161", "author": "hiranya911", "createdAt": "2020-02-27T19:10:22Z", "path": "src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java", "diffHunk": "@@ -430,6 +430,32 @@ public void testImportUsersLargeList() {\n     }\n   }\n \n+  @Test\n+  public void testGetTenant() throws Exception {\n+    TestResponseInterceptor interceptor = initializeAppForUserManagement(\n+        TestUtils.loadResource(\"getTenant.json\"));\n+    Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n+    checkTenant(tenant, \"TENANT_1\");\n+    checkRequestHeaders(interceptor);\n+    checkUrl(interceptor,\n+        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");\n+  }\n+\n+  @Test\n+  public void testGetTenantWithNotFoundError() throws Exception {", "originalCommit": "37d8d5ef1b70767392b5beef498bff5d7a467dfc", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "chunk": "diff --git a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\nindex 6c10449..89549d1 100644\n--- a/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n+++ b/src/test/java/com/google/firebase/auth/FirebaseUserManagerTest.java\n\n@@ -437,23 +437,23 @@ public class FirebaseUserManagerTest {\n     Tenant tenant = FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"TENANT_1\").get();\n     checkTenant(tenant, \"TENANT_1\");\n     checkRequestHeaders(interceptor);\n-    checkUrl(interceptor,\n-        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/TENANT_1\");\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/TENANT_1\");\n   }\n \n   @Test\n   public void testGetTenantWithNotFoundError() throws Exception {\n-    TestResponseInterceptor interceptor = initializeAppForUserManagement(\"{}\");\n+    TestResponseInterceptor interceptor =\n+        initializeAppForUserManagementWithStatusCode(404,\n+            \"{\\\"error\\\": {\\\"message\\\": \\\"TENANT_NOT_FOUND\\\"}}\");\n     try {\n       FirebaseAuth.getInstance().getTenantManager().getTenantAsync(\"UNKNOWN\").get();\n       fail(\"No error thrown for invalid response\");\n     } catch (ExecutionException e) {\n-      assertTrue(e.getCause() instanceof FirebaseAuthException);\n+      assertThat(e.getCause(), instanceOf(FirebaseAuthException.class));\n       FirebaseAuthException authException = (FirebaseAuthException) e.getCause();\n       assertEquals(FirebaseUserManager.TENANT_NOT_FOUND_ERROR, authException.getErrorCode());\n     }\n-    checkUrl(interceptor,\n-        \"https://identitytoolkit.googleapis.com/v2/projects/test-project-id/tenants/UNKNOWN\");\n+    checkUrl(interceptor, \"GET\", TENANTS_BASE_URL + \"/UNKNOWN\");\n   }\n \n   @Test\n"}}, {"oid": "3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "url": "https://github.com/firebase/firebase-admin-java/commit/3695fcd1afcbc59e1d569200aa8db80afcdedbd6", "message": "Update javadoc comment.", "committedDate": "2020-02-28T19:06:46Z", "type": "forcePushed"}, {"oid": "88b17a7b199f37707ca6e720b41f3cbffb98d690", "url": "https://github.com/firebase/firebase-admin-java/commit/88b17a7b199f37707ca6e720b41f3cbffb98d690", "message": "Add getTenant operation to TenantManager.", "committedDate": "2020-02-28T19:36:25Z", "type": "commit"}, {"oid": "546f93c44b01f22bf495a651491167ec93e22c93", "url": "https://github.com/firebase/firebase-admin-java/commit/546f93c44b01f22bf495a651491167ec93e22c93", "message": "Fix merging of deleteTenant changes.", "committedDate": "2020-02-28T19:36:34Z", "type": "commit"}, {"oid": "85f3e5a97d7cb949f5c3111d9443d7d260603013", "url": "https://github.com/firebase/firebase-admin-java/commit/85f3e5a97d7cb949f5c3111d9443d7d260603013", "message": "Make unit test return 404 error when there is no tenant to get.", "committedDate": "2020-02-28T19:36:34Z", "type": "commit"}, {"oid": "968893bf0709c77a7d2f5fd6afd4d0b040a6f120", "url": "https://github.com/firebase/firebase-admin-java/commit/968893bf0709c77a7d2f5fd6afd4d0b040a6f120", "message": "Update javadoc comment.", "committedDate": "2020-02-28T19:36:34Z", "type": "commit"}, {"oid": "1886ba8db4d0995e3d3cd127fa4dbead6979e0fd", "url": "https://github.com/firebase/firebase-admin-java/commit/1886ba8db4d0995e3d3cd127fa4dbead6979e0fd", "message": "Clean up after interactive rebase.", "committedDate": "2020-02-28T19:36:34Z", "type": "commit"}, {"oid": "fcc32672d1da72e70d46ac577c8be6ddc91e6fcf", "url": "https://github.com/firebase/firebase-admin-java/commit/fcc32672d1da72e70d46ac577c8be6ddc91e6fcf", "message": "Fix merge conflict.", "committedDate": "2020-02-28T19:40:54Z", "type": "commit"}, {"oid": "fcc32672d1da72e70d46ac577c8be6ddc91e6fcf", "url": "https://github.com/firebase/firebase-admin-java/commit/fcc32672d1da72e70d46ac577c8be6ddc91e6fcf", "message": "Fix merge conflict.", "committedDate": "2020-02-28T19:40:54Z", "type": "forcePushed"}, {"oid": "730dc19126908159cc02e318eed6600b099fd009", "url": "https://github.com/firebase/firebase-admin-java/commit/730dc19126908159cc02e318eed6600b099fd009", "message": "Fix merge conflicts one last time.", "committedDate": "2020-02-28T19:48:10Z", "type": "commit"}]}