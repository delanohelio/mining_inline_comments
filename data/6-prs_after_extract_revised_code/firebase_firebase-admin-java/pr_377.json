{"pr_number": 377, "pr_title": "Add createTenant and updateTenant operations.", "pr_createdAt": "2020-03-02T13:17:40Z", "pr_url": "https://github.com/firebase/firebase-admin-java/pull/377", "timeline": [{"oid": "3e523878790fb8cb3440e0834ec8e8904c58a233", "url": "https://github.com/firebase/firebase-admin-java/commit/3e523878790fb8cb3440e0834ec8e8904c58a233", "message": "Implement createTenant and updateTenant operations.", "committedDate": "2020-03-02T03:45:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzMzOA==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603338", "bodyText": "Put the properties in the request body.", "author": "hiranya911", "createdAt": "2020-03-02T19:30:49Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());", "originalCommit": "3e523878790fb8cb3440e0834ec8e8904c58a233", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwNDQ1Mw==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r389404453", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-03-08T20:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzMzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b847d370f5ba5e504dc4a4ff874e845a903f4d81", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 7706c2e..a9d3396 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -235,8 +235,7 @@ class FirebaseUserManager {\n \n   Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n-    url.putAll(request.getProperties());\n-    return sendRequest(\"POST\", url, null, Tenant.class);\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n   }\n \n   Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzcyNw==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386603727", "bodyText": "Put the properties in the request body. Remove the extra call to getProperties().", "author": "hiranya911", "createdAt": "2020-03-02T19:31:35Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());\n+    url.putAll(properties);\n+    url.putAll(request.getProperties());", "originalCommit": "3e523878790fb8cb3440e0834ec8e8904c58a233", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwNDQ1OA==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r389404458", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-03-08T20:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwMzcyNw=="}], "type": "inlineReview", "revised_code": {"commit": "b847d370f5ba5e504dc4a4ff874e845a903f4d81", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 7706c2e..a9d3396 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -235,8 +235,7 @@ class FirebaseUserManager {\n \n   Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n-    url.putAll(request.getProperties());\n-    return sendRequest(\"POST\", url, null, Tenant.class);\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n   }\n \n   Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386604446", "bodyText": "You need to generate an updateMask from the given properties, and add it the URL here. See the corresponding Go and Node.js implementations.", "author": "hiranya911", "createdAt": "2020-03-02T19:33:01Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +230,28 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    url.putAll(request.getProperties());\n+    return sendRequest(\"POST\", url, null, Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(properties.size() > 1,\n+        \"tenant update must have at least one property other than tenantId set\");\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());", "originalCommit": "3e523878790fb8cb3440e0834ec8e8904c58a233", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc4NTAyNg==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r386785026", "bodyText": "Okay, interesting. So for the update request, we encode the properties 2 different ways.\nI found the utility which builds the mask in Node (https://github.com/firebase/firebase-admin-node/blob/0f6c02e3377c3337e4f206e176b2d96ec6dd6c3c/src/utils/index.ts#L148).\nAny idea if we already have a similar utility in Java? Or do I need to write one? From looking at Node's tests (https://github.com/firebase/firebase-admin-node/blob/0f6c02e3377c3337e4f206e176b2d96ec6dd6c3c/test/unit/utils/index.spec.ts#L307), it looks like the format we want is something like this:\n...../tenants/TENANT_ID?updateMask=name.TENANT_ID,displayName.DISPLAY_NAME,allowPasswordSignup.true,enableEmailLinkSignin.false\nDoes that look right?", "author": "micahstairs", "createdAt": "2020-03-03T03:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzIxMTExNA==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r387211114", "bodyText": "I don't think we have a util in Java for this at the moment. The field mask should only consist of field names in a dotted notation. Following json payload:\n{\n  'parentField1': 'some value',\n  'parentField2': 'another value',\n  'parentField3': {\n    'childField1': 'yet another value'\n  }\n}\n\nshould become:\n['parentField1', 'parentField2', 'parentField3.childField1']\n\nYou can also look at the unit tests of the Node.js utils for more examples.", "author": "hiranya911", "createdAt": "2020-03-03T18:29:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg0NzQxMw==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391847413", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-03-12T19:36:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNDQ0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b847d370f5ba5e504dc4a4ff874e845a903f4d81", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 7706c2e..a9d3396 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -235,8 +235,7 @@ class FirebaseUserManager {\n \n   Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n-    url.putAll(request.getProperties());\n-    return sendRequest(\"POST\", url, null, Tenant.class);\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n   }\n \n   Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n"}}, {"oid": "b847d370f5ba5e504dc4a4ff874e845a903f4d81", "url": "https://github.com/firebase/firebase-admin-java/commit/b847d370f5ba5e504dc4a4ff874e845a903f4d81", "message": "Put createTenant/updateTenant properties in body instead of URL.", "committedDate": "2020-03-08T20:54:52Z", "type": "commit"}, {"oid": "22d3608dbc6127cac737d07154398c600e20ca5b", "url": "https://github.com/firebase/firebase-admin-java/commit/22d3608dbc6127cac737d07154398c600e20ca5b", "message": "Send request parameters in body and add updateMask to URL.", "committedDate": "2020-03-12T19:35:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NDM1NA==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391874354", "bodyText": "This will break if the request contains any nested properties (we don't have any at the moment). If the request is shaped like {\"foo\": {\"bar\": 100}}, the update mask should look like ['foo.bar'].\nLet's either implement a small util function to generate the correct update masks for all requests, or add a comment/TODO here to indicate the limitation with the current appraoch.", "author": "hiranya911", "createdAt": "2020-03-12T20:23:24Z", "path": "src/main/java/com/google/firebase/auth/FirebaseUserManager.java", "diffHunk": "@@ -230,20 +231,26 @@ UserImportResult importUsers(UserImportRequest request) throws FirebaseAuthExcep\n \n   Tenant getTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n-    Tenant response = sendRequest(\"GET\", url, null, Tenant.class);\n-    if (Strings.isNullOrEmpty(response.getTenantId())) {\n-      throw new FirebaseAuthException(TENANT_NOT_FOUND_ERROR, \"Failed to get tenant.\");\n-    }\n-    return response;\n+    return sendRequest(\"GET\", url, null, Tenant.class);\n+  }\n+\n+  Tenant createTenant(Tenant.CreateRequest request) throws FirebaseAuthException {\n+    GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants\");\n+    return sendRequest(\"POST\", url, request.getProperties(), Tenant.class);\n+  }\n+\n+  Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n+    Map<String, Object> properties = request.getProperties();\n+    checkArgument(!properties.isEmpty(), \"tenant update must have at least one property set\");\n+    String updateMask = String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));", "originalCommit": "22d3608dbc6127cac737d07154398c600e20ca5b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDc1MQ==", "url": "https://github.com/firebase/firebase-admin-java/pull/377#discussion_r391890751", "bodyText": "Done.", "author": "micahstairs", "createdAt": "2020-03-12T20:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg3NDM1NA=="}], "type": "inlineReview", "revised_code": {"commit": "2f549ee3dabad7969829e54007a134338946d2fa", "chunk": "diff --git a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\nindex 86fa89b..ec1cbe6 100644\n--- a/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n+++ b/src/main/java/com/google/firebase/auth/FirebaseUserManager.java\n\n@@ -242,12 +242,19 @@ class FirebaseUserManager {\n   Tenant updateTenant(Tenant.UpdateRequest request) throws FirebaseAuthException {\n     Map<String, Object> properties = request.getProperties();\n     checkArgument(!properties.isEmpty(), \"tenant update must have at least one property set\");\n-    String updateMask = String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + request.getTenantId());\n-    url.put(\"updateMask\", updateMask);\n+    url.put(\"updateMask\", generateMask(properties));\n     return sendRequest(\"PATCH\", url, properties, Tenant.class);\n   }\n \n+  private static String generateMask(Map<String, Object> properties) {\n+    // This implementation does not currently handle the case of nested properties. This is fine\n+    // since we do not currently generate masks for any properties with nested values. When it\n+    // comes time to implement this, we can check if a property has nested properties by checking\n+    // if it is an instance of the Map class.\n+    return String.join(\",\", ImmutableSortedSet.copyOf(properties.keySet()));\n+  }\n+\n   void deleteTenant(String tenantId) throws FirebaseAuthException {\n     GenericUrl url = new GenericUrl(tenantMgtBaseUrl + \"/tenants/\" + tenantId);\n     sendRequest(\"DELETE\", url, null, GenericJson.class);\n"}}, {"oid": "2f549ee3dabad7969829e54007a134338946d2fa", "url": "https://github.com/firebase/firebase-admin-java/commit/2f549ee3dabad7969829e54007a134338946d2fa", "message": "Move update mask logic to helper method and add comment describing limitations.", "committedDate": "2020-03-12T20:57:54Z", "type": "commit"}]}