{"pr_number": 10751, "pr_title": "Allow and skip null handlers when adding a vararg list of handlers", "pr_createdAt": "2020-10-29T18:13:16Z", "pr_url": "https://github.com/netty/netty/pull/10751", "timeline": [{"oid": "80fa0cf28da899e812049543c261097978d524ac", "url": "https://github.com/netty/netty/commit/80fa0cf28da899e812049543c261097978d524ac", "message": "Allow and skip null handlers when adding a vararg list of handlers\n\nMotivation\n\nAllowing null handlers allows for more convenient idioms in\nconditionally adding handlers, e.g.,\n\nch.pipeline().addLast(\n        new FooHandler(),\n        condition ? new BarHandler() : null,\n        new BazHandler()\n);\n\nModifications\n\n* Change addFirst(..) and addLast(..) to skip null handlers, rather than\nbreak or short-circuit.\n* Add new unit tests.\n\nResult\n\n* Makes addFirst(..) and addLast(..) behavior more consistent\n* Resolves https://github.com/netty/netty/issues/10728", "committedDate": "2020-10-29T18:10:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDA4OQ==", "url": "https://github.com/netty/netty/pull/10751#discussion_r514994089", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (h == null) {\n          \n          \n            \n                            continue;\n          \n          \n            \n                        }\n          \n          \n            \n                        addFirst(executor, null, h);\n          \n          \n            \n                        if (h != null) {\n          \n          \n            \n                            addFirst(executor, null, h);\n          \n          \n            \n                        }", "author": "chrisvest", "createdAt": "2020-10-30T10:15:27Z", "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java", "diffHunk": "@@ -342,19 +342,12 @@ public final ChannelPipeline addFirst(ChannelHandler... handlers) {\n     @Override\n     public final ChannelPipeline addFirst(EventExecutorGroup executor, ChannelHandler... handlers) {\n         ObjectUtil.checkNotNull(handlers, \"handlers\");\n-        if (handlers.length == 0 || handlers[0] == null) {\n-            return this;\n-        }\n \n-        int size;\n-        for (size = 1; size < handlers.length; size ++) {\n-            if (handlers[size] == null) {\n-                break;\n-            }\n-        }\n-\n-        for (int i = size - 1; i >= 0; i --) {\n+        for (int i = handlers.length - 1; i >= 0; i --) {\n             ChannelHandler h = handlers[i];\n+            if (h == null) {\n+                continue;\n+            }\n             addFirst(executor, null, h);", "originalCommit": "80fa0cf28da899e812049543c261097978d524ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0ODMwMg==", "url": "https://github.com/netty/netty/pull/10751#discussion_r515348302", "bodyText": "Can change. Was trying to minimize lines changed, but will clean it up.", "author": "Bennett-Lynch", "createdAt": "2020-10-30T20:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDA4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "f1f4278dc17716fd464796e4ebfbc9404d25233f", "chunk": "diff --git a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\nindex f8e0eb73fd..1b11a0707c 100644\n--- a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n+++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n\n@@ -343,12 +343,11 @@ public class DefaultChannelPipeline implements ChannelPipeline {\n     public final ChannelPipeline addFirst(EventExecutorGroup executor, ChannelHandler... handlers) {\n         ObjectUtil.checkNotNull(handlers, \"handlers\");\n \n-        for (int i = handlers.length - 1; i >= 0; i --) {\n+        for (int i = handlers.length - 1; i >= 0; i--) {\n             ChannelHandler h = handlers[i];\n-            if (h == null) {\n-                continue;\n+            if (h != null) {\n+                addFirst(executor, null, h);\n             }\n-            addFirst(executor, null, h);\n         }\n \n         return this;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5NDUzOQ==", "url": "https://github.com/netty/netty/pull/10751#discussion_r514994539", "bodyText": "Same here.", "author": "chrisvest", "createdAt": "2020-10-30T10:16:19Z", "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java", "diffHunk": "@@ -376,7 +369,7 @@ public final ChannelPipeline addLast(EventExecutorGroup executor, ChannelHandler\n \n         for (ChannelHandler h: handlers) {\n             if (h == null) {\n-                break;\n+                continue;\n             }\n             addLast(executor, null, h);", "originalCommit": "80fa0cf28da899e812049543c261097978d524ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f1f4278dc17716fd464796e4ebfbc9404d25233f", "chunk": "diff --git a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\nindex f8e0eb73fd..1b11a0707c 100644\n--- a/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n+++ b/transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java\n\n@@ -367,11 +366,10 @@ public class DefaultChannelPipeline implements ChannelPipeline {\n     public final ChannelPipeline addLast(EventExecutorGroup executor, ChannelHandler... handlers) {\n         ObjectUtil.checkNotNull(handlers, \"handlers\");\n \n-        for (ChannelHandler h: handlers) {\n-            if (h == null) {\n-                continue;\n+        for (ChannelHandler h : handlers) {\n+            if (h != null) {\n+                addLast(executor, null, h);\n             }\n-            addLast(executor, null, h);\n         }\n \n         return this;\n"}}, {"oid": "f1f4278dc17716fd464796e4ebfbc9404d25233f", "url": "https://github.com/netty/netty/commit/f1f4278dc17716fd464796e4ebfbc9404d25233f", "message": "Allow and skip null handlers when adding a vararg list of handlers\n\nMotivation\n\nAllowing null handlers allows for more convenient idioms in\nconditionally adding handlers, e.g.,\n\nch.pipeline().addLast(\n        new FooHandler(),\n        condition ? new BarHandler() : null,\n        new BazHandler()\n);\n\nModifications\n\n* Change addFirst(..) and addLast(..) to skip null handlers, rather than\nbreak or short-circuit.\n* Add new unit tests.\n\nResult\n\n* Makes addFirst(..) and addLast(..) behavior more consistent\n* Resolves https://github.com/netty/netty/issues/10728", "committedDate": "2020-10-30T20:00:35Z", "type": "commit"}]}