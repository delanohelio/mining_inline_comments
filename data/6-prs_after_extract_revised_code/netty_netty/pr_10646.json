{"pr_number": 10646, "pr_title": "Provide new client and server websocket handshake exceptions", "pr_createdAt": "2020-10-06T15:13:06Z", "pr_url": "https://github.com/netty/netty/pull/10646", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4NDE1OQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r500684159", "bodyText": "IMHO, I don't think the extra allow*HandshakeException flags are necessary, since both WebSocketClientHandshakeException and WebSocketServerHandshakeException extend WebSocketHandshakeException. I mean, catch (WebSocketHandshakeException e) and e instanceof WebSocketHandshakeException will still work. I hope no one is using e.getClass() == WebSocketHandshakeException.class. I think the extra flags just complicate the code without much benefit.", "author": "philsttr", "createdAt": "2020-10-07T01:25:41Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java", "diffHunk": "@@ -144,13 +146,44 @@ protected WebSocketClientHandshaker(URI uri, WebSocketVersion version, String su\n     protected WebSocketClientHandshaker(URI uri, WebSocketVersion version, String subprotocol,\n                                         HttpHeaders customHeaders, int maxFramePayloadLength,\n                                         long forceCloseTimeoutMillis, boolean absoluteUpgradeUrl) {\n+        this(uri, version, subprotocol, customHeaders, maxFramePayloadLength, forceCloseTimeoutMillis,\n+             false, false);\n+    }\n+\n+    /**\n+     * Base constructor\n+     *\n+     * @param uri\n+     *            URL for web socket communications. e.g \"ws://myhost.com/mypath\". Subsequent web socket frames will be\n+     *            sent to this URL.\n+     * @param version\n+     *            Version of web socket specification to use to connect to the server\n+     * @param subprotocol\n+     *            Sub protocol request sent to the server.\n+     * @param customHeaders\n+     *            Map of custom headers to add to the client request\n+     * @param maxFramePayloadLength\n+     *            Maximum length of a frame's payload\n+     * @param forceCloseTimeoutMillis\n+     *            Close the connection if it was not closed by the server after timeout specified\n+     * @param  absoluteUpgradeUrl\n+     *            Use an absolute url for the Upgrade request, typically when connecting through an HTTP proxy over\n+     *            clear HTTP\n+     * @param  allowClientHandshakeException\n+     *             Whether to return a basic {@link WebSocketHandshakeException}\n+     *             or client {@link WebSocketClientHandshakeException} that contains a http response", "originalCommit": "5cf96782b5039ae00b510b5ba11ac7a1456a9642", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4MDg4Mg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r500780882", "bodyText": "I totally agree about code complication and most likely it not bring a benefit. I hope we can remove it to keep code simple if no one is against.", "author": "amizurov", "createdAt": "2020-10-07T07:02:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4NDE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcxNjkyNw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r501716927", "bodyText": "I agree, people should not rely on the concrete exception type such that we cannot throw a sub-class instead.", "author": "chrisvest", "createdAt": "2020-10-08T13:23:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4NDE1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java\nindex ce01074e73..262ed98ffb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java\n\n@@ -146,36 +144,6 @@ public abstract class WebSocketClientHandshaker {\n     protected WebSocketClientHandshaker(URI uri, WebSocketVersion version, String subprotocol,\n                                         HttpHeaders customHeaders, int maxFramePayloadLength,\n                                         long forceCloseTimeoutMillis, boolean absoluteUpgradeUrl) {\n-        this(uri, version, subprotocol, customHeaders, maxFramePayloadLength, forceCloseTimeoutMillis,\n-             false, false);\n-    }\n-\n-    /**\n-     * Base constructor\n-     *\n-     * @param uri\n-     *            URL for web socket communications. e.g \"ws://myhost.com/mypath\". Subsequent web socket frames will be\n-     *            sent to this URL.\n-     * @param version\n-     *            Version of web socket specification to use to connect to the server\n-     * @param subprotocol\n-     *            Sub protocol request sent to the server.\n-     * @param customHeaders\n-     *            Map of custom headers to add to the client request\n-     * @param maxFramePayloadLength\n-     *            Maximum length of a frame's payload\n-     * @param forceCloseTimeoutMillis\n-     *            Close the connection if it was not closed by the server after timeout specified\n-     * @param  absoluteUpgradeUrl\n-     *            Use an absolute url for the Upgrade request, typically when connecting through an HTTP proxy over\n-     *            clear HTTP\n-     * @param  allowClientHandshakeException\n-     *             Whether to return a basic {@link WebSocketHandshakeException}\n-     *             or client {@link WebSocketClientHandshakeException} that contains a http response\n-     */\n-    protected WebSocketClientHandshaker(URI uri, WebSocketVersion version, String subprotocol,\n-            HttpHeaders customHeaders, int maxFramePayloadLength,\n-            long forceCloseTimeoutMillis, boolean absoluteUpgradeUrl, boolean allowClientHandshakeException) {\n         this.uri = uri;\n         this.version = version;\n         expectedSubprotocol = subprotocol;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY4NDI5Ng==", "url": "https://github.com/netty/netty/pull/10646#discussion_r500684296", "bodyText": "probably not desired", "author": "philsttr", "createdAt": "2020-10-07T01:26:12Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java", "diffHunk": "@@ -27,6 +27,7 @@\n import io.netty.handler.codec.http.HttpResponseStatus;\n import io.netty.handler.codec.http.HttpVersion;\n import io.netty.util.AsciiString;\n+import sun.security.provider.certpath.OCSPResponse.ResponseStatus;", "originalCommit": "5cf96782b5039ae00b510b5ba11ac7a1456a9642", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\nindex 0ec692e4b7..e0a3e701d6 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java\n\n@@ -26,8 +26,6 @@ import io.netty.handler.codec.http.HttpHeaders;\n import io.netty.handler.codec.http.HttpMethod;\n import io.netty.handler.codec.http.HttpResponseStatus;\n import io.netty.handler.codec.http.HttpVersion;\n-import io.netty.util.AsciiString;\n-import sun.security.provider.certpath.OCSPResponse.ResponseStatus;\n \n import java.net.URI;\n import java.nio.ByteBuffer;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5OTQ1Mg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r501699452", "bodyText": "You forgot to include the field value here.", "author": "chrisvest", "createdAt": "2020-10-08T12:58:59Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolConfig.java", "diffHunk": "@@ -107,7 +114,8 @@ public String toString() {\n             \", sendCloseFrame=\" + sendCloseFrame +\n             \", dropPongFrames=\" + dropPongFrames +\n             \", decoderConfig=\" + decoderConfig +\n-            \"}\";\n+            \", allowServerHandshakeException=\" +", "originalCommit": "7346a0ce68cca23301689e23209c0d3c88eb5e1c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolConfig.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolConfig.java\nindex aab68907ea..a96d3ac7fb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolConfig.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolConfig.java\n\n@@ -114,8 +107,7 @@ public final class WebSocketServerProtocolConfig {\n             \", sendCloseFrame=\" + sendCloseFrame +\n             \", dropPongFrames=\" + dropPongFrames +\n             \", decoderConfig=\" + decoderConfig +\n-            \", allowServerHandshakeException=\" +\n-            '}';\n+            \"}\";\n     }\n \n     public Builder toBuilder() {\n"}}, {"oid": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "url": "https://github.com/netty/netty/commit/ea2d75e2b9c98a1f05cceed770dec4535d06af29", "message": "Provide new client and server websocket handshake exceptions for handling upgrade issues", "committedDate": "2020-10-09T14:09:59Z", "type": "commit"}, {"oid": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "url": "https://github.com/netty/netty/commit/ea2d75e2b9c98a1f05cceed770dec4535d06af29", "message": "Provide new client and server websocket handshake exceptions for handling upgrade issues", "committedDate": "2020-10-09T14:09:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDcwOQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503090709", "bodyText": "I wonder if it would be better to expose the protocol, status and headers directly here. This would make it clear that this HttpResponse is never a FullHttpResponse and so not needs to be released. WDYT ?", "author": "normanmaurer", "createdAt": "2020-10-12T07:29:20Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpResponse;\n+import io.netty.handler.codec.http.HttpResponse;\n+\n+/**\n+ * Client exception during handshaking process.\n+ */\n+public class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final HttpResponse response;\n+\n+    public WebSocketClientHandshakeException(String message) {\n+        this(message, null);\n+    }\n+\n+    public WebSocketClientHandshakeException(String message, HttpResponse httpResponse) {\n+        super(message);\n+        if (httpResponse != null) {\n+            response = new DefaultHttpResponse(httpResponse.protocolVersion(),\n+                                               httpResponse.status(), httpResponse.headers());\n+        } else {\n+            response = null;\n+        }\n+    }\n+\n+    /**\n+     * Returns a {@link HttpResponse response} if exception occurs during response validation otherwise {@code null}.\n+     */\n+    public HttpResponse response() {", "originalCommit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzNDk5MA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503134990", "bodyText": "I thought about this, but we have situations when an exception occurs before receiving a response and we do not have this data and all fields will be null, which is inconvenient (need to check before use) or we can throw the different type of exceptions with response data and  without it.", "author": "amizurov", "createdAt": "2020-10-12T08:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE0MDYxMw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503140613", "bodyText": "got it... maybe we should just add to the java docs that this will never be ReferenceCounted and so no special treatment is needed.", "author": "normanmaurer", "createdAt": "2020-10-12T08:54:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE1MDQ3OA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503150478", "bodyText": "Make sense, even that WebSocket Handshake request/response in theory should not contain payload, but this is not explicitly prohibited by the RFC \ud83d\ude32", "author": "amizurov", "createdAt": "2020-10-12T09:09:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDcwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2MDgwNg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503160806", "bodyText": "Added summary", "author": "amizurov", "createdAt": "2020-10-12T09:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDcwOQ=="}], "type": "inlineReview", "revised_code": {"commit": "50e06ec690f4e91667f197962c70dc6c6abb8cd6", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\nindex 458b98f343..753ad94098 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n\n@@ -21,7 +21,7 @@ import io.netty.handler.codec.http.HttpResponse;\n /**\n  * Client exception during handshaking process.\n  */\n-public class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n+public final class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n \n     private static final long serialVersionUID = 1L;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDg0OA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503090848", "bodyText": "final", "author": "normanmaurer", "createdAt": "2020-10-12T07:29:38Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpResponse;\n+import io.netty.handler.codec.http.HttpResponse;\n+\n+/**\n+ * Client exception during handshaking process.\n+ */\n+public class WebSocketClientHandshakeException extends WebSocketHandshakeException {", "originalCommit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzOTM4NQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503139385", "bodyText": "done", "author": "amizurov", "createdAt": "2020-10-12T08:52:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MDg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "50e06ec690f4e91667f197962c70dc6c6abb8cd6", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\nindex 458b98f343..753ad94098 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n\n@@ -21,7 +21,7 @@ import io.netty.handler.codec.http.HttpResponse;\n /**\n  * Client exception during handshaking process.\n  */\n-public class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n+public final class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n \n     private static final long serialVersionUID = 1L;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTMzNQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503091335", "bodyText": "final", "author": "normanmaurer", "createdAt": "2020-10-12T07:30:32Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpRequest;\n+import io.netty.handler.codec.http.HttpRequest;\n+\n+/**\n+ * Server exception during handshaking process\n+ */\n+public class WebSocketServerHandshakeException extends WebSocketHandshakeException {", "originalCommit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzOTQzNw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503139437", "bodyText": "done", "author": "amizurov", "createdAt": "2020-10-12T08:52:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTMzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "50e06ec690f4e91667f197962c70dc6c6abb8cd6", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\nindex d5917ac01f..1b026bac08 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n\n@@ -19,9 +19,9 @@ import io.netty.handler.codec.http.DefaultHttpRequest;\n import io.netty.handler.codec.http.HttpRequest;\n \n /**\n- * Server exception during handshaking process\n+ * Server exception during handshaking process.\n  */\n-public class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n+public final class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n \n     private static final long serialVersionUID = 1L;\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTQyMw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503091423", "bodyText": "Same comment as above", "author": "normanmaurer", "createdAt": "2020-10-12T07:30:42Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpRequest;\n+import io.netty.handler.codec.http.HttpRequest;\n+\n+/**\n+ * Server exception during handshaking process\n+ */\n+public class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final HttpRequest request;\n+\n+    public WebSocketServerHandshakeException(String message) {\n+        this(message, null);\n+    }\n+\n+    public WebSocketServerHandshakeException(String message, HttpRequest httpRequest) {\n+        super(message);\n+        if (httpRequest != null) {\n+            request = new DefaultHttpRequest(httpRequest.protocolVersion(), httpRequest.method(),\n+                                             httpRequest.uri(), httpRequest.headers());\n+        } else {\n+            request = null;\n+        }\n+    }\n+\n+    /**\n+     * Returns a {@link HttpRequest request} if exception occurs during request validation otherwise {@code null}.\n+     */\n+    public HttpRequest request() {", "originalCommit": "ea2d75e2b9c98a1f05cceed770dec4535d06af29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEzNTUyNg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r503135526", "bodyText": "Same thoughts above", "author": "amizurov", "createdAt": "2020-10-12T08:46:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA5MTQyMw=="}], "type": "inlineReview", "revised_code": {"commit": "50e06ec690f4e91667f197962c70dc6c6abb8cd6", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\nindex d5917ac01f..1b026bac08 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n\n@@ -19,9 +19,9 @@ import io.netty.handler.codec.http.DefaultHttpRequest;\n import io.netty.handler.codec.http.HttpRequest;\n \n /**\n- * Server exception during handshaking process\n+ * Server exception during handshaking process.\n  */\n-public class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n+public final class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n \n     private static final long serialVersionUID = 1L;\n \n"}}, {"oid": "50e06ec690f4e91667f197962c70dc6c6abb8cd6", "url": "https://github.com/netty/netty/commit/50e06ec690f4e91667f197962c70dc6c6abb8cd6", "message": "Fix PR comments", "committedDate": "2020-10-12T08:52:10Z", "type": "commit"}, {"oid": "9d48a1004a99c31e983815277d31314477935a31", "url": "https://github.com/netty/netty/commit/9d48a1004a99c31e983815277d31314477935a31", "message": "Added summary to exceptions", "committedDate": "2020-10-12T09:24:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwMjUzMg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506302532", "bodyText": "This exception does not contain ....", "author": "normanmaurer", "createdAt": "2020-10-16T11:09:35Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpResponse;\n+import io.netty.handler.codec.http.FullHttpResponse;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.util.ReferenceCounted;\n+\n+/**\n+ * Client exception during handshaking process.\n+ *\n+ *  <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields", "originalCommit": "9d48a1004a99c31e983815277d31314477935a31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMDg1NA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506410854", "bodyText": "done", "author": "amizurov", "createdAt": "2020-10-16T13:21:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwMjUzMg=="}], "type": "inlineReview", "revised_code": {"commit": "db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\nindex 2fe788b580..17c9381cfb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n\n@@ -23,7 +23,7 @@ import io.netty.util.ReferenceCounted;\n /**\n  * Client exception during handshaking process.\n  *\n- *  <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ *  <p><b>IMPORTANT</b>: This exception does not contain any {@link ReferenceCounted} fields\n  *  e.g. {@link FullHttpResponse}, so no special treatment is needed.\n  */\n public final class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwMzI3OQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506303279", "bodyText": "This exception does not contain any", "author": "normanmaurer", "createdAt": "2020-10-16T11:10:26Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpRequest;\n+import io.netty.handler.codec.http.FullHttpRequest;\n+import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.util.ReferenceCounted;\n+\n+/**\n+ * Server exception during handshaking process.\n+ *\n+ * <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields", "originalCommit": "9d48a1004a99c31e983815277d31314477935a31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMTAwMg==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506411002", "bodyText": "done", "author": "amizurov", "createdAt": "2020-10-16T13:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwMzI3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\nindex 9ff1f3c246..1f03a81c5b 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n\n@@ -23,7 +23,7 @@ import io.netty.util.ReferenceCounted;\n /**\n  * Server exception during handshaking process.\n  *\n- * <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ * <p><b>IMPORTANT</b>: This exception does not contain any {@link ReferenceCounted} fields\n  * e.g. {@link FullHttpRequest}, so no special treatment is needed.\n  */\n public final class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDAzOA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506304038", "bodyText": "let's make the constructors package-private and add:\nassert !(httpRequest instanceof ReferenceCounted);", "author": "normanmaurer", "createdAt": "2020-10-16T11:11:24Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpRequest;\n+import io.netty.handler.codec.http.FullHttpRequest;\n+import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.util.ReferenceCounted;\n+\n+/**\n+ * Server exception during handshaking process.\n+ *\n+ * <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ * e.g. {@link FullHttpRequest}, so no special treatment is needed.\n+ */\n+public final class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final HttpRequest request;\n+\n+    public WebSocketServerHandshakeException(String message) {\n+        this(message, null);\n+    }\n+\n+    public WebSocketServerHandshakeException(String message, HttpRequest httpRequest) {", "originalCommit": "9d48a1004a99c31e983815277d31314477935a31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxNTMxMQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506415311", "bodyText": "Hmm what kind of benefit for package-private constructors?, maybe user want to create it own exception Server or Client exception and handle it in common manner.", "author": "amizurov", "createdAt": "2020-10-16T13:24:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDAzOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MjYyMw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506862623", "bodyText": "I was thinking of make it more safe in terms of not pass in ReferenceCounted objects. That said as you mention before we copy it anyway so not a big deal", "author": "normanmaurer", "createdAt": "2020-10-17T08:01:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDAzOA=="}], "type": "inlineReview", "revised_code": {"commit": "db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\nindex 9ff1f3c246..1f03a81c5b 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshakeException.java\n\n@@ -23,7 +23,7 @@ import io.netty.util.ReferenceCounted;\n /**\n  * Server exception during handshaking process.\n  *\n- * <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ * <p><b>IMPORTANT</b>: This exception does not contain any {@link ReferenceCounted} fields\n  * e.g. {@link FullHttpRequest}, so no special treatment is needed.\n  */\n public final class WebSocketServerHandshakeException extends WebSocketHandshakeException {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDIxMA==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506304210", "bodyText": "assert !(httpRequest instanceof ReferenceCounted); and make constructors package private for now", "author": "normanmaurer", "createdAt": "2020-10-16T11:11:36Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.websocketx;\n+\n+import io.netty.handler.codec.http.DefaultHttpResponse;\n+import io.netty.handler.codec.http.FullHttpResponse;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.util.ReferenceCounted;\n+\n+/**\n+ * Client exception during handshaking process.\n+ *\n+ *  <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ *  e.g. {@link FullHttpResponse}, so no special treatment is needed.\n+ */\n+public final class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final HttpResponse response;\n+\n+    public WebSocketClientHandshakeException(String message) {\n+        this(message, null);\n+    }\n+\n+    public WebSocketClientHandshakeException(String message, HttpResponse httpResponse) {", "originalCommit": "9d48a1004a99c31e983815277d31314477935a31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4NDI3OQ==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506384279", "bodyText": "Hmm, we create our own DefaultHttpResponse in constructor, we don't set given response directly.", "author": "amizurov", "createdAt": "2020-10-16T12:54:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDIxMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjg2MjM5Nw==", "url": "https://github.com/netty/netty/pull/10646#discussion_r506862397", "bodyText": "true...", "author": "normanmaurer", "createdAt": "2020-10-17T08:00:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMwNDIxMA=="}], "type": "inlineReview", "revised_code": {"commit": "db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\nindex 2fe788b580..17c9381cfb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakeException.java\n\n@@ -23,7 +23,7 @@ import io.netty.util.ReferenceCounted;\n /**\n  * Client exception during handshaking process.\n  *\n- *  <p><b>IMPORTANT</b>: This exception should not contains any {@link ReferenceCounted} fields\n+ *  <p><b>IMPORTANT</b>: This exception does not contain any {@link ReferenceCounted} fields\n  *  e.g. {@link FullHttpResponse}, so no special treatment is needed.\n  */\n public final class WebSocketClientHandshakeException extends WebSocketHandshakeException {\n"}}, {"oid": "db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "url": "https://github.com/netty/netty/commit/db117e01207c8a5bafc0069c0b9c2cf793ad65dd", "message": "Fix summary text", "committedDate": "2020-10-16T13:20:59Z", "type": "commit"}]}