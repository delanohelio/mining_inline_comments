{"pr_number": 10872, "pr_title": "Simplify InternalThreadLocalMap", "pr_createdAt": "2020-12-16T17:22:38Z", "pr_url": "https://github.com/netty/netty/pull/10872", "timeline": [{"oid": "dfd13bba1b7feb7f25c313f518716e4157318cb1", "url": "https://github.com/netty/netty/commit/dfd13bba1b7feb7f25c313f518716e4157318cb1", "message": "Simplify InternalThreadLocalMap\n\nMotivation:\nI did not see any tangible advantage to the padding.\nThe only other field that was guarded was a rarely changed object reference to a BitSet.\nWithout the padding, there is also no longer any use of the inheritance hierarchy.\nThe padding was also using `long`, which would not necessarily prevent the JVM from fitting the aforementioned object reference in an alignment gap.\n\nModification:\nRemove the padding and collapse the object hierarchy.\n\nResult:\nSimpler code.\nThis resolves the discussion in https://github.com/netty/netty/issues/9284", "committedDate": "2020-12-16T17:26:19Z", "type": "forcePushed"}, {"oid": "fa7ea3956fd40a7b9bcd707a28d48444b796c6e9", "url": "https://github.com/netty/netty/commit/fa7ea3956fd40a7b9bcd707a28d48444b796c6e9", "message": "Simplify InternalThreadLocalMap\n\nMotivation:\nI did not see any tangible advantage to the padding.\nThe only other field that was guarded was a rarely changed object reference to a BitSet.\nWithout the padding, there is also no longer any use of the inheritance hierarchy.\nThe padding was also using `long`, which would not necessarily prevent the JVM from fitting the aforementioned object reference in an alignment gap.\n\nModification:\nMove all the fields into the InternalThreadLocalMap and deprecate the stuff we'd like to remove.\n\nResult:\nSimpler code.\nThis resolves the discussion in https://github.com/netty/netty/issues/9284", "committedDate": "2020-12-16T22:05:26Z", "type": "commit"}, {"oid": "fa7ea3956fd40a7b9bcd707a28d48444b796c6e9", "url": "https://github.com/netty/netty/commit/fa7ea3956fd40a7b9bcd707a28d48444b796c6e9", "message": "Simplify InternalThreadLocalMap\n\nMotivation:\nI did not see any tangible advantage to the padding.\nThe only other field that was guarded was a rarely changed object reference to a BitSet.\nWithout the padding, there is also no longer any use of the inheritance hierarchy.\nThe padding was also using `long`, which would not necessarily prevent the JVM from fitting the aforementioned object reference in an alignment gap.\n\nModification:\nMove all the fields into the InternalThreadLocalMap and deprecate the stuff we'd like to remove.\n\nResult:\nSimpler code.\nThis resolves the discussion in https://github.com/netty/netty/issues/9284", "committedDate": "2020-12-16T22:05:26Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzNzE2Ng==", "url": "https://github.com/netty/netty/pull/10872#discussion_r544837166", "bodyText": "can't we just remove this class as its package-private now that we moved the fields ?", "author": "normanmaurer", "createdAt": "2020-12-17T06:12:17Z", "path": "common/src/main/java/io/netty/util/internal/UnpaddedInternalThreadLocalMap.java", "diffHunk": "@@ -13,49 +13,11 @@\n  * License for the specific language governing permissions and limitations\n  * under the License.\n  */\n-\n package io.netty.util.internal;\n \n-import io.netty.util.concurrent.FastThreadLocal;\n-\n-import java.nio.charset.Charset;\n-import java.nio.charset.CharsetDecoder;\n-import java.nio.charset.CharsetEncoder;\n-import java.util.ArrayList;\n-import java.util.Map;\n-import java.util.concurrent.atomic.AtomicInteger;\n-\n /**\n- * The internal data structure that stores the thread-local variables for Netty and all {@link FastThreadLocal}s.\n- * Note that this class is for internal use only and is subject to change at any time.  Use {@link FastThreadLocal}\n- * unless you know what you are doing.\n+ * @deprecated This class will be removed in the future.\n  */\n class UnpaddedInternalThreadLocalMap {", "originalCommit": "fa7ea3956fd40a7b9bcd707a28d48444b796c6e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTQ2Mg==", "url": "https://github.com/netty/netty/pull/10872#discussion_r544891462", "bodyText": "No, I get compatibility errors when I do.", "author": "chrisvest", "createdAt": "2020-12-17T08:15:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzNzE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5NDAwOQ==", "url": "https://github.com/netty/netty/pull/10872#discussion_r544894009", "bodyText": "bummer... I think this is a false positive. Can you report it https://github.com/siom79/japicmp ?", "author": "normanmaurer", "createdAt": "2020-12-17T08:19:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzNzE2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDk1NjM1Mw==", "url": "https://github.com/netty/netty/pull/10872#discussion_r544956353", "bodyText": "Opened an issue about it: siom79/japicmp#277", "author": "chrisvest", "createdAt": "2020-12-17T09:54:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgzNzE2Ng=="}], "type": "inlineReview", "revised_code": null}]}