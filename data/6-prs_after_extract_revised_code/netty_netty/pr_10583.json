{"pr_number": 10583, "pr_title": "Add validation check about websocket path", "pr_createdAt": "2020-09-16T10:36:44Z", "pr_url": "https://github.com/netty/netty/pull/10583", "timeline": [{"oid": "7da02752699b0d51048abe092be847294b546cb7", "url": "https://github.com/netty/netty/commit/7da02752699b0d51048abe092be847294b546cb7", "message": "Add validation check about websocket path\n\nMotivation:\n\nI add websocket handler in custom server with netty.\n\nI first add WebSocketServerProtocolHandler in my channel pipeline.\n\nIt does work! but I found that it can pass \"/websocketabc\". (websocketPath is \"/websocket\")\n\nModification:\n`isNotWebSocketPath()` method of `WebSocketServerProtocolHandshakeHandler`\n\nResult:\nIt can pass not \"/websocketabc\" but \"/websocket\".", "committedDate": "2020-09-16T17:14:39Z", "type": "commit"}, {"oid": "7da02752699b0d51048abe092be847294b546cb7", "url": "https://github.com/netty/netty/commit/7da02752699b0d51048abe092be847294b546cb7", "message": "Add validation check about websocket path\n\nMotivation:\n\nI add websocket handler in custom server with netty.\n\nI first add WebSocketServerProtocolHandler in my channel pipeline.\n\nIt does work! but I found that it can pass \"/websocketabc\". (websocketPath is \"/websocket\")\n\nModification:\n`isNotWebSocketPath()` method of `WebSocketServerProtocolHandshakeHandler`\n\nResult:\nIt can pass not \"/websocketabc\" but \"/websocket\".", "committedDate": "2020-09-16T17:14:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzE5Nw==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490157197", "bodyText": "req.uri() could be moved to a variable.", "author": "doom369", "createdAt": "2020-09-17T11:05:04Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java", "diffHunk": "@@ -115,7 +115,15 @@ public void operationComplete(ChannelFuture future) {\n \n     private boolean isNotWebSocketPath(FullHttpRequest req) {\n         String websocketPath = serverConfig.websocketPath();\n-        return serverConfig.checkStartsWith() ? !req.uri().startsWith(websocketPath) : !req.uri().equals(websocketPath);\n+        boolean checkNextUri = true;\n+        if (req.uri().length() > websocketPath.length()) {", "originalCommit": "7da02752699b0d51048abe092be847294b546cb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1OTU5NA==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490159594", "bodyText": "Okay, thank you for reviewing.", "author": "Doyuni", "createdAt": "2020-09-17T11:10:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "8d88ea08776abe62037823fcbeee0f6cd4746551", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\nindex 3ad15101b4..f3f5332756 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\n\n@@ -113,17 +113,21 @@ class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapt\n         }\n     }\n \n-    private boolean isNotWebSocketPath(FullHttpRequest req) {\n+    private boolean isWebSocketPath(FullHttpRequest req) {\n         String websocketPath = serverConfig.websocketPath();\n-        boolean checkNextUri = true;\n-        if (req.uri().length() > websocketPath.length()) {\n-            char nextUri = req.uri().charAt(websocketPath.length());\n-            if (nextUri != '/' && nextUri != '?') {\n-                checkNextUri = false;\n-            }\n+        String uri = req.uri();\n+        boolean checkStartUri = uri.startsWith(websocketPath);\n+        boolean checkNextUri = checkNextUri(uri, websocketPath);\n+        return serverConfig.checkStartsWith() ? (checkStartUri && checkNextUri) : uri.equals(websocketPath);\n+    }\n+\n+    private boolean checkNextUri(String uri, String websocketPath) {\n+        int len = websocketPath.length();\n+        if (uri.length() > len) {\n+            char nextUri = uri.charAt(len);\n+            return nextUri == '/' || nextUri == '?';\n         }\n-        boolean checkStartUri = req.uri().startsWith(websocketPath);\n-        return serverConfig.checkStartsWith() ? !(checkStartUri && checkNextUri) : !req.uri().equals(websocketPath);\n+        return true;\n     }\n \n     private static void sendHttpResponse(ChannelHandlerContext ctx, HttpRequest req, HttpResponse res) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzgxOQ==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490157819", "bodyText": "All this should be done only in case of serverConfig.checkStartsWith(). In all other cases, we don't need to perform those checks.", "author": "doom369", "createdAt": "2020-09-17T11:06:23Z", "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java", "diffHunk": "@@ -115,7 +115,15 @@ public void operationComplete(ChannelFuture future) {\n \n     private boolean isNotWebSocketPath(FullHttpRequest req) {\n         String websocketPath = serverConfig.websocketPath();\n-        return serverConfig.checkStartsWith() ? !req.uri().startsWith(websocketPath) : !req.uri().equals(websocketPath);\n+        boolean checkNextUri = true;\n+        if (req.uri().length() > websocketPath.length()) {\n+            char nextUri = req.uri().charAt(websocketPath.length());\n+            if (nextUri != '/' && nextUri != '?') {\n+                checkNextUri = false;\n+            }\n+        }", "originalCommit": "7da02752699b0d51048abe092be847294b546cb7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE2MTIyMQ==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490161221", "bodyText": "So..what should I do? That logic could be moved to new method?", "author": "Doyuni", "createdAt": "2020-09-17T11:13:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1ODI4Mg==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490258282", "bodyText": "Probably own method makes sense as it became big enough.\nAlso, I think it would make sense to rename isNotWebSocketPath to isWebSocketPath. It's a generic Java way. When NO is required you can use !isWebSocketPath().", "author": "doom369", "createdAt": "2020-09-17T13:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzgxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MjAzNw==", "url": "https://github.com/netty/netty/pull/10583#discussion_r490272037", "bodyText": "Thank you for your kind explanation.\nI'll change it based on your reference.", "author": "Doyuni", "createdAt": "2020-09-17T14:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzgxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8d88ea08776abe62037823fcbeee0f6cd4746551", "chunk": "diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\nindex 3ad15101b4..f3f5332756 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java\n\n@@ -113,17 +113,21 @@ class WebSocketServerProtocolHandshakeHandler extends ChannelInboundHandlerAdapt\n         }\n     }\n \n-    private boolean isNotWebSocketPath(FullHttpRequest req) {\n+    private boolean isWebSocketPath(FullHttpRequest req) {\n         String websocketPath = serverConfig.websocketPath();\n-        boolean checkNextUri = true;\n-        if (req.uri().length() > websocketPath.length()) {\n-            char nextUri = req.uri().charAt(websocketPath.length());\n-            if (nextUri != '/' && nextUri != '?') {\n-                checkNextUri = false;\n-            }\n+        String uri = req.uri();\n+        boolean checkStartUri = uri.startsWith(websocketPath);\n+        boolean checkNextUri = checkNextUri(uri, websocketPath);\n+        return serverConfig.checkStartsWith() ? (checkStartUri && checkNextUri) : uri.equals(websocketPath);\n+    }\n+\n+    private boolean checkNextUri(String uri, String websocketPath) {\n+        int len = websocketPath.length();\n+        if (uri.length() > len) {\n+            char nextUri = uri.charAt(len);\n+            return nextUri == '/' || nextUri == '?';\n         }\n-        boolean checkStartUri = req.uri().startsWith(websocketPath);\n-        return serverConfig.checkStartsWith() ? !(checkStartUri && checkNextUri) : !req.uri().equals(websocketPath);\n+        return true;\n     }\n \n     private static void sendHttpResponse(ChannelHandlerContext ctx, HttpRequest req, HttpResponse res) {\n"}}, {"oid": "8d88ea08776abe62037823fcbeee0f6cd4746551", "url": "https://github.com/netty/netty/commit/8d88ea08776abe62037823fcbeee0f6cd4746551", "message": "Add validation check about websocket path (#10583)\n\nMotivation:\n    I add websocket handler in custom server with netty.\n\n    I first add WebSocketServerProtocolHandler in my channel pipeline.\n\n    It does work! but I found that it can pass /websocketabc. (websocketPath is /websocket)\n\nModification:\n    - modify method name: isNotWebSocketPath -> isWebSocketPath\n    - separate concern: add checkNextUri method\n\nResult:\n    It can pass not /websocketabc but /websocket.", "committedDate": "2020-09-18T10:15:45Z", "type": "commit"}, {"oid": "8d88ea08776abe62037823fcbeee0f6cd4746551", "url": "https://github.com/netty/netty/commit/8d88ea08776abe62037823fcbeee0f6cd4746551", "message": "Add validation check about websocket path (#10583)\n\nMotivation:\n    I add websocket handler in custom server with netty.\n\n    I first add WebSocketServerProtocolHandler in my channel pipeline.\n\n    It does work! but I found that it can pass /websocketabc. (websocketPath is /websocket)\n\nModification:\n    - modify method name: isNotWebSocketPath -> isWebSocketPath\n    - separate concern: add checkNextUri method\n\nResult:\n    It can pass not /websocketabc but /websocket.", "committedDate": "2020-09-18T10:15:45Z", "type": "forcePushed"}]}