{"pr_number": 10541, "pr_title": "Fix reentrancy bug in io_uring transport implementation related to", "pr_createdAt": "2020-09-07T17:36:36Z", "pr_url": "https://github.com/netty/netty/pull/10541", "timeline": [{"oid": "025721884fd804ea6fbcc59a2cfeb0a2a78c6714", "url": "https://github.com/netty/netty/commit/025721884fd804ea6fbcc59a2cfeb0a2a78c6714", "message": "Fix reentrancy bug in io_uring transport implementation related to\nwrites\n\nMotivation:\n\nWe need to carefully manage state in terms of writing to guard against\nrentrancy problems that could lead to corrupt state in the\nChannelOutboundBuffer\n\nModifications:\n\nOnly reset the flag once removeBytes(...) was called\n\nResult:\n\nNo more reentrancy bug related to writes.", "committedDate": "2020-09-07T17:35:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU1MDE4Ng==", "url": "https://github.com/netty/netty/pull/10541#discussion_r484550186", "bodyText": "because count will always be > 1 here?", "author": "njhill", "createdAt": "2020-09-07T19:22:17Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java", "diffHunk": "@@ -315,11 +315,8 @@ private void doWriteMultiple(ChannelOutboundBuffer in) {\n                  // This should never happem, anyway fallback to single write.\n                  doWriteSingle((ByteBuf) in.current());\n              }\n-\n-             if (iovecArray.count() > 0) {", "originalCommit": "025721884fd804ea6fbcc59a2cfeb0a2a78c6714", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY4NTExNQ==", "url": "https://github.com/netty/netty/pull/10541#discussion_r484685115", "bodyText": "yep", "author": "normanmaurer", "createdAt": "2020-09-08T06:43:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU1MDE4Ng=="}], "type": "inlineReview", "revised_code": null}]}