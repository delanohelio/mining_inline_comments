{"pr_number": 10638, "pr_title": "Add Close method for closing OutputStream and PcapWriteHandler", "pr_createdAt": "2020-10-05T06:12:44Z", "pr_url": "https://github.com/netty/netty/pull/10638", "timeline": [{"oid": "ee1549748788f35a1a225eecefcae6d74a182ba0", "url": "https://github.com/netty/netty/commit/ee1549748788f35a1a225eecefcae6d74a182ba0", "message": "add close method for closing outputstream and pcapwritehandler", "committedDate": "2020-10-05T06:07:36Z", "type": "commit"}, {"oid": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "url": "https://github.com/netty/netty/commit/3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "message": "Add close flag in PcapWriter and fix timestamp bug", "committedDate": "2020-10-05T07:05:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4Mzc1MQ==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499583751", "bodyText": "No need to explicitly initialise this to false.", "author": "chrisvest", "createdAt": "2020-10-05T13:06:44Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java", "diffHunk": "@@ -108,12 +112,18 @@\n      */\n     private InetSocketAddress dstAddr;\n \n+    /**\n+     * Set to {@code true} if {@link #close()} is called and we should stop writing Pcap.\n+     */\n+    private boolean isClosed = false;", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\nindex 47591398f1..f55dabd77d 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n\n@@ -115,7 +115,7 @@ public final class PcapWriteHandler extends ChannelDuplexHandler implements Clos\n     /**\n      * Set to {@code true} if {@link #close()} is called and we should stop writing Pcap.\n      */\n-    private boolean isClosed = false;\n+    private boolean isClosed;\n \n     /**\n      * Create new {@link PcapWriteHandler} Instance.\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4Mzk2NQ==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499583965", "bodyText": "No need to explicitly initialise this to false.", "author": "chrisvest", "createdAt": "2020-10-05T13:07:07Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriter.java", "diffHunk": "@@ -29,6 +28,11 @@\n      */\n     private final OutputStream outputStream;\n \n+    /**\n+     * Set to {@code true} if {@link #outputStream} is closed.\n+     */\n+    private boolean isClosed = false;", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\nindex 8d28ccff38..7933a8881a 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n\n@@ -23,6 +25,11 @@ import java.io.OutputStream;\n \n final class PcapWriter implements Closeable {\n \n+    /**\n+     * Logger\n+     */\n+    private static final InternalLogger logger = InternalLoggerFactory.getInstance(PcapWriter.class);\n+\n     /**\n      * {@link OutputStream} where we'll write Pcap data.\n      */\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTcxNA==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499615714", "bodyText": "What's the meaning of this comment? The handler is not closed, but we called close on the handler?", "author": "chrisvest", "createdAt": "2020-10-05T13:53:22Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java", "diffHunk": "@@ -517,7 +532,21 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws E\n             logger.debug(\"Sent Fake TCP RST to close connection\");\n         }\n \n-        this.pCapWriter.close();\n+        close();\n         ctx.fireExceptionCaught(cause);\n     }\n+\n+    /**\n+     * <p> Close {@code PcapWriter} and {@link OutputStream}. </p>\n+     * <p> Note: Calling this method does not close {@link PcapWriteHandler}.\n+     * Only Pcap Writes are closed. </p>", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4ODIwNQ==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499788205", "bodyText": "The close method closes OutputStream and PcapWriter so that, Pcap writes are stopped. The handler is not closed because we want data to still travel across.", "author": "hyperxpro", "createdAt": "2020-10-05T18:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\nindex 47591398f1..f55dabd77d 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n\n@@ -545,8 +545,12 @@ public final class PcapWriteHandler extends ChannelDuplexHandler implements Clos\n      */\n     @Override\n     public void close() throws IOException {\n-        isClosed = true;\n-        pCapWriter.close();\n-        logger.debug(\"PcapWriterHandler is Closed\");\n+        if (isClosed) {\n+            logger.debug(\"PcapWriterHandler is already closed\");\n+        } else {\n+            isClosed = true;\n+            pCapWriter.close();\n+            logger.debug(\"PcapWriterHandler is now closed\");\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNjI0NQ==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499616245", "bodyText": "Should this method be idempotent, i.e. a no-op when isClosed is already true?", "author": "chrisvest", "createdAt": "2020-10-05T13:54:10Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java", "diffHunk": "@@ -517,7 +532,21 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws E\n             logger.debug(\"Sent Fake TCP RST to close connection\");\n         }\n \n-        this.pCapWriter.close();\n+        close();\n         ctx.fireExceptionCaught(cause);\n     }\n+\n+    /**\n+     * <p> Close {@code PcapWriter} and {@link OutputStream}. </p>\n+     * <p> Note: Calling this method does not close {@link PcapWriteHandler}.\n+     * Only Pcap Writes are closed. </p>\n+     *\n+     * @throws IOException If {@link OutputStream#close()} throws an exception\n+     */\n+    @Override\n+    public void close() throws IOException {\n+        isClosed = true;\n+        pCapWriter.close();\n+        logger.debug(\"PcapWriterHandler is Closed\");", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\nindex 47591398f1..f55dabd77d 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java\n\n@@ -545,8 +545,12 @@ public final class PcapWriteHandler extends ChannelDuplexHandler implements Clos\n      */\n     @Override\n     public void close() throws IOException {\n-        isClosed = true;\n-        pCapWriter.close();\n-        logger.debug(\"PcapWriterHandler is Closed\");\n+        if (isClosed) {\n+            logger.debug(\"PcapWriterHandler is already closed\");\n+        } else {\n+            isClosed = true;\n+            pCapWriter.close();\n+            logger.debug(\"PcapWriterHandler is now closed\");\n+        }\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYyMDkzNg==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499620936", "bodyText": "This method should ideally be idempotent, such that closing an already closed PcapWriter does nothing. Relying on the flush call on a closed OutputStream not throwing seems a bit shaky.", "author": "chrisvest", "createdAt": "2020-10-05T14:00:48Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriter.java", "diffHunk": "@@ -58,22 +62,25 @@\n      * @throws IOException If {@link OutputStream#write(byte[])} throws an exception\n      */\n     void writePacket(ByteBuf packetHeaderBuf, ByteBuf packet) throws IOException {\n-        long currentTime = System.currentTimeMillis();\n+        long timestamp = System.currentTimeMillis();\n \n         PcapHeaders.writePacketHeader(\n                 packetHeaderBuf,\n-                (int) TimeUnit.MILLISECONDS.toSeconds(currentTime),\n-                (int) TimeUnit.MILLISECONDS.toMicros(currentTime) % 1000000,\n+                (int) (timestamp / 1000L),\n+                (int) (timestamp % 1000L * 1000L),\n                 packet.readableBytes(),\n                 packet.readableBytes()\n         );\n \n-        packetHeaderBuf.readBytes(outputStream, packetHeaderBuf.readableBytes());\n-        packet.readBytes(outputStream, packet.readableBytes());\n+        if (!isClosed) {\n+            packetHeaderBuf.readBytes(outputStream, packetHeaderBuf.readableBytes());\n+            packet.readBytes(outputStream, packet.readableBytes());\n+        }\n     }\n \n     @Override\n     public void close() throws IOException {\n+        isClosed = true;\n         outputStream.flush();\n         outputStream.close();", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\nindex 8d28ccff38..7933a8881a 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n\n@@ -62,6 +69,10 @@ final class PcapWriter implements Closeable {\n      * @throws IOException If {@link OutputStream#write(byte[])} throws an exception\n      */\n     void writePacket(ByteBuf packetHeaderBuf, ByteBuf packet) throws IOException {\n+        if (isClosed) {\n+            logger.debug(\"Pcap Write attempted on closed PcapWriter\");\n+        }\n+\n         long timestamp = System.currentTimeMillis();\n \n         PcapHeaders.writePacketHeader(\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYyMTg0OQ==", "url": "https://github.com/netty/netty/pull/10638#discussion_r499621849", "bodyText": "Would be better to hoist this condition to the start of the method and return early if the writer is closed, no?", "author": "chrisvest", "createdAt": "2020-10-05T14:02:09Z", "path": "handler/src/main/java/io/netty/handler/pcap/PcapWriter.java", "diffHunk": "@@ -58,22 +62,25 @@\n      * @throws IOException If {@link OutputStream#write(byte[])} throws an exception\n      */\n     void writePacket(ByteBuf packetHeaderBuf, ByteBuf packet) throws IOException {\n-        long currentTime = System.currentTimeMillis();\n+        long timestamp = System.currentTimeMillis();\n \n         PcapHeaders.writePacketHeader(\n                 packetHeaderBuf,\n-                (int) TimeUnit.MILLISECONDS.toSeconds(currentTime),\n-                (int) TimeUnit.MILLISECONDS.toMicros(currentTime) % 1000000,\n+                (int) (timestamp / 1000L),\n+                (int) (timestamp % 1000L * 1000L),\n                 packet.readableBytes(),\n                 packet.readableBytes()\n         );\n \n-        packetHeaderBuf.readBytes(outputStream, packetHeaderBuf.readableBytes());\n-        packet.readBytes(outputStream, packet.readableBytes());\n+        if (!isClosed) {", "originalCommit": "3a94a987d0bdfed6b3baf96780dcedeec66c0fd9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\nindex 8d28ccff38..7933a8881a 100644\n--- a/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n+++ b/handler/src/main/java/io/netty/handler/pcap/PcapWriter.java\n\n@@ -62,6 +69,10 @@ final class PcapWriter implements Closeable {\n      * @throws IOException If {@link OutputStream#write(byte[])} throws an exception\n      */\n     void writePacket(ByteBuf packetHeaderBuf, ByteBuf packet) throws IOException {\n+        if (isClosed) {\n+            logger.debug(\"Pcap Write attempted on closed PcapWriter\");\n+        }\n+\n         long timestamp = System.currentTimeMillis();\n \n         PcapHeaders.writePacketHeader(\n"}}, {"oid": "0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "url": "https://github.com/netty/netty/commit/0716b849a1b1058636bfe4e6a547c13fb4d80a9f", "message": "improve code and address @chrisvest comments", "committedDate": "2020-10-05T18:29:11Z", "type": "commit"}]}