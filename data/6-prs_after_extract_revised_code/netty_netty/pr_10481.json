{"pr_number": 10481, "pr_title": "AbstractDiskHttpData#getChunk closes fileChannel only if everything w\u2026", "pr_createdAt": "2020-08-13T14:26:50Z", "pr_url": "https://github.com/netty/netty/pull/10481", "timeline": [{"oid": "e7d14f08c21112ba23b67fd0dc39a2559fe5863d", "url": "https://github.com/netty/netty/commit/e7d14f08c21112ba23b67fd0dc39a2559fe5863d", "message": "AbstractDiskHttpData#getChunk closes fileChannel only if everything was read or an exception is thrown\n\nMotivation:\nAbstractDiskHttpData#getChunk opens and closes fileChannel every time when it is invoked,\nas a result the uploaded file is corrupted. This is a regression caused by #10270.\n\nModifications:\n\n- Close the fileChannel only if everything was read or an exception is thrown\n- Add unit test\n\nResult:\nAbstractDiskHttpData#getChunk closes fileChannel only if everything was read or an exception is thrown", "committedDate": "2020-08-13T14:15:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzYyNQ==", "url": "https://github.com/netty/netty/pull/10481#discussion_r470043625", "bodyText": "@violetagg so you want to assert that both are not equals ?\nWhy not use assertFalse(Arrays.equals(.....)) or assertFalse(buf1.equals(buf2));?", "author": "normanmaurer", "createdAt": "2020-08-13T15:37:18Z", "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpDataTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http.multipart;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufUtil;\n+import io.netty.util.internal.PlatformDependent;\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.nio.charset.Charset;\n+import java.util.UUID;\n+\n+import static io.netty.util.CharsetUtil.UTF_8;\n+import static org.junit.Assert.assertArrayEquals;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * {@link AbstractDiskHttpData} test cases\n+ */\n+public class AbstractDiskHttpDataTest {\n+\n+    @Test\n+    public void testGetChunk() throws Exception {\n+        TestHttpData test = new TestHttpData(\"test\", UTF_8, 0);\n+        try {\n+            File tmpFile = File.createTempFile(UUID.randomUUID().toString(), \".tmp\");\n+            tmpFile.deleteOnExit();\n+            FileOutputStream fos = new FileOutputStream(tmpFile);\n+            byte[] bytes = new byte[4096];\n+            PlatformDependent.threadLocalRandom().nextBytes(bytes);\n+            try {\n+                fos.write(bytes);\n+                fos.flush();\n+            } finally {\n+                fos.close();\n+            }\n+            test.setContent(tmpFile);\n+            ByteBuf buf1 = test.getChunk(1024);\n+            assertEquals(buf1.readerIndex(), 0);\n+            assertEquals(buf1.writerIndex(), 1024);\n+            ByteBuf buf2 = test.getChunk(1024);\n+            assertEquals(buf2.readerIndex(), 0);\n+            assertEquals(buf2.writerIndex(), 1024);\n+            try {\n+                assertArrayEquals(ByteBufUtil.getBytes(buf1), ByteBufUtil.getBytes(buf2));\n+            } catch (AssertionError e) {\n+                return;", "originalCommit": "e7d14f08c21112ba23b67fd0dc39a2559fe5863d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1MzU0MA==", "url": "https://github.com/netty/netty/pull/10481#discussion_r470053540", "bodyText": "fixed", "author": "violetagg", "createdAt": "2020-08-13T15:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzYyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "66383c88aead219a60cb4c84761b5727acb11c02", "chunk": "diff --git a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpDataTest.java b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpDataTest.java\nindex 432e424487..a574893b84 100644\n--- a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpDataTest.java\n+++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/AbstractDiskHttpDataTest.java\n\n@@ -23,12 +23,12 @@ import org.junit.Test;\n import java.io.File;\n import java.io.FileOutputStream;\n import java.nio.charset.Charset;\n+import java.util.Arrays;\n import java.util.UUID;\n \n import static io.netty.util.CharsetUtil.UTF_8;\n-import static org.junit.Assert.assertArrayEquals;\n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.fail;\n+import static org.junit.Assert.assertFalse;\n \n /**\n  * {@link AbstractDiskHttpData} test cases\n"}}, {"oid": "66383c88aead219a60cb4c84761b5727acb11c02", "url": "https://github.com/netty/netty/commit/66383c88aead219a60cb4c84761b5727acb11c02", "message": "Address feedback", "committedDate": "2020-08-13T15:51:09Z", "type": "commit"}]}