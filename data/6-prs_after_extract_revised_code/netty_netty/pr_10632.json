{"pr_number": 10632, "pr_title": "Remove POLLRDHUP flag when handlePollAdd is called", "pr_createdAt": "2020-10-02T13:29:30Z", "pr_url": "https://github.com/netty/netty/pull/10632", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3Mzk5NQ==", "url": "https://github.com/netty/netty/pull/10632#discussion_r498873995", "bodyText": "doh! ... good catch", "author": "normanmaurer", "createdAt": "2020-10-02T14:56:31Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java", "diffHunk": "@@ -493,6 +491,7 @@ final void readComplete(int res, int data) {\n          * Called once POLLRDHUP event is ready to be processed\n          */\n         final void pollRdHup(int res) {\n+            ioState &= ~POLL_RDHUP_SCHEDULED;", "originalCommit": "3404114978d6c3c5e17c81103630a4fe2968744d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "4a320f1a509f8b971225e199eb77951b64b899e2", "url": "https://github.com/netty/netty/commit/4a320f1a509f8b971225e199eb77951b64b899e2", "message": "Remove POLLRDHUP flag when handlePollAdd is called\n\nMotivation:\n\nchannel is never removed as POLLRDHUP is not removed\n\nModifications:\n\n-remove doDeregister as it is already called\n-remove POLLRDHUP flag\n\nResult:\n\nchannel is removed from channel map", "committedDate": "2020-10-05T13:20:29Z", "type": "commit"}, {"oid": "bc716215f910ecbff717dcbe748f0158b008a62b", "url": "https://github.com/netty/netty/commit/bc716215f910ecbff717dcbe748f0158b008a62b", "message": "clear the poll flags if poll remove is processed", "committedDate": "2020-10-05T13:20:29Z", "type": "forcePushed"}, {"oid": "b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "url": "https://github.com/netty/netty/commit/b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "message": "clear the poll flags if poll remove is processed", "committedDate": "2020-10-05T13:27:49Z", "type": "commit"}, {"oid": "b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "url": "https://github.com/netty/netty/commit/b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "message": "clear the poll flags if poll remove is processed", "committedDate": "2020-10-05T13:27:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0NzcxNw==", "url": "https://github.com/netty/netty/pull/10632#discussion_r499647717", "bodyText": "\ud83e\udd14", "author": "chrisvest", "createdAt": "2020-10-05T14:37:35Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java", "diffHunk": "@@ -743,17 +742,18 @@ protected final void doDeregister() {\n \n         if (submissionQueue != null) {\n             if ((ioState & (POLL_IN_SCHEDULED | POLL_OUT_SCHEDULED | POLL_RDHUP_SCHEDULED)) == 0) {\n+                System.out.println(\"doDeregister remove Channel\");", "originalCommit": "b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bfb6740fa70edc304a0e546040d6bc8c39e0f9aa", "chunk": "diff --git a/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java b/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\nindex ac991d08db..ec82ae0268 100644\n--- a/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\n+++ b/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\n\n@@ -742,7 +742,6 @@ abstract class AbstractIOUringChannel extends AbstractChannel implements UnixCha\n \n         if (submissionQueue != null) {\n             if ((ioState & (POLL_IN_SCHEDULED | POLL_OUT_SCHEDULED | POLL_RDHUP_SCHEDULED)) == 0) {\n-                System.out.println(\"doDeregister remove Channel\");\n                 ((IOUringEventLoop) eventLoop()).remove(this);\n                 return;\n             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0ODc1Mg==", "url": "https://github.com/netty/netty/pull/10632#discussion_r499648752", "bodyText": "I think checkstyle won't like this \ud83d\ude42", "author": "chrisvest", "createdAt": "2020-10-05T14:38:56Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java", "diffHunk": "@@ -830,4 +830,16 @@ private void computeRemote() {\n     private boolean shouldBreakIoUringInReady(ChannelConfig config) {\n         return socket.isInputShutdown() && (inputClosedSeenErrorOnRead || !isAllowHalfClosure(config));\n     }\n+\n+    public void clearPollFlag(int pollMask) {\n+        if (pollMask == Native.POLLIN) {\n+            ioState &= ~POLL_IN_SCHEDULED;\n+        } else if (pollMask == Native.POLLOUT) {\n+            ioState &= ~POLL_OUT_SCHEDULED;\n+        } else if (pollMask == Native.POLLRDHUP) {\n+            ioState &= ~POLL_RDHUP_SCHEDULED;\n+        }\n+\n+\n+     }", "originalCommit": "b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bfb6740fa70edc304a0e546040d6bc8c39e0f9aa", "chunk": "diff --git a/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java b/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\nindex ac991d08db..ec82ae0268 100644\n--- a/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\n+++ b/transport-native-io_uring/src/main/java/io/netty/channel/uring/AbstractIOUringChannel.java\n\n@@ -839,7 +838,5 @@ abstract class AbstractIOUringChannel extends AbstractChannel implements UnixCha\n         } else if (pollMask == Native.POLLRDHUP) {\n             ioState &= ~POLL_RDHUP_SCHEDULED;\n         }\n-\n-\n      }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY1NTQwNg==", "url": "https://github.com/netty/netty/pull/10632#discussion_r499655406", "bodyText": "Maybe we should have an assert that pollMask fits in a short?", "author": "chrisvest", "createdAt": "2020-10-05T14:47:39Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringSubmissionQueue.java", "diffHunk": "@@ -191,9 +191,9 @@ boolean addAccept(int fd, long address, long addressLength, short extraData) {\n     }\n \n     //fill the address which is associated with server poll link user_data\n-    boolean addPollRemove(int fd, int pollMask, short extraData) {\n+    boolean addPollRemove(int fd, int pollMask) {\n         return enqueueSqe(Native.IORING_OP_POLL_REMOVE, 0, 0, fd,\n-                          encode(fd, Native.IORING_OP_POLL_ADD, (short) pollMask), 0, 0, extraData);\n+                          encode(fd, Native.IORING_OP_POLL_ADD, (short) pollMask), 0, 0, (short) pollMask);", "originalCommit": "b7f6d9295a5bb0fc05fc9dae06bc064767f7f18a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bfb6740fa70edc304a0e546040d6bc8c39e0f9aa", "chunk": "diff --git a/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringSubmissionQueue.java b/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringSubmissionQueue.java\nindex a506d40e87..489bb12a12 100644\n--- a/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringSubmissionQueue.java\n+++ b/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringSubmissionQueue.java\n\n@@ -192,6 +192,7 @@ final class IOUringSubmissionQueue {\n \n     //fill the address which is associated with server poll link user_data\n     boolean addPollRemove(int fd, int pollMask) {\n+        assert pollMask <= Short.MAX_VALUE && pollMask >= Short.MIN_VALUE;\n         return enqueueSqe(Native.IORING_OP_POLL_REMOVE, 0, 0, fd,\n                           encode(fd, Native.IORING_OP_POLL_ADD, (short) pollMask), 0, 0, (short) pollMask);\n     }\n"}}, {"oid": "bfb6740fa70edc304a0e546040d6bc8c39e0f9aa", "url": "https://github.com/netty/netty/commit/bfb6740fa70edc304a0e546040d6bc8c39e0f9aa", "message": "chris comments", "committedDate": "2020-10-06T14:34:04Z", "type": "commit"}]}