{"pr_number": 10557, "pr_title": "Fix NPE with MqttUnsubAckMessage - regression of MQTT5 support", "pr_createdAt": "2020-09-09T10:31:19Z", "pr_url": "https://github.com/netty/netty/pull/10557", "timeline": [{"oid": "4f8ba5e40a1c1440807572ca01ff07bc4cf1b4dd", "url": "https://github.com/netty/netty/commit/4f8ba5e40a1c1440807572ca01ff07bc4cf1b4dd", "message": "Motivation:\n\nRecent changes for MQTT5 may cause NPE if UNSUBACK message is created with `MqttMessageFactory`\nand client code isn't up-to-date.\n\nModifications:\n\nAdded default body in `MqttUnsubAckMessage` constructor if null body is passed,\nadded null checks in `encodeUnsubAckMessage`\n\nResult:\n\n`MqttUnsubAckMessage` created with `MqttMessageFactory` doesn't cause NPE\neven if null body is supplied.", "committedDate": "2020-09-09T10:27:53Z", "type": "commit"}, {"oid": "58b4eafb8759c7de0bc8b456596dee262de3c537", "url": "https://github.com/netty/netty/commit/58b4eafb8759c7de0bc8b456596dee262de3c537", "message": "Motivation:\n\nRecent changes for MQTT5 may cause `ClassCastException` in `MqttMessageFactory`\nfor legacy SUBSCRIBE and UNSUBSCRIBE message\n\nModifications:\n\nChanged casts for variable header in `MqttMessageFactory`,\nadapted message constructors accordingly.\n\nResult:\n\nBoth legacy and new headers handled successfully.", "committedDate": "2020-09-09T13:15:46Z", "type": "commit"}, {"oid": "144c66ab64bc36a25ad83dcda2afed3b3b04afaa", "url": "https://github.com/netty/netty/commit/144c66ab64bc36a25ad83dcda2afed3b3b04afaa", "message": "Tests for MqttMessageFactory", "committedDate": "2020-09-10T09:47:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM4NzcxNg==", "url": "https://github.com/netty/netty/pull/10557#discussion_r486387716", "bodyText": "nit: consider storing payload() in a local var and use it. There are multiple calls to message.payload()", "author": "normanmaurer", "createdAt": "2020-09-10T14:26:35Z", "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java", "diffHunk": "@@ -388,7 +388,8 @@ private static ByteBuf encodeUnsubAckMessage(\n                     message.idAndPropertiesVariableHeader().properties());\n             try {\n                 int variableHeaderBufferSize = 2 + propertiesBuf.readableBytes();\n-                int payloadBufferSize = message.payload().unsubscribeReasonCodes().size();\n+                int payloadBufferSize =\n+                        message.payload() == null ? 0 : message.payload().unsubscribeReasonCodes().size();", "originalCommit": "144c66ab64bc36a25ad83dcda2afed3b3b04afaa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d0efb79990511ae5013bf012036181384562da", "chunk": "diff --git a/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java\nindex 28165f8213..083e27092d 100644\n--- a/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java\n+++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java\n\n@@ -388,8 +388,8 @@ public final class MqttEncoder extends MessageToMessageEncoder<MqttMessage> {\n                     message.idAndPropertiesVariableHeader().properties());\n             try {\n                 int variableHeaderBufferSize = 2 + propertiesBuf.readableBytes();\n-                int payloadBufferSize =\n-                        message.payload() == null ? 0 : message.payload().unsubscribeReasonCodes().size();\n+                MqttUnsubAckPayload payload = message.payload();\n+                int payloadBufferSize = payload == null ? 0 : payload.unsubscribeReasonCodes().size();\n                 int variablePartSize = variableHeaderBufferSize + payloadBufferSize;\n                 int fixedHeaderBufferSize = 1 + getVariableLengthInt(variablePartSize);\n                 ByteBuf buf = ctx.alloc().buffer(fixedHeaderBufferSize + variablePartSize);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM4ODE0OQ==", "url": "https://github.com/netty/netty/pull/10557#discussion_r486388149", "bodyText": "private ?", "author": "normanmaurer", "createdAt": "2020-09-10T14:27:06Z", "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java", "diffHunk": "@@ -29,6 +29,16 @@\n \n     private final List<Short> unsubscribeReasonCodes;\n \n+    public static final MqttUnsubAckPayload EMPTY = new MqttUnsubAckPayload();", "originalCommit": "144c66ab64bc36a25ad83dcda2afed3b3b04afaa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "77d0efb79990511ae5013bf012036181384562da", "chunk": "diff --git a/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java\nindex f410caab42..e330f12799 100644\n--- a/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java\n+++ b/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java\n\n@@ -29,7 +29,7 @@ public final class MqttUnsubAckPayload {\n \n     private final List<Short> unsubscribeReasonCodes;\n \n-    public static final MqttUnsubAckPayload EMPTY = new MqttUnsubAckPayload();\n+    private static final MqttUnsubAckPayload EMPTY = new MqttUnsubAckPayload();\n \n     public static MqttUnsubAckPayload withEmptyDefaults(MqttUnsubAckPayload payload) {\n         if (payload == null) {\n"}}, {"oid": "77d0efb79990511ae5013bf012036181384562da", "url": "https://github.com/netty/netty/commit/77d0efb79990511ae5013bf012036181384562da", "message": "Store UNSUBACK payload in a local variable when encoding.", "committedDate": "2020-09-11T06:02:05Z", "type": "commit"}]}