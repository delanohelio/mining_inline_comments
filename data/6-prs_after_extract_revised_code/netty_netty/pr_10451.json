{"pr_number": 10451, "pr_title": "Enable TLS1.3 by default of JDK SSLEngine implementation does by default", "pr_createdAt": "2020-08-03T10:28:02Z", "pr_url": "https://github.com/netty/netty/pull/10451", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1NzY0Ng==", "url": "https://github.com/netty/netty/pull/10451#discussion_r464357646", "bodyText": "Sorry, could you please elaborate? Why enable only TLSv3 by default on the OpenSSL/BoringSSL side when the JDK one supports it? How are those 2 sides related?", "author": "slandelle", "createdAt": "2020-08-03T11:36:01Z", "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java", "diffHunk": "@@ -260,9 +260,10 @@ protected void deallocate() {\n             int options = SSLContext.getOptions(ctx) |\n                           SSL.SSL_OP_NO_SSLv2 |\n                           SSL.SSL_OP_NO_SSLv3 |\n-                          // Disable TLSv1.3 by default for now. Even if TLSv1.3 is not supported this will\n-                          // work fine as in this case SSL_OP_NO_TLSv1_3 will be 0.\n-                          SSL.SSL_OP_NO_TLSv1_3 |\n+                          // Disable TLSv1.3 by default if the JDK does not support TLSv13 as well.\n+                          // Even if TLSv1.3 is not supported this will work fine as in this case SSL_OP_NO_TLSv1_3\n+                          // will be 0.\n+                          (SslUtils.isTLSv13EnabledByJDK() ? 0 : SSL.SSL_OP_NO_TLSv1_3) |", "originalCommit": "2352cf204537eb158627026d7e1da8fcd55b4edd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM3MTk1Mw==", "url": "https://github.com/netty/netty/pull/10451#discussion_r464371953", "bodyText": "@slandelle I just thought it may be a good thing to make thins \"consistent\".", "author": "normanmaurer", "createdAt": "2020-08-03T12:08:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1NzY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM3NTQzNw==", "url": "https://github.com/netty/netty/pull/10451#discussion_r464375437", "bodyText": "I beg to differ.\nIMHO, BoringSSL is the most straightforward way for Netty users to get TLSv1.3 support when they are stuck on Java 8 and can't/don't want to go with Oracle builds or patch their JVM with OpenJSSE.\nThe OpenSSL/BoringSSL side should enable TLSv3 by default as soon as the OpenSSL/BoringSSL version supports it, which is known to be true for current version (2.0.31.Final) of netty-tcnative-boringssl-static.", "author": "slandelle", "createdAt": "2020-08-03T12:16:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1NzY0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUwMjY0Ng==", "url": "https://github.com/netty/netty/pull/10451#discussion_r465502646", "bodyText": "@slandelle after thinking more about it guess you are right. Let me fix this", "author": "normanmaurer", "createdAt": "2020-08-05T06:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1NzY0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "6beef50a62b76367815b4e0e63aa583e1ca6870c", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java\nindex 991008cc72..d7f5bbad1c 100644\n--- a/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java\n+++ b/handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java\n\n@@ -260,10 +260,6 @@ public abstract class ReferenceCountedOpenSslContext extends SslContext implemen\n             int options = SSLContext.getOptions(ctx) |\n                           SSL.SSL_OP_NO_SSLv2 |\n                           SSL.SSL_OP_NO_SSLv3 |\n-                          // Disable TLSv1.3 by default if the JDK does not support TLSv13 as well.\n-                          // Even if TLSv1.3 is not supported this will work fine as in this case SSL_OP_NO_TLSv1_3\n-                          // will be 0.\n-                          (SslUtils.isTLSv13EnabledByJDK() ? 0 : SSL.SSL_OP_NO_TLSv1_3) |\n \n                           SSL.SSL_OP_CIPHER_SERVER_PREFERENCE |\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzNTc4OQ==", "url": "https://github.com/netty/netty/pull/10451#discussion_r465535789", "bodyText": "Shouldn't those properties named in a way that it's explicit they are specific to the JDK, eg TLSV1_3_JDK_SUPPORTED and TLSV1_3_JDK_SUPPORTED?", "author": "slandelle", "createdAt": "2020-08-05T07:43:35Z", "path": "handler/src/main/java/io/netty/handler/ssl/SslUtils.java", "diffHunk": "@@ -107,9 +107,12 @@\n     static final String[] TLSV13_CIPHER_SUITES = { \"TLS_AES_128_GCM_SHA256\", \"TLS_AES_256_GCM_SHA384\" };\n \n     private static final boolean TLSV1_3_SUPPORTED;\n+    private static final boolean TLSV1_3_ENABLED;", "originalCommit": "6b600b42c62db02220dbd834783c2029693f75a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0Nzg3OA==", "url": "https://github.com/netty/netty/pull/10451#discussion_r465547878", "bodyText": "done", "author": "normanmaurer", "createdAt": "2020-08-05T08:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzNTc4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "6beef50a62b76367815b4e0e63aa583e1ca6870c", "chunk": "diff --git a/handler/src/main/java/io/netty/handler/ssl/SslUtils.java b/handler/src/main/java/io/netty/handler/ssl/SslUtils.java\nindex 3b712999f4..fff507871b 100644\n--- a/handler/src/main/java/io/netty/handler/ssl/SslUtils.java\n+++ b/handler/src/main/java/io/netty/handler/ssl/SslUtils.java\n\n@@ -106,8 +106,8 @@ final class SslUtils {\n     static final String[] DEFAULT_TLSV13_CIPHER_SUITES;\n     static final String[] TLSV13_CIPHER_SUITES = { \"TLS_AES_128_GCM_SHA256\", \"TLS_AES_256_GCM_SHA384\" };\n \n-    private static final boolean TLSV1_3_SUPPORTED;\n-    private static final boolean TLSV1_3_ENABLED;\n+    private static final boolean TLSV1_3_JDK_SUPPORTED;\n+    private static final boolean TLSV1_3_JDK_DEFAULT_ENABLED;\n \n     static {\n         boolean tlsv13Supported = false;\n"}}, {"oid": "6beef50a62b76367815b4e0e63aa583e1ca6870c", "url": "https://github.com/netty/netty/commit/6beef50a62b76367815b4e0e63aa583e1ca6870c", "message": "Enable TLS1.3 by default of JDK SSLEngine implementation does by default\n\nMotiviation:\n\nWhen TLSv1.3 was introduced almost 2 years ago, it was decided to disable it by default, even when it's supported by the underlying TLS implementation.\n\nTLSv13 is pretty stable now in Java (out of the box in Java 11, OpenJSSE for Java 8, BoringSSL and OpenSSL) and may be enabled by default.\n\nModifications:\n\nEnsure TLSv13 is enabled by default when the underyling JDK SSLEngine implementation enables it as well\n\nResult:\n\nTLSv1.3 is now enabled by default, so users don't have to explicitly enable it.\n\nCo-authored-by: Stephane Landelle <slandelle@gatling.io>", "committedDate": "2020-08-10T09:14:17Z", "type": "commit"}, {"oid": "6beef50a62b76367815b4e0e63aa583e1ca6870c", "url": "https://github.com/netty/netty/commit/6beef50a62b76367815b4e0e63aa583e1ca6870c", "message": "Enable TLS1.3 by default of JDK SSLEngine implementation does by default\n\nMotiviation:\n\nWhen TLSv1.3 was introduced almost 2 years ago, it was decided to disable it by default, even when it's supported by the underlying TLS implementation.\n\nTLSv13 is pretty stable now in Java (out of the box in Java 11, OpenJSSE for Java 8, BoringSSL and OpenSSL) and may be enabled by default.\n\nModifications:\n\nEnsure TLSv13 is enabled by default when the underyling JDK SSLEngine implementation enables it as well\n\nResult:\n\nTLSv1.3 is now enabled by default, so users don't have to explicitly enable it.\n\nCo-authored-by: Stephane Landelle <slandelle@gatling.io>", "committedDate": "2020-08-10T09:14:17Z", "type": "forcePushed"}]}