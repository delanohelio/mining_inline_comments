{"pr_number": 10704, "pr_title": "Fix ByteBuf leaks in HaProxyMessageEncoderTest", "pr_createdAt": "2020-10-17T18:35:56Z", "pr_url": "https://github.com/netty/netty/pull/10704", "timeline": [{"oid": "10d6f26be9a75fb075f0ea948c88005451f35e7e", "url": "https://github.com/netty/netty/commit/10d6f26be9a75fb075f0ea948c88005451f35e7e", "message": "Fix ByteBuf leaks in HaProxyMessageEncoderTest\n\nMotivation:\n\nWe need to ensure we not leak in tests. We did see some leaks reported related to HaProxyMessageEncoderTest on our CI.\n\nModifications:\n\n- Use readSlice(...) and so not create new ByteBuf instances that need to be released\n\nResult:\n\nNo more leaks", "committedDate": "2020-10-17T18:34:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk3MTI4NQ==", "url": "https://github.com/netty/netty/pull/10704#discussion_r506971285", "bodyText": "readBytes(...) creates a new ByteBuf which needs to be released. readSlice returns a ByteBuf that shares the same reference count as the original buffer and so not need to be released", "author": "normanmaurer", "createdAt": "2020-10-17T18:36:48Z", "path": "codec-haproxy/src/test/java/io/netty/handler/codec/haproxy/HaProxyMessageEncoderTest.java", "diffHunk": "@@ -254,13 +254,13 @@ public void testTLVEncodeProxy() {\n         assertEquals(alpnTlv.typeByteValue(), tlv.readByte());\n         short bufLength = tlv.readShort();\n         assertEquals(helloWorld.array().length, bufLength);\n-        assertEquals(helloWorld, tlv.readBytes(bufLength));\n+        assertEquals(helloWorld, tlv.readSlice(bufLength));", "originalCommit": "10d6f26be9a75fb075f0ea948c88005451f35e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}