{"pr_number": 10480, "pr_title": "Include TLSv1.3 ciphers as recommented ciphers for HTTP2", "pr_createdAt": "2020-08-13T12:37:29Z", "pr_url": "https://github.com/netty/netty/pull/10480", "timeline": [{"oid": "c6e5049095165d5bdf7df51173a3001eac889f51", "url": "https://github.com/netty/netty/commit/c6e5049095165d5bdf7df51173a3001eac889f51", "message": "Include TLSv1.3 ciphers as recommented ciphers for HTTP2\n\nMotivation:\n\nWe should include TLSv1.3 ciphers as well as recommented ciphers these days for HTTP/2. That is especially true as Java supports TLSv1.3 these days out of the box\n\nModifications:\n\n- Add TLSv1.3 ciphers that are recommended by mozilla as was for HTTP/2\n- Add unit test\n\nResult:\n\nInclude TLSv1.3 ciphers as well", "committedDate": "2020-08-13T12:34:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDQ2NA==", "url": "https://github.com/netty/netty/pull/10480#discussion_r470004464", "bodyText": "content => context", "author": "slandelle", "createdAt": "2020-08-13T14:42:18Z", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")", "originalCommit": "c6e5049095165d5bdf7df51173a3001eac889f51", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c9dbda9da0c740a17bb3d8169270c086ad9175c", "chunk": "diff --git a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\nindex 5038185cbc..0560675111 100644\n--- a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n+++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n\n@@ -30,19 +30,20 @@ import javax.net.ssl.SSLException;\n public class Http2SecurityUtilTest {\n \n     @Test\n-    public void testTLSv13CiphersIncluded() throws SSLException  {\n+    public void testTLSv13CiphersIncluded() throws SSLException {\n         Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n-                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        testCiphersIncluded(\"TLSv1.3\");\n     }\n \n     @Test\n     public void testTLSv12CiphersIncluded() throws SSLException  {\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.2\")\n+        testCiphersIncluded(\"TLSv1.2\");\n+    }\n+\n+    private static void testCiphersIncluded(String protocol) throws SSLException  {\n+        SslContext context = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(protocol)\n                 .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        SSLEngine engine = context.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(\"No \" + protocol + \" ciphers found\", engine.getEnabledCipherSuites().length > 0);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDcwMg==", "url": "https://github.com/netty/netty/pull/10480#discussion_r470004702", "bodyText": "content => context", "author": "slandelle", "createdAt": "2020-08-13T14:42:38Z", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n+                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n+        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+    }\n+\n+    @Test\n+    public void testTLSv12CiphersIncluded() throws SSLException  {\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.2\")", "originalCommit": "c6e5049095165d5bdf7df51173a3001eac889f51", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c9dbda9da0c740a17bb3d8169270c086ad9175c", "chunk": "diff --git a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\nindex 5038185cbc..0560675111 100644\n--- a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n+++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n\n@@ -30,19 +30,20 @@ import javax.net.ssl.SSLException;\n public class Http2SecurityUtilTest {\n \n     @Test\n-    public void testTLSv13CiphersIncluded() throws SSLException  {\n+    public void testTLSv13CiphersIncluded() throws SSLException {\n         Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n-                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        testCiphersIncluded(\"TLSv1.3\");\n     }\n \n     @Test\n     public void testTLSv12CiphersIncluded() throws SSLException  {\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.2\")\n+        testCiphersIncluded(\"TLSv1.2\");\n+    }\n+\n+    private static void testCiphersIncluded(String protocol) throws SSLException  {\n+        SslContext context = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(protocol)\n                 .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        SSLEngine engine = context.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(\"No \" + protocol + \" ciphers found\", engine.getEnabledCipherSuites().length > 0);\n     }\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNzIzMg==", "url": "https://github.com/netty/netty/pull/10480#discussion_r470007232", "bodyText": "Not found of assertTrue without an explicit error message: failures are very hard to read.", "author": "slandelle", "createdAt": "2020-08-13T14:46:07Z", "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2020 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package io.netty.handler.codec.http2;\n+\n+import io.netty.buffer.UnpooledByteBufAllocator;\n+import io.netty.handler.ssl.SslContext;\n+import io.netty.handler.ssl.SslContextBuilder;\n+import io.netty.handler.ssl.SslProvider;\n+import io.netty.handler.ssl.SupportedCipherSuiteFilter;\n+import org.junit.Assert;\n+import org.junit.Assume;\n+import org.junit.Test;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLException;\n+\n+public class Http2SecurityUtilTest {\n+\n+    @Test\n+    public void testTLSv13CiphersIncluded() throws SSLException  {\n+        Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n+        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n+                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n+        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);", "originalCommit": "c6e5049095165d5bdf7df51173a3001eac889f51", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0c9dbda9da0c740a17bb3d8169270c086ad9175c", "chunk": "diff --git a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\nindex 5038185cbc..0560675111 100644\n--- a/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n+++ b/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2SecurityUtilTest.java\n\n@@ -30,19 +30,20 @@ import javax.net.ssl.SSLException;\n public class Http2SecurityUtilTest {\n \n     @Test\n-    public void testTLSv13CiphersIncluded() throws SSLException  {\n+    public void testTLSv13CiphersIncluded() throws SSLException {\n         Assume.assumeTrue(SslProvider.isTlsv13Supported(SslProvider.JDK));\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.3\")\n-                .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        testCiphersIncluded(\"TLSv1.3\");\n     }\n \n     @Test\n     public void testTLSv12CiphersIncluded() throws SSLException  {\n-        SslContext content = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(\"TLSv1.2\")\n+        testCiphersIncluded(\"TLSv1.2\");\n+    }\n+\n+    private static void testCiphersIncluded(String protocol) throws SSLException  {\n+        SslContext context = SslContextBuilder.forClient().sslProvider(SslProvider.JDK).protocols(protocol)\n                 .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE).build();\n-        SSLEngine engine = content.newEngine(UnpooledByteBufAllocator.DEFAULT);\n-        Assert.assertTrue(engine.getEnabledCipherSuites().length > 0);\n+        SSLEngine engine = context.newEngine(UnpooledByteBufAllocator.DEFAULT);\n+        Assert.assertTrue(\"No \" + protocol + \" ciphers found\", engine.getEnabledCipherSuites().length > 0);\n     }\n }\n"}}, {"oid": "0c9dbda9da0c740a17bb3d8169270c086ad9175c", "url": "https://github.com/netty/netty/commit/0c9dbda9da0c740a17bb3d8169270c086ad9175c", "message": "comment", "committedDate": "2020-08-13T15:15:06Z", "type": "commit"}, {"oid": "0c9dbda9da0c740a17bb3d8169270c086ad9175c", "url": "https://github.com/netty/netty/commit/0c9dbda9da0c740a17bb3d8169270c086ad9175c", "message": "comment", "committedDate": "2020-08-13T15:15:06Z", "type": "forcePushed"}]}