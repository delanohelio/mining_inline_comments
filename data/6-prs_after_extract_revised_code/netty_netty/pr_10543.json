{"pr_number": 10543, "pr_title": "Exploit blocking FAST_POLL for eventfd reads", "pr_createdAt": "2020-09-07T19:42:13Z", "pr_url": "https://github.com/netty/netty/pull/10543", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485130888", "bodyText": "@njhill is this safe using a shared read buffer with multiple io ring event loops..?", "author": "johnou", "createdAt": "2020-09-08T18:56:40Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java", "diffHunk": "@@ -34,6 +34,8 @@\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n+    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);", "originalCommit": "374e121afa4fcfce431b83dd8fc94e400538c35c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0NTgwNw==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485445807", "bodyText": "@johnou yeah should be save I guess, however it's odd :)", "author": "1Jo1", "createdAt": "2020-09-09T08:48:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NDQ0MQ==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485644441", "bodyText": "Well there is no sync across event loops so I don't see how this is safe.. is the operation atomic or something?", "author": "johnou", "createdAt": "2020-09-09T14:12:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NTkwOQ==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485645909", "bodyText": "@johnou its safe because we basically don't care about what we read... we just need to read.", "author": "normanmaurer", "createdAt": "2020-09-09T14:14:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcwMjU1Ng==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485702556", "bodyText": "@johnou yep what @normanmaurer said :) ... though I wonder might it be better for it to be padded, not sure if there are any false sharing implications", "author": "njhill", "createdAt": "2020-09-09T15:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTQ0NA==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485721444", "bodyText": "@njhill yeah... maybe just use one per EventLoop, 8 more bytes really don't matter :)", "author": "normanmaurer", "createdAt": "2020-09-09T15:54:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc2NzQzNg==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485767436", "bodyText": "Technically 16 bytes with the instance field :)", "author": "njhill", "createdAt": "2020-09-09T16:47:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc3MzM5OA==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485773398", "bodyText": "true... that said thats fine as well :D", "author": "normanmaurer", "createdAt": "2020-09-09T16:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMjE5Mg==", "url": "https://github.com/netty/netty/pull/10543#discussion_r486232192", "bodyText": "thanks for making the change, for me it was a huge code smell \ud83d\udc4d", "author": "johnou", "createdAt": "2020-09-10T10:27:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzMDg4OA=="}], "type": "inlineReview", "revised_code": {"commit": "357f3313548d712b528a11de3fa3b15d95977863", "chunk": "diff --git a/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java b/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java\nindex 16f3dc1529..005f8e9acf 100644\n--- a/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java\n+++ b/transport-native-io_uring/src/main/java/io/netty/channel/uring/IOUringEventLoop.java\n\n@@ -34,7 +35,7 @@ final class IOUringEventLoop extends SingleThreadEventLoop implements\n                                                            IOUringCompletionQueue.IOUringCompletionQueueCallback {\n     private static final InternalLogger logger = InternalLoggerFactory.getInstance(IOUringEventLoop.class);\n \n-    private static final long efdReadBuf = PlatformDependent.allocateMemory(8);\n+    private final long eventfdReadBuf = PlatformDependent.allocateMemory(8);\n \n     private final IntObjectMap<AbstractIOUringChannel> channels = new IntObjectHashMap<AbstractIOUringChannel>(4096);\n     private final RingBuffer ringBuffer;\n"}}, {"oid": "357f3313548d712b528a11de3fa3b15d95977863", "url": "https://github.com/netty/netty/commit/357f3313548d712b528a11de3fa3b15d95977863", "message": "Keep eventfd read buffer per event loop rather than sharing globally", "committedDate": "2020-09-09T16:46:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzMyNg==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485843326", "bodyText": "nit: please rename as well", "author": "normanmaurer", "createdAt": "2020-09-09T18:57:51Z", "path": "transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java", "diffHunk": "@@ -111,15 +111,13 @@ static RingBuffer createRingBuffer(Runnable submissionCallback) {\n \n     public static native void eventFdWrite(int fd, long value);\n \n-    public static native void eventFdRead(int fd);\n-\n     public static FileDescriptor newEventFd() {", "originalCommit": "7ac82b215092317c9814060a6146e252b79a2670", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3MDQ0Mg==", "url": "https://github.com/netty/netty/pull/10543#discussion_r485870442", "bodyText": "done", "author": "njhill", "createdAt": "2020-09-09T19:40:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg0MzMyNg=="}], "type": "inlineReview", "revised_code": {"commit": "baa3839e666b623fbbfdf0f9425a8b4e2fcaa906", "chunk": "diff --git a/transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java b/transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java\nindex 57564f375c..d1767f24a2 100644\n--- a/transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java\n+++ b/transport-native-io_uring/src/main/java/io/netty/channel/uring/Native.java\n\n@@ -111,13 +111,15 @@ final class Native {\n \n     public static native void eventFdWrite(int fd, long value);\n \n+    public static native void eventFdRead(int fd);\n+\n     public static FileDescriptor newEventFd() {\n-        return new FileDescriptor(newBlockingEventFd());\n+        return new FileDescriptor(eventFd());\n     }\n \n     public static native void ioUringExit(RingBuffer ringBuffer);\n \n-    private static native int newBlockingEventFd();\n+    private static native int eventFd();\n \n     // for testing(it is only temporary)\n     public static native int createFile();\n"}}, {"oid": "baa3839e666b623fbbfdf0f9425a8b4e2fcaa906", "url": "https://github.com/netty/netty/commit/baa3839e666b623fbbfdf0f9425a8b4e2fcaa906", "message": "Exploit blocking FAST_POLL for eventfd reads\n\nMotivation\n\nIf we make eventfd blocking then read can take the place of poll+read\n\nModification\n\nMake eventfd blocking, use READ instead of POLLIN, allocating a static\n64bit buffer to read into\n\nResult\n\nFewer kernel roundtrips for event loop wakeups", "committedDate": "2020-09-09T19:23:12Z", "type": "commit"}, {"oid": "397e1cbc354a4f2c8dfc67667e3b44d88b464697", "url": "https://github.com/netty/netty/commit/397e1cbc354a4f2c8dfc67667e3b44d88b464697", "message": "Keep eventfd read buffer per event loop rather than sharing globally", "committedDate": "2020-09-09T19:26:58Z", "type": "commit"}, {"oid": "76574282bc8e56af319352f72ca47f5e6065f4c0", "url": "https://github.com/netty/netty/commit/76574282bc8e56af319352f72ca47f5e6065f4c0", "message": "Rename JNI blocking eventfd method, remove now-unused eventFdRead method", "committedDate": "2020-09-09T19:26:59Z", "type": "commit"}, {"oid": "e2269c39b3ef104765b519fde6b2ab1c6128545f", "url": "https://github.com/netty/netty/commit/e2269c39b3ef104765b519fde6b2ab1c6128545f", "message": "Rename Native#newEventFd() -> Native#newBlockingEventFd()", "committedDate": "2020-09-09T19:29:49Z", "type": "commit"}, {"oid": "e2269c39b3ef104765b519fde6b2ab1c6128545f", "url": "https://github.com/netty/netty/commit/e2269c39b3ef104765b519fde6b2ab1c6128545f", "message": "Rename Native#newEventFd() -> Native#newBlockingEventFd()", "committedDate": "2020-09-09T19:29:49Z", "type": "forcePushed"}]}