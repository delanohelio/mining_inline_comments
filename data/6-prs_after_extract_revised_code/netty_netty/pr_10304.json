{"pr_number": 10304, "pr_title": "Dequeue all cached messages and destroy the queue instance after removing the FlowControlHandler from channel pipeline.", "pr_createdAt": "2020-05-17T09:38:13Z", "pr_url": "https://github.com/netty/netty/pull/10304", "timeline": [{"oid": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed", "url": "https://github.com/netty/netty/commit/88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed", "message": "Dequeue all cached messages and destroy the queue instance after removing the FlowControlHandler from channel pipeline.", "committedDate": "2020-05-17T09:17:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQyNTA3MQ==", "url": "https://github.com/netty/netty/pull/10304#discussion_r426425071", "bodyText": "You need to add:\nReferenceCountUtil.release(msg);", "author": "normanmaurer", "createdAt": "2020-05-18T07:39:11Z", "path": "handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java", "diffHunk": "@@ -479,6 +479,64 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) {\n         assertFalse(channel.finish());\n     }\n \n+    @Test\n+    public void testRemoveFlowControl() throws Exception {\n+        final CountDownLatch latch = new CountDownLatch(3);\n+\n+        ChannelInboundHandlerAdapter handler = new ChannelDuplexHandler() {\n+            @Override\n+            public void channelActive(ChannelHandlerContext ctx) throws Exception {\n+                //do the first read\n+                ctx.read();\n+                super.channelActive(ctx);\n+            }\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n+                latch.countDown();\n+                super.channelRead(ctx, msg);\n+            }\n+        };\n+\n+        FlowControlHandler flow = new FlowControlHandler() {\n+            private int num;\n+            @Override\n+            public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {\n+                super.channelRead(ctx, msg);\n+                ++num;\n+                if (num >= 3) {\n+                    //We have received 3 messages. Remove myself later\n+                    final ChannelHandler handler = this;\n+                    ctx.channel().eventLoop().execute(new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            ctx.pipeline().remove(handler);\n+                        }\n+                    });\n+                }\n+            }\n+        };\n+        ChannelInboundHandlerAdapter tail = new ChannelInboundHandlerAdapter() {\n+            @Override\n+            public void channelRead(ChannelHandlerContext ctx, Object msg) {\n+                //consume this msg", "originalCommit": "88f076fac45ad4e2f8b5b8ce068ddaafea32e1ed", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5ef4dd8b026074072a25de8bbfc4335f4c0122ab", "chunk": "diff --git a/handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java b/handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java\nindex ed25a027e9..e1f053bc51 100644\n--- a/handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java\n+++ b/handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java\n\n@@ -519,6 +519,7 @@ public class FlowControlHandlerTest {\n             @Override\n             public void channelRead(ChannelHandlerContext ctx, Object msg) {\n                 //consume this msg\n+                ReferenceCountUtil.release(msg);\n             }\n         };\n \n"}}, {"oid": "5ef4dd8b026074072a25de8bbfc4335f4c0122ab", "url": "https://github.com/netty/netty/commit/5ef4dd8b026074072a25de8bbfc4335f4c0122ab", "message": "Fix test case issue.", "committedDate": "2020-05-18T14:06:22Z", "type": "commit"}]}