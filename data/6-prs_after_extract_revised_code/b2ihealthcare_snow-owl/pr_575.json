{"pr_number": 575, "pr_title": "Support branch merge revision exclusion list", "pr_createdAt": "2020-05-28T07:46:45Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/575", "timeline": [{"oid": "0fea3a4769d46e2913580bd2527b48e5043ea4f5", "url": "https://github.com/b2ihealthcare/snow-owl/commit/0fea3a4769d46e2913580bd2527b48e5043ea4f5", "message": "SO-4028: Support exclusions from merge operation", "committedDate": "2020-05-21T09:47:46Z", "type": "commit"}, {"oid": "0a5697d164991978f1f92267f160d547e4ffd48a", "url": "https://github.com/b2ihealthcare/snow-owl/commit/0a5697d164991978f1f92267f160d547e4ffd48a", "message": "SO-4028: Use passed in exclusion id set in StagingArea", "committedDate": "2020-05-21T13:27:44Z", "type": "commit"}, {"oid": "e72d1af6b05e8636e5730f51f0022ee513928e8a", "url": "https://github.com/b2ihealthcare/snow-owl/commit/e72d1af6b05e8636e5730f51f0022ee513928e8a", "message": "SO-4028: Add exclusion merge revision branch index test case", "committedDate": "2020-05-21T15:07:57Z", "type": "commit"}, {"oid": "64bd3202dc1d1773c0c5032b875c00a628760be5", "url": "https://github.com/b2ihealthcare/snow-owl/commit/64bd3202dc1d1773c0c5032b875c00a628760be5", "message": "SO-4028: Avoid concurrent map modification", "committedDate": "2020-05-21T15:10:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NDgxMA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r434144810", "bodyText": "It would be better to apply the exclusions immediately when we set them on the StagingArea and not relying on a method call with removeExclusions.\nAlso, this eliminates the actual objects from the StagingArea while I think it would be better to keep them around and just apply the exclusions as a filter on top of them.", "author": "cmark", "createdAt": "2020-06-02T20:05:18Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java", "diffHunk": "@@ -937,4 +937,15 @@ public StagedObject removed(Object object, RevisionDiff diff, boolean commit) {\n \t\treturn new StagedObject(StageKind.REMOVED, object, diff, commit);\n \t}\n \n+\tpublic void removeExclusions(Set<String> exclusions) {", "originalCommit": "64bd3202dc1d1773c0c5032b875c00a628760be5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a70fa83b87ae4c0e1c719de03b7fa0a9da96e52b", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\nindex d415e902c6..5663c14501 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n\n@@ -937,15 +952,4 @@ public final class StagingArea {\n \t\treturn new StagedObject(StageKind.REMOVED, object, diff, commit);\n \t}\n \n-\tpublic void removeExclusions(Set<String> exclusions) {\n-\t\tif (exclusions != null) {\n-\t\t\tSet<ObjectId> objectsToRemove = stagedObjects.keySet()\n-\t\t\t\t.stream()\n-\t\t\t\t.filter(objectId -> exclusions.contains(objectId.id()))\n-\t\t\t\t.collect(Collectors.toSet());\n-\t\t\t\n-\t\t\tobjectsToRemove.forEach(objectId -> stagedObjects.remove(objectId));\n-\t\t}\n-\t}\n-\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NTcyNQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r434145725", "bodyText": "I would rename the setExclusions() method to just exclude() and give it a few overloaded versions:\nexclude(String...ids)\nexclude(Collection<String> ids)", "author": "cmark", "createdAt": "2020-06-02T20:07:04Z", "path": "commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java", "diffHunk": "@@ -99,6 +100,33 @@ public void fastForwardMergeBranchWithNewRevisionToParent() throws Exception {\n \t\tassertNotNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY1));\n \t}\n \t\n+\t@Test\n+\tpublic void forwardMergeBranchWithExclusions() throws Exception {\n+\t\tString child = createBranch(MAIN, \"a\");\n+\t\t// create a revisions on child branch\n+\t\tindexRevision(child, NEW_DATA);\n+\t\tindexRevision(child, NEW_DATA2);\n+\t\t// after commit child branch becomes FORWARD\n+\t\tassertState(child, MAIN, BranchState.FORWARD);\n+\t\t// do the merge with an exclusion\n+\t\tbranching()\n+\t\t\t.prepareMerge(child, MAIN)\n+\t\t\t.setExclusions(ImmutableSet.of(STORAGE_KEY1))", "originalCommit": "64bd3202dc1d1773c0c5032b875c00a628760be5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NTU5Mw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r436955593", "bodyText": "This suggestion is still not implemented, could you please add these as well?", "author": "nagyo", "createdAt": "2020-06-08T19:39:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NTcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "12b4bd2340bc4410b80e886656701303e6f84798", "chunk": "diff --git a/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java b/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\nindex 42142ac726..61ef7273ae 100644\n--- a/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\n+++ b/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\n\n@@ -111,7 +111,7 @@ public class RevisionBranchMergeTest extends BaseRevisionIndexTest {\n \t\t// do the merge with an exclusion\n \t\tbranching()\n \t\t\t.prepareMerge(child, MAIN)\n-\t\t\t.setExclusions(ImmutableSet.of(STORAGE_KEY1))\n+\t\t\t.exclude(STORAGE_KEY1)\n \t\t\t.squash(true)\n \t\t\t.merge();\n \t\t\n"}}, {"oid": "a70fa83b87ae4c0e1c719de03b7fa0a9da96e52b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/a70fa83b87ae4c0e1c719de03b7fa0a9da96e52b", "message": "SO-4028: Track excluded objects without removing from staged objects", "committedDate": "2020-06-05T14:29:10Z", "type": "commit"}, {"oid": "12b4bd2340bc4410b80e886656701303e6f84798", "url": "https://github.com/b2ihealthcare/snow-owl/commit/12b4bd2340bc4410b80e886656701303e6f84798", "message": "SO-4028: Rename, overload exclude method", "committedDate": "2020-06-09T08:51:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNDcwMA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r437304700", "bodyText": "Use String...ids varargs here with defensive copy.", "author": "cmark", "createdAt": "2020-06-09T10:24:57Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java", "diffHunk": "@@ -68,8 +69,12 @@ public Commit merge() {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation setExclusions(Set<String> exclusions) {\n-\t\tthis.exclusions = exclusions;\n+\tpublic BranchMergeOperation exclude(String id) {", "originalCommit": "12b4bd2340bc4410b80e886656701303e6f84798", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b0bffe37fc4f80d27167be7ef6fe2a46334c89a", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\nindex de04487e0a..7594a2f37c 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n\n@@ -69,12 +71,12 @@ public final class BranchMergeOperation {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation exclude(String id) {\n-\t\treturn exclude(Collections.singleton(id));\n+\tpublic BranchMergeOperation exclude(String ... ids) {\n+\t\treturn exclude(Arrays.copyOf(ids, ids.length));\n \t}\n \t\n-\tpublic BranchMergeOperation exclude(Set<String> ids) {\n-\t\tthis.exclusions = ids;\n+\tpublic BranchMergeOperation exclude(Iterable<String> ids) {\n+\t\tthis.exclusions = Sets.newHashSet(ids);\n \t\treturn this;\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNDkzOQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r437304939", "bodyText": "Use Iterable<String> argument here with defensive copy.", "author": "cmark", "createdAt": "2020-06-09T10:25:23Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java", "diffHunk": "@@ -68,8 +69,12 @@ public Commit merge() {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation setExclusions(Set<String> exclusions) {\n-\t\tthis.exclusions = exclusions;\n+\tpublic BranchMergeOperation exclude(String id) {\n+\t\treturn exclude(Collections.singleton(id));\n+\t}\n+\t\n+\tpublic BranchMergeOperation exclude(Set<String> ids) {", "originalCommit": "12b4bd2340bc4410b80e886656701303e6f84798", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0b0bffe37fc4f80d27167be7ef6fe2a46334c89a", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\nindex de04487e0a..7594a2f37c 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n\n@@ -69,12 +71,12 @@ public final class BranchMergeOperation {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation exclude(String id) {\n-\t\treturn exclude(Collections.singleton(id));\n+\tpublic BranchMergeOperation exclude(String ... ids) {\n+\t\treturn exclude(Arrays.copyOf(ids, ids.length));\n \t}\n \t\n-\tpublic BranchMergeOperation exclude(Set<String> ids) {\n-\t\tthis.exclusions = ids;\n+\tpublic BranchMergeOperation exclude(Iterable<String> ids) {\n+\t\tthis.exclusions = Sets.newHashSet(ids);\n \t\treturn this;\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNTMwOQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r437305309", "bodyText": "Use Collections.emptySet() for initialization.", "author": "cmark", "createdAt": "2020-06-09T10:26:07Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java", "diffHunk": "@@ -70,6 +71,7 @@\n \t\tthis.index = index;\n \t\tthis.branchPath = branchPath;\n \t\tthis.mapper = mapper;\n+\t\tthis.exclusions = Sets.newHashSet();", "originalCommit": "12b4bd2340bc4410b80e886656701303e6f84798", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "738668ae477d4be51f53b348bbb85bc5e37effdd", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\nindex 5663c14501..0b7a366618 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n\n@@ -71,7 +71,7 @@ public final class StagingArea {\n \t\tthis.index = index;\n \t\tthis.branchPath = branchPath;\n \t\tthis.mapper = mapper;\n-\t\tthis.exclusions = Sets.newHashSet();\n+\t\tthis.exclusions = Collections.emptySet();\n \t\treset();\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwNTkxNA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r437305914", "bodyText": "Please extract the filtered view to a private method, getFilteredStagedObjects()", "author": "cmark", "createdAt": "2020-06-09T10:27:10Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java", "diffHunk": "@@ -247,7 +249,10 @@ private Commit doCommit(String commitGroupId, long timestamp, String author, Str\n \t\tfinal Multimap<ObjectId, ObjectId> removedComponentsByContainer = HashMultimap.create();\n \t\tfinal Multimap<Class<?>, String> deletedIdsByType = HashMultimap.create();\n \n-\t\tstagedObjects.forEach((key, value) -> {\n+\t\tstagedObjects.entrySet().stream().filter(entry -> !exclusions.contains(entry.getKey().id())).forEach( entry -> {", "originalCommit": "12b4bd2340bc4410b80e886656701303e6f84798", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "738668ae477d4be51f53b348bbb85bc5e37effdd", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\nindex 5663c14501..0b7a366618 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/StagingArea.java\n\n@@ -249,7 +249,7 @@ public final class StagingArea {\n \t\tfinal Multimap<ObjectId, ObjectId> removedComponentsByContainer = HashMultimap.create();\n \t\tfinal Multimap<Class<?>, String> deletedIdsByType = HashMultimap.create();\n \n-\t\tstagedObjects.entrySet().stream().filter(entry -> !exclusions.contains(entry.getKey().id())).forEach( entry -> {\n+\t\tgetFilteredStagedObjects().entrySet().forEach( entry -> {\n \t\t\tObjectId key = entry.getKey();\n \t\t\tStagedObject value = entry.getValue();\n \t\t\t\n"}}, {"oid": "71ff49b37bd0aea6bd808870cc53a296ea45fe49", "url": "https://github.com/b2ihealthcare/snow-owl/commit/71ff49b37bd0aea6bd808870cc53a296ea45fe49", "message": "SO-4028: Create merge exclude tests for changed, remvoed, new revisions", "committedDate": "2020-06-10T12:11:12Z", "type": "commit"}, {"oid": "0b0bffe37fc4f80d27167be7ef6fe2a46334c89a", "url": "https://github.com/b2ihealthcare/snow-owl/commit/0b0bffe37fc4f80d27167be7ef6fe2a46334c89a", "message": "SO-4028: Use varargs, defensive copy in merge operation exclude setters", "committedDate": "2020-06-10T12:32:07Z", "type": "commit"}, {"oid": "738668ae477d4be51f53b348bbb85bc5e37effdd", "url": "https://github.com/b2ihealthcare/snow-owl/commit/738668ae477d4be51f53b348bbb85bc5e37effdd", "message": "SO-4028: Create private method to get filtered staged objects", "committedDate": "2020-06-10T12:46:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NDA1NQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r438244055", "bodyText": "Unnecessary assertion, please remove!", "author": "cmark", "createdAt": "2020-06-10T16:10:34Z", "path": "commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java", "diffHunk": "@@ -127,6 +126,63 @@ public void forwardMergeBranchWithExclusions() throws Exception {\n \t\tassertNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY1));\n \t}\n \t\n+\t@Test\n+\tpublic void forwardMergeBranchExcludeChange() throws Exception {\n+\t\tindexRevision(MAIN, NEW_DATA);\n+\t\tindexRevision(MAIN, NEW_DATA2);\n+\t\tString child = createBranch(MAIN, \"a\");\n+\t\t// change a revision on the child branch\n+\t\tindexChange(child, NEW_DATA, CHANGED_DATA);\n+\t\t// after commit child branch becomes FORWARD\n+\t\tassertState(child, MAIN, BranchState.FORWARD);\n+\t\t// do the merge with an exclusion\n+\t\tbranching()\n+\t\t\t.prepareMerge(child, MAIN)\n+\t\t\t.exclude(STORAGE_KEY1)\n+\t\t\t.squash(true)\n+\t\t\t.merge();\n+\t\t\n+\t\t// after fast-forward merge\n+\t\t// 1. MAIN falls behind compared to the child\n+\t\tassertState(MAIN, child, BranchState.FORWARD);\n+\t\t\n+\t\t// 2. Child should be UP_TO_DATE state compared to the MAIN\n+\t\tassertState(child, MAIN, BranchState.BEHIND);\n+\t\t\n+\t\t// 3. one revision should be visible from MAIN branch, excluded one should not\n+\t\tassertNotNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY2));\n+\t\tassertNotNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY1));", "originalCommit": "738668ae477d4be51f53b348bbb85bc5e37effdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6595819a62edebdfad99a4e350249a3bdd7a3215", "chunk": "diff --git a/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java b/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\nindex 709492bec1..51b74d53f9 100644\n--- a/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\n+++ b/commons/com.b2international.index.tests/src/com/b2international/index/revision/RevisionBranchMergeTest.java\n\n@@ -151,7 +151,6 @@ public class RevisionBranchMergeTest extends BaseRevisionIndexTest {\n \t\t\n \t\t// 3. one revision should be visible from MAIN branch, excluded one should not\n \t\tassertNotNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY2));\n-\t\tassertNotNull(getRevision(MAIN, RevisionData.class, STORAGE_KEY1));\n \t\tassertEquals(getRevision(MAIN, RevisionData.class, STORAGE_KEY1), NEW_DATA);\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NTA0OQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r438245049", "bodyText": "Use ImmutableSet.copyOf(E[] elements).", "author": "cmark", "createdAt": "2020-06-10T16:11:31Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java", "diffHunk": "@@ -69,12 +71,12 @@ public Commit merge() {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation exclude(String id) {\n-\t\treturn exclude(Collections.singleton(id));\n+\tpublic BranchMergeOperation exclude(String ... ids) {\n+\t\treturn exclude(Arrays.copyOf(ids, ids.length));", "originalCommit": "738668ae477d4be51f53b348bbb85bc5e37effdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3369261c2de86e955e10df559827909addd5ba0b", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\nindex 7594a2f37c..8cfd757dcf 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n\n@@ -72,11 +71,11 @@ public final class BranchMergeOperation {\n \t}\n \n \tpublic BranchMergeOperation exclude(String ... ids) {\n-\t\treturn exclude(Arrays.copyOf(ids, ids.length));\n+\t\treturn exclude(ImmutableSet.copyOf(ids));\n \t}\n \t\n \tpublic BranchMergeOperation exclude(Iterable<String> ids) {\n-\t\tthis.exclusions = Sets.newHashSet(ids);\n+\t\tthis.exclusions = ImmutableSet.copyOf(ids);\n \t\treturn this;\n \t}\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NTk1OA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/575#discussion_r438245958", "bodyText": "Same here, use ImmutableSet.copyOf(E[] elements). This way you prevent copying the array twice when you use the vararg method.", "author": "cmark", "createdAt": "2020-06-10T16:12:27Z", "path": "commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java", "diffHunk": "@@ -69,12 +71,12 @@ public Commit merge() {\n \t\treturn branching.doMerge(this);\n \t}\n \n-\tpublic BranchMergeOperation exclude(String id) {\n-\t\treturn exclude(Collections.singleton(id));\n+\tpublic BranchMergeOperation exclude(String ... ids) {\n+\t\treturn exclude(Arrays.copyOf(ids, ids.length));\n \t}\n \t\n-\tpublic BranchMergeOperation exclude(Set<String> ids) {\n-\t\tthis.exclusions = ids;\n+\tpublic BranchMergeOperation exclude(Iterable<String> ids) {\n+\t\tthis.exclusions = Sets.newHashSet(ids);", "originalCommit": "738668ae477d4be51f53b348bbb85bc5e37effdd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3369261c2de86e955e10df559827909addd5ba0b", "chunk": "diff --git a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\nindex 7594a2f37c..8cfd757dcf 100644\n--- a/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n+++ b/commons/com.b2international.index/src/com/b2international/index/revision/BranchMergeOperation.java\n\n@@ -72,11 +71,11 @@ public final class BranchMergeOperation {\n \t}\n \n \tpublic BranchMergeOperation exclude(String ... ids) {\n-\t\treturn exclude(Arrays.copyOf(ids, ids.length));\n+\t\treturn exclude(ImmutableSet.copyOf(ids));\n \t}\n \t\n \tpublic BranchMergeOperation exclude(Iterable<String> ids) {\n-\t\tthis.exclusions = Sets.newHashSet(ids);\n+\t\tthis.exclusions = ImmutableSet.copyOf(ids);\n \t\treturn this;\n \t}\n \t\n"}}, {"oid": "6595819a62edebdfad99a4e350249a3bdd7a3215", "url": "https://github.com/b2ihealthcare/snow-owl/commit/6595819a62edebdfad99a4e350249a3bdd7a3215", "message": "SO-4028: Remove unnecessary check", "committedDate": "2020-06-10T17:42:34Z", "type": "commit"}, {"oid": "3369261c2de86e955e10df559827909addd5ba0b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/3369261c2de86e955e10df559827909addd5ba0b", "message": "SO-4028: Use ImmutableSet in defensive copy", "committedDate": "2020-06-10T17:48:37Z", "type": "commit"}]}