{"pr_number": 708, "pr_title": "SO-4285 Validate request changes", "pr_createdAt": "2020-11-06T13:02:43Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/708", "timeline": [{"oid": "f83ff2606bbebe810a9cf2e6af333d2e1a48194f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/f83ff2606bbebe810a9cf2e6af333d2e1a48194f", "message": "SO-4285: Add componentURI to validation issues during validate requests", "committedDate": "2020-11-06T13:00:47Z", "type": "commit"}, {"oid": "4b5eea9882f1b0d0b2250c5f5b3fa07661d97d8d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/4b5eea9882f1b0d0b2250c5f5b3fa07661d97d8d", "message": "SO-4285: Add new validation configuration constants", "committedDate": "2020-11-06T13:01:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4OTcwNg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r520089706", "bodyText": "Why do you need both?", "author": "cmark", "createdAt": "2020-11-09T20:09:43Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/internal/validation/ValidationConfiguration.java", "diffHunk": "@@ -29,6 +29,8 @@\n \tpublic static final String IS_UNPUBLISHED_ONLY = \"isUnpublishedOnly\";\n \tpublic static final String USE_FSN = \"useFsn\";\n \tpublic static final String LOCALES = \"extendedLocales\";\n+\tpublic static final String CODE_SYSTEMS = \"codeSystems\";\n+\tpublic static final String CODE_SYSTEM = \"codeSystem\";", "originalCommit": "4b5eea9882f1b0d0b2250c5f5b3fa07661d97d8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "122ded67cd55f5bf1783c5d565a1d012d8d79a23", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/internal/validation/ValidationConfiguration.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/internal/validation/ValidationConfiguration.java\nindex 5c3af16100..f3252bdb3c 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/internal/validation/ValidationConfiguration.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/internal/validation/ValidationConfiguration.java\n\n@@ -29,8 +29,6 @@ public class ValidationConfiguration {\n \tpublic static final String IS_UNPUBLISHED_ONLY = \"isUnpublishedOnly\";\n \tpublic static final String USE_FSN = \"useFsn\";\n \tpublic static final String LOCALES = \"extendedLocales\";\n-\tpublic static final String CODE_SYSTEMS = \"codeSystems\";\n-\tpublic static final String CODE_SYSTEM = \"codeSystem\";\n \tprivate static final int DEFAULT_MAX_CONCURRENT_EXPENSIVE_JOBS = 1;\n \tprivate static final int DEFAULT_MAX_CONCURRENT_NORMAL_JOBS = 4;\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MDUzNw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r520090537", "bodyText": "Let's have a factory method on ComponentURI that receives a ComponentIdentifier, so it's easier to convert one from the other. Add it to the other PR #707", "author": "cmark", "createdAt": "2020-11-09T20:11:09Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/ValidateRequest.java", "diffHunk": "@@ -159,34 +155,29 @@ private ValidationResult doValidate(BranchContext context, Writer index) throws\n \t\t\t\t\t\tfinal Collection<ComponentIdentifier> ruleWhiteListEntries = whiteListedEntries.removeAll(ruleId);\n \t\t\t\t\t\tfinal String toolingId = rules.stream().filter(rule -> ruleId.equals(rule.getId())).findFirst().get().getToolingId();\n \t\t\t\t\t\tfor (ValidationIssueDetails issueDetails : ruleIssues.issueDetails) {\n+\t\t\t\t\t\t\tfinal ValidationIssue validationIssue;\n \t\t\t\t\t\t\tComponentIdentifier componentIdentifier = issueDetails.affectedComponentId;\n \t\t\t\t\t\t\t\n \t\t\t\t\t\t\tif (!existingIsssuesByComponentIdentifier.containsKey(componentIdentifier)) {\n-\t\t\t\t\t\t\t\tfinal ValidationIssue validationIssue = new ValidationIssue(\n+\t\t\t\t\t\t\t\tvalidationIssue = new ValidationIssue(\n \t\t\t\t\t\t\t\t\t\tUUID.randomUUID().toString(),\n \t\t\t\t\t\t\t\t\t\truleId,\n-\t\t\t\t\t\t\t\t\t\tbranchPath,\n-\t\t\t\t\t\t\t\t\t\tcomponentIdentifier,\n+\t\t\t\t\t\t\t\t\t\tComponentURI.of(codeSystemURI, componentIdentifier.getTerminologyComponentId(), componentIdentifier.getComponentId()),", "originalCommit": "4b5eea9882f1b0d0b2250c5f5b3fa07661d97d8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "20ba6981154e837cb5be6d3a72c9ab4509c0aa6b", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/ValidateRequest.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/ValidateRequest.java\nindex 8d6f060dec..ef88ccaf71 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/ValidateRequest.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/ValidateRequest.java\n\n@@ -155,29 +159,34 @@ final class ValidateRequest implements Request<BranchContext, ValidationResult>,\n \t\t\t\t\t\tfinal Collection<ComponentIdentifier> ruleWhiteListEntries = whiteListedEntries.removeAll(ruleId);\n \t\t\t\t\t\tfinal String toolingId = rules.stream().filter(rule -> ruleId.equals(rule.getId())).findFirst().get().getToolingId();\n \t\t\t\t\t\tfor (ValidationIssueDetails issueDetails : ruleIssues.issueDetails) {\n-\t\t\t\t\t\t\tfinal ValidationIssue validationIssue;\n \t\t\t\t\t\t\tComponentIdentifier componentIdentifier = issueDetails.affectedComponentId;\n \t\t\t\t\t\t\t\n \t\t\t\t\t\t\tif (!existingIsssuesByComponentIdentifier.containsKey(componentIdentifier)) {\n-\t\t\t\t\t\t\t\tvalidationIssue = new ValidationIssue(\n+\t\t\t\t\t\t\t\tfinal ValidationIssue validationIssue = new ValidationIssue(\n \t\t\t\t\t\t\t\t\t\tUUID.randomUUID().toString(),\n \t\t\t\t\t\t\t\t\t\truleId,\n-\t\t\t\t\t\t\t\t\t\tComponentURI.of(codeSystemURI, componentIdentifier.getTerminologyComponentId(), componentIdentifier.getComponentId()),\n+\t\t\t\t\t\t\t\t\t\tbranchPath,\n+\t\t\t\t\t\t\t\t\t\tcomponentIdentifier,\n \t\t\t\t\t\t\t\t\t\truleWhiteListEntries.contains(componentIdentifier));\n+\t\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t\tvalidationIssue.setDetails(ValidationIssueDetails.HIGHLIGHT_DETAILS, issueDetails.stylingDetails);\n+\t\t\t\t\t\t\t\tissuesToExtendWithDetailsByToolingId.put(toolingId, validationIssue);\n+\t\t\t\t\t\t\t\tpersistedIssues++; \n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\tfinal ValidationIssue issueToCopy = existingIsssuesByComponentIdentifier.get(componentIdentifier);\n-\t\t\t\t\t\t\t\tvalidationIssue = new ValidationIssue(\n+\t\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t\tfinal ValidationIssue validationIssue = new ValidationIssue(\n \t\t\t\t\t\t\t\t\tissueToCopy.getId(),\n \t\t\t\t\t\t\t\t\tissueToCopy.getRuleId(),\n-\t\t\t\t\t\t\t\t\tComponentURI.of(codeSystemURI, \n-\t\t\t\t\t\t\t\t\t\t\tissueToCopy.getAffectedComponent().getTerminologyComponentId(),\n-\t\t\t\t\t\t\t\t\t\t\tissueToCopy.getAffectedComponent().getComponentId()),\n-\t\t\t\t\t\t\t\t\truleWhiteListEntries.contains(issueToCopy.getAffectedComponent()));\t\n+\t\t\t\t\t\t\t\t\tissueToCopy.getBranchPath(),\n+\t\t\t\t\t\t\t\t\tissueToCopy.getAffectedComponent(),\n+\t\t\t\t\t\t\t\t\truleWhiteListEntries.contains(issueToCopy.getAffectedComponent()));\n+\t\t\t\t\t\t\t\t\n+\t\t\t\t\t\t\t\tvalidationIssue.setDetails(ValidationIssueDetails.HIGHLIGHT_DETAILS, issueDetails.stylingDetails);\n+\t\t\t\t\t\t\t\tissuesToExtendWithDetailsByToolingId.put(toolingId, validationIssue);\n+\t\t\t\t\t\t\t\tpersistedIssues++; \n \t\t\t\t\t\t\t\texistingIsssuesByComponentIdentifier.remove(componentIdentifier);\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tvalidationIssue.setDetails(ValidationIssueDetails.HIGHLIGHT_DETAILS, issueDetails.stylingDetails);\n-\t\t\t\t\t\t\tissuesToExtendWithDetailsByToolingId.put(toolingId, validationIssue);\n-\t\t\t\t\t\t\tpersistedIssues++; \n \t\t\t\t\t\t}\n \t\t\t\t\t\t\n \t\t\t\t\t\texistingRuleIssues\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA5MTY5Mw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r520091693", "bodyText": "This should be added to the core tests, it should not part of the SNOMED CT Validation Rule module.", "author": "cmark", "createdAt": "2020-11-09T20:13:11Z", "path": "snomed/com.b2international.snowowl.validation.snomed/src/test/java/com/b2international/snowowl/validation/snomed/GenericValidationRuleTest.java", "diffHunk": "@@ -59,6 +60,24 @@\n @RunWith(Parameterized.class)\n public class GenericValidationRuleTest extends BaseGenericValidationRuleTest {\n \t\n+\t@Test\n+\tpublic void codeSystemURITest() throws Exception {", "originalCommit": "4b5eea9882f1b0d0b2250c5f5b3fa07661d97d8d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "20ba6981154e837cb5be6d3a72c9ab4509c0aa6b", "chunk": "diff --git a/snomed/com.b2international.snowowl.validation.snomed/src/test/java/com/b2international/snowowl/validation/snomed/GenericValidationRuleTest.java b/snomed/com.b2international.snowowl.validation.snomed/src/test/java/com/b2international/snowowl/validation/snomed/GenericValidationRuleTest.java\nindex 37cb1a48f9..5f3cdda61c 100644\n--- a/snomed/com.b2international.snowowl.validation.snomed/src/test/java/com/b2international/snowowl/validation/snomed/GenericValidationRuleTest.java\n+++ b/snomed/com.b2international.snowowl.validation.snomed/src/test/java/com/b2international/snowowl/validation/snomed/GenericValidationRuleTest.java\n\n@@ -60,24 +59,6 @@ import com.google.common.collect.Lists;\n @RunWith(Parameterized.class)\n public class GenericValidationRuleTest extends BaseGenericValidationRuleTest {\n \t\n-\t@Test\n-\tpublic void codeSystemURITest() throws Exception {\n-\t\tfinal String ruleId = \"45a\";\n-\t\tindexRule(ruleId);\n-\n-\t\t// index invalid hierarchical relationship to group 1\n-\t\tfinal SnomedRelationshipIndexEntry relationship = relationship(Concepts.FINDING_SITE, Concepts.IS_A, Concepts.MODULE_SCT_MODEL_COMPONENT)\n-\t\t\t\t.group(1)\n-\t\t\t\t.build();\n-\t\t\n-\t\tindexRevision(MAIN, relationship);\n-\n-\t\tValidationIssues issues = validate(ruleId);\n-\t\tComponentURI componentURI = issues.stream().map(issue -> issue.getComponentURI()).findFirst().get();\n-\t\tassertThat(componentURI.equals(ComponentURI.of(CODESYSTEM, SnomedTerminologyComponentConstants.RELATIONSHIP_NUMBER, relationship.getId())));\n-\t}\n-\n-\t\n \t@Test\n \tpublic void rule34() throws Exception {\n \t\t// Relationships must be unique within a relationship group\n"}}, {"oid": "122ded67cd55f5bf1783c5d565a1d012d8d79a23", "url": "https://github.com/b2ihealthcare/snow-owl/commit/122ded67cd55f5bf1783c5d565a1d012d8d79a23", "message": "SO-4285: Remove no longer needed validation configuration constants", "committedDate": "2020-11-13T09:26:27Z", "type": "commit"}, {"oid": "20ba6981154e837cb5be6d3a72c9ab4509c0aa6b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/20ba6981154e837cb5be6d3a72c9ab4509c0aa6b", "message": "SO-4285: Rename constructor parameter to indicate it accepts a URI", "committedDate": "2020-11-13T09:58:02Z", "type": "commit"}, {"oid": "033ccf30fe1d17324bcd33ed3f8346b2d6fb8c11", "url": "https://github.com/b2ihealthcare/snow-owl/commit/033ccf30fe1d17324bcd33ed3f8346b2d6fb8c11", "message": "SO-4285: Add further componentURI parse tests", "committedDate": "2020-11-13T10:15:39Z", "type": "commit"}, {"oid": "1f049feb5e56d2d9edd241f92321e1fd0bc8699d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/1f049feb5e56d2d9edd241f92321e1fd0bc8699d", "message": "SO-4285: Add id argument check, id argument test", "committedDate": "2020-11-13T10:56:25Z", "type": "commit"}, {"oid": "d5130a425b686b4b6d1064e9af2d274f6f003591", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d5130a425b686b4b6d1064e9af2d274f6f003591", "message": "SO-4285: Add ComponentURI factory method that accepts ...\n\n... ComponentIdentifiers", "committedDate": "2020-11-13T12:49:34Z", "type": "commit"}, {"oid": "9e3debccd0452391febf4302df92f7ee640832f5", "url": "https://github.com/b2ihealthcare/snow-owl/commit/9e3debccd0452391febf4302df92f7ee640832f5", "message": "Merge branch 'issue/SO-4285-component_uri_constructor_changes' into issue/SO-4285-validate_request_changes", "committedDate": "2020-11-13T12:50:41Z", "type": "commit"}, {"oid": "ce6a6f70d78388206741dfaa0b2ba9e1672c31fe", "url": "https://github.com/b2ihealthcare/snow-owl/commit/ce6a6f70d78388206741dfaa0b2ba9e1672c31fe", "message": "SO-4285: Use new ComponentURI constructor", "committedDate": "2020-11-13T12:59:22Z", "type": "commit"}, {"oid": "6cccbacd3e9df1271a86c8dac338629731e11a53", "url": "https://github.com/b2ihealthcare/snow-owl/commit/6cccbacd3e9df1271a86c8dac338629731e11a53", "message": "SO-4285: Commit progress on switching from branchPath to CodeSystemURI", "committedDate": "2020-11-13T17:19:11Z", "type": "commit"}, {"oid": "19cbba04cc75828bc7eeabbdb840001465ce1035", "url": "https://github.com/b2ihealthcare/snow-owl/commit/19cbba04cc75828bc7eeabbdb840001465ce1035", "message": "SO-4285: Use CodeSystemURIs in handling issue delete requests", "committedDate": "2020-11-16T00:04:26Z", "type": "commit"}, {"oid": "9bb1116d139ba7789eb294d72c817e07cf0fb4ca", "url": "https://github.com/b2ihealthcare/snow-owl/commit/9bb1116d139ba7789eb294d72c817e07cf0fb4ca", "message": "SO-4285: Base unique validation job id creation on code system URIs", "committedDate": "2020-11-16T11:02:25Z", "type": "commit"}, {"oid": "588abbacf289e839b021e64c4ba24abc1ee53354", "url": "https://github.com/b2ihealthcare/snow-owl/commit/588abbacf289e839b021e64c4ba24abc1ee53354", "message": "SO-4285: Update validations REST API to use CodeSystemURIs", "committedDate": "2020-11-16T11:03:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEyNTg1MQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r525125851", "bodyText": "No need to wrap into CodeSystemURI here.", "author": "cmark", "createdAt": "2020-11-17T12:44:46Z", "path": "core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/RepositoryValidationRestService.java", "diffHunk": "@@ -109,16 +110,16 @@ public RepositoryValidationRestService(String repositoryId) {\n \t\t\t@RequestBody \n \t\t\tfinal ValidationRestInput validationInput) {\n \n-\t\tfinal String uniqueJobId = ValidationRequests.createUniqueValidationJobKey(repositoryId, validationInput.getBranchPath());\n+\t\tfinal String uniqueJobId = ValidationRequests.createUniqueValidationJobKey(validationInput.getCodeSystemURI());\n \t\t\n \t\tfinal String jobId = ValidationRequests\n \t\t\t\t.prepareValidate()\n \t\t\t\t.setRuleParameters(ImmutableMap.of(\n \t\t\t\t\tValidationConfiguration.IS_UNPUBLISHED_ONLY, validationInput.isUnpublishedOnly()\n \t\t\t\t))\n \t\t\t\t.setRuleIds(validationInput.getRuleIds())\n-\t\t\t\t.build(repositoryId, validationInput.getBranchPath())\n-\t\t\t\t.runAsJobWithRestart(uniqueJobId, String.format(\"Validating branch '%s'\", validationInput.getBranchPath()))\n+\t\t\t\t.build(new CodeSystemURI(validationInput.getCodeSystemURI()))", "originalCommit": "588abbacf289e839b021e64c4ba24abc1ee53354", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffb3cf210a94ba52ac025a68d63737916d3aebeb", "chunk": "diff --git a/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/RepositoryValidationRestService.java b/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/RepositoryValidationRestService.java\nindex 80a21b7d08..e088384095 100644\n--- a/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/RepositoryValidationRestService.java\n+++ b/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/RepositoryValidationRestService.java\n\n@@ -110,7 +110,7 @@ public abstract class RepositoryValidationRestService extends AbstractRestServic\n \t\t\t@RequestBody \n \t\t\tfinal ValidationRestInput validationInput) {\n \n-\t\tfinal String uniqueJobId = ValidationRequests.createUniqueValidationJobKey(validationInput.getCodeSystemURI());\n+\t\tfinal String uniqueJobId = ValidationRequests.createUniqueValidationJobKey(validationInput.getPath());\n \t\t\n \t\tfinal String jobId = ValidationRequests\n \t\t\t\t.prepareValidate()\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEyNzM1MA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r525127350", "bodyText": "This changes the API in a non-backward compatible manner, please keep the branchPath argument and make it deprecated.\nIntroduce a new resource argument instead of the codeSystemURI and mark it as a replacement of the branchPath.\nRead order should be, resource first, if that is empty then fall back to branchPath.", "author": "cmark", "createdAt": "2020-11-17T12:47:28Z", "path": "core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/ValidationRestInput.java", "diffHunk": "@@ -25,19 +25,19 @@\n public class ValidationRestInput {\n \n \t@NotEmpty\n-\tprivate String branchPath;\n+\tprivate String codeSystemURI;", "originalCommit": "588abbacf289e839b021e64c4ba24abc1ee53354", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ffb3cf210a94ba52ac025a68d63737916d3aebeb", "chunk": "diff --git a/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/ValidationRestInput.java b/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/ValidationRestInput.java\nindex c3d82816a0..504c390b80 100644\n--- a/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/ValidationRestInput.java\n+++ b/core/com.b2international.snowowl.core.rest/src/com/b2international/snowowl/core/rest/validation/ValidationRestInput.java\n\n@@ -25,19 +25,24 @@ import org.hibernate.validator.constraints.NotEmpty;\n public class ValidationRestInput {\n \n \t@NotEmpty\n-\tprivate String codeSystemURI;\n+\tprivate String path;\n \t\n \t@NotEmpty\n \tprivate Set<String> ruleIds;\n \t\n \tprivate boolean unpublishedOnly = true;\n \t\n-\tpublic String getCodeSystemURI() {\n-\t\treturn codeSystemURI;\n+\tpublic String getPath() {\n+\t\treturn path;\n \t}\n \t\n-\tpublic void setCodeSystemURI(String codeSystemURI) {\n-\t\tthis.codeSystemURI = codeSystemURI;\n+\tpublic void setPath(String path) {\n+\t\tthis.path = path;\n+\t}\n+\t\n+\t@Deprecated\n+\tpublic void setBranchPath(String path) {\n+\t\tthis.path = path;\n \t}\n \t\n \tpublic Set<String> getRuleIds() {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwOTUwNA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/708#discussion_r525309504", "bodyText": "Swap left and right of the equals check.", "author": "cmark", "createdAt": "2020-11-17T16:39:17Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java", "diffHunk": "@@ -104,18 +104,29 @@ public final ComponentIdentifier toComponentIdentifier() {\n \t\treturn ComponentIdentifier.of(terminologyComponentId(), identifier());\n \t}\n \n-\tprivate ComponentURI(CodeSystemURI codeSystem, short terminologyComponentId, String identifier) {\n-\t\tcheckNotNull(codeSystem, \"Codesystem argument should not be null.\");\n+\tprivate ComponentURI(CodeSystemURI codeSystemURI, short terminologyComponentId, String identifier) {\n+\t\tcheckNotNull(codeSystemURI, \"Codesystem argument should not be null.\");\n \t\tcheckArgument(terminologyComponentId >= TerminologyRegistry.UNSPECIFIED_NUMBER_SHORT,\n \t\t\t\t\"Terminology component id should be either unspecified (-1) or greater than zero. Got: '%s'.\", terminologyComponentId);\n-\t\tthis.codeSystemUri = codeSystem;\n+\t\tboolean isUnspecified = codeSystemURI.getCodeSystem().equals(TerminologyRegistry.UNSPECIFIED) ", "originalCommit": "588abbacf289e839b021e64c4ba24abc1ee53354", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "64433ea7e92278ce7d268a0c2b9687e261e10d3d", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java\nindex 98cb72584f..4999fd0b1f 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java\n\n@@ -105,28 +104,25 @@ public final class ComponentURI implements Serializable {\n \t}\n \n \tprivate ComponentURI(CodeSystemURI codeSystemURI, short terminologyComponentId, String identifier) {\n-\t\tcheckNotNull(codeSystemURI, \"Codesystem argument should not be null.\");\n-\t\tcheckArgument(terminologyComponentId >= TerminologyRegistry.UNSPECIFIED_NUMBER_SHORT,\n-\t\t\t\t\"Terminology component id should be either unspecified (-1) or greater than zero. Got: '%s'.\", terminologyComponentId);\n-\t\tboolean isUnspecified = codeSystemURI.getCodeSystem().equals(TerminologyRegistry.UNSPECIFIED) \n-\t\t\t\t|| TerminologyRegistry.UNSPECIFIED_NUMBER_SHORT == terminologyComponentId;\n-\t\tcheckArgument(isUnspecified || !Strings.isNullOrEmpty(identifier), \"Identifier should not be null or empty.\");\n+\t\tcheckNotNull(codeSystemURI, \"CodeSystemURI argument should not be null.\");\n+\t\tcheckArgument(terminologyComponentId >= TerminologyRegistry.UNSPECIFIED_NUMBER_SHORT, \n+\t\t\t\t\"TerminologyComponentId should be either unspecified (-1) or greater than zero. Got: '%s'.\", terminologyComponentId);\n+\t\tcheckArgument(TerminologyRegistry.UNSPECIFIED.equals(codeSystemURI.getCodeSystem()) || !Strings.isNullOrEmpty(identifier), \"Identifier should not be null or empty.\");\n \t\tthis.codeSystemUri = codeSystemURI;\n \t\tthis.terminologyComponentId = terminologyComponentId;\n-\t\tthis.identifier = identifier;\n+\t\tthis.identifier = Strings.nullToEmpty(identifier);\n \t}\n \t\n-\tpublic static ComponentURI of(CodeSystemURI codeSystemURI, ComponentIdentifier componentIdentifier) {\n-\t\treturn new ComponentURI(codeSystemURI, componentIdentifier.getTerminologyComponentId(), componentIdentifier.getComponentId());\n+\tpublic static ComponentURI of(CodeSystemURI codeSystemURI, short terminologyComponentId, String identifier) {\n+\t\treturn getOrCache(new ComponentURI(codeSystemURI, terminologyComponentId, identifier));\n \t}\n \t\n-\tpublic static ComponentURI of(CodeSystemURI codeSystemURI, short terminologyComponentId, String identifier) {\n-\t\treturn new ComponentURI(codeSystemURI, terminologyComponentId, Strings.nullToEmpty(identifier));\n+\tpublic static ComponentURI of(CodeSystemURI codeSystemURI, ComponentIdentifier componentIdentifier) {\n+\t\treturn of(codeSystemURI, componentIdentifier.getTerminologyComponentId(), componentIdentifier.getComponentId());\n \t}\n \t\n-\t@JsonCreator\n \tpublic static ComponentURI of(String codeSystemUri, short terminologyComponentId, String identifier) {\n-\t\treturn getOrCache(new ComponentURI(new CodeSystemURI(codeSystemUri), terminologyComponentId, Strings.nullToEmpty(identifier)));\n+\t\treturn of(new CodeSystemURI(codeSystemUri), terminologyComponentId, identifier);\n \t}\n \t\n \tprivate static ComponentURI getOrCache(final ComponentURI componentURI) {\n"}}, {"oid": "64433ea7e92278ce7d268a0c2b9687e261e10d3d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/64433ea7e92278ce7d268a0c2b9687e261e10d3d", "message": "Merge branch '7.x' into issue/SO-4285-validate_request_changes\n\nConflicts:\n\tcore/com.b2international.snowowl.core.tests/src/com/b2international/snowowl/core/uri/ComponentURITest.java\n\tcore/com.b2international.snowowl.core/src/com/b2international/snowowl/core/uri/ComponentURI.java", "committedDate": "2020-11-18T15:12:57Z", "type": "commit"}, {"oid": "ffb3cf210a94ba52ac025a68d63737916d3aebeb", "url": "https://github.com/b2ihealthcare/snow-owl/commit/ffb3cf210a94ba52ac025a68d63737916d3aebeb", "message": "SO-4285: make validation REST API backward compatible", "committedDate": "2020-11-18T15:50:41Z", "type": "commit"}, {"oid": "446bb13395fad86a4892285252349f8166c81e33", "url": "https://github.com/b2ihealthcare/snow-owl/commit/446bb13395fad86a4892285252349f8166c81e33", "message": "SO-4285: rename codeSystemURI to resourceURI", "committedDate": "2020-11-18T17:25:30Z", "type": "commit"}, {"oid": "b02fb2553c24651d00d76868a5db47e0c2542270", "url": "https://github.com/b2ihealthcare/snow-owl/commit/b02fb2553c24651d00d76868a5db47e0c2542270", "message": "SO-4285: fix failed SnomedQueryValidationRuleEvaluatorTest", "committedDate": "2020-11-18T18:22:51Z", "type": "commit"}, {"oid": "92478e7be4342ed0bfa63878c586117de82b540f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/92478e7be4342ed0bfa63878c586117de82b540f", "message": "SO-4285: fix backward compatibility issues in ValidationIssue\n\nRename componentURI to affectedComponentURI.\nFix a few naming issues.\nReduce old ctor visibility.", "committedDate": "2020-11-18T18:46:00Z", "type": "commit"}]}