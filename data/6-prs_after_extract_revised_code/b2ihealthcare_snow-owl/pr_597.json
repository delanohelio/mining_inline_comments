{"pr_number": 597, "pr_title": "Release v7.7.0 fixes/changes", "pr_createdAt": "2020-06-26T07:33:26Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/597", "timeline": [{"oid": "d7a8e766a15ae25316fdf8410a1322b118d95ee8", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d7a8e766a15ae25316fdf8410a1322b118d95ee8", "message": "[vs] support query evaluation in non SNOMED terminologies", "committedDate": "2020-06-24T09:04:58Z", "type": "commit"}, {"oid": "23889a7aad4a301f8360d8ec6bba0a7895962077", "url": "https://github.com/b2ihealthcare/snow-owl/commit/23889a7aad4a301f8360d8ec6bba0a7895962077", "message": "[vs] fix getIds()", "committedDate": "2020-06-24T09:33:31Z", "type": "commit"}, {"oid": "5885667e100330d480495b3092ada7da1e1ecb2b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/5885667e100330d480495b3092ada7da1e1ecb2b", "message": "[owl authoring] check if there is at least one axiom or relationship", "committedDate": "2020-06-24T14:31:40Z", "type": "commit"}, {"oid": "76e491e89049d7547131e9e3fed9f5cb9dd22ca3", "url": "https://github.com/b2ihealthcare/snow-owl/commit/76e491e89049d7547131e9e3fed9f5cb9dd22ca3", "message": "[core] Add helper method to retrieve authorized system bus", "committedDate": "2020-06-25T09:33:58Z", "type": "commit"}, {"oid": "322e4fa23c02ac8b043707f40a6c4305835e13bf", "url": "https://github.com/b2ihealthcare/snow-owl/commit/322e4fa23c02ac8b043707f40a6c4305835e13bf", "message": "[validation] connect filtering with toolingId", "committedDate": "2020-06-25T12:49:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMTgzOA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446021838", "bodyText": "Isn't there a need here to check array length? I'm also not sure whether it is guaranteed that the query string does have at least one whitespace or not?", "author": "nagyo", "createdAt": "2020-06-26T07:44:16Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java", "diffHunk": "@@ -113,4 +116,17 @@ public Concepts evaluate(CodeSystemURI uri, BranchContext context, Options searc\n \t\t}\n \t};\n \t\n+\t/**\n+\t * Support value set clause evaluation\n+\t * @since 7.7\n+\t */\n+\tpublic static Collection<String> getIds(Collection<String> querys) {\n+\t\tCollection<String> ids = Lists.newArrayList();\n+\t\tquerys.forEach(query -> {\n+\t\t\tString[] id = query.replaceAll(\"\\\\|\", \"\").split(\" \", 2);\n+\t\t\tids.add(id[0]);", "originalCommit": "322e4fa23c02ac8b043707f40a6c4305835e13bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzY2Mg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446037662", "bodyText": "Fixed.", "author": "cmark", "createdAt": "2020-06-26T08:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMTgzOA=="}], "type": "inlineReview", "revised_code": {"commit": "a66ac47419e98495e09b74c906bc1c5d3b09328c", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java\nindex e25e11edf5..46c22132a7 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestEvaluator.java\n\n@@ -103,30 +106,32 @@ public interface ConceptSearchRequestEvaluator {\n \t\tresult.setTerm(term);\n \t\treturn result;\n \t}\n-\t\n+\n \t/**\n \t * No-op request evaluator that returns zero results\n+\t * \n \t * @since 7.5\n \t */\n \tConceptSearchRequestEvaluator NOOP = new ConceptSearchRequestEvaluator() {\n-\t\t\n+\n \t\t@Override\n \t\tpublic Concepts evaluate(CodeSystemURI uri, BranchContext context, Options search) {\n \t\t\treturn new Concepts(search.get(OptionKey.LIMIT, Integer.class), 0);\n \t\t}\n+\n \t};\n-\t\n+\n \t/**\n-\t * Support value set clause evaluation\n+\t * Extract IDs from ID|TERM| like query strings. If the query does not have a PIPE character in it, then treat the entire query as an ID.\n+\t * \n \t * @since 7.7\n+\t * @return a collection of extracted IDs\n \t */\n-\tpublic static Collection<String> getIds(Collection<String> querys) {\n-\t\tCollection<String> ids = Lists.newArrayList();\n-\t\tquerys.forEach(query -> {\n-\t\t\tString[] id = query.replaceAll(\"\\\\|\", \"\").split(\" \", 2);\n-\t\t\tids.add(id[0]);\n-\t\t});\n-\t\treturn ids;\n+\tdefault Collection<String> extractIds(Collection<String> queries) {\n+\t\treturn queries.stream().map(query -> {\n+\t\t\tfinal int pipeIdx = query.indexOf(\"|\");\n+\t\t\treturn query.substring(0, pipeIdx == -1 ? query.length() : pipeIdx).trim();\n+\t\t}).collect(Collectors.toList());\n \t}\n-\t\n+\n }\n"}}, {"oid": "a66ac47419e98495e09b74c906bc1c5d3b09328c", "url": "https://github.com/b2ihealthcare/snow-owl/commit/a66ac47419e98495e09b74c906bc1c5d3b09328c", "message": "[core] support extracting ids from ID|TERM| like query strings", "committedDate": "2020-06-26T08:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNjQ3OQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446036479", "bodyText": "This will throw UnsupportedOperationException if no extension has been registered for a tooling ID.", "author": "apeteri", "createdAt": "2020-06-26T08:14:55Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);", "originalCommit": "322e4fa23c02ac8b043707f40a6c4305835e13bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MzU2NQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446043565", "bodyText": "Fixed.", "author": "cmark", "createdAt": "2020-06-26T08:28:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNjQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "01a3de1cf8df01ba0ff87c6b13f28753b98b4726", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\nindex af110397ac..ff5b315c0e 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\n\n@@ -176,11 +176,20 @@ final class ValidationIssueSearchRequest\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n \t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfinal Options options = getOptions(OptionKey.DETAILS);\n \t\t\tfor (String toolingId : toolingIds) {\n-\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);\n-\t\t\t\tOptions options = getOptions(OptionKey.DETAILS);\n-\t\t\t\tvalidationDetailExtension.prepareQuery(queryBuilder, options);\n+\t\t\t\tValidationIssueDetailExtensionProvider.INSTANCE.getExtensions()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t.filter(ext -> toolingId.equals(ext.getToolingId()))\n+\t\t\t\t\t\t.findFirst()\n+\t\t\t\t\t\t.ifPresent(extension -> {\n+\t\t\t\t\t\t\tfinal ExpressionBuilder toolingQuery = Expressions.builder(); \n+\t\t\t\t\t\t\textension.prepareQuery(toolingQuery, options);\n+\t\t\t\t\t\t\tqueryBuilder.should(toolingQuery.build());\n+\t\t\t\t\t\t});\n \t\t\t}\n+\t\t\t// at least one should clause should match\n+\t\t\tqueryBuilder.setMinimumNumberShouldMatch(1);\n \t\t}\n \t\t\n \t\treturn queryBuilder.build();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446037250", "bodyText": "If there are multiple toolingId values given, and one adds their own query clauses to the builder, we might end up with a final query that is \"impossible\".", "author": "apeteri", "createdAt": "2020-06-26T08:16:27Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java", "diffHunk": "@@ -175,10 +175,11 @@ protected Expression prepareQuery(ServiceProvider context) {\n \t\t}\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n-\t\t\tfinal Collection<ValidationIssueDetailExtension> validationDetailExtensions = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions();\n-\t\t\tfor (ValidationIssueDetailExtension extension : validationDetailExtensions) {\n+\t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfor (String toolingId : toolingIds) {\n+\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);\n \t\t\t\tOptions options = getOptions(OptionKey.DETAILS);\n-\t\t\t\textension.prepareQuery(queryBuilder, options);\n+\t\t\t\tvalidationDetailExtension.prepareQuery(queryBuilder, options);", "originalCommit": "322e4fa23c02ac8b043707f40a6c4305835e13bf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MzY0OA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/597#discussion_r446043648", "bodyText": "Fixed.", "author": "cmark", "createdAt": "2020-06-26T08:29:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA=="}], "type": "inlineReview", "revised_code": {"commit": "01a3de1cf8df01ba0ff87c6b13f28753b98b4726", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\nindex af110397ac..ff5b315c0e 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/validation/issue/ValidationIssueSearchRequest.java\n\n@@ -176,11 +176,20 @@ final class ValidationIssueSearchRequest\n \t\t\n \t\tif (containsKey(OptionKey.DETAILS)) {\n \t\t\tfinal Collection<String> toolingIds = getCollection(OptionKey.TOOLING_ID, String.class);\n+\t\t\tfinal Options options = getOptions(OptionKey.DETAILS);\n \t\t\tfor (String toolingId : toolingIds) {\n-\t\t\t\tfinal ValidationIssueDetailExtension validationDetailExtension = ValidationIssueDetailExtensionProvider.INSTANCE.getExtensions(toolingId);\n-\t\t\t\tOptions options = getOptions(OptionKey.DETAILS);\n-\t\t\t\tvalidationDetailExtension.prepareQuery(queryBuilder, options);\n+\t\t\t\tValidationIssueDetailExtensionProvider.INSTANCE.getExtensions()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t.filter(ext -> toolingId.equals(ext.getToolingId()))\n+\t\t\t\t\t\t.findFirst()\n+\t\t\t\t\t\t.ifPresent(extension -> {\n+\t\t\t\t\t\t\tfinal ExpressionBuilder toolingQuery = Expressions.builder(); \n+\t\t\t\t\t\t\textension.prepareQuery(toolingQuery, options);\n+\t\t\t\t\t\t\tqueryBuilder.should(toolingQuery.build());\n+\t\t\t\t\t\t});\n \t\t\t}\n+\t\t\t// at least one should clause should match\n+\t\t\tqueryBuilder.setMinimumNumberShouldMatch(1);\n \t\t}\n \t\t\n \t\treturn queryBuilder.build();\n"}}, {"oid": "01a3de1cf8df01ba0ff87c6b13f28753b98b4726", "url": "https://github.com/b2ihealthcare/snow-owl/commit/01a3de1cf8df01ba0ff87c6b13f28753b98b4726", "message": "[core] fix multiple tooling ID filter issues", "committedDate": "2020-06-26T08:29:15Z", "type": "commit"}, {"oid": "253a03eee79bf8a34a3342e7c56d84eecccd663d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/253a03eee79bf8a34a3342e7c56d84eecccd663d", "message": "[validation] use toolingIDs to filter details by corresponding tooling..\n\n...specific queries only", "committedDate": "2020-06-26T09:14:26Z", "type": "commit"}]}