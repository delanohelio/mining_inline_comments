{"pr_number": 727, "pr_title": "SO-4524: Allow searching by CodeType in concept search API", "pr_createdAt": "2020-12-04T15:00:30Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/727", "timeline": [{"oid": "4640f2cb0328617fdbfda1c73e8cbc6e650db0c2", "url": "https://github.com/b2ihealthcare/snow-owl/commit/4640f2cb0328617fdbfda1c73e8cbc6e650db0c2", "message": "SO-4524: add CodeType enum", "committedDate": "2020-12-04T11:24:43Z", "type": "commit"}, {"oid": "53438d62f1aa87e620b6597f9792acf7f0d8bafe", "url": "https://github.com/b2ihealthcare/snow-owl/commit/53438d62f1aa87e620b6597f9792acf7f0d8bafe", "message": "SO-4524: add concept type filtering to generic API", "committedDate": "2020-12-04T11:28:18Z", "type": "commit"}, {"oid": "7ffd4941737e82ddd4de1d2cfb28021e8f883fef", "url": "https://github.com/b2ihealthcare/snow-owl/commit/7ffd4941737e82ddd4de1d2cfb28021e8f883fef", "message": "SO-4524: update CodeType content", "committedDate": "2020-12-04T13:38:43Z", "type": "commit"}, {"oid": "d31c6aa986177338169081a54689bb5a3e9df92f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d31c6aa986177338169081a54689bb5a3e9df92f", "message": "SO-4524: remove chapter and block", "committedDate": "2020-12-04T14:37:52Z", "type": "commit"}, {"oid": "19e749cafa4dc21b1ac1b332ea79f898f556e52e", "url": "https://github.com/b2ihealthcare/snow-owl/commit/19e749cafa4dc21b1ac1b332ea79f898f556e52e", "message": "Revert \"SO-4524: remove chapter and block\"\n\nThis reverts commit d31c6aa986177338169081a54689bb5a3e9df92f.", "committedDate": "2020-12-04T14:39:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyMTY4MQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/727#discussion_r537421681", "bodyText": "Please reduce these literal to two instances: CATEGORY, CODE.", "author": "cmark", "createdAt": "2020-12-07T11:10:32Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/CodeType.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core;\n+\n+/**\n+ * @since 7.13\n+ */\n+public enum CodeType {\n+\n+\tCHAPTER(\"chapter\"),", "originalCommit": "19e749cafa4dc21b1ac1b332ea79f898f556e52e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "161c1cab3f952f7085846fc01665bb4357273d99", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/CodeType.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/CodeType.java\nindex 3fa1ebfb87..f718371ed4 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/CodeType.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/CodeType.java\n\n@@ -20,8 +20,6 @@ package com.b2international.snowowl.core;\n  */\n public enum CodeType {\n \n-\tCHAPTER(\"chapter\"),\n-\tBLOCK(\"block\"),\n \tCATEGORY(\"category\"),\n \tCODE(\"code\");\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyNDg5OA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/727#discussion_r537424898", "bodyText": "Add multi-valued filterByType method and also two more with the CodeType and Iterable<CodeType> as parameter.", "author": "cmark", "createdAt": "2020-12-07T11:15:29Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java", "diffHunk": "@@ -98,6 +98,17 @@ public ConceptSearchRequestBuilder filterByExclusions(Iterable<String> exclusion\n \tpublic ConceptSearchRequestBuilder filterByTermType(String termType) {\n \t\treturn addOption(OptionKey.TERM_TYPE, termType);\n \t}\n+\n+\t/**\n+\t * Filters concepts by their type.\n+\t * \n+\t * @param type\n+\t *            - String representation of the concept type filtering\n+\t * @return\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByType(String type) {", "originalCommit": "19e749cafa4dc21b1ac1b332ea79f898f556e52e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e8563f674421fc7fcc03d8706c0101270db148d0", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\nindex 8be1db5cd5..569bc19ff9 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n\n@@ -107,8 +110,21 @@ public final class ConceptSearchRequestBuilder extends SearchResourceRequestBuil\n \t * @return\n \t */\n \tpublic ConceptSearchRequestBuilder filterByType(String type) {\n-\t\treturn addOption(OptionKey.TYPE, type);\n+\t\ttry {\n+\t\t\treturn filterByTypes(ImmutableSet.of(CodeType.valueOf(type)));\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new BadRequestException(\"%s is not a valid CodeType enum.\", type);\n+\t\t}\n \t}\n+\n+\tpublic ConceptSearchRequestBuilder filterByType(CodeType type) {\n+\t\treturn filterByTypes(ImmutableSet.of(type));\n+\t}\n+\n+\tpublic ConceptSearchRequestBuilder filterByTypes(Iterable<CodeType> types) {\n+\t\treturn addOption(OptionKey.TYPE, types);\n+\t}\n+\t\n \t\n \t/**\n \t * Sets the preferred display term to return for every code system\n"}}, {"oid": "52da82ca01a50d22f66c45b12d7d6f56ba9eb2a9", "url": "https://github.com/b2ihealthcare/snow-owl/commit/52da82ca01a50d22f66c45b12d7d6f56ba9eb2a9", "message": "Merge remote-tracking branch 'origin/7.x' into feature/SO-4524-icd-cci-automap-improvements", "committedDate": "2020-12-07T11:17:40Z", "type": "commit"}, {"oid": "161c1cab3f952f7085846fc01665bb4357273d99", "url": "https://github.com/b2ihealthcare/snow-owl/commit/161c1cab3f952f7085846fc01665bb4357273d99", "message": "SO-4524: support only CATEGORY and OCDE", "committedDate": "2020-12-07T11:34:24Z", "type": "commit"}, {"oid": "c472a13f9b92cb927f05c5cb7686c9bc491b9c32", "url": "https://github.com/b2ihealthcare/snow-owl/commit/c472a13f9b92cb927f05c5cb7686c9bc491b9c32", "message": "SO-4524: remove unused name field", "committedDate": "2020-12-07T11:45:18Z", "type": "commit"}, {"oid": "e8563f674421fc7fcc03d8706c0101270db148d0", "url": "https://github.com/b2ihealthcare/snow-owl/commit/e8563f674421fc7fcc03d8706c0101270db148d0", "message": "SO-4524: support filtering by multi value", "committedDate": "2020-12-07T11:45:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM0OTIzNg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/727#discussion_r538349236", "bodyText": "This should be moved to the enum, I'll do that and then merge the API changes.", "author": "cmark", "createdAt": "2020-12-08T13:09:33Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java", "diffHunk": "@@ -98,6 +101,30 @@ public ConceptSearchRequestBuilder filterByExclusions(Iterable<String> exclusion\n \tpublic ConceptSearchRequestBuilder filterByTermType(String termType) {\n \t\treturn addOption(OptionKey.TERM_TYPE, termType);\n \t}\n+\n+\t/**\n+\t * Filters concepts by their type.\n+\t * \n+\t * @param type\n+\t *            - String representation of the concept type filtering\n+\t * @return\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByType(String type) {\n+\t\ttry {", "originalCommit": "e8563f674421fc7fcc03d8706c0101270db148d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d1573ee72f8f7b6adf25e2a9e2c6549500097b71", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\nindex 569bc19ff9..0af9d2141a 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n\n@@ -103,25 +102,48 @@ public final class ConceptSearchRequestBuilder extends SearchResourceRequestBuil\n \t}\n \n \t/**\n-\t * Filters concepts by their type.\n+\t * Filters concepts by their type. Allowed values are: 'code', 'category'.\n \t * \n \t * @param type\n-\t *            - String representation of the concept type filtering\n+\t *            - String representation of the {@link CodeType} enum\n \t * @return\n+\t * @see CodeType\n \t */\n-\tpublic ConceptSearchRequestBuilder filterByType(String type) {\n-\t\ttry {\n-\t\t\treturn filterByTypes(ImmutableSet.of(CodeType.valueOf(type)));\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new BadRequestException(\"%s is not a valid CodeType enum.\", type);\n-\t\t}\n+\tpublic ConceptSearchRequestBuilder filterByCodeType(String type) {\n+\t\treturn filterByCodeType(CodeType.valueOfIgnoreCase(type));\n+\t}\n+\t\n+\t/**\n+\t * Filters concepts by their type. Allowed values are: 'code', 'category'.\n+\t * \n+\t * @param types\n+\t *            - String representations of the {@link CodeType} enum\n+\t * @return\n+\t * @see CodeType\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByCodeType(Iterable<String> types) {\n+\t\treturn filterByCodeTypes(types == null ? null : FluentIterable.from(types).transform(CodeType::valueOfIgnoreCase).toSet());\n \t}\n \n-\tpublic ConceptSearchRequestBuilder filterByType(CodeType type) {\n-\t\treturn filterByTypes(ImmutableSet.of(type));\n+\t/**\n+\t * Filters concepts by their type. Allowed values are: 'code', 'category'.\n+\t * \n+\t * @param type\n+\t * @return\n+\t * @see CodeType\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByCodeType(CodeType type) {\n+\t\treturn addOption(OptionKey.TYPE, type);\n \t}\n \n-\tpublic ConceptSearchRequestBuilder filterByTypes(Iterable<CodeType> types) {\n+\t/**\n+\t * Filters concepts by their type. Allowed values are: 'code', 'category'.\n+\t * \n+\t * @param types\n+\t * @return\n+\t * @see CodeType\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByCodeTypes(Iterable<CodeType> types) {\n \t\treturn addOption(OptionKey.TYPE, types);\n \t}\n \t\n"}}, {"oid": "d1573ee72f8f7b6adf25e2a9e2c6549500097b71", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d1573ee72f8f7b6adf25e2a9e2c6549500097b71", "message": "SO-4524: filterByConceptType API improvements", "committedDate": "2020-12-08T13:32:20Z", "type": "commit"}, {"oid": "6aa92cfbcb68aadc3f46cfe61d3ceab07f19bff0", "url": "https://github.com/b2ihealthcare/snow-owl/commit/6aa92cfbcb68aadc3f46cfe61d3ceab07f19bff0", "message": "Merge remote-tracking branch 'origin/7.x' into feature/SO-4524-icd-cci-automap-improvements", "committedDate": "2020-12-08T13:33:20Z", "type": "commit"}]}