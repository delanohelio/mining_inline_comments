{"pr_number": 701, "pr_title": "SO-4243: Automapping lexical matching improvements", "pr_createdAt": "2020-10-24T11:46:02Z", "pr_url": "https://github.com/b2ihealthcare/snow-owl/pull/701", "timeline": [{"oid": "21c7e13496fab237c9794c5fff5197201de8f98e", "url": "https://github.com/b2ihealthcare/snow-owl/commit/21c7e13496fab237c9794c5fff5197201de8f98e", "message": "SO-4243: remove fuzzy and minTermMatch setters", "committedDate": "2020-10-20T14:53:19Z", "type": "commit"}, {"oid": "53015b267674eaba53cc169dd0e8848b27adf7c4", "url": "https://github.com/b2ihealthcare/snow-owl/commit/53015b267674eaba53cc169dd0e8848b27adf7c4", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-20T15:05:25Z", "type": "commit"}, {"oid": "54d4aafb476b430f394c57910996f3c04b341350", "url": "https://github.com/b2ihealthcare/snow-owl/commit/54d4aafb476b430f394c57910996f3c04b341350", "message": "SO-4243: remove fuzzy, minTermMatch configuration from\n\nConceptSearchRequest API", "committedDate": "2020-10-21T09:47:40Z", "type": "commit"}, {"oid": "3d8fdc545d5aef5f8ab71716f1a399f69eefe7fd", "url": "https://github.com/b2ihealthcare/snow-owl/commit/3d8fdc545d5aef5f8ab71716f1a399f69eefe7fd", "message": "SO-4243: implement TermFilterSupport by\nSnomedConceptSearchRequestBuilder", "committedDate": "2020-10-21T09:48:56Z", "type": "commit"}, {"oid": "87902900a22f5508ff8cf1c4d254410a6af29698", "url": "https://github.com/b2ihealthcare/snow-owl/commit/87902900a22f5508ff8cf1c4d254410a6af29698", "message": "SO-4243: remove unnecessary termfilter apply", "committedDate": "2020-10-21T09:49:30Z", "type": "commit"}, {"oid": "c6c1351c30b4801a789c27e1f194399be87b4faf", "url": "https://github.com/b2ihealthcare/snow-owl/commit/c6c1351c30b4801a789c27e1f194399be87b4faf", "message": "SO-4243: Add TermFilterSupport class to provide filterByTerm method to\n\nBuilders", "committedDate": "2020-10-21T09:50:09Z", "type": "commit"}, {"oid": "fe60c09cb9bffbdd4979d7c08a448cad5983d4da", "url": "https://github.com/b2ihealthcare/snow-owl/commit/fe60c09cb9bffbdd4979d7c08a448cad5983d4da", "message": "SO-4243: Add TermFilter class to encapsulate term filter configuration", "committedDate": "2020-10-21T09:50:35Z", "type": "commit"}, {"oid": "35f1a58430bc3aa3bd9da8e007c77ede514a3c65", "url": "https://github.com/b2ihealthcare/snow-owl/commit/35f1a58430bc3aa3bd9da8e007c77ede514a3c65", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-21T09:59:50Z", "type": "commit"}, {"oid": "ecbcb9a0b1ed599ad67c8e2d2ddb1844de0e3c86", "url": "https://github.com/b2ihealthcare/snow-owl/commit/ecbcb9a0b1ed599ad67c8e2d2ddb1844de0e3c86", "message": "SO-4243: fix Suggestion API", "committedDate": "2020-10-21T10:10:03Z", "type": "commit"}, {"oid": "de0dd48a931568d4861d418c65d71fd62157fe1b", "url": "https://github.com/b2ihealthcare/snow-owl/commit/de0dd48a931568d4861d418c65d71fd62157fe1b", "message": "SO-4243: commit progress...", "committedDate": "2020-10-22T06:45:39Z", "type": "commit"}, {"oid": "50429ab4527fa1539d538f8d8bd12c3222d02b28", "url": "https://github.com/b2ihealthcare/snow-owl/commit/50429ab4527fa1539d538f8d8bd12c3222d02b28", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-22T13:58:28Z", "type": "commit"}, {"oid": "22fe63235900b67706fb1ff29846a3f12f6b0442", "url": "https://github.com/b2ihealthcare/snow-owl/commit/22fe63235900b67706fb1ff29846a3f12f6b0442", "message": "SO-4243: add evaluator to TermFilter class", "committedDate": "2020-10-22T14:27:28Z", "type": "commit"}, {"oid": "9e1dfd9f55f15093eef3fddcb2531a0b5ccaf6de", "url": "https://github.com/b2ihealthcare/snow-owl/commit/9e1dfd9f55f15093eef3fddcb2531a0b5ccaf6de", "message": "SO-4243: remove withFuzzy and minTermMatch switches from\n\nSnomedConceptSearchRequestBuilder", "committedDate": "2020-10-22T14:47:08Z", "type": "commit"}, {"oid": "84b9503f327a6976ccae955422c6fdefcc1f3749", "url": "https://github.com/b2ihealthcare/snow-owl/commit/84b9503f327a6976ccae955422c6fdefcc1f3749", "message": "SO-4243: refactor SnomedConceptSearchRequest based on the new TermFilter\n\nclass", "committedDate": "2020-10-22T14:58:54Z", "type": "commit"}, {"oid": "90950a9c6399bc5a4784ebca15c941300cfc593e", "url": "https://github.com/b2ihealthcare/snow-owl/commit/90950a9c6399bc5a4784ebca15c941300cfc593e", "message": "SO-4243: refactor SnomedDescriptionSearchRequest based on the new\n\nTermFilter class", "committedDate": "2020-10-22T14:59:42Z", "type": "commit"}, {"oid": "23f3c74d8ea4dec12b515e346baf4f1ea80eb572", "url": "https://github.com/b2ihealthcare/snow-owl/commit/23f3c74d8ea4dec12b515e346baf4f1ea80eb572", "message": "SO-4243: fix SnomedDescriptionApiTest", "committedDate": "2020-10-22T15:00:09Z", "type": "commit"}, {"oid": "66c69f62bb22358494606d7bd10310886ec47613", "url": "https://github.com/b2ihealthcare/snow-owl/commit/66c69f62bb22358494606d7bd10310886ec47613", "message": "SO-4243: refactor SnomedDescriptionSearchRequestBuilder based on the new\n\nTermFilter class", "committedDate": "2020-10-22T15:00:33Z", "type": "commit"}, {"oid": "85e4e28b898883223bda9db28b3867f6ae302cb9", "url": "https://github.com/b2ihealthcare/snow-owl/commit/85e4e28b898883223bda9db28b3867f6ae302cb9", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-22T16:17:11Z", "type": "commit"}, {"oid": "55e7a7a978c172f1f7e9bf07adca145dbd489a85", "url": "https://github.com/b2ihealthcare/snow-owl/commit/55e7a7a978c172f1f7e9bf07adca145dbd489a85", "message": "SO-4243: fix fuzzy and exact expression", "committedDate": "2020-10-24T09:52:01Z", "type": "commit"}, {"oid": "004485f963c74843155d16d8097047c4704f62ff", "url": "https://github.com/b2ihealthcare/snow-owl/commit/004485f963c74843155d16d8097047c4704f62ff", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-24T11:40:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMTEyNw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511611127", "bodyText": "Please keep the original methods for backward compatibility and delegate to the new filterByTerm(TermFilter) method.", "author": "cmark", "createdAt": "2020-10-25T15:25:22Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java", "diffHunk": "@@ -35,46 +35,12 @@\n \tpublic ConceptSearchRequestBuilder filterByActive(Boolean active) {\n \t\treturn addOption(OptionKey.ACTIVE, active);\n \t}\n-\t\n-\t/**\n-\t * Filters matches by their lexical terms. The exact semantics of how a term match works depends on the given code system, but usually it supports\n-\t * exact, partial word and prefix matches.\n-\t * \n-\t * @param term\n-\t * @return\n-\t */\n-\tpublic ConceptSearchRequestBuilder filterByTerm(String term) {", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd06cd266ef11acce4fe972474440b91384d14b6", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\nindex b5aec3af28..49a35fe8e0 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n\n@@ -35,7 +35,18 @@ public final class ConceptSearchRequestBuilder extends SearchResourceRequestBuil\n \tpublic ConceptSearchRequestBuilder filterByActive(Boolean active) {\n \t\treturn addOption(OptionKey.ACTIVE, active);\n \t}\n-\n+\t\n+\t/**\n+\t * Filters matches by their lexical terms. The exact semantics of how a term match works depends on the given code system, but usually it supports\n+\t * exact, partial word and prefix matches.\n+\t * \n+\t * @param term\n+\t * @return\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByTerm(String term) {\n+\t\treturn filterByTerm(TermFilter.defaultTermMatch(term));\n+\t}\n+\t\n \t@Override\n \tpublic ConceptSearchRequestBuilder filterByTerm(TermFilter termFilter) {\n \t\treturn addOption(OptionKey.TERM, termFilter);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMTE2Ng==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511611166", "bodyText": "These can be removed, since they were basically unused so far.", "author": "cmark", "createdAt": "2020-10-25T15:25:40Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java", "diffHunk": "@@ -35,46 +35,12 @@\n \tpublic ConceptSearchRequestBuilder filterByActive(Boolean active) {\n \t\treturn addOption(OptionKey.ACTIVE, active);\n \t}\n-\t\n-\t/**\n-\t * Filters matches by their lexical terms. The exact semantics of how a term match works depends on the given code system, but usually it supports\n-\t * exact, partial word and prefix matches.\n-\t * \n-\t * @param term\n-\t * @return\n-\t */\n-\tpublic ConceptSearchRequestBuilder filterByTerm(String term) {\n-\t\treturn addOption(OptionKey.TERM, term);\n-\t}\n \n-\t/**\n-\t * Filters matches by their lexical terms. Returns matches with exact case insensitive term matches.\n-\t * \n-\t * @param exactTerm\n-\t * @return\n-\t */\n-\tpublic ConceptSearchRequestBuilder filterByExactTerm(String exactTerm) {\n-\t\treturn addOption(OptionKey.TERM_EXACT, exactTerm);\n+\t@Override\n+\tpublic ConceptSearchRequestBuilder filterByTerm(TermFilter termFilter) {\n+\t\treturn addOption(OptionKey.TERM, termFilter);\n \t}\n \n-\t/**\n-\t * Sets the minimum number of terms that should be matched in a {@link #filterByTerm(String)} clause.\n-\t * The default is \"all terms\", when not given.\n-\t * \n-\t * @param minTermMatch\n-\t * @return\n-\t */\n-\tpublic ConceptSearchRequestBuilder setMinTermMatch(int minTermMatch) {", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fd06cd266ef11acce4fe972474440b91384d14b6", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\nindex b5aec3af28..49a35fe8e0 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/ConceptSearchRequestBuilder.java\n\n@@ -35,7 +35,18 @@ public final class ConceptSearchRequestBuilder extends SearchResourceRequestBuil\n \tpublic ConceptSearchRequestBuilder filterByActive(Boolean active) {\n \t\treturn addOption(OptionKey.ACTIVE, active);\n \t}\n-\n+\t\n+\t/**\n+\t * Filters matches by their lexical terms. The exact semantics of how a term match works depends on the given code system, but usually it supports\n+\t * exact, partial word and prefix matches.\n+\t * \n+\t * @param term\n+\t * @return\n+\t */\n+\tpublic ConceptSearchRequestBuilder filterByTerm(String term) {\n+\t\treturn filterByTerm(TermFilter.defaultTermMatch(term));\n+\t}\n+\t\n \t@Override\n \tpublic ConceptSearchRequestBuilder filterByTerm(TermFilter termFilter) {\n \t\treturn addOption(OptionKey.TERM, termFilter);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMTM0Nw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511611347", "bodyText": "Make this class final.", "author": "cmark", "createdAt": "2020-10-25T15:27:00Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import static com.b2international.index.query.Expressions.scriptScore;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import com.b2international.index.query.Expression;\n+import com.b2international.index.query.Expressions;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * Represents a {@link Serializable} encapsulation of term search configuration.\n+ * \n+ * @since 7.11\n+ */\n+public class TermFilter implements Serializable {", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dc2817a1f0185b47b7f380a6585ba01cbd0c969", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\nindex b5c4c29fd3..3d47849a48 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n\n@@ -31,7 +31,7 @@ import com.google.common.collect.Lists;\n  * \n  * @since 7.11\n  */\n-public class TermFilter implements Serializable {\n+public final class TermFilter implements Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMTQ5OA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511611498", "bodyText": "There are no validations present on the minShouldMatch field. It should be greater than or equal to 1, otherwise throw a BadRequestException.", "author": "cmark", "createdAt": "2020-10-25T15:28:42Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import static com.b2international.index.query.Expressions.scriptScore;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import com.b2international.index.query.Expression;\n+import com.b2international.index.query.Expressions;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * Represents a {@link Serializable} encapsulation of term search configuration.\n+ * \n+ * @since 7.11\n+ */\n+public class TermFilter implements Serializable {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate static final String PREFIX = \".pefix\";\n+\tprivate static final String EXACT = \".exact\";\n+\tprivate static final String ORIGINAL = \".original\";\n+\t\n+\tprivate final String term;\n+\tprivate final Integer minShouldMatch;", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dc2817a1f0185b47b7f380a6585ba01cbd0c969", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\nindex b5c4c29fd3..3d47849a48 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n\n@@ -31,7 +31,7 @@ import com.google.common.collect.Lists;\n  * \n  * @since 7.11\n  */\n-public class TermFilter implements Serializable {\n+public final class TermFilter implements Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMTk2NQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511611965", "bodyText": "It is not entirely certain, that a tooling plugin has these exact fields and namings on its term field. Also, there might be other fields that should participate in the term filter process by using the same semantics. I would handle this per search request implementation as opposed to handling it locally in this class' evaluateOnField(String) method.", "author": "cmark", "createdAt": "2020-10-25T15:32:56Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java", "diffHunk": "@@ -0,0 +1,204 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import static com.b2international.index.query.Expressions.scriptScore;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+import com.b2international.index.query.Expression;\n+import com.b2international.index.query.Expressions;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * Represents a {@link Serializable} encapsulation of term search configuration.\n+ * \n+ * @since 7.11\n+ */\n+public class TermFilter implements Serializable {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\tprivate static final String PREFIX = \".pefix\";\n+\tprivate static final String EXACT = \".exact\";\n+\tprivate static final String ORIGINAL = \".original\";", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7dc2817a1f0185b47b7f380a6585ba01cbd0c969", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\nindex b5c4c29fd3..3d47849a48 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n\n@@ -31,7 +31,7 @@ import com.google.common.collect.Lists;\n  * \n  * @since 7.11\n  */\n-public class TermFilter implements Serializable {\n+public final class TermFilter implements Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \t\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYxMjExNw==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r511612117", "bodyText": "parsedTerm is another specific TermFilter type, please add it to the implementation.", "author": "cmark", "createdAt": "2020-10-25T15:34:23Z", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequest.java", "diffHunk": "@@ -332,18 +323,10 @@ private Expression addSearchProfile(final Expression searchProfileQuery, final E\n \t\t\trequestBuilder.filterBySemanticTags(semanticTags);\n \t\t}\n \t\t\n-\t\tif (containsKey(OptionKey.USE_FUZZY)) {\n-\t\t\trequestBuilder.withFuzzySearch();\n-\t\t}\n-\t\t\n \t\tif (containsKey(OptionKey.PARSED_TERM)) {", "originalCommit": "004485f963c74843155d16d8097047c4704f62ff", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5d2b8dd9a695967080c6f522b715b0c976b4492d", "chunk": "diff --git a/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequest.java b/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequest.java\nindex af28952081..ba01d8e336 100644\n--- a/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequest.java\n+++ b/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequest.java\n\n@@ -323,10 +323,6 @@ public class SnomedConceptSearchRequest extends SnomedComponentSearchRequest<Sno\n \t\t\trequestBuilder.filterBySemanticTags(semanticTags);\n \t\t}\n \t\t\n-\t\tif (containsKey(OptionKey.PARSED_TERM)) {\n-\t\t\trequestBuilder.withParsedTerm();\n-\t\t}\n-\t\t\n \t\tfinal Collection<SnomedDescription> items = requestBuilder\n \t\t\t.build()\n \t\t\t.execute(context)\n"}}, {"oid": "6044e2f1a5d6e76c7ac5e5fae926f36aaaf15652", "url": "https://github.com/b2ihealthcare/snow-owl/commit/6044e2f1a5d6e76c7ac5e5fae926f36aaaf15652", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-26T08:17:28Z", "type": "commit"}, {"oid": "fd06cd266ef11acce4fe972474440b91384d14b6", "url": "https://github.com/b2ihealthcare/snow-owl/commit/fd06cd266ef11acce4fe972474440b91384d14b6", "message": "SO-4243: restore filterByTerm(String) method to allow shortcut on\n\ndefault term search", "committedDate": "2020-10-26T08:31:52Z", "type": "commit"}, {"oid": "7dc2817a1f0185b47b7f380a6585ba01cbd0c969", "url": "https://github.com/b2ihealthcare/snow-owl/commit/7dc2817a1f0185b47b7f380a6585ba01cbd0c969", "message": "SO-4243: make TermFilter class final", "committedDate": "2020-10-26T08:32:39Z", "type": "commit"}, {"oid": "1ee7285ba2d249ddde52e463f6d87a8c9431bce0", "url": "https://github.com/b2ihealthcare/snow-owl/commit/1ee7285ba2d249ddde52e463f6d87a8c9431bce0", "message": "SO-4243: add validator on minShouldMatch field", "committedDate": "2020-10-26T08:41:07Z", "type": "commit"}, {"oid": "b7700f3551f2bbdfefee76e0236fb57aee0c9187", "url": "https://github.com/b2ihealthcare/snow-owl/commit/b7700f3551f2bbdfefee76e0236fb57aee0c9187", "message": "SO-4243: remove evaluateOnField logic", "committedDate": "2020-10-26T08:42:51Z", "type": "commit"}, {"oid": "f987a280bf4a5c039a18b6e8059292e88e9f6e8a", "url": "https://github.com/b2ihealthcare/snow-owl/commit/f987a280bf4a5c039a18b6e8059292e88e9f6e8a", "message": "SO-4243: add parsed term filter option", "committedDate": "2020-10-26T10:27:14Z", "type": "commit"}, {"oid": "5d2b8dd9a695967080c6f522b715b0c976b4492d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/5d2b8dd9a695967080c6f522b715b0c976b4492d", "message": "SO-4243: add parsed term filter option to TermFilter", "committedDate": "2020-10-26T10:33:15Z", "type": "commit"}, {"oid": "b8b5b2133650cb0b77264d8f2a3a85a29e816129", "url": "https://github.com/b2ihealthcare/snow-owl/commit/b8b5b2133650cb0b77264d8f2a3a85a29e816129", "message": "SO-4243: add required expressions to snomed description doc", "committedDate": "2020-10-26T10:33:38Z", "type": "commit"}, {"oid": "734ba3591645799998f635ee5b12643ea10f2708", "url": "https://github.com/b2ihealthcare/snow-owl/commit/734ba3591645799998f635ee5b12643ea10f2708", "message": "SO-4243: remove withParsedTerm() switch", "committedDate": "2020-10-26T10:42:05Z", "type": "commit"}, {"oid": "d252c26ca6823a28133268a2d664822569baf7e4", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d252c26ca6823a28133268a2d664822569baf7e4", "message": "SO-4243: organize imports", "committedDate": "2020-10-26T10:48:30Z", "type": "commit"}, {"oid": "fc8c6878a65f8f8108a8ad5baf5813936518dd7f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/fc8c6878a65f8f8108a8ad5baf5813936518dd7f", "message": "SO-4243: fix prepareQuery valdiation", "committedDate": "2020-10-26T12:40:54Z", "type": "commit"}, {"oid": "031153a6fa36ed30795d1e361981fb6283d2811c", "url": "https://github.com/b2ihealthcare/snow-owl/commit/031153a6fa36ed30795d1e361981fb6283d2811c", "message": "SO-4243: add method to create a Builder from an existing TermFilter", "committedDate": "2020-10-26T13:49:33Z", "type": "commit"}, {"oid": "c3dea495677f1a2cd14f00219756a560bef4d3c2", "url": "https://github.com/b2ihealthcare/snow-owl/commit/c3dea495677f1a2cd14f00219756a560bef4d3c2", "message": "SO-4243: add method to create a Builder from an existing TermFilter", "committedDate": "2020-10-26T14:14:15Z", "type": "commit"}, {"oid": "9fbf99c19b3f5364b4f50ffc4c8804d244f52461", "url": "https://github.com/b2ihealthcare/snow-owl/commit/9fbf99c19b3f5364b4f50ffc4c8804d244f52461", "message": "SO-4243: processSpecialOptionKey should always receive TermFilter.class", "committedDate": "2020-10-26T14:15:31Z", "type": "commit"}, {"oid": "702b42491119ef8edcb0cd2c1640a74f01ee54f3", "url": "https://github.com/b2ihealthcare/snow-owl/commit/702b42491119ef8edcb0cd2c1640a74f01ee54f3", "message": "SO-4243: add term validation to TermFilter", "committedDate": "2020-10-26T15:04:34Z", "type": "commit"}, {"oid": "e94ee2ea0a0f9ef4eef5a4a052ff7648c4cc86c4", "url": "https://github.com/b2ihealthcare/snow-owl/commit/e94ee2ea0a0f9ef4eef5a4a052ff7648c4cc86c4", "message": "SO-4243: put null as value in options map when filtering on null term", "committedDate": "2020-10-26T15:09:48Z", "type": "commit"}, {"oid": "da25db15feffd36a2d36f3b18102aafd6745974e", "url": "https://github.com/b2ihealthcare/snow-owl/commit/da25db15feffd36a2d36f3b18102aafd6745974e", "message": "SO-4243: put null as value in options map when filtering on null term", "committedDate": "2020-10-26T15:24:34Z", "type": "commit"}, {"oid": "12b3368b3774d922e150e98844488059f2202d3f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/12b3368b3774d922e150e98844488059f2202d3f", "message": "SO-4243: wrap special options in TermFilter in test-cases", "committedDate": "2020-10-26T16:05:37Z", "type": "commit"}, {"oid": "e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "url": "https://github.com/b2ihealthcare/snow-owl/commit/e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "message": "Merge remote-tracking branch 'origin/7.x' into improvement/SO-4243-automapping-lexical-search", "committedDate": "2020-10-26T16:06:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExMzA0NA==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r512113044", "bodyText": "Please keep the original feature intact and add an extractor to extract the term value for the special option key handler.", "author": "cmark", "createdAt": "2020-10-26T16:50:08Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java", "diffHunk": "@@ -344,9 +334,10 @@ public final B execute(C context) {\n \t@VisibleForTesting\n \tstatic Options processSpecialOptionKey(Options options, Enum<?> specialOptionKey) {\n \t\tif (specialOptionKey != null && options.containsKey(specialOptionKey)) {\n-\t\t\t// this will throw a CCE if non-String value is encountered in the option key and that is okay\n-\t\t\tString specialOption = options.getString(specialOptionKey);\n-\t\t\tif (specialOption.startsWith(SPECIAL_OPTION_CHARACTER) && specialOption.endsWith(\")\")) {\n+\t\t\t// this will throw a CCE if non-TermFilter value is encountered in the option key and that is okay\n+\t\t\tfinal TermFilter termFilter = options.get(specialOptionKey, TermFilter.class);\n+\t\t\tString specialOption = termFilter.getTerm();", "originalCommit": "e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c0e4c0fd4714cdf57253fad091d04b6b839ff9a2", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java\nindex ef876e132f..2004187697 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/SearchResourceRequest.java\n\n@@ -334,10 +334,9 @@ public abstract class SearchResourceRequest<C extends ServiceProvider, B> extend\n \t@VisibleForTesting\n \tstatic Options processSpecialOptionKey(Options options, Enum<?> specialOptionKey) {\n \t\tif (specialOptionKey != null && options.containsKey(specialOptionKey)) {\n-\t\t\t// this will throw a CCE if non-TermFilter value is encountered in the option key and that is okay\n-\t\t\tfinal TermFilter termFilter = options.get(specialOptionKey, TermFilter.class);\n-\t\t\tString specialOption = termFilter.getTerm();\n-\t\t\tif (specialOption != null && specialOption.startsWith(SPECIAL_OPTION_CHARACTER) && specialOption.endsWith(\")\")) {\n+\t\t\t// this will throw a CCE if non-String value is encountered in the option key and that is okay\n+\t\t\tString specialOption = options.getString(specialOptionKey);\n+\t\t\tif (specialOption.startsWith(SPECIAL_OPTION_CHARACTER) && specialOption.endsWith(\")\")) {\n \t\t\t\t// strip of the leading and trailing characters so we end up with a field(value expression that can be split on the first occurence of\n \t\t\t\t// the ( character\n \t\t\t\tString fieldAndValueWithParenSeparator = specialOption.substring(1, specialOption.length() - 1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExMzcxMg==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r512113712", "bodyText": "Trim the incoming term and remove custom trimming from all concrete search request implementations.", "author": "cmark", "createdAt": "2020-10-26T16:50:43Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.io.Serializable;\n+\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+/**\n+ * Represents a {@link Serializable} encapsulation of term search configuration.\n+ * \n+ * @since 7.11\n+ */\n+public final class TermFilter implements Serializable {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@NotNull\n+\tprivate final String term;\n+\t\n+\t@Min(1)\n+\tprivate final Integer minShouldMatch;\n+\t\n+\tprivate final boolean fuzzy;\n+\tprivate final boolean exact;\n+\tprivate final boolean parsed;\n+\n+\tpublic TermFilter(final String term, final Integer minShouldMatch, final boolean fuzzy, final boolean exact, final boolean parsed) {\n+\t\tthis.term = term;", "originalCommit": "e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f225c57c49189d1aef06c685abea118c7a78dfa", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\nindex 066078034b..9668ddd987 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n\n@@ -43,7 +43,7 @@ public final class TermFilter implements Serializable {\n \tprivate final boolean parsed;\n \n \tpublic TermFilter(final String term, final Integer minShouldMatch, final boolean fuzzy, final boolean exact, final boolean parsed) {\n-\t\tthis.term = term;\n+\t\tthis.term = term.trim();\n \t\tthis.minShouldMatch = minShouldMatch;\n \t\tthis.fuzzy = fuzzy;\n \t\tthis.exact = exact;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDI3OQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r512114279", "bodyText": "A Valid annotation might be required to evaluate these annotations, please write a test case for this.", "author": "cmark", "createdAt": "2020-10-26T16:51:14Z", "path": "core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2020 B2i Healthcare Pte Ltd, http://b2i.sg\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.b2international.snowowl.core.request;\n+\n+import java.io.Serializable;\n+\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.NotNull;\n+\n+import com.b2international.commons.exceptions.BadRequestException;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+/**\n+ * Represents a {@link Serializable} encapsulation of term search configuration.\n+ * \n+ * @since 7.11\n+ */\n+public final class TermFilter implements Serializable {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\t\n+\t@NotNull\n+\tprivate final String term;\n+\t\n+\t@Min(1)", "originalCommit": "e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1f225c57c49189d1aef06c685abea118c7a78dfa", "chunk": "diff --git a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\nindex 066078034b..9668ddd987 100644\n--- a/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n+++ b/core/com.b2international.snowowl.core/src/com/b2international/snowowl/core/request/TermFilter.java\n\n@@ -43,7 +43,7 @@ public final class TermFilter implements Serializable {\n \tprivate final boolean parsed;\n \n \tpublic TermFilter(final String term, final Integer minShouldMatch, final boolean fuzzy, final boolean exact, final boolean parsed) {\n-\t\tthis.term = term;\n+\t\tthis.term = term.trim();\n \t\tthis.minShouldMatch = minShouldMatch;\n \t\tthis.fuzzy = fuzzy;\n \t\tthis.exact = exact;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNTcwMQ==", "url": "https://github.com/b2ihealthcare/snow-owl/pull/701#discussion_r512115701", "bodyText": "Pull up the filterByTerm() and filterByExactTerm() support to the TermFilterSupport interface.", "author": "cmark", "createdAt": "2020-10-26T16:52:26Z", "path": "snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequestBuilder.java", "diffHunk": "@@ -93,7 +88,12 @@ public final SnomedConceptSearchRequestBuilder withParsedTerm() {\n \t * @return <code>this</code> search request builder, for method chaining\n \t */\n \tpublic final SnomedConceptSearchRequestBuilder filterByTerm(String term) {", "originalCommit": "e8cf12c5cc2dd0dbf653b44dc11bcdec89f18e81", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4619c5ced6a5339942c90159a8812310f821fa6c", "chunk": "diff --git a/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequestBuilder.java b/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequestBuilder.java\nindex 1e9212b112..2cf65a7775 100644\n--- a/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequestBuilder.java\n+++ b/snomed/com.b2international.snowowl.snomed.datastore/src/com/b2international/snowowl/snomed/datastore/request/SnomedConceptSearchRequestBuilder.java\n\n@@ -77,20 +77,6 @@ public final class SnomedConceptSearchRequestBuilder extends SnomedComponentSear\n \t\treturn addOption(SnomedConceptSearchRequest.OptionKey.USE_DOI, withDoi);\n \t}\n \n-\t/**\n-\t * Filters results by matching description terms on each concept, using different methods for comparison.\n-\t * <p>\n-\t * This filter affects the score of each result. If results should be returned in order of relevance, specify {@link SearchResourceRequest#SCORE}\n-\t * as one of the sort fields.\n-\t * \n-\t * @param term\n-\t *            - the expression to match\n-\t * @return <code>this</code> search request builder, for method chaining\n-\t */\n-\tpublic final SnomedConceptSearchRequestBuilder filterByTerm(String term) {\n-\t\treturn filterByTerm(term != null ? TermFilter.defaultTermMatch(term) : null);\n-\t}\n-\n \t@Override\n \tpublic SnomedConceptSearchRequestBuilder filterByTerm(TermFilter termFilter) {\n \t\treturn addOption(SnomedConceptSearchRequest.OptionKey.TERM, termFilter);\n"}}, {"oid": "54b7e0f22d887de25600e71a5bc0632a2268ed1d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/54b7e0f22d887de25600e71a5bc0632a2268ed1d", "message": "Revert \"SO-4243: wrap special options in TermFilter in test-cases\"\n\nThis reverts commit 12b3368b3774d922e150e98844488059f2202d3f.", "committedDate": "2020-10-26T16:53:57Z", "type": "commit"}, {"oid": "c0e4c0fd4714cdf57253fad091d04b6b839ff9a2", "url": "https://github.com/b2ihealthcare/snow-owl/commit/c0e4c0fd4714cdf57253fad091d04b6b839ff9a2", "message": "Revert \"SO-4243: processSpecialOptionKey should always receive TermFilter.class\"\n\nThis reverts commit 9fbf99c19b3f5364b4f50ffc4c8804d244f52461.", "committedDate": "2020-10-26T16:54:15Z", "type": "commit"}, {"oid": "3a3d3601bd1d4a97afd59cd09e0c07dc0bbc3c9d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/3a3d3601bd1d4a97afd59cd09e0c07dc0bbc3c9d", "message": "SO-4243: add support method to extract special option", "committedDate": "2020-10-26T17:17:41Z", "type": "commit"}, {"oid": "1f225c57c49189d1aef06c685abea118c7a78dfa", "url": "https://github.com/b2ihealthcare/snow-owl/commit/1f225c57c49189d1aef06c685abea118c7a78dfa", "message": "SO-4243: trim searchTerm in TermFilter constructor", "committedDate": "2020-10-26T17:19:03Z", "type": "commit"}, {"oid": "4619c5ced6a5339942c90159a8812310f821fa6c", "url": "https://github.com/b2ihealthcare/snow-owl/commit/4619c5ced6a5339942c90159a8812310f821fa6c", "message": "SO-4243: pull up filterByTerm(), filterByExactTerm() to\n\nTermFilterSupport", "committedDate": "2020-10-26T17:36:27Z", "type": "commit"}, {"oid": "96f3e8417ae219eb9142d5f3811e9d11e0ad23a3", "url": "https://github.com/b2ihealthcare/snow-owl/commit/96f3e8417ae219eb9142d5f3811e9d11e0ad23a3", "message": "SO-4243: minor rewrite of special option key value extraction", "committedDate": "2020-10-26T19:10:01Z", "type": "commit"}, {"oid": "694bc2a23a0c28b17f758227157352cb6e9c283f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/694bc2a23a0c28b17f758227157352cb6e9c283f", "message": "SO-4243: javadoc updates to TermFilterSupport", "committedDate": "2020-10-26T19:10:09Z", "type": "commit"}, {"oid": "6322ae14315dc4a207d0f382d946d4f306a6d31f", "url": "https://github.com/b2ihealthcare/snow-owl/commit/6322ae14315dc4a207d0f382d946d4f306a6d31f", "message": "SO-4243: minor fixes to TermFilter type", "committedDate": "2020-10-26T19:12:33Z", "type": "commit"}, {"oid": "d34aa97b783d11a02842d6c706b9f9964d860d48", "url": "https://github.com/b2ihealthcare/snow-owl/commit/d34aa97b783d11a02842d6c706b9f9964d860d48", "message": "SO-4243: add term validation to TermFilter", "committedDate": "2020-10-26T19:17:11Z", "type": "commit"}, {"oid": "aaa3160b7efe261a3744b18ad142c4be39d1a81d", "url": "https://github.com/b2ihealthcare/snow-owl/commit/aaa3160b7efe261a3744b18ad142c4be39d1a81d", "message": "SO-4243: use `String.join()` instead of `String.format()`", "committedDate": "2020-10-26T20:23:27Z", "type": "commit"}]}