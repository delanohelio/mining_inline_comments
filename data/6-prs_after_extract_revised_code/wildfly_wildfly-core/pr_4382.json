{"pr_number": 4382, "pr_title": "[WFCORE-5181] Expression properties with trailing whitespaces are resolved to a trimmed value", "pr_createdAt": "2020-11-03T13:57:11Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4382", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0Mjk0MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r528442940", "bodyText": "This should do the same test that the non-expression else block does, and use 'trimmed' unless attributeType is STRING or PROPERTY. An expression that's meant to resolve to a string convertible to some other type shouldn't have leading/trailing whitespace and we shouldn't stop being helpful about that.", "author": "bstansberry", "createdAt": "2020-11-23T02:07:41Z", "path": "controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java", "diffHunk": "@@ -565,8 +565,8 @@ public static ModelNode parseAttributeValue(final String value, final boolean is\n         final String trimmed = value == null ? null : value.trim();\n         ModelNode node;\n         if (trimmed != null) {\n-            if (isExpressionAllowed && isExpression(trimmed)) {\n-                node = new ModelNode(new ValueExpression(trimmed));\n+            if (isExpressionAllowed && isExpression(value)) {\n+                node = new ModelNode(new ValueExpression(value));", "originalCommit": "93113d4b528e74f15f830b38aa3b6b276bad293b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0MDE0Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534240146", "bodyText": "Ok, done...", "author": "jbaesner", "createdAt": "2020-12-02T15:07:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0Mjk0MA=="}], "type": "inlineReview", "revised_code": {"commit": "b4c7ffb1e32bf68767e5708b6566b9ab447227b7", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java b/controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java\nindex 6fa04ea708..2d90e9d6b4 100644\n--- a/controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java\n+++ b/controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java\n\n@@ -566,7 +566,11 @@ public final class ParseUtils {\n         ModelNode node;\n         if (trimmed != null) {\n             if (isExpressionAllowed && isExpression(value)) {\n-                node = new ModelNode(new ValueExpression(value));\n+                if(attributeType == STRING || attributeType == PROPERTY) {\n+                    node = new ModelNode(new ValueExpression(value));\n+                } else {\n+                    node = new ModelNode(new ValueExpression(trimmed));\n+                }\n             } else {\n                 if(attributeType == STRING || attributeType == PROPERTY) {\n                     node = new ModelNode().set(value);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNjc5NA==", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534226794", "bodyText": "@jbaesner I believe this should be ModelType.STRING", "author": "bstansberry", "createdAt": "2020-12-02T14:51:02Z", "path": "controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2012, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.controller.parsing;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.dmr.ModelType;\n+import org.junit.Test;\n+\n+/**\n+ * Unit tests of {@link ParseUtils}.\n+ *\n+ * @author Joerg Baesner (c) 2020 Red Hat Inc.\n+ */\n+public class ParseUtilsTestCase {\n+\n+    @Test\n+    public void testExpressionsWithTrailingWhitespace() {\n+\n+        String propertyValue = \"${key} \";\n+        ModelType attributeType = ModelType.EXPRESSION;", "originalCommit": "93113d4b528e74f15f830b38aa3b6b276bad293b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzOTg4Nw==", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534239887", "bodyText": "Yes, exactly, you're right!", "author": "jbaesner", "createdAt": "2020-12-02T15:07:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNjc5NA=="}], "type": "inlineReview", "revised_code": {"commit": "b4c7ffb1e32bf68767e5708b6566b9ab447227b7", "chunk": "diff --git a/controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java b/controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java\nindex 6c162d5018..8a174bf5ed 100644\n--- a/controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java\n+++ b/controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java\n\n@@ -38,7 +38,7 @@ public class ParseUtilsTestCase {\n     public void testExpressionsWithTrailingWhitespace() {\n \n         String propertyValue = \"${key} \";\n-        ModelType attributeType = ModelType.EXPRESSION;\n+        ModelType attributeType = ModelType.STRING;\n \n         ModelNode mn = ParseUtils.parseAttributeValue(propertyValue, true, attributeType);\n \n"}}, {"oid": "b4c7ffb1e32bf68767e5708b6566b9ab447227b7", "url": "https://github.com/wildfly/wildfly-core/commit/b4c7ffb1e32bf68767e5708b6566b9ab447227b7", "message": "[WFCORE-5181] Expression properties with trailing whitespaces are resolved to a trimmed value", "committedDate": "2020-12-02T14:57:39Z", "type": "forcePushed"}, {"oid": "33f369eeb21bd516d2011d3a6fc851515bde5e4b", "url": "https://github.com/wildfly/wildfly-core/commit/33f369eeb21bd516d2011d3a6fc851515bde5e4b", "message": "[WFCORE-5181] Expression properties with trailing whitespaces are resolved to a trimmed value", "committedDate": "2020-12-02T15:03:14Z", "type": "commit"}, {"oid": "33f369eeb21bd516d2011d3a6fc851515bde5e4b", "url": "https://github.com/wildfly/wildfly-core/commit/33f369eeb21bd516d2011d3a6fc851515bde5e4b", "message": "[WFCORE-5181] Expression properties with trailing whitespaces are resolved to a trimmed value", "committedDate": "2020-12-02T15:03:14Z", "type": "forcePushed"}]}