{"pr_number": 4259, "pr_title": "WFCORE-5029 Add propery read handler for MANAGED attirbute at server \u2026", "pr_createdAt": "2020-07-07T05:07:42Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4259", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0OTE5NA==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r454949194", "bodyText": "Shouldn't you use context.getCurrentAddressValue() instead ?", "author": "ehsavoie", "createdAt": "2020-07-15T10:23:49Z", "path": "host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java", "diffHunk": "@@ -125,4 +131,26 @@ protected void registerAddOperation(ManagementResourceRegistration registration,\n         registration.registerOperationHandler(addDefinition, handler);\n     }\n \n+    static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {\n+         ServerGroupDomainDeploymentResourceDefinition(DeploymentResourceParent parent, OperationDefinition addDefinition,\n+                 OperationStepHandler addHandler, OperationStepHandler removeHandler,\n+                 OperationStepHandler explodeDeploymentHandler, OperationStepHandler explodedDeploymentAddContentHandler,\n+                 OperationStepHandler explodedDeploymentRemoveContentHandler,\n+                 OperationStepHandler explodedDeploymentReadContentHandler,\n+                 OperationStepHandler explodedDeploymentBrowseContentHandler) {\n+             super(parent, addDefinition, addHandler, removeHandler, explodeDeploymentHandler,\n+                     explodedDeploymentAddContentHandler, explodedDeploymentRemoveContentHandler,\n+                     explodedDeploymentReadContentHandler, explodedDeploymentBrowseContentHandler);\n+         }\n+\n+         @Override\n+         public void extractedManaged(OperationContext context, ModelNode operation) {\n+              String name = PathAddress.pathAddress(operation.get(ModelDescriptionConstants.OP_ADDR)).getLastElement().getValue();", "originalCommit": "1bff36c28b19706c3050c0616f331eb8c0350f81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4OTA5Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r455489096", "bodyText": "switched context.getCurrentAddressValue() instead", "author": "soul2zimate", "createdAt": "2020-07-16T03:33:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0OTE5NA=="}], "type": "inlineReview", "revised_code": {"commit": "c9ade55201ec839ceb4f6116dfcfc5bbc6ef36fa", "chunk": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java b/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\nindex e882ff1552..8a8d157811 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\n\n@@ -131,7 +131,7 @@ class DomainDeploymentResourceDefinition extends DeploymentResourceDefinition {\n         registration.registerOperationHandler(addDefinition, handler);\n     }\n \n-    static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {\n+    private static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {\n          ServerGroupDomainDeploymentResourceDefinition(DeploymentResourceParent parent, OperationDefinition addDefinition,\n                  OperationStepHandler addHandler, OperationStepHandler removeHandler,\n                  OperationStepHandler explodeDeploymentHandler, OperationStepHandler explodedDeploymentAddContentHandler,\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0OTI5Mw==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r454949293", "bodyText": "Should be private", "author": "ehsavoie", "createdAt": "2020-07-15T10:24:01Z", "path": "host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java", "diffHunk": "@@ -125,4 +131,26 @@ protected void registerAddOperation(ManagementResourceRegistration registration,\n         registration.registerOperationHandler(addDefinition, handler);\n     }\n \n+    static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {", "originalCommit": "1bff36c28b19706c3050c0616f331eb8c0350f81", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk1NTQ4OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r454955489", "bodyText": "I don't think being private here should make much difference, we had this discussion with David a number of years back on Elytron.  I believe even if you set this to private the resulting class still needs to be given package level visibility so it can be accessed by the class which contains it.\nMost importantly nothing here is public so nothing will leak as API used by other packages.", "author": "darranl", "createdAt": "2020-07-15T10:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0OTI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4ODg4OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r455488889", "bodyText": "changed to private", "author": "soul2zimate", "createdAt": "2020-07-16T03:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0OTI5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "c9ade55201ec839ceb4f6116dfcfc5bbc6ef36fa", "chunk": "diff --git a/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java b/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\nindex e882ff1552..8a8d157811 100644\n--- a/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\n+++ b/host-controller/src/main/java/org/jboss/as/domain/controller/resources/DomainDeploymentResourceDefinition.java\n\n@@ -131,7 +131,7 @@ class DomainDeploymentResourceDefinition extends DeploymentResourceDefinition {\n         registration.registerOperationHandler(addDefinition, handler);\n     }\n \n-    static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {\n+    private static class ServerGroupDomainDeploymentResourceDefinition extends DomainDeploymentResourceDefinition {\n          ServerGroupDomainDeploymentResourceDefinition(DeploymentResourceParent parent, OperationDefinition addDefinition,\n                  OperationStepHandler addHandler, OperationStepHandler removeHandler,\n                  OperationStepHandler explodeDeploymentHandler, OperationStepHandler explodedDeploymentAddContentHandler,\n"}}, {"oid": "c9ade55201ec839ceb4f6116dfcfc5bbc6ef36fa", "url": "https://github.com/wildfly/wildfly-core/commit/c9ade55201ec839ceb4f6116dfcfc5bbc6ef36fa", "message": "[WFCORE-5029] Test Case for server group deployment managed attribute value.", "committedDate": "2020-07-16T03:27:40Z", "type": "forcePushed"}, {"oid": "1fac34943dca6081ca21a9640c06cadc9ac9cad9", "url": "https://github.com/wildfly/wildfly-core/commit/1fac34943dca6081ca21a9640c06cadc9ac9cad9", "message": "[WFCORE-5029] Test Case for server group deployment managed attribute value.", "committedDate": "2020-07-16T03:30:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0MTYyMw==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r455641623", "bodyText": "Unless this is being copied from somewhere else anything new to WildFly Core should really be contributed using an Apache license.", "author": "darranl", "createdAt": "2020-07-16T09:11:46Z", "path": "testsuite/domain/src/test/java/org/jboss/as/test/integration/domain/management/cli/ServerGroupDeploymentManagedAttributeTestCase.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as", "originalCommit": "1fac34943dca6081ca21a9640c06cadc9ac9cad9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0NjY2MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4259#discussion_r455646660", "bodyText": "license updated.", "author": "soul2zimate", "createdAt": "2020-07-16T09:20:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY0MTYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "63b18aa82025ae39bd85337fd5d51daaa3050465", "chunk": "diff --git a/testsuite/domain/src/test/java/org/jboss/as/test/integration/domain/management/cli/ServerGroupDeploymentManagedAttributeTestCase.java b/testsuite/domain/src/test/java/org/jboss/as/test/integration/domain/management/cli/ServerGroupDeploymentManagedAttributeTestCase.java\ndeleted file mode 100644\nindex b6fb2a9f45..0000000000\n--- a/testsuite/domain/src/test/java/org/jboss/as/test/integration/domain/management/cli/ServerGroupDeploymentManagedAttributeTestCase.java\n+++ /dev/null\n\n@@ -1,110 +0,0 @@\n-/*\n- * JBoss, Home of Professional Open Source.\n- * Copyright 2020, Red Hat, Inc., and individual contributors\n- * as indicated by the @author tags. See the copyright.txt file in the\n- * distribution for a full listing of individual contributors.\n- *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU Lesser General Public License as\n- * published by the Free Software Foundation; either version 2.1 of\n- * the License, or (at your option) any later version.\n- *\n- * This software is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this software; if not, write to the Free\n- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n- */\n-\n-package org.jboss.as.test.integration.domain.management.cli;\n-\n-import static org.jboss.as.test.deployment.DeploymentArchiveUtils.createCliArchive;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n-\n-import java.io.File;\n-import java.util.Iterator;\n-\n-import org.jboss.as.cli.CommandContext;\n-import org.jboss.as.test.integration.domain.management.util.DomainTestSupport;\n-import org.jboss.as.test.integration.domain.suites.CLITestSuite;\n-import org.jboss.as.test.integration.management.base.AbstractCliTestBase;\n-import org.jboss.as.test.integration.management.util.CLITestUtil;\n-import org.junit.After;\n-import org.junit.AfterClass;\n-import org.junit.Before;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n-\n-/**\n- * Test case for https://issues.redhat.com/browse/WFCORE-5029\n- *\n- * @author wangc\n- *\n- */\n-public class ServerGroupDeploymentManagedAttributeTestCase extends AbstractCliTestBase {\n-\n-    protected static File testAppWar;\n-    protected static CommandContext ctx;\n-    protected static DomainTestSupport testSupport;\n-\n-    protected static String sg;\n-\n-    @BeforeClass\n-    public static void before() throws Exception {\n-        testSupport = CLITestSuite.createSupport(ServerGroupDeploymentManagedAttributeTestCase.class.getSimpleName());\n-        AbstractCliTestBase.initCLI(DomainTestSupport.masterAddress);\n-\n-        // deployment\n-        testAppWar = createCliArchive(\"testAppWar-deploy-all.war\", \"Version0\");\n-\n-        final Iterator<String> sgI = CLITestSuite.serverGroups.keySet().iterator();\n-        if (!sgI.hasNext()) {\n-            fail(\"Server groups aren't available.\");\n-        }\n-        sg = sgI.next();\n-    }\n-\n-    @AfterClass\n-    public static void after() throws Exception {\n-        ctx.handleSafe(\"deployment undeploy * --all-relevant-server-groups\");\n-\n-        CLITestSuite.stopSupport();\n-        AbstractCliTestBase.closeCLI();\n-\n-        testAppWar.delete();\n-    }\n-\n-    @Before\n-    public void beforeTest() throws Exception {\n-        ctx = CLITestUtil.getCommandContext(testSupport);\n-        ctx.connectController();\n-        ctx.handleSafe(\"deployment undeploy * --all-relevant-server-groups\");\n-    }\n-\n-    @After\n-    public void afterTest() {\n-        ctx.handleSafe(\"deployment undeploy * --all-relevant-server-groups\");\n-        ctx.terminateSession();\n-    }\n-\n-    @Test\n-    public void testManagedAttributeValue() throws Exception {\n-        cli.sendLine(\"deploy --server-groups=\" + sg + \" \" + testAppWar.getAbsolutePath());\n-        cli.sendLine(\"/server-group=\" + sg + \"/deployment=\" + testAppWar.getName() + \":read-attribute(name=managed)\");\n-        String output = cli.readOutput();\n-        assertTrue(\"Server group deployment managed value is incorrect in \" + output, output.contains(\"true\"));\n-    }\n-\n-    @Test\n-    public void testUnmanagedAttributeValue() throws Exception {\n-        cli.sendLine(\"deploy --server-groups=\" + sg + \" \" + testAppWar.getAbsolutePath() + \" --unmanaged\");\n-        cli.sendLine(\"/server-group=\" + sg + \"/deployment=\" + testAppWar.getName() + \":read-attribute(name=managed)\");\n-        String output = cli.readOutput();\n-        assertTrue(\"Server group deployment managed value is incorrect in \" + output, output.contains(\"false\"));\n-    }\n-}\n"}}, {"oid": "63b18aa82025ae39bd85337fd5d51daaa3050465", "url": "https://github.com/wildfly/wildfly-core/commit/63b18aa82025ae39bd85337fd5d51daaa3050465", "message": "[WFCORE-5029] Add propery read handler for MANAGED attribute at server group deployment level", "committedDate": "2020-07-16T09:18:40Z", "type": "commit"}, {"oid": "b0ada030007788eeae295608248f558f5ac9d9c5", "url": "https://github.com/wildfly/wildfly-core/commit/b0ada030007788eeae295608248f558f5ac9d9c5", "message": "[WFCORE-5029] Test Case for server group deployment managed attribute value.", "committedDate": "2020-07-16T09:18:40Z", "type": "commit"}, {"oid": "b0ada030007788eeae295608248f558f5ac9d9c5", "url": "https://github.com/wildfly/wildfly-core/commit/b0ada030007788eeae295608248f558f5ac9d9c5", "message": "[WFCORE-5029] Test Case for server group deployment managed attribute value.", "committedDate": "2020-07-16T09:18:40Z", "type": "forcePushed"}]}