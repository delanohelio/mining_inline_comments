{"pr_number": 4392, "pr_title": "[WFCORE-5198] Ignore deployment failures such as duplicate classes", "pr_createdAt": "2020-11-20T14:40:38Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4392", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQyMzI3Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4392#discussion_r528423276", "bodyText": "I assume what we are really trying to catch is a RuntimeException thrown by EclipseTransformer, not a java.lang.Error. So this catch should be limited to RuntimeException.\nBeyond a general code standard thing of avoiding suppressing Error, this matters because if we bypass trying again for deployments that use DeploymentAttributes.CONTENT_INPUT_STREAM_INDEX, then for those we are going to have to rethrow the exception.", "author": "bstansberry", "createdAt": "2020-11-22T23:36:27Z", "path": "server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java", "diffHunk": "@@ -219,8 +219,17 @@ private static String getRuntimeName(String name, ModelNode deployment) {\n             try {\n                 transformed = deploymentTransformer == null ? in : deploymentTransformer.transform(in, name);\n                 hash = contentRepository.addContent(transformed);\n-            } catch (IOException e) {\n+            } catch (IOException e) { // fail hard on IO error\n                 throw createFailureException(e.toString());\n+            } catch(Throwable t) {  // for other errors, return original file stream", "originalCommit": "96a053452ad2e2ef2cc9356276b69ef9ce6fd81e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQyNTI4MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4392#discussion_r528425280", "bodyText": "Also, I think this catch should be for a try block that only includes L220.  We want to react to failures in deploymentTransformer.transform, not to anything that happens with L221's contentRepository.addContent.\nCreating a method for the L220 and the try/catch would be cleaner looking.", "author": "bstansberry", "createdAt": "2020-11-22T23:52:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQyMzI3Ng=="}], "type": "inlineReview", "revised_code": {"commit": "5a232305ef725107767b7d4453957a94d8b6d406", "chunk": "diff --git a/server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java b/server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java\nindex 103bd2a132..4ff08822ab 100644\n--- a/server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java\n+++ b/server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java\n\n@@ -217,19 +218,10 @@ public class DeploymentAddHandler implements OperationStepHandler {\n         InputStream transformed = null;\n         try {\n             try {\n-                transformed = deploymentTransformer == null ? in : deploymentTransformer.transform(in, name);\n+                transformed = deploymentTransformer == null ? in : doTransformation(context, contentItemNode, name, in);\n                 hash = contentRepository.addContent(transformed);\n-            } catch (IOException e) { // fail hard on IO error\n+            } catch (IOException e) {\n                 throw createFailureException(e.toString());\n-            } catch(Throwable t) {  // for other errors, return original file stream\n-                InputStream originalInput = getInputStream(context, contentItemNode);\n-                try {\n-                    hash = contentRepository.addContent(originalInput);\n-                } catch (IOException e){ // fail hard on IO error\n-                    throw createFailureException(e.toString());\n-                } finally {\n-                    StreamUtils.safeClose(originalInput);\n-                }\n             }\n \n         } finally {\n"}}, {"oid": "5a232305ef725107767b7d4453957a94d8b6d406", "url": "https://github.com/wildfly/wildfly-core/commit/5a232305ef725107767b7d4453957a94d8b6d406", "message": "[WFCORE-5198] Ignore deployment failures such as duplicate classes for addressing  issue.\n\nSigned-off-by: Scott Marlow <smarlow@redhat.com>", "committedDate": "2020-11-25T16:35:13Z", "type": "commit"}, {"oid": "5a232305ef725107767b7d4453957a94d8b6d406", "url": "https://github.com/wildfly/wildfly-core/commit/5a232305ef725107767b7d4453957a94d8b6d406", "message": "[WFCORE-5198] Ignore deployment failures such as duplicate classes for addressing  issue.\n\nSigned-off-by: Scott Marlow <smarlow@redhat.com>", "committedDate": "2020-11-25T16:35:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc5MzY5MQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4392#discussion_r535793691", "bodyText": "I think it will be ok to retry with the untransformed deployment no matter what the exception was but it's ok to start off being more restrictive.", "author": "bstansberry", "createdAt": "2020-12-04T02:41:20Z", "path": "server/src/main/java/org/jboss/as/server/deployment/DeploymentAddHandler.java", "diffHunk": "@@ -230,6 +231,25 @@ private static String getRuntimeName(String name, ModelNode deployment) {\n         return new DeploymentHandlerUtil.ContentItem(hash);\n     }\n \n+    private InputStream doTransformation(OperationContext context, ModelNode contentItemNode, String name, InputStream in) throws IOException, OperationFailedException {\n+        try {\n+            return deploymentTransformer.transform(in, name);\n+        } catch (RuntimeException t) {\n+            // Check if the InputStream is already attached to the operation request (as per CONTENT_INPUT_STREAM_INDEX check) and ignore that case\n+            // as calling getInputStream would of returned the already partially consumed InputStream.\n+            // Also verify that the thrown exception is the specific WFCORE-5198 `Error code 3`.\n+            if (!contentItemNode.hasDefined(DeploymentAttributes.CONTENT_INPUT_STREAM_INDEX.getName()) &&\n+                    t.getCause() != null && t.getCause().getCause() != null &&\n+                    t.getCause().getCause() instanceof IOException &&\n+                    t.getCause().getCause().getMessage().contains(\"during transformation. Error code 3\")) {", "originalCommit": "5a232305ef725107767b7d4453957a94d8b6d406", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}