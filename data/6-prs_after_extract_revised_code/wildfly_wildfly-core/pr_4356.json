{"pr_number": 4356, "pr_title": " [WFCORE-2687] Addition of getCurrentOperationName() and getCurrentOperationParameter(String name) methods", "pr_createdAt": "2020-10-08T08:47:56Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4356", "timeline": [{"oid": "a08b093efef315999d6a6e91fc2970734a7fa690", "url": "https://github.com/wildfly/wildfly-core/commit/a08b093efef315999d6a6e91fc2970734a7fa690", "message": " [WFCORE-2687] Methods getCurrentOperationName() and getCurrentOperationParameter(String name) added", "committedDate": "2020-10-08T12:16:42Z", "type": "commit"}, {"oid": "a08b093efef315999d6a6e91fc2970734a7fa690", "url": "https://github.com/wildfly/wildfly-core/commit/a08b093efef315999d6a6e91fc2970734a7fa690", "message": " [WFCORE-2687] Methods getCurrentOperationName() and getCurrentOperationParameter(String name) added", "committedDate": "2020-10-08T12:16:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4NDUyNQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535784525", "bodyText": "@lvydra Please remove 'parameterName.equals(NAME) 'from this. My apologies; I should not have listed 'name' as an invalid key in the JIRA description. I've corrected the JIRA description.", "author": "bstansberry", "createdAt": "2020-12-04T02:13:38Z", "path": "controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java", "diffHunk": "@@ -541,6 +541,41 @@ public final String getCurrentAddressValue() {\n         return pa.getLastElement().getValue();\n     }\n \n+    @Override\n+    public final ModelNode getCurrentOperationName() {\n+        assert activeStep != null;\n+        ModelNode operation = activeStep.operation;\n+\n+        assert operation != null;\n+        return operation.get(NAME);\n+    }\n+\n+    @Override\n+    public final ModelNode getCurrentOperationParameter(final String parameterName) {\n+        return getCurrentOperationParameter(parameterName, true);\n+    }\n+\n+    @Override\n+    public final ModelNode getCurrentOperationParameter(final String parameterName, boolean nullable) {\n+        if (isLegalParameterName(parameterName)) {\n+            assert activeStep != null;\n+            ModelNode operation = activeStep.operation;\n+\n+            assert operation != null;\n+            if (!operation.has(parameterName) && nullable) {\n+                return null;\n+            } else {\n+                return operation.get(parameterName);\n+            }\n+        } else {\n+            throw new IllegalArgumentException(ControllerLogger.ROOT_LOGGER.invalidParameterName(parameterName));\n+        }\n+    }\n+\n+    private boolean isLegalParameterName(final String parameterName) {\n+        return !(parameterName.equals(NAME) || parameterName.equals(OP) || parameterName.equals(OP_ADDR) || parameterName.equals(OPERATION_HEADERS));", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java b/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\nindex e1a3440283..1667da3a5b 100644\n--- a/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\n\n@@ -542,12 +542,12 @@ abstract class AbstractOperationContext implements OperationContext {\n     }\n \n     @Override\n-    public final ModelNode getCurrentOperationName() {\n+    public final String getCurrentOperationName() {\n         assert activeStep != null;\n         ModelNode operation = activeStep.operation;\n \n         assert operation != null;\n-        return operation.get(NAME);\n+        return operation.get(NAME).asString();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4NjUzNQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535786535", "bodyText": "The return type here should be IllegalArgumentException, as that is what you intend to throw.", "author": "bstansberry", "createdAt": "2020-12-04T02:19:25Z", "path": "controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java", "diffHunk": "@@ -3629,4 +3629,7 @@ OperationFailedRuntimeException capabilityAlreadyRegisteredInContext(String capa\n \n     @Message(id = 476, value = \"Value for attribute '%s' is invalid: either '%s' must be specified on its own or '%s' needs to be specified with at least one of '%s' or '%s'\")\n     OperationFailedException invalidCredentialReferenceValue(String attributeName, String clearTextAttributeName, String credentialStoreAttributeName, String clearTextAttributeName1, String alias);\n+\n+    @Message(id = 477, value = \"Parameter name '%s' is invalid.\")\n+    OperationFailedException invalidParameterName(String parameterName);", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java b/controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java\nindex 37e3d19352..fa2b552758 100644\n--- a/controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java\n+++ b/controller/src/main/java/org/jboss/as/controller/logging/ControllerLogger.java\n\n@@ -3631,5 +3631,5 @@ public interface ControllerLogger extends BasicLogger {\n     OperationFailedException invalidCredentialReferenceValue(String attributeName, String clearTextAttributeName, String credentialStoreAttributeName, String clearTextAttributeName1, String alias);\n \n     @Message(id = 477, value = \"Parameter name '%s' is invalid.\")\n-    OperationFailedException invalidParameterName(String parameterName);\n+    IllegalArgumentException invalidParameterName(String parameterName);\n }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4NjgyMg==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535786822", "bodyText": "ControllerLogger.ROOT_LOGGER.invalidParameterName should return IllegalArgumentException so you can just throw what it returns without wrapping.", "author": "bstansberry", "createdAt": "2020-12-04T02:20:18Z", "path": "controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java", "diffHunk": "@@ -541,6 +541,41 @@ public final String getCurrentAddressValue() {\n         return pa.getLastElement().getValue();\n     }\n \n+    @Override\n+    public final ModelNode getCurrentOperationName() {\n+        assert activeStep != null;\n+        ModelNode operation = activeStep.operation;\n+\n+        assert operation != null;\n+        return operation.get(NAME);\n+    }\n+\n+    @Override\n+    public final ModelNode getCurrentOperationParameter(final String parameterName) {\n+        return getCurrentOperationParameter(parameterName, true);\n+    }\n+\n+    @Override\n+    public final ModelNode getCurrentOperationParameter(final String parameterName, boolean nullable) {\n+        if (isLegalParameterName(parameterName)) {\n+            assert activeStep != null;\n+            ModelNode operation = activeStep.operation;\n+\n+            assert operation != null;\n+            if (!operation.has(parameterName) && nullable) {\n+                return null;\n+            } else {\n+                return operation.get(parameterName);\n+            }\n+        } else {\n+            throw new IllegalArgumentException(ControllerLogger.ROOT_LOGGER.invalidParameterName(parameterName));", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java b/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\nindex e1a3440283..1667da3a5b 100644\n--- a/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/AbstractOperationContext.java\n\n@@ -542,12 +542,12 @@ abstract class AbstractOperationContext implements OperationContext {\n     }\n \n     @Override\n-    public final ModelNode getCurrentOperationName() {\n+    public final String getCurrentOperationName() {\n         assert activeStep != null;\n         ModelNode operation = activeStep.operation;\n \n         assert operation != null;\n-        return operation.get(NAME);\n+        return operation.get(NAME).asString();\n     }\n \n     @Override\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4ODQwMg==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535788402", "bodyText": "This should also say 'or {@code null} if the operation has no such parameter'.", "author": "bstansberry", "createdAt": "2020-12-04T02:25:01Z", "path": "controller/src/main/java/org/jboss/as/controller/OperationContext.java", "diffHunk": "@@ -418,6 +418,30 @@\n      */\n     String getCurrentAddressValue();\n \n+    /**\n+     * Get the node with current operation name\n+     *\n+     * @return operation name node\n+     */\n+    ModelNode getCurrentOperationName();\n+\n+    /**\n+     * Get parameter node by its name\n+     *\n+     * @param name of desired parameter\n+     * @return node for parameter of given name", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/OperationContext.java b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\nindex 26c0969b8b..9f0696d860 100644\n--- a/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n\n@@ -423,13 +423,13 @@ public interface OperationContext extends ExpressionResolver {\n      *\n      * @return operation name node\n      */\n-    ModelNode getCurrentOperationName();\n+    String getCurrentOperationName();\n \n     /**\n      * Get parameter node by its name\n      *\n      * @param name of desired parameter\n-     * @return node for parameter of given name\n+     * @return node for parameter of given name or {@code null} if the operation has no such parameter\n      */\n     ModelNode getCurrentOperationParameter(String name);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4ODY5Mg==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535788692", "bodyText": "This should return String. The node will always hold a string.", "author": "bstansberry", "createdAt": "2020-12-04T02:25:53Z", "path": "controller/src/main/java/org/jboss/as/controller/OperationContext.java", "diffHunk": "@@ -418,6 +418,30 @@\n      */\n     String getCurrentAddressValue();\n \n+    /**\n+     * Get the node with current operation name\n+     *\n+     * @return operation name node\n+     */\n+    ModelNode getCurrentOperationName();", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/OperationContext.java b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\nindex 26c0969b8b..9f0696d860 100644\n--- a/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n\n@@ -423,13 +423,13 @@ public interface OperationContext extends ExpressionResolver {\n      *\n      * @return operation name node\n      */\n-    ModelNode getCurrentOperationName();\n+    String getCurrentOperationName();\n \n     /**\n      * Get parameter node by its name\n      *\n      * @param name of desired parameter\n-     * @return node for parameter of given name\n+     * @return node for parameter of given name or {@code null} if the operation has no such parameter\n      */\n     ModelNode getCurrentOperationParameter(String name);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc5MDg0OA==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535790848", "bodyText": "whether the return value can be null if the operation has no parameter with the given name", "author": "bstansberry", "createdAt": "2020-12-04T02:32:19Z", "path": "controller/src/main/java/org/jboss/as/controller/OperationContext.java", "diffHunk": "@@ -418,6 +418,30 @@\n      */\n     String getCurrentAddressValue();\n \n+    /**\n+     * Get the node with current operation name\n+     *\n+     * @return operation name node\n+     */\n+    ModelNode getCurrentOperationName();\n+\n+    /**\n+     * Get parameter node by its name\n+     *\n+     * @param name of desired parameter\n+     * @return node for parameter of given name\n+     */\n+    ModelNode getCurrentOperationParameter(String name);\n+\n+    /**\n+     * Get parameter node by its name\n+     *\n+     * @param name of desired parameter\n+     * @param nullable whether return value can be null", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/OperationContext.java b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\nindex 26c0969b8b..9f0696d860 100644\n--- a/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n\n@@ -423,13 +423,13 @@ public interface OperationContext extends ExpressionResolver {\n      *\n      * @return operation name node\n      */\n-    ModelNode getCurrentOperationName();\n+    String getCurrentOperationName();\n \n     /**\n      * Get parameter node by its name\n      *\n      * @param name of desired parameter\n-     * @return node for parameter of given name\n+     * @return node for parameter of given name or {@code null} if the operation has no such parameter\n      */\n     ModelNode getCurrentOperationParameter(String name);\n \n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc5MTEwNw==", "url": "https://github.com/wildfly/wildfly-core/pull/4356#discussion_r535791107", "bodyText": "node for the parameter of the given name, or {@code null} if {@code nullable} is {@code true} and the operation has no parameter with the given name", "author": "bstansberry", "createdAt": "2020-12-04T02:33:10Z", "path": "controller/src/main/java/org/jboss/as/controller/OperationContext.java", "diffHunk": "@@ -418,6 +418,30 @@\n      */\n     String getCurrentAddressValue();\n \n+    /**\n+     * Get the node with current operation name\n+     *\n+     * @return operation name node\n+     */\n+    ModelNode getCurrentOperationName();\n+\n+    /**\n+     * Get parameter node by its name\n+     *\n+     * @param name of desired parameter\n+     * @return node for parameter of given name\n+     */\n+    ModelNode getCurrentOperationParameter(String name);\n+\n+    /**\n+     * Get parameter node by its name\n+     *\n+     * @param name of desired parameter\n+     * @param nullable whether return value can be null\n+     * @return node for parameter of given name", "originalCommit": "a08b093efef315999d6a6e91fc2970734a7fa690", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "chunk": "diff --git a/controller/src/main/java/org/jboss/as/controller/OperationContext.java b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\nindex 26c0969b8b..9f0696d860 100644\n--- a/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n+++ b/controller/src/main/java/org/jboss/as/controller/OperationContext.java\n\n@@ -423,13 +423,13 @@ public interface OperationContext extends ExpressionResolver {\n      *\n      * @return operation name node\n      */\n-    ModelNode getCurrentOperationName();\n+    String getCurrentOperationName();\n \n     /**\n      * Get parameter node by its name\n      *\n      * @param name of desired parameter\n-     * @return node for parameter of given name\n+     * @return node for parameter of given name or {@code null} if the operation has no such parameter\n      */\n     ModelNode getCurrentOperationParameter(String name);\n \n"}}, {"oid": "f888b11b27efd4bc108c3efe9295d2a2e3324691", "url": "https://github.com/wildfly/wildfly-core/commit/f888b11b27efd4bc108c3efe9295d2a2e3324691", "message": "[WFCORE-2687] Requested changes", "committedDate": "2020-12-04T12:19:04Z", "type": "commit"}]}