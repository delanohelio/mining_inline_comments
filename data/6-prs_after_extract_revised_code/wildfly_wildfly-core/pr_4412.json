{"pr_number": 4412, "pr_title": "[WFCORE-5170] Certificate Revocation Lists", "pr_createdAt": "2020-12-03T19:49:35Z", "pr_url": "https://github.com/wildfly/wildfly-core/pull/4412", "timeline": [{"oid": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "url": "https://github.com/wildfly/wildfly-core/commit/9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2020-12-04T15:03:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1MDk0NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537650945", "bodyText": "Just so it's clear, it would be good to add a comment here that indicates that if we reach this point, then we know the attribute was not rejected so CERTIFICATE_REVOCATION_LISTS can only have at most one CRL.", "author": "fjuma", "createdAt": "2020-12-07T16:37:26Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -408,6 +415,24 @@ protected void convertAttribute(PathAddress address, String attributeName, Model\n         }\n     };\n \n+    private static final AttributeConverter CERTIFICATE_REVOCATION_LIST_CONVERTER = new AttributeConverter.DefaultAttributeConverter() {\n+        @Override\n+        protected void convertAttribute(PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context) {\n+            if (attributeValue.isDefined()) {", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "597c90b6d810dafdc15c2fb72ee30e32f94ea826", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\nindex 27da0bcf77..fbdd71dc9f 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n\n@@ -418,6 +425,7 @@ public final class ElytronSubsystemTransformers implements ExtensionTransformerR\n     private static final AttributeConverter CERTIFICATE_REVOCATION_LIST_CONVERTER = new AttributeConverter.DefaultAttributeConverter() {\n         @Override\n         protected void convertAttribute(PathAddress address, String attributeName, ModelNode attributeValue, TransformationContext context) {\n+            // If we reached this point, we know the attribute was not rejected so CERTIFICATE_REVOCATION_LISTS can have at most one CRL.\n             if (attributeValue.isDefined()) {\n                 List<ModelNode> crls = attributeValue.asListOrEmpty();\n                 if (crls.size() == 1) {\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1MjQ0Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537652446", "bodyText": "s/authorization realm/certificate revocation list", "author": "fjuma", "createdAt": "2020-12-07T16:39:26Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -449,6 +474,23 @@ public String getRejectionLogMessage(Map<String, ModelNode> attributes) {\n         }\n     };\n \n+    private static final RejectAttributeChecker REJECT_IF_MULTIPLE_CERTIFICATE_REVOCATION_LISTS = new RejectAttributeChecker.DefaultRejectAttributeChecker() {\n+\n+        @Override\n+        protected boolean rejectAttribute(PathAddress address, String attributeName, ModelNode value, TransformationContext context) {\n+            // reject if there is more than one authorization realm specified", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e77fdd0b619f76a0201b5131b8152fd55bc6abc7", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\nindex 27da0bcf77..667578bc20 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n\n@@ -478,7 +486,7 @@ public final class ElytronSubsystemTransformers implements ExtensionTransformerR\n \n         @Override\n         protected boolean rejectAttribute(PathAddress address, String attributeName, ModelNode value, TransformationContext context) {\n-            // reject if there is more than one authorization realm specified\n+            // reject if there is more than one certificate revocation list specified\n             if (value.isDefined()) {\n                 List<ModelNode> values = value.asList();\n                 return (values.size() > 1);\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NDA0MA==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537654040", "bodyText": "The try/catch here should be removed.", "author": "fjuma", "createdAt": "2020-12-07T16:41:38Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java", "diffHunk": "@@ -679,9 +694,14 @@ static ResourceDefinition getTrustManagerDefinition() {\n                 ModelNode ocspNode = OCSP.resolveModelAttribute(context, model);\n                 boolean softFail = SOFT_FAIL.resolveModelAttribute(context, model).asBoolean();\n                 Integer maxCertPath = MAXIMUM_CERT_PATH.resolveModelAttribute(context, model).asIntOrNull();\n+                ModelNode multipleCrlsNode = CERTIFICATE_REVOCATION_LISTS.resolveModelAttribute(context, model);\n \n-                if (crlNode.isDefined() || ocspNode.isDefined()) {\n-                    return createX509RevocationTrustManager(serviceBuilder, context, algorithm, providerName, providersInjector, keyStoreInjector, softFail, crlNode, ocspNode, maxCertPath, aliasFilter);\n+                if (crlNode.isDefined() || ocspNode.isDefined() || multipleCrlsNode.isDefined()) {\n+                    try {\n+                        return createX509RevocationTrustManager(serviceBuilder, context, algorithm, providerName, providersInjector, keyStoreInjector, softFail, crlNode, multipleCrlsNode, ocspNode, maxCertPath, aliasFilter);\n+                    } catch (StartException e) {\n+                        e.printStackTrace();", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "40ee71e8e215b9e019f38b707f27d0db01ce8ac7", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java b/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\nindex 5ba45cb946..108088c1ca 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\n\n@@ -697,11 +697,7 @@ class SSLDefinitions {\n                 ModelNode multipleCrlsNode = CERTIFICATE_REVOCATION_LISTS.resolveModelAttribute(context, model);\n \n                 if (crlNode.isDefined() || ocspNode.isDefined() || multipleCrlsNode.isDefined()) {\n-                    try {\n                         return createX509RevocationTrustManager(serviceBuilder, context, algorithm, providerName, providersInjector, keyStoreInjector, softFail, crlNode, multipleCrlsNode, ocspNode, maxCertPath, aliasFilter);\n-                    } catch (StartException e) {\n-                        e.printStackTrace();\n-                    }\n                 }\n \n                 DelegatingTrustManager delegatingTrustManager = new DelegatingTrustManager();\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY4Mzc0NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537683745", "bodyText": "These lines should be removed and the ones above should be added back.", "author": "fjuma", "createdAt": "2020-12-07T17:20:06Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java", "diffHunk": "@@ -840,10 +881,10 @@ private TrustManager createReloadableX509CRLTrustManager(final String crlPath, f\n                     void reload() {\n                         if (reloading.compareAndSet(false, true)) {\n                             try {\n-                                builder.setCrlStream(new FileInputStream(resolveFileLocation(crlPath, crlRelativeTo, pathManagerInjector)));\n+                                builder.setCrlStreams(getCrlStreams(crlFiles));\n                                 delegate = builder.build();\n-                            } catch (FileNotFoundException cause) {\n-                                throw ElytronSubsystemMessages.ROOT_LOGGER.unableToReloadCRL(cause);\n+                            } catch (StartException startException) {\n+                                startException.printStackTrace();", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "40ee71e8e215b9e019f38b707f27d0db01ce8ac7", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java b/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\nindex 5ba45cb946..108088c1ca 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/SSLDefinitions.java\n\n@@ -883,8 +879,8 @@ class SSLDefinitions {\n                             try {\n                                 builder.setCrlStreams(getCrlStreams(crlFiles));\n                                 delegate = builder.build();\n-                            } catch (StartException startException) {\n-                                startException.printStackTrace();\n+                            } catch (StartException cause) {\n+                                throw ElytronSubsystemMessages.ROOT_LOGGER.unableToReloadCRL(cause);\n                             } finally {\n                                 reloading.lazySet(false);\n                             }\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMDE2OQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537700169", "bodyText": "Since you're adding a new attribute, the existing tlsParser variable should first be copy/pasted to a new variable and then that new variable should be updated to reference your new trust manager parser. The Elytron subsystem parser should also be updated to make use of the new TLS parser variable.\nJust a heads up that this will also need to be ported to the next Elytron subsystem schema version later.", "author": "fjuma", "createdAt": "2020-12-07T17:42:56Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/TlsParser.java", "diffHunk": "@@ -326,7 +340,7 @@ public void marshallSingleElement(AttributeDefinition attribute, ModelNode mappi\n                     .addChild(filteringKeyStoreParser)\n             )\n             .addChild(keyManagerParser_12_0)\n-            .addChild(trustManagerParser)\n+            .addChild(trustManagerParser_12_0) // new certificate-revocation-lists attribute", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTMxODg5NQ==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r555318895", "bodyText": "Just a reminder that this part can now be updated.", "author": "fjuma", "createdAt": "2021-01-11T20:30:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwMDE2OQ=="}], "type": "inlineReview", "revised_code": {"commit": "597c90b6d810dafdc15c2fb72ee30e32f94ea826", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/TlsParser.java b/elytron/src/main/java/org/wildfly/extension/elytron/TlsParser.java\nindex ab93f02c7d..1f03f22f5f 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/TlsParser.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/TlsParser.java\n\n@@ -340,7 +340,22 @@ class TlsParser {\n                     .addChild(filteringKeyStoreParser)\n             )\n             .addChild(keyManagerParser_12_0)\n-            .addChild(trustManagerParser_12_0) // new certificate-revocation-lists attribute\n+            .addChild(trustManagerParser)\n+            .addChild(serverSslContextParser_9_0)\n+            .addChild(clientSslContextParser_9_0)\n+            .addChild(certificateAuthorityParser)\n+            .addChild(certificateAuthorityAccountParser)\n+            .addChild(serverSslSniContextParser)\n+            .build();\n+\n+    final PersistentResourceXMLDescription tlsParser_13_0 = decorator(TLS)\n+            .addChild(decorator(KEY_STORES)\n+                    .addChild(keyStoreParser)\n+                    .addChild(ldapKeyStoreParser)\n+                    .addChild(filteringKeyStoreParser)\n+            )\n+            .addChild(keyManagerParser_12_0)\n+            .addChild(trustManagerParser_13_0) // new certificate-revocation-lists attribute\n             .addChild(serverSslContextParser_9_0)\n             .addChild(clientSslContextParser_9_0)\n             .addChild(certificateAuthorityParser)\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwNDI0Ng==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r537704246", "bodyText": "I think it would be good to add some tests cases here to assert that the configured CRLs actually get used successfully.", "author": "fjuma", "createdAt": "2020-12-07T17:48:41Z", "path": "elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java", "diffHunk": "@@ -471,6 +494,21 @@ public void testRevocationListsDp() throws Throwable {\n         Assert.assertTrue(services.executeOperation(operation).get(OUTCOME).asString().equals(FAILED)); // not realoadable\n     }\n \n+    /**\n+     * Tests distribution points work using certificate-revocation-lists attribute\n+     */\n+    @Test\n+    public void testCertificateRevocationListsDp() throws Throwable {\n+        ServiceName serviceName = Capabilities.TRUST_MANAGER_RUNTIME_CAPABILITY.getCapabilityServiceName(\"trust-with-crls-dp\");\n+        TrustManager trustManager = (TrustManager) services.getContainer().getService(serviceName).getValue();\n+        Assert.assertNotNull(trustManager);\n+\n+        ModelNode operation = new ModelNode();\n+        operation.get(ClientConstants.OP_ADDR).add(\"subsystem\", \"elytron\").add(ElytronDescriptionConstants.TRUST_MANAGER, \"trust-with-crls-dp\");\n+        operation.get(ClientConstants.OP).set(ElytronDescriptionConstants.RELOAD_CERTIFICATE_REVOCATION_LIST);\n+        Assert.assertTrue(services.executeOperation(operation).get(OUTCOME).asString().equals(FAILED)); // not realoadable\n+    }\n+", "originalCommit": "9ee387dbd7ef8f2f54a269fbb61fb2802b6e963f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTg5MjA1NA==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r555892054", "bodyText": "I added a one way test to ensure the CRLs are being used correctly.", "author": "SoniaZaldana", "createdAt": "2021-01-12T16:10:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcwNDI0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "714733f3dfc8a36ce71dff388bd51429cfbf497c", "chunk": "diff --git a/elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java b/elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java\nindex 4489676d93..cc7924a194 100644\n--- a/elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java\n+++ b/elytron/src/test/java/org/wildfly/extension/elytron/TlsTestCase.java\n\n@@ -494,19 +472,17 @@ public class TlsTestCase extends AbstractSubsystemTest {\n         Assert.assertTrue(services.executeOperation(operation).get(OUTCOME).asString().equals(FAILED)); // not realoadable\n     }\n \n+\n     /**\n-     * Tests distribution points work using certificate-revocation-lists attribute\n+     * Verifies accepted issuers are sent when CRLs are configured.\n+     * Verifies ELY-2057 (No acceptedIssuers sent when CRLs are configured) is resolved.\n      */\n     @Test\n-    public void testCertificateRevocationListsDp() throws Throwable {\n-        ServiceName serviceName = Capabilities.TRUST_MANAGER_RUNTIME_CAPABILITY.getCapabilityServiceName(\"trust-with-crls-dp\");\n+    public void testAcceptedIssuersWithCRLs() throws Throwable {\n+        ServiceName serviceName = Capabilities.TRUST_MANAGER_RUNTIME_CAPABILITY.getCapabilityServiceName(\"trust-with-crl\");\n         TrustManager trustManager = (TrustManager) services.getContainer().getService(serviceName).getValue();\n         Assert.assertNotNull(trustManager);\n-\n-        ModelNode operation = new ModelNode();\n-        operation.get(ClientConstants.OP_ADDR).add(\"subsystem\", \"elytron\").add(ElytronDescriptionConstants.TRUST_MANAGER, \"trust-with-crls-dp\");\n-        operation.get(ClientConstants.OP).set(ElytronDescriptionConstants.RELOAD_CERTIFICATE_REVOCATION_LIST);\n-        Assert.assertTrue(services.executeOperation(operation).get(OUTCOME).asString().equals(FAILED)); // not realoadable\n+        Assert.assertTrue(((X509TrustManager) trustManager).getAcceptedIssuers().length > 0);\n     }\n \n     @Test\n"}}, {"oid": "ce9d79744a73d00b10b37ba3df34570b04d86bce", "url": "https://github.com/wildfly/wildfly-core/commit/ce9d79744a73d00b10b37ba3df34570b04d86bce", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-01-11T19:41:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTMxODIzNw==", "url": "https://github.com/wildfly/wildfly-core/pull/4412#discussion_r555318237", "bodyText": "This should be moved to the new from13 method.", "author": "fjuma", "createdAt": "2021-01-11T20:28:44Z", "path": "elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java", "diffHunk": "@@ -133,6 +134,12 @@ private static void from12(ChainedTransformationDescriptionBuilder chainedBuilde\n                 .setDiscard(DiscardAttributeChecker.UNDEFINED, SSLDefinitions.GENERATE_SELF_SIGNED_CERTIFICATE_HOST)\n                 .end();\n \n+        builder.addChildResource(PathElement.pathElement(ElytronDescriptionConstants.TRUST_MANAGER))", "originalCommit": "ce9d79744a73d00b10b37ba3df34570b04d86bce", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "597c90b6d810dafdc15c2fb72ee30e32f94ea826", "chunk": "diff --git a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\nindex cd407f47c2..fbdd71dc9f 100644\n--- a/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n+++ b/elytron/src/main/java/org/wildfly/extension/elytron/ElytronSubsystemTransformers.java\n\n@@ -133,13 +138,6 @@ public final class ElytronSubsystemTransformers implements ExtensionTransformerR\n                 .addRejectCheck(RejectAttributeChecker.DEFINED, ElytronDescriptionConstants.GENERATE_SELF_SIGNED_CERTIFICATE_HOST)\n                 .setDiscard(DiscardAttributeChecker.UNDEFINED, SSLDefinitions.GENERATE_SELF_SIGNED_CERTIFICATE_HOST)\n                 .end();\n-\n-        builder.addChildResource(PathElement.pathElement(ElytronDescriptionConstants.TRUST_MANAGER))\n-                .getAttributeBuilder()\n-                .addRejectCheck(REJECT_IF_MULTIPLE_CERTIFICATE_REVOCATION_LISTS, ElytronDescriptionConstants.CERTIFICATE_REVOCATION_LISTS)\n-                .addRename(ElytronDescriptionConstants.CERTIFICATE_REVOCATION_LISTS, ElytronDescriptionConstants.CERTIFICATE_REVOCATION_LIST)\n-                .setValueConverter(CERTIFICATE_REVOCATION_LIST_CONVERTER, ElytronDescriptionConstants.CERTIFICATE_REVOCATION_LISTS)\n-                .end();\n         builder.rejectChildResource(PathElement.pathElement(ElytronDescriptionConstants.CASE_PRINCIPAL_TRANSFORMER));\n     }\n \n"}}, {"oid": "597c90b6d810dafdc15c2fb72ee30e32f94ea826", "url": "https://github.com/wildfly/wildfly-core/commit/597c90b6d810dafdc15c2fb72ee30e32f94ea826", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-01-12T16:03:48Z", "type": "forcePushed"}, {"oid": "e77fdd0b619f76a0201b5131b8152fd55bc6abc7", "url": "https://github.com/wildfly/wildfly-core/commit/e77fdd0b619f76a0201b5131b8152fd55bc6abc7", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-01-12T16:08:15Z", "type": "forcePushed"}, {"oid": "40ee71e8e215b9e019f38b707f27d0db01ce8ac7", "url": "https://github.com/wildfly/wildfly-core/commit/40ee71e8e215b9e019f38b707f27d0db01ce8ac7", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-01-12T16:25:00Z", "type": "forcePushed"}, {"oid": "d21b85e88d71399dfad9511bf6935e424c426579", "url": "https://github.com/wildfly/wildfly-core/commit/d21b85e88d71399dfad9511bf6935e424c426579", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-02-08T16:14:43Z", "type": "forcePushed"}, {"oid": "714733f3dfc8a36ce71dff388bd51429cfbf497c", "url": "https://github.com/wildfly/wildfly-core/commit/714733f3dfc8a36ce71dff388bd51429cfbf497c", "message": "[WFCORE-5341] Add version 14 of the WildFly Elytron model and schema.", "committedDate": "2021-03-17T16:17:41Z", "type": "commit"}, {"oid": "daac394bcd5d17752cbce79b53f9b3648029f4cd", "url": "https://github.com/wildfly/wildfly-core/commit/daac394bcd5d17752cbce79b53f9b3648029f4cd", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-03-18T15:52:39Z", "type": "forcePushed"}, {"oid": "fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "url": "https://github.com/wildfly/wildfly-core/commit/fc3bf9ebae5d2aaca1b3b3f90e4e647706ff7dd4", "message": "[WFCORE-5341] Merge latest changes from \"master\".", "committedDate": "2021-03-22T15:53:02Z", "type": "commit"}, {"oid": "555a310e5ba411d7e1bda783bc145bc6dc5a3ca9", "url": "https://github.com/wildfly/wildfly-core/commit/555a310e5ba411d7e1bda783bc145bc6dc5a3ca9", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-04-08T18:42:02Z", "type": "commit"}, {"oid": "555a310e5ba411d7e1bda783bc145bc6dc5a3ca9", "url": "https://github.com/wildfly/wildfly-core/commit/555a310e5ba411d7e1bda783bc145bc6dc5a3ca9", "message": "[WFCORE-5170] Certificate Revocation Lists", "committedDate": "2021-04-08T18:42:02Z", "type": "forcePushed"}]}