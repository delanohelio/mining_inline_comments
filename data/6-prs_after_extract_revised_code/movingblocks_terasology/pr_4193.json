{"pr_number": 4193, "pr_title": "feat(JOML): migrate BlockItemSystem and Physics#scanArea", "pr_createdAt": "2020-10-11T16:44:34Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4193", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIwMjI2Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4193#discussion_r503202263", "bodyText": "Seems there must be -=", "author": "DarkWeird", "createdAt": "2020-10-12T10:36:08Z", "path": "engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java", "diffHunk": "@@ -189,30 +190,33 @@ private boolean canPlaceBlock(Block block, Vector3i targetBlock, Vector3i blockP\n         // Prevent players from placing blocks inside their bounding boxes\n         if (!block.isPenetrable()) {\n             Physics physics = CoreRegistry.get(Physics.class);\n-            AABB blockBounds = block.getBounds(blockPos);\n-            Vector3f min = new Vector3f(blockBounds.getMin());\n-            Vector3f max = new Vector3f(blockBounds.getMax());\n+            AABBf blockBounds = JomlUtil.from(block.getBounds(JomlUtil.from(blockPos)));\n \n             /**\n              * Characters can enter other solid objects/blocks for certain amount. This is does to detect collsion\n              * start and end without noise. So if the user walked as close to a block as possible it is only natural\n              * to let it place a block exactly above it even if that technically would mean a collision start.\n              */\n-            min.x += KinematicCharacterMover.HORIZONTAL_PENETRATION;\n-            max.x -= KinematicCharacterMover.HORIZONTAL_PENETRATION;\n-            min.y += KinematicCharacterMover.VERTICAL_PENETRATION;\n-            max.y -= KinematicCharacterMover.VERTICAL_PENETRATION;\n-            min.z += KinematicCharacterMover.HORIZONTAL_PENETRATION;\n-            max.z -= KinematicCharacterMover.HORIZONTAL_PENETRATION;\n+            blockBounds.minX += KinematicCharacterMover.HORIZONTAL_PENETRATION;\n+            blockBounds.maxX -= KinematicCharacterMover.HORIZONTAL_PENETRATION;\n+            blockBounds.minY += KinematicCharacterMover.VERTICAL_PENETRATION;\n+            blockBounds.maxY -= KinematicCharacterMover.VERTICAL_PENETRATION;\n+            blockBounds.minZ += KinematicCharacterMover.HORIZONTAL_PENETRATION;\n+            blockBounds.maxZ -= KinematicCharacterMover.HORIZONTAL_PENETRATION;\n \n             /*\n              * Calculations aren't exact and in the corner cases it is better to let the user place the block.\n              */\n-            min.add(ADDITIONAL_ALLOWED_PENETRATION, ADDITIONAL_ALLOWED_PENETRATION, ADDITIONAL_ALLOWED_PENETRATION);\n-            max.sub(ADDITIONAL_ALLOWED_PENETRATION, ADDITIONAL_ALLOWED_PENETRATION, ADDITIONAL_ALLOWED_PENETRATION);\n+            blockBounds.minX += ADDITIONAL_ALLOWED_PENETRATION;", "originalCommit": "541b46e3cff8bd92623245183a2f82b48503e206", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d9c293ba1f7da13a73c396ab77f235270aff310d", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java b/engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java\nindex 7033239e5..fadd61211 100644\n--- a/engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java\n+++ b/engine/src/main/java/org/terasology/world/block/items/BlockItemSystem.java\n\n@@ -190,7 +190,7 @@ private boolean canPlaceBlock(Block block, Vector3i targetBlock, Vector3i blockP\n         // Prevent players from placing blocks inside their bounding boxes\n         if (!block.isPenetrable()) {\n             Physics physics = CoreRegistry.get(Physics.class);\n-            AABBf blockBounds = JomlUtil.from(block.getBounds(JomlUtil.from(blockPos)));\n+            AABBf blockBounds = block.getBounds(blockPos);\n \n             /**\n              * Characters can enter other solid objects/blocks for certain amount. This is does to detect collsion\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIwMzQxMA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4193#discussion_r503203410", "bodyText": "Duplication with old method.", "author": "DarkWeird", "createdAt": "2020-10-12T10:38:27Z", "path": "engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java", "diffHunk": "@@ -200,6 +206,30 @@ public short combineGroups(Iterable<CollisionGroup> groups) {\n         return result;\n     }\n \n+    @Override\n+    public List<EntityRef> scanArea(AABBf area, Iterable<CollisionGroup> collisionFilter) {", "originalCommit": "541b46e3cff8bd92623245183a2f82b48503e206", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "63074684537db005f40d93d797ffa2542c3f1e11", "chunk": "diff --git a/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java b/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\nindex 59d67524f..33577aea2 100644\n--- a/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\n+++ b/engine/src/main/java/org/terasology/physics/bullet/BulletPhysics.java\n\n@@ -186,24 +186,7 @@ public short combineGroups(Iterable<CollisionGroup> groups) {\n \n     @Override\n     public List<EntityRef> scanArea(AABB area, Iterable<CollisionGroup> collisionFilter) {\n-        // TODO: Add the aabbTest method from newer versions of bullet to TeraBullet, use that instead\n-\n-        btBoxShape shape = new btBoxShape(JomlUtil.from(area.getExtents()));\n-        btGhostObject scanObject = createCollider(JomlUtil.from(area.getCenter()), shape,StandardCollisionGroup.SENSOR.getFlag(),\n-                combineGroups(collisionFilter), btCollisionObject.CollisionFlags.CF_NO_CONTACT_RESPONSE);\n-\n-        // This in particular is overkill\n-        broadphase.calculateOverlappingPairs(dispatcher);\n-        List<EntityRef> result = Lists.newArrayList();\n-        for (int i = 0; i < scanObject.getNumOverlappingObjects(); ++i) {\n-            btCollisionObject other = scanObject.getOverlappingObject(i);\n-            Object userObj = other.getUserPointer();\n-            if (userObj instanceof EntityRef) {\n-                result.add((EntityRef) userObj);\n-            }\n-        }\n-        removeCollider(scanObject);\n-        return result;\n+        return scanArea(JomlUtil.from(area), collisionFilter);\n     }\n \n     @Override\n"}}, {"oid": "d9c293ba1f7da13a73c396ab77f235270aff310d", "url": "https://github.com/MovingBlocks/Terasology/commit/d9c293ba1f7da13a73c396ab77f235270aff310d", "message": "feat(JOML): migrate BlockItemSystem and Physics#scanArea", "committedDate": "2020-10-26T02:33:37Z", "type": "commit"}, {"oid": "63074684537db005f40d93d797ffa2542c3f1e11", "url": "https://github.com/MovingBlocks/Terasology/commit/63074684537db005f40d93d797ffa2542c3f1e11", "message": "cleanup", "committedDate": "2020-10-26T02:33:37Z", "type": "commit"}, {"oid": "63074684537db005f40d93d797ffa2542c3f1e11", "url": "https://github.com/MovingBlocks/Terasology/commit/63074684537db005f40d93d797ffa2542c3f1e11", "message": "cleanup", "committedDate": "2020-10-26T02:33:37Z", "type": "forcePushed"}, {"oid": "9a1f53c3c735c1e6d91e776b906ea1ce253af8ce", "url": "https://github.com/MovingBlocks/Terasology/commit/9a1f53c3c735c1e6d91e776b906ea1ce253af8ce", "message": "Merge branch 'develop' into feat/joml-migrate-blockitem-system", "committedDate": "2020-10-31T06:52:14Z", "type": "commit"}]}