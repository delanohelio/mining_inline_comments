{"pr_number": 4237, "pr_title": "Add ElevationFacet and SurfacesFacet to replace SurfaceHeightFacet.", "pr_createdAt": "2020-11-07T14:52:54Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4237", "timeline": [{"oid": "de5517db1dd7396925f173d81beae55f02b15684", "url": "https://github.com/MovingBlocks/Terasology/commit/de5517db1dd7396925f173d81beae55f02b15684", "message": "Add ElevationFacet and SurfacesFacet to replace SurfaceHeightFacet.\n\nSplit the SurfaceHeightFacet in two, with each part to be used for\nsomewhat different purposes, to improve the flexibility of the\nworld generator, particularly regarding multiple surfaces in the\nsame vertical column (e.g. overhangs). Leave SurfaceHeightFacet\npresent but deprecated, so that modules don't have to all transition\nat once.", "committedDate": "2020-11-07T14:38:08Z", "type": "commit"}, {"oid": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "url": "https://github.com/MovingBlocks/Terasology/commit/e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "message": "Merge branch 'develop' into overhangs", "committedDate": "2020-11-10T15:23:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NzI1Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520747253", "bodyText": "Why the old header in a new file?", "author": "jdrueckert", "createdAt": "2020-11-10T17:37:47Z", "path": "engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2014 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "originalCommit": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc2ODk3MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520768970", "bodyText": "Oh, I just copied another file to use as the basis for these. I'll fix that.", "author": "4Denthusiast", "createdAt": "2020-11-10T18:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0NzI1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "a26f1221db9323ffbc5c25393a4ccbb4f090907c", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java b/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\nindex 723d87cc4..8ac56054b 100644\n--- a/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\n+++ b/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\n\n@@ -1,18 +1,6 @@\n-/*\n- * Copyright 2014 MovingBlocks\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n package org.terasology.world.generation.facets;\n \n import org.terasology.math.Region3i;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0ODQ5Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520748493", "bodyText": "see above", "author": "jdrueckert", "createdAt": "2020-11-10T17:39:40Z", "path": "engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2014 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "originalCommit": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a26f1221db9323ffbc5c25393a4ccbb4f090907c", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java b/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\nindex b596ec0c0..4cb5ab742 100644\n--- a/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\n+++ b/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\n\n@@ -1,18 +1,6 @@\n-/*\n- * Copyright 2014 MovingBlocks\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n package org.terasology.world.generation.facets;\n \n import org.joml.Vector3ic;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc1NTY3MQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520755671", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            }", "author": "jdrueckert", "createdAt": "2020-11-10T17:50:37Z", "path": "engine/src/main/java/org/terasology/world/generation/facets/base/VerticallySparseBooleanFacet3D.java", "diffHunk": "@@ -0,0 +1,107 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.world.generation.facets.base;\n+\n+import org.joml.Vector3i;\n+import org.joml.Vector3ic;\n+import org.terasology.math.JomlUtil;\n+import org.terasology.math.Region3i;\n+import org.terasology.world.generation.Border3D;\n+import org.terasology.world.generation.WorldFacet3D;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * Sparse facet data optimised for looking up what positions are marked within\n+ * a vertical column.\n+ */\n+public class VerticallySparseBooleanFacet3D implements WorldFacet3D {\n+\n+    private Region3i worldRegion;\n+    private Region3i relativeRegion;\n+    private Set<Integer>[] data;\n+\n+    public VerticallySparseBooleanFacet3D(Region3i targetRegion, Border3D border) {\n+        worldRegion = border.expandTo3D(targetRegion);\n+        relativeRegion = border.expandTo3D(targetRegion.size());\n+        data = new Set[worldRegion.sizeX() * worldRegion.sizeZ()];\n+        for (int i = 0; i < data.length; i++) {\n+            data[i] = new HashSet<Integer>();\n+        }\n+    }\n+\n+    @Override\n+    public Region3i getWorldRegion() {\n+        return worldRegion;\n+    }\n+\n+    @Override\n+    public Region3i getRelativeRegion() {\n+        return relativeRegion;\n+    }\n+\n+    public boolean get(int x, int y, int z) {\n+        return get(new Vector3i(x, y, z));\n+    }\n+\n+    public boolean get(Vector3ic pos) {\n+        Set<Integer> column = data[getRelativeIndex(pos)];\n+        return column.contains(pos.y() + worldRegion.minY() - relativeRegion.minY());\n+    }\n+\n+    public void set(int x, int y, int z, boolean value) {\n+        set(new Vector3i(x, y, z), value);\n+    }\n+\n+    public void set(Vector3ic pos, boolean value) {\n+        Set<Integer> column = data[getRelativeIndex(pos)];\n+        int y = pos.y() + worldRegion.minY() - relativeRegion.minY();\n+        if (value) {\n+            column.add(y);\n+        } else {\n+            column.remove(y);\n+        }\n+    }\n+\n+    public boolean getWorld(int x, int y, int z) {\n+        return getWorld(new Vector3i(x, y, z));\n+    }\n+\n+    public boolean getWorld(Vector3ic pos) {\n+        Set<Integer> column = data[getWorldIndex(pos)];\n+        return column.contains(pos.y());\n+    }\n+\n+    public void setWorld(int x, int y, int z, boolean value) {\n+        setWorld(new Vector3i(x, y, z), value);\n+    }\n+\n+    public void setWorld(Vector3ic pos, boolean value) {\n+        Set<Integer> column = data[getWorldIndex(pos)];\n+        if (value) {\n+            column.add(pos.y());\n+        } else {\n+            column.remove(pos.y());\n+        }\n+    }\n+\n+    public Set<Integer> getWorldColumn(int x, int z) {\n+        return data[getWorldIndex(new Vector3i(x, worldRegion.minY(), z))];\n+    }\n+\n+    protected final int getRelativeIndex(Vector3ic pos) {\n+        if (!relativeRegion.encompasses(JomlUtil.from(pos))) {\n+            throw new IllegalArgumentException(String.format(\"Out of bounds: %s for region %s\", pos.toString(), relativeRegion.toString()));\n+        }\n+        return pos.x() - relativeRegion.minX() + relativeRegion.sizeX() * (pos.z() - relativeRegion.minZ());\n+    }\n+\n+    protected final int getWorldIndex(Vector3ic pos) {\n+        if (!worldRegion.encompasses(JomlUtil.from(pos))) {\n+            throw new IllegalArgumentException(String.format(\"Out of bounds: %s for region %s\", pos.toString(), worldRegion.toString()));\n+        }\n+        return pos.x() - worldRegion.minX() + worldRegion.sizeX() * (pos.z() - worldRegion.minZ());\n+    }\n+}", "originalCommit": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a26f1221db9323ffbc5c25393a4ccbb4f090907c", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/generation/facets/base/VerticallySparseBooleanFacet3D.java b/engine/src/main/java/org/terasology/world/generation/facets/base/VerticallySparseBooleanFacet3D.java\nindex f071bf2cd..2af8f5706 100644\n--- a/engine/src/main/java/org/terasology/world/generation/facets/base/VerticallySparseBooleanFacet3D.java\n+++ b/engine/src/main/java/org/terasology/world/generation/facets/base/VerticallySparseBooleanFacet3D.java\n\n@@ -104,4 +104,4 @@ protected final int getWorldIndex(Vector3ic pos) {\n         }\n         return pos.x() - worldRegion.minX() + worldRegion.sizeX() * (pos.z() - worldRegion.minZ());\n     }\n-}\n\\ No newline at end of file\n+}\n"}}, {"oid": "a26f1221db9323ffbc5c25393a4ccbb4f090907c", "url": "https://github.com/MovingBlocks/Terasology/commit/a26f1221db9323ffbc5c25393a4ccbb4f090907c", "message": "Fix license headers on new files.", "committedDate": "2020-11-10T18:19:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc3NTIwOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520775209", "bodyText": "You could {@link SurfacesFacet} here to create cross references (not that anybody is actually looking at the generated Javadoc, but anyways...)", "author": "skaldarnar", "createdAt": "2020-11-10T18:22:40Z", "path": "engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2014 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.generation.facets;\n+\n+import org.terasology.math.Region3i;\n+import org.terasology.world.generation.Border3D;\n+import org.terasology.world.generation.facets.base.BaseFieldFacet2D;\n+\n+/**\n+ * This facet represents the approximate height of the conceptual surface of the ground at each position.\n+ * It may exclude local features such as caves. It is intended to be used to determine the altitude relative\n+ * to the ground of features that are not placed directly on the surface, such as placing ores at a certain\n+ * depth below ground.\n+ *\n+ * The combination of the SurfacesFacet and the ElevationFacet is a more flexible alternative to the SurfaceHeightFacet.", "originalCommit": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "42394885355f284ac6a093e1168e0fc2f7f951d0", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java b/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\nindex 723d87cc4..d4b2eb0f5 100644\n--- a/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\n+++ b/engine/src/main/java/org/terasology/world/generation/facets/ElevationFacet.java\n\n@@ -1,18 +1,6 @@\n-/*\n- * Copyright 2014 MovingBlocks\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n package org.terasology.world.generation.facets;\n \n import org.terasology.math.Region3i;\n"}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMTc0Mw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520801743", "bodyText": "A part of me wants to go for a more \"functional\" solution, but then computing the distance each and every time in a custom comparator is also awkward...", "author": "skaldarnar", "createdAt": "2020-11-10T18:58:54Z", "path": "engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2014 MovingBlocks\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.terasology.world.generation.facets;\n+\n+import org.joml.Vector3ic;\n+import org.terasology.math.Region3i;\n+import org.terasology.world.generation.Border3D;\n+import org.terasology.world.generation.facets.base.VerticallySparseBooleanFacet3D;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This facet represents the heights of all of the surfaces of the ground. There may be multiple surfaces\n+ * in one column, for example, where there are overhangs, or floating islands. This facet is intended to\n+ * be used for placement of features on the surface itself, such as grass, trees and buildings.\n+ *\n+ * The combination of the SurfacesFacet and the ElevationFacet is a more flexible alternative to the SurfaceHeightFacet.\n+ */\n+public class SurfacesFacet extends VerticallySparseBooleanFacet3D {\n+\n+    public SurfacesFacet(Region3i targetRegion, Border3D border) {\n+        super(targetRegion, border);\n+    }\n+\n+    /**\n+     * Get the height of the surface closest to ground level.\n+     */\n+    public Optional<Float> getPrimarySurface(ElevationFacet elevationFacet, int x, int z) {\n+        float elevation = elevationFacet.getWorld(x, z);\n+        float bestDistance = Float.POSITIVE_INFINITY;\n+        Optional<Float> bestSurface = Optional.empty();\n+        for (int surface : getWorldColumn(x, z)) {\n+            float distance = Math.abs(surface - elevation);\n+            if (distance < bestDistance) {\n+                bestDistance = distance;\n+                bestSurface = Optional.of((float) surface);\n+            }\n+        }\n+        return bestSurface;", "originalCommit": "e7c12e6ac4fb27ccb9ca3d9d4d7e99dc37f99257", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMzEyOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520803129", "bodyText": "Would it in general help if the column of values would be sorted?", "author": "skaldarnar", "createdAt": "2020-11-10T19:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyODkzOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4237#discussion_r520928939", "bodyText": "There will generally be sufficiently few surfaces in any column that binary search would have little or no advantage over linear search anyway, so it would definitely not be worth the added complexity.", "author": "4Denthusiast", "createdAt": "2020-11-10T23:00:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "42394885355f284ac6a093e1168e0fc2f7f951d0", "chunk": "diff --git a/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java b/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\nindex b596ec0c0..4cb5ab742 100644\n--- a/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\n+++ b/engine/src/main/java/org/terasology/world/generation/facets/SurfacesFacet.java\n\n@@ -1,18 +1,6 @@\n-/*\n- * Copyright 2014 MovingBlocks\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n package org.terasology.world.generation.facets;\n \n import org.joml.Vector3ic;\n"}}, {"oid": "42394885355f284ac6a093e1168e0fc2f7f951d0", "url": "https://github.com/MovingBlocks/Terasology/commit/42394885355f284ac6a093e1168e0fc2f7f951d0", "message": "chore: cross reference SurfacesFacet and SurfaceHeightFacet", "committedDate": "2020-11-11T07:30:23Z", "type": "commit"}, {"oid": "8d2fffe3e14a6e04b0d7ca8e95542a892164ff32", "url": "https://github.com/MovingBlocks/Terasology/commit/8d2fffe3e14a6e04b0d7ca8e95542a892164ff32", "message": "chore: cross reference SurfacesFacet and ElevationFacet", "committedDate": "2020-11-11T07:31:09Z", "type": "commit"}, {"oid": "0fef4b3f184c36feec76daaf70492e0ad67e2cef", "url": "https://github.com/MovingBlocks/Terasology/commit/0fef4b3f184c36feec76daaf70492e0ad67e2cef", "message": "chore: add cross references to SurfacesFacet", "committedDate": "2020-11-11T07:32:08Z", "type": "commit"}, {"oid": "963ac357a35cd8eb05593ec14221efee4e500f0c", "url": "https://github.com/MovingBlocks/Terasology/commit/963ac357a35cd8eb05593ec14221efee4e500f0c", "message": "chore: add cross references to SurfaceHeightCompatibilityProvider", "committedDate": "2020-11-11T07:33:25Z", "type": "commit"}, {"oid": "bc8b1e1e5e3595046e9bfd814b450ffdf27d5444", "url": "https://github.com/MovingBlocks/Terasology/commit/bc8b1e1e5e3595046e9bfd814b450ffdf27d5444", "message": "chore: add cross references to ElevationCompatibilityProvider", "committedDate": "2020-11-11T07:34:20Z", "type": "commit"}, {"oid": "e664d0f63d70d20855741b8021991ec94d72efb3", "url": "https://github.com/MovingBlocks/Terasology/commit/e664d0f63d70d20855741b8021991ec94d72efb3", "message": "fix: typo", "committedDate": "2020-11-11T07:34:39Z", "type": "commit"}, {"oid": "48e2e43adb3e2a84732f9df2e4493e216a0db59b", "url": "https://github.com/MovingBlocks/Terasology/commit/48e2e43adb3e2a84732f9df2e4493e216a0db59b", "message": "chore: add missing cross reference", "committedDate": "2020-11-11T07:35:29Z", "type": "commit"}]}